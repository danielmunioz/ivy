Search.setIndex({"docnames": ["_version", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/applied_libraries", "contributing/building_the_docs", "contributing/helpful_resources", "contributing/open_tasks", "contributing/setting_up", "contributing/the_basics", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/experimental", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/experimental", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/array_api_tests", "deep_dive/arrays", "deep_dive/backend_setting", "deep_dive/containers", "deep_dive/continuous_integration", "deep_dive/data_types", "deep_dive/devices", "deep_dive/docstring_examples", "deep_dive/docstrings", "deep_dive/exception_handling", "deep_dive/formatting", "deep_dive/function_arguments", "deep_dive/function_types", "deep_dive/function_wrapping", "deep_dive/inplace_updates", "deep_dive/ivy_frontends", "deep_dive/ivy_frontends_tests", "deep_dive/ivy_tests", "deep_dive/navigating_the_code", "deep_dive/superset_behaviour", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_array_function", "func_wrapper/handle_array_like_without_promotion", "func_wrapper/handle_nans", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/handle_view", "func_wrapper/handle_view_indexing", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/output_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_ivy_arrays_and_back", "func_wrapper/to_native_arrays_and_back", "func_wrapper/try_array_function_override", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/deserialize", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/get", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/mish", "functional/ivy/activations/mish/mish_array", "functional/ivy/activations/mish/mish_container", "functional/ivy/activations/mish/mish_functional", "functional/ivy/activations/mish/static_mish_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/constants", "functional/ivy/control_flow_ops", "functional/ivy/control_flow_ops/IfElse", "functional/ivy/control_flow_ops/WhileLoop", "functional/ivy/control_flow_ops/if_else", "functional/ivy/control_flow_ops/while_loop", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_array", "functional/ivy/creation/linspace/linspace_container", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_array", "functional/ivy/creation/logspace/logspace_container", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultComplexDtype", "functional/ivy/data_type/DefaultDtype", "functional/ivy/data_type/DefaultFloatDtype", "functional/ivy/data_type/DefaultIntDtype", "functional/ivy/data_type/DefaultUintDtype", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_complex_dtype", "functional/ivy/data_type/default_complex_dtype/default_complex_dtype_functional", "functional/ivy/data_type/default_complex_dtype/static_default_complex_dtype_container", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_complex_dtype", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_container", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_functional", "functional/ivy/data_type/is_complex_dtype/static_is_complex_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_complex_dtype", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_complex_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/experimental", "functional/ivy/experimental/NativeSparseArray", "functional/ivy/experimental/SparseArray", "functional/ivy/experimental/activations", "functional/ivy/experimental/activations/logit", "functional/ivy/experimental/activations/prelu", "functional/ivy/experimental/activations/relu6", "functional/ivy/experimental/activations/thresholded_relu", "functional/ivy/experimental/adjoint", "functional/ivy/experimental/adjoint/adjoint_array", "functional/ivy/experimental/adjoint/adjoint_container", "functional/ivy/experimental/adjoint/adjoint_functional", "functional/ivy/experimental/adjoint/static_adjoint_container", "functional/ivy/experimental/allclose", "functional/ivy/experimental/allclose/allclose_array", "functional/ivy/experimental/allclose/allclose_container", "functional/ivy/experimental/allclose/allclose_functional", "functional/ivy/experimental/allclose/static_allclose_container", "functional/ivy/experimental/angle", "functional/ivy/experimental/angle/angle_array", "functional/ivy/experimental/angle/angle_container", "functional/ivy/experimental/angle/angle_functional", "functional/ivy/experimental/angle/static_angle_container", "functional/ivy/experimental/atleast_1d", "functional/ivy/experimental/atleast_1d/atleast_1d_array", "functional/ivy/experimental/atleast_1d/atleast_1d_container", "functional/ivy/experimental/atleast_1d/atleast_1d_functional", "functional/ivy/experimental/atleast_1d/static_atleast_1d_container", "functional/ivy/experimental/atleast_2d", "functional/ivy/experimental/atleast_2d/atleast_2d_array", "functional/ivy/experimental/atleast_2d/atleast_2d_container", "functional/ivy/experimental/atleast_2d/atleast_2d_functional", "functional/ivy/experimental/atleast_2d/static_atleast_2d_container", "functional/ivy/experimental/atleast_3d", "functional/ivy/experimental/atleast_3d/atleast_3d_array", "functional/ivy/experimental/atleast_3d/atleast_3d_container", "functional/ivy/experimental/atleast_3d/atleast_3d_functional", "functional/ivy/experimental/atleast_3d/static_atleast_3d_container", "functional/ivy/experimental/avg_pool1d", "functional/ivy/experimental/avg_pool1d/avg_pool1d_array", "functional/ivy/experimental/avg_pool1d/avg_pool1d_container", "functional/ivy/experimental/avg_pool1d/avg_pool1d_functional", "functional/ivy/experimental/avg_pool1d/static_avg_pool1d_container", "functional/ivy/experimental/avg_pool2d", "functional/ivy/experimental/avg_pool2d/avg_pool2d_array", "functional/ivy/experimental/avg_pool2d/avg_pool2d_container", "functional/ivy/experimental/avg_pool2d/avg_pool2d_functional", "functional/ivy/experimental/avg_pool2d/static_avg_pool2d_container", "functional/ivy/experimental/avg_pool3d", "functional/ivy/experimental/avg_pool3d/avg_pool3d_array", "functional/ivy/experimental/avg_pool3d/avg_pool3d_container", "functional/ivy/experimental/avg_pool3d/avg_pool3d_functional", "functional/ivy/experimental/avg_pool3d/static_avg_pool3d_container", "functional/ivy/experimental/bernoulli", "functional/ivy/experimental/bernoulli/bernoulli_array", "functional/ivy/experimental/bernoulli/bernoulli_container", "functional/ivy/experimental/bernoulli/bernoulli_functional", "functional/ivy/experimental/bernoulli/static_bernoulli_container", "functional/ivy/experimental/beta", "functional/ivy/experimental/beta/beta_array", "functional/ivy/experimental/beta/beta_container", "functional/ivy/experimental/beta/beta_functional", "functional/ivy/experimental/beta/static_beta_container", "functional/ivy/experimental/binarizer", "functional/ivy/experimental/binarizer/binarizer_array", "functional/ivy/experimental/binarizer/binarizer_container", "functional/ivy/experimental/binarizer/binarizer_functional", "functional/ivy/experimental/binarizer/static_binarizer_container", "functional/ivy/experimental/binary_cross_entropy_with_logits", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_container", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_functional", "functional/ivy/experimental/binary_cross_entropy_with_logits/static_binary_cross_entropy_with_logits_container", "functional/ivy/experimental/bincount", "functional/ivy/experimental/bincount/bincount_array", "functional/ivy/experimental/bincount/bincount_container", "functional/ivy/experimental/bincount/bincount_functional", "functional/ivy/experimental/bincount/static_bincount_container", "functional/ivy/experimental/bind_custom_gradient_function", "functional/ivy/experimental/broadcast_shapes", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_container", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_functional", "functional/ivy/experimental/broadcast_shapes/static_broadcast_shapes_container", "functional/ivy/experimental/compute_weight_mat", "functional/ivy/experimental/conj", "functional/ivy/experimental/conj/conj_array", "functional/ivy/experimental/conj/conj_container", "functional/ivy/experimental/conj/conj_functional", "functional/ivy/experimental/conj/static_conj_container", "functional/ivy/experimental/constants", "functional/ivy/experimental/copysign", "functional/ivy/experimental/copysign/copysign_array", "functional/ivy/experimental/copysign/copysign_container", "functional/ivy/experimental/copysign/copysign_functional", "functional/ivy/experimental/copysign/static_copysign_container", "functional/ivy/experimental/corrcoef", "functional/ivy/experimental/corrcoef/corrcoef_array", "functional/ivy/experimental/corrcoef/corrcoef_container", "functional/ivy/experimental/corrcoef/corrcoef_functional", "functional/ivy/experimental/corrcoef/static_corrcoef_container", "functional/ivy/experimental/count_nonzero", "functional/ivy/experimental/count_nonzero/count_nonzero_array", "functional/ivy/experimental/count_nonzero/count_nonzero_container", "functional/ivy/experimental/count_nonzero/count_nonzero_functional", "functional/ivy/experimental/count_nonzero/static_count_nonzero_container", "functional/ivy/experimental/creation", "functional/ivy/experimental/creation/eye_like", "functional/ivy/experimental/creation/hamming_window", "functional/ivy/experimental/creation/hann_window", "functional/ivy/experimental/creation/kaiser_bessel_derived_window", "functional/ivy/experimental/creation/kaiser_window", "functional/ivy/experimental/creation/tril_indices", "functional/ivy/experimental/creation/triu_indices", "functional/ivy/experimental/creation/vorbis_window", "functional/ivy/experimental/data_type", "functional/ivy/experimental/data_type/is_native_dtype", "functional/ivy/experimental/dct", "functional/ivy/experimental/dct/dct_array", "functional/ivy/experimental/dct/dct_container", "functional/ivy/experimental/dct/dct_functional", "functional/ivy/experimental/dct/static_dct_container", "functional/ivy/experimental/device", "functional/ivy/experimental/dft", "functional/ivy/experimental/dft/dft_container", "functional/ivy/experimental/dft/dft_functional", "functional/ivy/experimental/dft/static_dft_container", "functional/ivy/experimental/diagflat", "functional/ivy/experimental/diagflat/diagflat_array", "functional/ivy/experimental/diagflat/diagflat_container", "functional/ivy/experimental/diagflat/diagflat_functional", "functional/ivy/experimental/diagflat/static_diagflat_container", "functional/ivy/experimental/diff", "functional/ivy/experimental/diff/diff_array", "functional/ivy/experimental/diff/diff_container", "functional/ivy/experimental/diff/diff_functional", "functional/ivy/experimental/diff/static_diff_container", "functional/ivy/experimental/dirichlet", "functional/ivy/experimental/dirichlet/dirichlet_array", "functional/ivy/experimental/dirichlet/dirichlet_container", "functional/ivy/experimental/dirichlet/dirichlet_functional", "functional/ivy/experimental/dirichlet/static_dirichlet_container", "functional/ivy/experimental/dropout1d", "functional/ivy/experimental/dropout3d", "functional/ivy/experimental/dsplit", "functional/ivy/experimental/dsplit/dsplit_array", "functional/ivy/experimental/dsplit/dsplit_container", "functional/ivy/experimental/dsplit/dsplit_functional", "functional/ivy/experimental/dsplit/static_dsplit_container", "functional/ivy/experimental/dstack", "functional/ivy/experimental/dstack/dstack_array", "functional/ivy/experimental/dstack/dstack_container", "functional/ivy/experimental/dstack/dstack_functional", "functional/ivy/experimental/dstack/static_dstack_container", "functional/ivy/experimental/eig", "functional/ivy/experimental/eig/eig_array", "functional/ivy/experimental/eig/eig_container", "functional/ivy/experimental/eig/eig_functional", "functional/ivy/experimental/eig/static_eig_container", "functional/ivy/experimental/eigh_tridiagonal", "functional/ivy/experimental/eigh_tridiagonal/eigh_tridiagonal_array", "functional/ivy/experimental/eigh_tridiagonal/eigh_tridiagonal_container", "functional/ivy/experimental/eigh_tridiagonal/eigh_tridiagonal_functional", "functional/ivy/experimental/eigh_tridiagonal/static_eigh_tridiagonal_container", "functional/ivy/experimental/eigvals", "functional/ivy/experimental/eigvals/eigvals_array", "functional/ivy/experimental/eigvals/eigvals_container", "functional/ivy/experimental/eigvals/eigvals_functional", "functional/ivy/experimental/eigvals/static_eigvals_container", "functional/ivy/experimental/elementwise", "functional/ivy/experimental/elementwise/allclose", "functional/ivy/experimental/elementwise/angle", "functional/ivy/experimental/elementwise/binarizer", "functional/ivy/experimental/elementwise/conj", "functional/ivy/experimental/elementwise/copysign", "functional/ivy/experimental/elementwise/count_nonzero", "functional/ivy/experimental/elementwise/diff", "functional/ivy/experimental/elementwise/exp2", "functional/ivy/experimental/elementwise/fix", "functional/ivy/experimental/elementwise/float_power", "functional/ivy/experimental/elementwise/fmax", "functional/ivy/experimental/elementwise/fmin", "functional/ivy/experimental/elementwise/fmod", "functional/ivy/experimental/elementwise/gcd", "functional/ivy/experimental/elementwise/gradient", "functional/ivy/experimental/elementwise/hypot", "functional/ivy/experimental/elementwise/imag", "functional/ivy/experimental/elementwise/isclose", "functional/ivy/experimental/elementwise/lcm", "functional/ivy/experimental/elementwise/ldexp", "functional/ivy/experimental/elementwise/logaddexp2", "functional/ivy/experimental/elementwise/nan_to_num", "functional/ivy/experimental/elementwise/nansum", "functional/ivy/experimental/elementwise/nextafter", "functional/ivy/experimental/elementwise/real", "functional/ivy/experimental/elementwise/signbit", "functional/ivy/experimental/elementwise/sinc", "functional/ivy/experimental/elementwise/trapz", "functional/ivy/experimental/elementwise/xlogy", "functional/ivy/experimental/elementwise/zeta", "functional/ivy/experimental/embedding", "functional/ivy/experimental/embedding/embedding_array", "functional/ivy/experimental/embedding/embedding_container", "functional/ivy/experimental/embedding/embedding_functional", "functional/ivy/experimental/embedding/static_embedding_container", "functional/ivy/experimental/exp2", "functional/ivy/experimental/exp2/exp2_array", "functional/ivy/experimental/exp2/exp2_container", "functional/ivy/experimental/exp2/exp2_functional", "functional/ivy/experimental/exp2/static_exp2_container", "functional/ivy/experimental/expand", "functional/ivy/experimental/expand/expand_array", "functional/ivy/experimental/expand/expand_container", "functional/ivy/experimental/expand/expand_functional", "functional/ivy/experimental/expand/static_expand_container", "functional/ivy/experimental/eye_like", "functional/ivy/experimental/eye_like/eye_like_array", "functional/ivy/experimental/eye_like/eye_like_container", "functional/ivy/experimental/eye_like/eye_like_functional", "functional/ivy/experimental/eye_like/static_eye_like_container", "functional/ivy/experimental/fft", "functional/ivy/experimental/fft/fft_array", "functional/ivy/experimental/fft/fft_container", "functional/ivy/experimental/fft/fft_functional", "functional/ivy/experimental/fft/static_fft_container", "functional/ivy/experimental/fix", "functional/ivy/experimental/fix/fix_array", "functional/ivy/experimental/fix/fix_container", "functional/ivy/experimental/fix/fix_functional", "functional/ivy/experimental/fix/static_fix_container", "functional/ivy/experimental/flatten", "functional/ivy/experimental/flatten/flatten_array", "functional/ivy/experimental/flatten/flatten_container", "functional/ivy/experimental/flatten/flatten_functional", "functional/ivy/experimental/flatten/static_flatten_container", "functional/ivy/experimental/fliplr", "functional/ivy/experimental/fliplr/fliplr_array", "functional/ivy/experimental/fliplr/fliplr_container", "functional/ivy/experimental/fliplr/fliplr_functional", "functional/ivy/experimental/fliplr/static_fliplr_container", "functional/ivy/experimental/flipud", "functional/ivy/experimental/flipud/flipud_array", "functional/ivy/experimental/flipud/flipud_container", "functional/ivy/experimental/flipud/flipud_functional", "functional/ivy/experimental/flipud/static_flipud_container", "functional/ivy/experimental/float_power", "functional/ivy/experimental/float_power/float_power_array", "functional/ivy/experimental/float_power/float_power_container", "functional/ivy/experimental/float_power/float_power_functional", "functional/ivy/experimental/float_power/static_float_power_container", "functional/ivy/experimental/fmax", "functional/ivy/experimental/fmax/fmax_array", "functional/ivy/experimental/fmax/fmax_container", "functional/ivy/experimental/fmax/fmax_functional", "functional/ivy/experimental/fmax/static_fmax_container", "functional/ivy/experimental/fmin", "functional/ivy/experimental/fmin/fmin_array", "functional/ivy/experimental/fmin/fmin_container", "functional/ivy/experimental/fmin/fmin_functional", "functional/ivy/experimental/fmin/static_fmin_container", "functional/ivy/experimental/fmod", "functional/ivy/experimental/fmod/fmod_array", "functional/ivy/experimental/fmod/fmod_container", "functional/ivy/experimental/fmod/fmod_functional", "functional/ivy/experimental/fmod/static_fmod_container", "functional/ivy/experimental/gamma", "functional/ivy/experimental/gamma/gamma_array", "functional/ivy/experimental/gamma/gamma_functional", "functional/ivy/experimental/gcd", "functional/ivy/experimental/gcd/gcd_array", "functional/ivy/experimental/gcd/gcd_container", "functional/ivy/experimental/gcd/gcd_functional", "functional/ivy/experimental/gcd/static_gcd_container", "functional/ivy/experimental/general", "functional/ivy/experimental/general/isin", "functional/ivy/experimental/gradient", "functional/ivy/experimental/gradient/gradient_array", "functional/ivy/experimental/gradient/gradient_container", "functional/ivy/experimental/gradient/gradient_functional", "functional/ivy/experimental/gradient/static_gradient_container", "functional/ivy/experimental/gradients", "functional/ivy/experimental/gradients/bind_custom_gradient_function", "functional/ivy/experimental/hamming_window", "functional/ivy/experimental/hamming_window/hamming_window_container", "functional/ivy/experimental/hamming_window/hamming_window_functional", "functional/ivy/experimental/hamming_window/static_hamming_window_container", "functional/ivy/experimental/hann_window", "functional/ivy/experimental/hann_window/hann_window_container", "functional/ivy/experimental/hann_window/hann_window_functional", "functional/ivy/experimental/hann_window/static_hann_window_container", "functional/ivy/experimental/heaviside", "functional/ivy/experimental/heaviside/heaviside_array", "functional/ivy/experimental/heaviside/heaviside_container", "functional/ivy/experimental/heaviside/heaviside_functional", "functional/ivy/experimental/heaviside/static_heaviside_container", "functional/ivy/experimental/hsplit", "functional/ivy/experimental/hsplit/hsplit_array", "functional/ivy/experimental/hsplit/hsplit_container", "functional/ivy/experimental/hsplit/hsplit_functional", "functional/ivy/experimental/hsplit/static_hsplit_container", "functional/ivy/experimental/hstack", "functional/ivy/experimental/hstack/hstack_array", "functional/ivy/experimental/hstack/hstack_container", "functional/ivy/experimental/hstack/hstack_functional", "functional/ivy/experimental/hstack/static_hstack_container", "functional/ivy/experimental/hypot", "functional/ivy/experimental/hypot/hypot_array", "functional/ivy/experimental/hypot/hypot_container", "functional/ivy/experimental/hypot/hypot_functional", "functional/ivy/experimental/hypot/static_hypot_container", "functional/ivy/experimental/i0", "functional/ivy/experimental/i0/i0_array", "functional/ivy/experimental/i0/i0_container", "functional/ivy/experimental/i0/i0_functional", "functional/ivy/experimental/i0/static_i0_container", "functional/ivy/experimental/ifft", "functional/ivy/experimental/ifft/ifft_array", "functional/ivy/experimental/ifft/ifft_container", "functional/ivy/experimental/ifft/ifft_functional", "functional/ivy/experimental/ifft/static_ifft_container", "functional/ivy/experimental/imag", "functional/ivy/experimental/imag/imag_array", "functional/ivy/experimental/imag/imag_container", "functional/ivy/experimental/imag/imag_functional", "functional/ivy/experimental/imag/static_imag_container", "functional/ivy/experimental/instance_norm", "functional/ivy/experimental/instance_norm/instance_norm_array", "functional/ivy/experimental/instance_norm/instance_norm_container", "functional/ivy/experimental/instance_norm/instance_norm_functional", "functional/ivy/experimental/instance_norm/static_instance_norm_container", "functional/ivy/experimental/interp", "functional/ivy/experimental/interpolate", "functional/ivy/experimental/interpolate/interpolate_array", "functional/ivy/experimental/interpolate/interpolate_container", "functional/ivy/experimental/interpolate/interpolate_functional", "functional/ivy/experimental/interpolate/static_interpolate_container", "functional/ivy/experimental/is_ivy_sparse_array", "functional/ivy/experimental/is_native_dtype", "functional/ivy/experimental/is_native_sparse_array", "functional/ivy/experimental/isclose", "functional/ivy/experimental/isclose/isclose_array", "functional/ivy/experimental/isclose/isclose_container", "functional/ivy/experimental/isclose/isclose_functional", "functional/ivy/experimental/isclose/static_isclose_container", "functional/ivy/experimental/isin", "functional/ivy/experimental/isin/isin_array", "functional/ivy/experimental/isin/isin_container", "functional/ivy/experimental/isin/isin_functional", "functional/ivy/experimental/isin/static_isin_container", "functional/ivy/experimental/kaiser_bessel_derived_window", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_container", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_functional", "functional/ivy/experimental/kaiser_bessel_derived_window/static_kaiser_bessel_derived_window_container", "functional/ivy/experimental/kaiser_window", "functional/ivy/experimental/kaiser_window/kaiser_window_container", "functional/ivy/experimental/kaiser_window/kaiser_window_functional", "functional/ivy/experimental/kaiser_window/static_kaiser_window_container", "functional/ivy/experimental/kron", "functional/ivy/experimental/kron/kron_array", "functional/ivy/experimental/kron/kron_container", "functional/ivy/experimental/kron/kron_functional", "functional/ivy/experimental/kron/static_kron_container", "functional/ivy/experimental/l2_normalize", "functional/ivy/experimental/l2_normalize/l2_normalize_array", "functional/ivy/experimental/l2_normalize/l2_normalize_container", "functional/ivy/experimental/l2_normalize/l2_normalize_functional", "functional/ivy/experimental/l2_normalize/static_l2_normalize_container", "functional/ivy/experimental/layers", "functional/ivy/experimental/layers/avg_pool1d", "functional/ivy/experimental/layers/avg_pool2d", "functional/ivy/experimental/layers/avg_pool3d", "functional/ivy/experimental/layers/compute_weight_mat", "functional/ivy/experimental/layers/dct", "functional/ivy/experimental/layers/dft", "functional/ivy/experimental/layers/dropout1d", "functional/ivy/experimental/layers/dropout3d", "functional/ivy/experimental/layers/embedding", "functional/ivy/experimental/layers/fft", "functional/ivy/experimental/layers/ifft", "functional/ivy/experimental/layers/interp", "functional/ivy/experimental/layers/interpolate", "functional/ivy/experimental/layers/max_pool1d", "functional/ivy/experimental/layers/max_pool2d", "functional/ivy/experimental/layers/max_pool3d", "functional/ivy/experimental/layers/padding_ceil_mode", "functional/ivy/experimental/lcm", "functional/ivy/experimental/lcm/lcm_array", "functional/ivy/experimental/lcm/lcm_container", "functional/ivy/experimental/lcm/lcm_functional", "functional/ivy/experimental/lcm/static_lcm_container", "functional/ivy/experimental/ldexp", "functional/ivy/experimental/ldexp/ldexp_array", "functional/ivy/experimental/ldexp/ldexp_container", "functional/ivy/experimental/ldexp/ldexp_functional", "functional/ivy/experimental/ldexp/static_ldexp_container", "functional/ivy/experimental/lexsort", "functional/ivy/experimental/lexsort/lexsort_array", "functional/ivy/experimental/lexsort/lexsort_container", "functional/ivy/experimental/lexsort/lexsort_functional", "functional/ivy/experimental/lexsort/static_lexsort_container", "functional/ivy/experimental/linear_algebra", "functional/ivy/experimental/linear_algebra/adjoint", "functional/ivy/experimental/linear_algebra/diagflat", "functional/ivy/experimental/linear_algebra/eig", "functional/ivy/experimental/linear_algebra/eigh_tridiagonal", "functional/ivy/experimental/linear_algebra/eigvals", "functional/ivy/experimental/linear_algebra/kron", "functional/ivy/experimental/linear_algebra/matrix_exp", "functional/ivy/experimental/linear_algebra/multi_dot", "functional/ivy/experimental/logaddexp2", "functional/ivy/experimental/logaddexp2/logaddexp2_array", "functional/ivy/experimental/logaddexp2/logaddexp2_container", "functional/ivy/experimental/logaddexp2/logaddexp2_functional", "functional/ivy/experimental/logaddexp2/static_logaddexp2_container", "functional/ivy/experimental/logit", "functional/ivy/experimental/logit/logit_array", "functional/ivy/experimental/logit/logit_container", "functional/ivy/experimental/logit/logit_functional", "functional/ivy/experimental/logit/static_logit_container", "functional/ivy/experimental/losses", "functional/ivy/experimental/losses/binary_cross_entropy_with_logits", "functional/ivy/experimental/lp_normalize", "functional/ivy/experimental/lp_normalize/lp_normalize_array", "functional/ivy/experimental/lp_normalize/lp_normalize_container", "functional/ivy/experimental/lp_normalize/lp_normalize_functional", "functional/ivy/experimental/lp_normalize/static_lp_normalize_container", "functional/ivy/experimental/manipulation", "functional/ivy/experimental/manipulation/atleast_1d", "functional/ivy/experimental/manipulation/atleast_2d", "functional/ivy/experimental/manipulation/atleast_3d", "functional/ivy/experimental/manipulation/broadcast_shapes", "functional/ivy/experimental/manipulation/dsplit", "functional/ivy/experimental/manipulation/dstack", "functional/ivy/experimental/manipulation/expand", "functional/ivy/experimental/manipulation/flatten", "functional/ivy/experimental/manipulation/fliplr", "functional/ivy/experimental/manipulation/flipud", "functional/ivy/experimental/manipulation/heaviside", "functional/ivy/experimental/manipulation/hsplit", "functional/ivy/experimental/manipulation/hstack", "functional/ivy/experimental/manipulation/i0", "functional/ivy/experimental/manipulation/moveaxis", "functional/ivy/experimental/manipulation/ndenumerate", "functional/ivy/experimental/manipulation/ndindex", "functional/ivy/experimental/manipulation/pad", "functional/ivy/experimental/manipulation/rot90", "functional/ivy/experimental/manipulation/take_along_axis", "functional/ivy/experimental/manipulation/top_k", "functional/ivy/experimental/manipulation/vsplit", "functional/ivy/experimental/manipulation/vstack", "functional/ivy/experimental/matrix_exp", "functional/ivy/experimental/matrix_exp/matrix_exp_array", "functional/ivy/experimental/matrix_exp/matrix_exp_container", "functional/ivy/experimental/matrix_exp/matrix_exp_functional", "functional/ivy/experimental/matrix_exp/static_matrix_exp_container", "functional/ivy/experimental/max_pool1d", "functional/ivy/experimental/max_pool1d/max_pool1d_array", "functional/ivy/experimental/max_pool1d/max_pool1d_container", "functional/ivy/experimental/max_pool1d/max_pool1d_functional", "functional/ivy/experimental/max_pool1d/static_max_pool1d_container", "functional/ivy/experimental/max_pool2d", "functional/ivy/experimental/max_pool2d/max_pool2d_array", "functional/ivy/experimental/max_pool2d/max_pool2d_container", "functional/ivy/experimental/max_pool2d/max_pool2d_functional", "functional/ivy/experimental/max_pool2d/static_max_pool2d_container", "functional/ivy/experimental/max_pool3d", "functional/ivy/experimental/max_pool3d/max_pool3d_array", "functional/ivy/experimental/max_pool3d/max_pool3d_container", "functional/ivy/experimental/max_pool3d/max_pool3d_functional", "functional/ivy/experimental/max_pool3d/static_max_pool3d_container", "functional/ivy/experimental/median", "functional/ivy/experimental/median/median_array", "functional/ivy/experimental/median/median_container", "functional/ivy/experimental/median/median_functional", "functional/ivy/experimental/median/static_median_container", "functional/ivy/experimental/meta", "functional/ivy/experimental/moveaxis", "functional/ivy/experimental/moveaxis/moveaxis_array", "functional/ivy/experimental/moveaxis/moveaxis_container", "functional/ivy/experimental/moveaxis/moveaxis_functional", "functional/ivy/experimental/moveaxis/static_moveaxis_container", "functional/ivy/experimental/msort", "functional/ivy/experimental/msort/msort_array", "functional/ivy/experimental/msort/msort_container", "functional/ivy/experimental/msort/msort_functional", "functional/ivy/experimental/msort/static_msort_container", "functional/ivy/experimental/multi_dot", "functional/ivy/experimental/nan_to_num", "functional/ivy/experimental/nan_to_num/nan_to_num_array", "functional/ivy/experimental/nan_to_num/nan_to_num_container", "functional/ivy/experimental/nan_to_num/nan_to_num_functional", "functional/ivy/experimental/nan_to_num/static_nan_to_num_container", "functional/ivy/experimental/nanmean", "functional/ivy/experimental/nanmean/nanmean_array", "functional/ivy/experimental/nanmean/nanmean_container", "functional/ivy/experimental/nanmean/nanmean_functional", "functional/ivy/experimental/nanmean/static_nanmean_container", "functional/ivy/experimental/nanmedian", "functional/ivy/experimental/nanmedian/nanmedian_array", "functional/ivy/experimental/nanmedian/nanmedian_container", "functional/ivy/experimental/nanmedian/nanmedian_functional", "functional/ivy/experimental/nanmedian/static_nanmedian_container", "functional/ivy/experimental/nansum", "functional/ivy/experimental/nansum/nansum_array", "functional/ivy/experimental/nansum/nansum_container", "functional/ivy/experimental/nansum/nansum_functional", "functional/ivy/experimental/nansum/static_nansum_container", "functional/ivy/experimental/native_sparse_array", "functional/ivy/experimental/native_sparse_array_to_indices_values_and_shape", "functional/ivy/experimental/ndenumerate", "functional/ivy/experimental/ndindex", "functional/ivy/experimental/nest", "functional/ivy/experimental/nextafter", "functional/ivy/experimental/nextafter/nextafter_array", "functional/ivy/experimental/nextafter/nextafter_container", "functional/ivy/experimental/nextafter/nextafter_functional", "functional/ivy/experimental/nextafter/static_nextafter_container", "functional/ivy/experimental/norms", "functional/ivy/experimental/norms/instance_norm", "functional/ivy/experimental/norms/l2_normalize", "functional/ivy/experimental/norms/lp_normalize", "functional/ivy/experimental/pad", "functional/ivy/experimental/pad/pad_array", "functional/ivy/experimental/pad/pad_container", "functional/ivy/experimental/pad/pad_functional", "functional/ivy/experimental/pad/static_pad_container", "functional/ivy/experimental/padding_ceil_mode", "functional/ivy/experimental/poisson", "functional/ivy/experimental/poisson/poisson_array", "functional/ivy/experimental/poisson/poisson_container", "functional/ivy/experimental/poisson/poisson_functional", "functional/ivy/experimental/poisson/static_poisson_container", "functional/ivy/experimental/prelu", "functional/ivy/experimental/prelu/prelu_array", "functional/ivy/experimental/prelu/prelu_container", "functional/ivy/experimental/prelu/prelu_functional", "functional/ivy/experimental/prelu/static_prelu_container", "functional/ivy/experimental/quantile", "functional/ivy/experimental/quantile/quantile_array", "functional/ivy/experimental/quantile/quantile_container", "functional/ivy/experimental/quantile/quantile_functional", "functional/ivy/experimental/quantile/static_quantile_container", "functional/ivy/experimental/random", "functional/ivy/experimental/random/bernoulli", "functional/ivy/experimental/random/beta", "functional/ivy/experimental/random/dirichlet", "functional/ivy/experimental/random/gamma", "functional/ivy/experimental/random/poisson", "functional/ivy/experimental/real", "functional/ivy/experimental/real/real_array", "functional/ivy/experimental/real/real_container", "functional/ivy/experimental/real/real_functional", "functional/ivy/experimental/real/static_real_container", "functional/ivy/experimental/relu6", "functional/ivy/experimental/relu6/relu6_array", "functional/ivy/experimental/relu6/relu6_container", "functional/ivy/experimental/relu6/relu6_functional", "functional/ivy/experimental/relu6/static_relu6_container", "functional/ivy/experimental/rot90", "functional/ivy/experimental/rot90/rot90_array", "functional/ivy/experimental/rot90/rot90_container", "functional/ivy/experimental/rot90/rot90_functional", "functional/ivy/experimental/rot90/static_rot90_container", "functional/ivy/experimental/searching", "functional/ivy/experimental/set", "functional/ivy/experimental/signbit", "functional/ivy/experimental/signbit/signbit_array", "functional/ivy/experimental/signbit/signbit_container", "functional/ivy/experimental/signbit/signbit_functional", "functional/ivy/experimental/signbit/static_signbit_container", "functional/ivy/experimental/sinc", "functional/ivy/experimental/sinc/sinc_array", "functional/ivy/experimental/sinc/sinc_container", "functional/ivy/experimental/sinc/sinc_functional", "functional/ivy/experimental/sinc/static_sinc_container", "functional/ivy/experimental/sorting", "functional/ivy/experimental/sorting/lexsort", "functional/ivy/experimental/sorting/msort", "functional/ivy/experimental/sparse_array", "functional/ivy/experimental/sparse_array/NativeSparseArray", "functional/ivy/experimental/sparse_array/SparseArray", "functional/ivy/experimental/sparse_array/is_ivy_sparse_array", "functional/ivy/experimental/sparse_array/is_native_sparse_array", "functional/ivy/experimental/sparse_array/native_sparse_array", "functional/ivy/experimental/sparse_array/native_sparse_array_to_indices_values_and_shape", "functional/ivy/experimental/statistical", "functional/ivy/experimental/statistical/bincount", "functional/ivy/experimental/statistical/corrcoef", "functional/ivy/experimental/statistical/median", "functional/ivy/experimental/statistical/nanmean", "functional/ivy/experimental/statistical/nanmedian", "functional/ivy/experimental/statistical/quantile", "functional/ivy/experimental/statistical/unravel_index", "functional/ivy/experimental/take_along_axis", "functional/ivy/experimental/take_along_axis/static_take_along_axis_container", "functional/ivy/experimental/take_along_axis/take_along_axis_array", "functional/ivy/experimental/take_along_axis/take_along_axis_container", "functional/ivy/experimental/take_along_axis/take_along_axis_functional", "functional/ivy/experimental/thresholded_relu", "functional/ivy/experimental/thresholded_relu/static_thresholded_relu_container", "functional/ivy/experimental/thresholded_relu/thresholded_relu_array", "functional/ivy/experimental/thresholded_relu/thresholded_relu_container", "functional/ivy/experimental/thresholded_relu/thresholded_relu_functional", "functional/ivy/experimental/top_k", "functional/ivy/experimental/top_k/static_top_k_container", "functional/ivy/experimental/top_k/top_k_array", "functional/ivy/experimental/top_k/top_k_container", "functional/ivy/experimental/top_k/top_k_functional", "functional/ivy/experimental/trapz", "functional/ivy/experimental/trapz/trapz_array", "functional/ivy/experimental/trapz/trapz_functional", "functional/ivy/experimental/tril_indices", "functional/ivy/experimental/tril_indices/static_tril_indices_container", "functional/ivy/experimental/tril_indices/tril_indices_container", "functional/ivy/experimental/tril_indices/tril_indices_functional", "functional/ivy/experimental/triu_indices", "functional/ivy/experimental/triu_indices/static_triu_indices_container", "functional/ivy/experimental/triu_indices/triu_indices_container", "functional/ivy/experimental/triu_indices/triu_indices_functional", "functional/ivy/experimental/unravel_index", "functional/ivy/experimental/unravel_index/static_unravel_index_container", "functional/ivy/experimental/unravel_index/unravel_index_array", "functional/ivy/experimental/unravel_index/unravel_index_container", "functional/ivy/experimental/unravel_index/unravel_index_functional", "functional/ivy/experimental/utility", "functional/ivy/experimental/vorbis_window", "functional/ivy/experimental/vorbis_window/static_vorbis_window_container", "functional/ivy/experimental/vorbis_window/vorbis_window_container", "functional/ivy/experimental/vorbis_window/vorbis_window_functional", "functional/ivy/experimental/vsplit", "functional/ivy/experimental/vsplit/static_vsplit_container", "functional/ivy/experimental/vsplit/vsplit_array", "functional/ivy/experimental/vsplit/vsplit_container", "functional/ivy/experimental/vsplit/vsplit_functional", "functional/ivy/experimental/vstack", "functional/ivy/experimental/vstack/static_vstack_container", "functional/ivy/experimental/vstack/vstack_array", "functional/ivy/experimental/vstack/vstack_container", "functional/ivy/experimental/vstack/vstack_functional", "functional/ivy/experimental/xlogy", "functional/ivy/experimental/xlogy/static_xlogy_container", "functional/ivy/experimental/xlogy/xlogy_array", "functional/ivy/experimental/xlogy/xlogy_container", "functional/ivy/experimental/xlogy/xlogy_functional", "functional/ivy/experimental/zeta", "functional/ivy/experimental/zeta/static_zeta_container", "functional/ivy/experimental/zeta/zeta_array", "functional/ivy/experimental/zeta/zeta_container", "functional/ivy/experimental/zeta/zeta_functional", "functional/ivy/extensions", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_container", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/array_equal/static_array_equal_container", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_show_func_wrapper_trace_mode", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_show_func_wrapper_trace_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unset_show_func_wrapper_trace_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_array", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diag", "functional/ivy/linear_algebra/diag/diag_array", "functional/ivy/linear_algebra/diag/diag_container", "functional/ivy/linear_algebra/diag/diag_functional", "functional/ivy/linear_algebra/diag/static_diag_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eig", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigh/static_eigh_container", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_container", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/eigvalsh/static_eigvalsh_container", "functional/ivy/linear_algebra/inner", "functional/ivy/linear_algebra/inner/inner_array", "functional/ivy/linear_algebra/inner/inner_container", "functional/ivy/linear_algebra/inner/inner_functional", "functional/ivy/linear_algebra/inner/static_inner_container", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/lu_factor", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matmul/static_matmul_container", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_array", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_container", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/pinv/static_pinv_container", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_array", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/tensorsolve", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_array", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_container", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vander", "functional/ivy/linear_algebra/vander/static_vander_container", "functional/ivy/linear_algebra/vander/vander_array", "functional/ivy/linear_algebra/vander/vander_container", "functional/ivy/linear_algebra/vander/vander_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/duplicate_array_index_chains", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_empty", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/prod/static_prod_container", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "nested_array/nested_array", "nested_array/nested_array/NestedArray", "related_work", "related_work/api_standards", "related_work/compiler_infrastructure", "related_work/exchange_formats", "related_work/frameworks", "related_work/graph_tracers", "related_work/ml_unifying_companies", "related_work/multi_vendor_compiler_frameworks", "related_work/vendor_specific_apis", "related_work/vendor_specific_compilers", "related_work/what_does_ivy_add", "related_work/wrapper_frameworks", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/ModuleConverters", "stateful/converters/to_ivy_module", "stateful/helpers", "stateful/helpers/ModuleHelpers", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "testing/assertions", "testing/assertions/assert_all_close", "testing/assertions/assert_same_type_and_shape", "testing/assertions/check_unsupported_device", "testing/assertions/check_unsupported_device_and_dtype", "testing/assertions/check_unsupported_dtype", "testing/assertions/test_unsupported_function", "testing/assertions/value_test", "testing/available_frameworks", "testing/available_frameworks/available_frameworks", "testing/available_frameworks/ground_truth", "testing/function_testing", "testing/function_testing/args_to_container", "testing/function_testing/as_cont", "testing/function_testing/as_lists", "testing/function_testing/convtrue", "testing/function_testing/create_args_kwargs", "testing/function_testing/create_frontend_args_kwargs", "testing/function_testing/empty_func", "testing/function_testing/flatten", "testing/function_testing/flatten_and_to_np", "testing/function_testing/flatten_fw_and_to_np", "testing/function_testing/framework_comparator", "testing/function_testing/get_frontend_ret", "testing/function_testing/get_ret_and_flattened_np_array", "testing/function_testing/gradient_incompatible_function", "testing/function_testing/gradient_test", "testing/function_testing/gradient_unsupported_dtypes", "testing/function_testing/kwargs_to_args_n_kwargs", "testing/function_testing/make_json_pickable", "testing/function_testing/test_frontend_function", "testing/function_testing/test_frontend_method", "testing/function_testing/test_function", "testing/function_testing/test_method", "testing/function_testing/var_fn", "testing/globals", "testing/globals/InterruptedTest", "testing/globals/TestData", "testing/globals/remove_all_current_framework", "testing/globals/setup_api_test", "testing/globals/setup_frontend_test", "testing/globals/teardown_api_test", "testing/globals/teardown_frontend_test", "testing/hypothesis_helpers", "testing/hypothesis_helpers/array_helpers", "testing/hypothesis_helpers/array_helpers/array_and_broadcastable_shape", "testing/hypothesis_helpers/array_helpers/array_bools", "testing/hypothesis_helpers/array_helpers/array_indices_axis", "testing/hypothesis_helpers/array_helpers/array_values", "testing/hypothesis_helpers/array_helpers/arrays_and_axes", "testing/hypothesis_helpers/array_helpers/arrays_for_pooling", "testing/hypothesis_helpers/array_helpers/broadcast_shapes", "testing/hypothesis_helpers/array_helpers/dtype_and_values", "testing/hypothesis_helpers/array_helpers/dtype_values_axis", "testing/hypothesis_helpers/array_helpers/list_of_size", "testing/hypothesis_helpers/array_helpers/lists", "testing/hypothesis_helpers/array_helpers/mutually_broadcastable_shapes", "testing/hypothesis_helpers/array_helpers/prod", "testing/hypothesis_helpers/dtype_helpers", "testing/hypothesis_helpers/dtype_helpers/array_dtypes", "testing/hypothesis_helpers/dtype_helpers/get_castable_dtype", "testing/hypothesis_helpers/dtype_helpers/get_dtypes", "testing/hypothesis_helpers/dtype_helpers/make_json_pickable", "testing/hypothesis_helpers/general_helpers", "testing/hypothesis_helpers/general_helpers/apply_safety_factor", "testing/hypothesis_helpers/general_helpers/embedding_helper", "testing/hypothesis_helpers/general_helpers/get_axis", "testing/hypothesis_helpers/general_helpers/get_bounds", "testing/hypothesis_helpers/general_helpers/get_mean_std", "testing/hypothesis_helpers/general_helpers/get_shape", "testing/hypothesis_helpers/general_helpers/matrix_is_stable", "testing/hypothesis_helpers/general_helpers/reshape_shapes", "testing/hypothesis_helpers/general_helpers/subsets", "testing/hypothesis_helpers/general_helpers/x_and_filters", "testing/hypothesis_helpers/number_helpers", "testing/hypothesis_helpers/number_helpers/floats", "testing/hypothesis_helpers/number_helpers/ints", "testing/hypothesis_helpers/number_helpers/number", "testing/structs", "testing/structs/FrontendMethodData", "testing/test_parameter_flags", "testing/test_parameter_flags/FrontendFunctionTestFlags", "testing/test_parameter_flags/FrontendMethodTestFlags", "testing/test_parameter_flags/FunctionTestFlags", "testing/test_parameter_flags/MethodTestFlags", "testing/test_parameter_flags/build_flag", "testing/test_parameter_flags/frontend_function_flags", "testing/test_parameter_flags/frontend_method_flags", "testing/test_parameter_flags/function_flags", "testing/test_parameter_flags/method_flags", "testing/testing_helpers", "testing/testing_helpers/handle_frontend_method", "testing/testing_helpers/handle_frontend_test", "testing/testing_helpers/handle_method", "testing/testing_helpers/handle_test", "testing/testing_helpers/num_positional_args", "testing/testing_helpers/num_positional_args_method", "testing/testing_helpers/seed", "utils/_importlib", "utils/assertions", "utils/assertions/check_all", "utils/assertions/check_all_or_any_fn", "utils/assertions/check_any", "utils/assertions/check_dimensions", "utils/assertions/check_elem_in_list", "utils/assertions/check_equal", "utils/assertions/check_exists", "utils/assertions/check_false", "utils/assertions/check_fill_value_and_dtype_are_compatible", "utils/assertions/check_gather_input_valid", "utils/assertions/check_gather_nd_input_valid", "utils/assertions/check_greater", "utils/assertions/check_inplace_sizes_valid", "utils/assertions/check_isinstance", "utils/assertions/check_kernel_padding_size", "utils/assertions/check_less", "utils/assertions/check_one_way_broadcastable", "utils/assertions/check_same_dtype", "utils/assertions/check_shape", "utils/assertions/check_shapes_broadcastable", "utils/assertions/check_true", "utils/backend", "utils/backend/ast_helpers", "utils/backend/ast_helpers/ImportTransformer", "utils/backend/ast_helpers/IvyLoader", "utils/backend/ast_helpers/IvyPathFinder", "utils/backend/handler", "utils/backend/handler/ContextManager", "utils/backend/handler/choose_random_backend", "utils/backend/handler/clear_backend_stack", "utils/backend/handler/convert_from_numpy_to_target_backend", "utils/backend/handler/convert_from_source_backend_to_numpy", "utils/backend/handler/current_backend", "utils/backend/handler/fn_name_from_version_specific_fn_name", "utils/backend/handler/get_backend", "utils/backend/handler/prevent_access_locally", "utils/backend/handler/set_backend", "utils/backend/handler/set_backend_to_specific_version", "utils/backend/handler/set_jax_backend", "utils/backend/handler/set_numpy_backend", "utils/backend/handler/set_tensorflow_backend", "utils/backend/handler/set_torch_backend", "utils/backend/handler/unset_backend", "utils/backend/handler/with_backend", "utils/dynamic_import", "utils/dynamic_import/import_module", "utils/inspection", "utils/inspection/add_array_specs", "utils/inspection/fn_array_spec", "utils/verbosity", "utils/verbosity/cprint"], "filenames": ["_version.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/applied_libraries.rst", "contributing/building_the_docs.rst", "contributing/helpful_resources.rst", "contributing/open_tasks.rst", "contributing/setting_up.rst", "contributing/the_basics.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/experimental.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/experimental.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/array_api_tests.rst", "deep_dive/arrays.rst", "deep_dive/backend_setting.rst", "deep_dive/containers.rst", "deep_dive/continuous_integration.rst", "deep_dive/data_types.rst", "deep_dive/devices.rst", "deep_dive/docstring_examples.rst", "deep_dive/docstrings.rst", "deep_dive/exception_handling.rst", "deep_dive/formatting.rst", "deep_dive/function_arguments.rst", "deep_dive/function_types.rst", "deep_dive/function_wrapping.rst", "deep_dive/inplace_updates.rst", "deep_dive/ivy_frontends.rst", "deep_dive/ivy_frontends_tests.rst", "deep_dive/ivy_tests.rst", "deep_dive/navigating_the_code.rst", "deep_dive/superset_behaviour.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_array_function.rst", "func_wrapper/handle_array_like_without_promotion.rst", "func_wrapper/handle_nans.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/handle_view.rst", "func_wrapper/handle_view_indexing.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/output_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_ivy_arrays_and_back.rst", "func_wrapper/to_native_arrays_and_back.rst", "func_wrapper/try_array_function_override.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/deserialize.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/get.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/mish.rst", "functional/ivy/activations/mish/mish_array.rst", "functional/ivy/activations/mish/mish_container.rst", "functional/ivy/activations/mish/mish_functional.rst", "functional/ivy/activations/mish/static_mish_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/constants.rst", "functional/ivy/control_flow_ops.rst", "functional/ivy/control_flow_ops/IfElse.rst", "functional/ivy/control_flow_ops/WhileLoop.rst", "functional/ivy/control_flow_ops/if_else.rst", "functional/ivy/control_flow_ops/while_loop.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_array.rst", "functional/ivy/creation/linspace/linspace_container.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_array.rst", "functional/ivy/creation/logspace/logspace_container.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultComplexDtype.rst", "functional/ivy/data_type/DefaultDtype.rst", "functional/ivy/data_type/DefaultFloatDtype.rst", "functional/ivy/data_type/DefaultIntDtype.rst", "functional/ivy/data_type/DefaultUintDtype.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_complex_dtype.rst", "functional/ivy/data_type/default_complex_dtype/default_complex_dtype_functional.rst", "functional/ivy/data_type/default_complex_dtype/static_default_complex_dtype_container.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_complex_dtype.rst", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_container.rst", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_functional.rst", "functional/ivy/data_type/is_complex_dtype/static_is_complex_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_complex_dtype.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_complex_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/experimental.rst", "functional/ivy/experimental/NativeSparseArray.rst", "functional/ivy/experimental/SparseArray.rst", "functional/ivy/experimental/activations.rst", "functional/ivy/experimental/activations/logit.rst", "functional/ivy/experimental/activations/prelu.rst", "functional/ivy/experimental/activations/relu6.rst", "functional/ivy/experimental/activations/thresholded_relu.rst", "functional/ivy/experimental/adjoint.rst", "functional/ivy/experimental/adjoint/adjoint_array.rst", "functional/ivy/experimental/adjoint/adjoint_container.rst", "functional/ivy/experimental/adjoint/adjoint_functional.rst", "functional/ivy/experimental/adjoint/static_adjoint_container.rst", "functional/ivy/experimental/allclose.rst", "functional/ivy/experimental/allclose/allclose_array.rst", "functional/ivy/experimental/allclose/allclose_container.rst", "functional/ivy/experimental/allclose/allclose_functional.rst", "functional/ivy/experimental/allclose/static_allclose_container.rst", "functional/ivy/experimental/angle.rst", "functional/ivy/experimental/angle/angle_array.rst", "functional/ivy/experimental/angle/angle_container.rst", "functional/ivy/experimental/angle/angle_functional.rst", "functional/ivy/experimental/angle/static_angle_container.rst", "functional/ivy/experimental/atleast_1d.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_array.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_container.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_functional.rst", "functional/ivy/experimental/atleast_1d/static_atleast_1d_container.rst", "functional/ivy/experimental/atleast_2d.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_array.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_container.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_functional.rst", "functional/ivy/experimental/atleast_2d/static_atleast_2d_container.rst", "functional/ivy/experimental/atleast_3d.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_array.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_container.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_functional.rst", "functional/ivy/experimental/atleast_3d/static_atleast_3d_container.rst", "functional/ivy/experimental/avg_pool1d.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_array.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_container.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_functional.rst", "functional/ivy/experimental/avg_pool1d/static_avg_pool1d_container.rst", "functional/ivy/experimental/avg_pool2d.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_array.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_container.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_functional.rst", "functional/ivy/experimental/avg_pool2d/static_avg_pool2d_container.rst", "functional/ivy/experimental/avg_pool3d.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_array.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_container.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_functional.rst", "functional/ivy/experimental/avg_pool3d/static_avg_pool3d_container.rst", "functional/ivy/experimental/bernoulli.rst", "functional/ivy/experimental/bernoulli/bernoulli_array.rst", "functional/ivy/experimental/bernoulli/bernoulli_container.rst", "functional/ivy/experimental/bernoulli/bernoulli_functional.rst", "functional/ivy/experimental/bernoulli/static_bernoulli_container.rst", "functional/ivy/experimental/beta.rst", "functional/ivy/experimental/beta/beta_array.rst", "functional/ivy/experimental/beta/beta_container.rst", "functional/ivy/experimental/beta/beta_functional.rst", "functional/ivy/experimental/beta/static_beta_container.rst", "functional/ivy/experimental/binarizer.rst", "functional/ivy/experimental/binarizer/binarizer_array.rst", "functional/ivy/experimental/binarizer/binarizer_container.rst", "functional/ivy/experimental/binarizer/binarizer_functional.rst", "functional/ivy/experimental/binarizer/static_binarizer_container.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_container.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_functional.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/static_binary_cross_entropy_with_logits_container.rst", "functional/ivy/experimental/bincount.rst", "functional/ivy/experimental/bincount/bincount_array.rst", "functional/ivy/experimental/bincount/bincount_container.rst", "functional/ivy/experimental/bincount/bincount_functional.rst", "functional/ivy/experimental/bincount/static_bincount_container.rst", "functional/ivy/experimental/bind_custom_gradient_function.rst", "functional/ivy/experimental/broadcast_shapes.rst", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_container.rst", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_functional.rst", "functional/ivy/experimental/broadcast_shapes/static_broadcast_shapes_container.rst", "functional/ivy/experimental/compute_weight_mat.rst", "functional/ivy/experimental/conj.rst", "functional/ivy/experimental/conj/conj_array.rst", "functional/ivy/experimental/conj/conj_container.rst", "functional/ivy/experimental/conj/conj_functional.rst", "functional/ivy/experimental/conj/static_conj_container.rst", "functional/ivy/experimental/constants.rst", "functional/ivy/experimental/copysign.rst", "functional/ivy/experimental/copysign/copysign_array.rst", "functional/ivy/experimental/copysign/copysign_container.rst", "functional/ivy/experimental/copysign/copysign_functional.rst", "functional/ivy/experimental/copysign/static_copysign_container.rst", "functional/ivy/experimental/corrcoef.rst", "functional/ivy/experimental/corrcoef/corrcoef_array.rst", "functional/ivy/experimental/corrcoef/corrcoef_container.rst", "functional/ivy/experimental/corrcoef/corrcoef_functional.rst", "functional/ivy/experimental/corrcoef/static_corrcoef_container.rst", "functional/ivy/experimental/count_nonzero.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_array.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_container.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_functional.rst", "functional/ivy/experimental/count_nonzero/static_count_nonzero_container.rst", "functional/ivy/experimental/creation.rst", "functional/ivy/experimental/creation/eye_like.rst", "functional/ivy/experimental/creation/hamming_window.rst", "functional/ivy/experimental/creation/hann_window.rst", "functional/ivy/experimental/creation/kaiser_bessel_derived_window.rst", "functional/ivy/experimental/creation/kaiser_window.rst", "functional/ivy/experimental/creation/tril_indices.rst", "functional/ivy/experimental/creation/triu_indices.rst", "functional/ivy/experimental/creation/vorbis_window.rst", "functional/ivy/experimental/data_type.rst", "functional/ivy/experimental/data_type/is_native_dtype.rst", "functional/ivy/experimental/dct.rst", "functional/ivy/experimental/dct/dct_array.rst", "functional/ivy/experimental/dct/dct_container.rst", "functional/ivy/experimental/dct/dct_functional.rst", "functional/ivy/experimental/dct/static_dct_container.rst", "functional/ivy/experimental/device.rst", "functional/ivy/experimental/dft.rst", "functional/ivy/experimental/dft/dft_container.rst", "functional/ivy/experimental/dft/dft_functional.rst", "functional/ivy/experimental/dft/static_dft_container.rst", "functional/ivy/experimental/diagflat.rst", "functional/ivy/experimental/diagflat/diagflat_array.rst", "functional/ivy/experimental/diagflat/diagflat_container.rst", "functional/ivy/experimental/diagflat/diagflat_functional.rst", "functional/ivy/experimental/diagflat/static_diagflat_container.rst", "functional/ivy/experimental/diff.rst", "functional/ivy/experimental/diff/diff_array.rst", "functional/ivy/experimental/diff/diff_container.rst", "functional/ivy/experimental/diff/diff_functional.rst", "functional/ivy/experimental/diff/static_diff_container.rst", "functional/ivy/experimental/dirichlet.rst", "functional/ivy/experimental/dirichlet/dirichlet_array.rst", "functional/ivy/experimental/dirichlet/dirichlet_container.rst", "functional/ivy/experimental/dirichlet/dirichlet_functional.rst", "functional/ivy/experimental/dirichlet/static_dirichlet_container.rst", "functional/ivy/experimental/dropout1d.rst", "functional/ivy/experimental/dropout3d.rst", "functional/ivy/experimental/dsplit.rst", "functional/ivy/experimental/dsplit/dsplit_array.rst", "functional/ivy/experimental/dsplit/dsplit_container.rst", "functional/ivy/experimental/dsplit/dsplit_functional.rst", "functional/ivy/experimental/dsplit/static_dsplit_container.rst", "functional/ivy/experimental/dstack.rst", "functional/ivy/experimental/dstack/dstack_array.rst", "functional/ivy/experimental/dstack/dstack_container.rst", "functional/ivy/experimental/dstack/dstack_functional.rst", "functional/ivy/experimental/dstack/static_dstack_container.rst", "functional/ivy/experimental/eig.rst", "functional/ivy/experimental/eig/eig_array.rst", "functional/ivy/experimental/eig/eig_container.rst", "functional/ivy/experimental/eig/eig_functional.rst", "functional/ivy/experimental/eig/static_eig_container.rst", "functional/ivy/experimental/eigh_tridiagonal.rst", "functional/ivy/experimental/eigh_tridiagonal/eigh_tridiagonal_array.rst", "functional/ivy/experimental/eigh_tridiagonal/eigh_tridiagonal_container.rst", "functional/ivy/experimental/eigh_tridiagonal/eigh_tridiagonal_functional.rst", "functional/ivy/experimental/eigh_tridiagonal/static_eigh_tridiagonal_container.rst", "functional/ivy/experimental/eigvals.rst", "functional/ivy/experimental/eigvals/eigvals_array.rst", "functional/ivy/experimental/eigvals/eigvals_container.rst", "functional/ivy/experimental/eigvals/eigvals_functional.rst", "functional/ivy/experimental/eigvals/static_eigvals_container.rst", "functional/ivy/experimental/elementwise.rst", "functional/ivy/experimental/elementwise/allclose.rst", "functional/ivy/experimental/elementwise/angle.rst", "functional/ivy/experimental/elementwise/binarizer.rst", "functional/ivy/experimental/elementwise/conj.rst", "functional/ivy/experimental/elementwise/copysign.rst", "functional/ivy/experimental/elementwise/count_nonzero.rst", "functional/ivy/experimental/elementwise/diff.rst", "functional/ivy/experimental/elementwise/exp2.rst", "functional/ivy/experimental/elementwise/fix.rst", "functional/ivy/experimental/elementwise/float_power.rst", "functional/ivy/experimental/elementwise/fmax.rst", "functional/ivy/experimental/elementwise/fmin.rst", "functional/ivy/experimental/elementwise/fmod.rst", "functional/ivy/experimental/elementwise/gcd.rst", "functional/ivy/experimental/elementwise/gradient.rst", "functional/ivy/experimental/elementwise/hypot.rst", "functional/ivy/experimental/elementwise/imag.rst", "functional/ivy/experimental/elementwise/isclose.rst", "functional/ivy/experimental/elementwise/lcm.rst", "functional/ivy/experimental/elementwise/ldexp.rst", "functional/ivy/experimental/elementwise/logaddexp2.rst", "functional/ivy/experimental/elementwise/nan_to_num.rst", "functional/ivy/experimental/elementwise/nansum.rst", "functional/ivy/experimental/elementwise/nextafter.rst", "functional/ivy/experimental/elementwise/real.rst", "functional/ivy/experimental/elementwise/signbit.rst", "functional/ivy/experimental/elementwise/sinc.rst", "functional/ivy/experimental/elementwise/trapz.rst", "functional/ivy/experimental/elementwise/xlogy.rst", "functional/ivy/experimental/elementwise/zeta.rst", "functional/ivy/experimental/embedding.rst", "functional/ivy/experimental/embedding/embedding_array.rst", "functional/ivy/experimental/embedding/embedding_container.rst", "functional/ivy/experimental/embedding/embedding_functional.rst", "functional/ivy/experimental/embedding/static_embedding_container.rst", "functional/ivy/experimental/exp2.rst", "functional/ivy/experimental/exp2/exp2_array.rst", "functional/ivy/experimental/exp2/exp2_container.rst", "functional/ivy/experimental/exp2/exp2_functional.rst", "functional/ivy/experimental/exp2/static_exp2_container.rst", "functional/ivy/experimental/expand.rst", "functional/ivy/experimental/expand/expand_array.rst", "functional/ivy/experimental/expand/expand_container.rst", "functional/ivy/experimental/expand/expand_functional.rst", "functional/ivy/experimental/expand/static_expand_container.rst", "functional/ivy/experimental/eye_like.rst", "functional/ivy/experimental/eye_like/eye_like_array.rst", "functional/ivy/experimental/eye_like/eye_like_container.rst", "functional/ivy/experimental/eye_like/eye_like_functional.rst", "functional/ivy/experimental/eye_like/static_eye_like_container.rst", "functional/ivy/experimental/fft.rst", "functional/ivy/experimental/fft/fft_array.rst", "functional/ivy/experimental/fft/fft_container.rst", "functional/ivy/experimental/fft/fft_functional.rst", "functional/ivy/experimental/fft/static_fft_container.rst", "functional/ivy/experimental/fix.rst", "functional/ivy/experimental/fix/fix_array.rst", "functional/ivy/experimental/fix/fix_container.rst", "functional/ivy/experimental/fix/fix_functional.rst", "functional/ivy/experimental/fix/static_fix_container.rst", "functional/ivy/experimental/flatten.rst", "functional/ivy/experimental/flatten/flatten_array.rst", "functional/ivy/experimental/flatten/flatten_container.rst", "functional/ivy/experimental/flatten/flatten_functional.rst", "functional/ivy/experimental/flatten/static_flatten_container.rst", "functional/ivy/experimental/fliplr.rst", "functional/ivy/experimental/fliplr/fliplr_array.rst", "functional/ivy/experimental/fliplr/fliplr_container.rst", "functional/ivy/experimental/fliplr/fliplr_functional.rst", "functional/ivy/experimental/fliplr/static_fliplr_container.rst", "functional/ivy/experimental/flipud.rst", "functional/ivy/experimental/flipud/flipud_array.rst", "functional/ivy/experimental/flipud/flipud_container.rst", "functional/ivy/experimental/flipud/flipud_functional.rst", "functional/ivy/experimental/flipud/static_flipud_container.rst", "functional/ivy/experimental/float_power.rst", "functional/ivy/experimental/float_power/float_power_array.rst", "functional/ivy/experimental/float_power/float_power_container.rst", "functional/ivy/experimental/float_power/float_power_functional.rst", "functional/ivy/experimental/float_power/static_float_power_container.rst", "functional/ivy/experimental/fmax.rst", "functional/ivy/experimental/fmax/fmax_array.rst", "functional/ivy/experimental/fmax/fmax_container.rst", "functional/ivy/experimental/fmax/fmax_functional.rst", "functional/ivy/experimental/fmax/static_fmax_container.rst", "functional/ivy/experimental/fmin.rst", "functional/ivy/experimental/fmin/fmin_array.rst", "functional/ivy/experimental/fmin/fmin_container.rst", "functional/ivy/experimental/fmin/fmin_functional.rst", "functional/ivy/experimental/fmin/static_fmin_container.rst", "functional/ivy/experimental/fmod.rst", "functional/ivy/experimental/fmod/fmod_array.rst", "functional/ivy/experimental/fmod/fmod_container.rst", "functional/ivy/experimental/fmod/fmod_functional.rst", "functional/ivy/experimental/fmod/static_fmod_container.rst", "functional/ivy/experimental/gamma.rst", "functional/ivy/experimental/gamma/gamma_array.rst", "functional/ivy/experimental/gamma/gamma_functional.rst", "functional/ivy/experimental/gcd.rst", "functional/ivy/experimental/gcd/gcd_array.rst", "functional/ivy/experimental/gcd/gcd_container.rst", "functional/ivy/experimental/gcd/gcd_functional.rst", "functional/ivy/experimental/gcd/static_gcd_container.rst", "functional/ivy/experimental/general.rst", "functional/ivy/experimental/general/isin.rst", "functional/ivy/experimental/gradient.rst", "functional/ivy/experimental/gradient/gradient_array.rst", "functional/ivy/experimental/gradient/gradient_container.rst", "functional/ivy/experimental/gradient/gradient_functional.rst", "functional/ivy/experimental/gradient/static_gradient_container.rst", "functional/ivy/experimental/gradients.rst", "functional/ivy/experimental/gradients/bind_custom_gradient_function.rst", "functional/ivy/experimental/hamming_window.rst", "functional/ivy/experimental/hamming_window/hamming_window_container.rst", "functional/ivy/experimental/hamming_window/hamming_window_functional.rst", "functional/ivy/experimental/hamming_window/static_hamming_window_container.rst", "functional/ivy/experimental/hann_window.rst", "functional/ivy/experimental/hann_window/hann_window_container.rst", "functional/ivy/experimental/hann_window/hann_window_functional.rst", "functional/ivy/experimental/hann_window/static_hann_window_container.rst", "functional/ivy/experimental/heaviside.rst", "functional/ivy/experimental/heaviside/heaviside_array.rst", "functional/ivy/experimental/heaviside/heaviside_container.rst", "functional/ivy/experimental/heaviside/heaviside_functional.rst", "functional/ivy/experimental/heaviside/static_heaviside_container.rst", "functional/ivy/experimental/hsplit.rst", "functional/ivy/experimental/hsplit/hsplit_array.rst", "functional/ivy/experimental/hsplit/hsplit_container.rst", "functional/ivy/experimental/hsplit/hsplit_functional.rst", "functional/ivy/experimental/hsplit/static_hsplit_container.rst", "functional/ivy/experimental/hstack.rst", "functional/ivy/experimental/hstack/hstack_array.rst", "functional/ivy/experimental/hstack/hstack_container.rst", "functional/ivy/experimental/hstack/hstack_functional.rst", "functional/ivy/experimental/hstack/static_hstack_container.rst", "functional/ivy/experimental/hypot.rst", "functional/ivy/experimental/hypot/hypot_array.rst", "functional/ivy/experimental/hypot/hypot_container.rst", "functional/ivy/experimental/hypot/hypot_functional.rst", "functional/ivy/experimental/hypot/static_hypot_container.rst", "functional/ivy/experimental/i0.rst", "functional/ivy/experimental/i0/i0_array.rst", "functional/ivy/experimental/i0/i0_container.rst", "functional/ivy/experimental/i0/i0_functional.rst", "functional/ivy/experimental/i0/static_i0_container.rst", "functional/ivy/experimental/ifft.rst", "functional/ivy/experimental/ifft/ifft_array.rst", "functional/ivy/experimental/ifft/ifft_container.rst", "functional/ivy/experimental/ifft/ifft_functional.rst", "functional/ivy/experimental/ifft/static_ifft_container.rst", "functional/ivy/experimental/imag.rst", "functional/ivy/experimental/imag/imag_array.rst", "functional/ivy/experimental/imag/imag_container.rst", "functional/ivy/experimental/imag/imag_functional.rst", "functional/ivy/experimental/imag/static_imag_container.rst", "functional/ivy/experimental/instance_norm.rst", "functional/ivy/experimental/instance_norm/instance_norm_array.rst", "functional/ivy/experimental/instance_norm/instance_norm_container.rst", "functional/ivy/experimental/instance_norm/instance_norm_functional.rst", "functional/ivy/experimental/instance_norm/static_instance_norm_container.rst", "functional/ivy/experimental/interp.rst", "functional/ivy/experimental/interpolate.rst", "functional/ivy/experimental/interpolate/interpolate_array.rst", "functional/ivy/experimental/interpolate/interpolate_container.rst", "functional/ivy/experimental/interpolate/interpolate_functional.rst", "functional/ivy/experimental/interpolate/static_interpolate_container.rst", "functional/ivy/experimental/is_ivy_sparse_array.rst", "functional/ivy/experimental/is_native_dtype.rst", "functional/ivy/experimental/is_native_sparse_array.rst", "functional/ivy/experimental/isclose.rst", "functional/ivy/experimental/isclose/isclose_array.rst", "functional/ivy/experimental/isclose/isclose_container.rst", "functional/ivy/experimental/isclose/isclose_functional.rst", "functional/ivy/experimental/isclose/static_isclose_container.rst", "functional/ivy/experimental/isin.rst", "functional/ivy/experimental/isin/isin_array.rst", "functional/ivy/experimental/isin/isin_container.rst", "functional/ivy/experimental/isin/isin_functional.rst", "functional/ivy/experimental/isin/static_isin_container.rst", "functional/ivy/experimental/kaiser_bessel_derived_window.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_container.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_functional.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/static_kaiser_bessel_derived_window_container.rst", "functional/ivy/experimental/kaiser_window.rst", "functional/ivy/experimental/kaiser_window/kaiser_window_container.rst", "functional/ivy/experimental/kaiser_window/kaiser_window_functional.rst", "functional/ivy/experimental/kaiser_window/static_kaiser_window_container.rst", "functional/ivy/experimental/kron.rst", "functional/ivy/experimental/kron/kron_array.rst", "functional/ivy/experimental/kron/kron_container.rst", "functional/ivy/experimental/kron/kron_functional.rst", "functional/ivy/experimental/kron/static_kron_container.rst", "functional/ivy/experimental/l2_normalize.rst", "functional/ivy/experimental/l2_normalize/l2_normalize_array.rst", "functional/ivy/experimental/l2_normalize/l2_normalize_container.rst", "functional/ivy/experimental/l2_normalize/l2_normalize_functional.rst", "functional/ivy/experimental/l2_normalize/static_l2_normalize_container.rst", "functional/ivy/experimental/layers.rst", "functional/ivy/experimental/layers/avg_pool1d.rst", "functional/ivy/experimental/layers/avg_pool2d.rst", "functional/ivy/experimental/layers/avg_pool3d.rst", "functional/ivy/experimental/layers/compute_weight_mat.rst", "functional/ivy/experimental/layers/dct.rst", "functional/ivy/experimental/layers/dft.rst", "functional/ivy/experimental/layers/dropout1d.rst", "functional/ivy/experimental/layers/dropout3d.rst", "functional/ivy/experimental/layers/embedding.rst", "functional/ivy/experimental/layers/fft.rst", "functional/ivy/experimental/layers/ifft.rst", "functional/ivy/experimental/layers/interp.rst", "functional/ivy/experimental/layers/interpolate.rst", "functional/ivy/experimental/layers/max_pool1d.rst", "functional/ivy/experimental/layers/max_pool2d.rst", "functional/ivy/experimental/layers/max_pool3d.rst", "functional/ivy/experimental/layers/padding_ceil_mode.rst", "functional/ivy/experimental/lcm.rst", "functional/ivy/experimental/lcm/lcm_array.rst", "functional/ivy/experimental/lcm/lcm_container.rst", "functional/ivy/experimental/lcm/lcm_functional.rst", "functional/ivy/experimental/lcm/static_lcm_container.rst", "functional/ivy/experimental/ldexp.rst", "functional/ivy/experimental/ldexp/ldexp_array.rst", "functional/ivy/experimental/ldexp/ldexp_container.rst", "functional/ivy/experimental/ldexp/ldexp_functional.rst", "functional/ivy/experimental/ldexp/static_ldexp_container.rst", "functional/ivy/experimental/lexsort.rst", "functional/ivy/experimental/lexsort/lexsort_array.rst", "functional/ivy/experimental/lexsort/lexsort_container.rst", "functional/ivy/experimental/lexsort/lexsort_functional.rst", "functional/ivy/experimental/lexsort/static_lexsort_container.rst", "functional/ivy/experimental/linear_algebra.rst", "functional/ivy/experimental/linear_algebra/adjoint.rst", "functional/ivy/experimental/linear_algebra/diagflat.rst", "functional/ivy/experimental/linear_algebra/eig.rst", "functional/ivy/experimental/linear_algebra/eigh_tridiagonal.rst", "functional/ivy/experimental/linear_algebra/eigvals.rst", "functional/ivy/experimental/linear_algebra/kron.rst", "functional/ivy/experimental/linear_algebra/matrix_exp.rst", "functional/ivy/experimental/linear_algebra/multi_dot.rst", "functional/ivy/experimental/logaddexp2.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_array.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_container.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_functional.rst", "functional/ivy/experimental/logaddexp2/static_logaddexp2_container.rst", "functional/ivy/experimental/logit.rst", "functional/ivy/experimental/logit/logit_array.rst", "functional/ivy/experimental/logit/logit_container.rst", "functional/ivy/experimental/logit/logit_functional.rst", "functional/ivy/experimental/logit/static_logit_container.rst", "functional/ivy/experimental/losses.rst", "functional/ivy/experimental/losses/binary_cross_entropy_with_logits.rst", "functional/ivy/experimental/lp_normalize.rst", "functional/ivy/experimental/lp_normalize/lp_normalize_array.rst", "functional/ivy/experimental/lp_normalize/lp_normalize_container.rst", "functional/ivy/experimental/lp_normalize/lp_normalize_functional.rst", "functional/ivy/experimental/lp_normalize/static_lp_normalize_container.rst", "functional/ivy/experimental/manipulation.rst", "functional/ivy/experimental/manipulation/atleast_1d.rst", "functional/ivy/experimental/manipulation/atleast_2d.rst", "functional/ivy/experimental/manipulation/atleast_3d.rst", "functional/ivy/experimental/manipulation/broadcast_shapes.rst", "functional/ivy/experimental/manipulation/dsplit.rst", "functional/ivy/experimental/manipulation/dstack.rst", "functional/ivy/experimental/manipulation/expand.rst", "functional/ivy/experimental/manipulation/flatten.rst", "functional/ivy/experimental/manipulation/fliplr.rst", "functional/ivy/experimental/manipulation/flipud.rst", "functional/ivy/experimental/manipulation/heaviside.rst", "functional/ivy/experimental/manipulation/hsplit.rst", "functional/ivy/experimental/manipulation/hstack.rst", "functional/ivy/experimental/manipulation/i0.rst", "functional/ivy/experimental/manipulation/moveaxis.rst", "functional/ivy/experimental/manipulation/ndenumerate.rst", "functional/ivy/experimental/manipulation/ndindex.rst", "functional/ivy/experimental/manipulation/pad.rst", "functional/ivy/experimental/manipulation/rot90.rst", "functional/ivy/experimental/manipulation/take_along_axis.rst", "functional/ivy/experimental/manipulation/top_k.rst", "functional/ivy/experimental/manipulation/vsplit.rst", "functional/ivy/experimental/manipulation/vstack.rst", "functional/ivy/experimental/matrix_exp.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_array.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_container.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_functional.rst", "functional/ivy/experimental/matrix_exp/static_matrix_exp_container.rst", "functional/ivy/experimental/max_pool1d.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_array.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_container.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_functional.rst", "functional/ivy/experimental/max_pool1d/static_max_pool1d_container.rst", "functional/ivy/experimental/max_pool2d.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_array.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_container.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_functional.rst", "functional/ivy/experimental/max_pool2d/static_max_pool2d_container.rst", "functional/ivy/experimental/max_pool3d.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_array.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_container.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_functional.rst", "functional/ivy/experimental/max_pool3d/static_max_pool3d_container.rst", "functional/ivy/experimental/median.rst", "functional/ivy/experimental/median/median_array.rst", "functional/ivy/experimental/median/median_container.rst", "functional/ivy/experimental/median/median_functional.rst", "functional/ivy/experimental/median/static_median_container.rst", "functional/ivy/experimental/meta.rst", "functional/ivy/experimental/moveaxis.rst", "functional/ivy/experimental/moveaxis/moveaxis_array.rst", "functional/ivy/experimental/moveaxis/moveaxis_container.rst", "functional/ivy/experimental/moveaxis/moveaxis_functional.rst", "functional/ivy/experimental/moveaxis/static_moveaxis_container.rst", "functional/ivy/experimental/msort.rst", "functional/ivy/experimental/msort/msort_array.rst", "functional/ivy/experimental/msort/msort_container.rst", "functional/ivy/experimental/msort/msort_functional.rst", "functional/ivy/experimental/msort/static_msort_container.rst", "functional/ivy/experimental/multi_dot.rst", "functional/ivy/experimental/nan_to_num.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_array.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_container.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_functional.rst", "functional/ivy/experimental/nan_to_num/static_nan_to_num_container.rst", "functional/ivy/experimental/nanmean.rst", "functional/ivy/experimental/nanmean/nanmean_array.rst", "functional/ivy/experimental/nanmean/nanmean_container.rst", "functional/ivy/experimental/nanmean/nanmean_functional.rst", "functional/ivy/experimental/nanmean/static_nanmean_container.rst", "functional/ivy/experimental/nanmedian.rst", "functional/ivy/experimental/nanmedian/nanmedian_array.rst", "functional/ivy/experimental/nanmedian/nanmedian_container.rst", "functional/ivy/experimental/nanmedian/nanmedian_functional.rst", "functional/ivy/experimental/nanmedian/static_nanmedian_container.rst", "functional/ivy/experimental/nansum.rst", "functional/ivy/experimental/nansum/nansum_array.rst", "functional/ivy/experimental/nansum/nansum_container.rst", "functional/ivy/experimental/nansum/nansum_functional.rst", "functional/ivy/experimental/nansum/static_nansum_container.rst", "functional/ivy/experimental/native_sparse_array.rst", "functional/ivy/experimental/native_sparse_array_to_indices_values_and_shape.rst", "functional/ivy/experimental/ndenumerate.rst", "functional/ivy/experimental/ndindex.rst", "functional/ivy/experimental/nest.rst", "functional/ivy/experimental/nextafter.rst", "functional/ivy/experimental/nextafter/nextafter_array.rst", "functional/ivy/experimental/nextafter/nextafter_container.rst", "functional/ivy/experimental/nextafter/nextafter_functional.rst", "functional/ivy/experimental/nextafter/static_nextafter_container.rst", "functional/ivy/experimental/norms.rst", "functional/ivy/experimental/norms/instance_norm.rst", "functional/ivy/experimental/norms/l2_normalize.rst", "functional/ivy/experimental/norms/lp_normalize.rst", "functional/ivy/experimental/pad.rst", "functional/ivy/experimental/pad/pad_array.rst", "functional/ivy/experimental/pad/pad_container.rst", "functional/ivy/experimental/pad/pad_functional.rst", "functional/ivy/experimental/pad/static_pad_container.rst", "functional/ivy/experimental/padding_ceil_mode.rst", "functional/ivy/experimental/poisson.rst", "functional/ivy/experimental/poisson/poisson_array.rst", "functional/ivy/experimental/poisson/poisson_container.rst", "functional/ivy/experimental/poisson/poisson_functional.rst", "functional/ivy/experimental/poisson/static_poisson_container.rst", "functional/ivy/experimental/prelu.rst", "functional/ivy/experimental/prelu/prelu_array.rst", "functional/ivy/experimental/prelu/prelu_container.rst", "functional/ivy/experimental/prelu/prelu_functional.rst", "functional/ivy/experimental/prelu/static_prelu_container.rst", "functional/ivy/experimental/quantile.rst", "functional/ivy/experimental/quantile/quantile_array.rst", "functional/ivy/experimental/quantile/quantile_container.rst", "functional/ivy/experimental/quantile/quantile_functional.rst", "functional/ivy/experimental/quantile/static_quantile_container.rst", "functional/ivy/experimental/random.rst", "functional/ivy/experimental/random/bernoulli.rst", "functional/ivy/experimental/random/beta.rst", "functional/ivy/experimental/random/dirichlet.rst", "functional/ivy/experimental/random/gamma.rst", "functional/ivy/experimental/random/poisson.rst", "functional/ivy/experimental/real.rst", "functional/ivy/experimental/real/real_array.rst", "functional/ivy/experimental/real/real_container.rst", "functional/ivy/experimental/real/real_functional.rst", "functional/ivy/experimental/real/static_real_container.rst", "functional/ivy/experimental/relu6.rst", "functional/ivy/experimental/relu6/relu6_array.rst", "functional/ivy/experimental/relu6/relu6_container.rst", "functional/ivy/experimental/relu6/relu6_functional.rst", "functional/ivy/experimental/relu6/static_relu6_container.rst", "functional/ivy/experimental/rot90.rst", "functional/ivy/experimental/rot90/rot90_array.rst", "functional/ivy/experimental/rot90/rot90_container.rst", "functional/ivy/experimental/rot90/rot90_functional.rst", "functional/ivy/experimental/rot90/static_rot90_container.rst", "functional/ivy/experimental/searching.rst", "functional/ivy/experimental/set.rst", "functional/ivy/experimental/signbit.rst", "functional/ivy/experimental/signbit/signbit_array.rst", "functional/ivy/experimental/signbit/signbit_container.rst", "functional/ivy/experimental/signbit/signbit_functional.rst", "functional/ivy/experimental/signbit/static_signbit_container.rst", "functional/ivy/experimental/sinc.rst", "functional/ivy/experimental/sinc/sinc_array.rst", "functional/ivy/experimental/sinc/sinc_container.rst", "functional/ivy/experimental/sinc/sinc_functional.rst", "functional/ivy/experimental/sinc/static_sinc_container.rst", "functional/ivy/experimental/sorting.rst", "functional/ivy/experimental/sorting/lexsort.rst", "functional/ivy/experimental/sorting/msort.rst", "functional/ivy/experimental/sparse_array.rst", "functional/ivy/experimental/sparse_array/NativeSparseArray.rst", "functional/ivy/experimental/sparse_array/SparseArray.rst", "functional/ivy/experimental/sparse_array/is_ivy_sparse_array.rst", "functional/ivy/experimental/sparse_array/is_native_sparse_array.rst", "functional/ivy/experimental/sparse_array/native_sparse_array.rst", "functional/ivy/experimental/sparse_array/native_sparse_array_to_indices_values_and_shape.rst", "functional/ivy/experimental/statistical.rst", "functional/ivy/experimental/statistical/bincount.rst", "functional/ivy/experimental/statistical/corrcoef.rst", "functional/ivy/experimental/statistical/median.rst", "functional/ivy/experimental/statistical/nanmean.rst", "functional/ivy/experimental/statistical/nanmedian.rst", "functional/ivy/experimental/statistical/quantile.rst", "functional/ivy/experimental/statistical/unravel_index.rst", "functional/ivy/experimental/take_along_axis.rst", "functional/ivy/experimental/take_along_axis/static_take_along_axis_container.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_array.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_container.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_functional.rst", "functional/ivy/experimental/thresholded_relu.rst", "functional/ivy/experimental/thresholded_relu/static_thresholded_relu_container.rst", "functional/ivy/experimental/thresholded_relu/thresholded_relu_array.rst", "functional/ivy/experimental/thresholded_relu/thresholded_relu_container.rst", "functional/ivy/experimental/thresholded_relu/thresholded_relu_functional.rst", "functional/ivy/experimental/top_k.rst", "functional/ivy/experimental/top_k/static_top_k_container.rst", "functional/ivy/experimental/top_k/top_k_array.rst", "functional/ivy/experimental/top_k/top_k_container.rst", "functional/ivy/experimental/top_k/top_k_functional.rst", "functional/ivy/experimental/trapz.rst", "functional/ivy/experimental/trapz/trapz_array.rst", "functional/ivy/experimental/trapz/trapz_functional.rst", "functional/ivy/experimental/tril_indices.rst", "functional/ivy/experimental/tril_indices/static_tril_indices_container.rst", "functional/ivy/experimental/tril_indices/tril_indices_container.rst", "functional/ivy/experimental/tril_indices/tril_indices_functional.rst", "functional/ivy/experimental/triu_indices.rst", "functional/ivy/experimental/triu_indices/static_triu_indices_container.rst", "functional/ivy/experimental/triu_indices/triu_indices_container.rst", "functional/ivy/experimental/triu_indices/triu_indices_functional.rst", "functional/ivy/experimental/unravel_index.rst", "functional/ivy/experimental/unravel_index/static_unravel_index_container.rst", "functional/ivy/experimental/unravel_index/unravel_index_array.rst", "functional/ivy/experimental/unravel_index/unravel_index_container.rst", "functional/ivy/experimental/unravel_index/unravel_index_functional.rst", "functional/ivy/experimental/utility.rst", "functional/ivy/experimental/vorbis_window.rst", "functional/ivy/experimental/vorbis_window/static_vorbis_window_container.rst", "functional/ivy/experimental/vorbis_window/vorbis_window_container.rst", "functional/ivy/experimental/vorbis_window/vorbis_window_functional.rst", "functional/ivy/experimental/vsplit.rst", "functional/ivy/experimental/vsplit/static_vsplit_container.rst", "functional/ivy/experimental/vsplit/vsplit_array.rst", "functional/ivy/experimental/vsplit/vsplit_container.rst", "functional/ivy/experimental/vsplit/vsplit_functional.rst", "functional/ivy/experimental/vstack.rst", "functional/ivy/experimental/vstack/static_vstack_container.rst", "functional/ivy/experimental/vstack/vstack_array.rst", "functional/ivy/experimental/vstack/vstack_container.rst", "functional/ivy/experimental/vstack/vstack_functional.rst", "functional/ivy/experimental/xlogy.rst", "functional/ivy/experimental/xlogy/static_xlogy_container.rst", "functional/ivy/experimental/xlogy/xlogy_array.rst", "functional/ivy/experimental/xlogy/xlogy_container.rst", "functional/ivy/experimental/xlogy/xlogy_functional.rst", "functional/ivy/experimental/zeta.rst", "functional/ivy/experimental/zeta/static_zeta_container.rst", "functional/ivy/experimental/zeta/zeta_array.rst", "functional/ivy/experimental/zeta/zeta_container.rst", "functional/ivy/experimental/zeta/zeta_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_container.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/array_equal/static_array_equal_container.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_show_func_wrapper_trace_mode.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_show_func_wrapper_trace_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unset_show_func_wrapper_trace_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_array.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diag.rst", "functional/ivy/linear_algebra/diag/diag_array.rst", "functional/ivy/linear_algebra/diag/diag_container.rst", "functional/ivy/linear_algebra/diag/diag_functional.rst", "functional/ivy/linear_algebra/diag/static_diag_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eig.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigh/static_eigh_container.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_container.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/eigvalsh/static_eigvalsh_container.rst", "functional/ivy/linear_algebra/inner.rst", "functional/ivy/linear_algebra/inner/inner_array.rst", "functional/ivy/linear_algebra/inner/inner_container.rst", "functional/ivy/linear_algebra/inner/inner_functional.rst", "functional/ivy/linear_algebra/inner/static_inner_container.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/lu_factor.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matmul/static_matmul_container.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_array.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_container.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/pinv/static_pinv_container.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_array.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/tensorsolve.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_array.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_container.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vander.rst", "functional/ivy/linear_algebra/vander/static_vander_container.rst", "functional/ivy/linear_algebra/vander/vander_array.rst", "functional/ivy/linear_algebra/vander/vander_container.rst", "functional/ivy/linear_algebra/vander/vander_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/duplicate_array_index_chains.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_empty.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/prod/static_prod_container.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "nested_array/nested_array.rst", "nested_array/nested_array/NestedArray.rst", "related_work.rst", "related_work/api_standards.rst", "related_work/compiler_infrastructure.rst", "related_work/exchange_formats.rst", "related_work/frameworks.rst", "related_work/graph_tracers.rst", "related_work/ml_unifying_companies.rst", "related_work/multi_vendor_compiler_frameworks.rst", "related_work/vendor_specific_apis.rst", "related_work/vendor_specific_compilers.rst", "related_work/what_does_ivy_add.rst", "related_work/wrapper_frameworks.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/ModuleConverters.rst", "stateful/converters/to_ivy_module.rst", "stateful/helpers.rst", "stateful/helpers/ModuleHelpers.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "testing/assertions.rst", "testing/assertions/assert_all_close.rst", "testing/assertions/assert_same_type_and_shape.rst", "testing/assertions/check_unsupported_device.rst", "testing/assertions/check_unsupported_device_and_dtype.rst", "testing/assertions/check_unsupported_dtype.rst", "testing/assertions/test_unsupported_function.rst", "testing/assertions/value_test.rst", "testing/available_frameworks.rst", "testing/available_frameworks/available_frameworks.rst", "testing/available_frameworks/ground_truth.rst", "testing/function_testing.rst", "testing/function_testing/args_to_container.rst", "testing/function_testing/as_cont.rst", "testing/function_testing/as_lists.rst", "testing/function_testing/convtrue.rst", "testing/function_testing/create_args_kwargs.rst", "testing/function_testing/create_frontend_args_kwargs.rst", "testing/function_testing/empty_func.rst", "testing/function_testing/flatten.rst", "testing/function_testing/flatten_and_to_np.rst", "testing/function_testing/flatten_fw_and_to_np.rst", "testing/function_testing/framework_comparator.rst", "testing/function_testing/get_frontend_ret.rst", "testing/function_testing/get_ret_and_flattened_np_array.rst", "testing/function_testing/gradient_incompatible_function.rst", "testing/function_testing/gradient_test.rst", "testing/function_testing/gradient_unsupported_dtypes.rst", "testing/function_testing/kwargs_to_args_n_kwargs.rst", "testing/function_testing/make_json_pickable.rst", "testing/function_testing/test_frontend_function.rst", "testing/function_testing/test_frontend_method.rst", "testing/function_testing/test_function.rst", "testing/function_testing/test_method.rst", "testing/function_testing/var_fn.rst", "testing/globals.rst", "testing/globals/InterruptedTest.rst", "testing/globals/TestData.rst", "testing/globals/remove_all_current_framework.rst", "testing/globals/setup_api_test.rst", "testing/globals/setup_frontend_test.rst", "testing/globals/teardown_api_test.rst", "testing/globals/teardown_frontend_test.rst", "testing/hypothesis_helpers.rst", "testing/hypothesis_helpers/array_helpers.rst", "testing/hypothesis_helpers/array_helpers/array_and_broadcastable_shape.rst", "testing/hypothesis_helpers/array_helpers/array_bools.rst", "testing/hypothesis_helpers/array_helpers/array_indices_axis.rst", "testing/hypothesis_helpers/array_helpers/array_values.rst", "testing/hypothesis_helpers/array_helpers/arrays_and_axes.rst", "testing/hypothesis_helpers/array_helpers/arrays_for_pooling.rst", "testing/hypothesis_helpers/array_helpers/broadcast_shapes.rst", "testing/hypothesis_helpers/array_helpers/dtype_and_values.rst", "testing/hypothesis_helpers/array_helpers/dtype_values_axis.rst", "testing/hypothesis_helpers/array_helpers/list_of_size.rst", "testing/hypothesis_helpers/array_helpers/lists.rst", "testing/hypothesis_helpers/array_helpers/mutually_broadcastable_shapes.rst", "testing/hypothesis_helpers/array_helpers/prod.rst", "testing/hypothesis_helpers/dtype_helpers.rst", "testing/hypothesis_helpers/dtype_helpers/array_dtypes.rst", "testing/hypothesis_helpers/dtype_helpers/get_castable_dtype.rst", "testing/hypothesis_helpers/dtype_helpers/get_dtypes.rst", "testing/hypothesis_helpers/dtype_helpers/make_json_pickable.rst", "testing/hypothesis_helpers/general_helpers.rst", "testing/hypothesis_helpers/general_helpers/apply_safety_factor.rst", "testing/hypothesis_helpers/general_helpers/embedding_helper.rst", "testing/hypothesis_helpers/general_helpers/get_axis.rst", "testing/hypothesis_helpers/general_helpers/get_bounds.rst", "testing/hypothesis_helpers/general_helpers/get_mean_std.rst", "testing/hypothesis_helpers/general_helpers/get_shape.rst", "testing/hypothesis_helpers/general_helpers/matrix_is_stable.rst", "testing/hypothesis_helpers/general_helpers/reshape_shapes.rst", "testing/hypothesis_helpers/general_helpers/subsets.rst", "testing/hypothesis_helpers/general_helpers/x_and_filters.rst", "testing/hypothesis_helpers/number_helpers.rst", "testing/hypothesis_helpers/number_helpers/floats.rst", "testing/hypothesis_helpers/number_helpers/ints.rst", "testing/hypothesis_helpers/number_helpers/number.rst", "testing/structs.rst", "testing/structs/FrontendMethodData.rst", "testing/test_parameter_flags.rst", "testing/test_parameter_flags/FrontendFunctionTestFlags.rst", "testing/test_parameter_flags/FrontendMethodTestFlags.rst", "testing/test_parameter_flags/FunctionTestFlags.rst", "testing/test_parameter_flags/MethodTestFlags.rst", "testing/test_parameter_flags/build_flag.rst", "testing/test_parameter_flags/frontend_function_flags.rst", "testing/test_parameter_flags/frontend_method_flags.rst", "testing/test_parameter_flags/function_flags.rst", "testing/test_parameter_flags/method_flags.rst", "testing/testing_helpers.rst", "testing/testing_helpers/handle_frontend_method.rst", "testing/testing_helpers/handle_frontend_test.rst", "testing/testing_helpers/handle_method.rst", "testing/testing_helpers/handle_test.rst", "testing/testing_helpers/num_positional_args.rst", "testing/testing_helpers/num_positional_args_method.rst", "testing/testing_helpers/seed.rst", "utils/_importlib.rst", "utils/assertions.rst", "utils/assertions/check_all.rst", "utils/assertions/check_all_or_any_fn.rst", "utils/assertions/check_any.rst", "utils/assertions/check_dimensions.rst", "utils/assertions/check_elem_in_list.rst", "utils/assertions/check_equal.rst", "utils/assertions/check_exists.rst", "utils/assertions/check_false.rst", "utils/assertions/check_fill_value_and_dtype_are_compatible.rst", "utils/assertions/check_gather_input_valid.rst", "utils/assertions/check_gather_nd_input_valid.rst", "utils/assertions/check_greater.rst", "utils/assertions/check_inplace_sizes_valid.rst", "utils/assertions/check_isinstance.rst", "utils/assertions/check_kernel_padding_size.rst", "utils/assertions/check_less.rst", "utils/assertions/check_one_way_broadcastable.rst", "utils/assertions/check_same_dtype.rst", "utils/assertions/check_shape.rst", "utils/assertions/check_shapes_broadcastable.rst", "utils/assertions/check_true.rst", "utils/backend.rst", "utils/backend/ast_helpers.rst", "utils/backend/ast_helpers/ImportTransformer.rst", "utils/backend/ast_helpers/IvyLoader.rst", "utils/backend/ast_helpers/IvyPathFinder.rst", "utils/backend/handler.rst", "utils/backend/handler/ContextManager.rst", "utils/backend/handler/choose_random_backend.rst", "utils/backend/handler/clear_backend_stack.rst", "utils/backend/handler/convert_from_numpy_to_target_backend.rst", "utils/backend/handler/convert_from_source_backend_to_numpy.rst", "utils/backend/handler/current_backend.rst", "utils/backend/handler/fn_name_from_version_specific_fn_name.rst", "utils/backend/handler/get_backend.rst", "utils/backend/handler/prevent_access_locally.rst", "utils/backend/handler/set_backend.rst", "utils/backend/handler/set_backend_to_specific_version.rst", "utils/backend/handler/set_jax_backend.rst", "utils/backend/handler/set_numpy_backend.rst", "utils/backend/handler/set_tensorflow_backend.rst", "utils/backend/handler/set_torch_backend.rst", "utils/backend/handler/unset_backend.rst", "utils/backend/handler/with_backend.rst", "utils/dynamic_import.rst", "utils/dynamic_import/import_module.rst", "utils/inspection.rst", "utils/inspection/add_array_specs.rst", "utils/inspection/fn_array_spec.rst", "utils/verbosity.rst", "utils/verbosity/cprint.rst"], "titles": ["&lt;no title&gt;", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Experimental", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Experimental", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_array_function", "handle_array_like_without_promotion", "handle_nans", "handle_nestable", "handle_out_argument", "handle_view", "handle_view_indexing", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "output_to_native_arrays", "outputs_to_ivy_arrays", "to_ivy_arrays_and_back", "to_native_arrays_and_back", "try_array_function_override", "&lt;no title&gt;", "Activations", "deserialize", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "get", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "mish", "ivy.Array.mish", "ivy.Container.mish", "ivy.mish", "ivy.Container.static_mish", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "&lt;no title&gt;", "Constants", "Control flow ops", "IfElse", "WhileLoop", "if_else", "while_loop", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.Array.linspace", "ivy.Container.linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.Array.logspace", "ivy.Container.logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "DefaultComplexDtype", "DefaultDtype", "DefaultFloatDtype", "DefaultIntDtype", "DefaultUintDtype", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_complex_dtype", "ivy.default_complex_dtype", "ivy.Container.static_default_complex_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_complex_dtype", "ivy.Container.is_complex_dtype", "ivy.is_complex_dtype", "ivy.Container.static_is_complex_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_complex_dtype", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_complex_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "DefaultDevice", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "Experimental", "NativeSparseArray", "SparseArray", "Activations", "logit", "prelu", "relu6", "thresholded_relu", "adjoint", "ivy.Array.adjoint", "ivy.Container.adjoint", "ivy.adjoint", "ivy.Container.static_adjoint", "allclose", "ivy.Array.allclose", "ivy.Container.allclose", "ivy.allclose", "ivy.Container.static_allclose", "angle", "ivy.Array.angle", "ivy.Container.angle", "ivy.angle", "ivy.Container.static_angle", "atleast_1d", "ivy.Array.atleast_1d", "ivy.Container.atleast_1d", "ivy.atleast_1d", "ivy.Container.static_atleast_1d", "atleast_2d", "ivy.Array.atleast_2d", "ivy.Container.atleast_2d", "ivy.atleast_2d", "ivy.Container.static_atleast_2d", "atleast_3d", "ivy.Array.atleast_3d", "ivy.Container.atleast_3d", "ivy.atleast_3d", "ivy.Container.static_atleast_3d", "avg_pool1d", "ivy.Array.avg_pool1d", "ivy.Container.avg_pool1d", "ivy.avg_pool1d", "ivy.Container.static_avg_pool1d", "avg_pool2d", "ivy.Array.avg_pool2d", "ivy.Container.avg_pool2d", "ivy.avg_pool2d", "ivy.Container.static_avg_pool2d", "avg_pool3d", "ivy.Array.avg_pool3d", "ivy.Container.avg_pool3d", "ivy.avg_pool3d", "ivy.Container.static_avg_pool3d", "bernoulli", "ivy.Array.bernoulli", "ivy.Container.bernoulli", "ivy.bernoulli", "ivy.Container.static_bernoulli", "beta", "ivy.Array.beta", "ivy.Container.beta", "ivy.beta", "ivy.Container.static_beta", "binarizer", "ivy.Array.binarizer", "ivy.Container.binarizer", "ivy.binarizer", "ivy.Container.static_binarizer", "binary_cross_entropy_with_logits", "ivy.Container.binary_cross_entropy_with_logits", "ivy.binary_cross_entropy_with_logits", "ivy.Container.static_binary_cross_entropy_with_logits", "bincount", "ivy.Array.bincount", "ivy.Container.bincount", "ivy.bincount", "ivy.Container.static_bincount", "bind_custom_gradient_function", "broadcast_shapes", "ivy.Container.broadcast_shapes", "ivy.broadcast_shapes", "ivy.Container.static_broadcast_shapes", "compute_weight_mat", "conj", "ivy.Array.conj", "ivy.Container.conj", "ivy.conj", "ivy.Container.static_conj", "Constants", "copysign", "ivy.Array.copysign", "ivy.Container.copysign", "ivy.copysign", "ivy.Container.static_copysign", "corrcoef", "ivy.Array.corrcoef", "ivy.Container.corrcoef", "ivy.corrcoef", "ivy.Container.static_corrcoef", "count_nonzero", "ivy.Array.count_nonzero", "ivy.Container.count_nonzero", "ivy.count_nonzero", "ivy.Container.static_count_nonzero", "Creation", "eye_like", "hamming_window", "hann_window", "kaiser_bessel_derived_window", "kaiser_window", "tril_indices", "triu_indices", "vorbis_window", "Data type", "is_native_dtype", "dct", "ivy.Array.dct", "ivy.Container.dct", "ivy.dct", "ivy.Container.static_dct", "Device", "dft", "ivy.Container.dft", "ivy.dft", "ivy.Container.static_dft", "diagflat", "ivy.Array.diagflat", "ivy.Container.diagflat", "ivy.diagflat", "ivy.Container.static_diagflat", "diff", "ivy.Array.diff", "ivy.Container.diff", "ivy.diff", "ivy.Container.static_diff", "dirichlet", "ivy.Array.dirichlet", "ivy.Container.dirichlet", "ivy.dirichlet", "ivy.Container.static_dirichlet", "dropout1d", "dropout3d", "dsplit", "ivy.Array.dsplit", "ivy.Container.dsplit", "ivy.dsplit", "ivy.Container.static_dsplit", "dstack", "ivy.Array.dstack", "ivy.Container.dstack", "ivy.dstack", "ivy.Container.static_dstack", "eig", "ivy.Array.eig", "ivy.Container.eig", "ivy.eig", "ivy.Container.static_eig", "eigh_tridiagonal", "ivy.Array.eigh_tridiagonal", "ivy.Container.eigh_tridiagonal", "ivy.eigh_tridiagonal", "ivy.Container.static_eigh_tridiagonal", "eigvals", "ivy.Array.eigvals", "ivy.Container.eigvals", "ivy.eigvals", "ivy.Container.static_eigvals", "Elementwise", "allclose", "angle", "binarizer", "conj", "copysign", "count_nonzero", "diff", "exp2", "fix", "float_power", "fmax", "fmin", "fmod", "gcd", "gradient", "hypot", "imag", "isclose", "lcm", "ldexp", "logaddexp2", "nan_to_num", "nansum", "nextafter", "real", "signbit", "sinc", "trapz", "xlogy", "zeta", "embedding", "ivy.Array.embedding", "ivy.Container.embedding", "ivy.embedding", "ivy.Container.static_embedding", "exp2", "ivy.Array.exp2", "ivy.Container.exp2", "ivy.exp2", "ivy.Container.static_exp2", "expand", "ivy.Array.expand", "ivy.Container.expand", "ivy.expand", "ivy.Container.static_expand", "eye_like", "ivy.Array.eye_like", "ivy.Container.eye_like", "ivy.eye_like", "ivy.Container.static_eye_like", "fft", "ivy.Array.fft", "ivy.Container.fft", "ivy.fft", "ivy.Container.static_fft", "fix", "ivy.Array.fix", "ivy.Container.fix", "ivy.fix", "ivy.Container.static_fix", "flatten", "ivy.Array.flatten", "ivy.Container.flatten", "ivy.flatten", "ivy.Container.static_flatten", "fliplr", "ivy.Array.fliplr", "ivy.Container.fliplr", "ivy.fliplr", "ivy.Container.static_fliplr", "flipud", "ivy.Array.flipud", "ivy.Container.flipud", "ivy.flipud", "ivy.Container.static_flipud", "float_power", "ivy.Array.float_power", "ivy.Container.float_power", "ivy.float_power", "ivy.Container.static_float_power", "fmax", "ivy.Array.fmax", "ivy.Container.fmax", "ivy.fmax", "ivy.Container.static_fmax", "fmin", "ivy.Array.fmin", "ivy.Container.fmin", "ivy.fmin", "ivy.Container.static_fmin", "fmod", "ivy.Array.fmod", "ivy.Container.fmod", "ivy.fmod", "ivy.Container.static_fmod", "gamma", "ivy.Array.gamma", "ivy.gamma", "gcd", "ivy.Array.gcd", "ivy.Container.gcd", "ivy.gcd", "ivy.Container.static_gcd", "General", "isin", "gradient", "ivy.Array.gradient", "ivy.Container.gradient", "ivy.gradient", "ivy.Container.static_gradient", "Gradients", "bind_custom_gradient_function", "hamming_window", "ivy.Container.hamming_window", "ivy.hamming_window", "ivy.Container.static_hamming_window", "hann_window", "ivy.Container.hann_window", "ivy.hann_window", "ivy.Container.static_hann_window", "heaviside", "ivy.Array.heaviside", "ivy.Container.heaviside", "ivy.heaviside", "ivy.Container.static_heaviside", "hsplit", "ivy.Array.hsplit", "ivy.Container.hsplit", "ivy.hsplit", "ivy.Container.static_hsplit", "hstack", "ivy.Array.hstack", "ivy.Container.hstack", "ivy.hstack", "ivy.Container.static_hstack", "hypot", "ivy.Array.hypot", "ivy.Container.hypot", "ivy.hypot", "ivy.Container.static_hypot", "i0", "ivy.Array.i0", "ivy.Container.i0", "ivy.i0", "ivy.Container.static_i0", "ifft", "ivy.Array.ifft", "ivy.Container.ifft", "ivy.ifft", "ivy.Container.static_ifft", "imag", "ivy.Array.imag", "ivy.Container.imag", "ivy.imag", "ivy.Container.static_imag", "instance_norm", "ivy.Array.instance_norm", "ivy.Container.instance_norm", "ivy.instance_norm", "ivy.Container.static_instance_norm", "interp", "interpolate", "ivy.Array.interpolate", "ivy.Container.interpolate", "ivy.interpolate", "ivy.Container.static_interpolate", "is_ivy_sparse_array", "is_native_dtype", "is_native_sparse_array", "isclose", "ivy.Array.isclose", "ivy.Container.isclose", "ivy.isclose", "ivy.Container.static_isclose", "isin", "ivy.Array.isin", "ivy.Container.isin", "ivy.isin", "ivy.Container.static_isin", "kaiser_bessel_derived_window", "ivy.Container.kaiser_bessel_derived_window", "ivy.kaiser_bessel_derived_window", "ivy.Container.static_kaiser_bessel_derived_window", "kaiser_window", "ivy.Container.kaiser_window", "ivy.kaiser_window", "ivy.Container.static_kaiser_window", "kron", "ivy.Array.kron", "ivy.Container.kron", "ivy.kron", "ivy.Container.static_kron", "l2_normalize", "ivy.Array.l2_normalize", "ivy.Container.l2_normalize", "ivy.l2_normalize", "ivy.Container.static_l2_normalize", "Layers", "avg_pool1d", "avg_pool2d", "avg_pool3d", "compute_weight_mat", "dct", "dft", "dropout1d", "dropout3d", "embedding", "fft", "ifft", "interp", "interpolate", "max_pool1d", "max_pool2d", "max_pool3d", "padding_ceil_mode", "lcm", "ivy.Array.lcm", "ivy.Container.lcm", "ivy.lcm", "ivy.Container.static_lcm", "ldexp", "ivy.Array.ldexp", "ivy.Container.ldexp", "ivy.ldexp", "ivy.Container.static_ldexp", "lexsort", "ivy.Array.lexsort", "ivy.Container.lexsort", "ivy.lexsort", "ivy.Container.static_lexsort", "Linear algebra", "adjoint", "diagflat", "eig", "eigh_tridiagonal", "eigvals", "kron", "matrix_exp", "multi_dot", "logaddexp2", "ivy.Array.logaddexp2", "ivy.Container.logaddexp2", "ivy.logaddexp2", "ivy.Container.static_logaddexp2", "logit", "ivy.Array.logit", "ivy.Container.logit", "ivy.logit", "ivy.Container.static_logit", "Losses", "binary_cross_entropy_with_logits", "lp_normalize", "ivy.Array.lp_normalize", "ivy.Container.lp_normalize", "ivy.lp_normalize", "ivy.Container.static_lp_normalize", "Manipulation", "atleast_1d", "atleast_2d", "atleast_3d", "broadcast_shapes", "dsplit", "dstack", "expand", "flatten", "fliplr", "flipud", "heaviside", "hsplit", "hstack", "i0", "moveaxis", "ndenumerate", "ndindex", "pad", "rot90", "take_along_axis", "top_k", "vsplit", "vstack", "matrix_exp", "ivy.Array.matrix_exp", "ivy.Container.matrix_exp", "ivy.matrix_exp", "ivy.Container.static_matrix_exp", "max_pool1d", "ivy.Array.max_pool1d", "ivy.Container.max_pool1d", "ivy.max_pool1d", "ivy.Container.static_max_pool1d", "max_pool2d", "ivy.Array.max_pool2d", "ivy.Container.max_pool2d", "ivy.max_pool2d", "ivy.Container.static_max_pool2d", "max_pool3d", "ivy.Array.max_pool3d", "ivy.Container.max_pool3d", "ivy.max_pool3d", "ivy.Container.static_max_pool3d", "median", "ivy.Array.median", "ivy.Container.median", "ivy.median", "ivy.Container.static_median", "Meta", "moveaxis", "ivy.Array.moveaxis", "ivy.Container.moveaxis", "ivy.moveaxis", "ivy.Container.static_moveaxis", "msort", "ivy.Array.msort", "ivy.Container.msort", "ivy.msort", "ivy.Container.static_msort", "multi_dot", "nan_to_num", "ivy.Array.nan_to_num", "ivy.Container.nan_to_num", "ivy.nan_to_num", "ivy.Container.static_nan_to_num", "nanmean", "ivy.Array.nanmean", "ivy.Container.nanmean", "ivy.nanmean", "ivy.Container.static_nanmean", "nanmedian", "ivy.Array.nanmedian", "ivy.Container.nanmedian", "ivy.nanmedian", "ivy.Container.static_nanmedian", "nansum", "ivy.Array.nansum", "ivy.Container.nansum", "ivy.nansum", "ivy.Container.static_nansum", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "ndenumerate", "ndindex", "Nest", "nextafter", "ivy.Array.nextafter", "ivy.Container.nextafter", "ivy.nextafter", "ivy.Container.static_nextafter", "Norms", "instance_norm", "l2_normalize", "lp_normalize", "pad", "ivy.Array.pad", "ivy.Container.pad", "ivy.pad", "ivy.Container.static_pad", "padding_ceil_mode", "poisson", "ivy.Array.poisson", "ivy.Container.poisson", "ivy.poisson", "ivy.Container.static_poisson", "prelu", "ivy.Array.prelu", "ivy.Container.prelu", "ivy.prelu", "ivy.Container.static_prelu", "quantile", "ivy.Array.quantile", "ivy.Container.quantile", "ivy.quantile", "ivy.Container.static_quantile", "Random", "bernoulli", "beta", "dirichlet", "gamma", "poisson", "real", "ivy.Array.real", "ivy.Container.real", "ivy.real", "ivy.Container.static_real", "relu6", "ivy.Array.relu6", "ivy.Container.relu6", "ivy.relu6", "ivy.Container.static_relu6", "rot90", "ivy.Array.rot90", "ivy.Container.rot90", "ivy.rot90", "ivy.Container.static_rot90", "Searching", "Set", "signbit", "ivy.Array.signbit", "ivy.Container.signbit", "ivy.signbit", "ivy.Container.static_signbit", "sinc", "ivy.Array.sinc", "ivy.Container.sinc", "ivy.sinc", "ivy.Container.static_sinc", "Sorting", "lexsort", "msort", "Sparse array", "NativeSparseArray", "SparseArray", "is_ivy_sparse_array", "is_native_sparse_array", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "Statistical", "bincount", "corrcoef", "median", "nanmean", "nanmedian", "quantile", "unravel_index", "take_along_axis", "ivy.Container.static_take_along_axis", "ivy.Array.take_along_axis", "ivy.Container.take_along_axis", "ivy.take_along_axis", "thresholded_relu", "ivy.Container.static_thresholded_relu", "ivy.Array.thresholded_relu", "ivy.Container.thresholded_relu", "ivy.thresholded_relu", "top_k", "ivy.Container.static_top_k", "ivy.Array.top_k", "ivy.Container.top_k", "ivy.top_k", "trapz", "ivy.Array.trapz", "ivy.trapz", "tril_indices", "ivy.Container.static_tril_indices", "ivy.Container.tril_indices", "ivy.tril_indices", "triu_indices", "ivy.Container.static_triu_indices", "ivy.Container.triu_indices", "ivy.triu_indices", "unravel_index", "ivy.Container.static_unravel_index", "ivy.Array.unravel_index", "ivy.Container.unravel_index", "ivy.unravel_index", "Utility", "vorbis_window", "ivy.Container.static_vorbis_window", "ivy.Container.vorbis_window", "ivy.vorbis_window", "vsplit", "ivy.Container.static_vsplit", "ivy.Array.vsplit", "ivy.Container.vsplit", "ivy.vsplit", "vstack", "ivy.Container.static_vstack", "ivy.Array.vstack", "ivy.Container.vstack", "ivy.vstack", "xlogy", "ivy.Container.static_xlogy", "ivy.Array.xlogy", "ivy.Container.xlogy", "ivy.xlogy", "zeta", "ivy.Container.static_zeta", "ivy.Array.zeta", "ivy.Container.zeta", "ivy.zeta", "&lt;no title&gt;", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.Container.array_equal", "ivy.array_equal", "ivy.Container.static_array_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_show_func_wrapper_trace_mode", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_show_func_wrapper_trace_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "unset_show_func_wrapper_trace_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "GradientTracking", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Array.conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "ivy.Array.diag", "ivy.Container.diag", "ivy.diag", "ivy.Container.static_diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eig", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "ivy.Container.static_eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.Container.eigvalsh", "ivy.eigvalsh", "ivy.Container.static_eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "lu_factor", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Array.matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Container.tensordot", "ivy.tensordot", "tensorsolve", "ivy.Array.tensorsolve", "ivy.Container.tensorsolve", "ivy.tensorsolve", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "duplicate_array_index_chains", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_empty", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "ivy.Container.static_prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "Nested array", "NestedArray", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "ModuleConverters", "to_ivy_module", "Helpers", "ModuleHelpers", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Assertions", "assert_all_close", "assert_same_type_and_shape", "check_unsupported_device", "check_unsupported_device_and_dtype", "check_unsupported_dtype", "test_unsupported_function", "value_test", "Available frameworks", "available_frameworks", "ground_truth", "Function testing", "args_to_container", "as_cont", "as_lists", "convtrue", "create_args_kwargs", "create_frontend_args_kwargs", "empty_func", "flatten", "flatten_and_to_np", "flatten_fw_and_to_np", "framework_comparator", "get_frontend_ret", "get_ret_and_flattened_np_array", "gradient_incompatible_function", "gradient_test", "gradient_unsupported_dtypes", "kwargs_to_args_n_kwargs", "make_json_pickable", "test_frontend_function", "test_frontend_method", "test_function", "test_method", "var_fn", "Globals", "InterruptedTest", "TestData", "remove_all_current_framework", "setup_api_test", "setup_frontend_test", "teardown_api_test", "teardown_frontend_test", "Hypothesis helpers", "Array helpers", "array_and_broadcastable_shape", "array_bools", "array_indices_axis", "array_values", "arrays_and_axes", "arrays_for_pooling", "broadcast_shapes", "dtype_and_values", "dtype_values_axis", "list_of_size", "lists", "mutually_broadcastable_shapes", "prod", "Dtype helpers", "array_dtypes", "get_castable_dtype", "get_dtypes", "make_json_pickable", "General helpers", "apply_safety_factor", "embedding_helper", "get_axis", "get_bounds", "get_mean_std", "get_shape", "matrix_is_stable", "reshape_shapes", "subsets", "x_and_filters", "Number helpers", "floats", "ints", "number", "Structs", "FrontendMethodData", "Test parameter flags", "FrontendFunctionTestFlags", "FrontendMethodTestFlags", "FunctionTestFlags", "MethodTestFlags", "build_flag", "frontend_function_flags", "frontend_method_flags", "function_flags", "method_flags", "Testing helpers", "handle_frontend_method", "handle_frontend_test", "handle_method", "handle_test", "num_positional_args", "num_positional_args_method", "seed", "&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_dimensions", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_inplace_sizes_valid", "check_isinstance", "check_kernel_padding_size", "check_less", "check_one_way_broadcastable", "check_same_dtype", "check_shape", "check_shapes_broadcastable", "check_true", "Backend", "Ast helpers", "ImportTransformer", "IvyLoader", "IvyPathFinder", "Handler", "ContextManager", "choose_random_backend", "clear_backend_stack", "convert_from_numpy_to_target_backend", "convert_from_source_backend_to_numpy", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "prevent_access_locally", "set_backend", "set_backend_to_specific_version", "set_jax_backend", "set_numpy_backend", "set_tensorflow_backend", "set_torch_backend", "unset_backend", "with_backend", "Dynamic import", "import_module", "Inspection", "add_array_specs", "fn_array_spec", "Verbosity", "cprint"], "terms": {"version": [0, 2, 3, 4, 10, 11, 14, 15, 31, 79, 115, 116, 119, 127, 132, 150, 171, 172, 865, 866, 867, 868, 869, 933, 939, 1234, 1235, 1236, 1237, 1238, 1261, 1265, 1301, 1302, 1303, 1304, 1305, 1349, 1352, 1355, 1414, 1608, 1711, 1738, 1741, 1743, 1746, 2126, 2140, 2141, 2197, 2205, 2207, 2210, 2312, 2319, 2323], "ml": [1, 3, 4, 5, 8, 126, 131, 132, 133, 135, 136, 137, 148, 2126, 2130, 2131, 2132, 2133, 2134, 2137, 2139, 2141], "explos": [1, 3, 2126], "A": [1, 2, 3, 4, 7, 8, 9, 10, 23, 24, 25, 26, 31, 32, 33, 44, 45, 48, 49, 56, 57, 58, 59, 62, 65, 66, 67, 68, 73, 74, 77, 78, 79, 80, 81, 88, 89, 92, 93, 96, 97, 100, 101, 106, 107, 110, 114, 116, 117, 120, 122, 123, 126, 127, 128, 132, 135, 149, 219, 240, 241, 269, 270, 272, 305, 318, 319, 320, 321, 322, 410, 411, 414, 435, 445, 661, 665, 676, 679, 686, 689, 701, 704, 779, 781, 783, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 838, 839, 840, 842, 870, 871, 876, 877, 901, 902, 903, 904, 905, 923, 925, 926, 933, 956, 974, 977, 979, 980, 981, 982, 1029, 1030, 1031, 1103, 1104, 1105, 1107, 1164, 1168, 1172, 1190, 1197, 1209, 1211, 1250, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1322, 1325, 1349, 1354, 1355, 1367, 1369, 1371, 1375, 1378, 1379, 1382, 1414, 1422, 1424, 1426, 1505, 1507, 1510, 1512, 1565, 1567, 1569, 1570, 1572, 1574, 1581, 1582, 1583, 1584, 1609, 1645, 1647, 1686, 1689, 1711, 1732, 1734, 1736, 1753, 1755, 1757, 1758, 1779, 1781, 1783, 1784, 1787, 1804, 1807, 1809, 1810, 1812, 1813, 1868, 1869, 1871, 1873, 1884, 1886, 1888, 1894, 1896, 1898, 1914, 1915, 1917, 1924, 1927, 1953, 1954, 1957, 1959, 1961, 1962, 1963, 1964, 1965, 1969, 1970, 1971, 1972, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2032, 2033, 2035, 2068, 2079, 2080, 2082, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2134, 2135, 2149, 2150, 2151, 2155, 2156, 2157, 2159, 2160, 2183, 2184, 2186, 2193, 2197, 2202, 2203, 2221, 2230, 2232, 2233, 2234, 2238, 2239, 2240, 2241, 2244, 2245, 2246, 2249, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2260, 2261, 2262, 2263, 2276, 2277, 2278, 2279, 2280, 2281, 2282], "huge": [1, 3, 115, 135, 2126, 2134, 2140], "number": [1, 2, 10, 11, 13, 16, 17, 23, 24, 25, 26, 29, 30, 31, 32, 33, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 62, 65, 66, 67, 68, 71, 72, 73, 74, 77, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 114, 115, 116, 117, 118, 125, 128, 130, 132, 135, 213, 219, 221, 222, 240, 241, 249, 252, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 272, 274, 275, 276, 277, 278, 305, 318, 319, 320, 321, 322, 335, 336, 338, 339, 340, 342, 343, 348, 349, 352, 360, 363, 367, 370, 372, 374, 376, 379, 381, 384, 386, 389, 393, 394, 395, 396, 397, 410, 427, 428, 429, 445, 461, 464, 481, 484, 521, 524, 541, 543, 566, 569, 571, 574, 601, 602, 603, 604, 605, 661, 664, 666, 668, 670, 691, 694, 706, 709, 711, 714, 716, 719, 756, 760, 779, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 799, 800, 801, 802, 834, 835, 836, 837, 838, 839, 840, 842, 855, 856, 858, 859, 865, 866, 867, 868, 869, 870, 876, 877, 896, 897, 898, 899, 900, 933, 934, 935, 938, 939, 940, 950, 951, 955, 956, 958, 1084, 1085, 1086, 1087, 1088, 1103, 1106, 1183, 1184, 1190, 1191, 1193, 1208, 1209, 1211, 1251, 1252, 1253, 1254, 1255, 1266, 1269, 1285, 1288, 1312, 1314, 1315, 1316, 1322, 1323, 1324, 1325, 1326, 1367, 1368, 1369, 1370, 1371, 1375, 1378, 1379, 1382, 1414, 1466, 1467, 1468, 1469, 1470, 1487, 1490, 1491, 1492, 1493, 1494, 1542, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1591, 1593, 1595, 1603, 1607, 1608, 1647, 1648, 1679, 1680, 1686, 1687, 1688, 1689, 1690, 1701, 1704, 1711, 1737, 1738, 1741, 1743, 1746, 1774, 1775, 1776, 1777, 1778, 1799, 1800, 1801, 1802, 1803, 1809, 1810, 1811, 1812, 1813, 1832, 1833, 1834, 1835, 1836, 1837, 1841, 1868, 1869, 1870, 1871, 1872, 1873, 1879, 1880, 1881, 1882, 1883, 1884, 1887, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1924, 1927, 1934, 1935, 1936, 1937, 1938, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1978, 1979, 1980, 1981, 1982, 1983, 1999, 2005, 2021, 2022, 2023, 2024, 2025, 2031, 2032, 2036, 2037, 2038, 2039, 2040, 2041, 2068, 2069, 2072, 2074, 2077, 2083, 2086, 2087, 2088, 2090, 2091, 2094, 2095, 2098, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2128, 2129, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2158, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2170, 2171, 2172, 2197, 2202, 2217, 2219, 2230, 2233, 2234, 2238, 2239, 2244, 2245, 2249, 2252, 2256, 2257, 2261, 2276, 2278, 2280, 2281, 2282], "tool": [1, 4, 11, 118, 133, 137, 148, 149, 2126, 2132, 2133, 2134, 2135, 2137, 2140, 2141], "have": [1, 2, 3, 4, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 148, 149, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 274, 275, 276, 277, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 349, 352, 410, 436, 437, 438, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 772, 773, 774, 777, 794, 797, 799, 802, 804, 805, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 849, 850, 851, 852, 853, 870, 871, 887, 889, 891, 894, 906, 907, 908, 911, 923, 924, 925, 926, 927, 933, 936, 937, 953, 958, 960, 963, 964, 967, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 1029, 1030, 1031, 1069, 1070, 1079, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1147, 1154, 1157, 1159, 1162, 1164, 1165, 1166, 1168, 1170, 1171, 1172, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1195, 1209, 1211, 1214, 1217, 1219, 1220, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1250, 1281, 1282, 1283, 1284, 1291, 1292, 1294, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1349, 1356, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1383, 1384, 1385, 1386, 1387, 1408, 1412, 1413, 1414, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1515, 1517, 1519, 1521, 1525, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1944, 1945, 1946, 1947, 1948, 1949, 1953, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2019, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2068, 2069, 2072, 2074, 2077, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2146, 2149, 2150, 2151, 2159, 2161, 2173, 2175, 2177, 2183, 2230, 2233], "explod": [1, 2, 2126, 2151, 2155], "onto": [1, 2, 1953, 1960, 1966, 2126, 2134], "scene": [1, 2, 34, 35, 110, 131, 133, 1621, 1622, 2126, 2134], "b": [1, 4, 5, 13, 16, 17, 29, 30, 31, 32, 33, 38, 39, 46, 47, 56, 57, 62, 63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 114, 115, 118, 123, 127, 131, 132, 133, 135, 136, 137, 147, 169, 171, 173, 174, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 199, 201, 202, 204, 206, 207, 211, 219, 231, 233, 240, 241, 248, 249, 251, 252, 253, 259, 261, 263, 274, 276, 277, 278, 282, 285, 300, 304, 305, 313, 315, 316, 317, 318, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 344, 345, 346, 376, 378, 380, 381, 384, 393, 395, 397, 417, 419, 421, 436, 437, 439, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 555, 556, 558, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 742, 744, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 769, 772, 773, 774, 778, 779, 780, 781, 782, 783, 784, 786, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 824, 827, 834, 835, 836, 837, 838, 842, 844, 845, 847, 849, 851, 852, 853, 855, 857, 859, 865, 867, 869, 870, 871, 881, 883, 884, 885, 896, 898, 900, 901, 903, 905, 906, 908, 910, 912, 913, 915, 917, 923, 925, 926, 927, 933, 934, 937, 949, 950, 951, 958, 960, 969, 971, 973, 979, 981, 982, 983, 984, 986, 988, 989, 991, 993, 994, 996, 998, 999, 1001, 1003, 1004, 1006, 1008, 1009, 1011, 1013, 1014, 1016, 1018, 1019, 1021, 1023, 1024, 1026, 1028, 1032, 1034, 1036, 1039, 1041, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1056, 1058, 1059, 1061, 1063, 1064, 1066, 1069, 1071, 1072, 1073, 1074, 1076, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1093, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1130, 1131, 1136, 1138, 1149, 1151, 1153, 1154, 1156, 1158, 1159, 1160, 1162, 1164, 1168, 1170, 1172, 1173, 1175, 1177, 1178, 1180, 1182, 1183, 1184, 1185, 1187, 1189, 1190, 1208, 1211, 1219, 1221, 1223, 1224, 1226, 1228, 1229, 1231, 1233, 1234, 1236, 1238, 1240, 1242, 1244, 1250, 1251, 1253, 1255, 1261, 1265, 1266, 1268, 1270, 1276, 1278, 1280, 1285, 1288, 1291, 1293, 1295, 1301, 1303, 1305, 1306, 1308, 1312, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1324, 1326, 1329, 1331, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1357, 1358, 1360, 1362, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1383, 1384, 1386, 1389, 1390, 1391, 1393, 1394, 1396, 1398, 1399, 1401, 1403, 1404, 1406, 1408, 1409, 1411, 1414, 1415, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1433, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1445, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1468, 1470, 1473, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1490, 1491, 1492, 1493, 1494, 1499, 1501, 1502, 1503, 1505, 1507, 1508, 1509, 1510, 1512, 1513, 1514, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1544, 1546, 1547, 1549, 1551, 1552, 1553, 1565, 1567, 1568, 1569, 1575, 1578, 1579, 1586, 1587, 1589, 1590, 1591, 1592, 1594, 1595, 1603, 1604, 1606, 1609, 1611, 1613, 1614, 1615, 1617, 1618, 1621, 1623, 1624, 1626, 1628, 1629, 1634, 1636, 1637, 1639, 1640, 1642, 1643, 1647, 1649, 1651, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1681, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1701, 1704, 1706, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1724, 1725, 1732, 1734, 1735, 1736, 1743, 1745, 1746, 1747, 1748, 1751, 1753, 1755, 1756, 1757, 1759, 1761, 1762, 1763, 1764, 1766, 1767, 1768, 1769, 1772, 1774, 1776, 1777, 1778, 1779, 1781, 1782, 1783, 1784, 1787, 1799, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1830, 1831, 1832, 1833, 1835, 1842, 1843, 1845, 1846, 1852, 1853, 1855, 1856, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1868, 1869, 1871, 1872, 1873, 1879, 1881, 1882, 1883, 1884, 1886, 1887, 1888, 1889, 1891, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1916, 1918, 1919, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1937, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1947, 1948, 1953, 1957, 1960, 1961, 1962, 1963, 1965, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2008, 2010, 2011, 2013, 2014, 2015, 2016, 2018, 2019, 2020, 2021, 2024, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2035, 2037, 2038, 2040, 2041, 2042, 2043, 2045, 2046, 2052, 2053, 2055, 2056, 2057, 2063, 2065, 2066, 2067, 2068, 2069, 2071, 2072, 2073, 2074, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2085, 2086, 2087, 2089, 2090, 2091, 2093, 2094, 2095, 2097, 2098, 2099, 2100, 2102, 2103, 2104, 2108, 2109, 2110, 2112, 2113, 2114, 2115, 2117, 2118, 2119, 2120, 2122, 2123, 2124, 2126, 2130], "why": [1, 3, 11, 125, 134, 2126], "unifi": [1, 3, 65, 66, 110, 111, 112, 116, 120, 126, 130, 132, 149, 410, 435, 2126, 2130, 2131, 2132, 2134, 2138, 2141], "should": [1, 3, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 23, 24, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 56, 57, 62, 63, 64, 65, 66, 67, 68, 71, 72, 77, 78, 79, 82, 83, 86, 87, 88, 89, 92, 93, 96, 97, 98, 99, 102, 103, 104, 105, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 169, 182, 183, 184, 186, 202, 203, 204, 206, 212, 213, 219, 264, 265, 267, 274, 275, 276, 277, 278, 287, 289, 291, 292, 294, 296, 305, 323, 326, 392, 410, 412, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 541, 542, 543, 544, 545, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 684, 686, 687, 688, 690, 691, 692, 693, 694, 695, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 771, 819, 820, 821, 822, 823, 824, 826, 828, 829, 833, 843, 906, 907, 933, 958, 960, 961, 984, 985, 986, 987, 988, 1044, 1045, 1079, 1080, 1081, 1082, 1083, 1131, 1138, 1139, 1141, 1142, 1154, 1156, 1158, 1190, 1205, 1208, 1240, 1241, 1242, 1243, 1244, 1285, 1288, 1296, 1297, 1299, 1306, 1307, 1312, 1313, 1314, 1315, 1316, 1334, 1335, 1336, 1337, 1338, 1372, 1373, 1374, 1413, 1414, 1432, 1515, 1516, 1518, 1608, 1609, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1647, 1648, 1679, 1680, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1732, 1733, 1734, 1735, 1736, 1743, 1745, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1852, 1868, 1904, 1905, 1906, 1908, 1949, 1953, 1973, 1978, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2021, 2022, 2023, 2025, 2026, 2027, 2028, 2029, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2055, 2057, 2068, 2069, 2072, 2074, 2077, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2126, 2130, 2131, 2134, 2136, 2141, 2143, 2146, 2149, 2150, 2151, 2156, 2161, 2173, 2175, 2177, 2183, 2197, 2217, 2219, 2221, 2249, 2256], "we": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 31, 60, 61, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 148, 149, 843, 1044, 1045, 1190, 1211, 1367, 1368, 1369, 1370, 1371, 1414, 1448, 1451, 1575, 1579, 1609, 1619, 1620, 1625, 1645, 2125, 2126, 2130, 2134, 2135, 2139, 2140, 2149, 2150, 2173, 2174, 2312, 2320, 2322, 2323, 2328], "try": [1, 3, 4, 7, 9, 10, 11, 65, 66, 111, 112, 114, 115, 116, 120, 121, 125, 126, 127, 132, 134, 149, 1414, 1596, 2126, 2151, 2159, 2312, 2318], "them": [1, 2, 3, 4, 7, 9, 11, 111, 112, 113, 114, 115, 120, 124, 125, 126, 127, 128, 132, 134, 135, 136, 149, 1414, 1432, 1543, 2125, 2126, 2131, 2132, 2134, 2136, 2140, 2230, 2241], "c": [1, 3, 4, 5, 10, 31, 32, 33, 34, 35, 38, 39, 44, 45, 56, 57, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 104, 105, 110, 114, 118, 123, 130, 131, 132, 133, 135, 149, 219, 259, 261, 274, 276, 277, 278, 305, 313, 317, 349, 351, 352, 353, 360, 362, 363, 364, 445, 511, 514, 616, 618, 619, 620, 621, 623, 624, 625, 681, 684, 716, 718, 719, 774, 776, 778, 789, 791, 793, 794, 796, 798, 799, 801, 803, 844, 845, 847, 913, 917, 918, 920, 922, 928, 930, 932, 984, 986, 988, 994, 995, 996, 997, 998, 1064, 1068, 1079, 1081, 1083, 1089, 1090, 1092, 1164, 1172, 1190, 1198, 1250, 1281, 1282, 1398, 1399, 1414, 1422, 1423, 1424, 1425, 1426, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1459, 1461, 1490, 1492, 1494, 1505, 1507, 1510, 1512, 1591, 1594, 1595, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1647, 1649, 1650, 1654, 1655, 1657, 1659, 1662, 1664, 1666, 1667, 1668, 1669, 1672, 1674, 1676, 1677, 1678, 1711, 1743, 1746, 1747, 1753, 1756, 1868, 1884, 1888, 1904, 1905, 1906, 1907, 1908, 1924, 1927, 1953, 1957, 1961, 1962, 1963, 1965, 1971, 1972, 2005, 2021, 2024, 2068, 2074, 2076, 2077, 2078, 2079, 2080, 2082, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2125, 2126, 2130, 2134, 2138, 2139, 2141], "standard": [1, 29, 30, 31, 40, 41, 46, 47, 48, 49, 56, 57, 77, 78, 79, 94, 95, 96, 97, 104, 105, 110, 111, 112, 114, 116, 119, 122, 125, 128, 129, 149, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 264, 267, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 349, 352, 360, 363, 393, 396, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 918, 921, 1089, 1090, 1091, 1092, 1093, 1164, 1167, 1281, 1282, 1414, 1608, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1846, 1868, 1874, 1877, 1884, 1887, 1889, 1892, 1894, 1897, 1904, 1907, 1909, 1912, 1919, 1922, 1924, 1927, 1944, 1948, 1973, 1974, 1975, 1976, 1977, 1978, 1989, 1990, 1991, 1992, 1993, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2118, 2120, 2123, 2126, 2130, 2132, 2133, 2136, 2137, 2139, 2151, 2156, 2175, 2176, 2249, 2254], "re": [1, 2, 3, 5, 9, 10, 11, 32, 33, 50, 51, 98, 99, 110, 111, 116, 125, 126, 129, 130, 134, 137, 149, 410, 435, 1414, 1432, 1448, 1449, 1451, 1711, 1819, 1822, 1868, 1909, 1912, 2005, 2016, 2017, 2018, 2019, 2020, 2026, 2027, 2028, 2029, 2030, 2126, 2134], "collabor": [1, 2, 3, 2126], "Theconsortium": [1, 3, 2126], "python": [1, 2, 3, 7, 8, 10, 11, 31, 48, 49, 79, 96, 97, 111, 112, 114, 115, 120, 121, 126, 128, 130, 132, 134, 135, 149, 219, 221, 222, 410, 430, 444, 445, 706, 709, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 901, 902, 903, 904, 905, 1029, 1030, 1031, 1291, 1292, 1293, 1294, 1295, 1306, 1307, 1308, 1309, 1310, 1311, 1414, 1608, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2125, 2126, 2131, 2134, 2135, 2136, 2140, 2141, 2312, 2328], "data": [1, 3, 10, 13, 16, 17, 23, 24, 26, 29, 30, 31, 32, 33, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 66, 67, 68, 71, 72, 74, 77, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 117, 119, 122, 123, 124, 125, 127, 129, 130, 132, 134, 219, 221, 222, 224, 225, 226, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 311, 312, 313, 314, 315, 316, 317, 323, 326, 328, 329, 330, 331, 332, 334, 344, 346, 348, 349, 350, 352, 354, 355, 357, 358, 360, 361, 363, 365, 366, 367, 370, 372, 374, 376, 379, 381, 384, 386, 389, 391, 398, 399, 400, 401, 403, 409, 410, 412, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 768, 769, 770, 771, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 870, 871, 872, 873, 874, 875, 878, 880, 891, 894, 901, 902, 903, 904, 905, 906, 907, 918, 921, 933, 936, 958, 960, 979, 980, 981, 982, 983, 1029, 1030, 1031, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1089, 1090, 1091, 1092, 1093, 1101, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1131, 1138, 1139, 1164, 1166, 1167, 1178, 1181, 1190, 1210, 1256, 1257, 1258, 1259, 1260, 1271, 1281, 1282, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1334, 1335, 1336, 1337, 1338, 1342, 1344, 1347, 1349, 1353, 1355, 1357, 1361, 1389, 1390, 1391, 1392, 1414, 1466, 1468, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1534, 1535, 1536, 1537, 1538, 1575, 1577, 1578, 1579, 1647, 1648, 1679, 1680, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1732, 1733, 1735, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1868, 1874, 1877, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1919, 1922, 1924, 1927, 1944, 1948, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2038, 2039, 2040, 2043, 2044, 2045, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2068, 2069, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2129, 2134, 2135, 2136, 2138, 2139, 2140, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2186, 2190, 2191, 2197, 2202, 2203, 2216, 2217, 2218, 2219, 2221, 2230, 2232, 2233, 2234, 2238, 2239, 2241, 2244, 2245, 2246, 2247, 2249, 2250, 2252, 2253, 2254, 2255, 2257, 2258, 2260, 2261, 2262, 2263, 2276, 2281, 2282, 2285, 2298, 2305], "api": [1, 2, 10, 29, 30, 40, 41, 77, 78, 110, 112, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 149, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 264, 267, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 349, 352, 360, 363, 391, 393, 396, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 918, 921, 1164, 1167, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1846, 1868, 1874, 1877, 1884, 1887, 1889, 1892, 1894, 1897, 1904, 1907, 1909, 1912, 1919, 1922, 1924, 1927, 1944, 1948, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123, 2125, 2126, 2130, 2132, 2134, 2136, 2139, 2141], "open": [2, 3, 4, 5, 7, 10, 11, 48, 49, 96, 97, 116, 119, 126, 127, 130, 148, 219, 221, 222, 1978, 1984, 1985, 1986, 1987, 1988, 1994, 1997, 2126, 2132, 2133, 2134, 2136, 2137], "sourc": [2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 126, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2128, 2129, 2133, 2134, 2135, 2136, 2137, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336], "project": [2, 3, 4, 7, 10, 11, 112, 113, 128, 136, 148, 149, 2130, 2132, 2134, 2137, 2141], "ha": [2, 3, 4, 9, 11, 23, 24, 31, 40, 41, 44, 45, 52, 53, 56, 57, 65, 66, 73, 74, 79, 80, 81, 88, 89, 92, 93, 100, 101, 104, 105, 111, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 148, 149, 219, 264, 265, 267, 372, 375, 376, 380, 410, 416, 445, 446, 449, 601, 604, 691, 694, 711, 714, 860, 861, 933, 958, 1095, 1096, 1097, 1098, 1099, 1131, 1144, 1190, 1210, 1312, 1315, 1357, 1359, 1361, 1499, 1501, 1503, 1609, 1638, 1646, 1711, 1759, 1762, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1827, 1828, 1829, 1830, 1831, 1868, 1884, 1885, 1886, 1887, 1888, 1919, 1922, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2068, 2069, 2072, 2074, 2077, 2087, 2090, 2095, 2098, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2130, 2133, 2134, 2136, 2137, 2140, 2149, 2150, 2230, 2234, 2238, 2239, 2260, 2263, 2312, 2318, 2320], "grown": 2, "consider": [2, 118, 122, 130, 2131, 2132], "recent": [2, 3, 10, 11, 128], "year": [2, 4, 111, 149, 2126, 2134], "especi": [2, 10, 130, 2134], "deep": [2, 5, 8, 9, 11, 65, 66, 111, 114, 116, 127, 131, 134, 135, 1414, 1448, 1451, 2126, 2132, 2134, 2137, 2138, 2140, 2141], "learn": [2, 3, 5, 8, 9, 10, 34, 35, 82, 83, 110, 111, 123, 131, 148, 1414, 1448, 1451, 1609, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1949, 1950, 1951, 1952, 2125, 2126, 2132, 2136, 2137, 2138, 2139, 2140, 2141, 2177, 2178, 2179, 2180, 2181, 2182], "can": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 23, 24, 25, 26, 31, 40, 41, 44, 45, 48, 49, 52, 53, 73, 74, 79, 88, 89, 92, 93, 96, 97, 100, 101, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 148, 149, 219, 224, 225, 226, 259, 260, 262, 269, 272, 305, 328, 329, 330, 331, 332, 410, 414, 433, 434, 435, 769, 771, 824, 827, 870, 871, 887, 889, 901, 904, 979, 982, 1037, 1038, 1095, 1096, 1097, 1098, 1099, 1108, 1109, 1110, 1111, 1112, 1131, 1137, 1144, 1159, 1162, 1296, 1297, 1299, 1306, 1308, 1309, 1339, 1340, 1414, 1608, 1609, 1619, 1711, 1732, 1734, 1736, 1759, 1760, 1762, 1809, 1810, 1811, 1812, 1813, 1827, 1828, 1829, 1830, 1868, 1904, 1905, 1906, 1907, 1908, 1924, 1925, 1926, 1928, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2032, 2033, 2034, 2035, 2125, 2126, 2131, 2132, 2133, 2134, 2135, 2137, 2138, 2140, 2141, 2197, 2217, 2219, 2230, 2231, 2233, 2234, 2238, 2239, 2244, 2245, 2249, 2252, 2253, 2254, 2260, 2261, 2262, 2263, 2276, 2281, 2282], "seen": [2, 3, 115, 118, 120, 126, 128, 132, 134, 135, 901, 904, 1306, 1309, 2140, 2312, 2328], "from": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 96, 97, 98, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 148, 149, 219, 221, 222, 224, 225, 235, 236, 238, 243, 246, 248, 249, 250, 251, 252, 253, 264, 267, 269, 270, 272, 282, 283, 284, 285, 286, 300, 301, 302, 303, 304, 305, 328, 329, 330, 331, 332, 376, 377, 392, 393, 394, 395, 396, 397, 410, 416, 425, 429, 434, 435, 445, 536, 537, 538, 539, 540, 696, 697, 698, 699, 700, 731, 734, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 855, 856, 857, 858, 859, 870, 871, 876, 877, 901, 904, 906, 907, 908, 910, 912, 933, 938, 943, 944, 945, 948, 958, 963, 979, 980, 981, 982, 983, 1009, 1012, 1014, 1017, 1019, 1022, 1029, 1030, 1031, 1039, 1040, 1041, 1042, 1059, 1060, 1061, 1063, 1069, 1070, 1131, 1138, 1139, 1190, 1208, 1209, 1210, 1285, 1288, 1291, 1292, 1294, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1322, 1325, 1357, 1361, 1375, 1378, 1379, 1382, 1393, 1394, 1396, 1408, 1410, 1412, 1414, 1432, 1445, 1446, 1447, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1486, 1543, 1559, 1581, 1584, 1608, 1609, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1644, 1647, 1649, 1651, 1653, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1701, 1704, 1711, 1732, 1733, 1734, 1735, 1736, 1809, 1811, 1813, 1827, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1841, 1868, 1874, 1875, 1877, 1889, 1890, 1891, 1892, 1893, 1904, 1905, 1906, 1907, 1908, 1919, 1922, 1949, 1950, 1951, 1952, 1953, 1955, 1966, 1967, 1968, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2005, 2011, 2012, 2013, 2014, 2015, 2026, 2028, 2030, 2031, 2032, 2036, 2042, 2046, 2068, 2069, 2070, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2095, 2098, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2130, 2132, 2133, 2134, 2135, 2136, 2138, 2139, 2140, 2141, 2146, 2147, 2148, 2149, 2150, 2151, 2153, 2154, 2155, 2158, 2159, 2161, 2169, 2172, 2173, 2174, 2177, 2181, 2186, 2187, 2193, 2197, 2216, 2217, 2218, 2219, 2230, 2232, 2233, 2234, 2238, 2239, 2240, 2241, 2244, 2245, 2246, 2247, 2249, 2252, 2253, 2254, 2255, 2257, 2258, 2260, 2261, 2262, 2263, 2276, 2281, 2282, 2312, 2318, 2320, 2322], "rapidli": 2, "increas": [2, 40, 41, 44, 45, 88, 89, 92, 93, 116, 120, 126, 129, 130, 1190, 1208, 1285, 1288, 1711, 1832, 1833, 1834, 1835, 1836, 1868, 1879, 1880, 1881, 1882, 1883, 1944, 1945, 1946, 1947, 1948, 1953, 1966, 2134, 2249, 2252, 2256], "github": [2, 6, 8, 9, 11, 111, 115, 116, 118, 119, 128], "repo": [2, 6, 7, 8, 11, 111, 115, 116, 126, 127, 128, 129], "contain": [2, 6, 7, 9, 10, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 56, 57, 58, 59, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 122, 123, 124, 125, 128, 131, 132, 133, 136, 149, 169, 171, 174, 177, 180, 182, 185, 187, 190, 192, 195, 197, 200, 202, 207, 210, 219, 221, 222, 224, 226, 231, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 252, 254, 257, 259, 260, 262, 264, 267, 269, 274, 275, 277, 279, 280, 282, 285, 287, 289, 291, 292, 294, 296, 297, 299, 300, 304, 305, 313, 316, 318, 319, 321, 323, 326, 328, 331, 335, 339, 344, 346, 349, 350, 352, 354, 357, 360, 361, 363, 367, 370, 372, 376, 381, 384, 386, 393, 396, 410, 417, 423, 424, 425, 429, 436, 445, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 763, 765, 769, 770, 771, 772, 773, 774, 779, 780, 784, 789, 794, 799, 804, 807, 809, 812, 814, 817, 819, 824, 829, 834, 836, 838, 843, 844, 849, 850, 852, 855, 860, 861, 865, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 882, 884, 887, 891, 896, 899, 901, 906, 907, 908, 913, 918, 921, 923, 924, 926, 928, 933, 937, 940, 958, 960, 964, 969, 974, 979, 982, 984, 985, 989, 994, 995, 997, 999, 1004, 1009, 1014, 1019, 1024, 1032, 1037, 1038, 1039, 1044, 1045, 1046, 1048, 1050, 1052, 1054, 1059, 1064, 1069, 1070, 1074, 1079, 1080, 1084, 1089, 1095, 1103, 1104, 1108, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1126, 1131, 1132, 1133, 1134, 1136, 1138, 1139, 1145, 1146, 1147, 1149, 1154, 1155, 1159, 1164, 1167, 1168, 1173, 1178, 1179, 1181, 1183, 1184, 1185, 1190, 1198, 1208, 1209, 1211, 1214, 1219, 1222, 1224, 1227, 1229, 1232, 1234, 1240, 1245, 1251, 1256, 1261, 1262, 1264, 1266, 1267, 1276, 1277, 1285, 1288, 1291, 1296, 1299, 1301, 1312, 1313, 1315, 1317, 1318, 1320, 1322, 1325, 1329, 1334, 1335, 1337, 1349, 1354, 1357, 1362, 1366, 1367, 1371, 1375, 1378, 1379, 1382, 1383, 1389, 1392, 1393, 1398, 1403, 1405, 1408, 1410, 1414, 1415, 1418, 1420, 1421, 1422, 1427, 1430, 1433, 1436, 1438, 1441, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1465, 1466, 1473, 1476, 1478, 1481, 1489, 1490, 1493, 1499, 1500, 1502, 1505, 1508, 1510, 1513, 1515, 1521, 1526, 1531, 1532, 1533, 1534, 1544, 1545, 1547, 1549, 1552, 1558, 1559, 1565, 1566, 1568, 1570, 1575, 1579, 1581, 1584, 1586, 1590, 1591, 1595, 1599, 1603, 1608, 1609, 1611, 1614, 1615, 1618, 1621, 1624, 1626, 1629, 1630, 1634, 1637, 1639, 1643, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1674, 1677, 1681, 1684, 1686, 1689, 1691, 1694, 1696, 1701, 1704, 1706, 1709, 1711, 1712, 1713, 1715, 1717, 1718, 1720, 1722, 1725, 1727, 1730, 1732, 1733, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1748, 1751, 1753, 1754, 1756, 1759, 1760, 1762, 1764, 1767, 1769, 1772, 1774, 1775, 1777, 1779, 1780, 1782, 1784, 1787, 1789, 1790, 1792, 1794, 1795, 1797, 1799, 1800, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1823, 1827, 1829, 1831, 1832, 1834, 1837, 1841, 1842, 1844, 1846, 1847, 1851, 1852, 1853, 1854, 1856, 1858, 1859, 1861, 1863, 1864, 1866, 1868, 1869, 1870, 1872, 1874, 1875, 1877, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1895, 1897, 1899, 1902, 1904, 1907, 1909, 1912, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 1949, 1950, 1951, 1952, 1953, 1957, 1961, 1962, 1963, 1967, 1971, 1972, 1973, 1974, 1977, 1978, 1979, 1982, 1984, 1989, 1994, 2000, 2003, 2005, 2006, 2007, 2009, 2011, 2012, 2014, 2016, 2019, 2021, 2022, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2039, 2041, 2042, 2044, 2046, 2047, 2051, 2052, 2053, 2056, 2058, 2063, 2066, 2068, 2069, 2072, 2074, 2075, 2077, 2079, 2082, 2083, 2084, 2086, 2087, 2088, 2090, 2091, 2092, 2094, 2095, 2096, 2098, 2100, 2101, 2103, 2104, 2108, 2109, 2111, 2113, 2114, 2115, 2116, 2118, 2120, 2121, 2123, 2125, 2126, 2134, 2135, 2140, 2149, 2150, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2170, 2171, 2172, 2173, 2174, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2186, 2187, 2193, 2197, 2199, 2216, 2218, 2219, 2230, 2234, 2266, 2269, 2276, 2280, 2312, 2322], "term": [2, 11, 114, 132, 1647, 1696, 1699, 2125, 2134, 2161, 2171], "over": [2, 4, 10, 11, 31, 40, 41, 56, 57, 58, 59, 60, 61, 73, 74, 79, 88, 89, 104, 105, 106, 107, 108, 109, 113, 118, 119, 125, 127, 132, 134, 149, 372, 375, 376, 380, 809, 811, 813, 933, 948, 956, 994, 995, 997, 1039, 1040, 1041, 1042, 1089, 1090, 1092, 1159, 1160, 1161, 1162, 1163, 1190, 1198, 1206, 1207, 1210, 1224, 1226, 1228, 1266, 1269, 1273, 1274, 1281, 1282, 1339, 1340, 1357, 1358, 1359, 1360, 1361, 1414, 1608, 1711, 1764, 1765, 1766, 1767, 1768, 1819, 1822, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1973, 1974, 1977, 1978, 1994, 1997, 2068, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2132, 2134, 2175, 2176, 2312, 2318], "time": [2, 3, 4, 9, 10, 11, 31, 34, 35, 52, 53, 79, 82, 83, 100, 101, 113, 114, 115, 116, 118, 122, 123, 124, 125, 126, 128, 129, 132, 135, 137, 149, 896, 897, 898, 899, 900, 933, 940, 1190, 1208, 1209, 1285, 1288, 1322, 1323, 1324, 1325, 1326, 1609, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1647, 1686, 1689, 1696, 1699, 1711, 1759, 1762, 1868, 1934, 1938, 1949, 1950, 1951, 1952, 2005, 2006, 2009, 2011, 2014, 2031, 2032, 2036, 2037, 2038, 2039, 2040, 2041, 2132, 2134, 2135, 2138, 2139, 2140, 2161, 2172, 2173, 2174], "These": [2, 3, 4, 6, 8, 9, 10, 11, 31, 79, 111, 114, 116, 118, 119, 121, 122, 123, 125, 126, 128, 129, 132, 133, 135, 136, 137, 149, 1190, 1205, 1240, 1241, 1242, 1243, 1244, 1711, 1737, 1738, 1741, 2125, 2134, 2138, 2140, 2141], "ar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 23, 24, 29, 30, 31, 32, 33, 40, 41, 44, 45, 48, 49, 50, 51, 62, 65, 66, 67, 68, 71, 72, 77, 78, 79, 80, 81, 88, 89, 92, 93, 96, 97, 98, 99, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 148, 149, 150, 165, 166, 219, 221, 222, 249, 251, 253, 259, 260, 261, 262, 263, 274, 276, 278, 410, 425, 429, 431, 435, 445, 526, 527, 528, 529, 530, 536, 539, 646, 649, 651, 654, 696, 699, 711, 714, 721, 722, 723, 724, 725, 746, 747, 748, 749, 750, 779, 780, 782, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 819, 820, 821, 822, 823, 824, 827, 829, 830, 831, 832, 833, 855, 856, 857, 858, 859, 865, 866, 867, 868, 869, 870, 871, 876, 877, 887, 889, 896, 897, 898, 899, 900, 901, 902, 904, 906, 907, 923, 924, 925, 926, 927, 933, 934, 936, 938, 939, 940, 942, 943, 951, 956, 961, 979, 982, 989, 992, 994, 997, 999, 1002, 1004, 1007, 1009, 1010, 1012, 1054, 1055, 1057, 1095, 1096, 1097, 1098, 1099, 1103, 1106, 1131, 1137, 1138, 1139, 1144, 1164, 1168, 1190, 1191, 1192, 1193, 1198, 1199, 1200, 1201, 1208, 1234, 1235, 1236, 1237, 1238, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1285, 1288, 1291, 1292, 1294, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1311, 1334, 1335, 1336, 1338, 1349, 1352, 1353, 1354, 1355, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1483, 1489, 1497, 1504, 1520, 1542, 1543, 1558, 1575, 1578, 1579, 1599, 1609, 1619, 1638, 1644, 1646, 1647, 1686, 1689, 1691, 1694, 1711, 1717, 1720, 1737, 1738, 1741, 1743, 1746, 1759, 1762, 1764, 1765, 1766, 1767, 1768, 1774, 1775, 1776, 1777, 1778, 1789, 1791, 1792, 1793, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1832, 1833, 1834, 1835, 1836, 1837, 1841, 1842, 1844, 1846, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1889, 1890, 1891, 1892, 1893, 1909, 1910, 1911, 1912, 1913, 1919, 1922, 1953, 1955, 1960, 1965, 1966, 1967, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2014, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2031, 2032, 2036, 2042, 2046, 2125, 2126, 2130, 2131, 2132, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2149, 2150, 2151, 2154, 2155, 2173, 2174, 2183, 2184, 2186, 2187, 2197, 2217, 2218, 2219, 2230, 2233, 2234, 2238, 2239, 2244, 2245, 2246, 2247, 2249, 2252, 2260, 2261, 2262, 2263, 2276, 2279, 2280, 2285, 2288], "written": [2, 10, 111, 112, 119, 122, 125, 126, 129, 132, 134, 137, 149, 2132, 2134, 2138, 2140, 2141], "mani": [2, 3, 4, 9, 10, 11, 44, 45, 65, 66, 92, 93, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 134, 135, 149, 870, 876, 877, 1375, 1378, 1379, 1382, 1868, 1914, 1915, 1916, 1917, 1918, 2130, 2134, 2137, 2140, 2141, 2149, 2150], "differ": [2, 3, 4, 8, 10, 11, 13, 16, 17, 29, 30, 31, 32, 33, 62, 65, 66, 67, 68, 79, 80, 81, 104, 105, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 149, 305, 349, 352, 445, 461, 464, 741, 743, 745, 779, 782, 896, 897, 898, 899, 900, 933, 934, 940, 943, 944, 945, 951, 999, 1002, 1004, 1007, 1009, 1012, 1014, 1017, 1019, 1022, 1103, 1106, 1190, 1199, 1200, 1209, 1301, 1302, 1303, 1304, 1305, 1322, 1323, 1324, 1325, 1326, 1349, 1355, 1414, 1473, 1474, 1475, 1476, 1477, 1647, 1686, 1689, 1691, 1694, 1711, 1799, 1802, 1868, 1874, 1877, 1924, 1927, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108, 2109, 2112, 2126, 2131, 2132, 2133, 2134, 2137, 2140, 2141, 2173, 2174], "framework": [2, 3, 4, 9, 10, 15, 17, 18, 19, 20, 21, 22, 24, 26, 28, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 64, 66, 68, 70, 72, 74, 76, 78, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 137, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1974, 1975, 1976, 1977, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2129, 2130, 2131, 2132, 2133, 2135, 2138, 2144, 2145, 2146, 2147, 2148, 2150, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2174, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2184, 2185, 2186, 2187, 2193, 2197, 2201, 2207, 2216, 2217, 2218, 2221, 2224, 2244, 2247, 2276, 2279, 2280, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2331, 2333, 2334, 2336], "while": [2, 3, 9, 10, 11, 31, 38, 39, 62, 65, 66, 67, 68, 79, 86, 87, 112, 113, 115, 116, 118, 121, 122, 125, 126, 127, 128, 130, 134, 136, 137, 149, 219, 274, 277, 305, 392, 445, 646, 649, 651, 654, 860, 861, 862, 864, 933, 944, 945, 1014, 1017, 1019, 1022, 1164, 1172, 1250, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1662, 1664, 1665, 1667, 1669, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1684, 2031, 2032, 2036, 2068, 2087, 2090, 2100, 2103, 2134, 2140, 2141, 2221, 2222], "thiiwonder": [2, 4, 134], "thing": [2, 3, 4, 8, 9, 10, 11, 113, 121, 126, 128, 130, 134, 135, 2134], "research": [2, 148, 2134, 2141], "develop": [2, 3, 4, 5, 6, 8, 9, 10, 11, 111, 115, 129, 148, 149, 2125, 2126, 2132, 2133, 2134, 2135, 2136, 2139, 2140, 2141], "when": [2, 3, 5, 6, 8, 9, 10, 11, 23, 24, 25, 26, 31, 40, 41, 42, 43, 48, 49, 50, 51, 56, 57, 62, 65, 66, 67, 68, 71, 72, 73, 74, 77, 78, 79, 88, 89, 90, 91, 96, 97, 98, 99, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 134, 135, 137, 149, 219, 274, 275, 276, 277, 278, 305, 313, 314, 315, 316, 317, 372, 375, 376, 380, 445, 461, 464, 561, 564, 626, 629, 691, 694, 769, 770, 824, 827, 834, 835, 836, 837, 887, 889, 923, 924, 925, 926, 927, 933, 961, 1095, 1096, 1097, 1098, 1099, 1131, 1137, 1144, 1164, 1168, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1261, 1262, 1263, 1264, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1349, 1354, 1355, 1372, 1373, 1374, 1414, 1515, 1518, 1559, 1570, 1573, 1647, 1648, 1711, 1774, 1775, 1776, 1777, 1778, 1799, 1802, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1953, 1954, 1955, 1964, 1965, 1966, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2005, 2006, 2009, 2011, 2014, 2021, 2022, 2023, 2024, 2025, 2026, 2028, 2030, 2068, 2083, 2086, 2091, 2094, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2132, 2134, 2137, 2138, 2139, 2140, 2149, 2150, 2151, 2156, 2159, 2173, 2174, 2230, 2233, 2234, 2238, 2239, 2260, 2261, 2262, 2263, 2312, 2318], "also": [2, 3, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 148, 149, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 219, 221, 222, 224, 225, 226, 231, 232, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 274, 275, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 360, 361, 362, 364, 367, 370, 372, 373, 376, 378, 381, 384, 393, 394, 395, 397, 417, 418, 419, 421, 436, 437, 438, 439, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 824, 825, 826, 828, 829, 831, 833, 834, 835, 837, 838, 839, 840, 842, 844, 845, 847, 849, 850, 851, 852, 853, 855, 856, 857, 859, 860, 861, 862, 864, 865, 866, 867, 869, 870, 871, 876, 877, 881, 882, 883, 884, 885, 891, 892, 893, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 932, 933, 937, 940, 958, 969, 970, 971, 973, 979, 980, 981, 982, 983, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1036, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1093, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1128, 1130, 1131, 1132, 1133, 1134, 1136, 1138, 1139, 1145, 1146, 1147, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1168, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1205, 1208, 1214, 1215, 1216, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1276, 1277, 1278, 1280, 1285, 1286, 1287, 1288, 1289, 1291, 1293, 1295, 1301, 1302, 1303, 1305, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1326, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1349, 1354, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1414, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1445, 1446, 1448, 1449, 1450, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1490, 1491, 1492, 1493, 1494, 1499, 1500, 1502, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1538, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1553, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1595, 1603, 1604, 1605, 1606, 1609, 1611, 1612, 1613, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1626, 1627, 1630, 1631, 1634, 1635, 1639, 1640, 1641, 1642, 1643, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1776, 1777, 1778, 1779, 1782, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1830, 1832, 1833, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1964, 1965, 1966, 1973, 1974, 1975, 1976, 1977, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1998, 2000, 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2139, 2140, 2141, 2151, 2154, 2156, 2161, 2171, 2230, 2238, 2239, 2312, 2322], "consid": [2, 3, 31, 40, 41, 79, 88, 89, 112, 115, 116, 123, 129, 133, 134, 135, 445, 646, 649, 651, 654, 779, 780, 781, 782, 783, 855, 856, 857, 858, 859, 870, 876, 877, 923, 924, 925, 926, 927, 933, 934, 938, 951, 1103, 1104, 1105, 1106, 1107, 1164, 1168, 1375, 1378, 1379, 1382, 1711, 1727, 1730, 1774, 1775, 1776, 1777, 1778, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2131, 2135, 2139, 2141, 2151, 2152, 2155, 2156, 2159, 2249, 2256], "speed": [2, 31, 79, 128, 1037, 1038, 1108, 1109, 1110, 1111, 1112, 2137], "which": [2, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 148, 149, 171, 173, 175, 177, 179, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 203, 204, 206, 207, 209, 211, 213, 219, 221, 222, 224, 225, 226, 234, 235, 236, 238, 240, 241, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 318, 320, 322, 328, 329, 330, 331, 332, 334, 344, 346, 349, 352, 360, 363, 366, 376, 377, 393, 394, 395, 397, 409, 410, 417, 418, 419, 420, 425, 429, 431, 433, 434, 435, 436, 437, 439, 445, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 709, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 769, 773, 779, 780, 781, 782, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 833, 843, 849, 851, 853, 855, 856, 857, 858, 859, 865, 866, 867, 868, 869, 870, 871, 876, 877, 887, 889, 891, 894, 896, 897, 898, 899, 900, 901, 902, 904, 908, 912, 923, 924, 925, 926, 927, 933, 934, 938, 939, 940, 943, 951, 956, 957, 961, 962, 963, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 999, 1003, 1009, 1010, 1012, 1029, 1030, 1031, 1037, 1038, 1044, 1045, 1059, 1063, 1069, 1071, 1073, 1079, 1080, 1081, 1082, 1083, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1126, 1127, 1128, 1129, 1130, 1131, 1137, 1141, 1142, 1154, 1155, 1158, 1159, 1162, 1164, 1166, 1168, 1185, 1186, 1187, 1188, 1189, 1190, 1210, 1211, 1234, 1235, 1236, 1237, 1238, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1334, 1336, 1338, 1339, 1340, 1349, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1393, 1394, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1445, 1447, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1486, 1490, 1492, 1494, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1608, 1609, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1645, 1647, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1686, 1688, 1690, 1691, 1693, 1695, 1701, 1704, 1706, 1708, 1710, 1711, 1712, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1745, 1747, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1774, 1776, 1778, 1779, 1781, 1783, 1794, 1796, 1798, 1799, 1801, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1827, 1828, 1830, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1852, 1853, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1871, 1873, 1874, 1875, 1877, 1884, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1899, 1900, 1901, 1902, 1904, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1953, 1959, 1960, 1961, 1962, 1967, 1969, 1970, 1971, 1972, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2024, 2026, 2028, 2030, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2139, 2140, 2141, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2181, 2183, 2184, 2197, 2218, 2219, 2230, 2233, 2244, 2246, 2249, 2252, 2256, 2312, 2318, 2319, 2320, 2323, 2332, 2334], "evolv": [2, 2134], "shareabl": 2, "code": [2, 3, 4, 7, 8, 9, 10, 11, 27, 28, 29, 30, 62, 65, 66, 67, 68, 75, 76, 77, 78, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 147, 149, 410, 412, 436, 437, 438, 439, 440, 541, 543, 611, 612, 613, 615, 671, 672, 673, 1414, 1427, 1430, 1544, 1547, 1575, 1579, 1609, 1638, 1644, 1646, 1647, 1681, 1684, 1711, 1769, 1772, 1774, 1777, 1779, 1782, 1868, 1924, 1927, 2125, 2126, 2130, 2132, 2133, 2134, 2135, 2137, 2138, 2139, 2140, 2141], "significantli": [2, 40, 41, 88, 89, 115, 1711, 1809, 1810, 1811, 1812, 1813, 2132], "hinder": [2, 122], "librari": [2, 3, 4, 5, 9, 10, 27, 28, 75, 76, 111, 130, 137, 147, 149, 410, 436, 437, 438, 439, 440, 445, 561, 564, 626, 629, 646, 649, 651, 654, 1711, 1738, 1741, 1743, 1746, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2100, 2103, 2125, 2126, 2130, 2131, 2132, 2134, 2138, 2141], "becom": [2, 4, 11, 31, 79, 114, 118, 120, 126, 149, 799, 800, 801, 802, 803, 933, 943, 1009, 1010, 1012, 1190, 1193, 1868, 1869, 1872, 2312, 2328], "outdat": 2, "matter": [2, 118, 2312, 2320], "month": [2, 10], "rigor": [2, 128], "maintain": [2, 11, 54, 55, 102, 103, 111, 115, 126, 127, 128, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2133], "against": [2, 25, 26, 31, 40, 41, 50, 51, 73, 74, 77, 78, 79, 88, 89, 98, 99, 128, 132, 149, 305, 318, 319, 320, 321, 666, 668, 670, 779, 782, 829, 830, 831, 832, 833, 865, 866, 867, 868, 869, 933, 934, 936, 939, 951, 1037, 1038, 1103, 1106, 1108, 1109, 1110, 1111, 1112, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1301, 1302, 1303, 1304, 1305, 1349, 1353, 1354, 1355, 1711, 1759, 1762, 1764, 1765, 1766, 1767, 1768, 1774, 1775, 1776, 1777, 1778, 1789, 1792, 2005, 2006, 2007, 2008, 2009, 2010, 2134], "newest": 2, "For": [2, 3, 4, 6, 7, 9, 10, 11, 23, 24, 31, 40, 41, 79, 88, 89, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 148, 149, 219, 221, 222, 264, 265, 267, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 521, 524, 526, 529, 531, 534, 556, 559, 561, 564, 566, 569, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 646, 649, 691, 694, 706, 709, 711, 714, 721, 724, 726, 729, 731, 734, 746, 750, 751, 755, 756, 760, 799, 800, 801, 802, 803, 933, 960, 1190, 1193, 1208, 1285, 1288, 1334, 1337, 1711, 1799, 1802, 1809, 1813, 1827, 1828, 1829, 1830, 1831, 1868, 1869, 1872, 1924, 1927, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2068, 2083, 2086, 2091, 2094, 2104, 2108, 2131, 2132, 2135, 2140, 2141, 2146, 2147, 2148, 2244, 2247], "softwar": [2, 3, 10, 11, 2132, 2137, 2138, 2139], "pipelin": [2, 111, 112, 127, 137, 2125, 2134, 2135, 2140], "where": [2, 3, 4, 5, 7, 10, 11, 23, 24, 29, 30, 31, 32, 33, 40, 41, 44, 45, 48, 49, 50, 51, 56, 57, 58, 59, 65, 66, 71, 72, 77, 78, 79, 88, 89, 92, 93, 96, 97, 98, 99, 104, 105, 106, 107, 111, 112, 113, 114, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 149, 219, 248, 249, 250, 252, 264, 265, 267, 274, 276, 277, 278, 445, 481, 484, 556, 559, 601, 604, 626, 629, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 691, 694, 769, 770, 771, 789, 791, 793, 794, 796, 798, 799, 801, 802, 803, 819, 820, 821, 822, 823, 824, 827, 870, 876, 877, 887, 889, 923, 924, 925, 926, 927, 933, 944, 945, 951, 958, 959, 984, 985, 986, 987, 988, 1014, 1017, 1019, 1022, 1054, 1055, 1056, 1057, 1058, 1079, 1080, 1081, 1082, 1083, 1103, 1106, 1131, 1137, 1141, 1142, 1164, 1168, 1178, 1179, 1180, 1181, 1182, 1190, 1193, 1201, 1208, 1285, 1288, 1291, 1292, 1294, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1311, 1312, 1315, 1329, 1332, 1349, 1355, 1375, 1378, 1379, 1382, 1414, 1515, 1516, 1518, 1544, 1545, 1608, 1609, 1638, 1644, 1646, 1711, 1737, 1738, 1741, 1758, 1764, 1767, 1774, 1775, 1776, 1777, 1778, 1789, 1792, 1794, 1795, 1796, 1797, 1798, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1868, 1869, 1870, 1871, 1872, 1873, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1894, 1895, 1896, 1897, 1898, 1924, 1927, 1944, 1945, 1946, 1947, 1948, 1953, 1965, 1978, 1979, 1982, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2005, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2027, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2132, 2141, 2151, 2153, 2154, 2155, 2158], "rapid": [2, 3, 10, 2134], "prototyp": [2, 2134], "vital": [2, 137], "signific": [2, 3, 149, 2134], "bottleneck": 2, "As": [2, 11, 60, 61, 108, 109, 112, 114, 115, 116, 117, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 136, 149, 150, 157, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2134, 2139], "new": [2, 3, 4, 5, 7, 9, 10, 11, 13, 16, 17, 31, 32, 33, 34, 35, 44, 45, 46, 47, 65, 66, 71, 72, 79, 80, 81, 82, 83, 92, 93, 94, 95, 110, 112, 113, 114, 115, 116, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 148, 150, 156, 157, 219, 234, 243, 246, 248, 249, 252, 274, 276, 277, 278, 279, 280, 282, 285, 297, 299, 300, 304, 305, 403, 445, 486, 489, 676, 679, 686, 689, 701, 704, 779, 781, 783, 855, 856, 857, 858, 859, 933, 938, 956, 1103, 1104, 1105, 1107, 1190, 1205, 1240, 1243, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1349, 1354, 1414, 1448, 1449, 1451, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1486, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1556, 1562, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1586, 1590, 1609, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1868, 1884, 1885, 1886, 1887, 1888, 1904, 1905, 1906, 1907, 1908, 1924, 1927, 1953, 1959, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 2125, 2126, 2132, 2136, 2140, 2141, 2146, 2147, 2148, 2161, 2171, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2312, 2322], "futur": [2, 4, 10, 11, 115, 116, 128, 129, 130, 134, 149, 1711, 1738, 1741, 1743, 1746, 2140], "avail": [2, 10, 11, 32, 33, 80, 81, 114, 115, 117, 119, 120, 126, 128, 149, 410, 416, 426, 427, 428, 442, 1414, 1453, 1454, 1455, 1456, 1457, 2139, 2140, 2244, 2245], "backend": [2, 8, 9, 10, 11, 18, 20, 22, 23, 24, 31, 32, 33, 34, 35, 40, 41, 65, 66, 79, 80, 81, 88, 89, 110, 111, 112, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 137, 150, 156, 157, 219, 231, 232, 233, 305, 354, 355, 357, 358, 366, 409, 410, 423, 424, 426, 428, 442, 923, 924, 925, 926, 927, 1164, 1168, 1414, 1427, 1428, 1429, 1430, 1471, 1472, 1504, 1515, 1516, 1518, 1520, 1541, 1575, 1577, 1578, 1579, 1585, 1621, 1622, 1711, 1809, 1810, 1811, 1812, 1813, 2125, 2126, 2134, 2137, 2140, 2141, 2146, 2147, 2148, 2173, 2174, 2177, 2178, 2179, 2180, 2181, 2182, 2186, 2187, 2189, 2190, 2193, 2197, 2216, 2217, 2218, 2219, 2221, 2225, 2226, 2244, 2246, 2247, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329], "specif": [2, 9, 10, 11, 27, 28, 32, 33, 75, 76, 80, 81, 111, 112, 113, 114, 116, 117, 120, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 148, 149, 150, 157, 305, 393, 396, 410, 433, 436, 437, 438, 439, 440, 445, 646, 649, 651, 654, 1414, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1541, 1711, 1738, 1741, 1743, 1746, 1819, 1822, 1868, 1924, 1927, 1949, 1950, 1951, 1952, 1978, 1979, 1982, 2052, 2058, 2061, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2100, 2103, 2125, 2130, 2132, 2133, 2135, 2136, 2137, 2141, 2173, 2174, 2312, 2319, 2323, 2332, 2334], "quickli": [2, 4, 10, 11, 115, 135, 136, 2134, 2141], "obsolet": [2, 4], "user": [2, 3, 6, 7, 10, 11, 110, 112, 113, 114, 115, 116, 120, 124, 125, 126, 128, 130, 131, 132, 149, 169, 170, 176, 933, 955, 1190, 1208, 1251, 1254, 1285, 1288, 2132, 2134, 2140, 2141, 2149, 2150, 2161, 2172, 2173, 2174], "constantli": [2, 129, 130], "invent": 2, "wheel": 2, "If": [2, 5, 6, 7, 9, 10, 11, 13, 18, 21, 22, 23, 24, 25, 26, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 149, 150, 156, 157, 169, 171, 173, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 213, 219, 221, 222, 224, 226, 234, 235, 236, 238, 240, 241, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 274, 275, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 320, 322, 323, 326, 328, 330, 332, 393, 395, 396, 397, 410, 416, 434, 436, 437, 439, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 604, 605, 606, 608, 610, 611, 613, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 694, 695, 696, 698, 700, 701, 703, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 833, 834, 835, 836, 837, 849, 851, 852, 853, 860, 861, 862, 864, 865, 867, 869, 870, 871, 872, 873, 874, 875, 876, 877, 881, 882, 883, 884, 885, 887, 889, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 908, 909, 910, 911, 912, 923, 924, 925, 926, 927, 933, 934, 935, 937, 940, 943, 951, 955, 956, 958, 960, 961, 979, 980, 981, 982, 983, 994, 995, 996, 997, 998, 999, 1003, 1009, 1010, 1012, 1029, 1030, 1031, 1037, 1038, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1059, 1060, 1061, 1062, 1063, 1069, 1071, 1073, 1095, 1096, 1097, 1098, 1099, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1126, 1127, 1128, 1129, 1130, 1131, 1136, 1137, 1144, 1154, 1158, 1164, 1168, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1195, 1198, 1202, 1211, 1212, 1234, 1235, 1236, 1237, 1238, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1276, 1278, 1280, 1281, 1283, 1284, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1334, 1336, 1337, 1338, 1349, 1352, 1353, 1354, 1355, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1393, 1394, 1395, 1396, 1397, 1403, 1404, 1406, 1408, 1409, 1411, 1413, 1414, 1415, 1417, 1419, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1518, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1579, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1608, 1609, 1619, 1621, 1622, 1623, 1638, 1639, 1640, 1642, 1646, 1647, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1695, 1706, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1727, 1730, 1743, 1745, 1747, 1753, 1755, 1757, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1782, 1789, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1827, 1828, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1871, 1873, 1874, 1875, 1877, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1939, 1940, 1942, 1944, 1945, 1947, 1949, 1950, 1951, 1953, 1966, 1967, 1973, 1978, 1979, 1981, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2066, 2068, 2069, 2071, 2072, 2073, 2074, 2076, 2077, 2078, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2146, 2149, 2150, 2151, 2152, 2155, 2156, 2159, 2161, 2173, 2174, 2175, 2177, 2183, 2197, 2217, 2218, 2219, 2230, 2233, 2234, 2238, 2239, 2249, 2252, 2312, 2318, 2320, 2322], "our": [2, 3, 5, 8, 9, 10, 11, 13, 60, 61, 62, 108, 109, 111, 112, 114, 115, 116, 118, 120, 121, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 149, 169, 212, 213, 219, 305, 410, 445, 1413, 1414, 1609, 1647, 1711, 1852, 1868, 1949, 1953, 1973, 1978, 2005, 2052, 2068, 2114, 2126, 2139, 2140, 2143, 2146, 2151, 2161, 2173, 2175, 2177, 2183, 2249, 2256], "desir": [2, 11, 25, 26, 27, 28, 31, 50, 51, 65, 66, 73, 74, 75, 76, 79, 98, 99, 113, 115, 116, 126, 132, 305, 313, 314, 315, 316, 317, 323, 324, 325, 327, 328, 329, 330, 331, 332, 410, 436, 437, 438, 439, 440, 1256, 1257, 1258, 1259, 1260, 1301, 1302, 1303, 1304, 1305, 1349, 1353, 1355, 2005, 2016, 2017, 2018, 2019, 2020, 2134, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172], "provid": [2, 10, 11, 23, 24, 31, 32, 33, 34, 35, 44, 45, 50, 51, 56, 57, 58, 59, 65, 66, 71, 72, 79, 80, 81, 92, 93, 98, 99, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 134, 136, 148, 149, 169, 170, 176, 219, 264, 265, 267, 274, 275, 276, 277, 278, 305, 335, 336, 338, 339, 340, 342, 343, 366, 393, 396, 409, 410, 416, 908, 909, 910, 912, 933, 961, 1059, 1060, 1061, 1062, 1063, 1190, 1202, 1212, 1372, 1374, 1393, 1394, 1395, 1396, 1397, 1414, 1432, 1445, 1447, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1621, 1622, 1711, 1769, 1772, 1837, 1841, 1868, 1884, 1887, 1889, 1890, 1891, 1892, 1893, 1924, 1927, 2005, 2006, 2007, 2008, 2009, 2010, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2141, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2170, 2171, 2172, 2177, 2178, 2179, 2180, 2181, 2182, 2312, 2319, 2323], "simultan": [2, 4], "support": [2, 3, 4, 6, 10, 15, 17, 19, 20, 21, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 64, 66, 68, 70, 72, 74, 75, 76, 78, 79, 80, 81, 83, 85, 87, 88, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 112, 114, 117, 118, 119, 122, 123, 124, 125, 127, 128, 130, 131, 132, 134, 135, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1974, 1975, 1976, 1977, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2129, 2131, 2133, 2134, 2137, 2139, 2140, 2141, 2144, 2145, 2147, 2148, 2150, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2174, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2184, 2185, 2186, 2189, 2190, 2191, 2244, 2247, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2331, 2333, 2334, 2336], "all": [2, 3, 4, 5, 6, 7, 9, 10, 11, 18, 19, 20, 21, 22, 23, 24, 31, 32, 33, 38, 39, 40, 41, 44, 45, 48, 49, 58, 59, 60, 61, 65, 66, 69, 70, 77, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 96, 97, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 148, 149, 150, 163, 165, 166, 219, 221, 222, 274, 277, 287, 289, 291, 292, 294, 296, 410, 425, 431, 666, 668, 670, 870, 876, 877, 896, 897, 898, 899, 900, 923, 924, 925, 926, 927, 933, 940, 941, 969, 972, 1164, 1168, 1190, 1208, 1256, 1259, 1285, 1288, 1349, 1353, 1375, 1378, 1379, 1382, 1414, 1415, 1418, 1422, 1425, 1478, 1482, 1483, 1542, 1543, 1565, 1567, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1594, 1608, 1609, 1619, 1647, 1686, 1689, 1696, 1697, 1698, 1699, 1711, 1774, 1775, 1777, 1799, 1802, 1804, 1807, 1819, 1822, 1842, 1843, 1844, 1845, 1846, 1868, 1889, 1890, 1891, 1892, 1893, 1909, 1910, 1911, 1912, 1913, 1919, 1922, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1965, 1966, 1967, 1968, 1978, 1979, 1980, 1981, 1982, 1983, 1994, 1995, 1996, 1997, 1998, 2005, 2016, 2019, 2114, 2119, 2125, 2126, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2140, 2141, 2149, 2150, 2151, 2152, 2159, 2186, 2189, 2190, 2191, 2197, 2199, 2216, 2218, 2219, 2230, 2234, 2238, 2239, 2244, 2245, 2249, 2252, 2260, 2261, 2262, 2263, 2285, 2287, 2288, 2312, 2322, 2332, 2334], "modern": [2, 3, 2139], "simpl": [2, 9, 10, 11, 112, 114, 116, 117, 118, 119, 123, 125, 126, 128, 129, 130, 134, 136, 137, 149, 1414, 1463, 1465, 2125, 2133, 2134, 2135, 2136, 2249, 2256], "scalabl": [2, 132, 2139, 2140], "manner": [2, 10, 18, 21, 22, 69, 70, 117, 119, 126, 129, 135, 148, 149, 1953, 1966, 2130, 2132, 2140, 2141], "must": [2, 4, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 112, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 129, 130, 132, 136, 137, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 274, 275, 276, 277, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 410, 435, 436, 437, 438, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 771, 772, 773, 774, 777, 804, 805, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 849, 850, 851, 852, 853, 855, 858, 870, 871, 873, 881, 882, 883, 884, 885, 887, 889, 891, 894, 896, 897, 898, 899, 900, 906, 907, 908, 909, 910, 912, 933, 936, 937, 938, 940, 943, 952, 953, 958, 960, 963, 964, 967, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 999, 1000, 1001, 1002, 1003, 1009, 1010, 1012, 1029, 1030, 1031, 1050, 1051, 1052, 1053, 1059, 1060, 1061, 1062, 1063, 1069, 1070, 1079, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1162, 1164, 1165, 1166, 1170, 1171, 1172, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1199, 1202, 1205, 1209, 1211, 1212, 1214, 1217, 1219, 1220, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1240, 1241, 1242, 1243, 1244, 1250, 1281, 1282, 1283, 1284, 1291, 1292, 1294, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1349, 1355, 1357, 1358, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1393, 1394, 1395, 1396, 1397, 1408, 1412, 1414, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1451, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1515, 1517, 1519, 1521, 1525, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1944, 1945, 1946, 1947, 1948, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2019, 2021, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2066, 2068, 2069, 2072, 2074, 2077, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2135, 2141, 2151, 2155, 2177, 2181, 2197, 2217, 2219, 2285, 2287, 2293, 2306], "determin": [2, 13, 16, 17, 29, 30, 31, 40, 41, 44, 45, 58, 59, 62, 65, 66, 67, 68, 77, 78, 79, 80, 81, 88, 89, 102, 103, 106, 107, 114, 116, 117, 119, 123, 126, 130, 219, 240, 241, 305, 328, 331, 334, 348, 366, 367, 370, 372, 374, 376, 379, 381, 384, 386, 389, 409, 410, 426, 427, 428, 442, 445, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 541, 542, 543, 544, 545, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 571, 572, 573, 575, 586, 589, 591, 594, 596, 599, 601, 604, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 656, 659, 671, 672, 673, 674, 675, 691, 692, 693, 694, 695, 706, 707, 709, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 761, 762, 763, 764, 765, 879, 880, 923, 924, 925, 926, 927, 933, 960, 1095, 1096, 1097, 1098, 1099, 1101, 1131, 1144, 1164, 1168, 1334, 1335, 1336, 1337, 1338, 1414, 1415, 1418, 1422, 1425, 1499, 1501, 1502, 1503, 1504, 1520, 1521, 1524, 1526, 1529, 1531, 1533, 1534, 1537, 1575, 1579, 1603, 1607, 1647, 1701, 1704, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1732, 1733, 1735, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1762, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1784, 1787, 1789, 1791, 1792, 1793, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1868, 1874, 1875, 1877, 1949, 1950, 1951, 1952, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2053, 2055, 2057, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2151, 2156, 2159, 2249, 2256, 2276, 2278, 2280], "exactli": [2, 4, 114, 115, 116, 117, 118, 128, 130], "common": [2, 9, 31, 65, 66, 79, 114, 116, 117, 118, 121, 123, 124, 126, 129, 130, 149, 305, 392, 855, 858, 933, 938, 943, 947, 952, 1009, 1010, 1012, 1032, 1035, 1149, 1150, 1151, 1152, 1153, 2131, 2134, 2141], "ground": [2, 126, 128, 2186, 2187, 2193, 2197, 2217, 2218, 2219], "li": [2, 31, 79, 923, 924, 925, 926, 927, 1164, 1168, 1301, 1302, 1303, 1304, 1305, 1349, 1355], "between": [2, 31, 38, 39, 42, 43, 44, 45, 52, 53, 62, 65, 66, 67, 68, 77, 78, 79, 86, 87, 90, 91, 92, 93, 112, 113, 114, 118, 122, 123, 126, 127, 128, 130, 131, 133, 134, 135, 137, 148, 219, 221, 222, 305, 349, 352, 445, 481, 484, 691, 694, 779, 782, 834, 835, 836, 837, 933, 934, 951, 961, 1103, 1106, 1183, 1184, 1190, 1208, 1285, 1288, 1301, 1302, 1303, 1304, 1305, 1349, 1355, 1372, 1373, 1374, 1647, 1686, 1687, 1688, 1689, 1690, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1884, 1885, 1886, 1888, 1924, 1927, 1953, 1960, 1978, 1984, 1987, 2031, 2032, 2034, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2126, 2130, 2131, 2133, 2134, 2135, 2140, 2177, 2179, 2244, 2247], "find": [2, 5, 7, 8, 9, 10, 11, 65, 66, 111, 115, 128, 130, 132, 135, 1953, 1956, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2125, 2126], "exist": [2, 3, 7, 9, 10, 32, 33, 44, 45, 62, 65, 66, 67, 68, 92, 93, 111, 113, 118, 119, 123, 124, 125, 126, 128, 130, 132, 149, 1414, 1445, 1446, 1447, 1868, 1874, 1877, 1904, 1905, 1906, 1907, 1908, 2125, 2132, 2134, 2137, 2140, 2177, 2181, 2285, 2287], "essenti": [2, 3, 9, 114, 117, 118, 123, 126, 129, 2140], "order": [2, 7, 9, 10, 11, 13, 16, 17, 31, 34, 35, 38, 39, 40, 41, 44, 45, 52, 53, 54, 55, 62, 65, 66, 67, 68, 79, 86, 87, 88, 89, 92, 93, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 135, 137, 149, 219, 264, 267, 445, 481, 484, 870, 876, 877, 918, 921, 923, 924, 925, 926, 927, 928, 931, 933, 948, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1039, 1040, 1041, 1042, 1074, 1075, 1159, 1162, 1164, 1167, 1168, 1169, 1172, 1185, 1189, 1190, 1198, 1199, 1200, 1250, 1339, 1340, 1375, 1378, 1379, 1382, 1621, 1622, 1647, 1649, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1662, 1664, 1665, 1667, 1669, 1672, 1674, 1675, 1676, 1677, 1678, 1681, 1684, 1711, 1737, 1738, 1741, 1764, 1765, 1766, 1767, 1768, 1809, 1813, 1814, 1818, 1832, 1833, 1834, 1835, 1836, 1842, 1843, 1844, 1845, 1846, 1868, 1889, 1892, 1904, 1905, 1906, 1907, 1908, 1949, 1950, 1951, 2005, 2021, 2024, 2031, 2032, 2034, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2066, 2130, 2133, 2134, 2135, 2137, 2140, 2149, 2150, 2173, 2174, 2183, 2184, 2197, 2216, 2217, 2218, 2219], "design": [2, 3, 79, 110, 115, 116, 125, 126, 127, 130, 132, 134, 149, 870, 874, 875, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 2130, 2132, 2134, 2137, 2138, 2139], "univers": [2, 126, 2244, 2245], "abstract": [2, 114, 116, 126, 128, 130, 136, 149, 410, 412, 2132, 2134, 2136, 2137, 2141, 2151, 2155, 2177, 2181], "In": [2, 4, 6, 9, 10, 11, 27, 28, 32, 33, 44, 45, 75, 76, 92, 93, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 136, 137, 148, 149, 410, 430, 436, 437, 438, 439, 440, 441, 444, 445, 461, 464, 706, 709, 906, 907, 1131, 1138, 1139, 1414, 1420, 1515, 1516, 1518, 1711, 1799, 1802, 1868, 1904, 1905, 1906, 1907, 1908, 1978, 1994, 1997, 2126, 2130, 2132, 2134, 2135, 2137, 2140], "search": [2, 8, 10, 18, 21, 22, 51, 69, 70, 99, 114, 118, 128, 129, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2019, 2021, 2024, 2026, 2030, 2276, 2278, 2280], "languag": [2, 4, 126, 130, 132, 2125, 2132, 2135, 2137, 2138, 2139, 2140], "first": [2, 3, 6, 7, 8, 9, 10, 11, 13, 16, 17, 23, 24, 29, 30, 31, 40, 41, 44, 45, 48, 49, 50, 51, 52, 53, 56, 57, 62, 67, 68, 71, 72, 77, 78, 79, 80, 81, 88, 89, 92, 93, 96, 97, 100, 101, 104, 105, 111, 112, 114, 118, 122, 123, 124, 125, 126, 128, 130, 132, 134, 135, 137, 150, 156, 157, 219, 254, 257, 259, 260, 261, 262, 263, 305, 391, 403, 410, 416, 445, 461, 462, 463, 464, 465, 481, 482, 483, 485, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 546, 547, 549, 571, 574, 576, 577, 581, 582, 584, 606, 607, 609, 611, 612, 614, 636, 637, 639, 641, 642, 644, 651, 652, 654, 656, 657, 659, 671, 672, 673, 674, 681, 682, 684, 691, 692, 694, 741, 742, 743, 744, 745, 769, 771, 779, 780, 781, 782, 783, 824, 825, 870, 876, 877, 887, 889, 908, 911, 918, 921, 923, 924, 925, 926, 927, 933, 934, 944, 945, 946, 947, 949, 951, 952, 954, 957, 962, 963, 994, 995, 996, 997, 998, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1036, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1103, 1104, 1105, 1106, 1107, 1121, 1124, 1125, 1131, 1137, 1149, 1150, 1151, 1152, 1153, 1159, 1160, 1162, 1164, 1167, 1168, 1170, 1173, 1174, 1175, 1176, 1177, 1190, 1195, 1198, 1208, 1209, 1245, 1248, 1276, 1277, 1278, 1279, 1280, 1285, 1288, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1322, 1325, 1339, 1340, 1341, 1349, 1355, 1375, 1378, 1379, 1382, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1422, 1424, 1425, 1426, 1711, 1717, 1718, 1719, 1720, 1721, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1748, 1751, 1759, 1760, 1761, 1762, 1763, 1784, 1787, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1809, 1813, 1819, 1822, 1837, 1841, 1868, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1924, 1927, 1929, 1930, 1931, 1932, 1933, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1964, 1965, 1967, 1978, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2011, 2012, 2014, 2031, 2032, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2052, 2058, 2061, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2132, 2134, 2135, 2139, 2151, 2153, 2158, 2161, 2172, 2173, 2174, 2177, 2181, 2197, 2214, 2312, 2328], "see": [2, 5, 7, 9, 10, 11, 13, 16, 17, 25, 26, 29, 30, 40, 41, 50, 51, 56, 57, 58, 59, 62, 67, 68, 77, 78, 88, 89, 98, 99, 104, 105, 106, 107, 111, 112, 114, 115, 117, 118, 120, 122, 123, 126, 127, 128, 129, 130, 132, 134, 135, 148, 149, 219, 221, 222, 243, 246, 254, 257, 305, 323, 326, 376, 377, 393, 396, 445, 461, 462, 463, 464, 465, 481, 482, 483, 485, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 541, 542, 543, 544, 545, 546, 547, 548, 550, 561, 564, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 606, 607, 608, 609, 610, 611, 612, 613, 615, 626, 629, 636, 637, 638, 639, 640, 641, 642, 643, 645, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 671, 672, 673, 674, 675, 681, 682, 683, 684, 685, 691, 692, 693, 694, 695, 706, 707, 708, 709, 710, 741, 742, 743, 744, 745, 761, 762, 763, 764, 765, 870, 876, 877, 1375, 1378, 1379, 1382, 1711, 1717, 1718, 1719, 1721, 1774, 1775, 1776, 1777, 1778, 1789, 1792, 1804, 1807, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 2005, 2011, 2012, 2013, 2014, 2015, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2068, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2130], "clear": [2, 3, 4, 9, 11, 116, 117, 118, 126, 130, 132, 134, 410, 415, 2134], "front": [2, 126, 131, 132, 135, 2126, 2132, 2134], "runner": 2, "look": [2, 6, 7, 10, 11, 113, 114, 116, 117, 118, 120, 122, 123, 126, 127, 128, 129, 130, 132, 134, 136, 137, 2126, 2130, 2134], "littl": [2, 134, 2136], "deeper": [2, 11, 110, 128, 131, 1953, 1954, 1955, 1964, 1965, 1966], "follow": [2, 3, 7, 9, 10, 11, 31, 32, 33, 34, 35, 38, 39, 40, 41, 65, 66, 79, 80, 81, 82, 83, 86, 87, 88, 89, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 149, 305, 360, 363, 410, 435, 445, 706, 709, 887, 889, 974, 977, 1095, 1096, 1097, 1098, 1099, 1131, 1137, 1144, 1190, 1197, 1208, 1285, 1288, 1414, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1609, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1647, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1764, 1767, 1794, 1795, 1796, 1797, 1798, 1842, 1843, 1844, 1845, 1846, 1953, 1960, 1966, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2126, 2131, 2134, 2137, 2161, 2171, 2177, 2181], "same": [2, 4, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 52, 53, 54, 55, 56, 57, 65, 66, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 96, 97, 100, 101, 104, 105, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 136, 137, 149, 197, 198, 219, 221, 222, 235, 236, 238, 249, 250, 251, 252, 253, 259, 261, 263, 264, 265, 267, 274, 275, 276, 277, 278, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 349, 351, 353, 360, 362, 364, 410, 411, 435, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 461, 464, 466, 467, 476, 477, 496, 497, 498, 499, 500, 506, 507, 508, 510, 521, 522, 523, 524, 525, 566, 567, 568, 569, 570, 676, 677, 678, 680, 686, 687, 688, 690, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 756, 757, 758, 759, 760, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 838, 839, 849, 850, 851, 852, 853, 860, 861, 870, 871, 876, 877, 933, 937, 943, 963, 979, 980, 981, 982, 983, 1009, 1012, 1037, 1038, 1108, 1109, 1110, 1111, 1112, 1131, 1132, 1133, 1134, 1145, 1146, 1147, 1159, 1162, 1190, 1208, 1210, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1245, 1246, 1248, 1285, 1288, 1301, 1302, 1303, 1304, 1305, 1339, 1340, 1341, 1349, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1408, 1412, 1478, 1480, 1609, 1639, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1689, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1722, 1725, 1732, 1733, 1735, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1759, 1762, 1769, 1772, 1779, 1780, 1781, 1782, 1783, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1804, 1807, 1809, 1811, 1813, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1868, 1874, 1875, 1877, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1919, 1922, 1924, 1925, 1926, 1927, 1928, 1949, 1950, 1951, 1953, 1967, 1978, 1994, 1995, 1996, 1997, 1998, 2031, 2032, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2056, 2063, 2066, 2068, 2069, 2072, 2074, 2077, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2126, 2131, 2133, 2140, 2141, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2186, 2187, 2230, 2233, 2244, 2245, 2249, 2257], "core": [2, 9, 10, 117, 128, 137, 410, 427, 2126, 2132, 2133, 2134, 2135, 2139, 2141], "principl": [2, 2132, 2134, 2137], "oper": [2, 9, 10, 23, 24, 25, 26, 31, 32, 33, 34, 35, 38, 39, 62, 65, 66, 67, 68, 71, 72, 73, 74, 79, 80, 81, 86, 87, 111, 112, 114, 116, 117, 118, 119, 120, 123, 125, 126, 128, 130, 132, 135, 136, 150, 156, 157, 219, 254, 257, 259, 260, 261, 262, 263, 305, 393, 394, 395, 396, 397, 445, 461, 464, 511, 514, 706, 709, 769, 771, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 843, 933, 955, 964, 967, 984, 987, 1044, 1045, 1079, 1082, 1131, 1132, 1133, 1134, 1140, 1141, 1142, 1145, 1146, 1147, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1251, 1252, 1253, 1254, 1255, 1296, 1297, 1299, 1414, 1427, 1428, 1429, 1430, 1448, 1451, 1453, 1456, 1457, 1458, 1461, 1462, 1575, 1576, 1577, 1578, 1579, 1621, 1622, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1691, 1694, 2125, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2138, 2139, 2140, 2141, 2230, 2234, 2238, 2239, 2260, 2261, 2262, 2263], "expos": [2, 115, 132, 136, 1414, 1443], "almost": [2, 8, 114, 127, 133, 135], "ident": [2, 4, 65, 66, 114, 123, 124, 126, 127, 129, 130, 134, 135, 149, 219, 240, 241, 410, 425, 1414, 1486, 1711, 1769, 1772, 1953, 1967, 2125, 2126], "function": [2, 7, 10, 11, 13, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 121, 125, 130, 131, 133, 134, 135, 136, 147, 148, 150, 151, 156, 157, 163, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 346, 348, 349, 352, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 384, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 889, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 969, 970, 971, 972, 973, 974, 977, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1776, 1777, 1778, 1779, 1782, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1823, 1826, 1827, 1828, 1830, 1831, 1832, 1833, 1836, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2131, 2132, 2133, 2134, 2135, 2140, 2141, 2143, 2144, 2145, 2151, 2155, 2156, 2173, 2174, 2186, 2189, 2190, 2191, 2192, 2202, 2203, 2216, 2217, 2218, 2219, 2221, 2230, 2232, 2233, 2234, 2238, 2239, 2241, 2244, 2245, 2246, 2247, 2249, 2252, 2253, 2254, 2255, 2257, 2258, 2260, 2261, 2262, 2263, 2276, 2277, 2278, 2280, 2281, 2282, 2312, 2318, 2319, 2320, 2322, 2323, 2332, 2334], "uniqu": [2, 31, 52, 53, 79, 100, 101, 111, 114, 123, 126, 127, 130, 149, 1037, 1038, 1108, 1109, 1110, 1111, 1112, 1190, 1205, 1208, 1240, 1241, 1242, 1243, 1244, 1285, 1288, 1949, 1950, 1951, 1952, 1953, 1956, 1960, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2137, 2249, 2252], "syntax": [2, 3, 116, 121, 2134], "argument": [2, 9, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 33, 40, 41, 62, 65, 66, 67, 68, 69, 70, 77, 78, 79, 80, 81, 110, 111, 112, 113, 114, 118, 119, 121, 123, 124, 127, 128, 129, 130, 132, 134, 135, 150, 151, 163, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 259, 260, 262, 264, 267, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 367, 370, 381, 384, 393, 396, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 804, 807, 809, 812, 814, 817, 870, 871, 876, 877, 881, 884, 887, 889, 896, 899, 906, 907, 918, 921, 923, 924, 925, 926, 927, 933, 940, 979, 982, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1141, 1142, 1145, 1146, 1147, 1164, 1167, 1168, 1190, 1208, 1219, 1222, 1224, 1227, 1229, 1232, 1285, 1288, 1375, 1378, 1379, 1382, 1414, 1420, 1421, 1427, 1430, 1432, 1445, 1446, 1447, 1473, 1476, 1490, 1493, 1499, 1502, 1505, 1508, 1540, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1575, 1577, 1579, 1591, 1595, 1596, 1608, 1609, 1639, 1643, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1681, 1684, 1686, 1689, 1691, 1694, 1701, 1704, 1706, 1709, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1846, 1847, 1851, 1868, 1869, 1872, 1874, 1877, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1897, 1899, 1902, 1904, 1907, 1909, 1912, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 1953, 1960, 1973, 1974, 1977, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123, 2125, 2134, 2146, 2147, 2148, 2173, 2174, 2186, 2189, 2190, 2191, 2192, 2197, 2201, 2202, 2203, 2216, 2217, 2218, 2219, 2230, 2233, 2276, 2278, 2280, 2281, 2282, 2312, 2318, 2320, 2332, 2334], "There": [2, 9, 10, 11, 111, 112, 114, 116, 118, 120, 121, 123, 126, 127, 132, 135, 149, 2135, 2136, 2140, 2141, 2249, 2256], "onli": [2, 5, 9, 10, 11, 13, 16, 17, 23, 24, 31, 40, 41, 44, 45, 48, 49, 65, 66, 71, 72, 79, 88, 89, 92, 93, 96, 97, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 147, 149, 219, 259, 260, 261, 262, 263, 305, 391, 392, 410, 431, 444, 445, 646, 649, 651, 654, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 819, 820, 821, 822, 823, 824, 827, 870, 871, 887, 889, 923, 924, 925, 926, 927, 933, 948, 955, 958, 979, 982, 994, 995, 996, 997, 998, 1039, 1040, 1042, 1095, 1096, 1097, 1098, 1099, 1131, 1137, 1144, 1164, 1168, 1190, 1191, 1192, 1198, 1251, 1252, 1253, 1254, 1255, 1306, 1307, 1308, 1312, 1314, 1315, 1316, 1414, 1432, 1711, 1759, 1762, 1794, 1795, 1796, 1797, 1798, 1809, 1810, 1811, 1812, 1813, 1868, 1889, 1890, 1891, 1892, 1893, 1904, 1905, 1906, 1907, 1908, 1953, 1954, 1955, 1961, 1962, 1964, 1965, 1966, 1971, 1972, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2005, 2006, 2009, 2011, 2014, 2052, 2058, 2061, 2068, 2087, 2090, 2100, 2103, 2126, 2133, 2134, 2135, 2140, 2141, 2173, 2174, 2177, 2178, 2179, 2180, 2181, 2182, 2221, 2230, 2234, 2238, 2239, 2249, 2250, 2260, 2261, 2262, 2263], "so": [2, 3, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 149, 150, 165, 166, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 224, 225, 231, 232, 235, 236, 243, 244, 249, 250, 251, 253, 259, 260, 261, 263, 264, 265, 269, 270, 274, 275, 276, 278, 282, 283, 284, 286, 287, 289, 292, 294, 300, 301, 302, 303, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 332, 360, 361, 362, 364, 372, 373, 375, 376, 378, 380, 393, 394, 395, 397, 417, 418, 419, 421, 436, 437, 438, 439, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 769, 771, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 824, 825, 826, 828, 834, 835, 837, 838, 839, 840, 842, 844, 845, 847, 849, 850, 851, 853, 855, 856, 857, 859, 860, 861, 862, 864, 865, 866, 867, 869, 881, 882, 883, 885, 891, 892, 893, 896, 897, 898, 900, 901, 902, 903, 905, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 922, 923, 924, 925, 927, 928, 929, 930, 932, 933, 943, 962, 969, 970, 971, 973, 979, 980, 981, 983, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1036, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1093, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1128, 1130, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1182, 1185, 1187, 1189, 1214, 1215, 1216, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1276, 1277, 1278, 1280, 1285, 1286, 1287, 1289, 1291, 1293, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1305, 1312, 1313, 1314, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1326, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1349, 1354, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1445, 1446, 1448, 1449, 1450, 1452, 1453, 1454, 1455, 1458, 1459, 1460, 1463, 1464, 1466, 1467, 1468, 1470, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1490, 1491, 1492, 1494, 1499, 1500, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1519, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1538, 1544, 1545, 1546, 1548, 1549, 1551, 1553, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1603, 1604, 1605, 1606, 1611, 1612, 1613, 1615, 1616, 1621, 1622, 1623, 1626, 1627, 1630, 1631, 1634, 1635, 1639, 1640, 1641, 1642, 1647, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1677, 1678, 1680, 1681, 1682, 1683, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1727, 1728, 1729, 1732, 1733, 1734, 1736, 1743, 1744, 1745, 1747, 1753, 1754, 1755, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1768, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1803, 1809, 1810, 1811, 1812, 1832, 1833, 1842, 1843, 1845, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1953, 1954, 1965, 1974, 1975, 1976, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1998, 2000, 2001, 2002, 2004, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2025, 2026, 2027, 2028, 2029, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2062, 2063, 2064, 2065, 2067, 2069, 2070, 2071, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2083, 2084, 2085, 2087, 2088, 2089, 2091, 2093, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2109, 2110, 2111, 2112, 2115, 2116, 2117, 2119, 2120, 2121, 2122, 2124, 2126, 2134, 2135, 2136, 2138], "wai": [2, 3, 8, 9, 10, 111, 112, 113, 115, 116, 125, 126, 127, 128, 130, 134, 135, 136, 137, 149, 2136, 2140, 2141], "manipul": [2, 45, 93, 126, 129, 130, 132, 137, 148, 150, 156, 157, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1869, 1872, 1874, 1877, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1897, 1899, 1902, 1904, 1907, 1909, 1912, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 2134], "tensor": [2, 23, 24, 29, 30, 31, 32, 33, 38, 39, 44, 45, 48, 49, 65, 66, 71, 72, 77, 78, 79, 80, 81, 86, 87, 92, 93, 96, 97, 112, 113, 116, 117, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 149, 219, 231, 232, 233, 254, 257, 259, 260, 261, 262, 263, 274, 275, 276, 277, 278, 305, 344, 346, 392, 445, 661, 662, 663, 664, 665, 666, 667, 669, 769, 771, 804, 805, 809, 810, 829, 830, 831, 832, 833, 870, 871, 876, 877, 887, 889, 933, 936, 964, 967, 979, 982, 994, 997, 1095, 1096, 1097, 1098, 1099, 1131, 1137, 1140, 1144, 1190, 1198, 1219, 1220, 1224, 1225, 1256, 1257, 1258, 1259, 1260, 1296, 1297, 1299, 1349, 1353, 1375, 1378, 1379, 1382, 1414, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1647, 1686, 1689, 1696, 1697, 1698, 1699, 1711, 1758, 1819, 1822, 1868, 1914, 1915, 1916, 1917, 1918, 1978, 1979, 1980, 1981, 1982, 1983, 2125, 2126, 2131, 2132, 2135, 2137, 2138, 2141, 2161, 2169, 2171, 2312, 2328], "unsurprisingli": [2, 118], "fundament": [2, 115, 126, 130, 132, 2134], "consist": [2, 56, 57, 65, 66, 111, 112, 115, 116, 120, 125, 132, 1711, 1737, 1738, 1741, 2068, 2079, 2080, 2082, 2135, 2173, 2174], "each": [2, 3, 4, 6, 9, 10, 11, 13, 16, 17, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 50, 51, 52, 53, 56, 57, 62, 65, 66, 67, 68, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 98, 99, 100, 101, 104, 105, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 148, 149, 169, 187, 190, 192, 195, 197, 200, 207, 210, 219, 264, 265, 267, 305, 318, 319, 320, 321, 322, 349, 351, 353, 360, 362, 364, 410, 435, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 486, 487, 488, 489, 490, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 544, 546, 549, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 639, 641, 644, 646, 648, 649, 650, 651, 654, 656, 659, 671, 674, 676, 677, 678, 679, 680, 681, 684, 686, 687, 688, 689, 690, 691, 694, 696, 698, 699, 700, 701, 704, 706, 707, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 769, 772, 773, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 860, 861, 862, 864, 908, 909, 910, 911, 912, 923, 924, 925, 926, 927, 933, 935, 943, 958, 960, 963, 999, 1002, 1004, 1007, 1009, 1012, 1037, 1038, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1069, 1070, 1074, 1076, 1077, 1078, 1108, 1109, 1110, 1111, 1112, 1131, 1132, 1133, 1134, 1145, 1146, 1147, 1159, 1160, 1161, 1162, 1163, 1164, 1168, 1190, 1191, 1192, 1193, 1195, 1199, 1200, 1201, 1202, 1204, 1205, 1208, 1212, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1240, 1241, 1242, 1243, 1244, 1285, 1288, 1306, 1307, 1312, 1315, 1317, 1318, 1320, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1362, 1366, 1393, 1394, 1395, 1396, 1397, 1408, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1424, 1426, 1448, 1450, 1451, 1452, 1453, 1457, 1458, 1462, 1473, 1474, 1475, 1476, 1477, 1608, 1609, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1722, 1725, 1737, 1738, 1741, 1743, 1746, 1759, 1762, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1789, 1792, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1832, 1836, 1868, 1879, 1880, 1881, 1882, 1883, 1899, 1900, 1901, 1902, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1924, 1925, 1926, 1927, 1928, 1934, 1935, 1936, 1937, 1938, 1944, 1945, 1946, 1947, 1948, 1953, 1960, 1967, 1978, 1979, 1982, 2005, 2021, 2022, 2023, 2024, 2025, 2031, 2032, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2068, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2082, 2109, 2112, 2126, 2130, 2131, 2135, 2137, 2140, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2172, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2230, 2238, 2239, 2249, 2255], "veri": [2, 3, 8, 9, 10, 11, 31, 79, 114, 116, 117, 118, 120, 122, 123, 125, 126, 127, 128, 129, 130, 133, 135, 136, 137, 149, 779, 782, 933, 934, 951, 955, 1103, 1106, 1251, 1252, 1253, 1254, 1255, 1711, 1799, 1802, 2126, 2130, 2131, 2132, 2134, 2135, 2136, 2139, 2140, 2141, 2249, 2256], "similar": [2, 9, 10, 114, 116, 117, 120, 124, 126, 127, 128, 129, 135, 149, 445, 706, 709, 1647, 1701, 1704, 2130, 2131, 2132, 2133, 2140, 2161, 2172], "convent": [2, 113, 122, 129, 148, 1711, 1759, 1762, 2068, 2079, 2082, 2140], "those": [2, 9, 10, 11, 40, 41, 44, 45, 65, 66, 79, 88, 89, 92, 93, 112, 114, 115, 116, 124, 126, 127, 128, 130, 219, 221, 222, 305, 392, 1357, 1358, 1360, 1414, 1608, 1711, 1794, 1795, 1796, 1797, 1798, 1809, 1813, 1868, 1869, 1870, 1871, 1872, 1873, 1953, 1956, 2131], "numpi": [2, 3, 8, 9, 10, 11, 31, 32, 33, 56, 57, 79, 80, 81, 111, 112, 113, 115, 116, 117, 120, 122, 125, 127, 128, 129, 130, 132, 134, 137, 150, 157, 410, 414, 784, 785, 786, 787, 788, 870, 876, 877, 879, 880, 933, 935, 1101, 1375, 1378, 1379, 1382, 1414, 1427, 1428, 1429, 1430, 1565, 1566, 1567, 1575, 1577, 1579, 1586, 1587, 1588, 1589, 1590, 2068, 2079, 2080, 2082, 2125, 2126, 2136, 2141, 2186, 2187, 2189, 2190, 2191, 2193, 2197, 2202, 2203, 2205, 2207, 2216, 2217, 2218, 2219, 2312, 2318, 2320, 2322, 2325], "introduc": [2, 114, 116, 127, 128, 135, 1868, 1909, 1912, 2031, 2032, 2036], "2006": 2, "layer": [2, 39, 46, 47, 87, 94, 95, 119, 126, 129, 130, 132, 133, 136, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1648, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1674, 1677, 1679, 1680, 1681, 1684, 1686, 1689, 1691, 1694, 1696, 1699, 1701, 1704, 1706, 1709, 1973, 1974, 1975, 1976, 1977, 2126, 2132, 2134, 2138, 2141, 2149, 2150, 2151, 2152, 2153, 2155, 2156, 2158, 2159, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2183, 2184], "therefor": [2, 6, 9, 11, 23, 24, 29, 30, 40, 41, 77, 78, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 136, 149, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 259, 260, 262, 264, 267, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 367, 370, 381, 384, 392, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 804, 807, 809, 812, 814, 817, 870, 871, 876, 877, 881, 884, 896, 899, 906, 907, 918, 921, 923, 926, 933, 940, 979, 982, 1131, 1132, 1133, 1134, 1136, 1138, 1139, 1145, 1146, 1147, 1164, 1167, 1168, 1190, 1208, 1219, 1222, 1224, 1227, 1229, 1232, 1285, 1288, 1375, 1378, 1379, 1382, 1414, 1427, 1430, 1473, 1476, 1490, 1493, 1499, 1502, 1505, 1508, 1544, 1547, 1575, 1579, 1591, 1595, 1609, 1639, 1643, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1681, 1684, 1686, 1689, 1691, 1694, 1701, 1704, 1706, 1709, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1846, 1847, 1851, 1868, 1869, 1872, 1874, 1877, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1897, 1899, 1902, 1904, 1907, 1909, 1912, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 1973, 1974, 1977, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123, 2131, 2134, 2140], "present": [2, 9, 11, 65, 66, 79, 114, 116, 117, 122, 125, 132, 849, 851, 852, 853, 933, 937, 2131, 2132, 2141], "itself": [2, 10, 11, 31, 111, 114, 115, 120, 125, 126, 136, 148, 149, 933, 955, 1251, 1252, 1254, 1414, 1420, 1596, 1953, 1966, 2133, 2134, 2135, 2140], "cut": [2, 2140], "cloth": 2, "adher": [2, 3, 111, 116, 119, 122, 130, 132, 137, 2130, 2131, 2140], "set": [2, 5, 7, 11, 18, 21, 22, 31, 32, 33, 34, 35, 38, 39, 40, 41, 50, 51, 53, 54, 55, 56, 57, 65, 66, 79, 80, 81, 86, 87, 88, 89, 98, 99, 101, 102, 103, 104, 105, 110, 111, 112, 114, 115, 116, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 132, 134, 135, 305, 398, 399, 400, 401, 402, 410, 416, 432, 433, 434, 435, 445, 481, 484, 865, 866, 867, 868, 869, 870, 876, 877, 887, 889, 891, 894, 918, 921, 928, 931, 933, 939, 956, 959, 994, 995, 996, 997, 998, 1131, 1137, 1164, 1166, 1167, 1169, 1190, 1198, 1208, 1211, 1234, 1235, 1236, 1237, 1238, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1285, 1288, 1301, 1302, 1303, 1304, 1305, 1329, 1332, 1349, 1352, 1353, 1354, 1355, 1367, 1368, 1369, 1370, 1371, 1375, 1378, 1379, 1382, 1414, 1415, 1416, 1417, 1418, 1419, 1427, 1428, 1429, 1430, 1448, 1451, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1575, 1577, 1578, 1579, 1598, 1621, 1622, 1647, 1686, 1687, 1688, 1689, 1690, 1711, 1717, 1718, 1719, 1720, 1721, 1764, 1765, 1766, 1767, 1768, 1774, 1775, 1776, 1777, 1778, 1789, 1791, 1792, 1793, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1953, 1954, 1961, 1964, 1965, 1966, 1971, 1972, 1978, 1999, 2005, 2006, 2007, 2008, 2009, 2010, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2132, 2133, 2134, 2135, 2136, 2138, 2141, 2149, 2150, 2151, 2156, 2159, 2161, 2170, 2177, 2178, 2179, 2180, 2181, 2182, 2197, 2219, 2230, 2232, 2233, 2234, 2238, 2239, 2241, 2244, 2245, 2246, 2247, 2249, 2252, 2253, 2254, 2255, 2257, 2258, 2260, 2261, 2262, 2263, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2312, 2318, 2320, 2322, 2324, 2325, 2326, 2327, 2328], "semant": [2, 132, 137, 445, 706, 709, 2135], "round": [2, 3, 4, 6, 7, 9, 10, 11, 29, 30, 31, 77, 78, 79, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 148, 445, 461, 464, 521, 522, 523, 524, 525, 566, 567, 568, 569, 570, 571, 574, 715, 731, 734, 756, 757, 758, 759, 760, 761, 765, 933, 942, 989, 990, 991, 992, 993, 2126, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141], "up": [2, 3, 4, 5, 6, 7, 9, 11, 31, 79, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 148, 149, 887, 889, 1004, 1007, 1037, 1038, 1095, 1096, 1097, 1098, 1099, 1108, 1109, 1110, 1111, 1112, 1131, 1137, 1144, 1190, 1200, 1647, 1686, 1689, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2149, 2150], "hopefulli": [2, 3, 4, 6, 7, 9, 10, 11, 13, 62, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 148, 169, 212, 213, 219, 305, 410, 445, 1413, 1414, 1609, 1647, 1711, 1852, 1868, 1949, 1953, 1973, 1978, 2005, 2052, 2068, 2114, 2143, 2146, 2151, 2161, 2173, 2175, 2177, 2183], "paint": [2, 132], "pictur": [2, 9, 132], "how": [2, 4, 5, 7, 8, 9, 10, 11, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 148, 149, 2126, 2130, 2134, 2149, 2150, 2151, 2156, 2159, 2161, 2172, 2173, 2174], "pleas": [2, 3, 4, 6, 7, 9, 10, 11, 13, 62, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 148, 169, 212, 213, 219, 305, 410, 445, 1413, 1414, 1609, 1647, 1711, 1852, 1868, 1949, 1953, 1973, 1978, 2005, 2052, 2068, 2114, 2126, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2146, 2151, 2161, 2173, 2175, 2177, 2183], "reach": [2, 3, 4, 6, 7, 9, 10, 11, 13, 62, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 148, 169, 212, 213, 219, 305, 410, 445, 1413, 1414, 1609, 1647, 1711, 1852, 1868, 1949, 1953, 1966, 1973, 1978, 2005, 2052, 2068, 2114, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2146, 2151, 2161, 2173, 2175, 2177, 2183], "out": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 148, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 323, 324, 325, 326, 327, 344, 345, 347, 410, 436, 437, 438, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844, 845, 847, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 878, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 913, 914, 915, 916, 917, 918, 919, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1103, 1104, 1105, 1106, 1107, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1421, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1466, 1468, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1515, 1517, 1519, 1521, 1525, 1540, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1644, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1812, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1944, 1945, 1946, 1947, 1948, 1949, 1953, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2026, 2027, 2028, 2029, 2030, 2031, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2146, 2151, 2161, 2169, 2173, 2175, 2177, 2183, 2276, 2278, 2280], "discord": [2, 3, 4, 6, 7, 9, 10, 11, 13, 62, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 148, 169, 212, 213, 219, 305, 410, 445, 1413, 1414, 1609, 1647, 1711, 1852, 1868, 1949, 1953, 1973, 1978, 2005, 2052, 2068, 2114, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2146, 2151, 2161, 2173, 2175, 2177, 2183], "you": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 31, 32, 33, 62, 79, 80, 81, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 148, 149, 169, 212, 213, 219, 305, 410, 445, 974, 977, 1190, 1197, 1261, 1262, 1263, 1264, 1349, 1354, 1413, 1414, 1473, 1474, 1475, 1476, 1477, 1609, 1647, 1711, 1852, 1868, 1949, 1953, 1973, 1978, 2005, 2052, 2068, 2114, 2125, 2126, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2146, 2151, 2161, 2173, 2175, 2177, 2183], "ani": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 32, 33, 40, 41, 58, 59, 60, 61, 62, 67, 68, 75, 76, 77, 78, 79, 80, 81, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 148, 149, 169, 212, 213, 219, 221, 222, 224, 225, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 259, 260, 262, 264, 267, 269, 272, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 333, 367, 370, 381, 384, 392, 410, 436, 437, 438, 439, 440, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 547, 548, 549, 550, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 682, 683, 684, 685, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 804, 807, 809, 812, 814, 817, 870, 871, 876, 877, 881, 884, 896, 899, 906, 907, 918, 921, 923, 926, 933, 940, 979, 982, 1131, 1132, 1133, 1134, 1136, 1138, 1139, 1145, 1146, 1147, 1164, 1167, 1168, 1190, 1208, 1219, 1222, 1224, 1227, 1229, 1232, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1285, 1288, 1349, 1353, 1354, 1375, 1378, 1379, 1382, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1473, 1476, 1490, 1493, 1499, 1501, 1502, 1503, 1505, 1508, 1521, 1524, 1531, 1533, 1570, 1573, 1591, 1595, 1596, 1608, 1609, 1639, 1643, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1681, 1684, 1686, 1689, 1691, 1694, 1701, 1704, 1706, 1709, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1846, 1847, 1851, 1852, 1868, 1869, 1872, 1874, 1877, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1897, 1899, 1902, 1904, 1907, 1909, 1912, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 1949, 1950, 1951, 1952, 1953, 1957, 1960, 1961, 1963, 1964, 1971, 1973, 1974, 1977, 1978, 1994, 1997, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2124, 2125, 2126, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2146, 2151, 2161, 2173, 2175, 2177, 2183, 2186, 2190, 2221, 2249, 2256, 2312, 2318, 2328], "question": [2, 3, 4, 6, 7, 9, 10, 11, 13, 62, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 148, 149, 169, 212, 213, 219, 305, 410, 445, 1413, 1414, 1609, 1647, 1711, 1852, 1868, 1949, 1953, 1973, 1978, 2005, 2052, 2068, 2114, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2146, 2151, 2161, 2173, 2175, 2177, 2183], "With": [3, 4, 10, 13, 16, 17, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 50, 51, 56, 57, 62, 67, 68, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 118, 124, 126, 128, 130, 132, 169, 170, 171, 174, 176, 177, 180, 182, 185, 187, 190, 192, 195, 197, 200, 202, 205, 207, 210, 219, 231, 233, 240, 241, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 262, 264, 267, 274, 275, 276, 277, 278, 279, 280, 282, 285, 300, 304, 305, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 334, 344, 346, 348, 349, 352, 360, 363, 381, 384, 393, 396, 398, 399, 400, 401, 410, 414, 417, 420, 445, 446, 449, 451, 454, 456, 459, 461, 464, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 495, 496, 499, 506, 509, 510, 511, 514, 515, 516, 519, 521, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 561, 564, 565, 566, 569, 571, 572, 573, 574, 575, 576, 579, 581, 584, 586, 589, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 604, 606, 609, 611, 612, 613, 614, 615, 616, 619, 621, 624, 626, 629, 636, 639, 641, 644, 646, 647, 649, 651, 654, 656, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 719, 721, 724, 726, 729, 731, 734, 736, 737, 739, 746, 750, 751, 755, 756, 757, 760, 761, 762, 763, 764, 765, 769, 772, 773, 834, 836, 838, 842, 849, 852, 865, 866, 867, 868, 869, 870, 871, 881, 884, 885, 891, 894, 906, 913, 917, 918, 921, 923, 926, 927, 928, 931, 933, 937, 939, 952, 958, 960, 979, 982, 994, 996, 997, 998, 999, 1001, 1003, 1004, 1006, 1008, 1050, 1051, 1053, 1054, 1056, 1057, 1058, 1064, 1068, 1074, 1076, 1078, 1089, 1090, 1091, 1092, 1093, 1103, 1105, 1107, 1131, 1136, 1138, 1149, 1152, 1154, 1156, 1158, 1159, 1163, 1164, 1166, 1167, 1168, 1169, 1172, 1183, 1184, 1190, 1198, 1201, 1205, 1208, 1209, 1211, 1234, 1236, 1238, 1240, 1242, 1243, 1244, 1245, 1249, 1250, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1270, 1281, 1282, 1285, 1288, 1301, 1302, 1303, 1304, 1305, 1312, 1315, 1317, 1318, 1320, 1322, 1325, 1334, 1337, 1349, 1353, 1354, 1355, 1362, 1366, 1367, 1368, 1369, 1370, 1371, 1383, 1384, 1386, 1398, 1399, 1414, 1415, 1417, 1418, 1419, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1445, 1447, 1448, 1449, 1451, 1452, 1453, 1456, 1458, 1461, 1463, 1465, 1473, 1476, 1477, 1478, 1481, 1490, 1493, 1499, 1502, 1505, 1506, 1508, 1510, 1511, 1513, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1565, 1566, 1568, 1575, 1577, 1578, 1579, 1581, 1582, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1603, 1604, 1605, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1636, 1637, 1639, 1640, 1642, 1643, 1645, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1674, 1677, 1681, 1684, 1686, 1687, 1689, 1691, 1694, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1725, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1799, 1802, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1830, 1831, 1832, 1833, 1835, 1836, 1852, 1853, 1856, 1857, 1858, 1862, 1863, 1866, 1867, 1868, 1869, 1872, 1873, 1879, 1882, 1884, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1897, 1899, 1902, 1904, 1907, 1908, 1909, 1912, 1913, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1955, 1957, 1960, 1961, 1962, 1963, 1965, 1971, 1972, 1973, 1974, 1976, 1977, 1978, 1979, 1982, 1984, 1988, 1989, 1993, 1994, 1998, 2000, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2014, 2016, 2019, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2040, 2041, 2042, 2046, 2052, 2053, 2056, 2057, 2058, 2061, 2063, 2066, 2067, 2068, 2069, 2071, 2072, 2073, 2074, 2076, 2077, 2078, 2079, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123, 2134, 2137], "central": [3, 9, 130, 2140], "goal": [3, 9, 2134, 2140], "being": [3, 4, 10, 11, 13, 16, 17, 65, 66, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 130, 132, 135, 148, 149, 219, 221, 222, 1190, 1208, 1285, 1288, 1414, 1432, 1495, 1559, 1711, 1743, 1746, 2126, 2128, 2129, 2130, 2132, 2133, 2134, 2135, 2140, 2141, 2149, 2150, 2151, 2159, 2197, 2219, 2260, 2261], "would": [3, 5, 7, 9, 10, 11, 27, 28, 31, 44, 45, 75, 76, 79, 92, 93, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 134, 136, 137, 149, 169, 182, 185, 202, 205, 410, 436, 437, 438, 439, 440, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1141, 1142, 1868, 1904, 1905, 1906, 1907, 1908, 2126, 2134, 2140, 2249, 2256], "entir": [3, 4, 9, 10, 11, 56, 57, 58, 59, 65, 66, 80, 81, 104, 105, 106, 107, 111, 112, 114, 116, 118, 120, 125, 126, 127, 128, 130, 132, 135, 136, 137, 149, 410, 435, 906, 907, 1131, 1138, 1139, 1190, 1208, 1285, 1288, 1499, 1501, 1503, 2068, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2134, 2140, 2141, 2161, 2170], "forgiven": 3, "rais": [3, 11, 31, 32, 33, 44, 45, 48, 49, 58, 59, 65, 66, 79, 80, 81, 92, 93, 96, 97, 106, 107, 111, 113, 120, 121, 125, 126, 132, 134, 305, 323, 326, 445, 556, 559, 691, 694, 824, 827, 933, 943, 1009, 1010, 1011, 1012, 1013, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1306, 1308, 1349, 1353, 1354, 1414, 1427, 1428, 1429, 1430, 1431, 1487, 1515, 1516, 1518, 1556, 1570, 1573, 1575, 1579, 1596, 1609, 1638, 1644, 1646, 1711, 1759, 1762, 1769, 1772, 1837, 1841, 1868, 1884, 1887, 1904, 1905, 1906, 1907, 1908, 1924, 1927, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2005, 2021, 2024, 2068, 2083, 2086, 2091, 2094, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2173, 2174, 2177, 2181, 2186, 2192, 2249, 2252], "an": [3, 4, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 41, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 89, 92, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 148, 149, 169, 171, 172, 177, 178, 182, 183, 187, 190, 192, 193, 195, 197, 198, 200, 202, 203, 207, 208, 210, 212, 213, 219, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 262, 264, 265, 267, 269, 272, 279, 280, 282, 283, 285, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 328, 331, 349, 350, 352, 360, 361, 362, 363, 364, 367, 370, 381, 384, 392, 393, 394, 395, 396, 397, 410, 411, 436, 437, 438, 439, 440, 445, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 531, 532, 533, 534, 535, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 653, 654, 656, 657, 659, 661, 662, 663, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 728, 729, 730, 731, 732, 734, 736, 737, 739, 741, 743, 745, 746, 747, 748, 750, 751, 753, 755, 756, 758, 760, 761, 763, 765, 769, 772, 773, 774, 777, 784, 785, 786, 787, 788, 789, 790, 792, 794, 795, 797, 799, 800, 802, 804, 807, 809, 812, 814, 817, 819, 820, 821, 822, 823, 824, 827, 834, 835, 836, 837, 838, 839, 840, 842, 849, 850, 852, 860, 861, 862, 864, 870, 871, 872, 874, 875, 876, 877, 878, 881, 884, 887, 889, 896, 899, 906, 907, 908, 909, 910, 911, 912, 918, 921, 923, 924, 925, 926, 927, 928, 931, 933, 935, 937, 940, 942, 949, 950, 952, 955, 958, 960, 961, 979, 980, 981, 982, 989, 992, 1029, 1031, 1046, 1048, 1059, 1060, 1061, 1062, 1063, 1069, 1070, 1072, 1084, 1085, 1086, 1087, 1088, 1095, 1096, 1097, 1098, 1099, 1113, 1115, 1117, 1119, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1144, 1145, 1146, 1147, 1149, 1150, 1152, 1159, 1162, 1164, 1165, 1167, 1168, 1169, 1183, 1184, 1190, 1191, 1192, 1193, 1195, 1202, 1205, 1206, 1207, 1208, 1209, 1212, 1219, 1222, 1224, 1227, 1229, 1232, 1240, 1243, 1245, 1248, 1251, 1252, 1253, 1254, 1255, 1261, 1262, 1263, 1264, 1273, 1274, 1285, 1288, 1306, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1322, 1325, 1334, 1335, 1337, 1339, 1340, 1341, 1349, 1354, 1362, 1364, 1366, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1389, 1392, 1393, 1394, 1395, 1396, 1397, 1413, 1414, 1427, 1429, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1466, 1469, 1473, 1476, 1490, 1493, 1499, 1502, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1549, 1550, 1551, 1552, 1553, 1563, 1575, 1576, 1578, 1579, 1586, 1590, 1591, 1595, 1596, 1608, 1609, 1619, 1638, 1639, 1643, 1646, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1681, 1684, 1686, 1689, 1691, 1694, 1701, 1704, 1706, 1709, 1711, 1712, 1713, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1730, 1732, 1733, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1754, 1756, 1759, 1760, 1762, 1764, 1767, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1868, 1869, 1870, 1872, 1874, 1875, 1877, 1879, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1899, 1902, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 1949, 1953, 1960, 1973, 1974, 1977, 1978, 1984, 1985, 1986, 1987, 1988, 2000, 2001, 2003, 2005, 2006, 2009, 2011, 2012, 2013, 2014, 2015, 2021, 2022, 2023, 2024, 2025, 2026, 2028, 2030, 2031, 2032, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2056, 2058, 2061, 2063, 2066, 2068, 2069, 2072, 2074, 2077, 2079, 2080, 2082, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2130, 2132, 2133, 2134, 2135, 2137, 2138, 2140, 2141, 2143, 2146, 2147, 2148, 2149, 2150, 2151, 2155, 2156, 2159, 2161, 2173, 2174, 2175, 2177, 2178, 2179, 2181, 2183, 2186, 2192, 2197, 2199, 2217, 2219, 2220, 2230, 2231, 2233, 2239, 2249, 2252, 2255, 2257, 2260, 2261, 2262, 2263, 2276, 2278, 2280, 2281, 2282], "eyebrow": 3, "want": [3, 5, 9, 10, 11, 60, 61, 108, 109, 115, 120, 124, 125, 128, 130, 135, 136, 137, 149, 974, 977, 1190, 1197, 2149, 2150, 2173, 2174, 2312, 2320], "somehow": 3, "tensorflow": [3, 4, 8, 9, 10, 11, 31, 32, 33, 79, 111, 115, 116, 117, 122, 125, 126, 127, 128, 129, 130, 132, 137, 149, 150, 156, 157, 410, 414, 784, 785, 786, 787, 788, 870, 876, 877, 923, 924, 925, 926, 927, 933, 935, 1164, 1168, 1375, 1378, 1379, 1382, 1414, 1575, 1577, 1579, 2125, 2126, 2132, 2135, 2137, 2138, 2140, 2141, 2186, 2187, 2193, 2276, 2279, 2280, 2312, 2320, 2326, 2328], "pytorch": [3, 4, 8, 9, 34, 35, 112, 116, 117, 120, 122, 123, 125, 126, 127, 129, 130, 132, 137, 149, 445, 711, 714, 1621, 1622, 2125, 2126, 2135, 2137, 2138, 2140, 2141, 2177, 2178, 2179, 2180, 2181, 2182], "jax": [3, 4, 8, 9, 10, 11, 31, 32, 33, 80, 81, 111, 113, 116, 117, 120, 122, 125, 126, 127, 128, 129, 130, 132, 134, 137, 149, 150, 156, 157, 933, 948, 1039, 1040, 1042, 1414, 1427, 1428, 1429, 1430, 1575, 1578, 1608, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2126, 2135, 2137, 2140, 2141, 2312, 2318, 2320, 2322, 2324], "other": [3, 6, 9, 10, 11, 13, 16, 17, 25, 26, 31, 32, 33, 44, 45, 56, 57, 62, 65, 66, 67, 68, 73, 74, 77, 78, 79, 80, 81, 92, 93, 104, 105, 111, 112, 114, 115, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 132, 134, 136, 137, 147, 148, 149, 219, 221, 222, 274, 277, 305, 318, 319, 320, 392, 445, 561, 564, 626, 629, 666, 668, 670, 829, 830, 831, 832, 833, 896, 897, 898, 899, 900, 933, 936, 940, 1312, 1313, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1874, 1875, 1924, 1925, 1926, 1978, 1994, 1997, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2125, 2126, 2130, 2132, 2133, 2134, 2140, 2141], "strong": [3, 149, 2134, 2249, 2256], "industri": [3, 2134, 2136], "back": [3, 10, 11, 31, 44, 45, 79, 92, 93, 112, 116, 120, 124, 131, 149, 994, 995, 996, 997, 998, 1190, 1198, 1414, 1554, 1597, 1868, 1904, 1905, 1906, 1907, 1908, 2132, 2136, 2151, 2156, 2159, 2173, 2174, 2177, 2181], "momentum": [3, 31, 79, 1089, 1090, 1091, 1092, 1093, 1281, 1282], "won": [3, 4, 10, 11, 114, 137], "t": [3, 4, 6, 7, 9, 10, 11, 13, 16, 17, 31, 38, 39, 60, 61, 79, 86, 87, 108, 109, 110, 112, 113, 114, 115, 116, 118, 124, 125, 128, 129, 130, 132, 134, 135, 136, 137, 149, 843, 923, 924, 925, 926, 927, 933, 948, 1039, 1040, 1041, 1042, 1044, 1045, 1164, 1168, 1414, 1575, 1579, 1609, 1619, 1647, 1691, 1694, 1696, 1697, 1698, 1699, 1953, 1962, 2132, 2134, 2136, 2312, 2320], "ad": [3, 8, 9, 10, 11, 44, 45, 92, 93, 108, 109, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 136, 149, 779, 782, 933, 934, 951, 1103, 1106, 1414, 1565, 1568, 1570, 1573, 1711, 1738, 1741, 1743, 1746, 1868, 1884, 1885, 1886, 1887, 1888, 2133, 2134, 2183, 2184], "just": [3, 4, 10, 11, 56, 57, 111, 113, 115, 116, 118, 119, 123, 124, 125, 126, 127, 128, 132, 134, 135, 149, 870, 876, 877, 1375, 1378, 1379, 1382, 2068, 2079, 2080, 2082, 2134, 2135, 2140, 2161, 2170, 2276, 2278], "make": [3, 4, 9, 10, 11, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 2132, 2134, 2135, 2136, 2137, 2140, 2141, 2312, 2323], "problem": [3, 11, 111, 112, 126, 134, 2130, 2136, 2140], "even": [3, 4, 10, 11, 31, 79, 111, 115, 116, 117, 119, 122, 123, 125, 126, 127, 130, 134, 135, 136, 137, 149, 445, 691, 694, 711, 714, 1190, 1208, 1285, 1286, 1287, 1288, 1289, 2140], "wors": 3, "rather": [3, 11, 32, 33, 65, 66, 80, 81, 111, 114, 116, 119, 125, 126, 127, 128, 129, 137, 149, 219, 221, 222, 410, 435, 1414, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1534, 1535, 1536, 1537, 1538, 2130, 2133, 2134], "funni": 3, "comic": 3, "strip": 3, "": [3, 4, 5, 6, 7, 9, 10, 11, 23, 24, 31, 32, 33, 34, 35, 40, 41, 56, 57, 79, 82, 83, 88, 89, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 148, 149, 150, 156, 157, 213, 219, 264, 265, 267, 287, 289, 291, 292, 294, 296, 305, 306, 307, 308, 309, 310, 354, 355, 357, 358, 410, 416, 423, 424, 434, 445, 706, 709, 779, 780, 781, 782, 783, 849, 851, 853, 887, 889, 933, 934, 948, 951, 999, 1001, 1003, 1004, 1006, 1008, 1039, 1040, 1041, 1042, 1103, 1104, 1105, 1106, 1107, 1131, 1137, 1148, 1190, 1208, 1276, 1278, 1280, 1285, 1288, 1290, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1311, 1349, 1355, 1403, 1404, 1406, 1414, 1471, 1472, 1575, 1577, 1579, 1609, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1635, 1636, 1637, 1647, 1654, 1657, 1664, 1667, 1674, 1677, 1680, 1711, 1727, 1730, 1774, 1775, 1776, 1777, 1778, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1842, 1843, 1844, 1845, 1846, 1953, 1966, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2125, 2126, 2130, 2133, 2134, 2135, 2137, 2138, 2139, 2140, 2149, 2150, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2181, 2183, 2184, 2197, 2215, 2244, 2247, 2248, 2312, 2318, 2320, 2322, 2328], "easi": [3, 10, 11, 112, 114, 123, 127, 128, 130, 2132, 2134, 2140, 2141], "feasibl": [3, 9, 115], "space": [3, 23, 24, 31, 32, 33, 71, 72, 77, 78, 79, 80, 81, 130, 219, 221, 222, 254, 257, 259, 260, 261, 262, 263, 933, 948, 961, 1039, 1040, 1041, 1042, 1043, 1372, 1373, 1374, 1414, 1448, 1451, 1466, 1467, 1468, 1469, 1470, 1609, 1638, 1644, 1646], "howev": [3, 9, 10, 11, 40, 41, 88, 89, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 132, 134, 135, 136, 137, 149, 1711, 1799, 1802, 1809, 1810, 1811, 1812, 1813, 2133, 2134, 2140, 2312, 2328], "import": [3, 6, 8, 9, 10, 11, 60, 61, 71, 72, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 121, 125, 126, 127, 128, 129, 132, 134, 135, 137, 149, 259, 263, 410, 414, 415, 423, 424, 432, 433, 2126, 2130, 2132, 2134, 2137, 2138, 2140, 2276, 2277, 2278, 2279, 2280, 2312, 2318, 2319], "case": [3, 9, 10, 11, 18, 21, 22, 23, 24, 31, 32, 33, 44, 45, 56, 57, 62, 65, 66, 67, 68, 80, 81, 92, 93, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 136, 137, 149, 219, 264, 265, 267, 410, 414, 430, 441, 444, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 516, 519, 521, 524, 526, 529, 531, 534, 556, 559, 561, 564, 566, 569, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 646, 649, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 746, 750, 751, 755, 756, 760, 901, 902, 904, 906, 907, 933, 944, 945, 948, 960, 1014, 1017, 1019, 1022, 1039, 1040, 1042, 1131, 1138, 1139, 1306, 1309, 1334, 1337, 1414, 1515, 1516, 1518, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1711, 1799, 1802, 1868, 1904, 1905, 1906, 1907, 1908, 1953, 1957, 1963, 2068, 2083, 2086, 2087, 2088, 2090, 2091, 2094, 2100, 2103, 2104, 2108, 2109, 2111, 2113, 2133, 2137, 2161, 2172, 2173, 2174, 2177, 2181, 2230, 2234], "ivi": [3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 130, 131, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 176, 177, 182, 187, 192, 197, 202, 207, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 228, 229, 230, 231, 234, 235, 240, 243, 248, 249, 254, 259, 264, 269, 274, 279, 282, 287, 292, 297, 300, 305, 306, 307, 308, 309, 310, 311, 312, 313, 318, 323, 328, 333, 334, 335, 338, 339, 342, 343, 344, 348, 349, 354, 357, 360, 365, 366, 367, 372, 376, 381, 386, 391, 392, 393, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 441, 442, 443, 444, 445, 446, 451, 456, 461, 466, 471, 476, 481, 486, 491, 496, 501, 506, 511, 516, 521, 526, 531, 536, 541, 546, 551, 556, 561, 566, 571, 576, 581, 586, 591, 596, 601, 606, 611, 616, 621, 626, 631, 636, 641, 646, 651, 656, 661, 666, 671, 676, 681, 686, 691, 696, 701, 706, 711, 716, 721, 726, 731, 736, 741, 746, 751, 756, 761, 767, 768, 769, 770, 771, 772, 773, 774, 779, 784, 789, 794, 799, 804, 809, 814, 819, 824, 829, 834, 838, 843, 844, 848, 849, 855, 860, 865, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 887, 891, 896, 901, 906, 907, 908, 913, 918, 923, 928, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 969, 974, 979, 984, 989, 994, 999, 1004, 1009, 1014, 1019, 1024, 1029, 1032, 1037, 1038, 1039, 1044, 1045, 1046, 1050, 1054, 1059, 1064, 1069, 1074, 1079, 1084, 1089, 1094, 1095, 1100, 1101, 1102, 1103, 1108, 1113, 1117, 1121, 1126, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1154, 1159, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1178, 1183, 1184, 1185, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1219, 1224, 1229, 1234, 1240, 1245, 1250, 1251, 1256, 1261, 1266, 1271, 1272, 1273, 1274, 1276, 1281, 1282, 1283, 1284, 1285, 1290, 1291, 1296, 1301, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1317, 1322, 1329, 1334, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1362, 1367, 1372, 1375, 1379, 1383, 1389, 1393, 1398, 1403, 1408, 1414, 1415, 1420, 1421, 1422, 1427, 1432, 1433, 1438, 1443, 1444, 1445, 1448, 1453, 1458, 1463, 1466, 1471, 1472, 1473, 1478, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1495, 1496, 1497, 1498, 1499, 1504, 1505, 1510, 1515, 1520, 1521, 1526, 1531, 1534, 1539, 1540, 1541, 1542, 1543, 1544, 1549, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1570, 1575, 1580, 1581, 1585, 1586, 1591, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1608, 1609, 1610, 1611, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1634, 1638, 1639, 1644, 1645, 1646, 1647, 1648, 1649, 1654, 1659, 1664, 1669, 1674, 1679, 1680, 1681, 1686, 1691, 1696, 1701, 1706, 1711, 1712, 1717, 1722, 1727, 1732, 1737, 1738, 1743, 1748, 1753, 1758, 1759, 1764, 1769, 1774, 1779, 1784, 1789, 1794, 1799, 1804, 1809, 1814, 1819, 1823, 1827, 1832, 1837, 1842, 1847, 1852, 1853, 1858, 1863, 1868, 1869, 1874, 1879, 1884, 1889, 1894, 1899, 1904, 1909, 1914, 1919, 1924, 1929, 1934, 1939, 1944, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1978, 1979, 1984, 1989, 1994, 1999, 2000, 2005, 2006, 2011, 2016, 2021, 2026, 2031, 2032, 2037, 2042, 2047, 2052, 2053, 2058, 2063, 2068, 2069, 2074, 2079, 2083, 2087, 2091, 2095, 2100, 2104, 2109, 2114, 2115, 2120, 2125, 2126, 2128, 2129, 2130, 2141, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2186, 2187, 2197, 2199, 2217, 2219, 2220, 2276, 2277, 2278, 2279, 2280, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336], "unlik": [3, 111, 114, 115, 118, 125, 2139, 2141], "charger": 3, "charact": [3, 121, 126], "encod": [3, 32, 33, 80, 81, 135, 1414, 1466, 1467, 1468, 1469, 1470], "instant": [3, 2126], "messag": [3, 11, 115, 118, 120, 121, 126, 132, 134, 2285, 2286, 2287, 2288, 2290, 2291, 2292, 2293, 2297, 2299, 2301, 2303, 2304, 2306, 2335, 2336], "much": [3, 9, 10, 11, 112, 114, 116, 125, 126, 127, 129, 132, 134, 135, 779, 782, 933, 934, 951, 1103, 1106, 2132, 2134, 2140, 2141, 2151, 2156], "one": [3, 4, 9, 10, 11, 23, 24, 31, 32, 33, 38, 39, 40, 41, 44, 45, 50, 51, 52, 53, 56, 57, 65, 66, 71, 72, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 116, 118, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 134, 135, 137, 149, 219, 221, 222, 231, 233, 264, 265, 267, 274, 275, 276, 277, 278, 305, 318, 321, 328, 331, 410, 435, 445, 461, 465, 491, 495, 506, 510, 511, 514, 515, 636, 639, 656, 660, 661, 663, 664, 665, 666, 669, 769, 771, 774, 777, 779, 782, 789, 791, 792, 793, 794, 796, 798, 799, 801, 803, 819, 820, 821, 822, 823, 838, 842, 865, 866, 867, 868, 869, 881, 884, 885, 906, 913, 917, 933, 934, 939, 944, 945, 951, 956, 984, 985, 986, 987, 988, 994, 996, 997, 998, 999, 1001, 1003, 1004, 1006, 1008, 1014, 1017, 1019, 1022, 1050, 1051, 1053, 1064, 1068, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1095, 1096, 1097, 1098, 1099, 1103, 1105, 1106, 1107, 1131, 1136, 1138, 1141, 1142, 1144, 1154, 1156, 1158, 1164, 1165, 1190, 1191, 1198, 1234, 1235, 1236, 1237, 1238, 1240, 1242, 1244, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1349, 1352, 1353, 1354, 1355, 1383, 1384, 1386, 1398, 1399, 1414, 1415, 1417, 1418, 1419, 1540, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1555, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1605, 1609, 1611, 1613, 1614, 1615, 1617, 1618, 1621, 1623, 1624, 1626, 1628, 1629, 1634, 1636, 1637, 1639, 1640, 1642, 1643, 1647, 1649, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1662, 1664, 1665, 1667, 1669, 1672, 1674, 1675, 1676, 1677, 1678, 1681, 1684, 1711, 1712, 1716, 1717, 1721, 1748, 1751, 1759, 1760, 1762, 1764, 1765, 1766, 1767, 1768, 1784, 1787, 1794, 1795, 1796, 1797, 1798, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1868, 1869, 1873, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1897, 1904, 1908, 1909, 1912, 1913, 1919, 1922, 1939, 1940, 1942, 1973, 1974, 1976, 1977, 2005, 2006, 2007, 2008, 2009, 2010, 2021, 2022, 2023, 2024, 2025, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2063, 2067, 2068, 2069, 2071, 2073, 2079, 2080, 2082, 2126, 2134, 2135, 2137, 2140, 2230, 2239, 2249, 2252, 2285, 2286, 2312, 2320, 2323], "doe": [3, 7, 9, 11, 31, 44, 45, 65, 66, 79, 92, 93, 110, 113, 115, 116, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 149, 445, 516, 519, 870, 876, 877, 933, 955, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1349, 1353, 1354, 1375, 1378, 1379, 1382, 1414, 1515, 1518, 1711, 1737, 1868, 1914, 1915, 1916, 1917, 1918, 2125, 2130, 2134, 2135, 2141, 2186, 2189, 2190, 2191], "mandat": [3, 116, 125, 128, 129], "adopt": [3, 11, 112, 122, 130, 2133, 2134, 2139], "continu": [3, 4, 8, 9, 10, 110, 111, 121, 128, 149, 2134], "own": [3, 4, 10, 111, 115, 116, 119, 120, 126, 129, 132, 149, 2125, 2130, 2133, 2134, 2139, 2140], "call": [3, 7, 11, 31, 62, 67, 68, 73, 74, 79, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 149, 150, 163, 372, 373, 376, 378, 410, 411, 412, 435, 1164, 1172, 1250, 1261, 1262, 1263, 1264, 1349, 1354, 1414, 1495, 1559, 1596, 1609, 1619, 1620, 1625, 1711, 1799, 1802, 1953, 1954, 1960, 1964, 1965, 2134, 2135, 2138, 2149, 2150, 2161, 2172, 2173, 2174, 2177, 2181, 2197, 2219, 2312, 2322, 2328], "signatur": [3, 29, 30, 77, 78, 116, 117, 118, 119, 122, 125, 128, 129, 130, 305, 328, 331, 445, 586, 589, 651, 652, 653, 711, 714, 1190, 1208, 1285, 1288, 1711, 1743, 1744, 1799, 1802, 1868, 1944, 1948, 2068, 2100, 2103, 2131, 2140], "replac": [3, 7, 11, 31, 32, 33, 44, 45, 48, 49, 65, 66, 79, 80, 81, 92, 93, 96, 97, 114, 116, 117, 118, 124, 126, 128, 134, 137, 149, 219, 240, 241, 870, 871, 933, 955, 979, 982, 1251, 1252, 1253, 1254, 1255, 1414, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1868, 1869, 1870, 1871, 1872, 1873, 1978, 1979, 1980, 1981, 1982, 1983, 2141, 2230, 2234], "your": [3, 4, 5, 6, 7, 8, 9, 10, 111, 115, 119, 129, 130, 135, 136, 149, 2126, 2134], "1": [3, 4, 7, 10, 11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 113, 114, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 149, 169, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 223, 231, 233, 240, 241, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 267, 274, 275, 276, 277, 278, 279, 280, 282, 285, 300, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 344, 345, 346, 348, 349, 351, 352, 353, 360, 361, 364, 376, 377, 378, 379, 380, 381, 384, 393, 394, 397, 410, 416, 417, 418, 419, 420, 421, 425, 428, 429, 431, 436, 437, 438, 439, 440, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 636, 638, 639, 640, 646, 647, 648, 649, 650, 651, 653, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 818, 819, 820, 821, 822, 823, 824, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 844, 845, 846, 847, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 967, 969, 970, 971, 972, 973, 974, 977, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1117, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1145, 1146, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1411, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1486, 1490, 1491, 1492, 1493, 1494, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1540, 1542, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1573, 1575, 1577, 1579, 1581, 1582, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1922, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1955, 1957, 1960, 1961, 1962, 1963, 1965, 1966, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2149, 2150, 2151, 2152, 2155, 2156, 2157, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2181, 2183, 2184, 2197, 2218, 2230, 2232, 2233, 2234, 2235, 2238, 2239, 2240, 2241, 2242, 2244, 2245, 2249, 2250, 2252, 2255, 2256, 2260, 2261, 2262, 2263, 2276, 2277, 2278, 2279, 2280, 2312, 2322, 2328], "10": [3, 7, 10, 23, 24, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 48, 49, 52, 53, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 115, 116, 118, 127, 128, 132, 134, 135, 219, 249, 251, 253, 254, 257, 259, 260, 261, 262, 263, 445, 456, 457, 458, 459, 460, 491, 492, 494, 496, 497, 499, 511, 512, 513, 514, 515, 531, 532, 533, 534, 535, 561, 564, 581, 584, 611, 614, 621, 622, 623, 624, 625, 671, 674, 696, 697, 699, 726, 727, 728, 729, 730, 731, 733, 734, 735, 779, 780, 782, 799, 802, 804, 805, 807, 809, 810, 812, 814, 818, 838, 839, 840, 855, 857, 858, 859, 881, 884, 885, 908, 909, 910, 911, 912, 933, 934, 938, 947, 948, 951, 952, 956, 994, 995, 996, 997, 998, 1009, 1011, 1013, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1059, 1060, 1061, 1062, 1063, 1103, 1106, 1108, 1109, 1110, 1111, 1112, 1131, 1132, 1133, 1136, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1158, 1190, 1193, 1195, 1198, 1202, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1234, 1235, 1236, 1237, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1301, 1302, 1303, 1304, 1305, 1322, 1324, 1326, 1349, 1352, 1354, 1355, 1393, 1394, 1396, 1414, 1432, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1461, 1466, 1467, 1468, 1469, 1470, 1473, 1476, 1478, 1480, 1481, 1482, 1486, 1495, 1505, 1507, 1508, 1509, 1510, 1513, 1514, 1549, 1550, 1551, 1552, 1553, 1559, 1565, 1567, 1568, 1569, 1600, 1609, 1626, 1627, 1628, 1629, 1647, 1649, 1651, 1652, 1653, 1654, 1657, 1664, 1667, 1686, 1687, 1689, 1711, 1722, 1723, 1725, 1732, 1735, 1753, 1756, 1759, 1761, 1763, 1764, 1767, 1769, 1772, 1784, 1787, 1809, 1813, 1814, 1818, 1819, 1822, 1868, 1889, 1892, 1914, 1917, 1919, 1921, 1923, 1924, 1927, 1929, 1930, 1932, 1939, 1940, 1942, 1943, 1953, 1960, 1962, 1965, 1973, 1974, 1976, 1977, 1978, 1979, 1982, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1998, 2005, 2021, 2024, 2031, 2032, 2034, 2036, 2052, 2058, 2061, 2068, 2069, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2091, 2094, 2095, 2097, 2099, 2104, 2108, 2109, 2112, 2113, 2139, 2177, 2179, 2230, 2233, 2235, 2238, 2239, 2240, 2241, 2249, 2255], "100": [3, 4, 23, 24, 31, 71, 72, 77, 78, 79, 80, 81, 115, 128, 135, 136, 137, 149, 219, 259, 260, 261, 262, 263, 445, 511, 514, 731, 733, 734, 735, 870, 876, 877, 906, 933, 951, 955, 1103, 1106, 1131, 1138, 1251, 1252, 1253, 1254, 1255, 1375, 1378, 1379, 1382, 1414, 1478, 1480, 1481, 1482, 1510, 1513, 1514, 1549, 1551, 1552, 1711, 1753, 1756, 1953, 1960, 2126], "despit": [3, 114, 116, 117, 127, 130, 132, 2131, 2134], "distinct": [3, 10, 114, 119, 125, 126, 131, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2126, 2134], "still": [3, 9, 11, 40, 41, 65, 66, 88, 89, 112, 116, 119, 120, 125, 126, 128, 130, 136, 149, 1711, 1809, 1810, 1811, 1812, 1813, 2126, 2131, 2134, 2140], "believ": [3, 11], "share": [3, 65, 66, 113, 114, 118, 123, 126, 127, 128, 130, 132, 305, 403, 2132, 2133, 2140, 2230, 2232, 2238, 2239, 2244, 2245], "bring": [3, 111, 128, 132, 133, 2125], "benefit": [3, 4, 10, 112, 114, 125, 130, 134, 135, 149, 2132, 2136, 2139], "unrel": [3, 11], "what": [3, 4, 6, 11, 110, 114, 115, 118, 119, 122, 124, 126, 127, 128, 131, 132, 134, 135, 136, 137, 148, 149, 2126, 2130, 2135, 2136, 2139, 2249, 2256], "again": [3, 4, 11, 112, 113, 114, 118, 120, 125, 126, 128, 129, 130, 135, 137, 149, 1711, 1799, 1802, 2139, 2140], "contrari": 3, "bumpi": 3, "road": 3, "allud": [3, 135], "most": [3, 8, 9, 10, 65, 66, 71, 72, 112, 114, 115, 116, 117, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 149, 219, 274, 276, 277, 278, 1711, 1737, 1738, 1741, 2134, 2135, 2137, 2138, 2140, 2141], "technologi": [3, 2132, 2136], "sector": [3, 29, 30, 77, 78, 445, 456, 457, 458, 459, 460, 471, 472, 473, 474, 475, 486, 487, 488, 489, 490], "full": [3, 4, 11, 13, 16, 17, 40, 41, 62, 67, 68, 86, 87, 88, 89, 116, 119, 120, 122, 126, 128, 130, 132, 149, 219, 305, 349, 352, 445, 581, 584, 611, 614, 1414, 1485, 1497, 1555, 1561, 1598, 1602, 1647, 1654, 1657, 1664, 1667, 1669, 1671, 1673, 1674, 1677, 1711, 1774, 1775, 1777, 1794, 1795, 1796, 1797, 1798, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 2132, 2134, 2140, 2197, 2216, 2244, 2247, 2276, 2277, 2278, 2279, 2280], "success": 3, "reason": [3, 9, 11, 111, 112, 114, 115, 116, 118, 123, 125, 126, 129, 130, 132, 134, 445, 706, 709, 2140], "build": [3, 5, 6, 10, 115, 116, 123, 131, 133, 136, 137, 149, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2125, 2126, 2132, 2134, 2136, 2139, 2140, 2141, 2161, 2172, 2173, 2174], "custom": [3, 31, 79, 115, 120, 127, 128, 136, 769, 773, 843, 1044, 1045, 1362, 1363, 1364, 1365, 1366, 2134, 2138, 2139, 2140], "comput": [3, 4, 10, 14, 15, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 56, 57, 63, 64, 65, 66, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 104, 105, 114, 115, 116, 123, 126, 128, 130, 132, 135, 149, 182, 183, 184, 186, 202, 203, 204, 206, 410, 435, 445, 461, 464, 491, 494, 506, 509, 516, 519, 546, 549, 551, 552, 553, 554, 555, 576, 579, 581, 584, 606, 609, 611, 614, 641, 644, 646, 649, 651, 654, 656, 659, 666, 668, 670, 681, 684, 701, 702, 703, 706, 707, 708, 709, 710, 769, 770, 774, 777, 804, 807, 809, 812, 814, 815, 817, 834, 836, 843, 849, 852, 870, 872, 874, 875, 881, 884, 887, 889, 918, 921, 923, 924, 925, 926, 927, 928, 931, 933, 937, 944, 945, 946, 948, 952, 956, 962, 963, 984, 987, 1014, 1017, 1019, 1022, 1024, 1027, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1048, 1054, 1057, 1069, 1070, 1071, 1073, 1074, 1077, 1079, 1082, 1113, 1115, 1117, 1119, 1121, 1124, 1125, 1131, 1132, 1133, 1134, 1136, 1137, 1141, 1142, 1145, 1146, 1147, 1149, 1152, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1178, 1181, 1183, 1184, 1190, 1201, 1204, 1211, 1214, 1217, 1219, 1222, 1224, 1227, 1229, 1230, 1232, 1234, 1235, 1236, 1237, 1238, 1250, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1301, 1302, 1303, 1304, 1305, 1349, 1352, 1353, 1354, 1355, 1367, 1368, 1369, 1370, 1371, 1403, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1609, 1611, 1614, 1619, 1620, 1621, 1622, 1625, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1674, 1677, 1679, 1680, 1681, 1684, 1691, 1692, 1693, 1694, 1695, 1701, 1704, 1711, 1712, 1715, 1717, 1718, 1719, 1720, 1721, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1758, 1759, 1762, 1764, 1767, 1794, 1795, 1796, 1797, 1798, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1852, 1853, 1856, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1884, 1887, 1953, 1960, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2068, 2069, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2125, 2130, 2132, 2134, 2135, 2137, 2138, 2140, 2197, 2218, 2219, 2249, 2256], "thank": [3, 135], "interoper": [3, 2131, 2132, 2134, 2137], "compon": [3, 132, 1609, 1638, 1644, 1646, 2130, 2135, 2137], "bio": [3, 10], "hardwar": [3, 10, 13, 16, 17, 130, 2128, 2129, 2130, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140], "initi": [3, 11, 38, 39, 62, 65, 66, 67, 68, 86, 87, 113, 116, 117, 127, 128, 132, 1647, 1696, 1697, 1698, 1699, 2134, 2140, 2141, 2146, 2147, 2149, 2150, 2152, 2153, 2154, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2170, 2171, 2172, 2173, 2174, 2177, 2181], "pcie": 3, "interfac": [3, 134, 137, 149, 2125, 2130, 2131, 2132, 2133, 2134, 2138, 2141], "motherboard": 3, "raid": 3, "storag": [3, 135], "virtual": [3, 6, 7, 11, 126, 2137, 2138], "bluetooth": 3, "wireless": 3, "exchang": [3, 8, 2130, 2132], "btx": 3, "form": [3, 5, 18, 19, 20, 21, 22, 23, 24, 34, 35, 40, 41, 65, 66, 88, 89, 123, 128, 130, 136, 137, 219, 224, 225, 226, 269, 272, 287, 289, 291, 292, 294, 296, 870, 873, 913, 916, 1050, 1052, 1064, 1067, 1190, 1196, 1203, 1208, 1213, 1285, 1288, 1398, 1402, 1414, 1420, 1580, 1585, 1621, 1622, 1647, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1725, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1827, 1828, 1829, 1830, 1831, 1953, 1955, 1966, 2134, 2135, 2140, 2151, 2155], "factor": [3, 34, 35, 38, 39, 40, 41, 79, 82, 83, 86, 87, 88, 89, 120, 410, 433, 434, 435, 1224, 1226, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1711, 1712, 1713, 1714, 1715, 1716, 2151, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2177, 2178, 2179, 2180, 2230, 2234, 2238, 2239, 2249, 2250, 2260, 2261, 2262, 2263], "sata": 3, "connect": [3, 10, 136, 137, 2132, 2161, 2171, 2172], "host": [3, 115, 149, 2139], "bu": [3, 88, 89, 1809, 1810, 1812], "adapt": [3, 82, 83, 1609, 1630, 1632, 1633, 2177, 2180], "devic": [3, 11, 13, 16, 17, 23, 24, 28, 31, 48, 49, 65, 66, 71, 72, 76, 79, 80, 81, 96, 97, 110, 113, 116, 120, 123, 124, 127, 128, 129, 130, 132, 137, 149, 219, 221, 222, 223, 224, 225, 226, 227, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 870, 871, 876, 877, 974, 975, 976, 978, 979, 980, 981, 982, 983, 1029, 1030, 1031, 1291, 1292, 1293, 1294, 1295, 1306, 1307, 1308, 1310, 1311, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1414, 1421, 1471, 1472, 1478, 1480, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2125, 2128, 2129, 2133, 2134, 2136, 2137, 2138, 2139, 2146, 2147, 2148, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2181, 2183, 2184, 2186, 2189, 2190, 2197, 2218, 2219, 2220, 2221, 2225, 2226], "html": [3, 7, 29, 30, 77, 78, 119, 305, 328, 331, 445, 586, 589, 651, 652, 653, 711, 714, 870, 876, 877, 1375, 1378, 1379, 1382, 1711, 1743, 1744, 1799, 1802, 1868, 1944, 1948, 2068, 2100, 2103], "enabl": [3, 10, 11, 31, 62, 65, 66, 67, 68, 112, 114, 123, 124, 125, 126, 128, 129, 130, 131, 133, 135, 137, 149, 887, 889, 1131, 1137, 1609, 1638, 1646, 2125, 2132, 2133, 2134, 2135, 2136, 2137, 2140, 2141], "anyon": [3, 5, 11, 115, 149, 2140], "websit": [3, 111], "tcp": 3, "ip": 3, "node": [3, 65, 66, 80, 81, 114, 126, 1427, 1429, 1575, 1576, 1578, 1953, 1964, 1965, 2135, 2151, 2152, 2155, 2156, 2159, 2308, 2309], "commun": [3, 5, 9, 10, 11, 149, 2126, 2133, 2134, 2136], "network": [3, 114, 123, 132, 136, 148, 1647, 1691, 1694, 2126, 2130, 2132, 2133, 2134, 2138, 2140, 2141, 2143, 2149, 2150, 2151, 2159, 2161, 2173, 2174], "smtp": 3, "possibl": [3, 5, 9, 10, 11, 31, 44, 45, 92, 93, 111, 114, 116, 118, 119, 125, 126, 127, 128, 130, 132, 135, 148, 149, 799, 802, 887, 889, 1131, 1137, 1190, 1193, 1414, 1540, 1647, 1686, 1689, 1868, 1904, 1905, 1906, 1907, 1908, 2068, 2083, 2086, 2091, 2094, 2132, 2134, 2140], "send": [3, 2139], "gmail": [3, 115], "outlook": 3, "pop": [3, 10], "u": [3, 5, 10, 11, 40, 41, 71, 72, 88, 89, 114, 115, 124, 125, 126, 127, 128, 129, 130, 136, 149, 259, 261, 1711, 1712, 1713, 1714, 1715, 1716, 1743, 1746, 1809, 1810, 1811, 1812, 1813, 1953, 1962], "email": [3, 115], "ieee": [3, 213, 305, 349, 352, 445, 461, 464, 561, 564, 626, 629, 706, 709, 731, 734], "754": [3, 213, 305, 349, 352, 445, 461, 464, 561, 564, 626, 629, 706, 709, 731, 734], "allow": [3, 6, 9, 11, 31, 79, 112, 115, 116, 120, 121, 124, 126, 127, 128, 132, 134, 149, 219, 254, 257, 1261, 1262, 1263, 1264, 1349, 1354, 1414, 1540, 2052, 2058, 2061, 2125, 2132, 2134, 2138, 2139, 2149, 2150, 2173, 2174, 2230, 2233, 2234, 2238, 2239, 2244, 2247, 2249, 2252, 2255, 2260, 2261], "calcul": [3, 9, 29, 30, 31, 42, 43, 56, 57, 62, 65, 66, 67, 68, 77, 78, 79, 90, 91, 104, 105, 119, 132, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 526, 529, 531, 534, 541, 544, 556, 559, 561, 564, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 674, 691, 694, 721, 724, 726, 729, 731, 734, 741, 745, 746, 750, 751, 755, 784, 785, 786, 787, 788, 834, 835, 836, 837, 923, 924, 925, 926, 927, 933, 935, 941, 948, 954, 960, 969, 972, 1037, 1038, 1039, 1040, 1041, 1042, 1108, 1109, 1110, 1111, 1112, 1164, 1168, 1173, 1176, 1183, 1184, 1190, 1208, 1261, 1262, 1263, 1264, 1285, 1288, 1334, 1337, 1349, 1354, 1711, 1743, 1746, 1799, 1802, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 2068, 2083, 2086, 2087, 2090, 2091, 2092, 2094, 2095, 2098, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2151, 2156, 2159, 2230, 2234, 2239, 2249, 2256], "live": [3, 4, 116, 2130, 2132], "depend": [3, 6, 9, 10, 11, 23, 24, 25, 26, 32, 33, 40, 41, 54, 55, 73, 74, 88, 89, 102, 103, 104, 105, 116, 119, 124, 125, 126, 127, 128, 130, 132, 149, 219, 231, 232, 233, 305, 313, 314, 315, 316, 317, 445, 446, 449, 451, 454, 456, 459, 466, 469, 471, 474, 476, 479, 481, 484, 526, 529, 531, 534, 556, 559, 561, 564, 616, 619, 621, 624, 626, 629, 631, 634, 691, 694, 721, 724, 726, 729, 746, 750, 751, 755, 933, 960, 1334, 1337, 1414, 1575, 1577, 1579, 1711, 1737, 1738, 1741, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1804, 1807, 1809, 1813, 2005, 2026, 2030, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2109, 2112, 2132, 2134, 2135], "did": [3, 9, 137, 2140], "aris": [3, 116, 149], "until": [3, 11, 121, 129, 132, 149, 2126, 2141], "wa": [3, 11, 56, 57, 58, 59, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 115, 118, 126, 132, 134, 171, 173, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 249, 251, 253, 274, 276, 278, 282, 284, 286, 300, 301, 303, 318, 320, 322, 328, 330, 332, 393, 395, 397, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 779, 781, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 823, 824, 826, 828, 829, 831, 833, 849, 851, 853, 865, 867, 869, 896, 900, 908, 912, 933, 959, 979, 981, 983, 999, 1003, 1059, 1063, 1069, 1071, 1073, 1103, 1105, 1107, 1126, 1128, 1130, 1154, 1158, 1185, 1187, 1189, 1276, 1278, 1280, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1329, 1332, 1334, 1336, 1338, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1393, 1394, 1403, 1404, 1406, 1408, 1409, 1411, 1414, 1415, 1417, 1419, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1596, 1603, 1604, 1606, 1621, 1623, 1639, 1640, 1642, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1686, 1688, 1690, 1691, 1693, 1695, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1743, 1745, 1747, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1774, 1776, 1778, 1794, 1796, 1798, 1799, 1801, 1803, 1827, 1828, 1830, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1869, 1871, 1873, 1884, 1888, 1889, 1891, 1893, 1904, 1906, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1939, 1940, 1942, 1944, 1945, 1947, 1953, 1967, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2016, 2018, 2020, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2053, 2055, 2057, 2068, 2069, 2071, 2073, 2074, 2076, 2078, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2133, 2134, 2136, 2312, 2328], "substanti": [3, 11, 112, 116, 128, 2134], "innov": 3, "growth": [3, 2137], "usag": [3, 116, 128, 132, 149, 410, 435, 2137], "relev": [3, 9, 10, 11, 23, 24, 71, 72, 112, 114, 115, 116, 118, 127, 128, 135, 150, 151, 219, 259, 260, 261, 262, 263, 2132, 2139, 2140, 2177, 2178, 2179, 2180, 2181, 2182], "area": [3, 29, 30, 77, 78, 125, 147, 445, 456, 457, 458, 459, 460, 471, 472, 473, 474, 475, 486, 487, 488, 489, 490, 1095, 1098, 1131, 1144, 2126, 2130], "necess": 3, "parti": [3, 149, 2133, 2134, 2140], "could": [3, 4, 9, 10, 11, 111, 115, 116, 118, 124, 125, 126, 127, 128, 132, 134, 135, 136, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2134, 2139, 2140], "easili": [3, 10, 112, 115, 126, 130, 135, 136, 137, 149, 2126, 2134, 2140, 2141], "engag": [3, 5, 11], "regard": [3, 8, 114, 126, 127, 130], "effect": [3, 9, 23, 24, 31, 34, 35, 56, 57, 79, 82, 83, 104, 105, 112, 114, 115, 119, 122, 125, 130, 149, 219, 264, 265, 267, 1095, 1096, 1097, 1098, 1099, 1131, 1144, 1609, 1611, 1614, 1634, 1635, 1636, 1637, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2230, 2234, 2238, 2239, 2260, 2263], "2015": [3, 2134], "sinc": [3, 10, 11, 31, 79, 111, 112, 114, 115, 125, 126, 149, 933, 1338, 2134, 2140], "alongsid": 3, "machin": [3, 10, 31, 40, 41, 79, 88, 89, 111, 123, 148, 305, 349, 352, 360, 363, 923, 924, 925, 926, 927, 1164, 1168, 1711, 1774, 1775, 1776, 1777, 1778, 1789, 1792, 2125, 2132, 2134, 2136, 2137, 2138, 2139, 2140], "given": [3, 4, 7, 9, 10, 11, 13, 31, 32, 33, 42, 43, 44, 45, 48, 49, 62, 65, 66, 79, 80, 81, 82, 83, 90, 91, 92, 93, 96, 97, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 136, 148, 169, 170, 176, 212, 213, 219, 221, 222, 234, 254, 257, 259, 262, 305, 335, 336, 338, 339, 340, 342, 343, 392, 410, 422, 430, 432, 433, 434, 435, 441, 444, 445, 779, 780, 782, 804, 807, 809, 812, 814, 815, 817, 819, 820, 821, 822, 823, 824, 827, 834, 835, 836, 837, 865, 866, 867, 868, 869, 881, 884, 896, 897, 898, 899, 900, 901, 902, 904, 913, 916, 923, 924, 925, 926, 927, 933, 934, 939, 940, 948, 949, 951, 956, 961, 964, 967, 974, 977, 984, 985, 986, 987, 988, 1039, 1040, 1041, 1042, 1064, 1067, 1069, 1072, 1079, 1080, 1081, 1082, 1083, 1095, 1096, 1097, 1098, 1099, 1103, 1106, 1126, 1129, 1131, 1132, 1133, 1134, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1164, 1168, 1183, 1184, 1185, 1188, 1190, 1196, 1197, 1203, 1211, 1213, 1219, 1222, 1224, 1227, 1229, 1230, 1232, 1266, 1269, 1281, 1283, 1284, 1291, 1292, 1294, 1306, 1307, 1308, 1309, 1311, 1367, 1371, 1372, 1374, 1398, 1402, 1413, 1414, 1478, 1479, 1480, 1481, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1560, 1609, 1611, 1614, 1615, 1617, 1618, 1621, 1624, 1626, 1628, 1629, 1630, 1632, 1633, 1634, 1636, 1637, 1647, 1648, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1674, 1677, 1679, 1680, 1681, 1684, 1711, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1872, 1884, 1885, 1886, 1887, 1888, 1889, 1892, 1894, 1896, 1898, 1899, 1900, 1901, 1902, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1934, 1938, 1939, 1943, 1949, 1953, 1961, 1962, 1971, 1972, 1973, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2003, 2005, 2052, 2058, 2061, 2063, 2066, 2068, 2069, 2072, 2074, 2077, 2114, 2131, 2136, 2137, 2140, 2141, 2143, 2146, 2148, 2151, 2161, 2173, 2174, 2175, 2177, 2183, 2186, 2189, 2190, 2191, 2197, 2207, 2220, 2230, 2232, 2233, 2234, 2238, 2239, 2240, 2241, 2244, 2245, 2246, 2247, 2249, 2252, 2253, 2254, 2255, 2257, 2258, 2260, 2261, 2262, 2263, 2276, 2281, 2282, 2285, 2287], "frame": [3, 148, 2134], "less": [3, 11, 13, 16, 17, 29, 30, 31, 40, 41, 48, 49, 56, 57, 62, 67, 68, 77, 78, 79, 88, 89, 96, 97, 114, 116, 118, 120, 122, 125, 126, 128, 130, 131, 132, 445, 451, 454, 456, 459, 466, 469, 481, 484, 521, 524, 610, 616, 619, 621, 624, 626, 629, 631, 634, 691, 694, 706, 709, 716, 719, 731, 734, 881, 882, 883, 884, 885, 887, 889, 933, 959, 1131, 1136, 1137, 1329, 1332, 1711, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1789, 1791, 1792, 1793, 1842, 1843, 1844, 1845, 1846, 1978, 1994, 1995, 1996, 1997, 1998, 2068, 2100, 2103, 2109, 2111, 2113, 2134, 2136], "matur": [3, 149, 2134], "state": [3, 10, 38, 39, 86, 87, 116, 119, 120, 122, 126, 128, 131, 132, 133, 135, 148, 305, 404, 405, 406, 407, 408, 1414, 1484, 1485, 1497, 1564, 1597, 1599, 1600, 1601, 1647, 1696, 1697, 1698, 1699, 2126, 2140, 2141, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2221], "than": [3, 6, 11, 13, 16, 17, 29, 30, 31, 32, 33, 40, 41, 44, 45, 48, 49, 50, 51, 52, 53, 56, 57, 62, 65, 66, 67, 68, 77, 78, 79, 80, 81, 88, 89, 92, 93, 96, 97, 98, 99, 100, 101, 104, 105, 111, 114, 115, 116, 118, 120, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 149, 219, 221, 222, 305, 349, 352, 410, 435, 445, 451, 454, 456, 459, 466, 469, 481, 484, 501, 504, 511, 514, 521, 524, 566, 569, 571, 574, 616, 619, 621, 624, 626, 629, 631, 634, 661, 662, 663, 664, 665, 691, 694, 706, 709, 716, 719, 731, 734, 756, 760, 774, 777, 778, 779, 782, 829, 830, 831, 832, 833, 881, 882, 883, 884, 885, 887, 889, 933, 934, 936, 951, 959, 961, 984, 985, 986, 987, 988, 999, 1002, 1004, 1007, 1079, 1080, 1081, 1082, 1083, 1103, 1106, 1131, 1136, 1137, 1141, 1142, 1164, 1165, 1190, 1199, 1200, 1329, 1332, 1372, 1373, 1374, 1414, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1534, 1535, 1536, 1537, 1538, 1711, 1717, 1720, 1759, 1762, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1789, 1791, 1792, 1793, 1842, 1843, 1844, 1845, 1846, 1868, 1869, 1872, 1889, 1890, 1891, 1892, 1893, 1919, 1922, 1978, 1994, 1995, 1996, 1997, 1998, 2005, 2021, 2022, 2023, 2024, 2025, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2131, 2132, 2133, 2134, 2140, 2141], "preced": [3, 136], "mention": [3, 9, 10, 11, 112, 118, 122, 123, 125, 126, 128, 130, 2134], "aros": 3, "70": [3, 80, 81, 881, 884, 1131, 1136, 1478, 1480, 1549, 1551, 1553, 1711, 1784, 1787, 2068, 2079, 2082], "80": [3, 31, 79, 120, 933, 948, 1039, 1040, 1041, 1042, 1164, 1172, 1250, 1711, 1784, 1787, 1953, 1965, 2068, 2079, 2082], "90": [3, 29, 30, 31, 77, 78, 79, 445, 516, 519, 536, 537, 539, 540, 696, 699, 700, 711, 713, 714, 715, 1190, 1209, 1322, 1323, 1324, 1325, 1326, 1711, 1784, 1787, 2068, 2079, 2082], "effort": [3, 5, 149, 2130, 2134, 2140], "stage": [3, 5, 7, 11, 110, 121, 128, 2126, 2134], "complet": [3, 9, 11, 40, 41, 65, 66, 88, 89, 111, 112, 114, 115, 118, 120, 126, 127, 128, 134, 135, 1711, 1794, 1795, 1796, 1797, 1798, 2132, 2244, 2247], "natur": [3, 40, 41, 88, 89, 112, 118, 120, 127, 148, 445, 556, 559, 616, 619, 626, 629, 711, 714, 1711, 1799, 1800, 1801, 1802, 1803], "like": [3, 7, 9, 10, 11, 23, 24, 31, 44, 45, 71, 72, 79, 92, 93, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 148, 149, 219, 259, 260, 261, 262, 263, 305, 333, 392, 784, 785, 786, 787, 788, 794, 797, 799, 802, 896, 897, 898, 899, 900, 933, 935, 940, 941, 943, 947, 950, 954, 959, 969, 970, 972, 994, 995, 996, 997, 998, 1009, 1010, 1012, 1032, 1033, 1034, 1035, 1036, 1084, 1085, 1086, 1087, 1088, 1159, 1161, 1162, 1163, 1173, 1174, 1175, 1176, 1177, 1190, 1192, 1193, 1198, 1245, 1247, 1248, 1249, 1329, 1330, 1331, 1332, 1333, 1339, 1340, 1341, 1711, 1737, 1868, 1904, 1905, 1906, 1907, 1908, 1978, 1994, 1997, 2126, 2134, 2139], "certainli": [3, 2140], "mission": [3, 2126, 2136], "creat": [3, 5, 6, 7, 9, 10, 11, 23, 24, 31, 48, 49, 65, 66, 71, 72, 79, 80, 81, 96, 97, 112, 115, 116, 117, 120, 124, 125, 126, 127, 128, 130, 132, 133, 136, 147, 148, 219, 221, 222, 224, 225, 226, 234, 235, 236, 238, 240, 241, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 297, 299, 300, 301, 302, 303, 304, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 870, 871, 876, 877, 901, 902, 903, 904, 905, 933, 955, 979, 980, 981, 982, 983, 1029, 1030, 1031, 1190, 1208, 1251, 1252, 1253, 1254, 1255, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1306, 1307, 1308, 1309, 1310, 1311, 1375, 1378, 1379, 1382, 1414, 1478, 1480, 1581, 1584, 1608, 1609, 1645, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2125, 2126, 2134, 2135, 2140, 2146, 2147, 2148, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2197, 2202, 2203, 2218, 2219, 2276, 2277, 2278, 2279, 2280], "At": [3, 9, 10, 111, 126, 128, 129, 2134], "process": [3, 4, 5, 7, 10, 11, 114, 115, 123, 126, 127, 128, 130, 132, 137, 410, 430, 444, 2132, 2133, 2134, 2137, 2138, 2140, 2141], "ourselv": [3, 2140], "lead": [3, 4, 40, 41, 62, 65, 66, 67, 68, 88, 89, 115, 118, 129, 149, 1711, 1794, 1795, 1796, 1797, 1798, 1809, 1810, 1811, 1812, 1813, 2249, 2256], "quansight": [3, 2140], "compani": [3, 2130], "made": [3, 6, 9, 11, 31, 44, 45, 79, 111, 112, 114, 115, 120, 125, 126, 129, 132, 134, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 1121, 1124, 1164, 1170, 1190, 1191, 1192, 1924, 1925, 2134], "organ": [3, 112, 114, 123, 126, 129, 2125], "panda": 3, "scipi": [3, 2136, 2141], "conda": [3, 7, 10, 2136], "dask": [3, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051], "apach": [3, 2136, 2140], "mxnet": [3, 2141], "onnx": [3, 2132, 2140], "scikit": 3, "jupyt": [3, 2136], "aw": 3, "cupi": [3, 2134, 2141], "net": [3, 4, 132, 137], "sympi": 3, "rai": [3, 445, 481, 484], "modin": 3, "spyder": 3, "includ": [3, 9, 11, 23, 24, 31, 32, 33, 40, 41, 50, 51, 56, 57, 58, 59, 65, 66, 71, 72, 77, 78, 79, 80, 81, 88, 89, 98, 99, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 148, 149, 219, 221, 222, 224, 225, 226, 254, 257, 259, 260, 261, 262, 263, 269, 272, 774, 778, 838, 842, 860, 862, 864, 865, 867, 869, 870, 876, 877, 896, 898, 900, 901, 903, 905, 918, 920, 922, 928, 930, 932, 933, 952, 969, 971, 973, 989, 991, 993, 999, 1001, 1003, 1004, 1006, 1008, 1009, 1011, 1013, 1014, 1016, 1018, 1019, 1021, 1023, 1024, 1026, 1028, 1032, 1034, 1036, 1046, 1047, 1049, 1050, 1053, 1054, 1056, 1058, 1069, 1071, 1073, 1074, 1076, 1078, 1084, 1086, 1088, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1125, 1149, 1150, 1152, 1154, 1156, 1158, 1173, 1175, 1177, 1234, 1236, 1238, 1240, 1242, 1244, 1251, 1253, 1255, 1256, 1258, 1260, 1261, 1265, 1266, 1268, 1276, 1278, 1280, 1291, 1293, 1295, 1301, 1303, 1305, 1329, 1331, 1333, 1375, 1378, 1379, 1382, 1383, 1384, 1386, 1389, 1390, 1391, 1403, 1404, 1406, 1408, 1409, 1411, 1414, 1499, 1500, 1501, 1502, 1503, 1603, 1604, 1605, 1606, 1607, 1711, 1832, 1833, 1835, 1842, 1843, 1844, 1845, 1846, 1953, 1954, 1978, 1994, 1997, 2005, 2011, 2012, 2013, 2014, 2015, 2068, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2131, 2132, 2134, 2136, 2139, 2140, 2141, 2151, 2159, 2161, 2171, 2172, 2175, 2176, 2197, 2218, 2230, 2234, 2238, 2239, 2260, 2261, 2262, 2263, 2332, 2334], "member": [3, 9, 11, 126], "googl": [3, 115, 2126], "octoml": [3, 2140], "einop": [3, 32, 33, 80, 81, 1414, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462], "further": [3, 4, 7, 11, 111, 112, 115, 118, 120, 122, 126, 128, 131, 132, 135, 136, 2126, 2139, 2140, 2249, 2256], "sponsor": 3, "lg": 3, "electron": 3, "microsoft": [3, 2134, 2139, 2141], "d": [3, 4, 5, 10, 31, 38, 39, 40, 41, 71, 72, 79, 80, 81, 86, 87, 88, 89, 110, 114, 128, 135, 259, 261, 305, 393, 396, 799, 800, 801, 802, 803, 804, 807, 809, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 844, 845, 847, 870, 876, 877, 891, 894, 974, 977, 984, 987, 999, 1000, 1001, 1002, 1003, 1079, 1082, 1131, 1132, 1133, 1134, 1141, 1142, 1145, 1146, 1147, 1164, 1166, 1172, 1190, 1193, 1197, 1199, 1219, 1222, 1224, 1227, 1229, 1230, 1231, 1232, 1233, 1250, 1306, 1307, 1357, 1358, 1360, 1375, 1378, 1379, 1382, 1422, 1424, 1426, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1657, 1659, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1711, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1764, 1765, 1766, 1767, 1768, 1784, 1787, 1832, 1833, 1834, 1835, 1836, 1953, 1957, 1961, 1962, 1963, 1971, 1972, 2126, 2130], "e": [3, 4, 5, 6, 7, 9, 10, 11, 13, 16, 17, 23, 24, 31, 34, 35, 40, 41, 48, 49, 54, 55, 56, 57, 79, 88, 89, 96, 97, 102, 103, 104, 105, 110, 111, 114, 120, 126, 128, 132, 135, 149, 213, 219, 231, 232, 233, 259, 260, 262, 264, 265, 267, 305, 312, 393, 396, 410, 413, 445, 446, 449, 481, 484, 501, 504, 511, 514, 521, 524, 556, 559, 566, 569, 571, 574, 586, 589, 616, 619, 626, 629, 661, 664, 666, 669, 691, 694, 706, 709, 769, 770, 804, 806, 807, 808, 809, 812, 819, 820, 821, 822, 823, 824, 827, 870, 871, 876, 877, 887, 889, 901, 902, 904, 979, 982, 1131, 1132, 1133, 1137, 1145, 1146, 1164, 1172, 1178, 1181, 1219, 1221, 1222, 1223, 1224, 1227, 1250, 1251, 1253, 1291, 1292, 1294, 1306, 1307, 1308, 1309, 1311, 1375, 1378, 1379, 1382, 1621, 1622, 1711, 1717, 1720, 1743, 1747, 1759, 1762, 1764, 1767, 1774, 1775, 1776, 1777, 1778, 1789, 1791, 1792, 1793, 1804, 1807, 1809, 1813, 1842, 1843, 1844, 1845, 1846, 1868, 1884, 1887, 1924, 1927, 1953, 1957, 1961, 1962, 1963, 1971, 1972, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2068, 2069, 2072, 2074, 2077, 2083, 2086, 2087, 2088, 2090, 2091, 2094, 2095, 2098, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2125, 2130, 2312, 2320], "shaw": 3, "co": [3, 8, 29, 30, 32, 33, 77, 78, 116, 132, 148, 445, 530, 1414, 1466, 1467, 1469, 2126], "intel": [3, 2132, 2139], "togeth": [3, 31, 65, 66, 79, 112, 114, 121, 126, 129, 130, 136, 137, 149, 779, 782, 923, 924, 925, 926, 927, 933, 934, 951, 1103, 1106, 1164, 1168, 2132, 2134, 2135, 2140, 2183, 2184], "major": [3, 116, 117, 127, 128, 149, 2005, 2021, 2024, 2131, 2134], "involv": [3, 5, 7, 25, 26, 73, 74, 110, 115, 116, 118, 130, 137, 305, 393, 394, 395, 396, 397, 445, 461, 464, 2134, 2140], "anoth": [3, 9, 10, 11, 114, 116, 120, 123, 124, 125, 126, 128, 130, 132, 134, 137, 219, 243, 246, 305, 318, 321, 328, 331, 2125, 2134, 2140], "promis": 3, "sign": [3, 10, 29, 30, 31, 40, 41, 77, 78, 79, 88, 89, 132, 137, 219, 221, 222, 445, 446, 449, 461, 464, 481, 484, 511, 514, 706, 707, 708, 709, 710, 720, 855, 856, 857, 858, 859, 933, 938, 1711, 1799, 1800, 1801, 1802, 1803, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108], "pursuit": 3, "unif": [3, 5, 134, 2130, 2140], "clearli": [3, 9, 11, 118, 127, 128, 2138], "lot": [3, 4, 115, 116, 124, 128, 149, 2133], "thought": [3, 10, 11, 122, 2132], "care": [3, 11, 126, 130, 137], "attent": [3, 11, 38, 39, 86, 87, 112, 1647, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 2161, 2172], "gone": [3, 131], "simplifi": [3, 120, 126, 132, 133, 136, 2130, 2132, 2133, 2134, 2137, 2140, 2141], "compat": [3, 13, 16, 17, 29, 30, 40, 41, 44, 45, 50, 51, 56, 57, 58, 59, 62, 67, 68, 77, 78, 88, 89, 92, 93, 98, 99, 104, 105, 106, 107, 113, 122, 126, 127, 129, 132, 149, 305, 323, 326, 445, 461, 462, 463, 464, 465, 481, 482, 483, 484, 485, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 671, 672, 673, 674, 675, 681, 682, 683, 684, 685, 691, 692, 693, 694, 695, 706, 707, 708, 709, 710, 741, 742, 743, 744, 745, 761, 762, 763, 764, 765, 1711, 1717, 1718, 1719, 1721, 1774, 1775, 1776, 1777, 1778, 1789, 1792, 1804, 1807, 1819, 1822, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1868, 1904, 1905, 1906, 1907, 1908, 2005, 2011, 2012, 2013, 2014, 2015, 2068, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126], "excit": [3, 5, 110, 2126], "complianc": 3, "hope": [3, 149, 2140], "due": [3, 6, 10, 111, 115, 120, 125, 126, 445, 711, 714, 2134], "suit": [3, 10, 110, 111, 115, 128, 135, 148, 2125, 2134, 2140], "some": [3, 4, 9, 10, 11, 65, 66, 82, 83, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 136, 148, 149, 410, 412, 445, 561, 564, 626, 629, 906, 907, 1131, 1138, 1139, 1609, 1611, 1614, 1615, 1617, 1618, 1621, 1624, 1626, 1628, 1629, 1630, 1632, 1633, 1634, 1636, 1637, 1953, 1965, 2125, 2126, 2130, 2131, 2133, 2134, 2135, 2140, 2141, 2161, 2169], "motiv": [3, 134], "great": [3, 4, 11, 128, 132, 134, 2140], "convinc": 3, "celebr": 3, "encourag": [3, 148, 149], "foundat": [3, 2137], "point": [4, 9, 10, 11, 25, 26, 29, 30, 31, 40, 41, 48, 49, 56, 57, 73, 74, 77, 78, 79, 88, 89, 96, 97, 104, 105, 111, 112, 115, 118, 119, 122, 125, 126, 128, 129, 130, 132, 134, 135, 148, 213, 219, 221, 222, 224, 226, 234, 240, 241, 248, 279, 280, 297, 299, 305, 313, 314, 315, 316, 317, 349, 350, 352, 365, 376, 379, 393, 396, 445, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 516, 519, 521, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 541, 544, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 691, 694, 706, 709, 711, 714, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 760, 761, 765, 819, 820, 821, 822, 824, 827, 829, 833, 870, 871, 873, 901, 902, 903, 904, 905, 906, 907, 933, 957, 960, 961, 979, 982, 1029, 1031, 1050, 1051, 1052, 1053, 1131, 1138, 1139, 1276, 1279, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1334, 1335, 1336, 1337, 1338, 1349, 1355, 1372, 1373, 1374, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1725, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1827, 1828, 1829, 1830, 1842, 1843, 1844, 1845, 1846, 1978, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2058, 2061, 2068, 2069, 2072, 2074, 2077, 2083, 2086, 2087, 2088, 2089, 2090, 2091, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2140, 2312, 2319, 2323], "mai": [4, 8, 9, 10, 11, 13, 16, 17, 27, 28, 29, 30, 31, 40, 41, 52, 53, 54, 55, 62, 67, 68, 75, 76, 77, 78, 88, 89, 102, 103, 111, 114, 115, 116, 125, 126, 127, 128, 133, 134, 136, 219, 221, 222, 243, 246, 410, 436, 437, 438, 439, 440, 445, 546, 547, 548, 549, 550, 581, 584, 611, 614, 646, 649, 651, 654, 681, 682, 683, 685, 933, 955, 1251, 1252, 1254, 1414, 1445, 1447, 1711, 1799, 1802, 1842, 1843, 1844, 1845, 1846, 2031, 2032, 2034, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2100, 2103, 2141, 2230, 2239], "ask": [4, 9, 10, 118, 132, 134, 149], "perfectli": [4, 2249, 2256], "happi": [4, 10, 149], "current": [4, 7, 9, 10, 11, 13, 16, 17, 32, 33, 62, 65, 66, 67, 68, 111, 113, 114, 115, 116, 117, 120, 123, 124, 126, 127, 128, 130, 132, 137, 148, 149, 305, 354, 355, 357, 358, 366, 404, 405, 406, 407, 408, 409, 410, 422, 423, 424, 425, 429, 431, 444, 1190, 1208, 1285, 1288, 1414, 1471, 1472, 1483, 1484, 1485, 1489, 1497, 1504, 1520, 1542, 1543, 1564, 1575, 1577, 1579, 1609, 1638, 1646, 1711, 1737, 1953, 1954, 1964, 1965, 2126, 2134, 2140, 2141, 2149, 2150, 2173, 2174, 2197, 2216, 2217, 2218, 2219, 2244, 2246, 2312, 2318, 2319, 2320, 2328], "us": [4, 5, 6, 8, 9, 11, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 136, 137, 148, 149, 150, 156, 157, 171, 172, 173, 175, 213, 219, 259, 260, 261, 262, 263, 274, 275, 305, 313, 314, 315, 316, 348, 354, 355, 357, 358, 372, 375, 376, 380, 391, 392, 410, 412, 423, 424, 426, 430, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 466, 467, 506, 508, 616, 617, 618, 620, 621, 622, 623, 625, 636, 638, 640, 641, 642, 643, 645, 646, 648, 650, 651, 652, 653, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 711, 712, 731, 732, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 870, 871, 872, 873, 874, 875, 887, 889, 901, 902, 903, 904, 905, 906, 907, 923, 924, 925, 926, 927, 933, 948, 955, 956, 961, 964, 967, 979, 982, 994, 995, 996, 997, 998, 1029, 1030, 1031, 1039, 1040, 1041, 1042, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1131, 1137, 1138, 1139, 1140, 1144, 1154, 1156, 1158, 1159, 1162, 1164, 1168, 1185, 1186, 1188, 1190, 1198, 1201, 1208, 1251, 1252, 1253, 1254, 1255, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1281, 1282, 1284, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1339, 1340, 1349, 1354, 1355, 1356, 1372, 1374, 1383, 1384, 1385, 1386, 1387, 1414, 1432, 1471, 1472, 1487, 1488, 1505, 1507, 1510, 1512, 1540, 1556, 1557, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1609, 1611, 1614, 1615, 1617, 1618, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1647, 1691, 1694, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1732, 1733, 1734, 1735, 1736, 1814, 1818, 1842, 1843, 1844, 1845, 1846, 1852, 1853, 1856, 1868, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1929, 1931, 1949, 1950, 1951, 1952, 1953, 1954, 1956, 1957, 1963, 1964, 1965, 1967, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2012, 2013, 2016, 2017, 2018, 2020, 2021, 2024, 2031, 2032, 2036, 2042, 2046, 2068, 2079, 2080, 2082, 2125, 2126, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2146, 2147, 2149, 2150, 2151, 2156, 2159, 2161, 2169, 2172, 2173, 2174, 2175, 2176, 2177, 2179, 2180, 2221, 2222, 2230, 2233, 2234, 2238, 2239, 2244, 2245, 2249, 2252, 2253, 2254, 2255, 2256, 2260, 2261, 2262, 2263, 2276, 2277, 2281, 2282, 2312, 2320, 2328], "abund": 4, "better": [4, 6, 110, 126, 127, 129, 130, 131, 134, 135, 136, 2137], "ll": [4, 5, 10, 11, 118, 125, 135], "give": [4, 6, 10, 11, 38, 39, 86, 87, 110, 113, 115, 118, 119, 122, 128, 305, 392, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1658, 1659, 1662, 1669, 1672, 1679, 1681, 1684, 1868, 1904, 1907, 2134, 2138, 2149, 2150, 2151, 2156], "two": [4, 9, 10, 13, 16, 17, 23, 24, 31, 40, 41, 62, 67, 68, 79, 80, 81, 88, 89, 111, 112, 116, 118, 119, 126, 127, 128, 130, 131, 135, 137, 219, 221, 222, 240, 241, 264, 267, 287, 289, 291, 292, 294, 296, 305, 391, 403, 445, 511, 514, 711, 714, 779, 780, 782, 794, 797, 870, 876, 877, 891, 894, 918, 921, 933, 934, 944, 945, 946, 949, 951, 963, 1014, 1017, 1019, 1022, 1024, 1027, 1069, 1072, 1103, 1106, 1164, 1166, 1167, 1172, 1190, 1192, 1208, 1209, 1211, 1250, 1285, 1288, 1301, 1302, 1303, 1304, 1305, 1322, 1323, 1324, 1325, 1326, 1349, 1355, 1367, 1368, 1369, 1370, 1371, 1375, 1378, 1379, 1382, 1408, 1412, 1414, 1422, 1424, 1425, 1426, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1725, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1868, 1929, 1933, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2126, 2131, 2139, 2230, 2233, 2249, 2253, 2254], "exampl": [4, 9, 10, 11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 128, 129, 132, 134, 135, 136, 137, 148, 149, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 231, 233, 240, 241, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 267, 274, 275, 276, 277, 278, 279, 280, 282, 285, 297, 299, 300, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 339, 340, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 386, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 834, 835, 836, 837, 838, 839, 840, 842, 844, 845, 846, 847, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 969, 970, 971, 972, 973, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1138, 1140, 1141, 1142, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1309, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1529, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1540, 1542, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1575, 1577, 1578, 1579, 1581, 1582, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1799, 1800, 1801, 1802, 1803, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1842, 1843, 1844, 1845, 1846, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1955, 1957, 1960, 1961, 1962, 1963, 1965, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1982, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2131, 2132, 2135, 2137, 2140, 2141, 2197, 2218, 2230, 2232, 2233, 2238, 2239, 2240, 2241, 2276, 2281, 2312, 2318, 2320, 2322, 2328], "streamlin": [4, 2137], "workflow": [4, 9, 11, 113, 116, 126, 135, 147, 2125, 2126, 2133, 2140, 2141], "save": [4, 6, 31, 65, 66, 79, 115, 121, 128, 149, 410, 412, 1261, 1262, 1263, 1264, 1349, 1354, 1414, 1498, 1562, 2133, 2173, 2174], "week": [4, 11, 2126], "let": [4, 6, 32, 33, 56, 57, 80, 81, 112, 114, 116, 117, 118, 119, 120, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 1414, 1473, 1474, 1475, 1476, 1477, 2068, 2087, 2088, 2090, 2100, 2103, 2104, 2108, 2109, 2111, 2113, 2126, 2141], "sai": [4, 10, 124, 134], "deepmind": 4, "releas": [4, 9, 10, 11, 116, 126, 129, 130, 149, 2126, 2134, 2140], "awesom": 4, "paper": 4, "love": 4, "choic": [4, 10, 56, 57, 104, 105, 125, 126, 135, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2134], "perceiverio": 4, "happen": [4, 10, 11, 128, 135, 933, 961, 1372, 1374], "slew": 4, "rush": 4, "f": [4, 5, 7, 11, 31, 44, 45, 79, 92, 93, 110, 114, 115, 121, 132, 135, 769, 771, 994, 995, 996, 997, 998, 1131, 1148, 1190, 1198, 1290, 1296, 1297, 1299, 1414, 1504, 1520, 1868, 1904, 1905, 1906, 1907, 1908, 1953, 1957, 1961, 1962, 1963, 1971, 1972, 2130], "g": [4, 5, 9, 10, 31, 48, 49, 79, 96, 97, 110, 111, 114, 126, 128, 132, 149, 305, 312, 393, 396, 410, 413, 819, 820, 821, 822, 823, 824, 827, 901, 902, 904, 1291, 1292, 1294, 1306, 1307, 1308, 1309, 1311, 1953, 1957, 1961, 1963, 1971, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2068, 2069, 2072, 2074, 2077, 2083, 2086, 2091, 2094, 2095, 2098, 2104, 2108, 2125, 2130, 2151, 2155], "inevit": [4, 2135], "deviat": [4, 31, 46, 47, 48, 49, 56, 57, 79, 94, 95, 96, 97, 104, 105, 111, 1089, 1090, 1091, 1092, 1093, 1281, 1282, 1973, 1974, 1975, 1976, 1977, 1978, 1989, 1990, 1991, 1992, 1993, 2068, 2100, 2101, 2102, 2103, 2151, 2156, 2175, 2176, 2249, 2254], "origin": [4, 9, 10, 11, 13, 16, 17, 31, 40, 41, 44, 45, 56, 57, 62, 65, 66, 67, 68, 79, 88, 89, 92, 93, 104, 105, 113, 115, 116, 124, 125, 126, 127, 132, 150, 156, 157, 445, 481, 484, 1190, 1205, 1240, 1241, 1242, 1243, 1244, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1301, 1302, 1303, 1304, 1305, 1349, 1353, 1354, 1355, 1711, 1764, 1765, 1766, 1767, 1768, 1868, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 2068, 2074, 2075, 2076, 2077, 2078, 2134, 2135, 2197, 2218, 2219, 2249, 2256, 2312, 2319, 2323], "often": [4, 8, 111, 120, 121, 122, 123, 126, 128, 149, 2135, 2138, 2141], "erron": 4, "train": [4, 34, 35, 38, 39, 82, 83, 86, 87, 114, 117, 123, 135, 136, 137, 147, 148, 149, 906, 907, 1131, 1138, 1139, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1647, 1686, 1687, 1688, 1689, 1690, 2125, 2126, 2132, 2133, 2138, 2140, 2141, 2151, 2156, 2159], "poor": 4, "converg": [4, 31, 79, 923, 924, 925, 926, 927, 1164, 1168], "perform": [4, 23, 24, 31, 34, 35, 38, 39, 40, 41, 56, 57, 58, 59, 71, 72, 79, 80, 81, 86, 87, 88, 89, 104, 105, 106, 107, 111, 112, 113, 114, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 135, 149, 150, 156, 157, 169, 182, 185, 202, 205, 219, 254, 257, 259, 260, 261, 262, 263, 445, 761, 765, 887, 889, 896, 897, 898, 899, 900, 906, 907, 933, 940, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1137, 1138, 1139, 1141, 1142, 1159, 1162, 1339, 1340, 1414, 1448, 1451, 1453, 1456, 1457, 1458, 1461, 1462, 1505, 1508, 1510, 1513, 1515, 1518, 1554, 1561, 1621, 1622, 1647, 1686, 1687, 1688, 1689, 1690, 1696, 1699, 1711, 1809, 1810, 1811, 1812, 1813, 1842, 1843, 1844, 1845, 1846, 1949, 1950, 1951, 1952, 1953, 1961, 1962, 2068, 2069, 2070, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2131, 2134, 2135, 2136, 2137, 2138, 2139, 2141, 2186, 2193], "issu": [4, 5, 8, 9, 111, 113, 115, 116, 118, 120, 126, 128, 129, 132, 136, 149, 2151, 2159], "etc": [4, 9, 10, 11, 23, 24, 31, 48, 49, 60, 61, 71, 72, 79, 80, 81, 96, 97, 108, 109, 111, 112, 114, 116, 118, 120, 122, 126, 127, 128, 129, 132, 134, 135, 149, 219, 231, 232, 233, 254, 257, 259, 260, 261, 262, 263, 274, 275, 277, 819, 820, 821, 822, 824, 827, 1029, 1031, 1291, 1292, 1293, 1294, 1295, 1306, 1307, 1308, 1310, 1311, 1478, 1480, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2125, 2132, 2134, 2140, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2181, 2183, 2184, 2230, 2234, 2238, 2239, 2260, 2261, 2262, 2263], "publish": [4, 149], "manag": [4, 5, 125, 149, 1609, 1610, 2136, 2138], "get": [4, 5, 8, 9, 10, 13, 16, 17, 27, 28, 40, 41, 65, 66, 75, 76, 88, 89, 110, 115, 116, 117, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 169, 305, 344, 346, 348, 349, 352, 360, 363, 410, 416, 417, 418, 419, 420, 422, 425, 430, 434, 441, 444, 1414, 1421, 1483, 1484, 1485, 1487, 1488, 1489, 1495, 1497, 1498, 1543, 1564, 1711, 1842, 1843, 1844, 1845, 1846, 1953, 1956, 2125, 2134, 2140, 2149, 2150, 2151, 2155, 2161, 2170], "work": [4, 8, 9, 10, 11, 31, 79, 110, 111, 112, 114, 115, 116, 117, 118, 120, 126, 127, 128, 129, 131, 132, 134, 136, 137, 1301, 1302, 1303, 1304, 1305, 1349, 1355, 1953, 1961, 1962, 1966, 1971, 1972, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141], "repositori": [4, 6, 7, 10, 11, 110, 111, 121], "pull": [4, 5, 6, 7, 9, 10, 111, 118, 129, 130, 149], "request": [4, 5, 9, 31, 118, 129, 130, 410, 427, 1291, 1292, 1294, 1306, 1311], "confus": [4, 116, 120, 125, 130, 2125], "do": [4, 9, 10, 11, 31, 32, 33, 65, 66, 79, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 149, 445, 706, 709, 1261, 1262, 1263, 1264, 1301, 1302, 1303, 1304, 1305, 1349, 1354, 1355, 1414, 1515, 1516, 1518, 1953, 1954, 1961, 1964, 1965, 1966, 1971, 2125, 2135, 2140, 2141], "don": [4, 9, 10, 11, 60, 61, 108, 109, 115, 116, 128, 136, 149], "expect": [4, 11, 31, 111, 116, 120, 127, 128, 149, 305, 392, 887, 889, 1131, 1137, 1414, 1421, 2126, 2149, 2150, 2151, 2156, 2159, 2173, 2174], "codebas": [4, 5, 110, 116, 125, 126, 128, 129, 131, 410, 433, 434, 2126], "total": [4, 5, 11, 31, 56, 57, 62, 65, 66, 67, 68, 79, 104, 105, 116, 117, 118, 120, 128, 130, 135, 136, 149, 410, 441, 865, 866, 867, 868, 869, 933, 939, 2005, 2021, 2024, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113], "hour": [4, 115], "spent": 4, "spin": 4, "off": [4, 10, 38, 39, 40, 41, 86, 87, 88, 89, 131, 1647, 1686, 1687, 1688, 1689, 1690, 1711, 1732, 1733, 1734, 1735, 1736, 1827, 1831, 2140, 2151, 2159], "test": [4, 8, 9, 29, 30, 31, 58, 59, 77, 78, 79, 106, 107, 110, 116, 118, 120, 121, 124, 126, 129, 149, 305, 367, 370, 381, 384, 445, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 906, 907, 933, 958, 1037, 1038, 1108, 1109, 1110, 1111, 1112, 1131, 1138, 1139, 1312, 1313, 1314, 1315, 1316, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2134, 2186, 2187, 2192, 2193, 2202, 2203, 2216, 2217, 2218, 2219, 2221, 2222, 2244, 2247, 2277, 2278, 2279, 2280], "discuss": [4, 11, 116, 117, 125, 126, 128, 130, 133, 134, 135, 149, 2126, 2130, 2135], "error": [4, 8, 10, 11, 29, 30, 31, 65, 66, 77, 78, 79, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 126, 128, 129, 134, 149, 169, 171, 174, 445, 551, 552, 553, 554, 555, 1261, 1262, 1263, 1264, 1349, 1354, 1711, 1799, 1802, 1814, 1818, 2068, 2083, 2086, 2091, 2094, 2134, 2173, 2174, 2177, 2181, 2249, 2256], "iter": [4, 18, 19, 20, 21, 22, 32, 33, 44, 45, 60, 61, 62, 65, 66, 67, 68, 80, 81, 92, 93, 108, 109, 114, 132, 135, 410, 435, 1190, 1206, 1207, 1208, 1273, 1274, 1285, 1288, 1414, 1415, 1416, 1417, 1418, 1419, 1540, 1868, 1879, 1880, 1881, 1882, 1883, 1899, 1900, 1901, 1902, 1934, 1935, 1936, 1937, 1938, 1944, 1945, 1946, 1947, 1948, 1953, 1954, 1955, 1956, 1957, 1959, 1960, 1962, 1963, 1964, 1965, 1966, 1969, 1970, 1972], "address": [4, 9, 11, 111, 112, 132, 1414, 1586, 1590, 2130, 2132, 2134, 2140], "sake": 4, "singl": [4, 9, 10, 11, 31, 48, 49, 65, 66, 77, 78, 96, 97, 111, 114, 115, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 149, 824, 827, 933, 951, 961, 1103, 1106, 1164, 1172, 1250, 1306, 1308, 1372, 1373, 1374, 1414, 1591, 1595, 1603, 1607, 1609, 1619, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2031, 2032, 2036, 2230, 2238, 2239], "multipl": [4, 11, 31, 40, 41, 46, 47, 56, 57, 58, 59, 65, 66, 77, 78, 79, 80, 81, 82, 83, 88, 89, 92, 93, 94, 95, 104, 105, 106, 107, 112, 113, 114, 118, 120, 123, 125, 126, 127, 128, 130, 132, 149, 445, 461, 465, 491, 495, 506, 510, 511, 514, 515, 636, 639, 656, 660, 661, 664, 666, 668, 669, 670, 881, 884, 885, 908, 911, 933, 952, 1050, 1053, 1059, 1062, 1131, 1136, 1149, 1150, 1151, 1152, 1153, 1159, 1162, 1164, 1172, 1190, 1195, 1202, 1212, 1250, 1339, 1340, 1393, 1397, 1414, 1415, 1417, 1418, 1419, 1540, 1609, 1611, 1613, 1614, 1615, 1617, 1618, 1621, 1623, 1624, 1626, 1628, 1629, 1634, 1636, 1637, 1639, 1640, 1642, 1643, 1647, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1711, 1712, 1715, 1716, 1717, 1721, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1767, 1868, 1869, 1872, 1873, 1884, 1887, 1888, 1909, 1912, 1913, 1914, 1917, 1973, 1974, 1975, 1976, 1977, 2005, 2006, 2009, 2011, 2014, 2068, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2132, 2133, 2134, 2141, 2161, 2171], "line": [4, 10, 111, 112, 115, 118, 120, 121, 124, 128, 130, 133, 134, 135, 136, 147, 2126, 2137], "convert": [4, 9, 18, 19, 20, 21, 22, 23, 24, 29, 30, 69, 70, 77, 78, 112, 124, 126, 128, 132, 149, 150, 163, 165, 166, 219, 224, 225, 226, 269, 272, 305, 311, 312, 410, 413, 414, 415, 416, 430, 441, 444, 445, 536, 537, 538, 539, 540, 696, 697, 698, 699, 700, 789, 792, 794, 797, 799, 802, 1190, 1191, 1192, 1193, 1349, 1356, 1383, 1387, 1414, 1554, 1580, 1585, 1586, 1590, 1591, 1595, 1597, 1711, 1847, 1851, 1953, 1955, 1966, 1967, 2125, 2132, 2133, 2140, 2147, 2148, 2197, 2201, 2312, 2322], "directli": [4, 11, 111, 112, 114, 115, 116, 117, 119, 123, 124, 125, 126, 127, 129, 130, 132, 134, 136, 137, 148, 149, 1953, 1966, 2138, 2139, 2140], "graph": [4, 34, 35, 114, 123, 126, 130, 133, 149, 1621, 1622, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2125, 2130, 2134, 2137, 2173, 2174], "guarante": [4, 112, 149, 2031, 2032, 2036, 2042, 2046], "turn": [4, 10, 38, 39, 86, 87, 114, 118, 126, 128, 1647, 1686, 1687, 1688, 1689, 1690], "4": [4, 7, 9, 10, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 113, 114, 115, 118, 127, 128, 132, 134, 135, 136, 137, 169, 171, 172, 174, 177, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 200, 202, 205, 207, 209, 211, 219, 231, 233, 240, 241, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 267, 274, 276, 277, 278, 282, 285, 300, 304, 305, 318, 319, 320, 321, 322, 323, 325, 326, 328, 330, 331, 332, 344, 345, 346, 349, 350, 352, 360, 362, 376, 378, 379, 380, 381, 384, 393, 396, 397, 410, 417, 418, 419, 420, 421, 422, 429, 433, 436, 437, 438, 439, 445, 446, 448, 449, 450, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 479, 481, 482, 483, 484, 485, 491, 494, 495, 496, 498, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 519, 521, 523, 524, 525, 526, 529, 531, 534, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 591, 593, 594, 595, 596, 598, 599, 600, 601, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 621, 622, 624, 626, 628, 629, 630, 636, 637, 638, 639, 640, 656, 659, 661, 663, 664, 665, 666, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 699, 701, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 721, 723, 724, 725, 726, 729, 731, 732, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 769, 772, 773, 774, 775, 776, 777, 778, 784, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 834, 836, 838, 840, 849, 850, 852, 853, 860, 862, 864, 865, 866, 867, 868, 869, 870, 871, 873, 876, 877, 881, 882, 883, 884, 885, 891, 894, 896, 897, 898, 899, 900, 901, 903, 905, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 920, 921, 922, 923, 925, 926, 927, 928, 929, 930, 931, 932, 933, 937, 939, 940, 941, 943, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 956, 958, 960, 961, 964, 967, 969, 970, 971, 972, 973, 979, 982, 983, 984, 986, 987, 988, 994, 995, 996, 997, 998, 999, 1001, 1003, 1004, 1006, 1008, 1009, 1010, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1033, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1050, 1052, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1103, 1104, 1108, 1109, 1110, 1111, 1112, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1140, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1175, 1176, 1177, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1196, 1198, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1249, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1281, 1282, 1283, 1284, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1334, 1336, 1337, 1338, 1339, 1340, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1394, 1395, 1396, 1397, 1398, 1401, 1402, 1414, 1433, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1466, 1467, 1468, 1469, 1470, 1473, 1475, 1476, 1477, 1478, 1481, 1486, 1499, 1502, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1565, 1566, 1567, 1568, 1569, 1575, 1577, 1579, 1581, 1584, 1596, 1608, 1609, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1635, 1636, 1637, 1639, 1640, 1642, 1643, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1659, 1660, 1661, 1662, 1663, 1664, 1667, 1669, 1670, 1671, 1672, 1673, 1679, 1680, 1681, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1722, 1723, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1777, 1779, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1799, 1800, 1801, 1802, 1803, 1809, 1810, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1842, 1846, 1852, 1863, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1919, 1922, 1924, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1955, 1957, 1960, 1961, 1962, 1963, 1965, 1971, 1972, 1973, 1974, 1976, 1977, 1978, 1979, 1982, 1984, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2052, 2053, 2056, 2058, 2061, 2063, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2114, 2115, 2116, 2118, 2120, 2121, 2123, 2126, 2134, 2140, 2141, 2151, 2159, 2177, 2178, 2179, 2180, 2182, 2197, 2218, 2230, 2232, 2233, 2234, 2238, 2239, 2240, 2241, 2242, 2244, 2245, 2260, 2261, 2263], "step": [4, 6, 7, 9, 10, 11, 31, 34, 35, 71, 72, 79, 82, 83, 112, 113, 114, 115, 116, 117, 118, 126, 128, 132, 135, 136, 137, 148, 219, 221, 222, 223, 254, 257, 1054, 1055, 1056, 1057, 1058, 1190, 1201, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1949, 1950, 1951, 1952, 2126, 2134, 2149, 2150, 2177, 2178, 2179, 2180, 2181, 2182], "take": [4, 5, 9, 10, 11, 31, 44, 45, 56, 57, 79, 92, 93, 111, 112, 114, 115, 116, 117, 118, 119, 125, 126, 127, 128, 130, 132, 134, 136, 137, 149, 219, 274, 277, 445, 516, 519, 769, 771, 809, 811, 813, 933, 958, 984, 985, 986, 987, 988, 994, 995, 996, 997, 998, 1079, 1080, 1081, 1082, 1083, 1131, 1141, 1142, 1190, 1198, 1210, 1224, 1226, 1228, 1296, 1297, 1299, 1312, 1315, 1357, 1361, 1711, 1759, 1762, 1779, 1782, 1868, 1904, 1905, 1906, 1907, 1908, 2069, 2070, 2126, 2131, 2132, 2140, 2151, 2156, 2230, 2233, 2276, 2281, 2282], "few": [4, 8, 9, 11, 114, 116, 117, 122, 123, 125, 128, 130, 132, 133, 134, 135, 136, 147, 2126, 2134, 2136], "second": [4, 10, 13, 16, 17, 29, 30, 31, 34, 35, 40, 41, 44, 45, 52, 53, 62, 67, 68, 77, 78, 79, 80, 81, 82, 83, 88, 89, 92, 93, 100, 101, 111, 116, 118, 125, 126, 128, 134, 305, 391, 403, 445, 461, 462, 463, 464, 465, 481, 482, 483, 485, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 546, 547, 549, 571, 574, 576, 577, 581, 582, 584, 606, 607, 609, 611, 612, 614, 636, 637, 639, 641, 642, 644, 651, 652, 654, 656, 657, 659, 671, 672, 673, 674, 681, 682, 684, 691, 692, 694, 741, 742, 743, 744, 745, 779, 780, 781, 782, 783, 824, 825, 870, 876, 877, 918, 921, 923, 924, 925, 926, 927, 933, 934, 944, 945, 946, 947, 948, 949, 951, 952, 954, 957, 962, 963, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1036, 1039, 1040, 1041, 1042, 1069, 1070, 1071, 1072, 1073, 1103, 1104, 1105, 1106, 1107, 1121, 1124, 1125, 1149, 1150, 1151, 1152, 1153, 1159, 1160, 1162, 1164, 1167, 1168, 1170, 1173, 1174, 1175, 1176, 1177, 1190, 1209, 1276, 1277, 1278, 1279, 1280, 1322, 1325, 1339, 1340, 1375, 1378, 1379, 1382, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1422, 1424, 1425, 1426, 1495, 1559, 1600, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1711, 1717, 1718, 1719, 1720, 1721, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1748, 1751, 1759, 1760, 1761, 1762, 1763, 1784, 1787, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1809, 1813, 1819, 1822, 1837, 1841, 1868, 1924, 1927, 1929, 1930, 1931, 1932, 1933, 1949, 1951, 1953, 1955, 2031, 2032, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2139, 2177, 2178, 2179], "automat": [4, 9, 10, 11, 110, 114, 115, 116, 121, 123, 128, 130, 131, 133, 136, 137, 2125, 2126, 2134, 2137, 2141], "convers": [4, 9, 19, 20, 21, 22, 29, 30, 70, 124, 131, 133, 137, 148, 149, 536, 537, 696, 697, 1414, 1554, 1561, 2125, 2126, 2133, 2140], "everyon": [4, 5, 11, 149], "regardless": [4, 5, 65, 66, 116, 134, 137], "wouldn": 4, "nice": [4, 128, 2134], "write": [4, 7, 8, 9, 11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 113, 115, 116, 118, 119, 123, 125, 126, 127, 129, 132, 134, 137, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 274, 275, 276, 277, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 323, 326, 410, 436, 437, 438, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 772, 773, 774, 777, 778, 784, 785, 786, 787, 788, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 878, 881, 882, 883, 884, 885, 887, 889, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 933, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 950, 952, 953, 954, 955, 958, 959, 960, 961, 964, 967, 969, 970, 971, 972, 973, 974, 977, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1069, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1197, 1198, 1199, 1200, 1201, 1204, 1205, 1209, 1211, 1214, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1281, 1282, 1283, 1284, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1414, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1451, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1515, 1517, 1519, 1521, 1525, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1804, 1807, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1944, 1945, 1946, 1947, 1948, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2011, 2013, 2015, 2016, 2017, 2019, 2026, 2027, 2028, 2029, 2030, 2031, 2047, 2051, 2052, 2053, 2055, 2056, 2057, 2058, 2061, 2063, 2066, 2068, 2069, 2070, 2072, 2074, 2077, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2134, 2141, 2221, 2222], "onc": [4, 9, 10, 11, 40, 41, 48, 49, 88, 89, 96, 97, 114, 115, 116, 117, 118, 126, 128, 130, 132, 135, 149, 410, 435, 1711, 1737, 1738, 1741, 1743, 1746, 1809, 1810, 1811, 1812, 1813, 1978, 1979, 1980, 1981, 1982, 1983], "know": [4, 11, 127, 128, 129, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2135], "among": [4, 65, 66, 115, 128, 130, 2134], "frantic": 4, "port": [4, 2197, 2214], "last": [4, 11, 13, 16, 17, 23, 24, 31, 38, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 65, 66, 71, 72, 79, 86, 87, 88, 89, 90, 91, 92, 93, 102, 103, 104, 105, 106, 107, 111, 113, 116, 118, 121, 125, 127, 128, 130, 132, 149, 219, 254, 257, 259, 260, 261, 262, 263, 274, 275, 410, 416, 896, 897, 898, 899, 900, 933, 940, 994, 995, 996, 997, 998, 1159, 1160, 1161, 1162, 1163, 1190, 1198, 1208, 1285, 1288, 1339, 1340, 1609, 1638, 1644, 1646, 1647, 1696, 1697, 1698, 1699, 1711, 1717, 1718, 1719, 1720, 1721, 1732, 1733, 1735, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1852, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1874, 1877, 1889, 1890, 1891, 1892, 1893, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1914, 1915, 1916, 1917, 1918, 1924, 1927, 2005, 2006, 2009, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2066, 2068, 2069, 2070, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2134, 2161, 2171, 2312, 2328], "lucid": 4, "honk": 4, "improv": [4, 11, 116, 122, 123, 130, 132, 2125, 2132, 2134, 2136, 2137], "understand": [4, 6, 7, 8, 9, 10, 11, 110, 111, 118, 119, 122, 127, 130, 131, 2130, 2140], "pattern": [4, 32, 33, 80, 81, 116, 119, 1414, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462], "hasn": 4, "chang": [4, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 113, 114, 115, 116, 118, 119, 126, 127, 128, 129, 130, 132, 136, 149, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 224, 225, 231, 232, 235, 236, 243, 244, 249, 250, 251, 253, 259, 260, 261, 263, 264, 265, 269, 270, 274, 275, 276, 278, 282, 283, 284, 286, 287, 289, 292, 294, 300, 301, 302, 303, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 332, 360, 361, 362, 364, 372, 373, 376, 378, 393, 394, 395, 397, 417, 418, 419, 421, 436, 437, 438, 439, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 824, 825, 826, 828, 834, 835, 837, 838, 839, 840, 842, 844, 845, 847, 849, 850, 851, 853, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 869, 881, 882, 883, 885, 891, 892, 893, 896, 897, 898, 900, 901, 902, 903, 905, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 922, 923, 924, 925, 927, 928, 929, 930, 932, 933, 938, 969, 970, 971, 973, 979, 980, 981, 983, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1036, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1093, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1128, 1130, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1198, 1214, 1215, 1216, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1276, 1277, 1278, 1280, 1285, 1286, 1287, 1289, 1291, 1293, 1295, 1301, 1302, 1303, 1305, 1312, 1313, 1314, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1326, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1349, 1354, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1445, 1446, 1448, 1449, 1450, 1452, 1453, 1454, 1455, 1458, 1459, 1460, 1463, 1464, 1466, 1467, 1468, 1470, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1490, 1491, 1492, 1494, 1499, 1500, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1519, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1538, 1544, 1545, 1546, 1548, 1549, 1551, 1553, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1603, 1604, 1605, 1606, 1611, 1612, 1613, 1615, 1616, 1621, 1622, 1623, 1626, 1627, 1630, 1631, 1634, 1635, 1639, 1640, 1641, 1642, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1681, 1682, 1683, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1727, 1728, 1729, 1732, 1733, 1734, 1736, 1743, 1744, 1745, 1747, 1753, 1754, 1755, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1768, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1803, 1809, 1810, 1811, 1812, 1832, 1833, 1842, 1843, 1845, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1953, 1955, 1966, 1971, 1974, 1975, 1976, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1998, 2000, 2001, 2002, 2004, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2025, 2026, 2027, 2028, 2029, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2062, 2063, 2064, 2065, 2067, 2069, 2070, 2071, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2083, 2084, 2085, 2087, 2088, 2089, 2091, 2093, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2109, 2110, 2111, 2112, 2115, 2116, 2117, 2119, 2120, 2121, 2122, 2124, 2126, 2137, 2140, 2197, 2200], "now": [4, 7, 10, 111, 112, 113, 114, 115, 116, 121, 122, 124, 126, 127, 128, 129, 130, 134, 135, 137, 148, 149, 219, 240, 241, 282, 285, 300, 304, 2134, 2161, 2172, 2173, 2174], "spend": [4, 2134], "torchvis": 4, "probabl": [4, 31, 38, 39, 48, 49, 79, 86, 87, 96, 97, 128, 819, 820, 821, 822, 823, 906, 907, 1131, 1138, 1139, 1261, 1262, 1263, 1264, 1306, 1307, 1349, 1354, 1647, 1686, 1687, 1688, 1689, 1690, 1978, 1979, 1980, 1981, 1982, 1983, 2151, 2159, 2161, 2169, 2249, 2256], "sonnet": 4, "about": [4, 8, 9, 10, 11, 25, 26, 73, 74, 111, 115, 116, 122, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 149, 305, 349, 350, 351, 352, 353, 360, 361, 362, 363, 364, 2135, 2136, 2139], "next": [4, 6, 9, 10, 11, 31, 79, 113, 118, 119, 124, 126, 129, 133, 134, 135, 305, 349, 352, 933, 953, 957, 962, 1154, 1155, 1157, 1276, 1277, 1278, 1279, 1280, 1403, 1404, 1405, 1406, 1407, 2126, 2134, 2136, 2151, 2152, 2155, 2156, 2159, 2173, 2174, 2177, 2178, 2179, 2180, 2181, 2182], "everyth": [4, 9, 11, 115, 118, 126, 127, 128, 129, 133, 149], "zero": [4, 13, 16, 17, 23, 24, 25, 26, 29, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 50, 51, 56, 57, 58, 59, 62, 67, 68, 71, 72, 73, 74, 77, 78, 79, 82, 83, 86, 87, 88, 89, 96, 97, 98, 99, 104, 105, 106, 107, 112, 114, 116, 117, 118, 122, 124, 127, 132, 135, 136, 169, 177, 180, 187, 190, 192, 195, 219, 231, 233, 234, 240, 241, 264, 265, 267, 274, 275, 276, 277, 278, 282, 285, 287, 289, 291, 292, 294, 296, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 445, 451, 454, 456, 459, 461, 464, 466, 467, 468, 469, 470, 471, 474, 476, 479, 481, 482, 484, 486, 489, 501, 504, 511, 514, 526, 527, 529, 531, 532, 533, 534, 535, 536, 539, 561, 564, 566, 569, 586, 589, 591, 592, 594, 596, 597, 599, 601, 604, 626, 629, 646, 649, 651, 654, 661, 662, 664, 666, 667, 669, 676, 677, 679, 681, 684, 686, 687, 689, 691, 692, 694, 696, 699, 706, 709, 711, 712, 714, 721, 724, 726, 727, 728, 730, 731, 734, 736, 739, 746, 750, 751, 755, 756, 760, 761, 765, 769, 772, 773, 855, 856, 857, 858, 859, 865, 866, 867, 868, 869, 870, 871, 881, 882, 883, 884, 885, 887, 889, 896, 897, 898, 899, 900, 906, 907, 923, 926, 933, 938, 939, 940, 942, 955, 956, 958, 959, 960, 962, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 1054, 1055, 1056, 1057, 1058, 1079, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1093, 1131, 1136, 1137, 1138, 1139, 1141, 1142, 1164, 1168, 1172, 1190, 1201, 1205, 1208, 1234, 1238, 1240, 1241, 1242, 1243, 1244, 1250, 1251, 1254, 1261, 1265, 1266, 1269, 1281, 1282, 1285, 1288, 1312, 1315, 1317, 1318, 1320, 1329, 1332, 1334, 1337, 1362, 1366, 1403, 1404, 1405, 1406, 1407, 1414, 1438, 1441, 1448, 1451, 1540, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1639, 1643, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1658, 1659, 1662, 1669, 1672, 1679, 1681, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1706, 1707, 1709, 1711, 1712, 1715, 1722, 1725, 1743, 1746, 1753, 1756, 1758, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1782, 1789, 1790, 1791, 1792, 1793, 1799, 1802, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1868, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1895, 1897, 1909, 1912, 1944, 1948, 1973, 1974, 1977, 1978, 1984, 1986, 1987, 1989, 1991, 1992, 1994, 1996, 1997, 2005, 2006, 2007, 2009, 2011, 2012, 2014, 2016, 2019, 2021, 2022, 2023, 2024, 2025, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2063, 2066, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2133, 2151, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2171, 2177, 2178, 2179, 2230, 2233], "need": [4, 6, 7, 9, 10, 11, 31, 32, 33, 44, 45, 79, 80, 81, 92, 93, 111, 112, 114, 115, 116, 118, 119, 120, 123, 125, 126, 127, 129, 130, 132, 134, 135, 148, 149, 887, 889, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1137, 1141, 1142, 1261, 1262, 1263, 1264, 1349, 1354, 1414, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1515, 1517, 1519, 1711, 1737, 1868, 1869, 1872, 1884, 1885, 1886, 1888, 1953, 1965, 2130, 2134, 2135, 2136, 2140, 2244, 2247], "said": [4, 2249, 2256], "high": [4, 9, 38, 39, 48, 49, 86, 87, 96, 97, 126, 130, 135, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1658, 1659, 1662, 1669, 1672, 1679, 1681, 1684, 1978, 1984, 1985, 1986, 1987, 1988, 1994, 1995, 1996, 1997, 1998, 2125, 2130, 2131, 2132, 2133, 2134, 2138, 2140, 2141, 2249, 2253], "level": [4, 5, 9, 11, 80, 81, 114, 120, 123, 126, 130, 131, 132, 135, 136, 137, 149, 1422, 1424, 1426, 2125, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2138, 2139, 2140, 2141, 2149, 2150], "modul": [4, 7, 10, 60, 61, 62, 65, 66, 67, 68, 108, 109, 112, 113, 120, 121, 123, 125, 126, 128, 132, 133, 135, 137, 148, 149, 1414, 1541, 2126, 2134, 2135, 2137, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2175, 2176, 2183, 2184, 2197, 2219, 2308, 2310, 2312, 2313, 2318, 2320, 2323], "optim": [4, 34, 35, 82, 83, 125, 133, 135, 137, 148, 1414, 1421, 1609, 1621, 1622, 1634, 1635, 1636, 1637, 1949, 1950, 1951, 1952, 2126, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2141, 2151, 2159, 2178, 2179, 2180, 2182], "trainer": [4, 147, 149, 2126, 2141], "statu": [4, 9, 115], "quo": 4, "kera": [4, 2140, 2146, 2147], "dopamin": 4, "ignit": 4, "catalyst": 4, "lightn": 4, "fastai": 4, "haiku": [4, 137, 2134, 2146, 2147], "flax": [4, 137, 149, 2134], "trax": [4, 137], "objax": [4, 137], "idea": [4, 6, 126, 129, 133, 148, 2133], "fulli": [4, 31, 79, 112, 116, 122, 125, 130, 132, 133, 134, 135, 136, 137, 149, 1261, 1262, 1263, 1264, 1349, 1354, 2132, 2133, 2134, 2140, 2141, 2161, 2171, 2172], "offer": [4, 126, 136, 2134, 2140, 2141], "strongli": [5, 10, 2140, 2141], "welcom": [5, 10, 11], "absolut": [5, 10, 13, 16, 17, 29, 30, 31, 40, 41, 65, 66, 77, 78, 79, 88, 89, 130, 445, 446, 447, 448, 449, 450, 779, 780, 781, 782, 783, 923, 924, 925, 926, 927, 933, 934, 951, 1103, 1104, 1105, 1106, 1107, 1164, 1168, 1711, 1764, 1767, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1799, 1800, 1801, 1802, 1803, 2186, 2187, 2193, 2197, 2216, 2217, 2218, 2219, 2230, 2234, 2238, 2239, 2249, 2250], "skill": [5, 2136], "whether": [5, 9, 10, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 44, 45, 48, 49, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 114, 116, 118, 122, 125, 126, 128, 129, 130, 169, 171, 172, 173, 174, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 219, 224, 225, 226, 249, 251, 253, 274, 276, 278, 282, 284, 286, 300, 301, 303, 305, 313, 314, 315, 316, 317, 318, 320, 322, 328, 330, 332, 335, 336, 338, 339, 340, 342, 343, 344, 346, 354, 355, 357, 358, 360, 362, 364, 366, 367, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 386, 389, 391, 393, 395, 397, 409, 410, 416, 417, 418, 419, 420, 423, 424, 426, 427, 430, 431, 435, 436, 437, 439, 442, 444, 445, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 707, 708, 709, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 779, 780, 781, 782, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 823, 824, 826, 828, 829, 831, 833, 849, 851, 853, 865, 867, 869, 879, 880, 887, 889, 896, 900, 906, 907, 908, 912, 933, 934, 951, 955, 979, 981, 983, 999, 1003, 1059, 1063, 1069, 1071, 1073, 1089, 1090, 1091, 1092, 1093, 1101, 1103, 1104, 1105, 1106, 1107, 1126, 1128, 1130, 1131, 1137, 1138, 1139, 1154, 1158, 1185, 1187, 1189, 1251, 1252, 1253, 1254, 1255, 1276, 1278, 1280, 1281, 1282, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1334, 1336, 1338, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1393, 1394, 1403, 1404, 1406, 1408, 1409, 1411, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1445, 1446, 1447, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1477, 1478, 1480, 1482, 1489, 1490, 1491, 1492, 1493, 1494, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1540, 1544, 1546, 1548, 1549, 1551, 1553, 1554, 1555, 1558, 1560, 1561, 1563, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1582, 1586, 1587, 1589, 1590, 1591, 1592, 1594, 1599, 1602, 1603, 1604, 1605, 1606, 1607, 1609, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1646, 1647, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1695, 1706, 1708, 1710, 1711, 1712, 1714, 1716, 1717, 1719, 1721, 1738, 1741, 1743, 1745, 1746, 1747, 1753, 1755, 1757, 1758, 1759, 1761, 1763, 1764, 1766, 1768, 1774, 1776, 1778, 1794, 1796, 1798, 1799, 1801, 1803, 1827, 1828, 1830, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1868, 1869, 1871, 1873, 1884, 1888, 1889, 1891, 1893, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1960, 1961, 1962, 1964, 1965, 1966, 1967, 1971, 1972, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2016, 2018, 2020, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2053, 2055, 2057, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2087, 2089, 2095, 2097, 2099, 2100, 2102, 2109, 2110, 2112, 2114, 2115, 2117, 2118, 2119, 2120, 2122, 2123, 2124, 2146, 2147, 2148, 2161, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2186, 2189, 2190, 2191, 2197, 2217, 2218, 2219, 2249, 2256], "veteran": 5, "beginn": [5, 2134], "aspect": [5, 135, 2126, 2134], "guid": [5, 9, 10, 11, 121, 126, 2126, 2140], "through": [5, 8, 9, 11, 31, 79, 110, 113, 114, 115, 118, 120, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 136, 137, 148, 445, 481, 484, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1349, 1353, 1354, 1953, 1957, 1963, 2132, 2134, 2135, 2136, 2173, 2174], "journei": [5, 2126], "inclus": [5, 31, 79, 113, 125, 130, 219, 221, 222, 1301, 1302, 1303, 1304, 1305, 1349, 1355, 1978, 1984, 1987], "big": [5, 149, 2134, 2151, 2155], "team": [5, 9, 10, 11, 126, 2136], "board": 5, "contributor": [5, 10, 11, 126, 131, 2126, 2134], "split": [5, 11, 31, 44, 45, 65, 66, 79, 92, 93, 115, 131, 132, 149, 410, 433, 434, 435, 908, 909, 910, 911, 912, 1059, 1060, 1061, 1062, 1063, 1190, 1195, 1202, 1212, 1393, 1394, 1395, 1396, 1397, 1414, 1448, 1451, 1540, 1647, 1648, 1679, 1680, 1701, 1704, 1868, 1918, 1929, 1931, 2126, 2141, 2197, 2214], "section": [5, 6, 8, 9, 11, 14, 15, 31, 79, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 177, 178, 908, 909, 910, 911, 912, 1059, 1060, 1061, 1062, 1063, 1190, 1195, 1202, 1212, 1393, 1394, 1395, 1396, 1397, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2130, 2137, 2140], "below": [5, 7, 9, 10, 23, 24, 40, 41, 88, 89, 104, 105, 110, 111, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 148, 219, 287, 289, 291, 292, 294, 296, 445, 601, 604, 849, 852, 870, 876, 877, 933, 937, 958, 1312, 1315, 1375, 1378, 1379, 1382, 1711, 1732, 1733, 1734, 1735, 1736, 1827, 1831, 2109, 2112, 2126, 2130, 2132, 2137, 2139], "best": [5, 8, 9, 10, 11, 110, 115, 116, 121, 128, 129, 1414, 1540, 2137, 2138], "go": [5, 6, 9, 10, 11, 110, 113, 115, 116, 118, 120, 126, 127, 128, 129, 131, 135, 149, 1953, 1954, 1955, 1964, 1965, 1966, 2130, 2134, 2135, 2139, 2141], "start": [5, 6, 7, 9, 10, 11, 23, 24, 65, 66, 71, 72, 110, 115, 116, 118, 119, 122, 126, 128, 130, 131, 132, 134, 135, 136, 148, 149, 219, 221, 222, 223, 254, 257, 258, 259, 260, 261, 262, 263, 410, 412, 994, 997, 1190, 1198, 2134, 2140, 2149, 2150, 2249, 2256], "finish": [5, 9, 10, 110, 2126], "dive": [5, 8, 9, 11, 111, 114, 116, 127, 131, 134, 135, 149, 2126, 2140], "right": [5, 10, 11, 40, 41, 62, 65, 66, 67, 68, 88, 89, 110, 111, 118, 120, 130, 135, 445, 501, 504, 511, 514, 933, 949, 999, 1002, 1069, 1072, 1094, 1131, 1143, 1190, 1199, 1414, 1448, 1451, 1711, 1809, 1810, 1811, 1812, 1813, 1832, 1833, 1834, 1835, 1836, 2052, 2058, 2061], "environ": [5, 6, 7, 11, 148, 2134, 2136], "basic": [5, 7, 9, 118, 128], "fork": [5, 111, 115, 1414, 1541], "doc": [5, 8, 9, 118, 119, 122, 128, 132, 135, 136, 445, 711, 714, 870, 876, 877, 1375, 1378, 1379, 1382, 2126], "document": [5, 8, 11, 44, 45, 115, 116, 118, 120, 126, 127, 128, 135, 137, 1414, 1608, 1924, 1925], "local": [5, 6, 7, 10, 111, 123, 127, 128], "task": [5, 11, 126, 127, 148, 1949, 1950, 1951, 1952, 2126, 2134, 2140, 2141], "help": [5, 6, 9, 10, 112, 113, 114, 115, 116, 118, 124, 126, 128, 129, 130, 134, 135, 136, 147, 1414, 1420, 2068, 2104, 2108, 2125, 2126, 2130, 2134, 2136, 2140, 2151, 2159], "appli": [5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 134, 135, 136, 137, 147, 149, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 224, 225, 231, 232, 235, 236, 243, 244, 249, 250, 251, 253, 259, 260, 261, 263, 264, 265, 269, 270, 274, 275, 276, 278, 282, 283, 284, 286, 287, 289, 292, 294, 300, 301, 302, 303, 305, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 332, 360, 361, 362, 364, 372, 373, 375, 376, 378, 380, 393, 394, 395, 396, 397, 417, 418, 419, 421, 436, 437, 438, 439, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 769, 771, 772, 773, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 819, 823, 824, 825, 826, 828, 829, 831, 833, 834, 835, 836, 837, 838, 839, 840, 842, 844, 845, 847, 849, 850, 851, 853, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 869, 881, 882, 883, 884, 885, 891, 892, 893, 896, 897, 898, 900, 901, 902, 903, 905, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 922, 923, 924, 925, 927, 928, 929, 930, 932, 933, 938, 969, 970, 971, 973, 979, 980, 981, 983, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1036, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1128, 1130, 1131, 1136, 1144, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1164, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1187, 1189, 1214, 1215, 1216, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1276, 1277, 1278, 1280, 1281, 1282, 1285, 1286, 1287, 1289, 1291, 1293, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1305, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1326, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1349, 1354, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1414, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1482, 1490, 1491, 1492, 1494, 1499, 1500, 1501, 1503, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1519, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1538, 1544, 1545, 1546, 1548, 1549, 1551, 1553, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1603, 1604, 1605, 1606, 1609, 1611, 1612, 1613, 1615, 1616, 1621, 1622, 1623, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1639, 1640, 1641, 1642, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1727, 1728, 1729, 1732, 1733, 1734, 1736, 1743, 1744, 1745, 1747, 1753, 1754, 1755, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1768, 1774, 1775, 1776, 1777, 1778, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1803, 1809, 1810, 1811, 1812, 1827, 1828, 1830, 1832, 1833, 1842, 1843, 1845, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1949, 1950, 1951, 1953, 1960, 1963, 1966, 1967, 1973, 1974, 1975, 1976, 1977, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1998, 2000, 2001, 2002, 2004, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2025, 2026, 2027, 2028, 2029, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2062, 2063, 2064, 2065, 2067, 2068, 2069, 2070, 2071, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2087, 2088, 2089, 2091, 2093, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2109, 2110, 2111, 2112, 2115, 2116, 2117, 2119, 2120, 2121, 2122, 2124, 2125, 2126, 2135, 2143, 2144, 2145, 2175, 2176, 2249, 2250, 2260, 2261, 2262, 2263], "resourc": [5, 9, 115], "video": [5, 10, 11, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 2132], "contribut": [6, 8, 9, 10, 11, 126, 132, 2138], "toward": [6, 10, 31, 44, 45, 92, 93, 129, 132, 445, 761, 765, 933, 942, 957, 989, 990, 992, 1190, 1209, 1276, 1279, 1322, 1325, 1868, 1909, 1910, 1911, 1912, 1913, 2130, 2134], "requir": [6, 7, 9, 10, 31, 79, 112, 115, 116, 117, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 132, 134, 149, 445, 731, 734, 923, 924, 925, 926, 927, 933, 955, 1164, 1168, 1190, 1208, 1251, 1252, 1253, 1254, 1255, 1285, 1288, 1711, 1737, 1738, 1741, 1743, 1746, 1868, 1924, 1927, 2134, 2140, 2146, 2148, 2230, 2234, 2276, 2277, 2278, 2279, 2280], "slightli": [6, 114, 126, 132, 136], "more": [6, 8, 9, 11, 31, 40, 41, 44, 45, 52, 53, 79, 88, 89, 92, 93, 100, 101, 110, 111, 112, 113, 114, 115, 116, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 148, 149, 219, 221, 222, 305, 318, 321, 445, 561, 564, 626, 629, 774, 777, 789, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 1164, 1165, 1172, 1190, 1191, 1192, 1193, 1209, 1250, 1322, 1323, 1324, 1325, 1326, 1711, 1732, 1734, 1736, 1758, 1759, 1760, 1762, 1789, 1790, 1799, 1802, 1809, 1810, 1811, 1812, 1842, 1843, 1844, 1845, 1846, 1868, 1889, 1890, 1891, 1892, 1893, 1924, 1925, 1926, 1928, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2126, 2132, 2133, 2134, 2135, 2136, 2137, 2140, 2141, 2249, 2252, 2256], "complex": [6, 9, 31, 40, 41, 73, 74, 79, 88, 89, 116, 118, 126, 128, 130, 135, 136, 137, 149, 305, 335, 336, 372, 373, 374, 375, 398, 404, 445, 601, 604, 774, 777, 784, 785, 786, 787, 788, 849, 850, 851, 852, 853, 887, 889, 918, 921, 923, 924, 925, 926, 927, 928, 931, 933, 935, 937, 950, 958, 1084, 1085, 1086, 1087, 1088, 1131, 1137, 1164, 1165, 1167, 1168, 1169, 1312, 1313, 1314, 1315, 1316, 1414, 1565, 1568, 1711, 1737, 1738, 1741, 1743, 1746, 1809, 1810, 1811, 1812, 1813, 2125, 2130, 2132, 2134, 2136, 2140, 2141, 2244, 2247], "setup": [6, 10, 11, 115], "alon": [6, 128, 410, 430, 444], "instanc": [6, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 116, 118, 119, 120, 122, 123, 124, 125, 128, 135, 136, 137, 150, 163, 165, 166, 171, 172, 173, 177, 178, 179, 182, 183, 184, 187, 188, 189, 192, 193, 194, 197, 198, 199, 202, 203, 204, 207, 208, 209, 219, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 254, 257, 259, 260, 261, 262, 264, 265, 267, 269, 270, 274, 275, 276, 279, 280, 282, 283, 284, 285, 287, 289, 291, 292, 294, 296, 297, 299, 300, 302, 303, 304, 305, 313, 314, 315, 316, 318, 319, 320, 323, 324, 325, 328, 329, 330, 331, 349, 350, 351, 360, 361, 362, 367, 370, 372, 373, 376, 377, 378, 381, 384, 393, 394, 395, 410, 411, 417, 418, 419, 432, 436, 437, 438, 439, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 556, 557, 558, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 611, 612, 613, 614, 616, 617, 618, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 666, 667, 668, 671, 672, 673, 674, 676, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 701, 702, 703, 706, 707, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 743, 744, 745, 746, 748, 749, 750, 751, 753, 754, 755, 756, 758, 759, 760, 761, 763, 764, 774, 775, 776, 779, 780, 781, 784, 785, 786, 789, 790, 791, 794, 795, 796, 799, 800, 801, 804, 805, 806, 807, 809, 810, 811, 812, 814, 817, 824, 825, 826, 838, 839, 840, 844, 845, 849, 850, 851, 852, 855, 856, 857, 860, 861, 862, 865, 866, 867, 870, 871, 876, 877, 881, 882, 883, 884, 891, 892, 893, 896, 897, 898, 899, 901, 902, 903, 906, 907, 908, 909, 910, 913, 914, 915, 918, 920, 921, 923, 924, 925, 926, 928, 929, 930, 933, 937, 940, 958, 969, 970, 971, 979, 980, 981, 982, 984, 985, 986, 989, 990, 991, 994, 995, 996, 999, 1000, 1001, 1004, 1005, 1006, 1009, 1010, 1011, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1029, 1030, 1032, 1033, 1034, 1046, 1047, 1050, 1051, 1054, 1055, 1056, 1059, 1060, 1061, 1064, 1065, 1066, 1069, 1070, 1071, 1074, 1075, 1076, 1079, 1080, 1081, 1084, 1085, 1086, 1089, 1090, 1091, 1092, 1103, 1104, 1105, 1108, 1109, 1110, 1112, 1113, 1114, 1117, 1118, 1121, 1122, 1123, 1126, 1128, 1131, 1132, 1133, 1134, 1136, 1138, 1139, 1145, 1146, 1147, 1149, 1150, 1151, 1154, 1155, 1156, 1159, 1160, 1161, 1164, 1167, 1168, 1173, 1174, 1175, 1178, 1179, 1180, 1185, 1187, 1190, 1208, 1214, 1215, 1216, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1229, 1232, 1234, 1235, 1236, 1240, 1241, 1242, 1245, 1246, 1247, 1251, 1252, 1253, 1256, 1257, 1258, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1276, 1277, 1278, 1281, 1282, 1285, 1286, 1287, 1288, 1291, 1293, 1301, 1302, 1303, 1312, 1313, 1314, 1315, 1317, 1319, 1322, 1323, 1329, 1330, 1331, 1334, 1335, 1336, 1349, 1354, 1357, 1359, 1360, 1362, 1364, 1365, 1367, 1369, 1370, 1372, 1373, 1375, 1378, 1379, 1382, 1383, 1385, 1386, 1389, 1391, 1393, 1395, 1396, 1398, 1400, 1401, 1403, 1405, 1406, 1408, 1410, 1411, 1414, 1415, 1416, 1417, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1438, 1439, 1440, 1442, 1445, 1446, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1458, 1459, 1460, 1463, 1464, 1466, 1467, 1468, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1490, 1491, 1492, 1493, 1494, 1499, 1500, 1502, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1515, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1526, 1527, 1528, 1531, 1532, 1534, 1535, 1536, 1544, 1545, 1546, 1547, 1549, 1551, 1560, 1565, 1566, 1567, 1570, 1571, 1572, 1575, 1576, 1577, 1578, 1579, 1581, 1583, 1586, 1588, 1589, 1591, 1593, 1594, 1595, 1603, 1605, 1606, 1609, 1611, 1612, 1613, 1615, 1616, 1621, 1622, 1623, 1626, 1627, 1630, 1631, 1634, 1635, 1639, 1640, 1641, 1642, 1643, 1647, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1696, 1697, 1698, 1701, 1704, 1706, 1707, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1753, 1754, 1755, 1756, 1759, 1760, 1761, 1762, 1764, 1765, 1766, 1767, 1769, 1772, 1774, 1775, 1776, 1777, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1799, 1800, 1801, 1802, 1804, 1807, 1809, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1829, 1830, 1832, 1834, 1835, 1837, 1841, 1842, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1858, 1859, 1860, 1863, 1864, 1865, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1924, 1925, 1926, 1927, 1929, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1973, 1974, 1975, 1976, 1977, 1979, 1980, 1981, 1984, 1985, 1986, 1989, 1990, 1991, 1994, 1995, 1996, 2000, 2001, 2002, 2005, 2006, 2007, 2008, 2009, 2011, 2012, 2013, 2014, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2026, 2028, 2029, 2030, 2031, 2032, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2058, 2059, 2060, 2063, 2064, 2065, 2066, 2068, 2069, 2070, 2071, 2074, 2075, 2076, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2093, 2094, 2095, 2096, 2097, 2098, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2120, 2121, 2122, 2123, 2125, 2135, 2146, 2147, 2148, 2276, 2280], "mech": 6, "vision": [6, 147, 2126, 2130, 2140], "demo": [6, 148, 2126], "util": [6, 59, 107, 117, 120, 125, 129, 410, 422, 2115, 2118, 2120, 2123, 2132, 2140, 2141, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336], "thu": [6, 9, 31, 79, 115, 120, 126, 445, 511, 514, 691, 694, 706, 709, 1095, 1096, 1097, 1098, 1099, 1131, 1144, 1711, 1737, 1738, 1741], "relat": [6, 8, 10, 11, 120, 121, 126, 128, 129, 130, 148, 410, 411, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141], "folder": [6, 7, 10, 11, 111, 115, 123, 126, 128, 129], "To": [6, 7, 10, 111, 112, 114, 116, 118, 120, 121, 123, 126, 127, 128, 129, 135, 136, 137, 1414, 1559, 2126, 2151, 2155], "grasp": [6, 126], "directori": [6, 7, 9, 10, 11, 115, 126, 128, 410, 412, 1414, 1498, 1562], "tree": [6, 7, 116, 2308, 2309], "place": [6, 8, 11, 18, 20, 22, 23, 24, 29, 30, 31, 32, 33, 40, 41, 44, 45, 65, 66, 71, 72, 75, 76, 77, 78, 79, 80, 81, 92, 93, 110, 111, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 137, 219, 221, 222, 224, 225, 226, 234, 235, 236, 238, 240, 241, 243, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 262, 264, 267, 269, 270, 272, 279, 280, 282, 283, 284, 285, 286, 287, 291, 292, 296, 297, 299, 300, 301, 302, 303, 304, 305, 328, 331, 367, 370, 381, 384, 410, 436, 437, 439, 440, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 779, 780, 781, 782, 783, 804, 807, 809, 812, 814, 817, 819, 823, 824, 826, 828, 849, 852, 870, 871, 876, 877, 881, 884, 896, 899, 906, 907, 918, 921, 923, 926, 933, 934, 937, 940, 951, 955, 956, 957, 958, 962, 963, 979, 980, 981, 982, 983, 994, 995, 996, 997, 998, 1069, 1071, 1073, 1103, 1104, 1105, 1106, 1107, 1131, 1132, 1133, 1134, 1136, 1138, 1139, 1145, 1146, 1147, 1154, 1155, 1164, 1167, 1168, 1190, 1198, 1208, 1219, 1222, 1224, 1227, 1229, 1232, 1251, 1252, 1253, 1254, 1255, 1266, 1267, 1268, 1269, 1270, 1276, 1277, 1278, 1279, 1280, 1285, 1288, 1312, 1315, 1375, 1378, 1379, 1382, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1427, 1429, 1430, 1473, 1476, 1490, 1493, 1499, 1502, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1544, 1547, 1575, 1576, 1577, 1578, 1579, 1591, 1595, 1609, 1639, 1643, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1681, 1684, 1686, 1689, 1691, 1694, 1701, 1704, 1706, 1709, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1846, 1847, 1851, 1868, 1869, 1872, 1874, 1877, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1897, 1899, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 1973, 1974, 1977, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123, 2125, 2136, 2177, 2178, 2179, 2180, 2181, 2182], "dir": [6, 135], "clone": [6, 7, 11], "mutual": [6, 114, 123], "git": [6, 8, 10, 11, 111, 115, 128], "http": [6, 10, 29, 30, 77, 78, 82, 83, 111, 115, 116, 119, 305, 328, 331, 445, 586, 589, 651, 652, 653, 671, 674, 711, 714, 870, 876, 877, 918, 921, 1164, 1167, 1375, 1378, 1379, 1382, 1609, 1611, 1614, 1615, 1618, 1711, 1743, 1744, 1799, 1802, 1847, 1851, 1868, 1944, 1948, 2068, 2100, 2103], "com": [6, 10, 111, 115, 116], "unifyai": [6, 7, 10, 11], "type": [6, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 121, 122, 124, 125, 127, 128, 129, 130, 132, 134, 135, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 770, 771, 772, 773, 774, 775, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1084, 1085, 1086, 1087, 1088, 1095, 1096, 1097, 1098, 1099, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1499, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1542, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1556, 1557, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1957, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2128, 2129, 2134, 2135, 2138, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2186, 2190, 2191, 2197, 2200, 2202, 2203, 2216, 2217, 2218, 2219, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2238, 2239, 2241, 2244, 2245, 2246, 2247, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2266, 2272, 2273, 2274, 2275, 2276, 2281, 2282, 2283, 2285, 2287, 2312, 2322, 2328], "venv": [6, 120], "python3": [6, 7, 10, 11, 120], "m": [6, 7, 10, 11, 13, 16, 17, 23, 24, 31, 40, 41, 48, 49, 77, 78, 79, 88, 89, 96, 97, 110, 115, 132, 219, 264, 267, 287, 289, 291, 292, 294, 296, 641, 643, 645, 799, 800, 801, 802, 803, 819, 820, 821, 822, 823, 824, 827, 870, 876, 877, 887, 889, 901, 902, 904, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1131, 1137, 1190, 1193, 1199, 1200, 1209, 1291, 1292, 1294, 1306, 1307, 1308, 1309, 1311, 1322, 1323, 1324, 1325, 1326, 1375, 1378, 1379, 1382, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1725, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1827, 1828, 1829, 1830, 1831, 1953, 1962, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998], "ivy_dev": [6, 7, 10, 11], "activ": [6, 7, 10, 11, 15, 31, 32, 33, 60, 61, 64, 79, 108, 109, 129, 136, 170, 171, 172, 174, 176, 177, 178, 180, 182, 183, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 205, 207, 208, 210, 770, 771, 772, 773, 1317, 1318, 1319, 1320, 1321, 1362, 1363, 1364, 1365, 1366, 1575, 1577, 2126, 2134, 2137, 2144, 2145, 2151, 2155, 2156], "window": [6, 7, 11, 31, 38, 39, 79, 86, 87, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 870, 872, 873, 874, 875, 878, 887, 889, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1131, 1132, 1133, 1134, 1137, 1145, 1146, 1147, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1389, 1390, 1391, 1392, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 2139, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168], "script": [6, 7, 10, 11, 115, 118, 132, 149, 2134], "bat": [6, 7, 10, 11], "mac": [6, 7, 10, 11], "linux": [6, 7, 10, 11, 2137, 2139], "bin": [6, 7, 10, 11, 31, 79, 111, 114, 838, 839, 840, 842], "instal": [6, 7, 10, 11, 113, 121, 148, 2126], "packag": [6, 7, 10, 115, 120, 121, 126, 149, 2134, 2136, 2330, 2331], "edit": [6, 9, 10, 11], "mode": [6, 10, 11, 31, 40, 41, 65, 66, 79, 88, 89, 114, 118, 130, 149, 410, 435, 445, 461, 464, 1095, 1096, 1097, 1098, 1099, 1131, 1144, 1190, 1208, 1285, 1286, 1287, 1288, 1289, 1414, 1489, 1554, 1555, 1558, 1560, 1561, 1597, 1598, 1599, 1601, 1602, 1711, 1794, 1795, 1796, 1797, 1798, 2134, 2137], "cd": [6, 7, 10, 11], "pip": [6, 10, 148, 2126], "repeat": [6, 11, 32, 33, 44, 45, 80, 81, 92, 93, 112, 113, 118, 119, 121, 128, 1414, 1458, 1459, 1460, 1461, 1462, 1868, 1903, 1934, 1935, 1936, 1937, 1938], "note": [6, 9, 10, 11, 31, 40, 41, 44, 45, 79, 88, 89, 92, 93, 112, 116, 118, 119, 126, 127, 128, 129, 305, 313, 314, 315, 317, 392, 445, 626, 629, 706, 709, 711, 714, 870, 871, 876, 877, 887, 889, 933, 948, 979, 982, 994, 995, 996, 997, 998, 1039, 1040, 1042, 1131, 1137, 1190, 1198, 1375, 1378, 1379, 1382, 1414, 1432, 1711, 1737, 1738, 1741, 1799, 1802, 1809, 1810, 1811, 1812, 1813, 1868, 1904, 1905, 1906, 1907, 1908, 1924, 1927, 2031, 2032, 2034, 2037, 2041, 2068, 2087, 2090], "link": [6, 9, 10, 11, 115, 116, 126, 128, 2130, 2132], "reflect": [6, 11, 112, 128, 1190, 1208, 1285, 1288], "immedi": [6, 10, 130, 2126], "ivy_robot": [6, 148], "docker": [6, 8], "desktop": [6, 10], "imag": [6, 7, 10, 31, 37, 38, 39, 79, 85, 86, 87, 129, 132, 133, 135, 137, 148, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 933, 1088, 1095, 1096, 1097, 1098, 1099, 1131, 1132, 1133, 1144, 1145, 1146, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1414, 1448, 1451, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 2126, 2134], "my": [6, 115, 129], "mount": [6, 11], "run": [6, 7, 9, 10, 31, 34, 35, 79, 82, 83, 110, 112, 113, 115, 118, 120, 121, 122, 126, 127, 132, 133, 134, 135, 136, 137, 148, 149, 1089, 1090, 1091, 1092, 1093, 1281, 1282, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1949, 1950, 1951, 1952, 2132, 2134, 2135, 2136, 2137, 2139, 2140, 2141, 2161, 2172, 2173, 2174, 2197, 2210, 2221, 2222], "rm": [6, 11], "v": [6, 10, 11, 31, 38, 39, 54, 55, 71, 72, 79, 86, 87, 102, 103, 132, 135, 136, 137, 259, 261, 918, 921, 923, 924, 925, 926, 927, 1164, 1167, 1168, 1647, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 2052, 2058, 2059, 2060, 2061, 2062, 2126, 2149, 2150, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2181, 2183, 2184, 2197, 2219], "pwd": 6, "volum": [6, 31, 38, 39, 79, 86, 87, 814, 815, 816, 817, 818, 887, 889, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1134, 1137, 1141, 1142, 1147, 1229, 1230, 1231, 1232, 1233, 1647, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678], "rebuild": [6, 62, 65, 66, 67, 68], "after": [6, 7, 9, 10, 11, 31, 34, 35, 38, 39, 46, 47, 65, 66, 82, 83, 86, 87, 94, 95, 111, 115, 116, 118, 120, 122, 126, 128, 131, 305, 403, 410, 411, 412, 445, 731, 734, 887, 889, 933, 957, 1131, 1137, 1164, 1172, 1190, 1208, 1250, 1276, 1279, 1285, 1288, 1609, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1658, 1659, 1662, 1669, 1672, 1679, 1681, 1684, 1686, 1687, 1688, 1689, 1690, 1953, 1965, 1973, 1974, 1975, 1976, 1977, 2134, 2177, 2178, 2179, 2180, 2181, 2182, 2312, 2328], "everi": [6, 7, 9, 11, 23, 24, 31, 32, 33, 79, 80, 81, 111, 113, 114, 115, 116, 118, 122, 123, 124, 125, 126, 127, 128, 129, 132, 134, 136, 219, 248, 249, 250, 252, 933, 948, 1039, 1040, 1041, 1042, 1414, 1415, 1416, 1417, 1418, 1419, 2134], "id": [6, 8, 10, 112, 114, 121, 410, 416, 2173, 2174], "pycharm": 6, "configur": [6, 7, 10, 11, 65, 66, 115, 116, 124, 410, 434, 1953, 1967], "part": [6, 11, 23, 24, 31, 34, 35, 79, 111, 123, 126, 128, 129, 130, 132, 133, 137, 148, 149, 219, 287, 289, 291, 292, 294, 296, 445, 601, 604, 870, 876, 877, 923, 926, 933, 950, 958, 1084, 1085, 1086, 1087, 1088, 1164, 1168, 1190, 1208, 1285, 1288, 1301, 1302, 1303, 1304, 1305, 1312, 1313, 1314, 1315, 1316, 1349, 1355, 1375, 1378, 1379, 1382, 1621, 1622, 1711, 1743, 1746, 2132, 2134, 2139, 2140, 2141, 2173, 2174, 2197, 2201], "vscode": [6, 10], "found": [6, 9, 10, 11, 40, 41, 44, 45, 52, 53, 62, 65, 66, 67, 68, 88, 89, 92, 93, 100, 101, 112, 113, 114, 116, 119, 121, 124, 125, 126, 130, 410, 425, 1732, 1734, 1736, 1759, 1760, 1924, 1925, 1926, 1928, 1953, 1965, 2032, 2033, 2034, 2035, 2136, 2149, 2150], "devcontain": [6, 10], "extens": [6, 8, 10, 11, 29, 30, 40, 41, 77, 78, 119, 128, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 264, 267, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 349, 352, 360, 363, 393, 396, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 1413, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1846, 1868, 1874, 1877, 1884, 1887, 1889, 1892, 1894, 1897, 1904, 1907, 1909, 1912, 1919, 1922, 1924, 1927, 1944, 1948, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123, 2131, 2134, 2141], "remot": [6, 10, 111], "codespac": 6, "config": [6, 10, 65, 66, 111, 115, 135, 1953, 1967, 2135], "json": [6, 10, 65, 66, 135], "good": [6, 7, 8, 9, 10, 11, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 136], "feel": [6, 7, 9, 10, 11, 13, 62, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 169, 212, 213, 219, 305, 410, 445, 1413, 1414, 1609, 1647, 1711, 1852, 1868, 1949, 1953, 1973, 1978, 2005, 2052, 2068, 2114, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2146, 2151, 2161, 2173, 2175, 2177, 2183], "free": [6, 7, 8, 9, 11, 13, 62, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 148, 169, 212, 213, 219, 305, 410, 445, 1413, 1414, 1609, 1647, 1711, 1852, 1868, 1949, 1953, 1973, 1978, 2005, 2052, 2068, 2114, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2146, 2151, 2161, 2173, 2175, 2177, 2183], "channel": [6, 7, 9, 10, 11, 13, 31, 32, 33, 38, 39, 62, 79, 80, 81, 86, 87, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 169, 212, 213, 219, 305, 410, 445, 906, 907, 1095, 1096, 1097, 1098, 1099, 1131, 1138, 1139, 1144, 1413, 1414, 1448, 1451, 1466, 1467, 1468, 1469, 1470, 1609, 1647, 1649, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1662, 1664, 1665, 1667, 1669, 1672, 1674, 1675, 1676, 1677, 1678, 1681, 1684, 1711, 1852, 1868, 1949, 1953, 1973, 1978, 2005, 2052, 2068, 2114, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2146, 2151, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2170, 2171, 2173, 2175, 2177, 2183], "pre": [6, 9, 128, 137, 149, 2134], "commit": [6, 9, 111, 118, 128], "_": [6, 7, 29, 30, 77, 78, 82, 83, 114, 119, 121, 125, 128, 135, 305, 328, 331, 445, 561, 562, 586, 589, 651, 652, 653, 711, 714, 918, 921, 1164, 1167, 1414, 1448, 1451, 1609, 1611, 1614, 1615, 1618, 1711, 1743, 1744, 1799, 1802, 1814, 1818, 1847, 1851, 1868, 1944, 1948, 1953, 1961, 2068, 2100, 2103], "builder": [7, 147, 149, 2125, 2126], "dockerfil": [7, 10], "command": [7, 10, 111, 115, 124, 2126], "maco": [7, 2139], "latest": [7, 9, 10, 11, 29, 30, 77, 78, 113, 115, 116, 119, 129, 149, 305, 328, 331, 445, 586, 589, 651, 652, 653, 711, 714, 918, 921, 1164, 1167, 1711, 1743, 1744, 1799, 1802, 1868, 1944, 1948, 2068, 2100, 2103, 2139, 2161, 2170], "ubuntu": 7, "arg": [7, 13, 16, 17, 18, 19, 20, 56, 57, 65, 66, 112, 120, 126, 132, 136, 150, 156, 157, 163, 167, 219, 220, 410, 435, 1414, 1596, 2079, 2080, 2146, 2148, 2173, 2174, 2186, 2192, 2197, 2200, 2204, 2209, 2210, 2214, 2285, 2286, 2287, 2288, 2312, 2318], "name": [7, 9, 10, 11, 13, 16, 17, 31, 40, 41, 52, 53, 88, 89, 100, 101, 113, 114, 115, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 132, 135, 137, 169, 170, 176, 1190, 1211, 1367, 1369, 1371, 1414, 1420, 1421, 1711, 1737, 1738, 1741, 1758, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1809, 1813, 1832, 1836, 2031, 2032, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2134, 2197, 2218, 2219, 2276, 2277, 2281, 2312, 2319, 2323, 2330, 2331], "uid": 7, "bash": [7, 10, 11, 111], "root": [7, 10, 11, 29, 30, 77, 78, 126, 135, 445, 731, 732, 733, 734, 735, 2149, 2150], "both": [7, 11, 23, 24, 29, 30, 31, 40, 41, 71, 72, 77, 78, 79, 88, 89, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 128, 130, 132, 134, 135, 136, 137, 148, 149, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 259, 260, 262, 264, 267, 274, 276, 278, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 367, 370, 381, 384, 391, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 804, 807, 809, 812, 814, 817, 819, 822, 855, 856, 857, 858, 859, 870, 871, 881, 884, 896, 899, 906, 907, 918, 921, 923, 924, 925, 926, 927, 933, 938, 940, 943, 951, 979, 982, 1009, 1010, 1012, 1037, 1038, 1054, 1055, 1057, 1103, 1106, 1108, 1109, 1110, 1111, 1112, 1131, 1132, 1133, 1134, 1136, 1138, 1139, 1145, 1146, 1147, 1164, 1167, 1168, 1190, 1201, 1208, 1219, 1222, 1224, 1227, 1229, 1232, 1285, 1288, 1306, 1307, 1312, 1314, 1316, 1414, 1473, 1476, 1490, 1493, 1499, 1502, 1505, 1508, 1591, 1595, 1609, 1639, 1643, 1645, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1681, 1684, 1686, 1689, 1691, 1694, 1701, 1704, 1706, 1709, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1837, 1841, 1842, 1846, 1847, 1851, 1868, 1869, 1872, 1874, 1877, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1897, 1899, 1902, 1904, 1907, 1909, 1912, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 1973, 1974, 1977, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123, 2134, 2137, 2139, 2140, 2141, 2186, 2190], "either": [7, 9, 10, 11, 29, 30, 31, 32, 33, 38, 39, 65, 66, 77, 78, 79, 80, 81, 86, 87, 113, 114, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 132, 135, 149, 219, 243, 246, 445, 461, 464, 481, 484, 591, 592, 593, 594, 595, 616, 619, 621, 624, 631, 634, 636, 639, 706, 709, 716, 719, 721, 724, 746, 750, 829, 830, 831, 832, 833, 881, 882, 883, 884, 885, 933, 936, 960, 1089, 1090, 1091, 1092, 1093, 1131, 1136, 1281, 1282, 1334, 1337, 1414, 1445, 1446, 1447, 1499, 1503, 1521, 1524, 1540, 1541, 1596, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1662, 1664, 1667, 1669, 1672, 1674, 1677, 1679, 1680, 1681, 1684, 1711, 1759, 1762, 1799, 1802, 1949, 1950, 1951, 1952, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108, 2134, 2149, 2150, 2161, 2172, 2173, 2174, 2249, 2256, 2312, 2320, 2328], "termin": [7, 10, 11, 62, 65, 66, 67, 68, 114, 132, 135], "3": [7, 10, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 62, 63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 116, 118, 120, 127, 128, 132, 134, 135, 136, 137, 169, 171, 174, 175, 177, 180, 182, 183, 184, 185, 186, 187, 190, 192, 195, 197, 200, 202, 204, 205, 206, 207, 210, 213, 219, 240, 241, 249, 250, 251, 252, 253, 254, 257, 264, 267, 274, 275, 276, 277, 278, 279, 280, 282, 285, 297, 299, 300, 304, 305, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 344, 345, 346, 349, 350, 352, 376, 377, 378, 379, 380, 381, 384, 393, 395, 396, 397, 410, 414, 416, 417, 418, 419, 420, 421, 431, 433, 436, 437, 439, 440, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 481, 482, 483, 484, 485, 486, 489, 491, 494, 495, 496, 498, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 529, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 636, 637, 638, 639, 640, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 772, 773, 774, 775, 776, 777, 778, 779, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 834, 835, 836, 837, 838, 839, 840, 842, 844, 845, 846, 847, 849, 851, 852, 853, 855, 856, 860, 862, 864, 865, 866, 867, 868, 869, 870, 871, 876, 877, 878, 881, 882, 883, 884, 885, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 925, 926, 927, 928, 929, 930, 931, 932, 933, 935, 937, 939, 940, 941, 943, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 969, 970, 971, 972, 973, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1103, 1104, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1138, 1140, 1141, 1142, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1309, 1311, 1312, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1367, 1369, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1417, 1422, 1425, 1427, 1428, 1430, 1432, 1433, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1476, 1478, 1479, 1481, 1490, 1491, 1492, 1493, 1494, 1499, 1500, 1502, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1536, 1537, 1538, 1540, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1563, 1565, 1566, 1567, 1568, 1569, 1581, 1584, 1591, 1592, 1593, 1595, 1596, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1724, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1777, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1799, 1800, 1801, 1802, 1803, 1809, 1811, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1855, 1856, 1857, 1858, 1860, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1922, 1924, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1955, 1957, 1960, 1961, 1962, 1963, 1965, 1971, 1972, 1973, 1974, 1976, 1977, 1978, 1979, 1982, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2052, 2053, 2055, 2056, 2057, 2058, 2061, 2063, 2066, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2120, 2121, 2123, 2126, 2141, 2197, 2218, 2230, 2234, 2238, 2239, 2240, 2241, 2260, 2261, 2262, 2263], "8": [7, 10, 13, 16, 17, 25, 26, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 67, 68, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 128, 131, 135, 169, 171, 174, 197, 200, 219, 248, 249, 252, 282, 285, 300, 304, 305, 335, 336, 339, 340, 342, 343, 349, 350, 351, 352, 353, 410, 422, 441, 445, 461, 464, 465, 466, 467, 468, 470, 471, 474, 475, 491, 492, 494, 496, 499, 511, 514, 521, 524, 531, 534, 571, 572, 573, 574, 575, 576, 579, 581, 584, 606, 609, 611, 612, 613, 614, 615, 636, 639, 646, 649, 651, 653, 661, 662, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 691, 692, 693, 694, 696, 697, 699, 706, 707, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 731, 734, 736, 739, 751, 755, 756, 760, 769, 772, 779, 780, 782, 789, 792, 794, 797, 799, 800, 804, 805, 806, 807, 808, 809, 810, 812, 814, 815, 817, 834, 835, 836, 837, 870, 871, 881, 882, 883, 884, 885, 901, 903, 905, 908, 909, 910, 911, 912, 933, 934, 941, 943, 948, 951, 952, 956, 961, 964, 967, 969, 970, 971, 972, 973, 979, 980, 981, 982, 984, 985, 986, 987, 988, 994, 995, 996, 997, 998, 1009, 1010, 1011, 1012, 1013, 1039, 1040, 1041, 1042, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1079, 1080, 1081, 1082, 1083, 1089, 1091, 1093, 1103, 1106, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1131, 1132, 1133, 1134, 1136, 1140, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1164, 1170, 1183, 1184, 1185, 1186, 1190, 1191, 1192, 1195, 1198, 1202, 1203, 1211, 1213, 1219, 1220, 1222, 1224, 1225, 1227, 1234, 1236, 1245, 1246, 1247, 1248, 1249, 1256, 1258, 1260, 1266, 1267, 1269, 1281, 1283, 1291, 1293, 1295, 1301, 1303, 1305, 1317, 1318, 1319, 1320, 1321, 1322, 1324, 1326, 1339, 1341, 1357, 1358, 1360, 1367, 1371, 1372, 1373, 1374, 1393, 1394, 1396, 1398, 1400, 1402, 1414, 1427, 1429, 1430, 1432, 1438, 1441, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1466, 1468, 1470, 1473, 1476, 1490, 1491, 1492, 1493, 1494, 1505, 1507, 1508, 1510, 1511, 1512, 1513, 1521, 1522, 1524, 1526, 1527, 1529, 1534, 1535, 1537, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1565, 1566, 1567, 1568, 1569, 1575, 1578, 1579, 1609, 1611, 1613, 1614, 1620, 1625, 1634, 1637, 1645, 1647, 1649, 1651, 1652, 1653, 1669, 1671, 1672, 1673, 1674, 1677, 1681, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1701, 1704, 1711, 1722, 1724, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1746, 1747, 1759, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1784, 1787, 1799, 1800, 1802, 1809, 1813, 1814, 1818, 1819, 1822, 1827, 1831, 1832, 1833, 1834, 1835, 1836, 1842, 1846, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1860, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1872, 1884, 1888, 1889, 1892, 1924, 1927, 1929, 1930, 1932, 1939, 1940, 1942, 1943, 1953, 1955, 1962, 1978, 1979, 1982, 1984, 1985, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2003, 2004, 2005, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2036, 2042, 2043, 2044, 2045, 2046, 2052, 2053, 2056, 2063, 2064, 2065, 2066, 2067, 2068, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2087, 2089, 2090, 2095, 2097, 2099, 2104, 2108, 2109, 2111, 2112, 2126, 2161, 2172, 2230, 2234, 2238, 2239, 2260, 2261, 2263], "built": [7, 10, 11, 114, 128, 133, 219, 221, 222, 2125, 2133, 2134, 2138, 2161, 2172, 2173, 2174], "doesn": [7, 10, 113, 114, 115, 116, 118, 128, 130, 132, 149, 2132, 2312, 2320], "explicit": [7, 10, 114, 116, 125, 126, 127, 132, 149, 2134, 2149, 2150], "cmd": [7, 10], "file": [7, 9, 10, 11, 65, 66, 111, 112, 113, 114, 115, 119, 120, 121, 123, 126, 127, 128, 129, 132, 135, 1414, 1498, 1562, 2130, 2133, 2134, 2135, 2173, 2174], "abov": [7, 10, 11, 23, 24, 29, 30, 31, 40, 41, 48, 49, 63, 64, 77, 78, 79, 88, 89, 96, 97, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 132, 134, 135, 136, 137, 169, 207, 209, 210, 211, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 259, 260, 262, 264, 267, 279, 280, 282, 285, 287, 289, 291, 292, 294, 296, 297, 299, 300, 304, 305, 328, 331, 367, 370, 381, 384, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 769, 773, 804, 807, 809, 812, 814, 817, 849, 852, 870, 871, 876, 877, 881, 884, 896, 899, 906, 907, 918, 921, 923, 926, 933, 937, 940, 958, 979, 982, 1131, 1132, 1133, 1134, 1136, 1138, 1139, 1145, 1146, 1147, 1164, 1167, 1168, 1190, 1208, 1219, 1222, 1224, 1227, 1229, 1232, 1285, 1288, 1312, 1315, 1362, 1363, 1364, 1365, 1366, 1375, 1378, 1379, 1382, 1414, 1473, 1476, 1490, 1493, 1499, 1502, 1505, 1508, 1591, 1595, 1609, 1639, 1643, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1681, 1684, 1686, 1689, 1691, 1694, 1701, 1704, 1706, 1709, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1827, 1831, 1837, 1841, 1842, 1846, 1847, 1851, 1868, 1869, 1872, 1874, 1877, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1897, 1899, 1902, 1904, 1907, 1909, 1912, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 1973, 1974, 1977, 1978, 1984, 1985, 1986, 1987, 1988, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123, 2134, 2139], "OR": [7, 10, 11, 31, 58, 59, 79, 106, 107, 445, 506, 509, 651, 654, 1089, 1090, 1091, 1092, 1093, 1281, 1282, 2114, 2120, 2121, 2122, 2123, 2124], "move": [7, 11, 27, 28, 31, 75, 76, 79, 129, 410, 436, 437, 438, 439, 440, 870, 876, 877, 1190, 1205, 1240, 1241, 1242, 1243, 1244, 1375, 1378, 1379, 1382], "execut": [7, 10, 11, 114, 115, 118, 125, 128, 130, 132, 134, 137, 149, 410, 412, 1414, 1596, 2125, 2130, 2134, 2135, 2136, 2137, 2138, 2140], "insid": [7, 10, 11, 62, 67, 68, 112, 114, 116, 124, 128, 129, 1190, 1211, 1367, 1371, 2140, 2221], "make_docs_without_dock": 7, "path": [7, 10, 125, 126, 127, 1414, 1498, 2134, 2197, 2216, 2276, 2277, 2278, 2279, 2280, 2308, 2311], "rel": [7, 11, 13, 16, 17, 31, 34, 35, 40, 41, 44, 45, 54, 55, 71, 72, 79, 82, 83, 88, 89, 92, 93, 102, 103, 115, 127, 130, 249, 251, 253, 779, 780, 781, 782, 783, 933, 934, 951, 1103, 1104, 1105, 1106, 1107, 1609, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1711, 1732, 1733, 1734, 1735, 1736, 1774, 1775, 1776, 1777, 1778, 1789, 1790, 1791, 1792, 1793, 1827, 1831, 1868, 1889, 1890, 1891, 1892, 1893, 1909, 1910, 1911, 1912, 1913, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2126, 2134, 2136, 2186, 2187, 2193, 2197, 2216, 2217, 2218, 2219], "assum": [7, 23, 24, 29, 30, 31, 40, 41, 77, 78, 79, 111, 113, 115, 116, 119, 127, 128, 130, 134, 135, 149, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 259, 260, 262, 264, 267, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 367, 370, 381, 384, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 804, 807, 809, 812, 814, 817, 849, 852, 870, 871, 881, 884, 896, 899, 906, 907, 918, 921, 923, 926, 933, 937, 940, 958, 960, 961, 979, 982, 1037, 1038, 1108, 1109, 1110, 1111, 1112, 1131, 1132, 1133, 1134, 1136, 1138, 1139, 1145, 1146, 1147, 1164, 1167, 1168, 1190, 1208, 1219, 1222, 1224, 1227, 1229, 1232, 1285, 1288, 1312, 1315, 1334, 1337, 1372, 1373, 1374, 1414, 1473, 1476, 1490, 1493, 1499, 1502, 1505, 1508, 1591, 1595, 1609, 1639, 1643, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1681, 1684, 1686, 1689, 1691, 1694, 1701, 1704, 1706, 1709, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1846, 1847, 1851, 1868, 1869, 1872, 1874, 1877, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1897, 1899, 1902, 1904, 1907, 1909, 1912, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 1973, 1974, 1977, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123], "gener": [7, 9, 10, 11, 23, 24, 29, 30, 33, 38, 39, 48, 49, 60, 61, 71, 72, 77, 78, 81, 86, 87, 96, 97, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 134, 136, 137, 148, 149, 219, 221, 222, 254, 257, 259, 260, 261, 262, 263, 305, 328, 331, 445, 586, 589, 651, 652, 653, 706, 709, 711, 714, 870, 871, 873, 876, 877, 901, 904, 979, 982, 1038, 1050, 1052, 1190, 1206, 1207, 1273, 1274, 1306, 1309, 1375, 1378, 1379, 1382, 1415, 1418, 1420, 1421, 1422, 1425, 1427, 1430, 1432, 1433, 1436, 1438, 1441, 1443, 1444, 1445, 1447, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1465, 1466, 1469, 1471, 1472, 1473, 1476, 1478, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1495, 1496, 1497, 1498, 1499, 1502, 1504, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1521, 1524, 1526, 1529, 1531, 1533, 1534, 1537, 1539, 1540, 1541, 1542, 1543, 1544, 1547, 1549, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1568, 1570, 1573, 1575, 1579, 1580, 1581, 1584, 1585, 1586, 1590, 1591, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1607, 1608, 1647, 1686, 1687, 1688, 1689, 1690, 1711, 1743, 1744, 1799, 1802, 1832, 1836, 1868, 1944, 1948, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1987, 1994, 1995, 1996, 1997, 1998, 1999, 2068, 2100, 2103, 2125, 2126, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2177, 2181, 2230, 2233, 2234, 2238, 2239, 2260, 2261, 2262, 2263, 2276, 2278, 2280], "prefer": [7, 10, 114, 124, 126, 130, 2134], "browser": [7, 10], "affect": [7, 115, 126], "page": [7, 10, 11, 115, 133, 134, 137, 147, 2126], "It": [7, 9, 10, 11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 118, 119, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 274, 275, 276, 277, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 323, 326, 410, 436, 437, 438, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 772, 773, 774, 777, 804, 805, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 849, 850, 851, 852, 853, 870, 871, 887, 889, 891, 894, 906, 907, 933, 936, 937, 953, 958, 960, 964, 967, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 1029, 1030, 1031, 1069, 1070, 1079, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1147, 1154, 1157, 1164, 1165, 1166, 1170, 1171, 1172, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1209, 1214, 1217, 1219, 1220, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1250, 1281, 1282, 1283, 1284, 1291, 1292, 1294, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1334, 1335, 1336, 1337, 1338, 1362, 1363, 1364, 1365, 1366, 1414, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1451, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1515, 1517, 1519, 1521, 1525, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1804, 1807, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1944, 1945, 1946, 1947, 1948, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2015, 2016, 2017, 2019, 2026, 2027, 2028, 2029, 2030, 2031, 2047, 2051, 2052, 2053, 2055, 2056, 2057, 2063, 2066, 2068, 2069, 2072, 2074, 2077, 2087, 2089, 2095, 2097, 2099, 2100, 2102, 2109, 2110, 2112, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2132, 2134, 2135, 2137, 2138, 2139, 2140, 2141, 2151, 2153, 2154, 2156, 2158], "synchron": [7, 115], "respons": [7, 11, 115, 116], "rest": [7, 10, 115, 137, 906, 907, 908, 911, 1131, 1138, 1139, 1190, 1195, 2136], "remove_doc": 7, "indic": [7, 23, 24, 31, 32, 33, 38, 39, 40, 41, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 65, 66, 71, 72, 73, 74, 79, 80, 81, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 115, 121, 122, 126, 137, 219, 224, 225, 226, 274, 275, 276, 277, 278, 360, 362, 364, 372, 373, 375, 376, 378, 380, 445, 716, 719, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 870, 876, 877, 887, 889, 908, 909, 910, 911, 912, 923, 924, 925, 926, 927, 933, 948, 964, 965, 966, 967, 968, 974, 977, 984, 985, 986, 987, 988, 1039, 1040, 1041, 1042, 1059, 1060, 1061, 1062, 1063, 1079, 1080, 1081, 1082, 1083, 1131, 1132, 1133, 1134, 1137, 1140, 1141, 1142, 1145, 1146, 1147, 1159, 1160, 1162, 1164, 1168, 1190, 1195, 1197, 1202, 1210, 1211, 1212, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1339, 1340, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1367, 1368, 1369, 1370, 1371, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1394, 1395, 1397, 1414, 1422, 1424, 1426, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1486, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1608, 1609, 1619, 1649, 1650, 1651, 1653, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1681, 1682, 1683, 1685, 1711, 1842, 1843, 1844, 1845, 1846, 1868, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1953, 1954, 1957, 1959, 1961, 1962, 1963, 1965, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1982, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2031, 2032, 2033, 2034, 2035, 2036, 2042, 2043, 2044, 2045, 2046, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2066, 2126, 2149, 2150, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2173, 2174, 2197, 2217, 2218, 2219, 2221, 2222, 2230, 2233, 2285, 2295, 2296, 2332, 2334], "privat": [7, 126, 128, 2177, 2181], "access": [7, 9, 10, 11, 65, 66, 115, 116, 126, 2134, 2136, 2138], "fulfil": [7, 131, 2126], "purpos": [7, 11, 112, 114, 115, 118, 120, 122, 123, 124, 126, 128, 130, 131, 134, 445, 561, 564, 626, 629, 870, 876, 877, 1375, 1378, 1379, 1382, 1711, 1799, 1802, 2125, 2126, 2133, 2135, 2138, 2139, 2140], "delet": [7, 11, 115, 1609, 1644], "previous": [7, 10, 123, 128, 132, 1414, 1598, 2312, 2328], "autogenerated_sourc": 7, "2": [7, 10, 11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 113, 114, 115, 116, 118, 120, 122, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 149, 169, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 211, 213, 219, 240, 241, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 267, 274, 276, 277, 278, 279, 280, 282, 285, 300, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 344, 345, 346, 349, 352, 376, 377, 378, 379, 380, 381, 384, 393, 394, 397, 410, 416, 417, 418, 419, 420, 421, 422, 425, 427, 429, 431, 433, 436, 437, 438, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 479, 481, 482, 483, 484, 485, 486, 488, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 519, 521, 522, 523, 524, 525, 526, 527, 529, 531, 532, 533, 534, 535, 536, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 646, 647, 648, 649, 651, 652, 653, 654, 656, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 760, 761, 762, 763, 764, 765, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 834, 835, 836, 837, 838, 839, 840, 842, 844, 845, 847, 849, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 876, 877, 881, 882, 883, 884, 885, 887, 889, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 904, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 969, 970, 971, 972, 973, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1046, 1047, 1048, 1049, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1140, 1141, 1142, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1309, 1311, 1312, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1383, 1384, 1386, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1417, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1483, 1486, 1490, 1491, 1492, 1493, 1494, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1540, 1542, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1563, 1565, 1566, 1567, 1568, 1569, 1575, 1577, 1579, 1581, 1582, 1583, 1584, 1596, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1809, 1810, 1812, 1813, 1814, 1818, 1819, 1820, 1821, 1822, 1823, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1842, 1843, 1844, 1845, 1846, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1955, 1957, 1960, 1961, 1962, 1963, 1965, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1982, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2140, 2141, 2151, 2156, 2230, 2233, 2234, 2235, 2238, 2239, 2240, 2241, 2249, 2259, 2260, 2261, 2262, 2263, 2312, 2318], "Then": [7, 9, 10, 11, 115, 124, 129, 149], "format": [7, 27, 28, 31, 56, 57, 63, 64, 65, 66, 69, 70, 75, 76, 79, 110, 116, 117, 118, 119, 120, 126, 132, 134, 135, 169, 207, 209, 210, 211, 305, 344, 346, 410, 417, 418, 419, 420, 768, 1089, 1090, 1091, 1092, 1093, 1271, 1281, 1282, 1342, 1344, 1347, 1414, 1448, 1451, 1647, 1648, 1679, 1680, 2068, 2079, 2080, 2082, 2126, 2130, 2132, 2134, 2135, 2186, 2189, 2190, 2191], "x": [7, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 224, 226, 227, 231, 232, 233, 235, 238, 239, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 267, 269, 272, 273, 274, 275, 276, 277, 278, 282, 285, 286, 287, 288, 291, 292, 293, 296, 297, 299, 300, 301, 303, 304, 305, 313, 314, 315, 316, 317, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 360, 361, 362, 363, 364, 365, 372, 373, 375, 376, 377, 378, 379, 380, 381, 384, 393, 394, 395, 396, 397, 410, 411, 416, 417, 418, 419, 420, 421, 425, 429, 430, 431, 434, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 676, 677, 678, 679, 680, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 784, 786, 787, 788, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 824, 828, 829, 832, 833, 834, 835, 836, 837, 838, 841, 842, 844, 846, 849, 850, 851, 852, 853, 860, 861, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 881, 882, 883, 884, 885, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 906, 907, 913, 914, 915, 916, 917, 918, 920, 921, 922, 928, 929, 930, 931, 932, 933, 935, 936, 937, 940, 941, 942, 948, 950, 955, 956, 958, 959, 960, 961, 962, 963, 969, 970, 971, 972, 973, 974, 977, 978, 979, 980, 981, 982, 983, 984, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1049, 1050, 1051, 1053, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1154, 1155, 1158, 1159, 1161, 1163, 1164, 1165, 1166, 1167, 1169, 1171, 1172, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1194, 1196, 1197, 1198, 1203, 1204, 1205, 1206, 1208, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1260, 1261, 1265, 1266, 1268, 1269, 1270, 1272, 1273, 1281, 1282, 1283, 1284, 1285, 1288, 1296, 1297, 1299, 1300, 1301, 1303, 1305, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1342, 1345, 1346, 1348, 1349, 1350, 1351, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1389, 1390, 1391, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1486, 1487, 1488, 1490, 1491, 1493, 1494, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1542, 1556, 1557, 1559, 1562, 1563, 1565, 1566, 1567, 1568, 1569, 1575, 1576, 1577, 1578, 1579, 1581, 1582, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1615, 1617, 1618, 1619, 1620, 1625, 1639, 1640, 1641, 1642, 1643, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1842, 1843, 1844, 1845, 1846, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1957, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2024, 2025, 2026, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2161, 2172, 2197, 2199, 2218, 2220, 2230, 2233, 2240, 2241, 2244, 2246, 2249, 2256, 2285, 2289, 2292, 2299, 2312, 2318, 2328], "png": [7, 135], "_imag": 7, "lastli": [7, 112], "docstr": [7, 8, 9, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 121, 122, 123, 126, 129, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 219, 221, 222, 224, 225, 226, 231, 232, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 263, 264, 265, 267, 269, 270, 274, 275, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 349, 352, 360, 361, 362, 363, 364, 372, 373, 375, 376, 378, 380, 393, 394, 395, 396, 397, 417, 418, 419, 421, 436, 437, 438, 439, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 824, 825, 826, 828, 834, 835, 837, 838, 839, 840, 842, 844, 845, 847, 849, 850, 851, 853, 855, 856, 857, 859, 860, 861, 862, 864, 865, 866, 867, 869, 881, 882, 883, 885, 891, 892, 893, 896, 897, 898, 900, 901, 902, 903, 905, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 922, 923, 924, 925, 927, 928, 929, 930, 932, 969, 970, 971, 973, 979, 980, 981, 983, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1036, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1093, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1128, 1130, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1182, 1185, 1187, 1189, 1214, 1215, 1216, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1276, 1277, 1278, 1280, 1285, 1286, 1287, 1289, 1291, 1293, 1295, 1301, 1302, 1303, 1305, 1312, 1313, 1314, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1326, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1349, 1354, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1414, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1445, 1446, 1448, 1449, 1450, 1452, 1453, 1454, 1455, 1458, 1459, 1460, 1463, 1464, 1466, 1467, 1468, 1470, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1490, 1491, 1492, 1494, 1499, 1500, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1519, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1538, 1544, 1545, 1546, 1548, 1549, 1551, 1553, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1603, 1604, 1605, 1606, 1608, 1611, 1612, 1613, 1615, 1616, 1621, 1622, 1623, 1626, 1627, 1630, 1631, 1634, 1635, 1639, 1640, 1641, 1642, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1681, 1682, 1683, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1832, 1833, 1837, 1841, 1842, 1843, 1845, 1846, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1974, 1975, 1976, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1998, 2000, 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124], "structur": [7, 11, 62, 65, 66, 67, 68, 73, 74, 112, 114, 123, 127, 128, 129, 135, 136, 349, 351, 353, 360, 362, 364, 1414, 1443, 1953, 1967, 2133, 2134, 2149, 2150], "rst": 7, "main": [7, 10, 23, 24, 31, 40, 41, 79, 88, 89, 111, 114, 121, 124, 219, 240, 241, 287, 289, 291, 292, 294, 296, 870, 871, 876, 877, 891, 894, 979, 980, 981, 982, 1164, 1166, 1375, 1378, 1379, 1382, 1711, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1827, 1828, 1829, 1830, 1831, 2132, 2134, 2135, 2140], "submodul": [7, 9, 10, 11, 13, 62, 111, 115, 117, 123, 124, 128, 131, 132, 136, 169, 212, 213, 219, 305, 410, 445, 1413, 1414, 1609, 1647, 1711, 1852, 1868, 1949, 1953, 1973, 1978, 2005, 2052, 2068, 2114, 2125, 2126, 2143, 2146, 2149, 2150, 2151, 2161, 2173, 2174, 2175, 2176, 2177, 2183, 2184], "skip": [7, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 124, 128, 171, 173, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 249, 251, 253, 274, 276, 278, 282, 284, 286, 300, 301, 303, 318, 320, 322, 328, 330, 332, 393, 395, 397, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 779, 781, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 823, 824, 826, 828, 829, 831, 833, 849, 851, 853, 865, 867, 869, 896, 900, 908, 912, 979, 981, 983, 999, 1003, 1059, 1063, 1069, 1071, 1073, 1103, 1105, 1107, 1126, 1128, 1130, 1154, 1158, 1185, 1187, 1189, 1276, 1278, 1280, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1334, 1336, 1338, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1393, 1394, 1403, 1404, 1406, 1408, 1409, 1411, 1415, 1417, 1419, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1621, 1623, 1639, 1640, 1642, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1686, 1688, 1690, 1691, 1693, 1695, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1743, 1745, 1747, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1774, 1776, 1778, 1794, 1796, 1798, 1799, 1801, 1803, 1827, 1828, 1830, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1869, 1871, 1873, 1884, 1888, 1889, 1891, 1893, 1904, 1906, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1939, 1940, 1942, 1944, 1945, 1947, 1953, 1967, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2016, 2018, 2020, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2053, 2055, 2057, 2069, 2071, 2073, 2074, 2076, 2078, 2087, 2089, 2095, 2097, 2099, 2100, 2102, 2109, 2110, 2112, 2115, 2117, 2119, 2120, 2122, 2124, 2244, 2247], "read": [7, 9, 10, 31, 44, 45, 65, 66, 79, 92, 93, 115, 128, 130, 994, 995, 996, 997, 998, 1190, 1198, 1868, 1904, 1905, 1906, 1907, 1908, 2126, 2134], "partial_sourc": 7, "conf": 7, "copi": [7, 10, 11, 23, 24, 25, 26, 27, 28, 31, 32, 33, 44, 45, 65, 66, 71, 72, 73, 74, 75, 76, 79, 80, 81, 92, 93, 111, 113, 115, 116, 119, 126, 127, 132, 148, 149, 150, 156, 157, 219, 224, 225, 226, 227, 231, 232, 233, 243, 246, 305, 313, 314, 315, 316, 317, 410, 436, 437, 438, 439, 440, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 933, 955, 1190, 1191, 1192, 1193, 1245, 1248, 1251, 1252, 1253, 1254, 1255, 1339, 1341, 1414, 1565, 1567, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1868, 1904, 1905, 1906, 1907, 1908, 1953, 1955, 2052, 2063, 2066], "5": [7, 10, 11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 113, 114, 118, 122, 127, 128, 134, 135, 136, 169, 171, 172, 174, 177, 180, 182, 185, 187, 190, 192, 195, 197, 199, 201, 202, 205, 207, 208, 209, 210, 211, 219, 249, 250, 251, 252, 253, 254, 257, 259, 260, 262, 264, 267, 274, 275, 276, 277, 278, 279, 280, 282, 285, 297, 299, 300, 304, 305, 318, 319, 320, 321, 322, 323, 325, 326, 328, 330, 331, 332, 344, 346, 349, 351, 352, 353, 376, 378, 380, 381, 384, 393, 396, 397, 410, 417, 418, 419, 420, 421, 429, 433, 436, 437, 438, 439, 445, 446, 448, 449, 450, 456, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 498, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 531, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 555, 556, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 621, 622, 624, 626, 628, 629, 630, 636, 637, 638, 639, 640, 646, 648, 649, 651, 653, 656, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 723, 724, 725, 731, 733, 735, 736, 737, 739, 741, 743, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 769, 772, 773, 784, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 814, 815, 817, 834, 835, 836, 837, 838, 839, 840, 849, 852, 853, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 878, 881, 882, 883, 884, 885, 901, 903, 905, 906, 908, 909, 910, 911, 912, 913, 915, 918, 920, 921, 922, 928, 929, 930, 931, 932, 933, 937, 939, 941, 943, 944, 945, 946, 947, 948, 949, 950, 952, 954, 956, 958, 960, 963, 964, 967, 969, 970, 971, 972, 973, 979, 982, 983, 984, 987, 994, 995, 996, 997, 998, 999, 1001, 1003, 1009, 1010, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1036, 1039, 1040, 1041, 1042, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1079, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1126, 1128, 1130, 1131, 1132, 1133, 1134, 1136, 1138, 1140, 1141, 1142, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1173, 1174, 1175, 1176, 1177, 1183, 1184, 1185, 1187, 1189, 1190, 1191, 1192, 1193, 1195, 1198, 1201, 1202, 1203, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1229, 1230, 1232, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1251, 1253, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1276, 1278, 1280, 1281, 1282, 1285, 1288, 1291, 1293, 1295, 1301, 1302, 1303, 1304, 1305, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1329, 1331, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1349, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1400, 1401, 1402, 1408, 1409, 1410, 1411, 1412, 1414, 1427, 1429, 1430, 1432, 1433, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1466, 1467, 1468, 1469, 1470, 1473, 1475, 1476, 1477, 1478, 1481, 1486, 1499, 1502, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1565, 1566, 1567, 1568, 1569, 1575, 1578, 1579, 1581, 1584, 1596, 1608, 1609, 1611, 1613, 1614, 1615, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1636, 1637, 1639, 1640, 1642, 1643, 1645, 1647, 1648, 1649, 1651, 1652, 1653, 1659, 1661, 1662, 1663, 1669, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1717, 1719, 1720, 1721, 1722, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1759, 1761, 1762, 1763, 1764, 1767, 1769, 1772, 1779, 1782, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1799, 1800, 1802, 1809, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1852, 1863, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1879, 1881, 1882, 1883, 1884, 1886, 1887, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1922, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1955, 1957, 1960, 1961, 1962, 1963, 1965, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1982, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2005, 2011, 2013, 2014, 2021, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2034, 2036, 2037, 2041, 2042, 2043, 2044, 2045, 2046, 2052, 2053, 2054, 2056, 2057, 2058, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2114, 2115, 2118, 2120, 2123, 2161, 2172, 2230, 2232, 2233, 2234, 2235, 2238, 2239, 2240, 2241, 2249, 2255, 2260, 2261, 2263], "create_rst_fil": 7, "list": [7, 8, 9, 10, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 38, 39, 44, 45, 46, 47, 60, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 126, 127, 128, 129, 132, 135, 136, 137, 149, 169, 170, 171, 173, 175, 176, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 219, 221, 222, 224, 225, 226, 249, 251, 253, 264, 265, 267, 269, 272, 274, 276, 278, 282, 284, 286, 300, 301, 303, 305, 318, 319, 320, 321, 322, 328, 330, 332, 360, 362, 364, 372, 373, 375, 376, 378, 380, 393, 395, 397, 410, 416, 435, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 779, 781, 783, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 823, 824, 826, 828, 829, 831, 833, 844, 846, 847, 849, 851, 853, 865, 867, 869, 887, 888, 890, 896, 897, 898, 899, 900, 908, 909, 910, 911, 912, 923, 924, 925, 926, 927, 933, 940, 941, 942, 943, 947, 948, 954, 959, 969, 970, 972, 973, 974, 978, 979, 981, 983, 989, 992, 999, 1003, 1009, 1010, 1012, 1013, 1032, 1033, 1035, 1036, 1039, 1040, 1041, 1042, 1059, 1060, 1061, 1062, 1063, 1069, 1071, 1073, 1103, 1105, 1107, 1126, 1128, 1130, 1131, 1132, 1133, 1134, 1145, 1146, 1147, 1154, 1158, 1164, 1168, 1173, 1174, 1176, 1177, 1185, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1202, 1212, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1245, 1248, 1249, 1276, 1278, 1280, 1296, 1298, 1300, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1329, 1330, 1332, 1333, 1334, 1336, 1338, 1339, 1341, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1393, 1394, 1395, 1396, 1397, 1403, 1404, 1406, 1408, 1409, 1411, 1414, 1415, 1417, 1419, 1421, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1483, 1490, 1492, 1494, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1540, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1583, 1584, 1586, 1587, 1589, 1591, 1592, 1594, 1596, 1603, 1604, 1606, 1608, 1609, 1621, 1623, 1638, 1639, 1640, 1642, 1644, 1646, 1649, 1650, 1651, 1653, 1654, 1656, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1681, 1682, 1683, 1685, 1686, 1688, 1690, 1691, 1693, 1695, 1706, 1708, 1710, 1711, 1712, 1714, 1716, 1717, 1719, 1721, 1743, 1745, 1747, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1774, 1776, 1778, 1794, 1796, 1798, 1799, 1801, 1803, 1819, 1822, 1827, 1828, 1830, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1868, 1869, 1871, 1873, 1874, 1875, 1877, 1884, 1888, 1889, 1891, 1893, 1904, 1906, 1908, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1953, 1954, 1955, 1956, 1957, 1960, 1961, 1962, 1963, 1965, 1966, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2005, 2016, 2018, 2020, 2021, 2024, 2031, 2032, 2033, 2035, 2037, 2038, 2040, 2041, 2042, 2043, 2045, 2046, 2053, 2055, 2057, 2069, 2071, 2073, 2074, 2076, 2078, 2087, 2089, 2095, 2097, 2099, 2100, 2102, 2109, 2110, 2112, 2115, 2117, 2119, 2120, 2122, 2124, 2126, 2128, 2129, 2134, 2135, 2140, 2146, 2147, 2149, 2150, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2186, 2193, 2197, 2200, 2216, 2217, 2218, 2219, 2230, 2232, 2233, 2234, 2238, 2239, 2240, 2244, 2245, 2246, 2247, 2249, 2252, 2253, 2254, 2255, 2257, 2258, 2260, 2261, 2262, 2263, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2285, 2290], "filter": [7, 31, 38, 39, 79, 86, 87, 814, 815, 816, 817, 818, 870, 874, 875, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1131, 1134, 1147, 1229, 1230, 1231, 1232, 1233, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168], "recurs": [7, 10, 18, 19, 20, 21, 22, 65, 66, 69, 70, 111, 114, 123, 136, 149, 305, 354, 355, 357, 358, 410, 423, 424, 1414, 1471, 1472, 1953, 1954, 1955, 1964, 1965, 1966], "repres": [7, 23, 24, 29, 30, 31, 38, 39, 40, 41, 77, 78, 79, 86, 87, 88, 89, 112, 130, 134, 219, 264, 265, 267, 274, 277, 305, 348, 445, 456, 457, 458, 459, 460, 461, 464, 471, 472, 473, 474, 475, 486, 487, 488, 489, 490, 531, 532, 533, 534, 535, 726, 727, 728, 729, 730, 751, 752, 753, 754, 755, 819, 820, 821, 822, 823, 860, 861, 862, 864, 933, 948, 1039, 1040, 1041, 1042, 1121, 1124, 1164, 1170, 1190, 1208, 1285, 1288, 1306, 1307, 1609, 1638, 1646, 1647, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1711, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 2131, 2132, 2135, 2151, 2152, 2155, 2156, 2159, 2249, 2254, 2257], "its": [7, 9, 10, 11, 18, 21, 22, 25, 26, 31, 44, 45, 65, 66, 73, 74, 80, 81, 92, 93, 112, 115, 116, 119, 124, 126, 127, 128, 129, 130, 137, 149, 150, 156, 157, 305, 318, 319, 320, 321, 322, 335, 336, 338, 339, 340, 342, 343, 410, 435, 769, 771, 933, 961, 1296, 1297, 1299, 1372, 1374, 1414, 1466, 1468, 1470, 1585, 1711, 1759, 1762, 1868, 1884, 1885, 1886, 1887, 1888, 1904, 1907, 1909, 1910, 1911, 1912, 1913, 1929, 1930, 1931, 1932, 1933, 1953, 1960, 2125, 2133, 2134, 2140, 2149, 2150, 2197, 2199, 2210], "overal": [7, 114, 116, 117, 119, 137, 1647, 1686, 1689, 2130, 2132, 2133, 2134], "markup": 7, "6": [7, 13, 14, 15, 16, 17, 23, 24, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 54, 55, 56, 57, 62, 67, 68, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 113, 114, 115, 118, 128, 130, 132, 134, 135, 136, 169, 171, 172, 174, 177, 180, 197, 200, 202, 205, 219, 248, 249, 250, 251, 252, 253, 264, 267, 282, 285, 300, 304, 305, 318, 321, 323, 326, 344, 346, 349, 351, 352, 353, 410, 444, 445, 446, 447, 448, 449, 450, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 471, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 491, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 514, 516, 518, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 534, 536, 537, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 556, 558, 561, 563, 565, 566, 569, 571, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 591, 592, 594, 596, 597, 599, 601, 604, 606, 608, 609, 610, 611, 612, 614, 626, 628, 629, 636, 638, 639, 640, 646, 649, 656, 659, 661, 662, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 681, 682, 683, 685, 686, 687, 689, 696, 699, 706, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 731, 734, 736, 737, 739, 741, 742, 743, 744, 745, 746, 750, 751, 755, 761, 762, 764, 765, 769, 772, 773, 774, 778, 789, 790, 792, 794, 795, 797, 799, 800, 802, 834, 835, 836, 837, 838, 839, 840, 849, 850, 852, 865, 866, 867, 868, 869, 870, 871, 881, 883, 884, 885, 901, 903, 905, 908, 909, 910, 911, 912, 918, 921, 928, 931, 933, 937, 939, 941, 947, 948, 949, 950, 954, 958, 961, 964, 967, 969, 970, 971, 972, 973, 979, 982, 983, 984, 986, 987, 988, 994, 995, 996, 997, 998, 999, 1001, 1003, 1032, 1033, 1034, 1035, 1036, 1039, 1040, 1041, 1042, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1069, 1070, 1072, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1131, 1136, 1140, 1141, 1142, 1145, 1149, 1151, 1153, 1154, 1155, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1170, 1173, 1174, 1175, 1176, 1177, 1183, 1184, 1185, 1186, 1190, 1191, 1192, 1193, 1195, 1198, 1202, 1203, 1208, 1209, 1212, 1213, 1219, 1220, 1221, 1222, 1223, 1234, 1235, 1236, 1237, 1238, 1240, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1270, 1281, 1283, 1285, 1288, 1291, 1293, 1295, 1301, 1302, 1303, 1304, 1305, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1339, 1340, 1341, 1349, 1352, 1354, 1355, 1356, 1357, 1358, 1360, 1362, 1366, 1372, 1373, 1374, 1383, 1384, 1385, 1386, 1387, 1393, 1394, 1395, 1396, 1397, 1398, 1400, 1402, 1414, 1427, 1429, 1430, 1433, 1435, 1436, 1438, 1441, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1473, 1475, 1476, 1477, 1478, 1481, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1549, 1550, 1551, 1552, 1553, 1565, 1566, 1567, 1568, 1569, 1575, 1578, 1579, 1581, 1584, 1596, 1609, 1611, 1613, 1614, 1615, 1617, 1618, 1620, 1621, 1622, 1624, 1625, 1626, 1628, 1629, 1634, 1637, 1645, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1672, 1674, 1675, 1676, 1677, 1678, 1681, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1717, 1719, 1720, 1721, 1722, 1723, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1745, 1746, 1747, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1784, 1787, 1799, 1800, 1802, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1835, 1842, 1846, 1852, 1853, 1855, 1856, 1857, 1858, 1860, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1872, 1874, 1877, 1879, 1881, 1882, 1883, 1884, 1886, 1887, 1888, 1889, 1890, 1892, 1894, 1895, 1897, 1899, 1902, 1909, 1912, 1914, 1915, 1917, 1919, 1922, 1924, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1937, 1938, 1939, 1940, 1942, 1943, 1944, 1946, 1948, 1953, 1955, 1965, 1972, 1973, 1974, 1976, 1977, 1978, 1979, 1982, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2015, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2043, 2045, 2046, 2052, 2053, 2054, 2056, 2058, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2089, 2090, 2091, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2151, 2154, 2158, 2230, 2238], "extract": [7, 31, 79, 126, 129, 150, 151, 1190, 1210, 1357, 1358, 1359, 1360, 1361, 2130, 2134, 2135, 2140], "class": [7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 116, 117, 118, 119, 122, 127, 128, 130, 132, 133, 135, 136, 137, 147, 148, 149, 219, 220, 249, 250, 282, 285, 300, 304, 305, 306, 307, 308, 309, 310, 318, 319, 320, 322, 349, 350, 360, 361, 363, 398, 400, 401, 410, 411, 412, 541, 542, 546, 547, 571, 572, 573, 575, 681, 682, 683, 706, 707, 708, 710, 767, 768, 809, 811, 813, 834, 835, 836, 837, 849, 852, 918, 920, 922, 933, 937, 958, 1089, 1091, 1093, 1183, 1184, 1224, 1226, 1228, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1312, 1315, 1317, 1318, 1342, 1343, 1344, 1349, 1353, 1354, 1414, 1415, 1417, 1421, 1427, 1428, 1429, 1430, 1448, 1450, 1452, 1473, 1477, 1515, 1518, 1540, 1544, 1545, 1575, 1578, 1579, 1603, 1604, 1609, 1610, 1647, 1696, 1698, 1706, 1709, 1711, 1764, 1767, 1853, 1857, 1858, 1862, 1863, 1867, 1953, 1955, 1966, 1984, 1988, 1989, 1993, 1994, 1998, 2005, 2021, 2024, 2031, 2042, 2046, 2053, 2057, 2095, 2096, 2100, 2101, 2125, 2126, 2128, 2129, 2132, 2134, 2135, 2141, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2197, 2217, 2219, 2221, 2222, 2223, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2276, 2277, 2308, 2309, 2310, 2311, 2312, 2313, 2322, 2328], "get_functions_and_class": 7, "doctr": 7, "7": [7, 11, 13, 14, 15, 16, 17, 25, 26, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 123, 125, 128, 169, 177, 180, 182, 183, 187, 190, 192, 195, 197, 200, 219, 254, 257, 274, 277, 305, 349, 350, 351, 352, 353, 360, 363, 410, 417, 421, 422, 445, 446, 449, 461, 462, 463, 464, 465, 471, 473, 491, 492, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 514, 516, 517, 519, 521, 524, 531, 533, 534, 535, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 558, 559, 560, 566, 569, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 601, 602, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 636, 638, 639, 640, 646, 648, 650, 656, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 686, 687, 689, 696, 698, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 724, 731, 733, 734, 735, 746, 750, 751, 755, 756, 760, 761, 763, 765, 769, 772, 773, 779, 780, 782, 789, 792, 794, 797, 799, 802, 804, 806, 808, 809, 812, 814, 815, 817, 834, 835, 836, 837, 838, 839, 849, 852, 853, 865, 866, 867, 868, 869, 870, 871, 873, 875, 881, 883, 884, 885, 896, 897, 898, 899, 900, 901, 903, 905, 908, 909, 910, 911, 912, 933, 934, 937, 939, 940, 941, 948, 949, 951, 958, 964, 967, 969, 970, 971, 972, 973, 979, 982, 984, 985, 986, 987, 988, 994, 995, 996, 997, 998, 1032, 1034, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1050, 1052, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1069, 1070, 1072, 1079, 1082, 1089, 1091, 1093, 1103, 1106, 1108, 1109, 1110, 1111, 1112, 1117, 1119, 1131, 1133, 1134, 1136, 1140, 1141, 1142, 1145, 1164, 1171, 1183, 1184, 1190, 1191, 1192, 1193, 1195, 1198, 1202, 1203, 1208, 1209, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1234, 1235, 1236, 1237, 1238, 1240, 1242, 1244, 1245, 1247, 1249, 1261, 1265, 1266, 1268, 1270, 1285, 1288, 1291, 1293, 1295, 1301, 1302, 1303, 1304, 1305, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1349, 1352, 1355, 1356, 1357, 1358, 1360, 1362, 1366, 1383, 1384, 1385, 1386, 1387, 1393, 1394, 1395, 1396, 1397, 1398, 1400, 1402, 1414, 1427, 1429, 1430, 1433, 1436, 1438, 1441, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1565, 1566, 1569, 1575, 1578, 1579, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1637, 1645, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1664, 1667, 1674, 1677, 1681, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1701, 1704, 1706, 1708, 1709, 1710, 1711, 1717, 1719, 1720, 1721, 1722, 1723, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1746, 1747, 1759, 1762, 1764, 1768, 1769, 1772, 1784, 1787, 1799, 1800, 1802, 1809, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1830, 1831, 1832, 1833, 1835, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1872, 1884, 1885, 1886, 1887, 1888, 1889, 1892, 1914, 1916, 1918, 1924, 1927, 1929, 1930, 1931, 1932, 1933, 1939, 1940, 1942, 1943, 1953, 1955, 1962, 1973, 1974, 1976, 1977, 1978, 1979, 1982, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2005, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2036, 2042, 2043, 2044, 2045, 2046, 2052, 2053, 2054, 2055, 2057, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2082, 2087, 2089, 2090, 2095, 2097, 2099, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2230, 2238], "readm": [7, 149], "module_nam": 7, "copy_readme_to_rst": 7, "tabl": [7, 116, 126, 2134, 2230, 2238, 2244, 2245], "content": [7, 9, 31, 65, 66, 79, 125, 132, 135, 1261, 1262, 1263, 1264, 1349, 1354], "toc": 7, "accord": [7, 9, 10, 25, 26, 32, 33, 44, 45, 56, 57, 73, 74, 92, 93, 104, 105, 111, 116, 123, 126, 128, 305, 328, 329, 330, 331, 332, 349, 352, 445, 461, 464, 511, 514, 1190, 1208, 1285, 1288, 1414, 1473, 1476, 1486, 1544, 1547, 1549, 1550, 1552, 1711, 1837, 1841, 1868, 1879, 1880, 1881, 1882, 1883, 1944, 1945, 1946, 1947, 1948, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2249, 2256, 2285, 2287], "append": [7, 31, 40, 41, 65, 66, 79, 115, 120, 128, 132, 135, 150, 156, 157, 445, 501, 504, 896, 897, 898, 899, 900, 933, 940, 1711, 1732, 1733, 1735, 1759, 1762, 1868, 1884, 1887], "append_toctree_to_rst": 7, "9": [7, 13, 16, 17, 25, 26, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 52, 53, 54, 55, 56, 57, 62, 63, 64, 67, 68, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 114, 118, 120, 128, 135, 136, 169, 171, 173, 174, 305, 335, 336, 339, 340, 342, 343, 349, 351, 352, 353, 360, 361, 362, 445, 451, 452, 461, 462, 463, 464, 465, 466, 467, 470, 471, 474, 486, 487, 488, 490, 491, 492, 494, 496, 497, 499, 511, 514, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 571, 573, 574, 575, 586, 589, 601, 605, 611, 612, 613, 615, 616, 618, 619, 620, 621, 623, 624, 625, 646, 647, 649, 651, 653, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 681, 682, 683, 685, 691, 694, 695, 696, 698, 699, 700, 711, 713, 714, 715, 716, 719, 731, 733, 735, 736, 737, 738, 739, 740, 741, 743, 745, 761, 762, 763, 764, 765, 769, 770, 772, 789, 791, 794, 796, 799, 801, 802, 804, 805, 806, 807, 808, 809, 810, 812, 849, 853, 881, 884, 885, 901, 903, 905, 908, 909, 910, 911, 912, 933, 942, 948, 964, 967, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1039, 1040, 1041, 1042, 1059, 1060, 1061, 1062, 1063, 1079, 1080, 1081, 1082, 1083, 1121, 1123, 1125, 1131, 1132, 1133, 1136, 1140, 1141, 1142, 1145, 1146, 1159, 1160, 1161, 1162, 1163, 1178, 1179, 1180, 1181, 1182, 1190, 1193, 1195, 1198, 1202, 1211, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1245, 1246, 1247, 1248, 1249, 1266, 1268, 1270, 1291, 1293, 1295, 1312, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1324, 1326, 1339, 1340, 1341, 1367, 1369, 1371, 1393, 1394, 1396, 1414, 1438, 1441, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1461, 1466, 1468, 1470, 1473, 1476, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1521, 1522, 1524, 1526, 1527, 1529, 1534, 1535, 1537, 1544, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1565, 1566, 1567, 1569, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1659, 1660, 1662, 1674, 1677, 1681, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1701, 1704, 1711, 1717, 1720, 1721, 1722, 1725, 1732, 1735, 1743, 1746, 1759, 1762, 1764, 1767, 1769, 1772, 1784, 1787, 1799, 1800, 1802, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1868, 1869, 1870, 1872, 1889, 1892, 1909, 1912, 1914, 1916, 1918, 1924, 1927, 1929, 1930, 1932, 1939, 1940, 1942, 1943, 1953, 1955, 1960, 1962, 1965, 1978, 1979, 1982, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2026, 2030, 2031, 2032, 2034, 2036, 2042, 2043, 2045, 2046, 2052, 2053, 2054, 2063, 2065, 2066, 2067, 2068, 2074, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2087, 2089, 2095, 2096, 2098, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2130, 2177, 2178, 2179, 2230, 2240, 2241], "index": [7, 23, 24, 31, 32, 33, 44, 45, 50, 51, 52, 53, 54, 55, 65, 66, 71, 72, 79, 80, 81, 92, 93, 98, 99, 100, 101, 102, 103, 114, 115, 123, 127, 128, 134, 150, 157, 213, 219, 240, 241, 264, 265, 266, 267, 268, 410, 432, 870, 871, 887, 889, 979, 980, 981, 982, 994, 995, 996, 997, 998, 1131, 1137, 1190, 1198, 1206, 1207, 1210, 1273, 1274, 1301, 1302, 1303, 1304, 1305, 1349, 1355, 1356, 1357, 1361, 1383, 1387, 1414, 1420, 1478, 1479, 1480, 1481, 1482, 1486, 1544, 1546, 1548, 1549, 1551, 1553, 1609, 1644, 1868, 1904, 1905, 1906, 1907, 1908, 1924, 1927, 1953, 1956, 1957, 1958, 1961, 1962, 1963, 1969, 1971, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2021, 2024, 2031, 2032, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2134, 2197, 2202, 2244, 2247, 2332, 2334], "create_index_rst": 7, "14": [7, 25, 26, 29, 30, 31, 38, 39, 48, 49, 56, 57, 73, 74, 77, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 96, 97, 114, 118, 128, 305, 313, 315, 316, 317, 349, 350, 352, 360, 361, 445, 451, 453, 454, 455, 471, 474, 481, 482, 483, 484, 485, 516, 517, 536, 537, 539, 540, 636, 639, 651, 653, 671, 673, 696, 699, 716, 720, 726, 728, 730, 761, 765, 804, 805, 806, 807, 808, 809, 812, 881, 884, 908, 909, 910, 911, 912, 989, 991, 993, 994, 995, 996, 997, 998, 1059, 1060, 1061, 1062, 1063, 1131, 1132, 1133, 1136, 1147, 1190, 1195, 1198, 1202, 1229, 1230, 1232, 1393, 1394, 1396, 1414, 1565, 1567, 1568, 1609, 1611, 1614, 1647, 1649, 1652, 1654, 1657, 1664, 1666, 1667, 1668, 1674, 1676, 1677, 1678, 1686, 1687, 1689, 1706, 1709, 1711, 1732, 1735, 1784, 1787, 1827, 1828, 1830, 1831, 1868, 1939, 1940, 1942, 1943, 1984, 1985, 1988, 1989, 1990, 1991, 1994, 1995, 1996, 2031, 2032, 2036, 2068, 2074, 2075, 2077, 2079, 2080, 2082], "\u03c0": [7, 213, 445, 451, 454, 466, 469, 476, 479, 481, 484], "updat": [7, 9, 10, 11, 18, 20, 22, 32, 33, 34, 35, 65, 66, 80, 81, 82, 83, 110, 111, 112, 114, 115, 116, 118, 122, 124, 126, 127, 128, 130, 132, 134, 135, 137, 149, 1414, 1515, 1516, 1517, 1518, 1519, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1647, 1686, 1689, 1696, 1699, 1949, 1950, 1951, 1953, 1961, 1962, 1966, 1971, 1972, 2146, 2147, 2148, 2177, 2178, 2179, 2180, 2181, 2182, 2276, 2278, 2312, 2323], "namespac": [7, 9, 116, 124, 126, 127, 129, 132, 137, 2197, 2216], "remov": [7, 9, 40, 41, 65, 66, 88, 89, 113, 115, 116, 119, 123, 128, 130, 137, 1609, 1644, 1711, 1732, 1733, 1735, 1759, 1762, 1827, 1828, 1829, 1830, 1831, 1868, 1919, 1922, 1949, 1950, 1951, 1953, 1968, 2134], "here": [8, 9, 10, 11, 111, 114, 115, 118, 122, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 148, 149, 445, 711, 714, 2134, 2135], "resours": 8, "climb": 8, "steep": 8, "curv": 8, "respect": [8, 9, 11, 23, 24, 29, 30, 31, 34, 35, 40, 41, 77, 78, 79, 82, 83, 88, 89, 112, 114, 115, 116, 118, 122, 126, 128, 129, 219, 264, 265, 267, 445, 446, 449, 461, 464, 481, 484, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 541, 544, 546, 549, 571, 574, 576, 579, 581, 584, 606, 609, 611, 614, 636, 639, 641, 644, 651, 654, 656, 659, 671, 674, 681, 684, 706, 707, 708, 709, 710, 741, 745, 769, 770, 843, 933, 948, 1039, 1040, 1041, 1042, 1044, 1045, 1178, 1179, 1180, 1181, 1182, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1645, 1647, 1648, 1679, 1680, 1711, 1794, 1795, 1796, 1797, 1798, 1809, 1810, 1811, 1812, 1813, 1949, 1950, 1951, 1952, 2130, 2140, 2151, 2154, 2197, 2218, 2219, 2230, 2238], "behaviour": [8, 9, 11, 110, 111, 112, 114, 116, 119, 120, 122, 125, 126, 128, 129, 134, 933, 955, 1251, 1254], "frontend": [8, 11, 18, 21, 110, 115, 116, 120, 128, 129, 130, 131, 133, 1414, 1555, 2125, 2134, 2197, 2208, 2216, 2217, 2221, 2226, 2244, 2247, 2276, 2277, 2278], "refer": [8, 9, 10, 11, 31, 44, 45, 56, 57, 58, 59, 79, 82, 83, 92, 93, 104, 105, 106, 107, 111, 112, 115, 116, 122, 123, 126, 127, 128, 149, 150, 156, 157, 219, 240, 241, 445, 561, 564, 626, 629, 870, 871, 876, 877, 891, 894, 933, 959, 979, 980, 981, 982, 994, 995, 996, 997, 998, 1164, 1166, 1190, 1198, 1329, 1332, 1375, 1378, 1379, 1382, 1609, 1611, 1614, 1615, 1617, 1618, 1711, 1727, 1730, 1837, 1841, 1868, 1904, 1905, 1906, 1907, 1908, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2134, 2161, 2171], "realpython": 8, "pyn": 8, "kind": [8, 31, 126, 128, 130, 132, 149, 305, 349, 352, 360, 363, 365, 445, 691, 694, 1074, 1075, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108, 2230, 2235, 2244, 2247], "stack": [8, 13, 16, 17, 40, 41, 44, 45, 65, 66, 79, 88, 89, 92, 93, 111, 132, 150, 156, 157, 219, 287, 291, 292, 296, 913, 915, 916, 917, 1064, 1067, 1190, 1196, 1203, 1213, 1398, 1399, 1401, 1402, 1414, 1497, 1555, 1561, 1602, 1711, 1722, 1725, 1732, 1735, 1737, 1738, 1741, 1743, 1746, 1753, 1756, 1759, 1762, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1789, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1809, 1813, 1814, 1818, 1827, 1828, 1829, 1830, 1831, 1868, 1928, 1953, 1954, 1964, 1965, 2126, 2130, 2132, 2139, 2140, 2161, 2170], "overflow": [8, 116, 445, 461, 464, 1711, 1799, 1802, 2068, 2104, 2108], "platform": [8, 10, 2132, 2136, 2138], "sort": [8, 31, 55, 62, 65, 66, 67, 68, 79, 103, 115, 129, 933, 961, 1159, 1160, 1161, 1162, 1163, 1245, 1246, 1247, 1248, 1249, 1261, 1262, 1263, 1264, 1340, 1341, 1349, 1354, 1372, 1374, 1711, 1737, 1738, 1741, 1809, 1813, 1814, 1818, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2067, 2249, 2252], "inform": [8, 9, 10, 11, 25, 26, 34, 35, 73, 74, 82, 83, 111, 114, 115, 120, 128, 305, 349, 350, 351, 352, 353, 360, 361, 362, 363, 364, 1414, 1420, 1609, 1639, 1640, 1641, 1642, 1643, 2137], "pilot": 8, "bit": [8, 9, 10, 114, 115, 116, 118, 123, 132, 134, 305, 348, 349, 352, 360, 363, 445, 496, 499, 501, 504, 511, 514, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108, 2140], "thei": [8, 9, 11, 31, 40, 41, 48, 49, 65, 66, 88, 89, 96, 97, 110, 111, 113, 114, 115, 116, 117, 118, 120, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136, 137, 149, 305, 391, 933, 943, 961, 1009, 1010, 1012, 1372, 1374, 1711, 1832, 1833, 1834, 1835, 1836, 1949, 1950, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 2126, 2131, 2134, 2136, 2137, 2140, 2141, 2183, 2184, 2186, 2187], "done": [8, 9, 10, 11, 111, 115, 118, 121, 126, 128, 135, 1711, 1743, 1746, 2134], "faster": [8, 40, 41, 88, 89, 1711, 1809, 1810, 1811, 1812, 1813, 2125, 2136, 2139], "head": [8, 10, 126, 1647, 1701, 1704, 2126, 2161, 2172], "stuck": [8, 9], "spell": 8, "check": [8, 9, 10, 11, 18, 19, 20, 21, 22, 25, 26, 32, 33, 65, 66, 73, 74, 80, 81, 111, 114, 115, 118, 120, 124, 126, 127, 128, 129, 131, 132, 134, 135, 136, 150, 156, 157, 305, 333, 334, 354, 355, 357, 358, 366, 372, 374, 375, 376, 377, 379, 380, 386, 389, 409, 410, 423, 424, 430, 444, 1414, 1427, 1429, 1430, 1431, 1463, 1465, 1471, 1472, 1489, 1499, 1500, 1501, 1502, 1503, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1558, 1575, 1577, 1579, 1599, 1603, 1604, 1605, 1606, 1607, 1711, 1738, 1741, 1743, 1746, 1953, 1954, 1955, 1964, 1965, 1966, 2126, 2149, 2150, 2186, 2189, 2190, 2191], "though": [8, 9, 11, 116, 119, 123, 125, 126, 130, 135, 149], "sound": [8, 115, 131], "odd": [8, 31, 79, 111, 445, 691, 694, 819, 820, 821, 822, 823, 1190, 1208, 1285, 1288, 1306, 1307], "peopl": [8, 10, 11, 110, 2134, 2136], "action": [8, 115, 118, 128], "integr": [8, 10, 25, 26, 31, 73, 74, 77, 78, 110, 305, 313, 314, 315, 316, 317, 933, 961, 1372, 1373, 1374, 2132, 2134, 2136, 2137, 2138], "keep": [8, 9, 10, 11, 44, 45, 65, 66, 92, 93, 111, 114, 115, 120, 126, 128, 129, 130, 135, 137, 1868, 1939, 1940, 1941, 1942, 1943], "explain": [9, 10, 11, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 2126, 2130, 2137, 2140], "frequent": [9, 11, 2134], "wherebi": [9, 1953, 1966, 2131], "outlin": [9, 10, 11, 110, 114, 116, 119, 123, 125, 126, 128], "broad": [9, 2136], "individu": [9, 11, 111, 116, 123, 125, 126, 2134, 2137, 2140, 2141], "sub": [9, 11, 31, 40, 41, 44, 45, 62, 65, 66, 67, 68, 69, 70, 77, 78, 79, 80, 81, 88, 89, 92, 93, 110, 114, 120, 126, 127, 128, 134, 135, 136, 666, 668, 670, 908, 911, 923, 926, 1059, 1062, 1164, 1168, 1190, 1195, 1202, 1212, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1349, 1353, 1354, 1393, 1397, 1453, 1457, 1458, 1462, 1478, 1482, 1711, 1732, 1733, 1734, 1735, 1736, 1868, 1914, 1915, 1916, 1917, 1918, 1949, 1950, 1951, 1952, 2126, 2130, 2149, 2150], "distribut": [9, 31, 42, 43, 48, 49, 79, 90, 91, 96, 97, 115, 117, 149, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 834, 835, 836, 837, 901, 902, 903, 904, 905, 906, 907, 1029, 1030, 1031, 1131, 1138, 1139, 1183, 1184, 1291, 1292, 1293, 1294, 1295, 1306, 1307, 1308, 1309, 1310, 1311, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2134, 2137, 2151, 2156, 2159, 2161, 2169, 2173, 2174], "across": [9, 50, 51, 65, 66, 80, 81, 98, 99, 111, 114, 116, 118, 120, 122, 123, 126, 128, 130, 410, 433, 434, 1414, 1422, 1425, 1499, 1501, 1503, 1647, 1686, 1689, 1953, 1960, 2005, 2006, 2008, 2010, 2011, 2012, 2013, 2014, 2015, 2132, 2134, 2139], "todo": [9, 116, 126, 128], "detail": [9, 11, 40, 41, 44, 45, 52, 53, 88, 89, 92, 93, 100, 101, 111, 113, 114, 115, 122, 123, 124, 126, 127, 128, 129, 132, 134, 135, 136, 219, 243, 246, 1732, 1734, 1736, 1759, 1760, 1789, 1790, 1809, 1810, 1811, 1812, 1924, 1925, 1926, 1928, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2136, 2140], "befor": [9, 10, 11, 31, 38, 39, 40, 41, 44, 45, 65, 66, 79, 86, 87, 88, 89, 111, 112, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 135, 149, 410, 412, 435, 984, 985, 986, 987, 988, 999, 1002, 1004, 1007, 1079, 1080, 1081, 1082, 1083, 1131, 1141, 1142, 1190, 1199, 1200, 1208, 1285, 1288, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1658, 1659, 1662, 1669, 1672, 1679, 1681, 1684, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1759, 1760, 1762, 1842, 1843, 1844, 1845, 1846, 1868, 1874, 1875, 1877, 1949, 1950, 1951, 1953, 1966, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108, 2134, 2149, 2150, 2312, 2328], "select": [9, 10, 11, 31, 56, 57, 79, 104, 105, 115, 125, 128, 132, 134, 137, 149, 923, 924, 925, 926, 927, 1164, 1168, 1172, 1190, 1210, 1250, 1357, 1358, 1359, 1360, 1361, 2068, 2069, 2070, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2134, 2137, 2138], "alloc": [9, 11, 23, 24, 25, 26, 73, 74, 149, 219, 287, 289, 291, 292, 294, 296, 305, 313, 314, 315, 316, 317], "describ": [9, 11, 56, 57, 79, 115, 128, 132, 137, 1159, 1162, 1291, 1293, 1294, 1295, 1306, 1311, 1339, 1340, 2068, 2079, 2080, 2082, 2095, 2098, 2104, 2108, 2134], "explan": [9, 11, 114, 119, 122, 126, 134], "instead": [9, 10, 11, 29, 30, 77, 78, 111, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 132, 134, 135, 149, 410, 414, 445, 706, 707, 708, 709, 710, 2132, 2134, 2140, 2141], "focu": [9, 2132, 2133, 2136, 2141], "been": [9, 11, 32, 33, 48, 49, 80, 81, 96, 97, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 128, 132, 134, 148, 149, 410, 416, 445, 711, 714, 1414, 1448, 1449, 1451, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1978, 1979, 1980, 1981, 1982, 1983, 2125, 2134, 2141, 2312, 2320], "alwai": [9, 11, 25, 26, 44, 45, 73, 74, 92, 93, 112, 113, 114, 116, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 149, 305, 313, 314, 315, 316, 317, 445, 461, 464, 933, 943, 1009, 1012, 1414, 1515, 1518, 1868, 1904, 1905, 1906, 1907, 1908, 2249, 2256], "NOT": [9, 445, 646, 649], "pypi": [9, 10, 149], "implement": [9, 25, 26, 27, 28, 31, 52, 53, 54, 55, 73, 74, 75, 76, 79, 102, 103, 110, 111, 112, 113, 114, 116, 117, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 148, 149, 305, 313, 314, 315, 316, 317, 393, 396, 410, 436, 437, 438, 439, 440, 445, 446, 449, 451, 454, 456, 459, 466, 469, 471, 474, 476, 479, 481, 484, 526, 529, 531, 534, 556, 559, 561, 564, 616, 619, 621, 624, 626, 629, 631, 634, 691, 694, 706, 709, 721, 724, 726, 729, 746, 750, 751, 755, 933, 960, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1334, 1337, 1349, 1353, 1354, 1711, 1737, 1738, 1741, 1743, 1746, 2031, 2032, 2034, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2100, 2103, 2125, 2126, 2131, 2132, 2133, 2134, 2137, 2140, 2141, 2312, 2328], "instruct": [9, 10, 111, 120, 127, 128, 2132, 2135, 2138, 2140], "static": [9, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 118, 119, 123, 124, 126, 149, 171, 175, 177, 181, 182, 186, 187, 191, 192, 196, 197, 201, 202, 206, 207, 211, 219, 231, 233, 249, 253, 259, 263, 274, 278, 282, 286, 300, 301, 318, 322, 323, 327, 328, 332, 349, 353, 360, 364, 372, 375, 376, 380, 393, 397, 417, 421, 446, 450, 451, 455, 456, 460, 461, 465, 466, 470, 471, 475, 476, 480, 481, 485, 486, 490, 491, 495, 496, 500, 501, 505, 506, 510, 511, 515, 516, 520, 521, 525, 526, 530, 531, 535, 536, 540, 541, 545, 546, 550, 551, 555, 556, 560, 561, 565, 566, 570, 571, 575, 576, 580, 581, 585, 586, 590, 591, 595, 596, 600, 601, 605, 606, 610, 611, 615, 616, 620, 621, 625, 626, 630, 631, 635, 636, 640, 641, 645, 646, 650, 651, 655, 656, 660, 661, 665, 666, 670, 671, 675, 676, 680, 681, 685, 686, 690, 691, 695, 696, 700, 701, 705, 706, 710, 711, 715, 716, 720, 721, 725, 726, 730, 731, 735, 736, 740, 741, 742, 746, 747, 751, 752, 756, 757, 761, 762, 774, 778, 779, 783, 784, 788, 789, 793, 794, 798, 799, 803, 804, 808, 809, 813, 814, 816, 818, 824, 828, 834, 837, 838, 842, 844, 847, 849, 853, 855, 859, 860, 864, 865, 869, 881, 885, 896, 900, 901, 905, 908, 912, 913, 917, 918, 922, 923, 927, 928, 932, 969, 973, 979, 983, 984, 988, 989, 993, 994, 998, 999, 1003, 1004, 1008, 1009, 1013, 1014, 1018, 1019, 1023, 1024, 1028, 1032, 1036, 1046, 1049, 1050, 1053, 1054, 1058, 1059, 1063, 1064, 1068, 1069, 1073, 1074, 1078, 1079, 1083, 1084, 1088, 1089, 1093, 1103, 1107, 1113, 1116, 1117, 1120, 1121, 1125, 1126, 1130, 1149, 1153, 1154, 1158, 1159, 1163, 1173, 1177, 1178, 1182, 1185, 1189, 1219, 1223, 1224, 1228, 1229, 1231, 1233, 1234, 1238, 1240, 1244, 1245, 1249, 1251, 1255, 1256, 1260, 1261, 1265, 1266, 1270, 1276, 1280, 1285, 1289, 1291, 1295, 1301, 1305, 1312, 1316, 1317, 1321, 1322, 1324, 1326, 1329, 1333, 1334, 1338, 1357, 1358, 1362, 1363, 1367, 1368, 1383, 1384, 1389, 1390, 1393, 1394, 1398, 1399, 1403, 1404, 1408, 1409, 1415, 1419, 1427, 1431, 1433, 1437, 1448, 1452, 1466, 1470, 1473, 1477, 1505, 1509, 1510, 1514, 1521, 1525, 1526, 1530, 1534, 1538, 1544, 1548, 1549, 1553, 1565, 1569, 1570, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1591, 1592, 1603, 1604, 1639, 1640, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1673, 1674, 1678, 1681, 1685, 1686, 1690, 1691, 1695, 1706, 1710, 1712, 1716, 1717, 1721, 1732, 1736, 1743, 1747, 1753, 1757, 1759, 1763, 1764, 1768, 1774, 1778, 1794, 1798, 1799, 1803, 1809, 1810, 1827, 1828, 1832, 1833, 1842, 1843, 1853, 1857, 1858, 1862, 1863, 1867, 1869, 1873, 1874, 1878, 1879, 1883, 1884, 1888, 1889, 1893, 1894, 1898, 1899, 1903, 1904, 1908, 1909, 1913, 1914, 1918, 1919, 1923, 1924, 1928, 1929, 1930, 1934, 1935, 1939, 1940, 1944, 1945, 1979, 1983, 1984, 1988, 1989, 1993, 1994, 1998, 2000, 2004, 2006, 2010, 2011, 2015, 2016, 2020, 2021, 2025, 2026, 2027, 2032, 2033, 2037, 2038, 2042, 2043, 2053, 2057, 2058, 2062, 2063, 2067, 2069, 2073, 2074, 2078, 2095, 2099, 2109, 2110, 2115, 2119, 2120, 2124, 2133, 2134, 2135, 2146, 2147], "method": [9, 11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 116, 118, 119, 121, 122, 123, 124, 128, 129, 132, 133, 136, 137, 149, 150, 151, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 219, 224, 225, 231, 232, 233, 235, 236, 243, 244, 246, 249, 250, 251, 253, 259, 260, 261, 263, 264, 265, 269, 270, 274, 275, 276, 278, 282, 283, 284, 285, 286, 287, 289, 292, 294, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 332, 349, 350, 351, 353, 360, 361, 362, 364, 372, 373, 375, 376, 377, 378, 380, 393, 394, 395, 397, 417, 418, 419, 421, 436, 437, 438, 439, 445, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 819, 823, 824, 825, 826, 828, 829, 831, 833, 834, 835, 837, 838, 839, 840, 842, 844, 845, 847, 849, 850, 851, 852, 853, 855, 856, 857, 859, 860, 861, 862, 864, 865, 866, 867, 869, 881, 882, 883, 885, 891, 892, 893, 896, 897, 898, 900, 901, 902, 903, 905, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 922, 923, 924, 925, 927, 928, 929, 930, 932, 933, 937, 958, 969, 970, 971, 973, 979, 980, 981, 983, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1036, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1093, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1128, 1130, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1182, 1185, 1187, 1189, 1214, 1215, 1216, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1276, 1277, 1278, 1280, 1285, 1286, 1287, 1289, 1291, 1293, 1295, 1301, 1302, 1303, 1304, 1305, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1326, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1349, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1414, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1443, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1482, 1490, 1491, 1492, 1494, 1499, 1500, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1519, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1538, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1603, 1604, 1605, 1606, 1609, 1611, 1612, 1613, 1615, 1616, 1621, 1622, 1623, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1638, 1639, 1640, 1641, 1642, 1644, 1646, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1681, 1682, 1683, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1727, 1728, 1729, 1732, 1733, 1734, 1736, 1743, 1744, 1745, 1747, 1753, 1754, 1755, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1768, 1774, 1775, 1776, 1778, 1779, 1781, 1783, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1803, 1809, 1810, 1811, 1812, 1814, 1818, 1827, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1842, 1843, 1844, 1845, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1953, 1965, 1966, 1967, 1974, 1975, 1976, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1998, 2000, 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2062, 2063, 2064, 2065, 2067, 2068, 2069, 2070, 2071, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2091, 2093, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2135, 2141, 2149, 2151, 2156, 2161, 2172, 2173, 2174, 2197, 2217, 2219, 2276, 2277, 2278, 2279, 2280, 2282], "arrai": [9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 149, 150, 156, 157, 163, 165, 166, 169, 171, 173, 174, 175, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 213, 219, 221, 222, 224, 226, 231, 233, 234, 235, 238, 240, 241, 243, 246, 248, 249, 251, 252, 253, 254, 257, 259, 261, 262, 263, 264, 266, 267, 268, 269, 272, 274, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 291, 292, 296, 297, 299, 300, 301, 303, 304, 305, 313, 315, 316, 317, 318, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 335, 336, 338, 339, 340, 342, 343, 344, 345, 346, 349, 351, 352, 353, 360, 362, 363, 364, 365, 367, 370, 372, 374, 376, 378, 379, 380, 381, 384, 386, 389, 391, 392, 393, 395, 396, 397, 403, 410, 416, 417, 419, 420, 421, 425, 429, 431, 435, 436, 437, 439, 440, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 675, 676, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 742, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 781, 782, 783, 784, 786, 787, 788, 789, 791, 792, 793, 794, 796, 797, 798, 799, 801, 802, 803, 804, 806, 807, 808, 809, 811, 812, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 826, 827, 828, 829, 832, 834, 835, 836, 837, 838, 840, 841, 842, 849, 851, 852, 853, 855, 857, 858, 859, 860, 862, 863, 864, 865, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 884, 885, 887, 888, 889, 890, 891, 893, 894, 896, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 910, 911, 912, 913, 915, 916, 917, 918, 920, 921, 922, 923, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 969, 971, 972, 973, 974, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1095, 1097, 1098, 1099, 1103, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1273, 1274, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1288, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1324, 1325, 1326, 1329, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1375, 1378, 1379, 1382, 1383, 1384, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1414, 1415, 1417, 1418, 1419, 1422, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1445, 1447, 1448, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1465, 1466, 1468, 1469, 1470, 1473, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1486, 1490, 1492, 1493, 1494, 1499, 1501, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1521, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1534, 1536, 1537, 1538, 1540, 1542, 1543, 1544, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1560, 1561, 1563, 1565, 1567, 1568, 1569, 1570, 1572, 1573, 1574, 1575, 1578, 1579, 1581, 1582, 1584, 1586, 1587, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1601, 1603, 1604, 1606, 1607, 1608, 1609, 1611, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1628, 1629, 1630, 1632, 1633, 1634, 1636, 1637, 1639, 1640, 1642, 1643, 1645, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1698, 1699, 1701, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1724, 1725, 1727, 1729, 1730, 1732, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1745, 1746, 1747, 1748, 1751, 1753, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1766, 1767, 1768, 1769, 1772, 1774, 1776, 1777, 1778, 1779, 1781, 1782, 1783, 1784, 1787, 1789, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1812, 1813, 1814, 1818, 1819, 1822, 1823, 1826, 1827, 1828, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1841, 1842, 1843, 1845, 1846, 1847, 1851, 1852, 1853, 1855, 1856, 1857, 1858, 1860, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1871, 1872, 1873, 1874, 1877, 1879, 1881, 1882, 1883, 1884, 1886, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1937, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1955, 1956, 1957, 1960, 1961, 1962, 1963, 1966, 1967, 1971, 1972, 1973, 1974, 1976, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1986, 1987, 1988, 1989, 1991, 1992, 1993, 1994, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2013, 2014, 2015, 2016, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2051, 2052, 2053, 2055, 2056, 2057, 2058, 2061, 2063, 2065, 2066, 2067, 2068, 2069, 2071, 2072, 2073, 2074, 2076, 2077, 2078, 2079, 2081, 2082, 2083, 2085, 2086, 2087, 2089, 2090, 2091, 2093, 2094, 2095, 2097, 2098, 2099, 2100, 2102, 2103, 2104, 2108, 2109, 2110, 2112, 2113, 2114, 2115, 2117, 2118, 2119, 2120, 2122, 2123, 2124, 2125, 2126, 2129, 2132, 2133, 2134, 2136, 2140, 2141, 2151, 2152, 2155, 2156, 2159, 2161, 2169, 2172, 2183, 2184, 2186, 2187, 2193, 2197, 2205, 2207, 2217, 2218, 2219, 2220, 2231, 2233, 2238, 2239, 2249, 2252, 2255, 2257, 2276, 2278, 2280, 2312, 2318, 2322, 2332, 2334], "revers": [9, 13, 16, 17, 31, 32, 33, 40, 41, 56, 57, 62, 67, 68, 79, 88, 89, 104, 105, 114, 115, 116, 118, 119, 126, 130, 137, 149, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1190, 1199, 1200, 1414, 1445, 1446, 1447, 1711, 1832, 1833, 1834, 1835, 1836, 1868, 1889, 1892, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078], "familiar": [9, 10, 120], "yourself": [9, 11, 126, 128, 130, 148], "hypothesi": [9, 11, 111, 115, 124, 2230, 2233, 2249, 2252, 2253, 2254, 2276, 2281, 2282], "pass": [9, 11, 31, 60, 61, 62, 65, 66, 67, 68, 79, 108, 109, 111, 112, 113, 114, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 149, 150, 151, 163, 305, 334, 392, 410, 411, 414, 435, 445, 481, 484, 819, 820, 821, 822, 823, 933, 955, 994, 997, 1190, 1198, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1306, 1307, 1349, 1353, 1354, 1414, 1515, 1518, 1949, 1950, 1951, 2132, 2146, 2147, 2148, 2173, 2174, 2177, 2181, 2183, 2184, 2186, 2187, 2193, 2197, 2217, 2219, 2276, 2278, 2280, 2312, 2318], "fail": [9, 10, 11, 111, 115, 116, 118, 121, 126, 127, 2186, 2187, 2193], "els": [9, 11, 32, 33, 48, 49, 79, 96, 97, 111, 113, 116, 120, 123, 125, 126, 127, 128, 129, 130, 132, 134, 136, 137, 149, 305, 335, 336, 338, 339, 340, 342, 343, 824, 827, 870, 871, 933, 958, 979, 982, 1306, 1308, 1312, 1314, 1315, 1316, 1414, 1427, 1430, 1445, 1446, 1447, 1463, 1464, 1465, 1953, 1964, 1967, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2135, 2186, 2187, 2193], "cover": [9, 111, 112, 118, 119, 123, 124, 128, 130, 131], "lambda": [9, 120, 127, 132, 135, 169, 170, 176, 1414, 1445, 1447, 1609, 1620, 1625, 1645, 1647, 1701, 1704, 1953, 1961, 1962], "direct": [9, 31, 79, 112, 126, 130, 136, 137, 148, 896, 897, 898, 899, 900, 933, 940, 953, 957, 962, 999, 1002, 1004, 1007, 1154, 1155, 1157, 1190, 1199, 1200, 1209, 1276, 1277, 1279, 1322, 1325, 1403, 1405, 1407, 2052, 2063, 2066, 2130, 2134, 2135, 2138], "bind": [9, 114, 843, 1044, 1045, 2133, 2134], "defin": [9, 10, 23, 24, 31, 32, 33, 40, 41, 71, 72, 79, 80, 81, 88, 89, 112, 115, 116, 119, 122, 126, 127, 128, 129, 134, 136, 149, 219, 274, 275, 276, 277, 278, 445, 706, 709, 769, 770, 870, 872, 874, 875, 876, 877, 933, 955, 1046, 1048, 1113, 1115, 1117, 1119, 1178, 1179, 1180, 1181, 1182, 1190, 1208, 1209, 1251, 1254, 1285, 1288, 1322, 1323, 1324, 1325, 1326, 1375, 1378, 1379, 1382, 1414, 1505, 1506, 1508, 1509, 1510, 1511, 1513, 1514, 1711, 1717, 1718, 1719, 1720, 1721, 1738, 1741, 1743, 1746, 1804, 1807, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2100, 2103, 2125, 2131, 2132, 2133, 2134, 2135, 2138, 2140, 2141], "def": [9, 10, 31, 79, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 784, 785, 786, 787, 788, 933, 935, 1414, 1432, 1953, 1960, 2126], "special": [9, 13, 16, 17, 56, 57, 62, 67, 68, 88, 89, 111, 112, 115, 118, 119, 120, 122, 125, 127, 129, 130, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 516, 519, 521, 524, 526, 529, 531, 534, 556, 559, 561, 564, 566, 569, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 646, 649, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 746, 750, 751, 755, 756, 760, 933, 960, 1334, 1337, 1789, 1793, 2068, 2083, 2086, 2087, 2088, 2090, 2091, 2094, 2100, 2103, 2104, 2108, 2109, 2111, 2113, 2134, 2135, 2136, 2151, 2159, 2230, 2232, 2233, 2234, 2238, 2239, 2241, 2244, 2245, 2246, 2247, 2249, 2252, 2253, 2254, 2255, 2257, 2258, 2260, 2261, 2262, 2263, 2276, 2281, 2282], "sure": [9, 10, 11, 111, 115, 126, 127, 128, 130], "aforement": 9, "correct": [9, 11, 56, 57, 104, 105, 110, 114, 115, 116, 117, 121, 122, 123, 127, 128, 305, 403, 1868, 1869, 1872, 2068, 2100, 2101, 2102, 2103, 2109, 2110, 2111, 2112, 2113, 2126, 2197, 2216, 2217, 2218, 2219], "categori": [9, 111, 112, 114, 116, 126, 129, 131, 2126], "parent": [9, 115, 134, 1609, 1638, 1646, 2149, 2150], "arraywithelementwis": [9, 13, 16, 17, 29, 112, 134], "containerwithmanipul": [9, 62, 67, 68, 92], "hint": [9, 23, 24, 29, 30, 40, 41, 77, 78, 112, 119, 122, 123, 125, 126, 129, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 259, 260, 262, 264, 267, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 367, 370, 381, 384, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 804, 807, 809, 812, 814, 817, 849, 852, 870, 871, 881, 884, 896, 899, 906, 907, 918, 921, 923, 926, 933, 937, 940, 958, 979, 982, 1131, 1132, 1133, 1134, 1136, 1138, 1139, 1145, 1146, 1147, 1164, 1167, 1168, 1190, 1208, 1219, 1222, 1224, 1227, 1229, 1232, 1285, 1288, 1312, 1315, 1414, 1473, 1476, 1490, 1493, 1499, 1502, 1505, 1508, 1591, 1595, 1609, 1639, 1643, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1681, 1684, 1686, 1689, 1691, 1694, 1701, 1704, 1706, 1709, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1846, 1847, 1851, 1868, 1869, 1872, 1874, 1877, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1897, 1899, 1902, 1904, 1907, 1909, 1912, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 1973, 1974, 1977, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123], "add": [9, 10, 11, 13, 16, 17, 29, 30, 46, 47, 60, 61, 62, 65, 66, 67, 68, 77, 78, 94, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 122, 123, 125, 126, 128, 129, 130, 132, 134, 149, 150, 156, 157, 445, 465, 1414, 1540, 1596, 1609, 1638, 1646, 1973, 1974, 1975, 1976, 1977, 2126, 2130, 2132, 2134, 2175, 2176, 2197, 2218, 2276, 2281], "thorough": [9, 119, 122, 128], "ensur": [9, 10, 11, 32, 33, 112, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 1414, 1515, 1516, 1518, 2134, 2186, 2187], "produc": [9, 31, 38, 39, 79, 86, 87, 116, 127, 128, 129, 769, 771, 870, 873, 1050, 1051, 1052, 1053, 1296, 1297, 1299, 1647, 1706, 1707, 1708, 1709, 1710, 2135, 2137], "comment": [9, 10, 11, 111, 116, 121, 126], "add_reformatting_checklist_": 9, "category_nam": [9, 116, 117, 119, 122, 123], "pr": [9, 11, 111, 126, 127, 128], "belong": [9, 65, 66, 111, 136], "shown": [9, 11, 60, 61, 65, 66, 108, 109, 111, 115, 116, 118, 120, 121, 122, 126, 127, 128, 129, 132, 134, 149, 445, 601, 604, 849, 852, 933, 937, 958, 1312, 1315, 1414, 1497], "trigger": [9, 2173, 2174], "autom": [9, 115, 128, 2125, 2126, 2136], "bot": 9, "proper": [9, 126], "markdown": 9, "text": [9, 11, 118, 119], "might": [9, 10, 11, 32, 33, 115, 116, 118, 120, 121, 124, 125, 126, 128, 129, 130, 132, 134, 135, 305, 392, 1414, 1445, 1446, 1447, 2125], "moment": [9, 34, 35, 82, 83, 113, 149, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 2177, 2178, 2179], "patient": [9, 10], "modifi": [9, 10, 11, 31, 65, 66, 79, 111, 113, 116, 117, 119, 121, 123, 127, 128, 129, 132, 1074, 1075, 1076, 1077, 1078, 1190, 1204, 1208, 1261, 1262, 1263, 1264, 1285, 1288, 1349, 1354], "item": [9, 18, 22, 32, 33, 60, 61, 65, 66, 79, 80, 81, 114, 116, 132, 134, 135, 137, 305, 338, 410, 416, 896, 898, 900, 989, 991, 993, 1032, 1034, 1036, 1173, 1175, 1177, 1251, 1253, 1255, 1329, 1331, 1333, 1414, 1443, 1473, 1474, 1475, 1476, 1477, 1496, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1609, 1644, 1953, 1959, 1960, 1961, 1962, 1966, 1971, 1972, 2126, 2173, 2174], "symbol": [9, 10, 2134, 2135], "emoji": 9, "within": [9, 11, 18, 21, 22, 31, 79, 112, 115, 126, 127, 128, 136, 149, 219, 221, 222, 779, 780, 782, 789, 791, 793, 794, 796, 798, 799, 801, 803, 933, 934, 951, 1103, 1106, 1978, 1994, 1997, 2130, 2131, 2135], "legend": 9, "mark": [9, 11, 111, 128, 132, 2186, 2187, 2193], "review": [9, 11, 115, 118, 126, 129], "checkbox": [9, 10], "proce": [9, 10], "elabor": 9, "struggl": 9, "assigne": 9, "author": [9, 11, 2126, 2132, 2136], "later": [9, 65, 66, 128, 1414, 1432, 2134], "status": 9, "manual": [9, 10, 11, 126, 128, 136, 1953, 1954, 1964, 1965], "refrain": 9, "transpil": [9, 120, 126, 131, 132, 133, 2125, 2126, 2134, 2140, 2141], "locat": [9, 11, 113, 117, 126, 127, 128, 129, 219, 274, 277, 1978, 1979, 1982, 2052, 2058, 2061, 2132], "subsect": [9, 11, 111, 115], "verifi": [9, 116, 117, 126, 128, 129], "miss": [9, 10, 112, 114, 115, 118, 121, 128, 2177, 2181], "simpler": [9, 11, 126, 2135, 2141], "titl": [9, 11, 126, 2126], "label": [9, 11, 42, 43, 79, 90, 91, 111, 115, 126, 131, 132, 133, 137, 834, 835, 836, 837, 1183, 1184, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 2134], "suggest": [9, 10, 11, 116, 126, 128, 129], "simpli": [9, 11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 130, 132, 136, 137, 149, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 224, 225, 231, 232, 235, 236, 243, 244, 249, 250, 251, 253, 259, 260, 261, 263, 264, 265, 269, 270, 274, 275, 276, 278, 282, 283, 284, 286, 287, 289, 292, 294, 300, 301, 302, 303, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 332, 360, 361, 362, 364, 372, 373, 375, 376, 377, 378, 380, 393, 394, 395, 397, 417, 418, 419, 421, 436, 437, 438, 439, 445, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 824, 825, 826, 828, 834, 835, 837, 838, 839, 840, 842, 844, 845, 847, 849, 850, 851, 853, 855, 856, 857, 859, 860, 861, 862, 864, 865, 866, 867, 869, 881, 882, 883, 885, 891, 892, 893, 896, 897, 898, 900, 901, 902, 903, 905, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 922, 923, 924, 925, 927, 928, 929, 930, 932, 969, 970, 971, 973, 979, 980, 981, 983, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1036, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1093, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1128, 1130, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1182, 1185, 1187, 1189, 1214, 1215, 1216, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1276, 1277, 1278, 1280, 1285, 1286, 1287, 1289, 1291, 1293, 1295, 1301, 1302, 1303, 1305, 1312, 1313, 1314, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1326, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1349, 1354, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1445, 1446, 1448, 1449, 1450, 1452, 1453, 1454, 1455, 1458, 1459, 1460, 1463, 1464, 1466, 1467, 1468, 1470, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1490, 1491, 1492, 1494, 1499, 1500, 1505, 1506, 1507, 1509, 1510, 1514, 1515, 1516, 1517, 1519, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1538, 1544, 1545, 1546, 1548, 1549, 1551, 1553, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1603, 1604, 1605, 1606, 1611, 1612, 1613, 1615, 1616, 1621, 1622, 1623, 1626, 1627, 1630, 1631, 1634, 1635, 1639, 1640, 1641, 1642, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1681, 1682, 1683, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1727, 1728, 1729, 1732, 1733, 1734, 1736, 1743, 1744, 1745, 1747, 1753, 1754, 1755, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1768, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1803, 1809, 1810, 1811, 1812, 1832, 1833, 1842, 1843, 1845, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1974, 1975, 1976, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1998, 2000, 2001, 2002, 2004, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2025, 2026, 2027, 2028, 2029, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2062, 2063, 2064, 2065, 2067, 2069, 2070, 2071, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2083, 2084, 2085, 2087, 2088, 2089, 2091, 2093, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2109, 2110, 2111, 2112, 2115, 2116, 2117, 2119, 2120, 2121, 2122, 2124, 2125, 2135, 2140], "leav": [9, 18, 21, 22, 62, 67, 68, 69, 70, 73, 74, 77, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 104, 105, 114, 116, 118, 119, 122, 123, 125, 126, 128, 135, 136, 349, 351, 353, 360, 362, 364, 541, 543, 994, 996, 998, 1089, 1091, 1093, 1126, 1128, 1130, 1178, 1180, 1182, 1185, 1187, 1189, 1466, 1468, 1470, 1581, 1582, 1674, 1676, 1678, 1706, 1708, 1710, 1732, 1734, 1736, 1809, 1810, 1812, 1868, 1879, 1881, 1883, 1899, 1901, 1924, 1926, 1927, 1928, 1934, 1935, 1937, 1939, 1940, 1942, 1953, 1954, 1955, 1964, 1965, 1966, 1967, 2069, 2071, 2073, 2074, 2076, 2078, 2197, 2199], "assess": [9, 130], "appropri": [9, 11, 50, 51, 60, 61, 98, 99, 108, 109, 124, 128, 445, 461, 464, 779, 782, 933, 934, 951, 1103, 1106, 2005, 2006, 2007, 2008, 2009, 2010], "wait": [9, 11, 62, 65, 66, 67, 68, 115, 126, 1414, 1559], "optioncomposit": [9, 110, 112, 113, 114, 116, 125, 127, 128, 130, 132, 136, 137, 149, 933, 961, 1121, 1124, 1164, 1170, 1372, 1374, 2125, 2135], "temporari": [9, 116, 1414, 1498, 1562], "merg": [9, 11, 111, 115, 126, 2134], "close": [9, 10, 11, 40, 41, 119, 126, 130, 445, 561, 564, 626, 629, 711, 714, 1711, 1809, 1811, 1813, 1868, 1884, 1887, 2134], "normal": [9, 31, 46, 47, 48, 49, 79, 94, 95, 96, 97, 126, 130, 135, 881, 882, 883, 884, 885, 887, 889, 918, 921, 933, 960, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1093, 1126, 1127, 1128, 1129, 1130, 1131, 1136, 1137, 1141, 1142, 1164, 1167, 1185, 1186, 1187, 1188, 1189, 1281, 1282, 1283, 1284, 1334, 1337, 1868, 1874, 1877, 1924, 1927, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1983, 1989, 1990, 1991, 1992, 1993, 2132, 2151, 2156, 2175, 2176], "altern": [9, 10, 31, 79, 125, 126, 135, 779, 780, 781, 782, 783, 933, 934, 951, 956, 957, 962, 963, 1069, 1071, 1073, 1103, 1104, 1105, 1106, 1107, 1154, 1155, 1266, 1267, 1268, 1269, 1270, 1276, 1277, 1278, 1279, 1280, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 2137], "composition": [9, 125], "choos": [9, 10, 11, 27, 28, 50, 51, 75, 76, 128, 133, 137, 410, 436, 437, 438, 439, 440, 445, 646, 649, 651, 654, 2005, 2026, 2028, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2100, 2103, 2141], "decid": [9, 10, 65, 66, 116, 130, 1953, 1954, 1955, 1964, 1965, 1966], "addit": [9, 10, 11, 27, 28, 31, 32, 33, 46, 47, 75, 76, 79, 80, 81, 94, 95, 114, 116, 118, 119, 126, 128, 129, 130, 134, 135, 137, 410, 436, 437, 438, 439, 440, 445, 461, 464, 711, 714, 860, 861, 862, 864, 1414, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1608, 1973, 1974, 1975, 1976, 1977, 2134, 2135, 2136, 2140, 2161, 2171], "potenti": [9, 10, 11, 115, 116, 126, 131, 445, 561, 564, 626, 629, 2137], "pend": 9, "show": [9, 10, 11, 115, 118, 125, 126, 128, 148, 149, 1414, 1497, 1555, 1561, 1602, 2126, 2134, 2149, 2150], "helpfulli": [9, 130, 2132], "prevent": [9, 11, 34, 35, 82, 83, 115, 116, 120, 121, 125, 126, 129, 130, 1414, 1432, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1647, 1686, 1689, 2068, 2104, 2108, 2151, 2155, 2177, 2178, 2179], "problemat": [9, 10], "unimpl": 9, "final": [9, 11, 23, 24, 32, 33, 80, 81, 111, 112, 115, 116, 118, 119, 121, 123, 125, 126, 130, 131, 135, 219, 254, 257, 259, 260, 262, 1414, 1466, 1467, 1468, 1469, 1470, 2130, 2140, 2161, 2172], "issue_link": 9, "chosen": [9, 115, 126, 219, 221, 222, 445, 481, 484, 2005, 2026, 2030], "correctli": [9, 10, 11, 31, 40, 41, 50, 51, 79, 88, 89, 98, 99, 112, 114, 116, 118, 120, 121, 122, 125, 127, 128, 130, 136, 149, 865, 866, 867, 868, 869, 933, 939, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1301, 1302, 1303, 1304, 1305, 1349, 1353, 1354, 1355, 1711, 1764, 1765, 1766, 1767, 1768, 2005, 2006, 2007, 2008, 2009, 2010], "alias": [9, 126, 127, 2197, 2216, 2276, 2278], "detect": [9, 10, 29, 30, 65, 66, 77, 78, 113, 114, 115, 121, 128, 135, 136, 445, 591, 592, 593, 594, 595, 1953, 1954, 1965], "alias_nam": 9, "function_nam": [9, 13, 16, 17], "notic": [9, 112, 115, 130], "alia": [9, 126, 213], "alreadi": [9, 10, 11, 31, 65, 66, 79, 113, 114, 116, 122, 126, 130, 149, 445, 521, 524, 566, 569, 711, 714, 756, 760, 794, 797, 799, 802, 838, 839, 1190, 1192, 1193, 1208, 1261, 1262, 1263, 1264, 1285, 1288, 1349, 1354, 1711, 1748, 1751, 1784, 1787, 2126, 2134, 2136, 2141], "push": [9, 11, 111, 121, 127, 128, 2140], "liner": 9, "default": [9, 10, 11, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 122, 123, 124, 126, 128, 130, 132, 136, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 330, 332, 335, 336, 338, 339, 340, 342, 343, 344, 346, 354, 355, 357, 358, 360, 362, 364, 365, 372, 373, 375, 376, 378, 380, 391, 393, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 416, 417, 418, 419, 420, 423, 424, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 770, 771, 772, 773, 774, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 912, 923, 924, 925, 926, 927, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1063, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1197, 1198, 1199, 1200, 1201, 1204, 1205, 1208, 1209, 1210, 1211, 1214, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1534, 1535, 1536, 1537, 1538, 1540, 1541, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1559, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1582, 1586, 1587, 1589, 1590, 1591, 1592, 1594, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1960, 1961, 1962, 1964, 1965, 1966, 1967, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2066, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2134, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2197, 2216, 2217, 2218, 2219, 2230, 2234, 2238, 2239, 2244, 2246, 2260, 2261, 2262, 2263, 2276, 2279, 2280, 2281, 2312, 2320], "meanwhil": [9, 115], "reselect": 9, "too": [9, 10, 11, 111, 116, 120, 121, 149, 445, 461, 464, 2151, 2155], "placement": 9, "categoris": [9, 111, 126], "faithfulli": 9, "descript": [9, 23, 24, 29, 30, 40, 41, 77, 78, 88, 89, 119, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 259, 260, 262, 264, 267, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 367, 370, 381, 384, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 804, 807, 809, 812, 814, 817, 849, 852, 870, 871, 881, 884, 896, 899, 906, 907, 918, 921, 923, 926, 933, 937, 940, 958, 979, 982, 1131, 1132, 1133, 1134, 1136, 1138, 1139, 1145, 1146, 1147, 1164, 1167, 1168, 1190, 1208, 1219, 1222, 1224, 1227, 1229, 1232, 1285, 1288, 1312, 1315, 1414, 1473, 1476, 1490, 1493, 1499, 1502, 1505, 1508, 1591, 1595, 1609, 1639, 1643, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1681, 1684, 1686, 1689, 1691, 1694, 1701, 1704, 1706, 1709, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1868, 1869, 1872, 1874, 1877, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1897, 1899, 1902, 1904, 1907, 1909, 1912, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 1973, 1974, 1977, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123], "inner": [9, 40, 41, 71, 72, 88, 89, 125, 219, 274, 276, 277, 278, 1711, 1737, 1738, 1741, 1759, 1762, 1949, 1950, 1951, 1952], "fall": [9, 11, 116, 131, 2126, 2173, 2174, 2177, 2181], "under": [9, 10, 11, 110, 111, 114, 118, 119, 123, 126, 127, 128, 130, 131, 132, 135, 137, 149, 2134, 2137, 2141], "linalg": [9, 125, 127, 1711, 1743, 1744, 1799, 1802, 2126], "match": [9, 25, 26, 31, 65, 66, 73, 74, 79, 112, 114, 118, 127, 305, 313, 314, 315, 316, 317, 445, 706, 709, 855, 858, 896, 897, 898, 899, 900, 933, 938, 940, 1190, 1210, 1357, 1361, 1414, 1540, 2135, 2140, 2186, 2187, 2193], "creation_routin": [9, 127], "fft": [9, 31, 79, 887, 889, 988, 1131, 1137, 2134], "indexing_routin": 9, "logic": [9, 58, 59, 106, 107, 112, 115, 116, 117, 120, 124, 126, 128, 130, 134, 410, 427, 445, 641, 644, 646, 649, 651, 654, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126], "ma": 9, "manipulation_routin": 9, "mathematical_funct": [9, 126], "matrix": [9, 13, 16, 17, 23, 24, 31, 32, 33, 38, 39, 40, 41, 79, 80, 81, 86, 87, 88, 89, 116, 126, 219, 264, 265, 267, 287, 291, 292, 296, 870, 871, 876, 877, 923, 924, 925, 926, 927, 979, 982, 1164, 1168, 1171, 1172, 1214, 1217, 1250, 1375, 1378, 1379, 1382, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1434, 1435, 1436, 1437, 1647, 1691, 1692, 1693, 1694, 1695, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1725, 1732, 1735, 1737, 1738, 1741, 1743, 1746, 1753, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1789, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1847, 1851, 2132, 2134, 2151, 2152, 2155, 2156, 2159, 2161, 2171, 2249, 2256], "ndarrai": [9, 23, 24, 31, 32, 33, 79, 112, 116, 117, 122, 125, 126, 127, 129, 130, 132, 134, 137, 219, 224, 225, 226, 269, 272, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1349, 1353, 1354, 1414, 1586, 1588, 1590, 2125, 2312, 2322], "random": [9, 31, 38, 39, 49, 65, 66, 79, 86, 87, 97, 117, 127, 128, 129, 137, 148, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 901, 902, 903, 904, 905, 1029, 1030, 1031, 1291, 1292, 1293, 1294, 1295, 1307, 1308, 1309, 1310, 1311, 1647, 1686, 1687, 1688, 1689, 1690, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2126, 2134, 2230, 2239, 2241, 2249, 2257], "sorting_searching_count": 9, "statist": [9, 31, 57, 79, 105, 108, 109, 116, 128, 129, 1089, 1090, 1091, 1092, 1093, 1190, 1208, 1281, 1282, 1285, 1288, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 2069, 2072, 2074, 2077, 2079, 2082, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2134], "ufunc": [9, 126], "hierarchi": [9, 65, 66, 135, 2130, 2140], "__init__": [9, 13, 16, 17, 62, 65, 66, 67, 68, 112, 113, 116, 120, 126, 129, 132, 134, 135, 136, 137, 219, 220, 305, 306, 307, 308, 309, 310, 410, 411, 412, 768, 1342, 1344, 1609, 1610, 2126, 2128, 2129, 2143, 2144, 2145, 2151, 2152, 2153, 2154, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2221, 2222, 2223, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2308, 2309, 2310, 2312, 2313, 2318, 2320], "py": [9, 10, 11, 111, 113, 115, 116, 117, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 134, 136, 137, 2312, 2318, 2320], "decomposit": [9, 40, 41, 88, 89, 1711, 1712, 1715, 1758, 1794, 1795, 1796, 1797, 1798, 1809, 1810, 1811, 1812, 1813, 2141], "matrix_and_vector_product": 9, "matrix_eigenvalu": 9, "norms_and_other_numb": 9, "solving_equations_and_inverting_matric": 9, "product": [9, 29, 30, 38, 39, 40, 41, 56, 57, 77, 78, 79, 86, 87, 88, 89, 104, 105, 132, 445, 671, 672, 673, 674, 1121, 1124, 1125, 1164, 1170, 1172, 1250, 1647, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1717, 1718, 1719, 1720, 1721, 1748, 1751, 1759, 1762, 1784, 1787, 1837, 1841, 2068, 2069, 2070, 2071, 2072, 2074, 2077, 2079, 2082, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2134, 2136, 2161, 2172], "seem": [9, 10, 130, 136, 137, 149, 2134], "np": [9, 23, 24, 31, 77, 78, 79, 80, 81, 112, 116, 117, 120, 122, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 219, 231, 232, 233, 445, 601, 603, 604, 774, 775, 776, 777, 778, 879, 880, 933, 950, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1101, 1131, 1141, 1142, 1164, 1165, 1414, 1565, 1568, 1569, 1953, 1960, 2125, 2126, 2197, 2218, 2312, 2318], "func": [9, 65, 66, 111, 112, 118, 120, 125, 151, 167, 410, 435, 843, 1044, 1045, 1414, 1432, 1608, 1609, 1619, 1620, 1625, 1645, 1953, 1967, 2197, 2210], "gleam": 9, "yet": [9, 10, 149], "uncom": 9, "test_numpy_inn": 9, "mirror": [9, 1190, 1208, 1285, 1288, 2134], "correspond": [9, 11, 25, 26, 29, 30, 31, 32, 33, 38, 39, 44, 45, 56, 57, 62, 65, 66, 67, 68, 73, 74, 77, 78, 79, 86, 87, 92, 93, 104, 105, 112, 113, 114, 115, 116, 118, 119, 122, 123, 124, 126, 128, 130, 132, 169, 170, 176, 305, 318, 319, 320, 321, 322, 349, 351, 353, 360, 362, 364, 445, 481, 482, 483, 484, 485, 691, 692, 694, 774, 778, 887, 889, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 932, 933, 942, 943, 961, 989, 990, 992, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1012, 1121, 1125, 1131, 1137, 1164, 1167, 1168, 1190, 1199, 1200, 1372, 1373, 1374, 1414, 1565, 1566, 1608, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1662, 1664, 1665, 1667, 1669, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1684, 1711, 1717, 1720, 1737, 1738, 1741, 1764, 1767, 1799, 1802, 1804, 1807, 1868, 1909, 1910, 1911, 1912, 1913, 1978, 1979, 1982, 2005, 2006, 2009, 2011, 2014, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2134, 2197, 2217, 2219, 2230, 2238], "ivy_test": [9, 10, 11, 111, 115, 127, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283], "test_ivi": [9, 10, 11, 115, 127, 128, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283], "test_frontend": [9, 115, 127], "unsur": [9, 128], "put": [9, 128, 149, 2140], "explor": [9, 10, 11, 116, 130, 133, 137, 148, 2134, 2137], "outer": [9, 40, 41, 88, 89, 1711, 1949, 1950, 1951, 1952], "confirm": 9, "ve": [9, 10, 11, 48, 49, 96, 97, 128, 130, 131, 134, 1978, 1979, 1980, 1981, 1982, 1983, 2125, 2126], "empti": [9, 10, 13, 16, 17, 32, 33, 62, 65, 66, 67, 68, 80, 81, 112, 116, 117, 219, 221, 222, 1190, 1208, 1285, 1288, 1414, 1433, 1436, 1549, 1550, 1551, 1552, 1553, 1609, 1638, 1644, 1646, 1711, 1842, 1846, 1953, 1968, 2068, 2104, 2108, 2114, 2115, 2118, 2120, 2123], "along": [9, 14, 15, 23, 24, 31, 32, 33, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 71, 72, 77, 78, 79, 80, 81, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 118, 125, 129, 130, 132, 182, 183, 184, 186, 202, 203, 204, 206, 219, 254, 257, 259, 260, 261, 262, 263, 410, 435, 865, 866, 867, 868, 869, 881, 884, 896, 897, 898, 899, 900, 908, 909, 911, 913, 916, 933, 939, 940, 956, 961, 984, 985, 986, 987, 988, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1079, 1080, 1081, 1082, 1083, 1089, 1090, 1092, 1126, 1127, 1128, 1129, 1130, 1131, 1136, 1141, 1142, 1185, 1186, 1187, 1188, 1189, 1190, 1195, 1196, 1199, 1200, 1208, 1211, 1234, 1235, 1236, 1237, 1238, 1245, 1248, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1281, 1282, 1283, 1284, 1285, 1288, 1301, 1302, 1303, 1304, 1305, 1339, 1341, 1349, 1352, 1353, 1354, 1355, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1414, 1448, 1451, 1473, 1474, 1475, 1476, 1477, 1711, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1852, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1877, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1901, 1902, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1924, 1925, 1926, 1927, 1928, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1943, 1949, 1950, 1951, 1952, 1978, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2134, 2197, 2210], "backend_nam": [9, 113, 116, 117, 119, 122, 123, 124], "relevant_submodul": 9, "sometim": [9, 10, 11, 111, 116, 126, 128, 129, 130], "behav": [9, 111, 120, 125, 126, 127, 134, 1711, 1737, 2135], "helper": [9, 116, 120, 135, 305, 333, 2125, 2150, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2245, 2246, 2247, 2248, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2277, 2278, 2279, 2280, 2281, 2282, 2283], "recreat": [9, 111], "defer": [9, 112, 114, 116, 117, 123, 124, 125, 126, 128, 2140], "clearer": [9, 120, 127, 135], "mind": [9, 112, 114, 128], "posit": [9, 11, 18, 19, 20, 29, 30, 31, 32, 33, 40, 41, 44, 45, 77, 78, 79, 80, 81, 88, 89, 92, 93, 111, 114, 124, 126, 128, 129, 135, 148, 213, 219, 240, 241, 305, 349, 352, 445, 446, 449, 586, 589, 591, 592, 593, 594, 595, 690, 701, 704, 706, 709, 779, 782, 834, 835, 836, 837, 855, 856, 857, 858, 859, 870, 871, 876, 877, 891, 894, 933, 934, 938, 951, 955, 979, 980, 981, 982, 1103, 1106, 1164, 1166, 1183, 1184, 1190, 1205, 1240, 1241, 1242, 1243, 1244, 1251, 1252, 1253, 1254, 1255, 1375, 1378, 1379, 1382, 1414, 1432, 1466, 1467, 1468, 1469, 1470, 1608, 1711, 1712, 1713, 1714, 1715, 1716, 1727, 1730, 1827, 1828, 1829, 1830, 1868, 1884, 1885, 1886, 1887, 1888, 1909, 1910, 1911, 1912, 1913, 1978, 1999, 2005, 2021, 2024, 2114, 2115, 2118, 2120, 2123, 2136, 2146, 2147, 2148, 2197, 2217, 2219, 2230, 2233, 2276, 2278, 2280, 2281, 2282], "keyword": [9, 18, 19, 20, 23, 24, 62, 65, 66, 67, 68, 112, 114, 116, 117, 124, 125, 126, 127, 128, 129, 135, 150, 163, 219, 264, 265, 267, 933, 955, 1190, 1208, 1251, 1254, 1285, 1288, 1414, 1421, 1432, 1540, 1596, 1953, 1960, 2068, 2104, 2108, 2173, 2174, 2186, 2190, 2191, 2192, 2197, 2202, 2203, 2216, 2217, 2218, 2219], "paramet": [9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 119, 120, 122, 124, 126, 127, 128, 129, 132, 134, 135, 148, 150, 163, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 386, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 770, 771, 772, 773, 774, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 916, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1486, 1490, 1491, 1492, 1493, 1494, 1496, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1540, 1541, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1556, 1557, 1559, 1562, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2066, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2135, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2186, 2187, 2189, 2190, 2191, 2192, 2193, 2197, 2202, 2203, 2216, 2217, 2218, 2219, 2230, 2232, 2233, 2234, 2238, 2239, 2240, 2241, 2244, 2245, 2246, 2247, 2249, 2250, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2260, 2261, 2262, 2263, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2312, 2318, 2319, 2320, 2323, 2332, 2334], "strategi": [9, 124, 127, 2230, 2232, 2233, 2234, 2238, 2239, 2240, 2241, 2244, 2245, 2249, 2252, 2253, 2254, 2255, 2257, 2258, 2276, 2277, 2278, 2279, 2280, 2281, 2282], "draw": [9, 48, 49, 96, 97, 111, 127, 128, 819, 822, 901, 904, 1291, 1294, 1306, 1307, 1309, 1311, 1978, 1979, 1980, 1981, 1982, 1983, 1989, 1992, 1994, 1997, 2151, 2153, 2154, 2158, 2230, 2232, 2233, 2234, 2238, 2239, 2240, 2241, 2244, 2245, 2246, 2247, 2249, 2252, 2253, 2254, 2255, 2257, 2258, 2260, 2261, 2262, 2263, 2276, 2281, 2282], "realli": [10, 114, 149, 2139, 2140], "button": [10, 11], "top": [10, 11, 31, 44, 45, 79, 116, 126, 128, 135, 136, 1190, 1211, 1367, 1368, 1369, 1370, 1371, 1414, 1448, 1451, 1874, 1875, 2134, 2138, 2149, 2150], "account": [10, 31, 44, 45, 79, 92, 93, 115, 119, 126, 994, 995, 996, 997, 998, 1190, 1198, 1868, 1904, 1905, 1906, 1907, 1908, 2151, 2156], "your_usernam": 10, "gh": 10, "your_fold": 10, "upstream": [10, 11, 111, 843, 1044, 1045], "sync": [10, 111], "cours": [10, 11, 111, 112, 118, 126, 129, 130, 135, 149, 2139, 2140], "whatev": [10, 114, 149], "elig": 10, "student": 10, "licenc": 10, "remind": 10, "licens": [10, 2137], "expir": 10, "abl": [10, 11, 65, 66, 111, 116, 123, 125, 126, 130, 132, 137, 2137, 2140], "profession": 10, "trial": 10, "jetbrain": 10, "valid": [10, 31, 38, 39, 58, 59, 79, 86, 87, 106, 107, 113, 116, 118, 127, 128, 305, 334, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1131, 1132, 1133, 1134, 1145, 1146, 1147, 1164, 1172, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1250, 1414, 1526, 1529, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1868, 1884, 1887, 1924, 1927, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2135, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2230, 2233, 2239, 2244, 2247], "bui": [10, 2140], "paid": 10, "pace": 10, "align": [10, 11, 31, 65, 66, 79, 126, 132, 134, 891, 892, 893, 894, 895, 1095, 1096, 1097, 1098, 1099, 1131, 1144, 1164, 1166, 2125, 2140], "stabl": [10, 32, 33, 54, 55, 80, 81, 102, 103, 113, 116, 126, 132, 149, 445, 711, 714, 870, 876, 877, 1159, 1162, 1339, 1340, 1375, 1378, 1379, 1382, 1414, 1487, 1488, 1556, 1557, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2064, 2065, 2066, 2067, 2249, 2256], "mayb": [10, 18, 21, 22, 115, 132, 134], "person": [10, 11], "experi": [10, 128, 133, 135, 149], "avoid": [10, 11, 31, 79, 113, 114, 115, 116, 121, 124, 126, 128, 129, 445, 561, 564, 626, 629, 799, 802, 1089, 1090, 1091, 1092, 1093, 1190, 1193, 1281, 1282, 1414, 1432, 2134, 2249, 2256, 2260, 2261], "abil": [10, 130, 133, 149, 2134], "certain": [10, 11, 65, 66, 111, 116, 120, 128, 130, 149, 219, 221, 222, 254, 257, 259, 262, 2138], "perhap": [10, 134, 135, 136, 149, 2140], "track": [10, 11, 31, 79, 111, 1089, 1090, 1091, 1092, 1093, 1281, 1282, 1609, 1610, 1953, 1966, 2134, 2149, 2150, 2173, 2174], "click": [10, 11, 115, 119, 133, 2126], "icon": [10, 11], "side": [10, 11, 54, 55, 102, 103, 933, 949, 1069, 1072, 2052, 2058, 2059, 2060, 2061, 2062], "left": [10, 11, 31, 40, 41, 50, 51, 54, 55, 79, 88, 89, 98, 99, 102, 103, 111, 115, 116, 118, 445, 501, 504, 865, 866, 867, 868, 869, 933, 939, 956, 999, 1002, 1094, 1131, 1143, 1190, 1199, 1234, 1235, 1236, 1237, 1238, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1301, 1302, 1303, 1304, 1305, 1349, 1352, 1353, 1354, 1355, 1414, 1448, 1451, 1711, 1737, 1738, 1741, 1764, 1765, 1766, 1767, 1768, 1809, 1810, 1811, 1812, 1813, 1832, 1833, 1834, 1835, 1836, 2005, 2006, 2007, 2008, 2009, 2010, 2052, 2058, 2059, 2060, 2061, 2062], "panel": 10, "drop": [10, 149, 2151, 2159], "down": [10, 31, 79, 120, 128, 1004, 1007, 1095, 1096, 1097, 1098, 1099, 1131, 1144, 1190, 1200, 2125, 2134, 2140, 2149, 2150], "builtin": [10, 134, 136], "virtualenv": 10, "o": [10, 110, 115, 132, 1414, 1540], "tick": [10, 11, 115], "test_array_api": [10, 11, 111, 128], "r": [10, 11, 31, 40, 41, 65, 66, 79, 88, 89, 110, 127, 843, 933, 948, 1039, 1040, 1041, 1042, 1044, 1045, 1609, 1619, 1711, 1794, 1795, 1796, 1797, 1798, 1868, 1939, 1943], "txt": [10, 111, 129], "visual": [10, 126, 149, 2134, 2136, 2139], "mitig": [10, 2140], "conflict": [10, 11, 115, 126, 135], "particular": [10, 11, 111, 113, 115, 116, 118, 124, 125, 126, 128, 129, 130, 445, 446, 449, 646, 649, 2130, 2134, 2140, 2244, 2247], "system": [10, 11, 113, 115, 116, 149, 1711, 1804, 1807, 2132, 2134, 2137, 2139, 2141], "jaxlib": [10, 32, 33, 80, 81, 112, 116, 117, 122, 129, 132, 134, 1414, 1427, 1428, 1429, 1430, 2312, 2322], "wsl": 10, "powershel": 10, "admin": 10, "visit": [10, 11, 115], "deploy": [10, 2133, 2136, 2137, 2140, 2141], "press": [10, 11, 135, 2126], "ok": 10, "debug": [10, 11, 114, 115, 128, 130, 135, 2134], "dialog": 10, "invalid": [10, 58, 59, 106, 107, 116, 121, 1711, 1837, 1841, 1868, 1884, 1887, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2230, 2234], "caus": [10, 11, 111, 113, 114, 115, 116, 118, 125, 127, 128, 149], "earlier": [10, 11], "necessari": [10, 11, 31, 44, 45, 79, 92, 93, 112, 113, 114, 118, 124, 125, 126, 128, 130, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 1190, 1191, 1192, 1868, 1904, 1905, 1906, 1907, 1908], "virtualis": 10, "On": [10, 116, 126, 128, 133, 137], "dropdown": 10, "menu": 10, "server": [10, 11, 2134], "tag": [10, 11], "suitabl": [10, 11, 79, 114, 129, 870, 874, 875, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 2052, 2058, 2061, 2134, 2249, 2256], "navig": [10, 11, 110], "tab": [10, 115, 135, 2126], "m1": 10, "optional_m1_1": 10, "optional_m1_2": 10, "sudo": 10, "apt": 10, "ca": 10, "certif": 10, "curl": 10, "gnupg": 10, "lsb": 10, "mkdir": [10, 115], "p": [10, 11, 31, 32, 33, 40, 41, 79, 80, 81, 88, 89, 110, 219, 264, 267, 933, 941, 969, 972, 1131, 1148, 1185, 1186, 1187, 1188, 1189, 1281, 1284, 1290, 1414, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1711, 1764, 1767, 1842, 1843, 1844, 1845, 1846, 1953, 1962, 2161, 2169], "keyr": 10, "fssl": 10, "download": [10, 128], "gpg": 10, "dearmor": 10, "echo": [10, 115], "deb": 10, "arch": 10, "dpkg": 10, "print": [10, 11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 118, 127, 128, 132, 134, 135, 136, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 231, 233, 240, 241, 248, 249, 250, 251, 252, 253, 254, 257, 259, 262, 264, 267, 274, 275, 276, 277, 278, 279, 280, 282, 285, 297, 299, 300, 304, 305, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 364, 366, 372, 373, 375, 376, 378, 379, 380, 381, 384, 393, 394, 395, 396, 397, 409, 410, 411, 413, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 770, 772, 773, 779, 780, 781, 782, 783, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 834, 835, 836, 837, 844, 845, 846, 847, 849, 852, 853, 870, 871, 876, 877, 881, 884, 906, 923, 924, 925, 926, 927, 933, 934, 937, 958, 960, 964, 967, 979, 980, 981, 982, 983, 1064, 1065, 1066, 1067, 1126, 1128, 1130, 1131, 1132, 1133, 1134, 1136, 1138, 1140, 1145, 1146, 1147, 1164, 1168, 1172, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1189, 1190, 1194, 1203, 1206, 1207, 1208, 1210, 1211, 1213, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1250, 1251, 1253, 1273, 1274, 1285, 1288, 1301, 1303, 1305, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1324, 1326, 1334, 1335, 1336, 1337, 1338, 1357, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1375, 1378, 1379, 1382, 1398, 1399, 1400, 1402, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1486, 1487, 1488, 1490, 1491, 1493, 1495, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1538, 1540, 1543, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1556, 1557, 1559, 1562, 1563, 1565, 1566, 1567, 1568, 1569, 1575, 1577, 1578, 1579, 1581, 1582, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1600, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1732, 1733, 1734, 1735, 1736, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1774, 1776, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1799, 1800, 1801, 1802, 1803, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1842, 1843, 1844, 1845, 1846, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1955, 1957, 1960, 1961, 1962, 1963, 1965, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1982, 1984, 1987, 2000, 2001, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2149, 2150, 2312, 2318, 2320, 2322, 2328], "architectur": [10, 137, 149, 2132, 2133, 2134, 2137, 2138, 2139], "lsb_releas": 10, "tee": 10, "dev": [10, 27, 28, 65, 66, 75, 76, 117, 123, 134, 136, 219, 279, 280, 410, 421, 425, 431], "null": 10, "ce": 10, "cli": 10, "containerd": 10, "io": [10, 115], "compos": [10, 114, 126, 128, 149, 2134, 2141, 2149, 2150], "plugin": 10, "systemctl": 10, "permiss": [10, 115], "post": [10, 46, 47, 94, 95, 137, 1973, 1974, 1975, 1976, 1977], "coupl": [10, 112, 134, 136, 2134], "unit": [10, 31, 63, 64, 79, 111, 116, 126, 127, 128, 149, 169, 171, 173, 174, 175, 177, 179, 180, 181, 182, 184, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 769, 772, 773, 918, 921, 1126, 1127, 1164, 1167, 1317, 1318, 1319, 1320, 1321, 1362, 1363, 1365, 1366, 2135, 2138], "test_ab": [10, 128], "context": [10, 11, 38, 39, 86, 87, 118, 410, 411, 1414, 1541, 1609, 1610, 1647, 1701, 1702, 1703, 1704, 1705, 2161, 2172], "editor": 10, "green": [10, 11, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 2335, 2336], "appear": [10, 11, 111, 126, 130, 999, 1002, 1004, 1007, 1190, 1199, 1200, 1414, 1608], "pytest": [10, 11, 111, 115, 128], "keyboard": 10, "shortcut": [10, 1190, 1208, 1285, 1288], "displai": [10, 114, 120, 128, 135], "screenshot": 10, "henc": [10, 114, 115, 128, 1868, 1884, 1887, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2312, 2328], "ctrl": [10, 11], "shift": [10, 11, 44, 45, 62, 67, 68, 71, 72, 92, 93, 118, 122, 249, 251, 253, 445, 501, 504, 511, 514, 870, 876, 877, 1375, 1378, 1379, 1382, 1868, 1909, 1910, 1911, 1912, 1913], "bottom": [10, 115, 1414, 1448, 1451, 2140], "screen": [10, 65, 66, 135], "elsewher": [10, 31, 79, 219, 240, 241, 870, 871, 979, 980, 981, 982, 983, 2005, 2026, 2030], "test_elementwis": 10, "progress": [10, 11, 137, 1711, 1832, 1836], "bar": 10, "shell": [10, 11], "run_tests_cli": [10, 111], "run_ivy_core_test": 10, "run_ivy_nn_test": 10, "run_ivy_stateful_test": 10, "run_test": [10, 115], "sh": [10, 11, 111, 115], "test_depend": 10, "test_ivy_cor": 10, "test_ivy_nn": 10, "test_ivy_st": 10, "test_": [10, 127], "test_funct": [10, 11, 115, 127, 128, 2197], "test_cor": [10, 11, 127], "wish": [10, 126], "ivy_cor": 10, "ivy_nn": 10, "ivy_st": 10, "torch": [10, 11, 23, 24, 40, 41, 80, 81, 88, 89, 111, 112, 113, 115, 116, 117, 120, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 149, 219, 231, 232, 233, 305, 357, 358, 410, 414, 415, 432, 433, 445, 711, 714, 1414, 1575, 1578, 1579, 1711, 1809, 1810, 1811, 1812, 1813, 2125, 2126, 2140, 2146, 2147, 2197, 2218, 2312, 2320, 2327, 2328], "dure": [10, 27, 28, 34, 35, 56, 57, 65, 66, 75, 76, 82, 83, 104, 105, 114, 116, 117, 120, 123, 124, 125, 126, 127, 128, 130, 149, 410, 436, 437, 438, 439, 440, 906, 907, 1131, 1138, 1139, 1414, 1596, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1647, 1686, 1689, 1711, 1759, 1762, 1949, 1950, 1951, 1952, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2134, 2135, 2140, 2149, 2150, 2173, 2174, 2177, 2178, 2179, 2181], "simplest": [10, 118, 128, 130], "valu": [10, 11, 13, 16, 17, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 130, 132, 134, 149, 169, 207, 209, 210, 211, 219, 221, 222, 240, 241, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 274, 275, 276, 277, 278, 305, 313, 314, 315, 316, 317, 365, 376, 377, 392, 410, 434, 435, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 461, 464, 466, 467, 468, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 485, 521, 524, 541, 542, 543, 545, 546, 549, 551, 554, 556, 558, 560, 561, 563, 565, 566, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 656, 657, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 676, 679, 681, 684, 686, 689, 691, 692, 693, 694, 695, 701, 704, 706, 707, 708, 710, 711, 714, 731, 732, 733, 735, 736, 737, 738, 740, 741, 743, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 768, 769, 771, 773, 779, 782, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829, 830, 831, 832, 833, 849, 850, 851, 852, 853, 865, 866, 867, 868, 869, 870, 871, 876, 877, 887, 889, 891, 894, 896, 897, 898, 899, 900, 923, 924, 925, 926, 927, 933, 934, 936, 937, 939, 940, 942, 948, 951, 953, 955, 957, 958, 960, 961, 962, 963, 979, 980, 981, 982, 989, 992, 1029, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1054, 1055, 1056, 1057, 1058, 1095, 1096, 1097, 1098, 1099, 1103, 1106, 1108, 1109, 1110, 1111, 1112, 1131, 1137, 1144, 1154, 1155, 1157, 1164, 1166, 1168, 1190, 1201, 1206, 1208, 1210, 1211, 1224, 1226, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1271, 1273, 1276, 1277, 1278, 1279, 1280, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1334, 1337, 1342, 1344, 1347, 1349, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1403, 1404, 1405, 1406, 1407, 1408, 1410, 1412, 1414, 1427, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1466, 1467, 1469, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1486, 1488, 1495, 1496, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1519, 1520, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1556, 1557, 1559, 1575, 1576, 1577, 1578, 1579, 1591, 1592, 1594, 1600, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1626, 1627, 1628, 1629, 1638, 1644, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1689, 1696, 1697, 1698, 1699, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1727, 1730, 1764, 1767, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1842, 1843, 1844, 1845, 1846, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1956, 1958, 1959, 1960, 1961, 1962, 1967, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2021, 2022, 2023, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2066, 2068, 2069, 2070, 2072, 2074, 2077, 2083, 2084, 2085, 2086, 2087, 2088, 2090, 2091, 2092, 2093, 2094, 2095, 2098, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2128, 2129, 2134, 2135, 2149, 2150, 2151, 2152, 2153, 2154, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2181, 2186, 2187, 2188, 2193, 2197, 2216, 2217, 2218, 2219, 2230, 2233, 2234, 2238, 2239, 2244, 2246, 2249, 2250, 2255, 2260, 2261, 2262, 2263, 2266, 2271], "return": [10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1556, 1557, 1560, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2128, 2129, 2135, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2155, 2161, 2170, 2171, 2173, 2174, 2177, 2181, 2186, 2187, 2189, 2190, 2191, 2193, 2197, 2199, 2202, 2203, 2205, 2207, 2210, 2216, 2217, 2218, 2219, 2220, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2238, 2239, 2240, 2241, 2244, 2245, 2246, 2247, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2266, 2272, 2273, 2274, 2275, 2276, 2281, 2282, 2283, 2312, 2318, 2319, 2320, 2328, 2332, 2334], "becaus": [10, 11, 31, 112, 113, 114, 116, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 132, 136, 137, 149, 887, 889, 1131, 1137, 2134, 2137, 2140], "header": [10, 11], "summari": [10, 11, 65, 66, 128, 305, 365, 1414, 1443, 1496], "recommend": [10, 11, 113, 445, 646, 649, 651, 654, 706, 709, 2068, 2087, 2090, 2100, 2103], "advanc": [10, 150, 157, 2133], "q": [10, 11, 31, 38, 39, 40, 41, 79, 86, 87, 88, 89, 110, 127, 149, 933, 963, 1301, 1302, 1303, 1304, 1305, 1349, 1355, 1408, 1409, 1410, 1411, 1412, 1647, 1706, 1707, 1708, 1709, 1710, 1711, 1737, 1738, 1741, 1794, 1795, 1796, 1797, 1798, 1953, 1962], "fix": [10, 11, 31, 79, 111, 116, 128, 129, 933, 993], "arrow": 10, "target": [10, 110, 127, 129, 131, 135, 136, 137, 410, 415, 2126, 2130, 2132, 2133, 2134, 2137, 2139, 2140, 2173, 2174, 2308, 2311], "test_stat": 10, "test_submodule_nam": 10, "test_function_nam": 10, "debugg": 10, "studio": 10, "easiest": 10, "effici": [10, 11, 114, 121, 123, 124, 125, 128, 132, 135, 149, 2134, 2136, 2137], "afterward": [10, 135], "background": [10, 2134, 2136], "restart": 10, "corner": [10, 11, 31, 79, 126, 1095, 1096, 1097, 1098, 1099, 1131, 1144], "overlap": [10, 115, 129, 130, 2135], "test_file_path": 10, "test_fn_nam": 10, "long": [10, 11, 115, 116, 118, 120, 132, 1647, 1696, 1699, 2134], "larg": [10, 11, 31, 79, 115, 135, 445, 461, 464, 933, 955, 1251, 1252, 1253, 1254, 1255, 1711, 1799, 1802, 2134], "gb": [10, 410, 441, 444], "engin": [10, 2134, 2136, 2137], "comma": 10, "end": [10, 11, 113, 115, 125, 129, 130, 131, 148, 149, 219, 221, 222, 445, 481, 484, 994, 997, 1190, 1198, 1208, 1285, 1288, 2126, 2132, 2137, 2149, 2150], "entri": [10, 31, 44, 45, 65, 66, 79, 92, 93, 100, 101, 115, 128, 219, 254, 257, 819, 820, 821, 822, 823, 999, 1002, 1004, 1007, 1190, 1199, 1200, 1306, 1307, 1868, 1914, 1915, 1916, 1917, 1918, 1953, 1967, 2032, 2035, 2134], "postcreatecommand": 10, "post_create_command": 10, "poststartcommand": 10, "global": [10, 32, 33, 46, 47, 62, 65, 66, 67, 68, 80, 81, 94, 95, 112, 113, 115, 116, 117, 120, 123, 126, 132, 305, 335, 336, 338, 339, 340, 342, 343, 410, 433, 434, 435, 1414, 1487, 1488, 1495, 1556, 1557, 1559, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1600, 1609, 1638, 1644, 1646, 1973, 1974, 1975, 1976, 1977, 2134, 2175, 2176, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2276, 2277, 2278, 2279, 2280, 2312, 2318, 2320, 2322, 2324, 2325, 2326, 2327, 2328], "safe": [10, 126], "containerworkspacefold": 10, "roughli": [10, 73, 74, 111, 372, 375, 376, 380, 2137], "reopen": 10, "test_fle_path": 10, "enter": [10, 11, 112, 116, 117, 122, 124, 410, 411, 1609, 1638, 1644, 1646], "forward": [10, 31, 79, 113, 119, 128, 129, 130, 137, 148, 149, 887, 889, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1137, 1141, 1142, 2134, 2135, 2146, 2147, 2151, 2156, 2159, 2173, 2174, 2177, 2181], "slash": 10, "regular": [10, 11, 126, 1164, 1172, 1250, 1711, 1758, 2134], "headach": 10, "arm": [10, 11], "featur": [10, 11, 112, 122, 126, 129, 130, 135, 149, 906, 907, 1131, 1138, 1139, 2126, 2134, 2135, 2136, 2140, 2151, 2153, 2154, 2156, 2158, 2159], "vm": [10, 115], "azur": 10, "cloud": [10, 115, 148, 2136], "mean": [10, 11, 31, 32, 33, 38, 39, 44, 45, 48, 49, 56, 57, 65, 66, 79, 80, 81, 86, 87, 92, 93, 96, 97, 104, 105, 108, 109, 110, 111, 113, 114, 116, 117, 118, 123, 125, 126, 128, 129, 130, 132, 134, 135, 136, 137, 148, 149, 410, 435, 824, 827, 865, 866, 867, 868, 869, 891, 894, 933, 939, 994, 995, 996, 997, 998, 1089, 1090, 1091, 1092, 1093, 1164, 1166, 1190, 1198, 1208, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1281, 1282, 1285, 1288, 1306, 1308, 1349, 1353, 1354, 1414, 1453, 1454, 1455, 1456, 1457, 1609, 1620, 1625, 1645, 1647, 1654, 1656, 1657, 1658, 1664, 1665, 1666, 1667, 1668, 1669, 1672, 1674, 1675, 1676, 1677, 1678, 1681, 1682, 1683, 1684, 1685, 1686, 1689, 1711, 1727, 1730, 1868, 1904, 1905, 1906, 1907, 1908, 1949, 1950, 1951, 1952, 1953, 1960, 1978, 1984, 1987, 1989, 1990, 1991, 1992, 1993, 2068, 2125, 2126, 2131, 2134, 2151, 2156, 2230, 2234, 2238, 2239, 2249, 2254, 2260, 2261, 2262, 2263], "longer": [10, 116, 124, 125, 128, 2134], "worri": 10, "agnost": [10, 112, 122, 132, 134, 137, 149, 2126, 2140, 2141], "usual": [10, 111, 126, 128, 130], "favourit": 10, "theme": 10, "unsupport": [10, 121, 126, 305, 357, 358, 410, 424, 1414, 1471, 1472, 2186, 2192, 2221], "old": [10, 65, 66, 113, 125], "slow": 10, "ipad": 10, "cool": [10, 129], "sever": [10, 11, 129, 149, 2132, 2138], "limit": [10, 11, 62, 65, 66, 67, 68, 115, 118, 120, 121, 126, 128, 130, 135, 149, 305, 349, 352, 360, 363, 1414, 1433, 1436, 1438, 1441, 1868, 1869, 1872, 2133, 2134, 2135, 2151, 2153, 2154, 2158, 2230, 2234, 2238, 2239, 2249, 2256, 2260, 2261, 2262, 2263, 2285, 2287], "exact": [10, 11, 63, 64, 65, 66, 111, 118, 132, 171, 173, 175, 2031, 2032, 2036, 2042, 2046, 2249, 2256], "quota": 10, "requisit": 10, "pane": [10, 11, 115], "readi": 10, "begin": [10, 111, 127, 1190, 1208, 1285, 1288, 1953, 1954, 1965, 2149, 2150], "master": [10, 11, 111, 115, 129, 2134], "view": [10, 11, 31, 44, 45, 79, 120, 150, 156, 157, 219, 243, 246, 799, 800, 801, 802, 803, 1190, 1193, 1205, 1209, 1240, 1241, 1243, 1322, 1323, 1324, 1325, 1326, 2134], "box": 10, "upto": [10, 11], "15": [10, 29, 30, 31, 32, 33, 48, 49, 56, 57, 62, 67, 68, 71, 72, 73, 74, 77, 78, 79, 80, 81, 86, 87, 92, 93, 96, 97, 104, 105, 118, 219, 249, 251, 252, 253, 305, 349, 351, 352, 353, 445, 461, 462, 464, 465, 491, 494, 511, 514, 541, 544, 576, 577, 606, 607, 636, 637, 639, 671, 673, 674, 675, 706, 707, 709, 711, 712, 714, 716, 717, 804, 805, 806, 807, 808, 809, 812, 881, 884, 908, 909, 910, 911, 912, 933, 948, 952, 994, 995, 996, 997, 998, 1039, 1040, 1041, 1042, 1059, 1060, 1061, 1062, 1063, 1131, 1132, 1133, 1136, 1147, 1149, 1150, 1151, 1152, 1153, 1190, 1195, 1198, 1202, 1229, 1230, 1232, 1393, 1394, 1396, 1414, 1438, 1441, 1448, 1451, 1453, 1455, 1456, 1466, 1467, 1468, 1469, 1470, 1495, 1505, 1508, 1509, 1510, 1513, 1514, 1559, 1565, 1567, 1568, 1569, 1600, 1647, 1649, 1652, 1691, 1693, 1694, 1695, 1711, 1732, 1735, 1743, 1746, 1753, 1756, 1784, 1787, 1814, 1818, 1819, 1822, 1868, 1909, 1912, 1939, 1940, 1942, 1943, 1978, 1984, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 2005, 2021, 2024, 2031, 2032, 2036, 2068, 2069, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2137, 2197, 2218], "minut": [10, 115], "subsequ": [10, 112, 115, 116, 118, 122, 123, 125, 128, 130, 136, 2135, 2312, 2322], "launch": 10, "12": [10, 13, 16, 17, 25, 26, 29, 30, 31, 32, 33, 38, 39, 48, 49, 56, 57, 62, 67, 68, 73, 74, 77, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 104, 105, 113, 114, 116, 118, 129, 360, 361, 362, 364, 445, 461, 462, 464, 465, 466, 467, 468, 470, 491, 492, 511, 514, 516, 518, 519, 520, 531, 533, 534, 535, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 555, 611, 613, 615, 671, 672, 673, 674, 675, 681, 682, 683, 685, 711, 714, 726, 728, 730, 756, 757, 759, 760, 761, 762, 764, 804, 806, 808, 809, 810, 811, 812, 813, 814, 816, 818, 870, 874, 875, 881, 883, 885, 908, 909, 910, 911, 912, 933, 948, 953, 984, 986, 988, 994, 995, 996, 997, 998, 1039, 1040, 1041, 1042, 1059, 1060, 1061, 1062, 1063, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1131, 1133, 1146, 1154, 1157, 1190, 1195, 1198, 1202, 1219, 1221, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1233, 1291, 1293, 1295, 1393, 1394, 1396, 1414, 1438, 1441, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1488, 1510, 1514, 1544, 1547, 1549, 1550, 1552, 1557, 1565, 1567, 1568, 1647, 1649, 1651, 1653, 1669, 1671, 1673, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1711, 1732, 1735, 1764, 1766, 1767, 1768, 1784, 1787, 1819, 1822, 1827, 1831, 1868, 1889, 1892, 1909, 1912, 1919, 1921, 1923, 1929, 1930, 1932, 1939, 1940, 1942, 1943, 1973, 1974, 1976, 1977, 1978, 1984, 1987, 1989, 1990, 1992, 1994, 1995, 1996, 2005, 2026, 2030, 2031, 2032, 2036, 2068, 2069, 2072, 2074, 2075, 2076, 2079, 2080, 2082, 2095, 2098, 2104, 2108, 2230, 2238], "outputhat": [10, 11, 112, 128, 134, 135, 136, 445, 706, 709, 2135], "approach": [10, 11, 112, 114, 116, 123, 124, 126, 128, 130, 134, 135, 149, 2131, 2138, 2140], "colour": 10, "applic": [10, 38, 39, 86, 87, 116, 117, 124, 136, 1647, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1953, 1960, 1961, 1962, 1966, 1967, 2131, 2132, 2134, 2136, 2138, 2140], "chanc": 10, "troubleshoot": 10, "ever": 10, "64": [10, 29, 30, 31, 38, 39, 62, 67, 68, 77, 78, 79, 80, 81, 86, 87, 88, 89, 96, 97, 104, 105, 135, 136, 305, 348, 445, 511, 512, 513, 514, 515, 691, 692, 694, 731, 733, 735, 736, 739, 881, 882, 883, 884, 885, 933, 941, 943, 969, 970, 971, 972, 973, 1009, 1010, 1012, 1131, 1136, 1414, 1448, 1451, 1453, 1456, 1457, 1609, 1626, 1629, 1647, 1654, 1657, 1664, 1667, 1674, 1677, 1681, 1682, 1683, 1684, 1685, 1711, 1769, 1772, 1784, 1787, 1814, 1818, 1832, 1833, 1835, 1989, 1991, 2068, 2079, 2082, 2095, 2097, 2099, 2126, 2139, 2161, 2172], "usr": 10, "flask": 10, "toolbar": [10, 11], "_array_modul": [10, 111], "array_api_test": [10, 11, 111], "refresh": 10, "conftest": 10, "nutshel": [10, 122], "hook": 10, "lint": 10, "accept": [10, 11, 18, 23, 24, 29, 30, 40, 41, 69, 77, 78, 112, 114, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 134, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 259, 260, 262, 264, 267, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 367, 370, 381, 384, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 804, 807, 809, 812, 814, 817, 843, 849, 852, 870, 871, 876, 877, 881, 884, 896, 899, 906, 907, 918, 921, 923, 926, 933, 937, 940, 958, 979, 982, 1044, 1045, 1131, 1132, 1133, 1134, 1136, 1138, 1139, 1145, 1146, 1147, 1164, 1167, 1168, 1190, 1208, 1219, 1222, 1224, 1227, 1229, 1232, 1285, 1288, 1312, 1315, 1375, 1378, 1379, 1382, 1414, 1427, 1430, 1473, 1476, 1490, 1493, 1499, 1502, 1505, 1508, 1544, 1547, 1575, 1579, 1591, 1595, 1609, 1639, 1643, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1681, 1684, 1686, 1689, 1691, 1694, 1701, 1704, 1706, 1709, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1846, 1847, 1851, 1868, 1869, 1872, 1874, 1877, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1897, 1899, 1902, 1904, 1907, 1909, 1912, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 1973, 1974, 1977, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123, 2125, 2126, 2132], "attempt": [10, 121, 149], "succe": 10, "properli": [10, 110, 120, 126, 128], "quick": [11, 110, 127, 136], "tendenc": 11, "land": 11, "isn": [11, 124, 135, 149, 1414, 1575, 1579, 2136, 2312, 2320], "world": [11, 2136], "come": [11, 112, 115, 126, 129, 130, 136, 147, 2125, 2126, 2134], "fly": [11, 2134], "hard": [11, 134, 2134], "receiv": [11, 116, 117, 128, 1414, 1421, 1540, 2161, 2171], "internship": 11, "bug": [11, 126, 128, 129], "serv": [11, 112, 114, 122, 123, 126, 128, 130, 131, 2125, 2126, 2132], "suspect": 11, "observ": [11, 31, 79, 120, 132, 860, 861, 862, 864, 2136], "act": [11, 118, 149, 2141], "placehold": [11, 112, 121, 122, 1953, 1961, 1966, 1971, 2125], "ii": [11, 56, 57, 104, 105, 2068, 2079, 2080, 2081, 2082], "iii": 11, "three": [11, 31, 114, 115, 118, 126, 128, 130, 131, 132, 219, 264, 267, 799, 800, 802, 1190, 1193, 2126, 2135, 2140], "reformat": [11, 121], "issue_numb": 11, "No": [11, 115, 2134], "anyth": [11, 31, 79, 128, 129, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1349, 1353, 1354, 2134, 2135], "kept": [11, 62, 65, 66, 67, 68, 125, 129, 1949, 1950, 1951], "clean": [11, 129, 130, 132, 133, 135], "soon": [11, 115, 116, 147, 149, 2126], "partial": [11, 31, 65, 66, 79, 933, 948, 1039, 1040, 1041, 1042, 1261, 1262, 1263, 1264, 1349, 1354, 1609, 1625, 1711, 1758, 2173, 2174], "solut": [11, 114, 116, 127, 128, 130, 1711, 1804, 1807, 2132, 2136], "associ": [11, 40, 41, 88, 89, 116, 123, 124, 126, 127, 128, 149, 445, 461, 464, 1711, 1774, 1775, 1776, 1777, 1778, 1789, 1792, 1847, 1851, 2197, 2216, 2312, 2320], "otherwis": [11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 38, 39, 40, 41, 44, 45, 50, 51, 56, 57, 58, 59, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 114, 116, 117, 118, 128, 132, 171, 173, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 219, 221, 222, 231, 232, 233, 249, 251, 253, 254, 257, 259, 260, 261, 262, 263, 274, 276, 278, 282, 284, 286, 300, 301, 303, 305, 313, 314, 315, 316, 317, 318, 320, 322, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 342, 343, 367, 370, 381, 384, 392, 393, 395, 397, 410, 416, 436, 437, 439, 445, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 769, 770, 779, 780, 781, 782, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 823, 824, 826, 828, 829, 831, 833, 849, 851, 853, 860, 861, 862, 864, 865, 866, 867, 868, 869, 896, 897, 898, 899, 900, 908, 912, 933, 934, 939, 940, 979, 981, 983, 999, 1003, 1037, 1038, 1059, 1063, 1069, 1071, 1073, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1126, 1128, 1130, 1154, 1158, 1178, 1179, 1180, 1181, 1182, 1185, 1187, 1189, 1276, 1278, 1280, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1334, 1336, 1338, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1393, 1394, 1403, 1404, 1406, 1408, 1409, 1411, 1414, 1415, 1417, 1419, 1422, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1596, 1603, 1604, 1606, 1621, 1623, 1639, 1640, 1642, 1647, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1695, 1706, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1719, 1721, 1722, 1725, 1743, 1745, 1747, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1774, 1776, 1778, 1794, 1796, 1798, 1799, 1801, 1803, 1809, 1810, 1811, 1812, 1813, 1827, 1828, 1830, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1868, 1869, 1871, 1873, 1884, 1888, 1889, 1891, 1893, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1939, 1940, 1942, 1944, 1945, 1947, 1949, 1950, 1951, 1953, 1967, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2018, 2020, 2026, 2028, 2030, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2052, 2053, 2055, 2057, 2058, 2061, 2068, 2069, 2071, 2073, 2074, 2076, 2078, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2173, 2174, 2186, 2189, 2190, 2191, 2230, 2233, 2244, 2247, 2312, 2328], "respond": 11, "shape": [11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 116, 117, 118, 119, 122, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 267, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 410, 431, 436, 437, 438, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 771, 772, 773, 774, 777, 799, 800, 801, 802, 803, 804, 805, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 844, 845, 846, 847, 849, 850, 851, 852, 853, 855, 858, 860, 861, 870, 871, 874, 875, 876, 877, 887, 889, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 931, 933, 936, 937, 938, 940, 943, 953, 958, 960, 963, 964, 967, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 1009, 1010, 1012, 1029, 1030, 1031, 1037, 1038, 1069, 1070, 1079, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1147, 1154, 1157, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1193, 1194, 1197, 1205, 1207, 1208, 1209, 1210, 1211, 1214, 1217, 1219, 1220, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1248, 1250, 1261, 1265, 1274, 1281, 1282, 1283, 1284, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1408, 1412, 1414, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1466, 1468, 1470, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1490, 1491, 1492, 1493, 1494, 1515, 1517, 1519, 1521, 1525, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1560, 1580, 1585, 1601, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1917, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1944, 1945, 1946, 1947, 1948, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2015, 2016, 2017, 2019, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2034, 2038, 2039, 2040, 2043, 2044, 2045, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2068, 2069, 2072, 2074, 2077, 2079, 2080, 2082, 2087, 2089, 2095, 2097, 2099, 2100, 2102, 2109, 2110, 2112, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2128, 2129, 2151, 2152, 2155, 2156, 2159, 2161, 2163, 2164, 2165, 2166, 2167, 2168, 2175, 2176, 2197, 2217, 2219, 2230, 2231, 2234, 2237, 2238, 2239, 2249, 2252, 2255, 2257], "dai": 11, "warn": 11, "without": [11, 65, 66, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 128, 129, 130, 134, 135, 136, 148, 149, 1414, 1495, 1559, 1596, 1868, 1904, 1907, 1953, 1955, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2131, 2134, 2135, 2136, 2140, 2230, 2234, 2238, 2239, 2260, 2261, 2262, 2263], "likewis": [11, 114, 116, 119, 122, 123, 126, 130, 135, 2140], "freed": 11, "flag": [11, 65, 66, 116, 124, 125, 126, 127, 128, 410, 416, 2197, 2218, 2219, 2276, 2277, 2278, 2279, 2280], "remain": [11, 44, 45, 50, 51, 92, 93, 98, 99, 115, 118, 120, 129, 130, 149, 445, 461, 464, 706, 709, 906, 907, 1131, 1138, 1139, 1868, 1904, 1905, 1906, 1907, 1908, 1953, 1960, 2005, 2021, 2022, 2023, 2024, 2025], "prioriti": [11, 65, 66, 125, 2312, 2318], "short": [11, 116, 126, 129, 132, 136, 1647, 1696, 1699], "basi": [11, 111, 135], "situat": [11, 115, 137], "upon": [11, 118, 125, 128, 130, 149, 2133, 2134], "period": [11, 79, 129, 870, 872, 873, 874, 875, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1094, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1131, 1143], "unabl": [11, 130], "obvious": [11, 115], "never": [11, 44, 45, 92, 93, 116, 126, 128, 130, 1868, 1904, 1905, 1906, 1907, 1908], "qualiti": 11, "hypothet": 11, "frustrat": 11, "delai": 11, "busi": 11, "fine": [11, 116, 118, 126, 134, 137, 2140], "inact": 11, "me": 11, "unfairli": 11, "definit": [11, 31, 40, 41, 77, 78, 88, 89, 112, 116, 123, 134, 933, 961, 1372, 1373, 1374, 1711, 1712, 1713, 1714, 1715, 1716], "investig": 11, "maximum": [11, 29, 30, 31, 32, 33, 34, 35, 44, 45, 50, 51, 56, 57, 62, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 83, 92, 93, 98, 99, 104, 105, 118, 125, 135, 410, 435, 445, 665, 933, 944, 964, 967, 1014, 1015, 1016, 1017, 1018, 1131, 1140, 1190, 1208, 1285, 1288, 1414, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1466, 1467, 1468, 1469, 1470, 1609, 1626, 1627, 1628, 1629, 1711, 1764, 1767, 1868, 1869, 1870, 1871, 1872, 1873, 1953, 1966, 2005, 2006, 2007, 2008, 2009, 2010, 2068, 2083, 2084, 2085, 2086, 2091, 2094, 2126, 2141, 2230, 2233, 2234, 2238, 2239, 2249, 2250, 2252, 2255, 2260, 2261, 2262, 2263, 2276, 2281, 2282], "incomplet": 11, "per": [11, 31, 38, 39, 79, 86, 87, 115, 126, 135, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1131, 1132, 1133, 1134, 1145, 1146, 1147, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1649, 1650, 1651, 1653, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1681, 1682, 1683, 1685, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168], "self": [11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 114, 120, 126, 127, 132, 134, 135, 136, 137, 171, 172, 173, 177, 178, 179, 182, 183, 184, 187, 188, 189, 192, 193, 194, 197, 198, 199, 202, 204, 207, 208, 209, 224, 225, 231, 232, 235, 236, 237, 243, 244, 245, 249, 250, 251, 253, 254, 255, 256, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 276, 282, 283, 284, 286, 287, 289, 290, 292, 294, 295, 300, 301, 302, 303, 313, 314, 315, 318, 319, 320, 323, 324, 325, 328, 329, 330, 344, 345, 349, 350, 351, 353, 360, 361, 362, 367, 368, 369, 372, 373, 376, 377, 378, 381, 382, 383, 386, 387, 388, 393, 394, 395, 397, 410, 411, 417, 418, 419, 436, 438, 439, 446, 447, 448, 451, 452, 453, 456, 457, 458, 461, 462, 463, 466, 467, 468, 471, 472, 473, 476, 477, 478, 481, 482, 483, 486, 487, 488, 491, 492, 493, 496, 497, 498, 501, 502, 503, 506, 507, 508, 511, 512, 513, 516, 517, 518, 521, 522, 523, 526, 527, 528, 531, 532, 533, 536, 537, 538, 541, 542, 543, 546, 547, 548, 551, 552, 553, 556, 557, 558, 561, 562, 563, 566, 567, 568, 571, 572, 573, 576, 577, 578, 581, 582, 583, 586, 587, 588, 591, 592, 593, 596, 597, 598, 601, 602, 603, 606, 607, 608, 611, 612, 613, 616, 617, 618, 621, 622, 623, 626, 627, 628, 631, 632, 633, 636, 637, 638, 641, 642, 643, 646, 647, 648, 651, 652, 653, 656, 657, 658, 661, 662, 663, 666, 667, 668, 671, 672, 673, 676, 677, 678, 681, 682, 683, 686, 687, 688, 691, 692, 693, 696, 697, 698, 701, 702, 703, 706, 707, 708, 711, 712, 713, 716, 717, 718, 721, 722, 723, 726, 727, 728, 731, 732, 733, 736, 737, 738, 741, 743, 744, 746, 748, 749, 751, 753, 754, 756, 758, 759, 761, 763, 764, 774, 775, 776, 779, 780, 781, 784, 785, 786, 789, 790, 791, 794, 795, 796, 799, 800, 801, 804, 805, 806, 809, 810, 811, 814, 815, 816, 819, 820, 821, 824, 825, 826, 829, 830, 831, 833, 834, 835, 838, 839, 840, 844, 845, 849, 850, 851, 855, 856, 857, 860, 861, 862, 865, 866, 867, 881, 882, 883, 887, 888, 891, 892, 893, 896, 897, 898, 901, 902, 903, 908, 909, 910, 913, 914, 915, 918, 919, 920, 923, 924, 925, 928, 929, 930, 964, 965, 966, 969, 970, 971, 974, 975, 976, 979, 980, 981, 983, 984, 985, 986, 989, 990, 991, 994, 995, 996, 999, 1000, 1001, 1004, 1005, 1006, 1009, 1010, 1011, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1029, 1030, 1032, 1033, 1034, 1039, 1040, 1041, 1046, 1047, 1050, 1051, 1054, 1055, 1056, 1059, 1060, 1061, 1064, 1065, 1066, 1069, 1070, 1071, 1074, 1075, 1076, 1079, 1080, 1081, 1084, 1085, 1086, 1089, 1090, 1091, 1093, 1095, 1096, 1097, 1103, 1104, 1105, 1108, 1109, 1110, 1113, 1114, 1117, 1118, 1121, 1122, 1123, 1126, 1127, 1128, 1149, 1150, 1151, 1154, 1155, 1156, 1159, 1160, 1161, 1173, 1174, 1175, 1178, 1179, 1180, 1185, 1186, 1187, 1214, 1215, 1216, 1219, 1220, 1221, 1224, 1225, 1226, 1229, 1230, 1231, 1234, 1235, 1236, 1240, 1241, 1242, 1245, 1246, 1247, 1251, 1252, 1253, 1256, 1257, 1258, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1276, 1277, 1278, 1285, 1286, 1287, 1291, 1292, 1293, 1296, 1297, 1298, 1301, 1302, 1303, 1312, 1313, 1314, 1317, 1318, 1319, 1322, 1323, 1324, 1329, 1330, 1331, 1334, 1335, 1336, 1349, 1354, 1357, 1359, 1360, 1362, 1364, 1365, 1367, 1369, 1370, 1372, 1373, 1375, 1377, 1379, 1381, 1383, 1385, 1386, 1389, 1391, 1393, 1395, 1396, 1398, 1400, 1401, 1403, 1405, 1406, 1408, 1410, 1411, 1415, 1416, 1417, 1422, 1423, 1424, 1427, 1428, 1429, 1433, 1434, 1435, 1438, 1439, 1440, 1445, 1446, 1448, 1449, 1450, 1453, 1454, 1455, 1458, 1459, 1460, 1463, 1464, 1466, 1467, 1468, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1490, 1491, 1492, 1499, 1500, 1501, 1503, 1505, 1506, 1507, 1510, 1511, 1512, 1515, 1516, 1517, 1521, 1522, 1523, 1526, 1527, 1528, 1531, 1532, 1534, 1535, 1536, 1544, 1545, 1546, 1549, 1550, 1551, 1565, 1566, 1567, 1570, 1571, 1572, 1575, 1577, 1578, 1581, 1583, 1586, 1587, 1588, 1589, 1591, 1593, 1594, 1603, 1605, 1606, 1611, 1612, 1613, 1615, 1616, 1617, 1621, 1622, 1623, 1626, 1627, 1628, 1630, 1631, 1632, 1634, 1635, 1636, 1639, 1641, 1642, 1649, 1650, 1651, 1654, 1655, 1656, 1659, 1660, 1661, 1664, 1665, 1666, 1669, 1670, 1671, 1674, 1675, 1676, 1681, 1682, 1683, 1686, 1687, 1688, 1691, 1692, 1693, 1696, 1697, 1698, 1701, 1702, 1703, 1706, 1707, 1708, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1727, 1728, 1729, 1732, 1733, 1734, 1738, 1739, 1740, 1743, 1744, 1745, 1748, 1749, 1750, 1753, 1754, 1755, 1759, 1760, 1761, 1764, 1765, 1766, 1769, 1770, 1771, 1774, 1775, 1776, 1779, 1780, 1781, 1784, 1785, 1786, 1789, 1790, 1791, 1794, 1795, 1796, 1799, 1800, 1801, 1804, 1805, 1806, 1809, 1811, 1812, 1814, 1816, 1817, 1819, 1821, 1823, 1824, 1825, 1827, 1829, 1830, 1832, 1834, 1835, 1837, 1839, 1840, 1842, 1844, 1845, 1847, 1849, 1850, 1853, 1854, 1855, 1858, 1859, 1860, 1863, 1864, 1865, 1869, 1870, 1871, 1874, 1875, 1876, 1879, 1880, 1881, 1884, 1885, 1886, 1889, 1890, 1891, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1904, 1905, 1906, 1909, 1910, 1911, 1914, 1915, 1916, 1919, 1920, 1921, 1924, 1925, 1926, 1929, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1942, 1944, 1946, 1947, 1974, 1975, 1976, 1979, 1980, 1981, 1984, 1985, 1986, 1989, 1990, 1991, 1994, 1995, 1996, 2000, 2001, 2002, 2006, 2007, 2008, 2011, 2012, 2013, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2026, 2028, 2029, 2032, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2049, 2050, 2053, 2054, 2055, 2058, 2059, 2060, 2063, 2064, 2065, 2069, 2070, 2071, 2074, 2075, 2076, 2079, 2080, 2081, 2083, 2084, 2085, 2087, 2088, 2089, 2091, 2092, 2093, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2104, 2106, 2107, 2109, 2110, 2111, 2112, 2115, 2116, 2117, 2119, 2120, 2121, 2122, 2124, 2126, 2128, 2129, 2177, 2181], "assign": [11, 113, 116, 121, 125, 134], "sequenc": [11, 23, 24, 31, 38, 39, 40, 41, 44, 45, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 115, 116, 117, 118, 120, 128, 129, 132, 137, 148, 171, 173, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 219, 240, 241, 249, 251, 253, 259, 260, 262, 274, 276, 278, 282, 284, 286, 300, 301, 303, 318, 320, 322, 328, 330, 332, 360, 362, 364, 372, 373, 375, 376, 378, 380, 393, 395, 397, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 779, 781, 783, 789, 791, 793, 794, 796, 797, 798, 799, 801, 802, 803, 819, 823, 824, 826, 828, 829, 831, 833, 849, 851, 853, 865, 867, 869, 896, 900, 901, 902, 903, 904, 905, 908, 912, 913, 916, 933, 961, 979, 981, 983, 984, 985, 986, 987, 988, 999, 1003, 1059, 1063, 1064, 1067, 1069, 1071, 1073, 1079, 1080, 1081, 1082, 1083, 1095, 1096, 1097, 1098, 1099, 1103, 1105, 1107, 1126, 1128, 1130, 1131, 1141, 1142, 1144, 1154, 1158, 1164, 1172, 1185, 1187, 1189, 1190, 1192, 1193, 1196, 1203, 1205, 1213, 1240, 1241, 1242, 1243, 1244, 1250, 1276, 1278, 1280, 1301, 1302, 1303, 1304, 1305, 1306, 1309, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1334, 1336, 1338, 1349, 1355, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1372, 1374, 1393, 1394, 1398, 1402, 1403, 1404, 1406, 1408, 1409, 1411, 1414, 1415, 1417, 1419, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1540, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1608, 1621, 1623, 1639, 1640, 1642, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1661, 1662, 1663, 1664, 1666, 1668, 1669, 1672, 1679, 1681, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1695, 1706, 1708, 1710, 1711, 1712, 1714, 1716, 1717, 1719, 1721, 1743, 1745, 1747, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1774, 1776, 1778, 1794, 1796, 1798, 1799, 1801, 1803, 1827, 1828, 1830, 1842, 1843, 1844, 1845, 1846, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1868, 1869, 1871, 1873, 1874, 1877, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1899, 1900, 1901, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1939, 1940, 1942, 1944, 1945, 1947, 1953, 1961, 1971, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2016, 2018, 2020, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2053, 2055, 2057, 2068, 2069, 2071, 2073, 2074, 2076, 2078, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2137, 2161, 2170, 2175, 2176, 2183, 2184], "regist": 11, "wherea": [11, 112, 114, 116, 117, 118, 122, 123, 128, 129, 137, 2131], "primarili": [11, 114, 445, 706, 709, 2134], "invit": 11, "roadmap": [11, 115, 2126], "result": [11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 111, 112, 114, 115, 116, 118, 119, 122, 124, 125, 126, 127, 128, 129, 132, 135, 149, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 274, 275, 276, 277, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 323, 326, 392, 393, 394, 395, 396, 397, 410, 436, 437, 438, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 772, 773, 774, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 878, 881, 882, 883, 884, 885, 887, 889, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 969, 970, 971, 972, 973, 974, 977, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1197, 1198, 1199, 1200, 1201, 1204, 1205, 1209, 1211, 1214, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1451, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1515, 1517, 1519, 1521, 1525, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1609, 1611, 1612, 1613, 1615, 1616, 1617, 1619, 1621, 1623, 1624, 1626, 1627, 1628, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1804, 1807, 1809, 1811, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1944, 1945, 1946, 1947, 1948, 1953, 1957, 1960, 1961, 1963, 1967, 1971, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2019, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2034, 2036, 2037, 2039, 2041, 2042, 2044, 2046, 2047, 2051, 2052, 2053, 2055, 2056, 2057, 2058, 2061, 2063, 2066, 2068, 2069, 2070, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2135, 2137, 2197, 2210, 2216, 2217, 2218, 2219, 2249, 2250, 2255, 2256, 2276, 2279, 2280, 2285, 2286, 2288], "mainli": [11, 110, 128, 133, 135, 2125, 2134], "extend": [11, 113, 119, 122, 126, 129, 149, 1190, 1208, 1285, 1288, 2131, 2134, 2140], "ideal": [11, 115, 125, 135], "Such": [11, 128, 1711, 1832, 1836], "easier": [11, 111, 112, 116, 126, 127, 129, 2125, 2134, 2136], "interv": [11, 31, 48, 49, 58, 59, 79, 96, 97, 106, 107, 219, 221, 222, 254, 257, 259, 262, 923, 924, 925, 926, 927, 1164, 1168, 1711, 1837, 1841, 1868, 1869, 1872, 1884, 1887, 1924, 1927, 1978, 1984, 1985, 1986, 1987, 1988, 1994, 1995, 1996, 1997, 1998, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124], "forth": 11, "rare": [11, 117, 149, 2139], "scenario": [11, 120], "someon": [11, 120, 149], "someth": [11, 129, 135, 136, 149, 2140], "unfortun": 11, "redund": [11, 116, 120, 126, 130], "specifi": [11, 23, 24, 25, 26, 31, 32, 33, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 63, 64, 65, 66, 73, 74, 79, 80, 81, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 104, 105, 106, 107, 110, 116, 117, 122, 123, 125, 126, 127, 128, 130, 132, 135, 136, 177, 179, 181, 219, 221, 222, 234, 248, 254, 257, 279, 280, 287, 289, 291, 292, 294, 296, 297, 299, 305, 313, 314, 315, 316, 317, 323, 326, 410, 411, 425, 429, 431, 434, 435, 436, 440, 445, 706, 709, 779, 781, 783, 824, 827, 834, 835, 836, 837, 838, 839, 870, 871, 887, 889, 923, 924, 925, 926, 927, 933, 956, 979, 982, 994, 995, 997, 1103, 1104, 1105, 1107, 1131, 1137, 1164, 1168, 1183, 1184, 1190, 1198, 1209, 1234, 1237, 1256, 1259, 1266, 1267, 1268, 1269, 1270, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1322, 1325, 1349, 1352, 1353, 1355, 1414, 1420, 1473, 1474, 1475, 1476, 1477, 1478, 1481, 1482, 1486, 1499, 1501, 1502, 1503, 1608, 1647, 1701, 1704, 1711, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1746, 1764, 1765, 1766, 1767, 1768, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1872, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1887, 1889, 1890, 1891, 1892, 1893, 1909, 1910, 1911, 1912, 1913, 1919, 1922, 1924, 1925, 1927, 1939, 1940, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1959, 1961, 1962, 1969, 1970, 1971, 1972, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2021, 2022, 2023, 2024, 2025, 2031, 2032, 2034, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2082, 2095, 2098, 2104, 2108, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2140, 2149, 2150, 2260, 2262, 2312, 2320], "behind": [11, 34, 35, 110, 122, 128, 131, 133, 1621, 1622], "well": [11, 80, 81, 115, 116, 120, 125, 126, 127, 128, 136, 137, 148, 1414, 1499, 1501, 1502, 1503, 1711, 1804, 1807, 2133, 2134, 2135, 2139, 2249, 2256], "practic": [11, 115, 126, 2137], "separ": [11, 112, 114, 115, 128, 132, 134, 135, 2135, 2139], "branch": [11, 111, 115, 149, 445, 481, 484, 2134], "role": [11, 126, 133, 2135, 2137, 2141], "date": [11, 129], "base": [11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 115, 116, 120, 122, 124, 127, 128, 129, 132, 148, 150, 156, 157, 219, 220, 259, 260, 261, 262, 263, 305, 306, 307, 308, 309, 310, 392, 410, 411, 412, 445, 556, 559, 616, 619, 621, 622, 623, 624, 625, 626, 629, 631, 632, 633, 634, 635, 691, 692, 694, 767, 768, 829, 830, 831, 832, 833, 865, 867, 869, 870, 876, 877, 933, 936, 943, 969, 971, 973, 1009, 1010, 1011, 1012, 1013, 1342, 1343, 1344, 1375, 1378, 1379, 1382, 1414, 1487, 1556, 1570, 1571, 1572, 1573, 1574, 1609, 1610, 1868, 1884, 1887, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2068, 2079, 2082, 2128, 2129, 2134, 2139, 2141, 2143, 2144, 2145, 2146, 2147, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2221, 2222, 2223, 2244, 2246, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2308, 2309, 2310, 2311, 2312, 2313], "complic": [11, 127, 132], "merge_with_upstream": 11, "name_of_your_branch": 11, "resolv": [11, 116, 132, 1868, 1884, 1887, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108], "abort": 11, "tediou": [11, 118], "resolut": [11, 25, 26, 73, 74, 305, 349, 350, 351, 352, 353], "stash": 11, "reinstat": 11, "fetch": [11, 111, 115], "0": [11, 13, 14, 15, 16, 17, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 113, 114, 115, 116, 118, 119, 120, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 149, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 231, 233, 240, 241, 242, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 274, 275, 276, 277, 278, 282, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 330, 331, 332, 344, 346, 349, 350, 351, 352, 353, 360, 363, 365, 376, 378, 380, 381, 384, 393, 394, 397, 410, 413, 416, 422, 425, 429, 430, 431, 432, 433, 434, 435, 441, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 501, 504, 511, 512, 513, 514, 515, 516, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 579, 581, 584, 586, 587, 588, 589, 590, 591, 592, 594, 596, 597, 599, 601, 603, 605, 606, 609, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 671, 673, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 769, 770, 771, 772, 773, 774, 778, 779, 780, 782, 784, 785, 787, 804, 805, 807, 809, 813, 814, 816, 818, 819, 820, 821, 822, 824, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 849, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 882, 883, 884, 885, 887, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 915, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 944, 945, 946, 948, 949, 951, 953, 955, 956, 957, 958, 960, 961, 962, 963, 964, 967, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1093, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1136, 1137, 1138, 1140, 1141, 1142, 1145, 1154, 1155, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1171, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1195, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1217, 1219, 1220, 1222, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1349, 1350, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1445, 1446, 1448, 1451, 1453, 1455, 1456, 1457, 1463, 1465, 1466, 1467, 1469, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1486, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1502, 1505, 1506, 1507, 1508, 1509, 1510, 1512, 1513, 1514, 1521, 1522, 1524, 1526, 1527, 1529, 1531, 1532, 1534, 1535, 1537, 1540, 1542, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1559, 1563, 1565, 1566, 1567, 1568, 1569, 1575, 1577, 1579, 1581, 1582, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1591, 1594, 1595, 1600, 1603, 1604, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1639, 1640, 1642, 1643, 1645, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1743, 1744, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1759, 1762, 1764, 1765, 1767, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1789, 1790, 1791, 1792, 1793, 1799, 1800, 1801, 1802, 1803, 1809, 1811, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1836, 1842, 1843, 1844, 1845, 1846, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1955, 1957, 1960, 1961, 1962, 1963, 1965, 1966, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126, 2146, 2147, 2149, 2150, 2151, 2152, 2155, 2156, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2197, 2218, 2230, 2233, 2234, 2238, 2239, 2240, 2241, 2244, 2247, 2249, 2255, 2260, 2261, 2263, 2285, 2287, 2312, 2318], "uncommit": 11, "unstag": 11, "untrack": 11, "comprehens": [11, 111], "atlassian": 11, "tutori": [11, 126], "wrote": 11, "piec": [11, 112, 123, 124, 132, 2130, 2132], "blame": 11, "revis": 11, "log": [11, 23, 24, 29, 30, 31, 40, 41, 71, 72, 77, 78, 79, 88, 89, 114, 115, 118, 123, 125, 126, 128, 130, 132, 135, 219, 259, 260, 261, 262, 263, 445, 620, 626, 629, 636, 639, 769, 770, 819, 820, 821, 822, 823, 933, 962, 1178, 1181, 1306, 1307, 1403, 1407, 1799, 1800, 1801, 1803, 2126, 2230, 2234, 2238, 2239, 2260, 2261, 2262, 2263], "eg": 11, "16": [11, 13, 16, 17, 29, 30, 31, 32, 33, 38, 39, 40, 41, 48, 49, 56, 57, 62, 67, 68, 73, 74, 77, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 96, 97, 118, 135, 305, 360, 362, 363, 445, 511, 512, 513, 514, 515, 626, 629, 711, 712, 746, 747, 749, 750, 804, 805, 806, 807, 808, 809, 810, 881, 882, 883, 884, 885, 918, 921, 933, 943, 948, 984, 985, 986, 987, 988, 994, 995, 996, 997, 998, 1009, 1010, 1012, 1039, 1040, 1041, 1042, 1079, 1082, 1131, 1132, 1136, 1141, 1142, 1145, 1146, 1164, 1167, 1190, 1198, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1414, 1453, 1455, 1466, 1467, 1468, 1469, 1470, 1565, 1567, 1609, 1645, 1647, 1681, 1684, 1691, 1692, 1693, 1694, 1695, 1711, 1712, 1713, 1715, 1732, 1735, 1743, 1746, 1747, 1784, 1787, 1814, 1818, 1868, 1939, 1940, 1942, 1943, 1953, 1962, 1978, 1984, 1985, 1987, 1988, 1989, 1991, 1994, 1996, 1998, 2005, 2026, 2030, 2068, 2074, 2075, 2077, 2079, 2082, 2230, 2234, 2238, 2239, 2260, 2261, 2262, 2263], "past": [11, 111, 127, 128, 2134], "l": [11, 40, 41, 77, 78, 88, 89, 110, 641, 643, 645, 1711, 1712, 1713, 1714, 1715, 1716, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1759, 1762, 1827, 1828, 1829, 1830, 1831], "filepath": [11, 65, 66, 111], "grep": 11, "retriev": [11, 126, 1414, 1420, 2312, 2320], "commit_id": 11, "handi": 11, "histori": 11, "toggl": 11, "vertic": [11, 31, 79, 1190, 1212, 1213, 1393, 1394, 1395, 1396, 1397, 1398, 1402, 1414, 1448, 1451], "highlight": [11, 115, 118, 126], "previou": [11, 34, 35, 82, 83, 111, 115, 122, 126, 128, 130, 137, 149, 305, 404, 405, 406, 407, 408, 843, 1044, 1045, 1414, 1597, 1599, 1600, 1601, 1609, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 2137, 2151, 2152, 2155, 2156, 2159], "whenev": [11, 115, 116, 120, 124, 125, 128, 135], "think": [11, 115, 118, 2135], "gain": [11, 111, 131, 136, 2134, 2151, 2159], "quit": [11, 112, 118, 119, 123, 124, 128, 130, 2134, 2140], "newli": [11, 25, 26, 73, 74, 115, 125, 128, 305, 313, 314, 315, 316, 317, 1414, 1432], "cannot": [11, 31, 111, 113, 116, 126, 132, 137, 789, 790, 794, 795, 799, 800, 2140], "least": [11, 31, 40, 41, 79, 112, 115, 116, 118, 123, 128, 789, 792, 794, 797, 799, 802, 933, 952, 984, 987, 999, 1000, 1001, 1002, 1003, 1079, 1082, 1131, 1141, 1142, 1149, 1150, 1151, 1152, 1153, 1190, 1191, 1192, 1193, 1199, 1711, 1759, 1760, 1762], "approv": 11, "hash": [11, 135], "cancel": 11, "speedup": 11, "unavail": 11, "tickbox": 11, "lower": [11, 23, 24, 29, 30, 31, 40, 41, 48, 49, 77, 78, 79, 88, 89, 96, 97, 118, 126, 128, 130, 132, 149, 219, 240, 241, 287, 289, 291, 445, 661, 662, 663, 664, 665, 870, 871, 876, 979, 980, 981, 982, 1301, 1302, 1303, 1304, 1305, 1349, 1355, 1375, 1378, 1711, 1712, 1713, 1714, 1715, 1716, 1743, 1746, 1978, 1994, 1995, 1996, 1997, 1998, 2125, 2130, 2131, 2132, 2134, 2135, 2140, 2141, 2149, 2150, 2151, 2156, 2249, 2256], "span": [11, 130, 2132, 2140], "intent": [11, 125], "discourag": 11, "philosophi": 11, "increment": [11, 32, 33, 80, 81, 129, 1414, 1510, 1511, 1512, 1513, 1514, 2134], "valuabl": 11, "infrequ": 11, "earli": [11, 2126, 2134], "wast": [11, 115], "spot": [11, 118, 123], "mistak": [11, 121], "propos": [11, 126, 130, 2134], "mountain": 11, "around": [11, 62, 65, 66, 67, 68, 112, 122, 123, 126, 129, 134, 149, 1190, 1208, 1285, 1288, 2125, 2132, 2134, 2141], "advoc": [11, 149], "style": [11, 1190, 1208, 1285, 1288, 2005, 2021, 2024, 2134], "were": [11, 65, 66, 73, 74, 116, 120, 121, 128, 129, 130, 132, 360, 362, 364, 372, 373, 375, 376, 378, 380, 2134, 2135, 2140], "actual": [11, 110, 115, 123, 125, 126, 127, 128, 130, 131, 136, 149, 2135, 2140], "aim": [11, 111, 126, 128, 131, 2132, 2134, 2137], "session": [11, 2134], "block": [11, 112, 114, 120, 121, 123, 128, 131, 133, 137, 149, 410, 411, 1121, 1124, 1164, 1170, 1609, 1638, 1646, 2125, 2126, 2139, 2141], "smaller": [11, 31, 44, 45, 92, 93, 132, 769, 771, 779, 782, 933, 934, 951, 1103, 1106, 1296, 1297, 1299, 1414, 1448, 1451, 1868, 1869, 1872, 1909, 1910, 1911, 1912, 1913, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108], "beauti": 11, "particularli": [11, 135, 149, 2132], "concern": [11, 110, 114, 118, 125, 130, 131, 2140], "difficult": [11, 111, 116, 128, 149, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051], "undo": 11, "stress": 11, "frequenc": [11, 32, 33, 80, 81, 1414, 1466, 1467, 1468, 1469, 1470], "advantag": [11, 125, 126, 2134], "nifti": 11, "reassur": 11, "isol": [11, 2135, 2140], "fact": [11, 111, 115, 126, 128, 132, 135], "local_path_to_ivi": 11, "overwrit": [11, 65, 66, 125, 126, 132, 410, 435], "subfold": [11, 127, 128, 129], "wide": [11, 128, 2132, 2134], "via": [11, 111, 114, 116, 117, 120, 125, 129, 130, 132, 134, 135, 148, 1953, 1964, 1965, 2134], "dep": 11, "fresh": 11, "arsen": 11, "declar": 11, "exec": 11, "rf": 11, "cp": 11, "ivy_contain": 11, "test_imag": 11, "test_random_crop": 11, "test_creation_funct": 11, "test_arang": 11, "variou": [11, 111, 116, 119, 120, 122, 124, 126, 127, 128, 148, 2125, 2130, 2132, 2133, 2134, 2137, 2140], "cpu": [11, 23, 24, 27, 28, 31, 48, 49, 71, 72, 75, 76, 79, 80, 81, 96, 97, 117, 126, 128, 149, 219, 240, 241, 248, 254, 257, 259, 260, 261, 262, 263, 274, 275, 277, 279, 280, 282, 285, 300, 304, 410, 411, 414, 416, 417, 418, 419, 420, 421, 422, 423, 427, 430, 432, 433, 436, 437, 438, 439, 440, 441, 443, 444, 819, 820, 821, 822, 824, 827, 1029, 1031, 1291, 1292, 1293, 1294, 1295, 1306, 1307, 1308, 1310, 1311, 1478, 1480, 1711, 1758, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2132, 2134, 2137, 2139, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2181, 2183, 2184, 2197, 2216, 2218, 2219], "gpu": [11, 117, 134, 219, 254, 257, 410, 411, 416, 422, 423, 426, 428, 430, 432, 433, 434, 441, 443, 444, 2132, 2134, 2137, 2138, 2139], "combin": [11, 62, 65, 66, 67, 68, 112, 114, 116, 118, 120, 123, 128, 130, 137, 1414, 1471, 1472, 1711, 1717, 1720, 1759, 1762, 2134], "num": [11, 23, 24, 71, 72, 122, 132, 219, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 2230, 2235], "integ": [11, 13, 16, 17, 25, 26, 29, 30, 31, 38, 39, 40, 41, 44, 45, 48, 49, 56, 57, 58, 59, 62, 65, 66, 67, 68, 77, 78, 79, 86, 87, 88, 89, 92, 93, 96, 97, 104, 105, 106, 107, 114, 116, 124, 127, 128, 132, 134, 219, 221, 222, 248, 305, 360, 361, 363, 365, 381, 384, 392, 393, 396, 401, 445, 446, 449, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 566, 569, 571, 574, 656, 659, 691, 694, 706, 709, 711, 714, 756, 760, 761, 765, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 865, 866, 867, 868, 869, 901, 902, 903, 904, 905, 908, 909, 910, 911, 912, 933, 939, 942, 943, 952, 984, 985, 986, 987, 988, 989, 990, 992, 1009, 1012, 1029, 1030, 1031, 1059, 1060, 1061, 1062, 1063, 1079, 1080, 1081, 1082, 1083, 1131, 1141, 1142, 1149, 1152, 1159, 1160, 1162, 1190, 1195, 1202, 1208, 1212, 1261, 1262, 1263, 1264, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1339, 1340, 1349, 1354, 1355, 1393, 1394, 1395, 1396, 1397, 1414, 1486, 1608, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1658, 1659, 1662, 1669, 1672, 1679, 1681, 1684, 1711, 1727, 1730, 1769, 1772, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1868, 1914, 1915, 1916, 1917, 1918, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2052, 2058, 2061, 2068, 2069, 2072, 2074, 2077, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2230, 2233, 2234, 2238, 2239, 2240, 2241, 2244, 2247, 2249, 2253, 2254, 2255, 2257, 2260, 2262, 2263, 2276, 2281, 2282], "greater": [11, 13, 16, 17, 29, 30, 31, 48, 49, 62, 67, 68, 77, 78, 79, 96, 97, 127, 445, 451, 454, 466, 469, 481, 484, 501, 504, 511, 514, 566, 569, 571, 574, 580, 691, 694, 706, 709, 716, 719, 756, 760, 774, 778, 829, 830, 831, 832, 833, 887, 889, 933, 936, 961, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1137, 1141, 1142, 1372, 1373, 1374, 1711, 1717, 1720, 1769, 1772, 1868, 1919, 1922, 1978, 1994, 1995, 1996, 1997, 1998, 2249, 2256], "prompt": [11, 2126, 2149, 2150], "whole": [11, 31, 1126, 1127, 1129, 1185, 1186, 1188, 1281, 1283, 1284], "multipli": [11, 29, 30, 38, 39, 56, 57, 77, 78, 79, 86, 87, 112, 113, 114, 118, 445, 461, 462, 463, 464, 465, 675, 741, 742, 743, 744, 745, 1154, 1156, 1158, 1164, 1172, 1250, 1647, 1686, 1687, 1688, 1689, 1690, 2068, 2069, 2070, 2072], "cursor": 11, "alt": 11, "j": [11, 23, 24, 31, 40, 41, 56, 57, 71, 72, 77, 78, 79, 88, 89, 110, 219, 274, 275, 276, 277, 278, 641, 643, 645, 774, 775, 776, 777, 778, 784, 785, 787, 918, 920, 921, 922, 928, 929, 930, 931, 932, 933, 935, 950, 984, 986, 988, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1164, 1165, 1167, 1169, 1301, 1302, 1303, 1304, 1305, 1349, 1355, 1414, 1422, 1425, 1711, 1827, 1828, 1829, 1830, 1831, 2068, 2079, 2080, 2082, 2130], "blog": 11, "breakpoint": 11, "gutter": 11, "caret": 11, "f8": 11, "f9": 11, "Into": 11, "f7": 11, "smart": 11, "interest": 11, "consol": [11, 128, 134, 1414, 1543], "store": [11, 25, 26, 32, 33, 40, 41, 44, 45, 65, 66, 73, 74, 80, 81, 88, 89, 92, 93, 112, 113, 114, 119, 126, 132, 134, 135, 136, 150, 156, 157, 219, 240, 241, 282, 285, 300, 304, 323, 324, 325, 327, 1414, 1466, 1467, 1468, 1469, 1470, 1711, 1827, 1828, 1829, 1830, 1831, 1868, 1914, 1915, 1916, 1917, 1918, 2125, 2173, 2174, 2197, 2218, 2221], "variabl": [11, 13, 16, 17, 31, 32, 33, 34, 35, 46, 47, 65, 66, 79, 80, 81, 82, 83, 94, 95, 113, 116, 119, 121, 122, 125, 128, 129, 132, 135, 136, 137, 149, 860, 861, 862, 864, 901, 904, 1306, 1309, 1414, 1427, 1430, 1515, 1516, 1518, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1534, 1535, 1536, 1537, 1538, 1575, 1579, 1609, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1647, 1701, 1704, 1711, 1804, 1807, 1949, 1950, 1951, 1952, 1973, 1974, 1975, 1976, 1977, 2135, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2197, 2217, 2219, 2220, 2276, 2278, 2280], "fragment": [11, 2130, 2132, 2136], "except": [11, 31, 32, 33, 44, 45, 48, 49, 58, 59, 65, 66, 79, 80, 81, 88, 89, 96, 97, 106, 107, 110, 111, 112, 115, 116, 119, 121, 122, 125, 126, 130, 134, 149, 305, 323, 326, 824, 827, 896, 897, 898, 899, 900, 933, 940, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1306, 1308, 1349, 1353, 1354, 1414, 1427, 1431, 1445, 1446, 1447, 1515, 1516, 1518, 1555, 1575, 1579, 1596, 1711, 1789, 1791, 1792, 1793, 1868, 1874, 1875, 1877, 1884, 1887, 1924, 1927, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2005, 2021, 2024, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2173, 2174, 2186, 2192, 2221], "pychram": 11, "depth": [11, 23, 24, 31, 38, 39, 71, 72, 79, 86, 87, 115, 135, 136, 137, 148, 219, 274, 275, 276, 277, 278, 913, 916, 1095, 1096, 1097, 1098, 1099, 1131, 1144, 1190, 1196, 1414, 1448, 1451, 1496, 1647, 1669, 1672, 1674, 1675, 1676, 1677, 1678, 1953, 1966, 2149, 2150, 2173, 2174], "dummi": 11, "wherein": [11, 124, 128], "evalu": [11, 29, 30, 65, 66, 77, 78, 79, 114, 116, 130, 445, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 616, 617, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 646, 648, 650, 676, 677, 678, 680, 686, 687, 688, 690, 716, 717, 718, 719, 720, 736, 739, 1074, 1076, 1077, 1078, 1164, 1172, 1190, 1204, 1250, 1609, 1645, 1953, 1964, 1965, 2114, 2115, 2118, 2120, 2123, 2134], "failur": [11, 115, 127, 128], "dynamic_backend": [13, 16, 17, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 2173, 2174], "none": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 136, 137, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 219, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 330, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 369, 371, 372, 373, 375, 376, 378, 380, 381, 383, 385, 386, 388, 390, 393, 395, 397, 407, 409, 410, 415, 416, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844, 845, 847, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1103, 1104, 1105, 1106, 1107, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1347, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1470, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1490, 1492, 1494, 1496, 1499, 1501, 1503, 1504, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1520, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1541, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1606, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1812, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1960, 1961, 1964, 1965, 1966, 1967, 1971, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2128, 2129, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2181, 2183, 2184, 2186, 2187, 2188, 2193, 2197, 2212, 2216, 2217, 2218, 2219, 2220, 2221, 2223, 2225, 2230, 2234, 2238, 2239, 2241, 2244, 2246, 2247, 2249, 2250, 2252, 2255, 2260, 2261, 2262, 2263, 2276, 2277, 2278, 2279, 2280, 2281, 2308, 2311, 2312, 2314, 2320, 2328, 2330, 2331], "arraywithactiv": [13, 14, 16, 17, 134], "arraywithcr": [13, 16, 17, 23, 134], "arraywithdatatyp": [13, 16, 17, 25, 134], "arraywithdevic": [13, 16, 17, 27, 134], "arraywithgener": [13, 16, 17, 32, 134], "arraywithgradi": [13, 16, 17, 34, 134], "arraywithimag": [13, 16, 17, 36, 134], "arraywithlay": [13, 16, 17, 38, 134], "arraywithlinearalgebra": [13, 16, 17, 40, 134], "arraywithloss": [13, 16, 17, 42, 134], "arraywithmanipul": [13, 16, 17, 44, 134], "arraywithnorm": [13, 16, 17, 46, 134], "arraywithrandom": [13, 16, 17, 48, 134], "arraywithsearch": [13, 16, 17, 50, 134], "arraywithset": [13, 16, 17, 52, 134], "arraywithsort": [13, 16, 17, 54, 134], "arraywithstatist": [13, 16, 17, 56, 134], "arraywithutil": [13, 16, 17, 58, 134], "arraywithactivationsexperiment": [13, 16, 17, 31], "arraywithconversionsexperiment": [13, 16, 17, 31], "arraywithcreationexperiment": [13, 16, 17, 31], "arraywithdata_typeexperiment": [13, 16, 17, 31], "arraywithdeviceexperiment": [13, 16, 17, 31], "arraywithelementwiseexperiment": [13, 16, 17, 31], "arraywithgeneralexperiment": [13, 16, 17, 31], "arraywithgradientsexperiment": [13, 16, 17, 31], "arraywithimageexperiment": [13, 16, 17, 31], "arraywithlayersexperiment": [13, 16, 17, 31], "arraywithlinearalgebraexperiment": [13, 16, 17, 31], "arraywithlossesexperiment": [13, 16, 17, 31], "arraywithmanipulationexperiment": [13, 16, 17, 31], "arraywithnormsexperiment": [13, 16, 17, 31], "arraywithrandomexperiment": [13, 16, 17, 31], "arraywithsearchingexperiment": [13, 16, 17, 31], "arraywithsetexperiment": [13, 16, 17, 31], "arraywithsortingexperiment": [13, 16, 17, 31], "arraywithstatisticalexperiment": [13, 16, 17, 31], "arraywithutilityexperiment": [13, 16, 17, 31], "properti": [13, 16, 17, 65, 66, 111, 114, 118, 123, 127, 128, 134, 135, 136, 768, 1342, 1344, 2128, 2129, 2140, 2173, 2174, 2177, 2178, 2179, 2180, 2182], "transpos": [13, 16, 17, 31, 38, 39, 40, 41, 65, 66, 79, 86, 87, 88, 89, 125, 134, 137, 774, 777, 778, 860, 861, 862, 864, 1164, 1165, 1647, 1648, 1654, 1655, 1656, 1657, 1658, 1664, 1665, 1667, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1711, 1759, 1760, 1762, 1779, 1780, 1781, 1782, 1783, 1789, 1791, 1792, 1793, 2126, 2161, 2163, 2165, 2167, 2249, 2259], "ret": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 119, 120, 125, 126, 127, 129, 132, 137, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 366, 367, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 386, 389, 391, 393, 394, 395, 396, 397, 409, 410, 411, 413, 414, 416, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 770, 771, 772, 773, 774, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 889, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 916, 918, 920, 922, 928, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 969, 970, 971, 972, 973, 974, 977, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1499, 1500, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1540, 1541, 1542, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1917, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1957, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2055, 2056, 2057, 2058, 2061, 2063, 2066, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2146, 2147, 2148, 2149, 2150, 2173, 2174, 2177, 2181, 2197, 2205, 2206, 2207, 2216, 2217, 2218, 2219, 2230, 2232, 2233, 2238, 2239, 2240, 2241, 2244, 2246, 2247, 2260, 2261, 2262, 2263, 2312, 2318, 2320, 2328, 2332, 2334], "dimension": [13, 16, 17, 23, 24, 31, 40, 41, 44, 45, 50, 51, 56, 57, 58, 59, 65, 66, 77, 78, 79, 88, 89, 92, 93, 104, 105, 106, 107, 132, 219, 221, 222, 240, 241, 264, 265, 267, 789, 792, 794, 797, 799, 802, 838, 839, 870, 876, 877, 891, 894, 933, 961, 984, 985, 986, 987, 988, 994, 997, 1079, 1080, 1081, 1082, 1083, 1131, 1141, 1142, 1164, 1166, 1190, 1191, 1192, 1193, 1198, 1301, 1302, 1303, 1304, 1305, 1349, 1355, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1711, 1717, 1720, 1722, 1725, 1748, 1751, 1759, 1762, 1774, 1775, 1776, 1777, 1778, 1784, 1787, 1789, 1792, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1868, 1914, 1915, 1916, 1917, 1918, 2005, 2006, 2007, 2009, 2011, 2012, 2014, 2021, 2024, 2068, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2131, 2134, 2141], "whose": [13, 16, 17, 23, 24, 29, 30, 31, 32, 33, 40, 41, 44, 45, 52, 53, 56, 57, 71, 72, 77, 78, 79, 80, 81, 88, 89, 92, 93, 100, 101, 104, 105, 119, 128, 219, 249, 251, 253, 287, 289, 291, 292, 294, 296, 445, 456, 457, 458, 459, 460, 471, 472, 473, 474, 475, 486, 487, 488, 489, 490, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 691, 692, 694, 696, 699, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 1154, 1156, 1158, 1190, 1205, 1240, 1241, 1242, 1243, 1244, 1334, 1335, 1336, 1338, 1414, 1432, 1575, 1577, 1578, 1579, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1725, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1827, 1828, 1829, 1830, 1831, 1868, 1889, 1890, 1891, 1892, 1893, 1909, 1910, 1911, 1912, 1913, 2031, 2032, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2068, 2074, 2076, 2078, 2079, 2080, 2082, 2249, 2256], "dimens": [13, 16, 17, 23, 24, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 62, 65, 66, 67, 68, 71, 72, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 118, 120, 126, 127, 128, 130, 132, 135, 169, 182, 185, 202, 205, 219, 274, 275, 276, 277, 278, 287, 289, 291, 292, 294, 296, 774, 777, 778, 789, 792, 794, 797, 799, 800, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 865, 866, 867, 868, 869, 887, 889, 896, 897, 898, 899, 900, 901, 904, 933, 939, 940, 948, 956, 984, 985, 986, 987, 988, 994, 995, 997, 1039, 1040, 1041, 1042, 1079, 1080, 1081, 1082, 1083, 1089, 1090, 1092, 1131, 1132, 1133, 1134, 1137, 1141, 1142, 1145, 1146, 1147, 1159, 1162, 1164, 1165, 1190, 1191, 1192, 1193, 1198, 1209, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1281, 1282, 1301, 1302, 1303, 1304, 1305, 1306, 1309, 1322, 1323, 1324, 1325, 1326, 1339, 1340, 1349, 1352, 1353, 1354, 1355, 1414, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1466, 1467, 1468, 1469, 1470, 1478, 1482, 1490, 1491, 1492, 1493, 1494, 1608, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1689, 1696, 1699, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1852, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1877, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1922, 1924, 1927, 1939, 1940, 1941, 1942, 1943, 1949, 1950, 1951, 1952, 1978, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2021, 2022, 2023, 2024, 2025, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2068, 2079, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2128, 2129, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2171, 2172, 2230, 2233, 2239], "ax": [13, 14, 15, 16, 17, 31, 40, 41, 44, 45, 50, 51, 56, 57, 58, 59, 63, 64, 79, 88, 89, 92, 93, 98, 99, 104, 105, 106, 107, 116, 118, 128, 129, 132, 134, 182, 183, 184, 186, 202, 203, 204, 206, 410, 435, 865, 866, 867, 868, 869, 896, 897, 898, 899, 900, 933, 939, 940, 956, 1190, 1205, 1208, 1209, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1285, 1288, 1301, 1302, 1303, 1304, 1305, 1322, 1323, 1324, 1325, 1326, 1349, 1352, 1353, 1354, 1355, 1414, 1448, 1451, 1608, 1711, 1764, 1765, 1766, 1767, 1768, 1804, 1807, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1842, 1843, 1844, 1845, 1846, 1868, 1879, 1880, 1881, 1882, 1883, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1909, 1910, 1911, 1912, 1913, 1919, 1921, 1922, 1923, 1929, 1930, 1931, 1932, 1933, 1944, 1945, 1946, 1947, 1948, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2068, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2128, 2129, 2230, 2239, 2249, 2252], "permut": [13, 16, 17, 44, 45, 92, 93, 1868, 1894, 1895, 1896, 1897, 1898, 1929, 1930, 1931, 1932, 1933], "__abs__": [13, 16, 17, 62, 67, 68], "variant": [13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 118, 119, 130, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 224, 225, 231, 232, 235, 236, 243, 244, 249, 250, 251, 253, 259, 260, 261, 263, 264, 265, 269, 270, 274, 275, 276, 278, 282, 283, 284, 286, 287, 289, 292, 294, 300, 301, 302, 303, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 332, 349, 350, 351, 353, 360, 361, 362, 364, 372, 373, 375, 376, 377, 378, 380, 393, 394, 395, 397, 417, 418, 419, 421, 436, 437, 438, 439, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 824, 825, 826, 828, 834, 835, 837, 838, 839, 840, 842, 844, 845, 847, 849, 850, 851, 853, 855, 856, 857, 859, 860, 861, 862, 864, 865, 866, 867, 869, 881, 882, 883, 885, 891, 892, 893, 896, 897, 898, 900, 901, 902, 903, 905, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 922, 923, 924, 925, 927, 928, 929, 930, 932, 969, 970, 971, 973, 979, 980, 981, 983, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1036, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1093, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1128, 1130, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1182, 1185, 1187, 1189, 1214, 1215, 1216, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1276, 1277, 1278, 1280, 1285, 1286, 1287, 1289, 1291, 1293, 1295, 1301, 1302, 1303, 1305, 1312, 1313, 1314, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1326, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1349, 1354, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1445, 1446, 1448, 1449, 1450, 1452, 1453, 1454, 1455, 1458, 1459, 1460, 1463, 1464, 1466, 1467, 1468, 1470, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1490, 1491, 1492, 1494, 1499, 1500, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1519, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1538, 1544, 1545, 1546, 1548, 1549, 1551, 1553, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1603, 1604, 1605, 1606, 1611, 1612, 1613, 1615, 1616, 1621, 1622, 1623, 1626, 1627, 1630, 1631, 1634, 1635, 1639, 1640, 1641, 1642, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1681, 1682, 1683, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1727, 1728, 1729, 1732, 1733, 1734, 1736, 1743, 1744, 1745, 1747, 1753, 1754, 1755, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1768, 1774, 1775, 1776, 1778, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1803, 1809, 1810, 1811, 1812, 1827, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1842, 1843, 1844, 1845, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1974, 1975, 1976, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1998, 2000, 2001, 2002, 2004, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2025, 2026, 2027, 2028, 2029, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2062, 2063, 2064, 2065, 2067, 2069, 2070, 2071, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2083, 2084, 2085, 2087, 2088, 2089, 2091, 2093, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2109, 2110, 2111, 2112, 2115, 2116, 2117, 2119, 2120, 2121, 2122, 2124], "ab": [13, 16, 17, 29, 30, 40, 41, 62, 67, 68, 77, 78, 112, 116, 124, 126, 128, 445, 450, 691, 694, 779, 782, 933, 934, 951, 1103, 1106, 1711, 1764, 1767, 1814, 1818, 1842, 1843, 1844, 1845, 1846, 1953, 1962, 1965, 2126, 2197, 2218], "wrap": [13, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 128, 132, 134, 137, 149, 150, 151, 156, 157, 165, 166, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 224, 225, 231, 232, 235, 236, 243, 244, 249, 250, 251, 253, 259, 260, 261, 263, 264, 265, 269, 270, 274, 275, 276, 278, 282, 283, 284, 286, 287, 289, 292, 294, 300, 301, 302, 303, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 332, 360, 361, 362, 364, 372, 373, 375, 376, 378, 380, 393, 394, 395, 397, 417, 418, 419, 421, 436, 437, 438, 439, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 824, 825, 826, 828, 834, 835, 837, 838, 839, 840, 842, 844, 845, 847, 849, 850, 851, 853, 855, 856, 857, 859, 860, 861, 862, 864, 865, 866, 867, 869, 881, 882, 883, 885, 891, 892, 893, 896, 897, 898, 900, 901, 902, 903, 905, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 922, 923, 924, 925, 927, 928, 929, 930, 932, 969, 970, 971, 973, 979, 980, 981, 983, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1036, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1093, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1128, 1130, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1208, 1214, 1215, 1216, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1276, 1277, 1278, 1280, 1285, 1286, 1287, 1288, 1289, 1291, 1293, 1295, 1301, 1302, 1303, 1305, 1312, 1313, 1314, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1326, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1349, 1354, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1414, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1445, 1446, 1448, 1449, 1450, 1452, 1453, 1454, 1455, 1458, 1459, 1460, 1463, 1464, 1466, 1467, 1468, 1470, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1490, 1491, 1492, 1494, 1497, 1499, 1500, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1519, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1538, 1544, 1545, 1546, 1548, 1549, 1551, 1553, 1561, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1602, 1603, 1604, 1605, 1606, 1611, 1612, 1613, 1615, 1616, 1621, 1622, 1623, 1626, 1627, 1630, 1631, 1634, 1635, 1639, 1640, 1641, 1642, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1681, 1682, 1683, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1727, 1728, 1729, 1732, 1733, 1734, 1736, 1743, 1744, 1745, 1747, 1753, 1754, 1755, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1768, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1803, 1809, 1810, 1811, 1812, 1832, 1833, 1842, 1843, 1845, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1974, 1975, 1976, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1998, 2000, 2001, 2002, 2004, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2025, 2026, 2027, 2028, 2029, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2062, 2063, 2064, 2065, 2067, 2069, 2070, 2071, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2083, 2084, 2085, 2087, 2088, 2089, 2091, 2093, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2109, 2110, 2111, 2112, 2115, 2116, 2117, 2119, 2120, 2121, 2122, 2124, 2125, 2128, 2129, 2130, 2134, 2135, 2140, 2141, 2197, 2220], "minim": [13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 119, 125, 127, 130, 132, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 224, 225, 231, 232, 235, 236, 243, 244, 249, 250, 251, 253, 259, 260, 261, 263, 264, 265, 269, 270, 274, 275, 276, 278, 282, 283, 284, 286, 287, 289, 292, 294, 300, 301, 302, 303, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 332, 360, 361, 362, 364, 372, 373, 376, 378, 393, 394, 395, 397, 417, 418, 419, 421, 436, 437, 438, 439, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 824, 825, 826, 828, 834, 835, 837, 838, 839, 840, 842, 844, 845, 847, 849, 850, 851, 853, 855, 856, 857, 859, 860, 861, 862, 864, 865, 866, 867, 869, 881, 882, 883, 885, 891, 892, 893, 896, 897, 898, 900, 901, 902, 903, 905, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 922, 923, 924, 925, 927, 928, 929, 930, 932, 969, 970, 971, 973, 979, 980, 981, 983, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1036, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1093, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1128, 1130, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1182, 1185, 1187, 1189, 1214, 1215, 1216, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1276, 1277, 1278, 1280, 1285, 1286, 1287, 1289, 1291, 1293, 1295, 1301, 1302, 1303, 1305, 1312, 1313, 1314, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1326, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1349, 1354, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1445, 1446, 1448, 1449, 1450, 1452, 1453, 1454, 1455, 1458, 1459, 1460, 1463, 1464, 1466, 1467, 1468, 1470, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1490, 1491, 1492, 1494, 1499, 1500, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1519, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1538, 1544, 1545, 1546, 1548, 1549, 1551, 1553, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1603, 1604, 1605, 1606, 1611, 1612, 1613, 1615, 1616, 1621, 1622, 1623, 1626, 1627, 1630, 1631, 1634, 1635, 1639, 1640, 1641, 1642, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1681, 1682, 1683, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1727, 1728, 1729, 1732, 1733, 1734, 1736, 1743, 1744, 1745, 1747, 1753, 1754, 1755, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1768, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1803, 1809, 1810, 1811, 1812, 1832, 1833, 1842, 1843, 1845, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1974, 1975, 1976, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1998, 2000, 2001, 2002, 2004, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2025, 2026, 2027, 2028, 2029, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2062, 2063, 2064, 2065, 2067, 2069, 2070, 2071, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2083, 2084, 2085, 2087, 2088, 2089, 2091, 2093, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2109, 2110, 2111, 2112, 2115, 2116, 2117, 2119, 2120, 2121, 2122, 2124, 2132, 2140], "input": [13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 112, 113, 114, 116, 117, 118, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 149, 150, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 353, 360, 361, 362, 363, 364, 367, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 410, 414, 416, 417, 420, 435, 436, 437, 438, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 770, 771, 772, 773, 774, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 843, 849, 850, 851, 852, 853, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 878, 879, 880, 881, 882, 883, 884, 885, 887, 889, 891, 894, 896, 897, 898, 899, 900, 901, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 917, 918, 920, 921, 922, 923, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 939, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 969, 970, 971, 972, 973, 974, 977, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1214, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1489, 1490, 1491, 1493, 1499, 1500, 1502, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1558, 1563, 1565, 1566, 1567, 1568, 1570, 1571, 1575, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1597, 1599, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1699, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1917, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1955, 1957, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2019, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2135, 2138, 2151, 2153, 2154, 2155, 2156, 2158, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2186, 2187, 2190, 2191, 2197, 2202, 2203, 2216, 2217, 2218, 2219, 2244, 2246, 2276, 2278, 2280], "numer": [13, 16, 17, 23, 24, 25, 26, 29, 30, 32, 33, 40, 41, 48, 49, 50, 51, 56, 57, 62, 67, 68, 73, 74, 77, 78, 79, 80, 81, 88, 89, 96, 97, 98, 99, 102, 103, 116, 124, 126, 127, 128, 129, 130, 132, 136, 219, 264, 265, 267, 305, 313, 314, 315, 316, 317, 445, 446, 447, 448, 449, 450, 461, 462, 463, 464, 465, 521, 522, 523, 524, 525, 541, 544, 561, 562, 564, 566, 567, 568, 569, 570, 571, 574, 586, 589, 591, 594, 596, 599, 606, 609, 646, 649, 651, 654, 671, 673, 674, 676, 677, 678, 680, 681, 684, 686, 687, 688, 690, 691, 694, 706, 709, 711, 712, 713, 715, 716, 717, 718, 719, 720, 736, 739, 741, 742, 744, 745, 756, 760, 761, 765, 824, 826, 827, 828, 1306, 1308, 1414, 1487, 1488, 1556, 1557, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1711, 1717, 1718, 1719, 1720, 1721, 1748, 1751, 1759, 1760, 1762, 1784, 1787, 1799, 1802, 1809, 1811, 1813, 1819, 1822, 1827, 1831, 1837, 1841, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2021, 2022, 2023, 2025, 2026, 2027, 2028, 2029, 2053, 2055, 2057, 2068, 2083, 2084, 2086, 2095, 2098, 2104, 2108, 2131, 2134, 2140, 2151, 2159, 2230, 2238, 2239, 2244, 2247, 2249, 2250, 2256], "element": [13, 14, 15, 16, 17, 23, 24, 29, 30, 31, 32, 33, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 52, 53, 56, 57, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 77, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 96, 97, 98, 99, 100, 101, 104, 105, 119, 127, 128, 130, 132, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 231, 233, 248, 249, 250, 251, 252, 253, 287, 289, 291, 292, 294, 296, 349, 351, 353, 360, 362, 364, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 772, 773, 779, 782, 784, 787, 789, 791, 793, 794, 796, 798, 799, 801, 803, 829, 830, 831, 832, 833, 838, 840, 842, 860, 861, 862, 864, 870, 876, 877, 918, 921, 923, 924, 925, 926, 927, 933, 934, 935, 936, 941, 942, 943, 944, 945, 946, 947, 951, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 969, 970, 971, 972, 973, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1054, 1055, 1056, 1057, 1058, 1069, 1070, 1071, 1073, 1074, 1076, 1077, 1078, 1103, 1106, 1108, 1109, 1110, 1111, 1112, 1121, 1125, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1164, 1167, 1168, 1173, 1174, 1175, 1176, 1177, 1190, 1198, 1199, 1200, 1201, 1204, 1211, 1234, 1235, 1236, 1237, 1238, 1251, 1253, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1265, 1266, 1267, 1268, 1269, 1270, 1276, 1278, 1279, 1280, 1312, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1349, 1352, 1353, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1374, 1375, 1378, 1379, 1382, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1414, 1422, 1425, 1433, 1435, 1436, 1437, 1438, 1441, 1473, 1474, 1475, 1476, 1477, 1565, 1566, 1567, 1569, 1570, 1572, 1574, 1575, 1577, 1578, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1609, 1638, 1646, 1647, 1686, 1687, 1688, 1689, 1690, 1711, 1717, 1718, 1719, 1720, 1721, 1727, 1730, 1737, 1738, 1741, 1759, 1762, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1809, 1813, 1868, 1869, 1870, 1871, 1872, 1873, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1922, 1953, 1954, 1957, 1963, 1978, 1979, 1980, 1981, 1982, 1983, 2005, 2016, 2019, 2021, 2022, 2023, 2024, 2025, 2026, 2028, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2058, 2061, 2063, 2066, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2082, 2083, 2086, 2087, 2088, 2090, 2091, 2094, 2095, 2098, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2118, 2120, 2123, 2128, 2129, 2138, 2161, 2169, 2186, 2187, 2197, 2200, 2230, 2234, 2238, 2239, 2240, 2241, 2249, 2257, 2258], "__add__": [13, 16, 17, 62, 67, 68, 112, 114, 118, 119, 122, 126, 127, 134], "broadcast": [13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 114, 116, 118, 119, 128, 129, 132, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 219, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 274, 275, 276, 277, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 410, 436, 437, 438, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 771, 772, 773, 774, 777, 804, 805, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 844, 845, 846, 847, 849, 850, 851, 852, 853, 855, 858, 865, 866, 867, 868, 869, 870, 871, 887, 889, 891, 894, 906, 907, 933, 936, 937, 938, 939, 943, 953, 958, 960, 964, 967, 974, 977, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 1009, 1010, 1012, 1029, 1030, 1031, 1069, 1070, 1079, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1147, 1154, 1157, 1164, 1165, 1166, 1170, 1171, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1194, 1197, 1209, 1211, 1214, 1217, 1219, 1220, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1281, 1282, 1283, 1284, 1291, 1292, 1294, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1334, 1335, 1336, 1337, 1338, 1349, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1414, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1451, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1515, 1517, 1519, 1521, 1525, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1804, 1807, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1944, 1945, 1946, 1947, 1948, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2019, 2026, 2027, 2028, 2029, 2030, 2031, 2047, 2051, 2053, 2055, 2057, 2068, 2069, 2072, 2074, 2077, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2230, 2231], "wise": [13, 14, 15, 16, 17, 29, 30, 31, 40, 41, 62, 63, 64, 67, 68, 77, 78, 79, 88, 89, 130, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 445, 446, 449, 451, 454, 461, 462, 463, 464, 465, 466, 469, 476, 479, 481, 484, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 536, 537, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 666, 669, 671, 672, 673, 674, 675, 681, 682, 683, 684, 685, 691, 692, 693, 694, 695, 696, 697, 701, 702, 703, 705, 706, 707, 708, 709, 710, 741, 742, 743, 744, 745, 761, 762, 763, 764, 765, 769, 772, 779, 782, 784, 787, 829, 830, 831, 832, 833, 906, 907, 913, 916, 933, 934, 935, 936, 941, 942, 944, 945, 946, 947, 951, 952, 953, 954, 957, 959, 962, 969, 970, 971, 972, 973, 989, 990, 991, 992, 993, 1009, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1036, 1054, 1055, 1056, 1057, 1058, 1064, 1067, 1069, 1071, 1073, 1074, 1077, 1103, 1106, 1121, 1125, 1131, 1138, 1139, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1173, 1174, 1175, 1176, 1177, 1190, 1196, 1201, 1203, 1204, 1213, 1276, 1278, 1279, 1280, 1317, 1318, 1319, 1320, 1321, 1329, 1330, 1331, 1332, 1333, 1362, 1363, 1364, 1365, 1398, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1717, 1718, 1719, 1721, 1868, 1869, 1872, 2177, 2180], "sum": [13, 16, 17, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 56, 57, 62, 65, 66, 67, 68, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 104, 105, 114, 116, 123, 125, 126, 132, 410, 435, 445, 461, 462, 463, 464, 465, 636, 639, 741, 742, 744, 933, 956, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1349, 1353, 1354, 1414, 1453, 1454, 1455, 1456, 1457, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1647, 1686, 1689, 1706, 1707, 1708, 1709, 1710, 1711, 1764, 1767, 1809, 1811, 1813, 1827, 1828, 1829, 1830, 1831, 1842, 1843, 1844, 1845, 1846, 1852, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 2068, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2082, 2151, 2156, 2159], "promot": [13, 16, 17, 25, 26, 29, 30, 31, 40, 41, 62, 67, 68, 73, 74, 77, 78, 79, 88, 89, 102, 103, 111, 119, 120, 123, 305, 313, 314, 315, 316, 317, 328, 329, 330, 331, 332, 391, 392, 393, 396, 403, 445, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 541, 542, 543, 544, 545, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 571, 572, 573, 575, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 656, 659, 671, 672, 673, 674, 675, 691, 692, 693, 694, 695, 706, 707, 709, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 761, 762, 763, 764, 765, 933, 943, 960, 1009, 1012, 1334, 1335, 1336, 1337, 1338, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1748, 1751, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1762, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1784, 1787, 1789, 1791, 1792, 1793, 1799, 1802, 1804, 1807, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1868, 1874, 1877, 1924, 1927, 2053, 2055, 2057, 2068, 2087, 2090, 2100, 2103, 2230, 2238, 2244, 2245], "y": [13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 113, 114, 118, 126, 127, 128, 129, 130, 132, 134, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 231, 233, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 267, 274, 275, 276, 277, 278, 279, 280, 282, 285, 300, 304, 305, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 344, 345, 346, 349, 351, 352, 353, 360, 362, 363, 364, 393, 395, 396, 410, 413, 417, 418, 419, 420, 421, 425, 429, 430, 431, 434, 436, 437, 438, 439, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 596, 598, 601, 603, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 636, 637, 638, 639, 640, 641, 642, 644, 646, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 772, 773, 774, 778, 779, 780, 781, 782, 783, 834, 835, 836, 837, 860, 861, 862, 863, 864, 870, 871, 881, 884, 906, 913, 914, 915, 916, 923, 924, 925, 926, 927, 933, 934, 960, 961, 962, 979, 980, 981, 982, 983, 1037, 1038, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1073, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1121, 1123, 1125, 1126, 1128, 1130, 1131, 1136, 1138, 1154, 1155, 1159, 1161, 1163, 1164, 1168, 1183, 1184, 1185, 1187, 1189, 1190, 1196, 1203, 1208, 1210, 1211, 1213, 1245, 1247, 1249, 1256, 1258, 1260, 1285, 1288, 1301, 1303, 1305, 1317, 1318, 1319, 1320, 1321, 1334, 1335, 1336, 1337, 1338, 1349, 1351, 1357, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1458, 1459, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1495, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1542, 1556, 1557, 1559, 1562, 1563, 1565, 1566, 1567, 1568, 1569, 1575, 1579, 1581, 1582, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1600, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1639, 1640, 1641, 1642, 1643, 1647, 1654, 1656, 1657, 1658, 1664, 1665, 1666, 1667, 1668, 1674, 1675, 1676, 1677, 1678, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1743, 1744, 1745, 1746, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1774, 1776, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1799, 1800, 1801, 1802, 1803, 1809, 1810, 1812, 1814, 1818, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1842, 1843, 1844, 1845, 1846, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1957, 1960, 1961, 1963, 1971, 1973, 1974, 1977, 1978, 1979, 1982, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2019, 2021, 2024, 2026, 2030, 2031, 2032, 2033, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124], "z": [13, 16, 17, 23, 24, 29, 30, 31, 32, 33, 40, 41, 42, 43, 48, 49, 52, 53, 56, 57, 62, 67, 68, 71, 72, 77, 78, 79, 80, 81, 88, 89, 90, 91, 92, 93, 96, 97, 104, 105, 113, 114, 118, 132, 134, 219, 254, 257, 259, 261, 263, 274, 275, 276, 277, 278, 410, 425, 445, 461, 462, 463, 464, 465, 481, 482, 483, 484, 485, 491, 492, 494, 495, 506, 507, 508, 509, 510, 516, 518, 519, 520, 541, 543, 576, 578, 579, 580, 581, 582, 583, 584, 585, 591, 593, 594, 595, 596, 599, 600, 601, 604, 605, 606, 608, 609, 610, 611, 614, 636, 637, 638, 639, 640, 641, 642, 643, 645, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 741, 742, 743, 744, 745, 769, 770, 784, 785, 786, 787, 788, 834, 835, 836, 837, 844, 845, 847, 849, 852, 853, 860, 862, 864, 933, 935, 937, 958, 1064, 1066, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1312, 1315, 1316, 1414, 1422, 1423, 1425, 1466, 1467, 1468, 1469, 1470, 1473, 1476, 1478, 1479, 1480, 1481, 1505, 1508, 1509, 1510, 1513, 1514, 1549, 1551, 1552, 1553, 1563, 1565, 1566, 1567, 1568, 1569, 1596, 1608, 1711, 1717, 1718, 1719, 1720, 1721, 1759, 1760, 1762, 1789, 1790, 1809, 1810, 1812, 1842, 1846, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1872, 1924, 1928, 1953, 1957, 1961, 1963, 1971, 1978, 1984, 1985, 1986, 1989, 1990, 1991, 1992, 1994, 1995, 1996, 1997, 2005, 2006, 2009, 2031, 2032, 2034, 2036, 2068, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2091, 2093, 2094, 2095, 2096, 2098, 2100, 2101, 2103, 2151, 2155], "__eq__": [13, 16, 17, 62, 67, 68], "equal": [13, 16, 17, 23, 24, 25, 26, 29, 30, 31, 32, 33, 40, 41, 44, 45, 48, 49, 54, 55, 56, 57, 62, 65, 66, 67, 68, 73, 74, 77, 78, 79, 80, 81, 88, 89, 92, 93, 96, 97, 102, 103, 114, 116, 118, 120, 127, 128, 219, 240, 241, 248, 249, 250, 252, 305, 313, 314, 315, 316, 317, 445, 501, 504, 511, 514, 550, 586, 589, 591, 594, 691, 694, 711, 714, 779, 780, 781, 782, 783, 834, 835, 836, 837, 887, 889, 908, 909, 910, 911, 912, 933, 934, 951, 1059, 1060, 1061, 1062, 1063, 1103, 1104, 1105, 1106, 1107, 1126, 1129, 1131, 1137, 1183, 1184, 1185, 1188, 1190, 1195, 1202, 1212, 1281, 1283, 1284, 1393, 1394, 1395, 1396, 1397, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1608, 1711, 1732, 1733, 1735, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1789, 1791, 1792, 1793, 1799, 1802, 1868, 1869, 1872, 1879, 1880, 1881, 1882, 1883, 1914, 1915, 1916, 1917, 1918, 1944, 1945, 1946, 1947, 1948, 1978, 1994, 1995, 1996, 1997, 1998, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2068, 2087, 2088, 2090, 2100, 2103, 2104, 2108, 2109, 2111, 2113, 2151, 2159, 2276, 2279, 2280], "x1": [13, 16, 17, 25, 26, 29, 30, 31, 32, 33, 40, 41, 50, 51, 62, 67, 68, 73, 74, 77, 78, 79, 80, 81, 88, 89, 98, 99, 102, 103, 111, 116, 118, 120, 122, 125, 126, 219, 240, 241, 282, 285, 300, 304, 305, 318, 319, 320, 321, 322, 344, 346, 392, 403, 410, 429, 445, 461, 464, 465, 481, 484, 485, 491, 494, 495, 501, 504, 505, 506, 509, 510, 511, 514, 515, 516, 519, 520, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 584, 585, 606, 607, 609, 610, 611, 612, 613, 614, 615, 636, 639, 640, 641, 644, 645, 651, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 681, 682, 683, 684, 685, 691, 694, 695, 706, 707, 708, 709, 710, 741, 742, 745, 761, 762, 763, 764, 765, 779, 780, 781, 782, 783, 855, 856, 857, 858, 859, 870, 871, 933, 934, 938, 943, 944, 945, 946, 947, 949, 952, 953, 954, 957, 962, 979, 982, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1036, 1054, 1055, 1056, 1057, 1058, 1069, 1072, 1073, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1173, 1174, 1175, 1176, 1177, 1190, 1201, 1276, 1277, 1278, 1279, 1280, 1403, 1405, 1407, 1408, 1409, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1425, 1426, 1711, 1717, 1718, 1719, 1720, 1721, 1748, 1751, 1752, 1759, 1760, 1762, 1763, 1784, 1787, 1788, 1804, 1807, 1808, 1819, 1820, 1822, 1823, 1826, 1837, 1838, 1841, 2005, 2026, 2027, 2028, 2029, 2030, 2052, 2058, 2061, 2062, 2197, 2218, 2285, 2291, 2297, 2301, 2302, 2303, 2304], "bool": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 118, 120, 125, 126, 128, 129, 132, 137, 169, 171, 172, 173, 174, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 219, 224, 225, 226, 231, 232, 233, 248, 249, 251, 253, 254, 257, 259, 260, 261, 262, 263, 264, 267, 274, 276, 278, 282, 284, 286, 300, 301, 303, 305, 313, 314, 315, 316, 317, 318, 320, 322, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 342, 343, 344, 346, 354, 355, 357, 358, 360, 362, 364, 365, 366, 367, 368, 370, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 389, 391, 393, 395, 397, 399, 405, 409, 410, 416, 417, 418, 419, 420, 426, 427, 430, 431, 435, 436, 437, 439, 442, 444, 445, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 505, 506, 508, 509, 510, 511, 513, 515, 516, 518, 519, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 547, 548, 549, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 675, 676, 678, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 707, 708, 709, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 798, 799, 800, 801, 802, 803, 819, 823, 824, 826, 828, 829, 831, 833, 849, 851, 853, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 879, 880, 887, 888, 889, 890, 896, 900, 906, 907, 908, 912, 923, 924, 925, 926, 927, 933, 934, 935, 939, 951, 955, 956, 957, 962, 963, 974, 978, 979, 981, 983, 999, 1003, 1037, 1038, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1059, 1063, 1069, 1071, 1073, 1089, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1126, 1128, 1130, 1131, 1137, 1138, 1139, 1144, 1154, 1158, 1164, 1168, 1185, 1187, 1189, 1190, 1191, 1193, 1211, 1234, 1235, 1236, 1237, 1238, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1334, 1336, 1338, 1349, 1352, 1353, 1354, 1355, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1369, 1370, 1371, 1393, 1394, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1445, 1446, 1447, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1484, 1489, 1490, 1491, 1492, 1493, 1494, 1497, 1499, 1500, 1502, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1544, 1546, 1548, 1549, 1551, 1553, 1563, 1564, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1582, 1586, 1587, 1589, 1590, 1591, 1592, 1594, 1603, 1604, 1605, 1606, 1607, 1609, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1695, 1706, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1719, 1721, 1743, 1745, 1747, 1753, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1774, 1776, 1778, 1779, 1782, 1794, 1796, 1798, 1799, 1801, 1803, 1809, 1810, 1811, 1812, 1813, 1827, 1828, 1830, 1832, 1833, 1834, 1835, 1836, 1842, 1843, 1844, 1845, 1846, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1868, 1869, 1871, 1873, 1884, 1888, 1889, 1891, 1893, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1960, 1961, 1962, 1964, 1965, 1966, 1971, 1972, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2197, 2216, 2217, 2218, 2219, 2221, 2223, 2230, 2233, 2238, 2244, 2247, 2249, 2256], "x2": [13, 16, 17, 25, 26, 29, 30, 31, 32, 33, 40, 41, 50, 51, 62, 67, 68, 73, 74, 77, 78, 79, 80, 81, 88, 89, 98, 99, 111, 116, 118, 120, 122, 125, 126, 219, 282, 285, 300, 304, 305, 318, 319, 320, 321, 322, 392, 403, 410, 429, 445, 461, 462, 463, 464, 465, 481, 482, 483, 484, 485, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 681, 682, 683, 684, 685, 691, 692, 693, 694, 695, 706, 707, 708, 709, 710, 741, 742, 743, 744, 745, 761, 762, 763, 764, 765, 779, 780, 781, 782, 783, 855, 856, 857, 858, 859, 933, 934, 938, 943, 944, 945, 946, 947, 949, 952, 953, 954, 957, 962, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1036, 1054, 1055, 1056, 1057, 1058, 1069, 1070, 1071, 1072, 1073, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1173, 1174, 1175, 1176, 1177, 1190, 1201, 1276, 1277, 1278, 1279, 1280, 1329, 1330, 1403, 1405, 1407, 1408, 1409, 1410, 1414, 1415, 1416, 1417, 1418, 1419, 1711, 1717, 1718, 1719, 1720, 1721, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1784, 1785, 1786, 1787, 1788, 1804, 1805, 1806, 1807, 1808, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1837, 1838, 1839, 1840, 1841, 2005, 2026, 2027, 2028, 2029, 2030, 2197, 2218, 2285, 2291, 2297, 2301, 2302, 2303, 2304], "true": [13, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 132, 135, 136, 137, 169, 171, 173, 174, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 219, 221, 223, 224, 227, 231, 232, 233, 235, 237, 239, 240, 242, 243, 245, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 273, 274, 276, 278, 279, 281, 282, 284, 286, 287, 288, 290, 292, 293, 295, 297, 298, 300, 301, 303, 305, 313, 314, 315, 316, 317, 318, 320, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 337, 339, 341, 344, 345, 347, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 393, 395, 397, 409, 410, 416, 417, 418, 419, 420, 421, 423, 424, 427, 430, 431, 432, 436, 437, 439, 444, 445, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 547, 548, 549, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 675, 676, 678, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 707, 708, 709, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 774, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 823, 824, 826, 828, 829, 831, 833, 834, 835, 836, 837, 838, 842, 844, 847, 849, 851, 853, 855, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 879, 880, 881, 885, 887, 888, 889, 890, 891, 893, 895, 896, 900, 901, 905, 906, 907, 908, 912, 913, 915, 917, 918, 920, 922, 923, 924, 925, 926, 927, 928, 930, 932, 933, 934, 935, 939, 951, 955, 956, 959, 964, 966, 968, 969, 973, 974, 978, 979, 981, 983, 984, 988, 989, 993, 994, 998, 999, 1003, 1004, 1008, 1009, 1013, 1014, 1018, 1019, 1023, 1024, 1028, 1032, 1036, 1037, 1038, 1039, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1058, 1059, 1063, 1064, 1066, 1068, 1069, 1071, 1073, 1074, 1078, 1079, 1083, 1084, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1125, 1126, 1128, 1130, 1131, 1137, 1138, 1139, 1144, 1149, 1151, 1153, 1154, 1158, 1159, 1161, 1163, 1164, 1168, 1173, 1177, 1183, 1184, 1185, 1187, 1189, 1190, 1211, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1226, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1244, 1245, 1247, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1276, 1278, 1280, 1281, 1282, 1285, 1287, 1289, 1291, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1338, 1349, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1369, 1370, 1371, 1375, 1376, 1377, 1379, 1380, 1381, 1383, 1384, 1389, 1390, 1391, 1393, 1394, 1398, 1399, 1401, 1403, 1404, 1406, 1408, 1409, 1411, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1445, 1447, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1477, 1478, 1480, 1482, 1484, 1486, 1489, 1490, 1491, 1492, 1493, 1494, 1497, 1499, 1500, 1501, 1502, 1503, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1536, 1537, 1538, 1544, 1546, 1548, 1549, 1551, 1553, 1554, 1558, 1560, 1561, 1563, 1564, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1582, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1594, 1597, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1609, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1669, 1671, 1673, 1674, 1676, 1678, 1681, 1683, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1695, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1719, 1721, 1722, 1724, 1726, 1727, 1729, 1731, 1732, 1734, 1736, 1738, 1740, 1742, 1743, 1745, 1747, 1748, 1750, 1752, 1753, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1773, 1774, 1776, 1778, 1779, 1781, 1782, 1783, 1784, 1786, 1788, 1794, 1796, 1798, 1799, 1801, 1803, 1804, 1806, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1817, 1819, 1820, 1821, 1827, 1828, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1871, 1873, 1874, 1876, 1878, 1879, 1881, 1883, 1884, 1886, 1888, 1889, 1891, 1893, 1894, 1896, 1898, 1899, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1929, 1930, 1932, 1934, 1935, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1960, 1961, 1962, 1964, 1965, 1966, 1967, 1971, 1972, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2149, 2150, 2161, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2186, 2189, 2190, 2191, 2197, 2201, 2216, 2217, 2218, 2219, 2230, 2232, 2233, 2234, 2238, 2239, 2240, 2241, 2244, 2245, 2247, 2249, 2252, 2255, 2256, 2260, 2261, 2285, 2306, 2312, 2322], "fals": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 50, 51, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 116, 118, 120, 125, 126, 127, 128, 132, 135, 136, 137, 150, 156, 169, 171, 172, 173, 174, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 219, 221, 223, 224, 227, 235, 237, 239, 240, 242, 243, 245, 247, 248, 249, 251, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 278, 279, 281, 282, 284, 286, 287, 288, 290, 292, 293, 295, 297, 298, 300, 301, 303, 305, 313, 314, 315, 316, 317, 318, 320, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 353, 354, 356, 357, 359, 360, 362, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 395, 397, 410, 416, 417, 418, 419, 420, 421, 426, 427, 430, 431, 435, 436, 437, 439, 442, 444, 445, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 547, 548, 549, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 675, 676, 678, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 768, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 823, 824, 826, 828, 829, 831, 833, 834, 835, 837, 838, 842, 844, 847, 849, 851, 853, 855, 859, 860, 861, 864, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 879, 880, 881, 885, 887, 888, 889, 890, 891, 893, 895, 896, 900, 901, 905, 906, 908, 912, 913, 915, 917, 918, 920, 922, 923, 924, 925, 926, 927, 928, 930, 932, 933, 934, 935, 939, 951, 955, 956, 959, 964, 966, 968, 969, 973, 974, 978, 979, 981, 983, 984, 988, 989, 993, 994, 998, 999, 1003, 1004, 1008, 1009, 1013, 1014, 1018, 1019, 1023, 1024, 1028, 1032, 1036, 1037, 1038, 1039, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1058, 1059, 1063, 1064, 1066, 1068, 1069, 1071, 1073, 1074, 1078, 1079, 1083, 1084, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1125, 1126, 1128, 1130, 1131, 1137, 1138, 1144, 1146, 1149, 1151, 1153, 1154, 1158, 1159, 1161, 1163, 1164, 1168, 1173, 1177, 1185, 1187, 1189, 1190, 1211, 1219, 1221, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1244, 1245, 1247, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1276, 1278, 1280, 1281, 1282, 1285, 1287, 1289, 1291, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1338, 1342, 1344, 1349, 1352, 1353, 1354, 1355, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1369, 1370, 1371, 1375, 1376, 1377, 1379, 1380, 1381, 1383, 1384, 1389, 1390, 1391, 1393, 1394, 1398, 1399, 1401, 1403, 1404, 1406, 1408, 1409, 1411, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1445, 1446, 1447, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1484, 1486, 1489, 1490, 1491, 1492, 1493, 1494, 1497, 1499, 1500, 1501, 1502, 1503, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1540, 1544, 1546, 1548, 1549, 1551, 1553, 1554, 1558, 1560, 1561, 1563, 1564, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1597, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1609, 1615, 1617, 1618, 1619, 1621, 1622, 1623, 1634, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1669, 1671, 1673, 1674, 1676, 1678, 1681, 1683, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1695, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1719, 1721, 1722, 1724, 1726, 1727, 1729, 1731, 1732, 1734, 1736, 1738, 1740, 1742, 1743, 1745, 1747, 1748, 1750, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1773, 1774, 1776, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1788, 1794, 1796, 1798, 1799, 1801, 1803, 1804, 1805, 1806, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1817, 1819, 1820, 1821, 1827, 1828, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1868, 1869, 1871, 1873, 1874, 1876, 1878, 1879, 1881, 1883, 1884, 1886, 1888, 1889, 1891, 1893, 1894, 1896, 1898, 1899, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1929, 1930, 1932, 1934, 1935, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1960, 1964, 1965, 1966, 1967, 1978, 1979, 1981, 1982, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2128, 2129, 2143, 2145, 2146, 2147, 2148, 2149, 2150, 2173, 2174, 2177, 2178, 2179, 2180, 2181, 2182, 2186, 2189, 2190, 2191, 2197, 2218, 2219, 2221, 2223, 2230, 2232, 2233, 2234, 2235, 2236, 2238, 2239, 2240, 2244, 2245, 2247, 2249, 2252, 2255, 2256, 2259, 2260, 2261, 2276, 2278, 2285, 2286, 2288, 2290, 2291, 2292, 2293, 2297, 2301, 2312, 2322], "__ge__": [13, 16, 17, 62, 67, 68], "greater_equ": [13, 16, 17, 29, 30, 62, 67, 68, 77, 78, 445, 585, 636, 638, 640], "bitwise_xor": [13, 16, 17, 29, 30, 77, 78, 445, 520], "mix": [13, 16, 17, 25, 26, 29, 30, 62, 67, 68, 73, 74, 77, 78, 80, 81, 90, 91, 96, 97, 110, 118, 125, 128, 130, 132, 305, 318, 319, 320, 321, 322, 393, 396, 445, 491, 494, 506, 509, 511, 514, 516, 519, 541, 542, 544, 546, 547, 548, 549, 571, 572, 573, 574, 575, 576, 579, 581, 584, 606, 609, 611, 612, 613, 656, 659, 671, 672, 673, 674, 681, 682, 683, 684, 706, 707, 708, 709, 710, 834, 836, 1183, 1184, 1414, 1463, 1465, 1473, 1476, 1477, 1478, 1481, 1581, 1584, 1591, 1595, 1647, 1649, 1652, 1659, 1662, 1674, 1677, 1681, 1684, 1691, 1694, 1701, 1704, 1706, 1709, 1711, 1712, 1715, 1819, 1822, 1852, 1853, 1856, 1857, 1858, 1862, 1863, 1866, 1867, 1868, 1869, 1872, 1973, 1974, 1977, 1984, 1988, 1989, 1993, 1994, 1998, 2005, 2026, 2030, 2068, 2079, 2082, 2087, 2090, 2100, 2103, 2125, 2134, 2138, 2140], "__gt__": [13, 16, 17, 62, 67, 68, 130], "__le__": [13, 16, 17, 62, 67, 68], "less_equ": [13, 16, 17, 29, 30, 62, 67, 68, 77, 78, 120, 445, 615], "__lt__": [13, 16, 17, 62, 67, 68], "__ne__": [13, 16, 17, 62, 67, 68], "not_equ": [13, 16, 17, 29, 30, 62, 67, 68, 77, 78, 445, 685], "__pow__": [13, 16, 17, 62, 67, 68, 134], "power": [13, 16, 17, 31, 32, 33, 40, 41, 62, 67, 68, 79, 80, 81, 88, 89, 134, 135, 136, 445, 511, 514, 556, 559, 691, 694, 870, 878, 933, 941, 943, 969, 970, 971, 972, 973, 1009, 1010, 1011, 1012, 1013, 1389, 1392, 1414, 1487, 1556, 1570, 1571, 1572, 1573, 1574, 1711, 1769, 1772, 1832, 1833, 1834, 1835, 1836, 1953, 1960, 2134, 2136, 2140, 2151, 2159], "pow": [13, 16, 17, 29, 30, 62, 67, 68, 77, 78, 111, 445, 695], "float": [13, 14, 15, 16, 17, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 56, 57, 63, 64, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 104, 105, 111, 114, 116, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 132, 134, 136, 169, 177, 178, 180, 207, 208, 209, 210, 211, 213, 219, 221, 222, 224, 226, 234, 240, 241, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 279, 280, 297, 299, 305, 313, 314, 315, 316, 317, 333, 335, 336, 339, 340, 349, 350, 352, 365, 372, 375, 376, 377, 378, 379, 380, 392, 393, 396, 400, 406, 410, 422, 430, 433, 434, 441, 444, 445, 446, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 516, 519, 521, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 541, 544, 546, 547, 549, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 571, 574, 576, 579, 581, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 604, 606, 609, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 671, 674, 676, 679, 681, 682, 684, 686, 689, 691, 694, 701, 704, 706, 709, 711, 714, 716, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 760, 761, 765, 769, 770, 771, 773, 779, 780, 781, 782, 783, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 870, 871, 872, 873, 874, 875, 901, 902, 903, 904, 905, 906, 907, 923, 924, 925, 926, 927, 933, 934, 936, 941, 942, 943, 951, 954, 955, 957, 958, 959, 960, 961, 963, 969, 970, 972, 973, 979, 982, 989, 990, 992, 1009, 1010, 1012, 1013, 1029, 1031, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1089, 1091, 1092, 1093, 1103, 1104, 1105, 1106, 1107, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1131, 1138, 1139, 1164, 1168, 1173, 1174, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1251, 1252, 1253, 1254, 1255, 1276, 1279, 1281, 1282, 1284, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1349, 1355, 1362, 1363, 1364, 1365, 1366, 1372, 1373, 1374, 1408, 1412, 1414, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1466, 1467, 1468, 1469, 1470, 1487, 1488, 1495, 1499, 1501, 1502, 1503, 1556, 1557, 1559, 1565, 1568, 1570, 1571, 1572, 1573, 1574, 1603, 1604, 1605, 1606, 1607, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1647, 1686, 1687, 1688, 1689, 1690, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1725, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1827, 1828, 1829, 1830, 1842, 1843, 1844, 1845, 1846, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1949, 1950, 1951, 1952, 1953, 1960, 1973, 1974, 1975, 1976, 1977, 1978, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2068, 2069, 2072, 2074, 2077, 2083, 2086, 2087, 2088, 2089, 2090, 2091, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2151, 2152, 2155, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2197, 2216, 2230, 2234, 2235, 2238, 2239, 2241, 2244, 2247, 2249, 2250, 2260, 2263], "69678056": [13, 16, 17], "59876156": [13, 16, 17], "37": [13, 14, 15, 16, 17, 29, 30, 31, 63, 64, 77, 78, 79, 182, 183, 184, 186, 445, 471, 474, 475, 511, 514, 711, 712, 726, 728, 730, 746, 750, 814, 818, 1349, 1356, 1383, 1384, 1385, 1386, 1387, 1647, 1691, 1694, 1711, 1769, 1772, 1953, 1962, 1978, 1989, 1992], "82660675": [13, 16, 17], "__radd__": [13, 16, 17, 62, 67, 68, 118, 119, 126], "__rrshift__": [13, 16, 17, 62, 67, 68], "bitwise_right_shift": [13, 16, 17, 29, 30, 77, 78, 445, 515], "32": [13, 16, 17, 29, 30, 31, 48, 49, 62, 67, 68, 77, 78, 79, 96, 97, 115, 135, 169, 177, 180, 305, 348, 445, 456, 457, 458, 459, 460, 511, 514, 516, 517, 711, 712, 716, 717, 809, 812, 814, 815, 817, 849, 852, 881, 882, 883, 884, 885, 933, 937, 941, 958, 969, 970, 971, 972, 973, 1131, 1133, 1134, 1136, 1149, 1151, 1153, 1312, 1315, 1414, 1448, 1451, 1510, 1513, 1647, 1654, 1657, 1664, 1667, 1669, 1672, 1674, 1677, 1681, 1684, 1691, 1694, 1711, 1759, 1762, 1784, 1787, 1978, 1984, 1986, 1988, 1989, 1990, 1991, 1993, 1994, 1996, 1997, 1998, 2005, 2026, 2030, 2068, 2079, 2082, 2139, 2230, 2234, 2238, 2239, 2260, 2261, 2262, 2263], "__rshift__": [13, 16, 17, 62, 67, 68], "__rsub__": [13, 16, 17, 62, 67, 68], "subtract": [13, 16, 17, 29, 30, 62, 67, 68, 77, 78, 112, 114, 118, 445, 742, 1190, 1208, 1285, 1288], "__sub__": [13, 16, 17, 62, 67, 68, 112, 114, 118, 122, 134], "__truediv__": [13, 16, 17, 62, 67, 68, 112, 114, 118], "divid": [13, 16, 17, 29, 30, 32, 33, 44, 45, 62, 65, 66, 67, 68, 77, 78, 92, 93, 112, 114, 118, 128, 445, 545, 571, 574, 1414, 1565, 1566, 1568, 1868, 1914, 1915, 1916, 1917, 1918], "25": [13, 16, 17, 29, 30, 32, 33, 40, 41, 42, 43, 48, 49, 56, 57, 62, 63, 64, 67, 68, 77, 78, 79, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 104, 105, 114, 207, 209, 211, 219, 254, 257, 445, 461, 463, 511, 514, 541, 543, 544, 545, 551, 553, 555, 671, 673, 675, 691, 692, 694, 701, 703, 705, 711, 712, 726, 729, 731, 733, 735, 736, 737, 739, 756, 757, 759, 760, 784, 786, 788, 870, 873, 1050, 1052, 1084, 1086, 1088, 1149, 1151, 1153, 1301, 1303, 1305, 1414, 1505, 1508, 1509, 1510, 1513, 1514, 1549, 1550, 1565, 1566, 1568, 1569, 1649, 1651, 1653, 1711, 1712, 1713, 1715, 1732, 1735, 1753, 1755, 1756, 1757, 1832, 1833, 1834, 1835, 1836, 1842, 1846, 1852, 1858, 1859, 1861, 1953, 1955, 1973, 1974, 1976, 1977, 1984, 1985, 1989, 1990, 1991, 1993, 1994, 1996, 2068, 2074, 2075, 2079, 2082, 2087, 2088, 2109, 2112], "40000001": [13, 16, 17, 62, 63, 64, 67, 68, 169, 177, 180, 192, 194, 195, 196, 2031, 2037, 2041], "__xor__": [13, 16, 17, 62, 67, 68], "boolean": [13, 16, 17, 23, 24, 25, 26, 29, 30, 31, 32, 33, 44, 45, 50, 51, 56, 57, 62, 65, 66, 67, 68, 73, 74, 77, 78, 79, 80, 81, 92, 93, 98, 99, 104, 105, 114, 126, 128, 130, 219, 224, 225, 226, 231, 232, 233, 248, 305, 313, 314, 315, 316, 317, 360, 362, 364, 366, 372, 373, 375, 376, 377, 378, 380, 409, 410, 426, 442, 445, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 879, 880, 933, 951, 1037, 1038, 1101, 1103, 1106, 1108, 1109, 1110, 1111, 1112, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1486, 1499, 1500, 1502, 1504, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1554, 1558, 1560, 1561, 1603, 1604, 1605, 1606, 1607, 1609, 1638, 1646, 1868, 1904, 1905, 1906, 1907, 1908, 1949, 1950, 1951, 1953, 1964, 2016, 2017, 2018, 2020, 2026, 2027, 2029, 2068, 2083, 2085, 2091, 2092, 2093, 2094, 2230, 2232, 2240, 2249, 2252, 2276, 2277, 2278, 2279, 2280], "67": [13, 16, 17, 29, 30, 32, 33, 77, 78, 80, 81, 96, 97, 445, 516, 519, 531, 533, 534, 535, 711, 712, 716, 717, 726, 728, 730, 756, 758, 760, 1414, 1448, 1451, 1453, 1456, 1457, 1565, 1566, 1609, 1620, 1625, 1645, 1994, 1996], "21": [13, 16, 17, 29, 30, 31, 32, 33, 48, 49, 71, 72, 77, 78, 79, 80, 81, 96, 97, 104, 105, 219, 259, 261, 262, 305, 360, 363, 445, 461, 463, 471, 473, 481, 483, 484, 485, 511, 514, 516, 519, 671, 672, 674, 804, 805, 807, 814, 816, 881, 884, 933, 952, 1131, 1132, 1136, 1145, 1149, 1150, 1152, 1153, 1219, 1220, 1222, 1229, 1231, 1233, 1266, 1268, 1270, 1414, 1453, 1456, 1457, 1549, 1550, 1711, 1732, 1735, 1784, 1787, 1852, 1863, 1866, 1953, 1960, 1984, 1986, 1989, 1990, 1991, 2068, 2069, 2072, 2074, 2076, 2078, 2079, 2082], "13": [13, 14, 15, 16, 17, 29, 30, 31, 38, 39, 48, 49, 56, 57, 77, 78, 79, 80, 81, 82, 83, 86, 87, 92, 93, 96, 97, 104, 105, 114, 118, 169, 207, 208, 210, 305, 360, 363, 410, 422, 445, 461, 463, 516, 519, 531, 534, 571, 572, 574, 691, 694, 731, 734, 814, 818, 881, 884, 885, 908, 909, 910, 911, 912, 933, 948, 994, 995, 996, 997, 998, 1039, 1040, 1041, 1042, 1059, 1060, 1061, 1062, 1063, 1131, 1136, 1149, 1151, 1153, 1190, 1195, 1198, 1202, 1266, 1268, 1270, 1291, 1293, 1295, 1393, 1394, 1396, 1414, 1433, 1436, 1437, 1438, 1441, 1442, 1448, 1451, 1453, 1456, 1457, 1510, 1513, 1557, 1565, 1568, 1609, 1611, 1613, 1614, 1647, 1649, 1650, 1651, 1653, 1654, 1655, 1686, 1689, 1691, 1693, 1694, 1695, 1706, 1709, 1711, 1732, 1735, 1784, 1787, 1814, 1818, 1868, 1939, 1940, 1942, 1943, 1984, 1985, 1988, 1989, 1990, 1991, 1993, 1994, 1996, 2005, 2026, 2030, 2031, 2032, 2036, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2082], "79": [13, 16, 17, 32, 33, 80, 81, 96, 97, 445, 516, 519, 541, 544, 881, 884, 1131, 1136, 1414, 1433, 1434, 1436, 1437, 1438, 1439, 1441, 1442, 1994, 1996], "24": [13, 16, 17, 29, 30, 31, 40, 41, 56, 57, 79, 80, 81, 86, 87, 88, 89, 96, 97, 135, 445, 516, 517, 519, 611, 612, 671, 674, 711, 712, 716, 717, 731, 734, 804, 805, 806, 807, 808, 834, 836, 881, 882, 883, 884, 885, 933, 948, 1039, 1040, 1041, 1042, 1131, 1132, 1136, 1145, 1149, 1151, 1154, 1156, 1158, 1183, 1184, 1219, 1220, 1221, 1222, 1223, 1414, 1448, 1451, 1453, 1456, 1457, 1649, 1651, 1653, 1711, 1732, 1735, 1764, 1765, 1766, 1768, 1784, 1787, 1953, 1955, 1984, 1986, 1989, 1991, 1994, 1996, 2068, 2069, 2070, 2072, 2079, 2080, 2082, 2197, 2218], "arang": [13, 16, 17, 31, 40, 41, 56, 57, 62, 67, 68, 79, 88, 89, 116, 219, 254, 257, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 913, 917, 984, 985, 986, 987, 988, 1004, 1006, 1008, 1079, 1080, 1081, 1082, 1083, 1131, 1132, 1133, 1134, 1141, 1142, 1145, 1146, 1147, 1164, 1172, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1250, 1398, 1399, 1414, 1540, 1608, 1711, 1764, 1765, 1766, 1767, 1768, 1842, 1846, 2068, 2079, 2080, 2082, 2126, 2141], "kwarg": [13, 16, 17, 18, 19, 20, 31, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 120, 126, 132, 136, 150, 163, 167, 219, 220, 1154, 1155, 1190, 1208, 1285, 1286, 1287, 1288, 1289, 1414, 1540, 1596, 2146, 2148, 2173, 2174, 2186, 2192, 2197, 2204, 2209, 2210, 2214, 2312, 2318], "invok": [13, 16, 17, 31, 887, 889, 1131, 1137], "arg_info": [13, 16, 17, 62, 67, 68, 1414], "arg_nam": [13, 16, 17, 62, 67, 68, 1414], "args_to_ivi": [13, 16, 17, 18], "args_to_n": [13, 16, 17, 18, 125], "as_ivy_dev": [13, 16, 17, 62, 67, 68, 134, 410], "as_ivy_dtyp": [13, 16, 17, 62, 67, 68, 126, 305], "as_native_dev": [13, 16, 17, 62, 67, 68, 410, 430], "as_native_dtyp": [13, 16, 17, 62, 67, 68, 305], "asarray_handle_nest": [13, 16, 17, 62, 67, 68, 219], "asarray_infer_devic": [13, 16, 17, 62, 67, 68, 219], "asarray_to_native_arrays_and_back": [13, 16, 17, 62, 67, 68, 219], "cache_fn": [13, 16, 17, 62, 67, 68, 123, 1414], "check_float": [13, 16, 17, 62, 67, 68, 305], "clear_mem_on_dev": [13, 16, 17, 62, 67, 68, 410], "closest_valid_dtyp": [13, 16, 17, 62, 67, 68, 305], "container_typ": [13, 16, 17, 62, 67, 68, 881, 884, 1131, 1136, 1414], "conv": [13, 16, 17, 62, 67, 68, 130, 1647], "conv_general_dil": [13, 16, 17, 62, 67, 68, 126, 1647], "conv_general_transpos": [13, 16, 17, 62, 67, 68, 1647], "current_backend": [13, 16, 17, 62, 67, 68, 120, 123, 129, 132, 2312], "current_backend_str": [13, 16, 17, 62, 67, 68, 120, 132, 134, 1414], "nativearrainativ": [13, 16, 17, 18, 20, 21, 22, 23, 24, 27, 28, 32, 33, 69, 70, 75, 76, 80, 81, 116, 120, 124, 125, 126, 127, 128, 132, 134, 135, 150, 163, 219, 269, 270, 272, 305, 311, 312, 334, 335, 336, 338, 339, 340, 342, 343, 392, 410, 414, 415, 416, 417, 418, 419, 420, 430, 441, 444, 768, 879, 880, 1101, 1342, 1344, 1414, 1515, 1516, 1518, 1521, 1524, 1534, 1535, 1536, 1537, 1538, 1543, 1585, 2125, 2128, 2129, 2132, 2141, 2146, 2147, 2148, 2197, 2217, 2219, 2276, 2278, 2280, 2312, 2322], "default_complex_dtyp": [13, 16, 17, 62, 67, 68, 305, 398], "default_devic": [13, 16, 17, 62, 67, 68, 117, 120, 410, 429, 432, 433, 443], "default_dtyp": [13, 16, 17, 62, 67, 68, 116, 123, 305], "default_float_dtyp": [13, 16, 17, 62, 67, 68, 116, 305, 400], "default_int_dtyp": [13, 16, 17, 62, 67, 68, 116, 305, 401, 407], "default_uint_dtyp": [13, 16, 17, 62, 67, 68, 305, 402, 408], "deseri": [13, 16, 17, 62, 67, 68, 169], "dev_util": [13, 16, 17, 62, 67, 68, 117, 410], "resid": [13, 16, 17, 126, 132, 136, 1868, 1884, 1887, 2128, 2129], "dtype": [13, 16, 17, 23, 24, 25, 26, 31, 38, 39, 40, 41, 48, 49, 50, 51, 56, 57, 71, 72, 73, 74, 79, 80, 81, 86, 87, 88, 89, 96, 97, 98, 99, 104, 105, 111, 113, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 132, 134, 219, 221, 222, 223, 224, 225, 226, 227, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 431, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 849, 850, 851, 852, 853, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 878, 879, 880, 881, 884, 901, 902, 903, 904, 905, 933, 937, 939, 956, 979, 980, 981, 982, 983, 1029, 1030, 1031, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1101, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1131, 1136, 1251, 1253, 1256, 1257, 1258, 1259, 1260, 1266, 1267, 1268, 1269, 1270, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1349, 1353, 1355, 1389, 1390, 1391, 1392, 1414, 1466, 1468, 1471, 1472, 1478, 1481, 1586, 1587, 1589, 1590, 1647, 1659, 1661, 1662, 1686, 1687, 1688, 1689, 1690, 1711, 1764, 1765, 1766, 1767, 1768, 1842, 1843, 1844, 1845, 1846, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2019, 2052, 2063, 2066, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2095, 2096, 2097, 2098, 2099, 2104, 2105, 2106, 2107, 2108, 2114, 2115, 2118, 2120, 2123, 2126, 2128, 2129, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2183, 2184, 2186, 2189, 2190, 2191, 2197, 2216, 2217, 2218, 2219, 2220, 2230, 2231, 2233, 2234, 2238, 2239, 2246, 2247, 2249, 2250, 2253, 2254, 2260, 2261, 2285, 2294], "dtype_bit": [13, 16, 17, 62, 67, 68, 305], "execute_with_gradi": [13, 16, 17, 62, 67, 68, 135, 136, 137, 149, 1609, 2126], "ey": [13, 16, 17, 31, 62, 67, 68, 79, 86, 87, 130, 137, 219, 1089, 1090, 1091, 1092, 1093, 1281, 1282, 1647, 1659, 1661, 1662, 1663, 1681, 1684], "function_supported_devic": [13, 16, 17, 62, 67, 68, 410], "function_supported_devices_and_dtyp": [13, 16, 17, 62, 67, 68, 1414], "function_supported_dtyp": [13, 16, 17, 62, 67, 68, 116, 305], "function_unsupported_devic": [13, 16, 17, 62, 67, 68, 410], "function_unsupported_devices_and_dtyp": [13, 16, 17, 62, 67, 68, 1414], "function_unsupported_dtyp": [13, 16, 17, 62, 67, 68, 116, 305], "get_all_arrays_in_memori": [13, 16, 17, 62, 67, 68, 1414, 1543], "get_all_ivy_arrays_on_dev": [13, 16, 17, 62, 67, 68, 117, 410], "get_array_mod": [13, 16, 17, 62, 67, 68, 1414, 1554, 1597], "get_exception_trace_mod": [13, 16, 17, 62, 67, 68, 1414, 1489, 1555, 1598], "get_item": [13, 16, 17, 62, 67, 68, 1414], "get_min_bas": [13, 16, 17, 62, 67, 68, 1414, 1556], "get_min_denomin": [13, 16, 17, 62, 67, 68, 1414, 1557], "get_nestable_mod": [13, 16, 17, 62, 67, 68, 1414, 1558, 1599], "get_queue_timeout": [13, 16, 17, 62, 67, 68, 1414, 1559, 1600], "get_referrers_recurs": [13, 16, 17, 62, 67, 68, 1414], "get_show_func_wrapper_trace_mod": [13, 16, 17, 62, 67, 68, 1414, 1561, 1602], "get_tmp_dir": [13, 16, 17, 62, 67, 68, 1414, 1562], "gpu_is_avail": [13, 16, 17, 62, 67, 68, 410], "grad": [13, 16, 17, 62, 67, 68, 135, 136, 137, 1609, 1611, 1614, 2126, 2177, 2181], "handle_array_funct": [13, 16, 17, 62, 67, 68, 150], "handle_array_like_without_promot": [13, 16, 17, 62, 67, 68, 150], "handle_except": [13, 16, 17, 62, 67, 68], "handle_nest": [13, 16, 17, 62, 67, 68, 114, 123, 124, 132, 150], "handle_out_argu": [13, 16, 17, 62, 67, 68, 116, 117, 122, 124, 125, 132, 150], "handle_view": [13, 16, 17, 62, 67, 68, 150], "handle_view_index": [13, 16, 17, 62, 67, 68, 150], "infer_default_dtyp": [13, 16, 17, 62, 67, 68, 305], "infer_devic": [13, 16, 17, 62, 67, 68, 116, 117, 122, 124, 150], "infer_dtyp": [13, 16, 17, 62, 67, 68, 116, 117, 122, 124, 150], "inplace_arrays_support": [13, 16, 17, 62, 67, 68, 1414], "inplace_variables_support": [13, 16, 17, 62, 67, 68, 1414], "inputs_to_ivy_arrai": [13, 16, 17, 62, 67, 68, 124, 150], "inputs_to_native_arrai": [13, 16, 17, 62, 67, 68, 112, 124, 150], "integer_arrays_to_float": [13, 16, 17, 62, 67, 68, 150], "invalid_dtyp": [13, 16, 17, 62, 67, 68, 116, 305], "is_complex_dtyp": [13, 16, 17, 73, 74, 305, 375], "isscalar": [13, 16, 17, 62, 67, 68, 1414], "jac": [13, 16, 17, 62, 67, 68, 1609], "lu_factor": [13, 16, 17, 62, 67, 68, 1711], "mt": [13, 16, 17, 134], "matric": [13, 16, 17, 23, 24, 40, 41, 88, 89, 148, 219, 264, 267, 287, 289, 291, 292, 294, 296, 1164, 1172, 1250, 1647, 1691, 1694, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1725, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1827, 1828, 1829, 1830, 1831, 1832, 1835, 2134, 2249, 2256], "n": [13, 16, 17, 23, 24, 31, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 56, 57, 58, 59, 77, 78, 79, 86, 87, 88, 89, 92, 93, 96, 97, 98, 99, 104, 105, 106, 107, 110, 128, 219, 264, 265, 267, 287, 289, 291, 292, 294, 296, 799, 800, 801, 802, 803, 819, 820, 821, 822, 823, 824, 827, 870, 876, 877, 881, 882, 883, 884, 885, 887, 889, 896, 897, 898, 899, 900, 901, 902, 904, 908, 909, 910, 911, 912, 918, 921, 923, 924, 925, 926, 927, 928, 931, 933, 940, 961, 984, 985, 986, 987, 988, 1059, 1060, 1061, 1062, 1063, 1079, 1080, 1081, 1082, 1083, 1131, 1136, 1137, 1141, 1142, 1159, 1160, 1162, 1164, 1167, 1168, 1169, 1190, 1193, 1195, 1202, 1212, 1291, 1292, 1294, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1311, 1322, 1324, 1326, 1339, 1340, 1349, 1355, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1393, 1394, 1395, 1396, 1397, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1658, 1659, 1662, 1669, 1672, 1679, 1681, 1684, 1701, 1704, 1711, 1732, 1733, 1734, 1735, 1736, 1748, 1751, 1758, 1759, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1868, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1894, 1895, 1896, 1897, 1898, 1924, 1927, 1944, 1945, 1946, 1947, 1948, 1953, 1962, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2005, 2021, 2022, 2023, 2024, 2025, 2068, 2087, 2088, 2090, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124], "match_kwarg": [13, 16, 17, 62, 67, 68, 1414], "multiprocess": [13, 16, 17, 62, 65, 66, 67, 68, 135, 149, 1414], "ndim": [13, 16, 17, 31, 40, 41, 50, 51, 88, 89, 98, 99, 114, 120, 789, 790, 794, 795, 799, 800, 802, 1190, 1193, 1414, 1608, 1711, 1794, 1795, 1796, 1797, 1798, 1809, 1813, 2005, 2021, 2022, 2023, 2024, 2025, 2128, 2129], "int": [13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 63, 64, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 114, 116, 117, 118, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 137, 169, 182, 183, 185, 202, 203, 205, 207, 208, 209, 210, 211, 219, 224, 226, 240, 241, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 274, 275, 276, 277, 278, 287, 289, 291, 292, 294, 296, 305, 323, 324, 325, 326, 327, 342, 348, 349, 352, 360, 363, 381, 384, 407, 410, 427, 428, 429, 435, 436, 437, 438, 439, 440, 445, 461, 462, 463, 464, 465, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 741, 742, 743, 744, 745, 769, 770, 773, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 838, 839, 840, 842, 844, 846, 847, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 881, 882, 883, 884, 885, 887, 888, 889, 890, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 908, 909, 910, 911, 912, 923, 924, 925, 926, 927, 933, 939, 940, 942, 947, 948, 955, 956, 959, 961, 964, 967, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 992, 994, 995, 996, 997, 998, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1039, 1040, 1041, 1042, 1046, 1048, 1049, 1050, 1052, 1053, 1059, 1060, 1061, 1062, 1063, 1079, 1080, 1081, 1082, 1083, 1095, 1096, 1097, 1098, 1099, 1113, 1115, 1116, 1117, 1119, 1120, 1126, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1159, 1160, 1161, 1162, 1163, 1164, 1168, 1178, 1180, 1181, 1182, 1185, 1187, 1188, 1189, 1190, 1194, 1195, 1198, 1202, 1205, 1208, 1209, 1210, 1211, 1212, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1281, 1283, 1284, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1332, 1333, 1339, 1340, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1393, 1394, 1395, 1396, 1397, 1414, 1420, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1475, 1476, 1477, 1490, 1491, 1493, 1542, 1544, 1545, 1546, 1547, 1548, 1565, 1568, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1701, 1704, 1711, 1717, 1718, 1719, 1720, 1721, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1819, 1822, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1852, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1957, 1960, 1961, 1963, 1965, 1966, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2021, 2022, 2023, 2024, 2025, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2128, 2129, 2151, 2152, 2155, 2230, 2232, 2239, 2244, 2245, 2249, 2252, 2260], "normalize_axis_tupl": [13, 16, 17, 62, 67, 68], "num_arrays_in_memori": [13, 16, 17, 62, 67, 68, 1414], "num_cpu_cor": [13, 16, 17, 62, 67, 68, 117, 410], "num_gpu": [13, 16, 17, 62, 67, 68, 117, 128, 410], "num_ivy_arrays_on_dev": [13, 16, 17, 62, 67, 68, 410], "ones": [13, 16, 17, 23, 24, 31, 34, 35, 38, 39, 48, 49, 62, 65, 66, 67, 68, 71, 72, 79, 86, 87, 96, 97, 112, 115, 118, 122, 128, 134, 135, 219, 240, 241, 249, 250, 252, 274, 275, 276, 277, 278, 282, 283, 284, 285, 286, 300, 304, 410, 423, 424, 445, 521, 524, 870, 871, 979, 980, 981, 982, 983, 1609, 1611, 1612, 1614, 1647, 1669, 1670, 1671, 1672, 1673, 1984, 1985, 1986, 1989, 1990, 1991, 1994, 1995, 1996, 2126, 2134], "outputs_to_ivy_arrai": [13, 16, 17, 62, 67, 68, 112, 116, 117, 122, 124, 150], "percent_used_mem_on_dev": [13, 16, 17, 62, 67, 68, 410], "print_all_arrays_in_memori": [13, 16, 17, 62, 67, 68, 1414], "print_all_ivy_arrays_on_dev": [13, 16, 17, 62, 67, 68, 410], "promote_typ": [13, 16, 17, 62, 67, 68, 116, 305], "promote_types_of_input": [13, 16, 17, 62, 67, 68, 116, 125, 305], "seed": [13, 16, 17, 31, 38, 39, 48, 49, 52, 53, 62, 65, 66, 67, 68, 79, 86, 87, 96, 97, 127, 128, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 901, 902, 903, 904, 905, 1029, 1030, 1031, 1291, 1292, 1293, 1294, 1295, 1306, 1307, 1308, 1309, 1310, 1311, 1647, 1686, 1687, 1688, 1689, 1690, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2031, 2032, 2034, 2036, 2126, 2146, 2147, 2276], "set_array_mod": [13, 16, 17, 62, 67, 68, 1414, 1484, 1597], "set_default_complex_dtyp": [13, 16, 17, 62, 67, 68, 305, 335, 336, 404], "set_default_devic": [13, 16, 17, 62, 67, 68, 117, 410, 443], "set_default_dtyp": [13, 16, 17, 62, 67, 68, 116, 123, 305, 405], "set_default_float_dtyp": [13, 16, 17, 62, 67, 68, 116, 305, 339, 340, 365, 398, 406], "set_default_int_dtyp": [13, 16, 17, 62, 67, 68, 116, 305, 342, 365, 407], "set_default_uint_dtyp": [13, 16, 17, 62, 67, 68, 305, 343, 365, 408], "set_exception_trace_mod": [13, 16, 17, 62, 67, 68, 120, 1414, 1485, 1598], "set_min_bas": [13, 16, 17, 62, 67, 68, 1414], "set_min_denomin": [13, 16, 17, 62, 67, 68, 1414], "set_nestable_mod": [13, 16, 17, 62, 67, 68, 1414, 1489, 1599], "set_queue_timeout": [13, 16, 17, 62, 67, 68, 1414, 1495, 1600], "set_shape_array_mod": [13, 16, 17, 62, 67, 68, 1414, 1564, 1601], "set_show_func_wrapper_trace_mod": [13, 16, 17, 62, 67, 68, 120, 1414, 1497, 1602], "set_split_factor": [13, 16, 17, 62, 67, 68, 120, 410], "set_tmp_dir": [13, 16, 17, 62, 67, 68, 1414], "set_with_grad": [13, 16, 17, 62, 67, 68, 1609, 1644, 1646], "shape_array_mod": [13, 16, 17, 62, 67, 68, 1414, 1560, 1601], "size": [13, 16, 17, 31, 32, 33, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 62, 65, 66, 67, 68, 79, 80, 81, 86, 87, 88, 89, 92, 93, 96, 97, 98, 99, 127, 128, 135, 219, 254, 257, 410, 433, 434, 435, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 865, 866, 867, 868, 869, 870, 873, 878, 901, 902, 903, 904, 905, 908, 911, 923, 924, 925, 926, 927, 933, 939, 956, 1050, 1051, 1052, 1053, 1095, 1096, 1097, 1098, 1099, 1131, 1132, 1133, 1144, 1145, 1146, 1159, 1162, 1164, 1168, 1190, 1195, 1211, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1234, 1235, 1236, 1237, 1238, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1301, 1302, 1303, 1304, 1305, 1306, 1309, 1339, 1340, 1349, 1352, 1353, 1354, 1355, 1367, 1368, 1369, 1370, 1371, 1389, 1392, 1414, 1544, 1545, 1546, 1547, 1548, 1647, 1706, 1707, 1708, 1709, 1710, 1711, 1732, 1733, 1735, 1748, 1751, 1764, 1765, 1766, 1767, 1768, 1784, 1787, 1794, 1795, 1796, 1797, 1798, 1809, 1810, 1811, 1812, 1813, 1837, 1841, 1868, 1884, 1885, 1886, 1887, 1888, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1922, 1978, 1979, 1980, 1981, 1982, 1983, 2005, 2006, 2007, 2008, 2009, 2010, 2021, 2022, 2023, 2024, 2025, 2114, 2115, 2118, 2120, 2123, 2161, 2162, 2163, 2230, 2232, 2233, 2238, 2239, 2240, 2241, 2249, 2255, 2260, 2261, 2262], "split_factor": [13, 16, 17, 62, 67, 68, 120, 410, 433], "split_func_cal": [13, 16, 17, 62, 67, 68, 410], "to_ivi": [13, 16, 17, 18, 69, 70, 1953, 1967], "to_ivy_shap": [13, 16, 17, 62, 67, 68, 1414], "to_n": [13, 16, 17, 18, 69, 70, 132], "to_native_arrays_and_back": [13, 16, 17, 62, 67, 68, 122, 124, 132, 150], "to_native_shap": [13, 16, 17, 62, 67, 68, 1414], "total_mem_on_dev": [13, 16, 17, 62, 67, 68, 117, 410], "tpu_is_avail": [13, 16, 17, 62, 67, 68, 410], "try_else_non": [13, 16, 17, 62, 67, 68, 1414], "type_promote_arrai": [13, 16, 17, 62, 67, 68, 116, 305], "unset_array_mod": [13, 16, 17, 62, 67, 68, 1414], "unset_default_complex_dtyp": [13, 16, 17, 62, 67, 68, 305], "unset_default_devic": [13, 16, 17, 62, 67, 68, 410], "unset_default_dtyp": [13, 16, 17, 62, 67, 68, 305, 399], "unset_default_float_dtyp": [13, 16, 17, 62, 67, 68, 305], "unset_default_int_dtyp": [13, 16, 17, 62, 67, 68, 305], "unset_default_uint_dtyp": [13, 16, 17, 62, 67, 68, 305], "unset_exception_trace_mod": [13, 16, 17, 62, 67, 68, 1414], "unset_nestable_mod": [13, 16, 17, 62, 67, 68, 1414], "unset_queue_timeout": [13, 16, 17, 62, 67, 68, 1414], "unset_shape_array_mod": [13, 16, 17, 62, 67, 68, 1414, 1597, 1600], "unset_show_func_wrapper_trace_mod": [13, 16, 17, 62, 67, 68, 1414], "unset_with_grad": [13, 16, 17, 62, 67, 68, 1609], "used_mem_on_dev": [13, 16, 17, 62, 67, 68, 410], "valid_dtyp": [13, 16, 17, 62, 67, 68, 305], "value_and_grad": [13, 16, 17, 62, 67, 68, 1609], "vmap": [13, 16, 17, 62, 67, 68, 149, 1414, 2134], "with_grad": [13, 16, 17, 62, 67, 68, 1609, 1610, 1638, 1644, 2173, 2174], "overview": [13, 62, 115, 128, 131, 148, 169, 212, 213, 219, 305, 410, 445, 1413, 1414, 1609, 1647, 1711, 1852, 1868, 1949, 1953, 1973, 1978, 2005, 2052, 2068, 2114, 2143, 2146, 2151, 2161, 2173, 2175, 2177, 2183], "forum": [13, 62, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 169, 212, 213, 219, 305, 410, 445, 1413, 1414, 1609, 1647, 1711, 1852, 1868, 1949, 1953, 1973, 1978, 2005, 2052, 2068, 2114, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2146, 2151, 2161, 2173, 2175, 2177, 2183], "abc": [14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 134, 410, 412, 1414, 1463, 1465, 1953, 1972, 2128, 2129, 2149, 2150, 2151, 2155, 2177, 2181], "gelu": [14, 15, 63, 64, 169, 175, 2143], "approxim": [14, 15, 31, 40, 41, 63, 64, 77, 78, 79, 88, 89, 119, 126, 169, 171, 172, 173, 174, 175, 445, 451, 454, 456, 459, 466, 469, 471, 474, 476, 479, 481, 484, 526, 529, 531, 534, 556, 559, 561, 564, 616, 619, 621, 624, 626, 629, 631, 634, 691, 694, 721, 724, 726, 729, 746, 750, 751, 755, 933, 948, 960, 961, 1039, 1040, 1041, 1042, 1334, 1337, 1372, 1373, 1374, 1711, 1774, 1775, 1776, 1777, 1778, 1789, 1791, 1792, 1793, 2143, 2145], "138": [14, 15, 169, 171, 172, 174], "165": [14, 15, 169, 171, 172, 174, 1647, 1691, 1694], "leaky_relu": [14, 15, 63, 64, 169, 181, 2126], "alpha": [14, 15, 29, 30, 31, 63, 64, 77, 78, 79, 126, 127, 169, 177, 178, 179, 180, 181, 445, 461, 462, 463, 464, 465, 741, 742, 743, 744, 745, 824, 825, 826, 827, 828, 870, 872, 901, 902, 903, 904, 905, 923, 924, 925, 926, 927, 1029, 1030, 1031, 1046, 1047, 1048, 1049, 1164, 1168, 1306, 1308, 1309, 1310], "slope": [14, 15, 31, 63, 64, 79, 169, 177, 178, 179, 180, 181, 769, 771, 1296, 1297, 1298, 1299, 1300], "neg": [14, 15, 29, 30, 31, 40, 41, 44, 45, 48, 49, 58, 59, 63, 64, 77, 78, 79, 88, 89, 92, 93, 96, 97, 106, 107, 114, 123, 125, 169, 177, 178, 179, 180, 181, 219, 221, 222, 240, 241, 445, 586, 589, 591, 592, 593, 594, 595, 680, 691, 694, 706, 709, 870, 871, 876, 877, 891, 894, 933, 955, 979, 980, 981, 982, 1164, 1166, 1251, 1252, 1253, 1254, 1255, 1375, 1378, 1379, 1382, 1711, 1727, 1730, 1809, 1813, 1827, 1828, 1829, 1830, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1868, 1874, 1875, 1877, 1884, 1887, 1889, 1890, 1891, 1892, 1893, 1909, 1910, 1911, 1912, 1913, 1978, 1989, 1990, 1991, 1992, 1993, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2230, 2239, 2249, 2252], "leaki": [14, 15, 63, 64, 169, 177, 178, 179, 180, 181], "relu": [14, 15, 31, 60, 61, 63, 64, 79, 127, 135, 136, 169, 177, 178, 179, 180, 181, 196, 769, 771, 1296, 1299, 1317, 1319, 1362, 1364, 2126], "39": [14, 15, 29, 30, 31, 48, 49, 63, 64, 77, 78, 79, 82, 83, 96, 97, 169, 177, 178, 179, 180, 181, 445, 471, 474, 556, 559, 616, 617, 619, 626, 627, 629, 630, 636, 639, 809, 812, 881, 882, 883, 884, 885, 1131, 1133, 1136, 1147, 1229, 1230, 1232, 1609, 1611, 1613, 1614, 1711, 1784, 1787, 1989, 1990, 1991, 1993, 2068, 2079, 2082], "85": [14, 15, 48, 49, 62, 63, 64, 67, 68, 77, 78, 82, 83, 86, 87, 96, 97, 169, 177, 178, 179, 180, 181, 445, 466, 468, 511, 514, 516, 518, 519, 520, 696, 698, 699, 700, 1414, 1565, 1568, 1609, 1621, 1623, 1624, 1647, 1691, 1693, 1694, 1695, 1978, 1984, 1985, 1989, 1990, 1991, 1994, 1995, 1997], "17": [14, 15, 31, 62, 63, 64, 67, 68, 77, 78, 79, 80, 81, 82, 83, 86, 87, 96, 97, 114, 118, 169, 177, 178, 179, 180, 181, 182, 184, 186, 219, 259, 262, 445, 461, 463, 541, 544, 636, 639, 671, 673, 675, 804, 805, 806, 807, 808, 809, 810, 881, 884, 885, 984, 985, 986, 987, 988, 994, 995, 997, 1079, 1080, 1081, 1082, 1083, 1131, 1132, 1136, 1141, 1142, 1145, 1146, 1190, 1198, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1414, 1453, 1455, 1510, 1513, 1514, 1609, 1611, 1613, 1614, 1647, 1649, 1651, 1653, 1686, 1689, 1691, 1693, 1694, 1695, 1711, 1732, 1735, 1814, 1818, 1953, 1962, 1978, 1984, 1986, 1988, 1989, 1991, 1994, 1996, 1998, 2000, 2003], "log_softmax": [14, 15, 63, 64, 169, 186], "axi": [14, 15, 23, 24, 31, 32, 33, 40, 41, 42, 43, 44, 45, 50, 51, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 71, 72, 77, 78, 79, 80, 81, 88, 89, 90, 91, 92, 93, 98, 99, 102, 103, 104, 105, 106, 107, 114, 116, 118, 120, 122, 123, 125, 126, 128, 130, 132, 134, 137, 148, 169, 182, 183, 184, 185, 186, 202, 203, 204, 205, 206, 219, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 274, 275, 276, 277, 278, 410, 435, 838, 840, 865, 866, 867, 868, 869, 881, 882, 883, 884, 885, 887, 888, 889, 890, 896, 897, 898, 899, 900, 908, 909, 910, 911, 912, 913, 916, 933, 939, 940, 948, 956, 961, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1039, 1040, 1041, 1042, 1043, 1059, 1060, 1061, 1062, 1063, 1126, 1127, 1128, 1129, 1130, 1131, 1136, 1137, 1159, 1160, 1161, 1162, 1163, 1185, 1186, 1187, 1188, 1189, 1190, 1195, 1196, 1198, 1199, 1200, 1202, 1208, 1209, 1210, 1211, 1212, 1234, 1235, 1236, 1237, 1238, 1245, 1248, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1281, 1283, 1284, 1285, 1288, 1301, 1302, 1303, 1304, 1305, 1322, 1325, 1339, 1340, 1341, 1349, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1393, 1394, 1395, 1396, 1397, 1414, 1448, 1451, 1473, 1474, 1475, 1476, 1477, 1608, 1647, 1681, 1684, 1701, 1704, 1711, 1717, 1718, 1719, 1720, 1721, 1732, 1733, 1734, 1735, 1736, 1764, 1765, 1766, 1767, 1768, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1852, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1978, 2000, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2230, 2233, 2239, 2249, 2252, 2285, 2295], "98": [14, 15, 34, 35, 48, 49, 63, 64, 77, 78, 82, 83, 96, 97, 169, 182, 183, 184, 185, 186, 445, 516, 519, 531, 533, 535, 726, 728, 730, 1609, 1621, 1622, 1623, 1624, 1711, 1784, 1787, 1953, 1955, 1984, 1985, 1994, 1996, 2005, 2026, 2030, 2068, 2079, 2082], "35": [14, 15, 38, 39, 63, 64, 77, 78, 79, 86, 87, 88, 89, 96, 97, 182, 183, 184, 186, 445, 481, 483, 484, 485, 731, 733, 735, 814, 818, 881, 884, 1131, 1136, 1647, 1691, 1692, 1693, 1694, 1695, 1706, 1708, 1709, 1710, 1711, 1717, 1719, 1720, 1721, 1989, 1991, 1993, 1994, 1998, 2005, 2026, 2030, 2068, 2079, 2082], "0719": [14, 15, 63, 64, 182, 183, 184, 186], "62": [14, 15, 63, 64, 79, 94, 95, 96, 97, 182, 183, 184, 186, 445, 726, 729, 1149, 1151, 1153, 1973, 1974, 1976, 1977, 1978, 1984, 1986, 1994, 1997], "221": [14, 15, 182, 183], "82": [14, 15, 29, 30, 82, 83, 96, 97, 120, 182, 183, 471, 472, 1609, 1611, 1613, 1614, 1989, 1991, 1994, 1996], "mish": [14, 15, 63, 64, 169, 191], "30340147": [14, 15, 169, 187, 188, 190], "86509842": [14, 15, 63, 64, 169, 187, 188, 189, 190, 191], "sigmoid": [14, 15, 31, 63, 64, 79, 132, 135, 136, 169, 170, 176, 201, 819, 820, 821, 822, 823, 1306, 1307, 2126], "269": [14, 15, 169, 197, 198, 200], "731": [14, 15, 169, 197, 198, 200], "881": [14, 15, 29, 30, 77, 78, 169, 197, 198, 200, 445, 471, 472, 473, 474, 536, 538, 539, 696, 698], "softmax": [14, 15, 38, 39, 60, 61, 63, 64, 86, 87, 169, 206, 1647, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 2126], "union": [14, 15, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 114, 116, 117, 118, 120, 121, 122, 123, 125, 129, 130, 132, 137, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 221, 222, 224, 225, 226, 231, 233, 234, 235, 236, 238, 240, 241, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 291, 292, 296, 297, 299, 300, 301, 302, 303, 304, 305, 311, 312, 313, 316, 318, 319, 320, 321, 322, 323, 326, 328, 330, 332, 334, 335, 336, 338, 339, 340, 342, 343, 344, 346, 348, 349, 352, 360, 362, 363, 364, 365, 366, 367, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 384, 386, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 422, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 769, 770, 771, 772, 773, 774, 777, 779, 781, 783, 784, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 844, 846, 847, 849, 851, 852, 853, 855, 856, 858, 859, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 884, 887, 888, 889, 890, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 918, 921, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 967, 969, 970, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 992, 993, 994, 997, 998, 999, 1002, 1003, 1004, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1017, 1018, 1019, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1069, 1071, 1072, 1073, 1074, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1101, 1103, 1105, 1106, 1107, 1108, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1159, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1208, 1209, 1210, 1211, 1212, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1324, 1325, 1326, 1329, 1330, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1352, 1353, 1354, 1355, 1357, 1358, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1375, 1378, 1379, 1382, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1486, 1490, 1492, 1493, 1494, 1499, 1502, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1523, 1525, 1526, 1528, 1529, 1530, 1534, 1536, 1537, 1538, 1540, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1592, 1594, 1595, 1603, 1604, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1642, 1643, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1730, 1732, 1735, 1736, 1737, 1738, 1741, 1743, 1745, 1746, 1747, 1748, 1751, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1813, 1814, 1818, 1819, 1822, 1827, 1828, 1830, 1831, 1832, 1833, 1836, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1933, 1934, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1961, 1962, 1963, 1964, 1965, 1966, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2018, 2019, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2051, 2052, 2053, 2055, 2056, 2057, 2058, 2061, 2063, 2066, 2068, 2069, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2151, 2152, 2155, 2177, 2178, 2179, 2181, 2183, 2184, 2197, 2216, 2217, 2218, 2219], "422": [14, 15, 169, 202, 203, 205], "155": [14, 15, 86, 87, 169, 202, 203, 205, 1647, 1691, 1693, 1694, 1695], "softplu": [14, 15, 63, 64, 130, 169, 211, 2126], "beta": [14, 15, 31, 46, 47, 63, 64, 79, 94, 95, 130, 169, 207, 208, 209, 210, 211, 828, 870, 872, 874, 875, 901, 904, 923, 924, 925, 926, 927, 1029, 1030, 1031, 1046, 1047, 1048, 1049, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1164, 1168, 1306, 1309, 1310, 1973, 1974, 1975, 1976, 1977], "threshold": [14, 15, 29, 30, 31, 63, 64, 77, 78, 79, 130, 169, 207, 208, 209, 210, 211, 445, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 769, 773, 829, 830, 831, 832, 833, 933, 936, 1362, 1363, 1364, 1365, 1366], "3461": [14, 15, 63, 64, 169, 207, 208, 209, 210, 211], "6491": [14, 15, 63, 64, 169, 207, 208, 209, 210, 211], "535": [14, 15, 63, 64, 169, 207, 208, 209, 210], "42": [14, 15, 48, 49, 63, 64, 82, 83, 94, 95, 96, 97, 132, 137, 169, 207, 208, 209, 210, 445, 511, 514, 881, 884, 1131, 1136, 1609, 1611, 1614, 1621, 1623, 1624, 1711, 1764, 1767, 1784, 1787, 1973, 1974, 1976, 1977, 1978, 1979, 1982, 1984, 1987, 1989, 1990, 1991, 1992, 1994, 1997, 1999, 2068, 2069, 2072, 2079, 2082], "22": [14, 15, 29, 30, 31, 32, 33, 48, 49, 56, 57, 63, 64, 79, 80, 81, 86, 87, 96, 97, 114, 169, 182, 184, 186, 207, 208, 210, 445, 516, 517, 519, 804, 805, 807, 809, 810, 814, 816, 881, 884, 885, 1131, 1132, 1136, 1145, 1146, 1147, 1219, 1220, 1222, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1349, 1356, 1383, 1384, 1385, 1386, 1387, 1453, 1455, 1549, 1550, 1603, 1604, 1606, 1647, 1686, 1689, 1691, 1693, 1694, 1695, 1711, 1732, 1735, 1753, 1756, 1784, 1787, 1953, 1962, 1972, 1984, 1986, 1989, 1990, 1991, 1994, 1996, 2005, 2026, 2030, 2068, 2074, 2075, 2079, 2080, 2082], "09": [14, 15, 29, 30, 82, 83, 96, 97, 169, 207, 208, 210, 445, 691, 692, 694, 736, 739, 1609, 1611, 1613, 1614, 1647, 1706, 1709, 1989, 1991], "31": [14, 15, 29, 30, 31, 77, 78, 79, 80, 81, 86, 87, 96, 97, 135, 169, 182, 185, 207, 208, 210, 219, 259, 262, 445, 511, 514, 636, 637, 639, 671, 673, 675, 814, 815, 817, 849, 853, 881, 884, 885, 1131, 1134, 1136, 1312, 1316, 1414, 1433, 1436, 1510, 1514, 1691, 1693, 1695, 1711, 1814, 1818, 1989, 1991, 1994, 1996], "55": [14, 15, 96, 97, 111, 207, 208, 445, 511, 514, 756, 760, 1414, 1505, 1508, 1711, 1753, 1756, 1784, 1787, 1814, 1818, 1978, 1989, 1991, 1992, 1994, 1996, 2068, 2079, 2082], "collect": [18, 65, 66, 69, 115, 120, 127, 128, 148, 169, 410, 1414, 1609, 1647, 1852, 1953, 1967, 1973, 1978, 2132, 2134, 2137, 2143, 2161, 2175, 2177], "include_deriv": [18, 19, 20, 21, 22, 69, 70, 1953, 1955, 1966], "nest": [18, 19, 20, 21, 22, 62, 65, 66, 67, 68, 69, 70, 112, 114, 123, 129, 135, 136, 149, 1414, 1581, 1584, 1608, 1609, 1619, 1638, 1644, 1646, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 2125, 2129, 2134, 2149, 2150, 2173, 2174, 2177, 2178, 2179, 2180, 2181, 2182], "unchang": [18, 19, 20, 21, 22, 31, 994, 997, 1190, 1198, 1312, 1313, 1647, 1686, 1689], "dict": [18, 19, 20, 21, 22, 32, 33, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 114, 121, 135, 136, 169, 170, 171, 173, 175, 176, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 249, 251, 253, 274, 276, 278, 282, 284, 286, 300, 301, 303, 318, 320, 322, 328, 330, 332, 360, 362, 364, 372, 373, 375, 376, 378, 380, 393, 395, 397, 410, 416, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 779, 781, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 823, 824, 826, 828, 829, 831, 833, 849, 851, 853, 865, 867, 869, 887, 888, 890, 896, 900, 908, 912, 974, 978, 979, 981, 983, 999, 1003, 1059, 1063, 1069, 1071, 1073, 1103, 1105, 1107, 1126, 1128, 1130, 1154, 1158, 1185, 1187, 1189, 1190, 1208, 1276, 1278, 1280, 1285, 1288, 1296, 1298, 1300, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1334, 1336, 1338, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1393, 1394, 1403, 1404, 1406, 1408, 1409, 1411, 1414, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1466, 1468, 1470, 1471, 1472, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1540, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1639, 1640, 1642, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1686, 1688, 1690, 1691, 1693, 1695, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1743, 1745, 1747, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1774, 1776, 1778, 1794, 1796, 1798, 1799, 1801, 1803, 1827, 1828, 1830, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1869, 1871, 1873, 1884, 1888, 1889, 1891, 1893, 1904, 1906, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1939, 1940, 1942, 1944, 1945, 1947, 1953, 1955, 1957, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1971, 1972, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2016, 2018, 2020, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2053, 2055, 2057, 2069, 2071, 2073, 2074, 2076, 2078, 2087, 2089, 2095, 2097, 2099, 2100, 2102, 2109, 2110, 2112, 2115, 2117, 2119, 2120, 2122, 2124, 2125, 2146, 2147, 2197, 2217, 2219, 2221, 2223, 2312, 2323, 2328], "deriv": [18, 19, 20, 21, 22, 23, 24, 31, 34, 35, 69, 70, 71, 72, 79, 82, 83, 116, 117, 134, 136, 219, 235, 236, 238, 249, 250, 252, 282, 283, 284, 285, 286, 300, 301, 302, 303, 304, 870, 871, 874, 979, 980, 981, 982, 983, 1113, 1114, 1115, 1116, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1953, 1955, 1966, 2173, 2174, 2177, 2181, 2183], "tuplstr": [18, 19, 20, 23, 24, 31, 32, 33, 38, 39, 40, 41, 44, 45, 56, 57, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 116, 117, 120, 121, 126, 129, 132, 137, 169, 170, 171, 173, 175, 176, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 219, 249, 251, 253, 264, 265, 267, 274, 276, 278, 282, 284, 286, 300, 301, 303, 305, 311, 318, 320, 322, 328, 330, 332, 334, 335, 336, 338, 339, 340, 348, 349, 352, 360, 362, 363, 364, 365, 366, 367, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 384, 386, 389, 393, 395, 397, 398, 399, 400, 401, 402, 409, 410, 411, 412, 413, 435, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 779, 781, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 823, 824, 826, 828, 829, 831, 833, 849, 851, 853, 865, 867, 869, 887, 888, 889, 890, 896, 900, 906, 907, 908, 912, 923, 924, 925, 926, 927, 974, 978, 979, 981, 983, 984, 985, 986, 987, 988, 994, 995, 996, 997, 998, 999, 1003, 1059, 1063, 1069, 1071, 1073, 1079, 1080, 1081, 1082, 1083, 1089, 1091, 1092, 1093, 1103, 1105, 1107, 1126, 1128, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1139, 1141, 1142, 1145, 1146, 1147, 1154, 1158, 1164, 1168, 1185, 1187, 1189, 1190, 1198, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1276, 1278, 1280, 1281, 1282, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1334, 1336, 1338, 1349, 1355, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1393, 1394, 1403, 1404, 1406, 1408, 1409, 1411, 1414, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1485, 1490, 1492, 1494, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1541, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1555, 1562, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1639, 1640, 1642, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1690, 1691, 1693, 1695, 1706, 1708, 1710, 1711, 1712, 1714, 1716, 1717, 1719, 1721, 1743, 1745, 1746, 1747, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1774, 1776, 1778, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1803, 1827, 1828, 1830, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1868, 1869, 1871, 1873, 1884, 1888, 1889, 1891, 1893, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1939, 1940, 1942, 1944, 1945, 1947, 1949, 1950, 1951, 1952, 1953, 1960, 1961, 1971, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2016, 2018, 2020, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2053, 2055, 2057, 2068, 2069, 2071, 2073, 2074, 2076, 2078, 2079, 2080, 2082, 2087, 2089, 2095, 2097, 2099, 2100, 2102, 2109, 2110, 2112, 2115, 2117, 2119, 2120, 2122, 2124, 2197, 2216, 2217, 2218, 2219, 2221, 2223, 2244, 2246, 2264, 2265, 2276, 2277, 2278, 2279, 2280, 2281, 2312, 2320], "kei": [18, 19, 20, 31, 38, 39, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 121, 126, 127, 128, 135, 171, 173, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 249, 251, 253, 274, 276, 278, 282, 284, 286, 300, 301, 303, 318, 320, 322, 328, 330, 332, 360, 362, 364, 372, 373, 375, 376, 378, 380, 393, 395, 397, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 779, 781, 783, 819, 823, 824, 826, 828, 829, 831, 833, 849, 851, 853, 865, 867, 869, 896, 900, 908, 912, 979, 981, 983, 999, 1003, 1069, 1071, 1073, 1103, 1105, 1107, 1126, 1128, 1130, 1154, 1158, 1159, 1160, 1161, 1162, 1163, 1185, 1187, 1189, 1276, 1278, 1280, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1334, 1336, 1338, 1339, 1340, 1362, 1363, 1365, 1367, 1368, 1370, 1393, 1394, 1403, 1404, 1406, 1408, 1409, 1411, 1414, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1443, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1621, 1623, 1639, 1640, 1642, 1647, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1686, 1688, 1690, 1691, 1693, 1695, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1743, 1745, 1747, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1774, 1776, 1778, 1794, 1796, 1798, 1799, 1801, 1803, 1827, 1828, 1830, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1869, 1871, 1873, 1884, 1888, 1889, 1891, 1893, 1904, 1906, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1939, 1940, 1942, 1944, 1945, 1947, 1949, 1950, 1951, 1953, 1957, 1963, 1967, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2016, 2018, 2020, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2053, 2055, 2057, 2069, 2071, 2073, 2074, 2076, 2078, 2087, 2089, 2095, 2097, 2099, 2100, 2102, 2109, 2110, 2112, 2115, 2117, 2119, 2120, 2122, 2124, 2134, 2137, 2141, 2146, 2147, 2148, 2149, 2150, 2161, 2172, 2177, 2181, 2230, 2232, 2244, 2245, 2247, 2266, 2271], "word": [18, 19, 20, 114, 126, 219, 221, 222, 1978, 1994, 1997, 2125, 2146, 2147, 2148], "cont_inplac": [18, 20, 22], "leaf": [18, 21, 65, 66, 104, 105, 114, 123, 135, 1953, 1964, 1965, 1967, 2074, 2076, 2078], "travers": [18, 21, 22, 69, 70, 114, 116, 132, 1953, 1966], "lowest": [18, 21, 22, 48, 49, 69, 70, 96, 97, 123, 149, 1953, 1966, 1978, 1984, 1985, 1986, 1987, 1988, 2125, 2131, 2135, 2139], "asarrai": [23, 24, 31, 32, 33, 62, 67, 68, 79, 80, 81, 124, 125, 126, 127, 219, 1159, 1160, 1161, 1163, 1245, 1246, 1247, 1248, 1249, 1339, 1341, 1414, 1448, 1451, 1490, 1492, 1493, 1494, 1505, 1506, 1510, 1511, 1565, 1566, 1567, 1568, 1569, 1647, 1649, 1652, 2031, 2037, 2041], "nativedtyp": [23, 24, 25, 26, 31, 38, 39, 40, 41, 48, 49, 50, 51, 56, 57, 71, 72, 79, 88, 89, 96, 97, 98, 99, 104, 105, 116, 117, 122, 129, 132, 219, 221, 222, 224, 225, 226, 234, 235, 236, 238, 240, 241, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 297, 299, 300, 301, 302, 303, 304, 305, 312, 313, 316, 334, 335, 336, 338, 339, 340, 342, 343, 344, 346, 348, 365, 366, 391, 399, 409, 819, 820, 821, 822, 823, 824, 825, 827, 865, 866, 867, 868, 869, 870, 871, 873, 874, 878, 879, 880, 901, 902, 903, 904, 905, 933, 939, 956, 979, 980, 981, 982, 983, 1029, 1030, 1031, 1050, 1051, 1052, 1053, 1101, 1113, 1115, 1256, 1257, 1258, 1259, 1260, 1266, 1267, 1268, 1269, 1270, 1291, 1292, 1293, 1294, 1295, 1306, 1307, 1308, 1309, 1310, 1311, 1349, 1353, 1389, 1392, 1647, 1686, 1687, 1689, 1711, 1842, 1843, 1844, 1845, 1846, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2014, 2068, 2069, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2095, 2096, 2097, 2098, 2099, 2104, 2108, 2151, 2152, 2155], "datatyp": [23, 24, 65, 66, 129, 219, 224, 225, 249, 250, 252, 269, 270, 272, 305, 334, 391, 399, 2186, 2192], "infer": [23, 24, 31, 32, 33, 38, 39, 44, 45, 71, 72, 79, 80, 81, 86, 87, 92, 93, 110, 113, 116, 117, 124, 128, 132, 137, 219, 221, 222, 224, 225, 235, 236, 238, 248, 249, 250, 251, 252, 253, 269, 270, 272, 282, 283, 284, 285, 286, 300, 301, 302, 303, 304, 305, 335, 336, 338, 339, 340, 342, 343, 901, 904, 979, 980, 981, 983, 1306, 1309, 1414, 1490, 1491, 1492, 1493, 1494, 1563, 1647, 1686, 1687, 1688, 1689, 1690, 1868, 1904, 1905, 1906, 1907, 1908, 2132, 2133, 2136, 2138, 2312, 2318, 2319], "nativedevic": [23, 24, 27, 28, 31, 48, 49, 71, 72, 75, 76, 79, 96, 97, 116, 117, 120, 122, 129, 219, 221, 222, 224, 225, 226, 234, 235, 236, 238, 240, 241, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 269, 270, 272, 274, 275, 277, 279, 280, 282, 283, 284, 285, 286, 297, 299, 300, 301, 302, 303, 304, 410, 411, 414, 415, 416, 417, 418, 420, 422, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 819, 820, 821, 822, 823, 824, 825, 827, 870, 871, 876, 877, 979, 980, 981, 982, 983, 1029, 1030, 1031, 1291, 1292, 1293, 1294, 1295, 1306, 1307, 1308, 1310, 1311, 1375, 1378, 1379, 1382, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2151, 2152, 2155, 2177, 2178, 2179, 2181, 2183, 2184], "interpret": [23, 24, 115, 219, 224, 225, 226, 269, 270, 272, 2135], "copy_arrai": [23, 24, 62, 67, 68, 219], "to_ivy_arrai": [23, 24, 219, 231, 232, 233], "object": [23, 24, 27, 28, 48, 49, 62, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 96, 97, 112, 114, 115, 124, 126, 127, 128, 134, 137, 169, 170, 176, 219, 231, 232, 233, 243, 246, 279, 280, 305, 306, 307, 308, 309, 310, 333, 349, 351, 352, 353, 360, 362, 364, 392, 410, 411, 436, 437, 438, 439, 440, 666, 668, 670, 767, 768, 824, 826, 828, 879, 880, 1101, 1342, 1343, 1344, 1478, 1482, 1609, 1610, 1953, 1957, 1959, 1961, 1962, 1963, 1969, 1970, 1971, 1972, 1978, 2000, 2001, 2002, 2003, 2004, 2128, 2129, 2134, 2140, 2146, 2147, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2170, 2171, 2173, 2174, 2197, 2218, 2221, 2223, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2312, 2313, 2322], "empty_lik": [23, 24, 71, 72, 130, 219], "deafult": [23, 24, 50, 51, 98, 99, 219, 235, 236, 238, 2005, 2006, 2007, 2008, 2009, 2010], "uniniti": [23, 24, 219, 234, 235, 236, 238], "from_dlpack": [23, 24, 71, 72, 219], "full_lik": [23, 24, 71, 72, 129, 219, 253], "fill_valu": [23, 24, 50, 51, 71, 72, 98, 99, 116, 127, 129, 219, 248, 249, 250, 251, 252, 253, 445, 581, 584, 611, 614, 2005, 2021, 2022, 2023, 2024, 2025, 2285, 2294], "scalar": [23, 24, 29, 30, 31, 32, 33, 40, 41, 63, 64, 71, 72, 77, 78, 79, 80, 81, 88, 89, 116, 126, 149, 177, 179, 181, 219, 249, 250, 251, 252, 253, 274, 275, 276, 277, 278, 445, 461, 462, 463, 464, 465, 741, 742, 743, 744, 745, 789, 790, 792, 794, 795, 797, 799, 800, 802, 849, 851, 852, 853, 855, 856, 857, 858, 859, 896, 897, 898, 899, 900, 923, 924, 925, 926, 927, 933, 937, 938, 940, 941, 943, 948, 951, 959, 969, 970, 972, 1009, 1010, 1012, 1039, 1040, 1041, 1042, 1054, 1055, 1057, 1103, 1106, 1164, 1168, 1190, 1191, 1192, 1193, 1201, 1329, 1332, 1414, 1591, 1592, 1593, 1594, 1595, 1603, 1607, 1711, 1842, 1843, 1844, 1845, 1846, 2134], "fill": [23, 24, 31, 48, 49, 50, 51, 65, 66, 71, 72, 79, 96, 97, 98, 99, 127, 219, 234, 248, 249, 250, 251, 252, 253, 259, 261, 263, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 297, 299, 300, 301, 302, 303, 304, 824, 827, 870, 871, 933, 955, 979, 980, 981, 982, 983, 1029, 1031, 1251, 1252, 1253, 1254, 1255, 1306, 1308, 1310, 1978, 1984, 1985, 1986, 1987, 1988, 2005, 2021, 2022, 2023, 2024, 2025, 2151, 2152, 2157, 2159, 2160], "000123": [23, 24, 219, 249, 250, 252], "linspac": [23, 24, 71, 72, 122, 130, 132, 219, 221, 222, 2126, 2141], "stop": [23, 24, 34, 35, 71, 72, 82, 83, 122, 130, 132, 149, 219, 221, 222, 223, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 410, 412, 435, 1609, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1949, 1950, 1951, 1952, 1953, 1965, 2134, 2177, 2178, 2179, 2180, 2181, 2182], "endpoint": [23, 24, 71, 72, 122, 219, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 2151, 2159], "logspac": [23, 24, 71, 72, 132, 219, 263], "rang": [23, 24, 31, 71, 72, 79, 116, 120, 128, 132, 135, 136, 137, 219, 221, 222, 254, 257, 259, 260, 261, 262, 263, 923, 924, 925, 926, 927, 1164, 1168, 1414, 1448, 1451, 1608, 1609, 1644, 2031, 2032, 2036, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108, 2126, 2134, 2140, 2151, 2159, 2230, 2234, 2238, 2239, 2241, 2249, 2256, 2260, 2261, 2262, 2263], "sampl": [23, 24, 31, 48, 49, 56, 57, 71, 72, 77, 78, 79, 96, 97, 104, 105, 124, 127, 128, 219, 254, 257, 259, 260, 261, 262, 263, 819, 820, 821, 822, 823, 824, 825, 827, 901, 902, 903, 904, 905, 906, 907, 933, 961, 1029, 1030, 1031, 1095, 1096, 1097, 1098, 1099, 1131, 1138, 1139, 1144, 1291, 1292, 1293, 1294, 1295, 1306, 1307, 1308, 1309, 1310, 1311, 1372, 1373, 1374, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2161, 2169], "on_valu": [23, 24, 71, 72, 219, 259, 260, 261, 262, 263, 274, 275, 276, 277, 278], "off_valu": [23, 24, 71, 72, 219, 259, 260, 261, 262, 263, 274, 275, 276, 277, 278], "float32": [23, 24, 25, 26, 38, 39, 71, 72, 73, 74, 80, 81, 86, 87, 104, 105, 116, 118, 127, 128, 219, 259, 260, 261, 262, 263, 274, 275, 276, 278, 282, 285, 300, 304, 305, 311, 312, 328, 329, 330, 332, 339, 340, 344, 346, 348, 349, 350, 352, 354, 355, 365, 372, 373, 375, 376, 378, 379, 380, 381, 384, 393, 396, 397, 400, 406, 870, 878, 881, 884, 933, 943, 1009, 1012, 1131, 1136, 1389, 1392, 1414, 1586, 1587, 1590, 1647, 1659, 1661, 1662, 1669, 1670, 1672, 1681, 1682, 1683, 1685, 1711, 1842, 1846, 2074, 2078, 2197, 2218, 2230, 2238], "cuda": [23, 24, 31, 48, 49, 71, 72, 79, 80, 81, 96, 97, 132, 149, 219, 254, 257, 259, 260, 261, 262, 263, 274, 275, 277, 410, 413, 414, 415, 432, 433, 819, 820, 821, 822, 824, 827, 1029, 1031, 1291, 1292, 1293, 1294, 1295, 1306, 1307, 1308, 1310, 1311, 1478, 1480, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2125, 2139, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2181, 2183, 2184], "evenli": [23, 24, 31, 38, 39, 44, 45, 65, 66, 71, 72, 77, 78, 86, 87, 92, 93, 219, 221, 222, 254, 257, 259, 260, 261, 262, 263, 933, 961, 1372, 1373, 1374, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1658, 1659, 1662, 1669, 1672, 1679, 1681, 1684, 1868, 1914, 1915, 1916, 1917, 1918], "simplic": [23, 24, 29, 30, 40, 41, 77, 78, 119, 130, 136, 148, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 259, 260, 262, 264, 267, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 367, 370, 381, 384, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 804, 807, 809, 812, 814, 817, 849, 852, 870, 871, 881, 884, 896, 899, 906, 907, 918, 921, 923, 926, 933, 937, 940, 958, 979, 982, 1131, 1132, 1133, 1134, 1136, 1138, 1139, 1145, 1146, 1147, 1164, 1167, 1168, 1190, 1208, 1219, 1222, 1224, 1227, 1229, 1232, 1285, 1288, 1312, 1315, 1414, 1473, 1476, 1490, 1493, 1499, 1502, 1505, 1508, 1591, 1595, 1609, 1639, 1643, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1681, 1684, 1686, 1689, 1691, 1694, 1701, 1704, 1706, 1709, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1846, 1847, 1851, 1868, 1869, 1872, 1874, 1877, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1897, 1899, 1902, 1904, 1907, 1909, 1912, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 1973, 1974, 1977, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113], "nestabl": [23, 24, 29, 30, 40, 41, 77, 78, 110, 118, 119, 125, 128, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 259, 260, 262, 264, 267, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 367, 370, 381, 384, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 804, 807, 809, 812, 814, 817, 870, 871, 876, 877, 881, 884, 896, 899, 906, 907, 918, 921, 923, 926, 933, 940, 979, 982, 1131, 1132, 1133, 1134, 1136, 1138, 1139, 1145, 1146, 1147, 1164, 1167, 1168, 1190, 1208, 1219, 1222, 1224, 1227, 1229, 1232, 1285, 1288, 1375, 1378, 1379, 1382, 1414, 1427, 1430, 1473, 1476, 1490, 1493, 1499, 1502, 1505, 1508, 1544, 1547, 1575, 1579, 1591, 1595, 1609, 1639, 1643, 1647, 1649, 1652, 1654, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1681, 1684, 1686, 1689, 1691, 1694, 1701, 1704, 1706, 1709, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1846, 1847, 1851, 1868, 1869, 1872, 1874, 1877, 1879, 1882, 1884, 1887, 1889, 1892, 1894, 1897, 1899, 1902, 1904, 1907, 1909, 1912, 1914, 1917, 1919, 1922, 1924, 1927, 1929, 1933, 1934, 1938, 1939, 1943, 1944, 1948, 1973, 1974, 1977, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123, 2125], "01": [23, 24, 31, 32, 33, 34, 35, 79, 80, 81, 82, 83, 88, 89, 96, 97, 113, 137, 219, 259, 260, 262, 445, 636, 639, 711, 714, 716, 719, 834, 836, 870, 875, 881, 884, 918, 921, 1079, 1082, 1103, 1104, 1105, 1107, 1117, 1119, 1131, 1136, 1142, 1164, 1167, 1183, 1184, 1414, 1466, 1467, 1468, 1469, 1470, 1565, 1568, 1609, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1711, 1743, 1746, 1747, 1814, 1818, 1978, 1989, 1992, 1994, 1996, 2230, 2238], "02": [23, 24, 34, 35, 46, 47, 48, 49, 77, 78, 82, 83, 96, 97, 127, 219, 259, 260, 262, 445, 466, 468, 471, 473, 636, 639, 881, 884, 1079, 1082, 1131, 1136, 1142, 1414, 1565, 1568, 1609, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1973, 1974, 1975, 1977, 1978, 1989, 1990, 1991, 1994, 1997], "03": [23, 24, 29, 30, 34, 35, 77, 78, 82, 83, 96, 97, 219, 259, 260, 262, 445, 531, 532, 533, 535, 626, 629, 1414, 1565, 1568, 1609, 1615, 1616, 1617, 1618, 1626, 1628, 1629, 1647, 1706, 1709, 1711, 1753, 1756, 1989, 1991, 1994, 1998], "04": [23, 24, 34, 35, 63, 64, 73, 74, 82, 83, 128, 169, 177, 179, 180, 181, 182, 185, 219, 259, 260, 262, 305, 349, 351, 352, 353, 445, 561, 564, 1414, 1556, 1609, 1611, 1613, 1614, 1615, 1617, 1618, 1626, 1627, 1628, 1629, 1647, 1706, 1709, 2230, 2238], "05": [23, 24, 29, 30, 31, 34, 35, 46, 47, 77, 78, 79, 82, 83, 94, 95, 127, 128, 219, 259, 260, 262, 445, 636, 637, 638, 639, 640, 779, 780, 781, 782, 783, 870, 875, 933, 934, 951, 1089, 1090, 1091, 1092, 1093, 1103, 1104, 1105, 1106, 1107, 1117, 1119, 1281, 1282, 1414, 1487, 1505, 1508, 1556, 1609, 1611, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1711, 1764, 1767, 1973, 1974, 1975, 1976, 1977, 2175, 2176, 2186, 2187, 2230, 2238], "464": [23, 24, 29, 30, 96, 97, 219, 259, 260, 262, 445, 476, 477, 481, 484, 1989, 1993], "15888336": [23, 24, 219, 259, 260, 262], "1000": [23, 24, 71, 72, 135, 219, 259, 260, 261, 262, 263], "2154": [23, 24, 219, 259, 260, 262], "43469003": [23, 24, 219, 259, 260, 262], "10000": [23, 24, 71, 72, 219, 259, 260, 261, 262, 263], "meshgrid": [23, 24, 71, 72, 219], "spars": [23, 24, 42, 43, 71, 72, 90, 91, 219, 264, 265, 266, 267, 268, 1852, 1863, 1864, 1865, 1866, 1867], "xy": [23, 24, 71, 72, 219, 264, 265, 266, 267, 268], "arbitrari": [23, 24, 25, 26, 31, 65, 66, 73, 74, 114, 122, 123, 125, 126, 128, 136, 149, 219, 264, 265, 267, 305, 318, 319, 320, 321, 322, 393, 394, 395, 396, 397, 789, 790, 794, 795, 799, 800, 1609, 1619, 2135, 2140], "grid": [23, 24, 118, 128, 148, 219, 264, 265, 267], "coordin": [23, 24, 29, 30, 50, 51, 77, 78, 79, 98, 99, 219, 264, 265, 267, 445, 481, 482, 483, 484, 485, 870, 876, 877, 1039, 1041, 1190, 1206, 1207, 1273, 1274, 1349, 1356, 1375, 1378, 1379, 1382, 1383, 1387, 2005, 2021, 2022, 2023, 2024, 2025], "cartesian": [23, 24, 219, 264, 265, 267], "ij": [23, 24, 56, 57, 219, 264, 265, 267, 2068, 2079, 2080, 2082], "vector": [23, 24, 31, 32, 33, 38, 39, 40, 41, 80, 81, 86, 87, 88, 89, 148, 219, 264, 265, 267, 887, 889, 901, 902, 904, 1131, 1137, 1190, 1208, 1285, 1288, 1306, 1309, 1414, 1438, 1439, 1440, 1441, 1442, 1448, 1451, 1515, 1517, 1519, 1608, 1647, 1691, 1692, 1693, 1694, 1695, 1711, 1717, 1718, 1719, 1720, 1721, 1737, 1738, 1741, 1748, 1751, 1759, 1762, 1784, 1787, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1832, 1836, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1851, 2134, 2161, 2171], "ignor": [23, 24, 31, 65, 66, 79, 115, 118, 128, 149, 219, 264, 265, 267, 906, 907, 923, 924, 925, 926, 927, 1131, 1138, 1139, 1164, 1168, 1711, 1758, 1953, 1965, 1966, 2140, 2177, 2181], "rank": [23, 24, 31, 40, 41, 44, 45, 58, 59, 79, 88, 89, 92, 93, 106, 107, 120, 219, 264, 265, 267, 870, 871, 979, 982, 1190, 1208, 1285, 1288, 1301, 1302, 1303, 1304, 1305, 1349, 1355, 1711, 1717, 1720, 1727, 1730, 1774, 1775, 1776, 1777, 1778, 1794, 1795, 1796, 1797, 1798, 1804, 1807, 1827, 1828, 1829, 1830, 1831, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1868, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1924, 1927, 1939, 1943, 1944, 1945, 1946, 1947, 1948, 2005, 2021, 2024, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124], "length": [23, 24, 31, 44, 45, 62, 65, 66, 67, 68, 79, 92, 93, 121, 128, 135, 219, 221, 222, 264, 265, 267, 834, 835, 836, 837, 870, 872, 874, 875, 878, 887, 889, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 918, 921, 933, 940, 984, 985, 986, 987, 988, 1046, 1048, 1079, 1080, 1081, 1082, 1083, 1113, 1115, 1117, 1119, 1131, 1137, 1141, 1142, 1159, 1162, 1164, 1167, 1183, 1184, 1190, 1208, 1285, 1288, 1306, 1309, 1339, 1340, 1357, 1358, 1360, 1389, 1392, 1414, 1608, 1711, 1809, 1813, 1814, 1818, 1868, 1904, 1905, 1906, 1907, 1908, 2149, 2150, 2230, 2240], "ni": [23, 24, 219, 264, 265, 267], "len": [23, 24, 31, 40, 41, 79, 88, 89, 114, 115, 125, 126, 128, 134, 137, 219, 264, 265, 267, 1301, 1302, 1303, 1304, 1305, 1349, 1355, 1711, 1832, 1833, 1834, 1835, 1836], "xi": [23, 24, 219, 264, 265, 267], "native_arrai": [23, 24, 25, 26, 29, 30, 32, 33, 71, 72, 75, 76, 77, 78, 80, 81, 102, 103, 124, 127, 128, 169, 171, 174, 182, 185, 219, 249, 252, 264, 267, 274, 276, 277, 278, 282, 285, 300, 304, 305, 313, 316, 318, 319, 321, 323, 326, 328, 331, 344, 346, 360, 363, 381, 384, 410, 417, 419, 420, 421, 429, 436, 437, 439, 445, 491, 492, 511, 514, 516, 519, 536, 538, 539, 540, 541, 542, 544, 546, 547, 549, 571, 572, 574, 576, 579, 581, 584, 606, 609, 611, 612, 646, 648, 649, 671, 672, 674, 681, 682, 684, 696, 698, 699, 700, 706, 707, 708, 709, 710, 731, 733, 735, 834, 836, 1183, 1184, 1190, 1208, 1209, 1211, 1285, 1288, 1322, 1325, 1367, 1371, 1414, 1415, 1417, 1419, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1534, 1535, 1536, 1537, 1538, 1586, 1587, 1589, 1647, 1649, 1652, 1654, 1657, 1681, 1684, 1701, 1704, 1706, 1709, 1711, 1722, 1725, 1743, 1746, 1769, 1772, 1774, 1777, 1814, 1818, 1819, 1822, 1827, 1831, 1842, 1846, 1852, 1853, 1856, 1863, 1866, 1868, 1869, 1872, 1904, 1907, 1978, 1979, 1982, 2005, 2021, 2024, 2053, 2057, 2063, 2065, 2068, 2091, 2094, 2104, 2108, 2114, 2115, 2118, 2197, 2218, 2266, 2267, 2268, 2269, 2270, 2272, 2273, 2274, 2275, 2312, 2322, 2328], "one_hot": [23, 24, 71, 72, 137, 219, 278, 2126], "scatter": [23, 24, 32, 33, 71, 72, 80, 81, 130, 219, 274, 275, 276, 277, 278, 1414, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 2141], "hot": [23, 24, 71, 72, 219, 274, 275, 276, 277, 278], "unless": [23, 24, 31, 40, 41, 71, 72, 79, 113, 117, 125, 149, 219, 274, 275, 276, 277, 278, 779, 781, 783, 933, 956, 1103, 1104, 1105, 1107, 1266, 1267, 1268, 1269, 1270, 1711, 1774, 1775, 1777], "overrid": [23, 24, 71, 72, 112, 219, 274, 275, 276, 277, 278], "ones_lik": [23, 24, 71, 72, 113, 137, 219, 286, 2126], "tril": [23, 24, 71, 72, 219], "k": [23, 24, 31, 38, 39, 40, 41, 48, 49, 71, 72, 77, 78, 79, 86, 87, 88, 89, 96, 97, 110, 111, 126, 127, 132, 219, 240, 241, 242, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 641, 643, 645, 819, 820, 821, 822, 823, 824, 827, 870, 871, 876, 877, 891, 892, 893, 894, 901, 902, 903, 904, 905, 979, 980, 981, 982, 983, 1159, 1162, 1164, 1166, 1190, 1209, 1211, 1291, 1292, 1294, 1306, 1307, 1308, 1309, 1311, 1322, 1323, 1324, 1325, 1326, 1339, 1340, 1367, 1368, 1369, 1370, 1371, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1414, 1422, 1425, 1647, 1706, 1707, 1708, 1709, 1710, 1711, 1727, 1728, 1729, 1730, 1731, 1759, 1762, 1764, 1766, 1767, 1768, 1794, 1795, 1796, 1797, 1798, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1827, 1828, 1829, 1830, 1831, 1953, 1962, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2005, 2021, 2024, 2130, 2134], "innermost": [23, 24, 40, 41, 88, 89, 219, 287, 289, 291, 292, 294, 296, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1725, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1827, 1828, 1829, 1830, 1831], "mxn": [23, 24, 40, 41, 88, 89, 219, 287, 289, 291, 292, 294, 296, 1711, 1732, 1733, 1734, 1735, 1736, 1764, 1765, 1766, 1767, 1768, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1814, 1818, 1827, 1828, 1829, 1830, 1831], "diagon": [23, 24, 31, 40, 41, 79, 88, 89, 219, 240, 241, 287, 289, 291, 292, 294, 296, 870, 871, 876, 877, 891, 894, 923, 924, 925, 926, 927, 979, 980, 981, 982, 983, 1164, 1166, 1168, 1375, 1378, 1379, 1382, 1711, 1727, 1730, 1736, 1827, 1828, 1829, 1830, 1831], "triangular": [23, 24, 40, 41, 88, 89, 219, 287, 289, 291, 292, 294, 296, 870, 876, 877, 1375, 1378, 1379, 1382, 1711, 1712, 1713, 1714, 1715, 1716, 1743, 1746, 1794, 1795, 1796, 1797, 1798], "triu": [23, 24, 71, 72, 219], "upper": [23, 24, 31, 40, 41, 48, 49, 79, 88, 89, 96, 97, 125, 128, 219, 240, 241, 292, 294, 296, 870, 871, 877, 979, 980, 981, 982, 1379, 1382, 1711, 1712, 1713, 1714, 1715, 1716, 1743, 1746, 1794, 1795, 1796, 1797, 1798, 1978, 1994, 1995, 1996, 1997, 1998, 2149, 2150], "zeros_lik": [23, 24, 71, 72, 88, 89, 126, 130, 219, 301, 305, 313, 316, 445, 651, 654, 1609, 1611, 1614, 1615, 1618, 1621, 1624, 1626, 1629, 1634, 1637, 1647, 1654, 1657, 1664, 1667, 1681, 1684, 1789, 1791, 1868, 1869, 1872, 2126], "creation": [24, 62, 65, 66, 67, 68, 72, 116, 117, 120, 122, 124, 126, 127, 128, 129, 132, 220, 221, 222, 224, 226, 228, 229, 230, 231, 233, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 259, 262, 263, 264, 267, 269, 272, 274, 277, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 871, 872, 873, 874, 875, 876, 877, 878, 2134, 2136, 2140], "data_typ": [25, 26, 73, 74, 116, 128, 129, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 318, 321, 323, 326, 328, 331, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 346, 348, 349, 352, 354, 355, 357, 358, 360, 363, 365, 366, 367, 370, 372, 374, 376, 379, 381, 384, 386, 389, 391, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 879, 880], "astyp": [25, 26, 38, 39, 73, 74, 86, 87, 116, 125, 126, 130, 305, 1647, 1659, 1662, 1669, 1670, 1672, 1681, 1682, 1683, 1685], "irrespect": [25, 26, 40, 41, 73, 74, 88, 89, 114, 125, 134, 305, 313, 314, 315, 316, 317, 1711, 1809, 1810, 1811, 1812, 1813, 2141], "rule": [25, 26, 31, 40, 41, 73, 74, 77, 78, 88, 89, 111, 112, 114, 115, 116, 118, 121, 122, 123, 128, 130, 305, 313, 314, 315, 316, 317, 328, 329, 330, 331, 332, 391, 392, 393, 396, 445, 486, 489, 541, 544, 671, 674, 706, 709, 761, 765, 933, 961, 974, 977, 1190, 1197, 1372, 1373, 1374, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1748, 1751, 1769, 1772, 1784, 1787, 1804, 1807, 1868, 1874, 1877, 2135, 2249, 2256], "cast": [25, 26, 31, 40, 41, 73, 74, 79, 88, 89, 116, 123, 127, 132, 305, 313, 314, 315, 316, 317, 328, 329, 330, 331, 332, 393, 394, 395, 397, 933, 955, 1251, 1252, 1253, 1254, 1255, 1711, 1842, 1843, 1844, 1845, 1846, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108, 2126, 2244, 2246], "nan": [25, 26, 29, 30, 31, 32, 33, 56, 57, 73, 74, 77, 78, 79, 80, 81, 111, 116, 119, 129, 213, 305, 313, 314, 315, 316, 317, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 467, 468, 469, 470, 471, 474, 476, 479, 481, 482, 484, 521, 524, 526, 529, 531, 534, 536, 538, 539, 540, 556, 559, 561, 564, 566, 569, 586, 587, 588, 589, 590, 596, 597, 598, 599, 600, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 629, 631, 634, 636, 639, 646, 649, 691, 694, 696, 698, 699, 700, 706, 709, 711, 714, 721, 724, 726, 729, 731, 734, 746, 750, 751, 755, 756, 760, 769, 770, 779, 780, 781, 782, 783, 838, 840, 860, 861, 933, 934, 944, 945, 946, 951, 955, 956, 960, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1103, 1104, 1105, 1106, 1107, 1178, 1179, 1180, 1181, 1182, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1334, 1337, 1349, 1353, 1354, 1414, 1499, 1500, 1501, 1502, 1503, 1603, 1604, 1605, 1606, 1607, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2068, 2083, 2086, 2087, 2088, 2090, 2091, 2094, 2100, 2103, 2104, 2108, 2109, 2111, 2113, 2114, 2115, 2118, 2120, 2123, 2230, 2234, 2238, 2239, 2260, 2261], "infin": [25, 26, 29, 30, 31, 32, 33, 40, 41, 73, 74, 77, 78, 79, 88, 89, 111, 119, 213, 305, 313, 314, 315, 316, 317, 445, 446, 449, 456, 459, 461, 464, 471, 474, 476, 479, 481, 482, 484, 521, 524, 526, 529, 531, 534, 556, 559, 561, 564, 566, 569, 571, 574, 586, 589, 591, 592, 593, 594, 595, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 646, 649, 691, 694, 706, 709, 711, 714, 721, 724, 726, 729, 731, 734, 746, 750, 751, 755, 756, 760, 933, 955, 960, 1251, 1252, 1253, 1254, 1255, 1334, 1337, 1414, 1499, 1500, 1502, 1711, 1799, 1802, 1842, 1843, 1844, 1845, 1846, 2068, 2083, 2086, 2091, 2094, 2114, 2115, 2118, 2120, 2123], "non": [25, 26, 31, 40, 41, 48, 49, 50, 51, 56, 57, 58, 59, 73, 74, 79, 88, 89, 96, 97, 98, 99, 104, 105, 106, 107, 112, 114, 116, 118, 124, 132, 305, 313, 314, 315, 316, 317, 366, 392, 445, 646, 649, 651, 654, 794, 797, 799, 802, 865, 866, 867, 868, 869, 923, 924, 925, 926, 927, 933, 939, 944, 945, 955, 1014, 1017, 1019, 1022, 1164, 1168, 1190, 1192, 1193, 1251, 1252, 1253, 1254, 1255, 1256, 1259, 1349, 1353, 1711, 1722, 1725, 1764, 1767, 1774, 1775, 1776, 1777, 1778, 1809, 1813, 1819, 1822, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1953, 1967, 1978, 1989, 1990, 1991, 1992, 1993, 2005, 2006, 2007, 2009, 2011, 2012, 2014, 2016, 2019, 2021, 2022, 2023, 2024, 2025, 2068, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2134, 2151, 2156, 2173, 2174, 2177, 2181], "float64": [25, 26, 48, 49, 56, 57, 73, 74, 79, 96, 97, 104, 105, 116, 127, 128, 219, 248, 305, 313, 314, 316, 328, 329, 331, 339, 340, 349, 351, 352, 353, 354, 355, 365, 366, 381, 384, 393, 394, 395, 396, 397, 399, 400, 406, 409, 879, 880, 933, 943, 1009, 1012, 1101, 1251, 1253, 1978, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2074, 2075, 2076, 2197, 2218, 2230, 2233, 2239], "broadcast_arrai": [25, 26, 73, 74, 305, 322], "x3": [25, 26, 32, 33, 219, 282, 285, 300, 304, 305, 318, 319, 321, 1414, 1415, 1416, 1418], "broadcast_to": [25, 26, 73, 74, 116, 305, 327], "can_cast": [25, 26, 73, 74, 116, 123, 126, 305, 332], "occur": [25, 26, 31, 52, 53, 73, 74, 79, 100, 101, 111, 115, 120, 305, 328, 329, 330, 331, 332, 933, 955, 1251, 1252, 1253, 1254, 1255, 2005, 2006, 2009, 2011, 2014, 2031, 2032, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2046, 2047, 2051], "as_n": [25, 26, 27, 28, 73, 74, 75, 76, 116, 305, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 365, 410, 416, 417, 418, 419, 420, 421, 432], "int32": [25, 26, 48, 49, 50, 51, 56, 57, 73, 74, 80, 81, 96, 97, 98, 99, 116, 126, 128, 132, 219, 240, 241, 282, 285, 300, 304, 305, 313, 315, 316, 317, 328, 330, 331, 332, 334, 342, 344, 345, 346, 354, 355, 360, 362, 363, 364, 365, 376, 378, 380, 381, 384, 393, 394, 395, 396, 397, 401, 405, 407, 410, 431, 879, 880, 1101, 1349, 1356, 1383, 1387, 1414, 1478, 1481, 1586, 1587, 1589, 1590, 1978, 1984, 1985, 1986, 1988, 1989, 1992, 1994, 1997, 2005, 2011, 2012, 2013, 2014, 2015, 2068, 2069, 2070, 2072, 2074, 2077, 2095, 2098, 2104, 2108, 2230, 2238], "finfo": [25, 26, 73, 74, 128, 305, 353], "1e": [25, 26, 31, 34, 35, 40, 41, 42, 43, 46, 47, 73, 74, 79, 82, 83, 88, 89, 90, 91, 94, 95, 114, 123, 125, 127, 136, 137, 305, 349, 350, 351, 352, 353, 779, 780, 781, 782, 783, 834, 835, 836, 837, 933, 934, 951, 1089, 1090, 1091, 1092, 1093, 1103, 1104, 1105, 1106, 1107, 1183, 1184, 1281, 1282, 1414, 1487, 1488, 1556, 1557, 1565, 1568, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1634, 1637, 1711, 1789, 1793, 1809, 1811, 1813, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1973, 1974, 1975, 1976, 1977, 2126, 2175, 2176, 2177, 2178, 2179, 2180, 2182, 2186, 2187, 2193, 2197, 2212, 2216, 2217, 2218, 2219], "06": [25, 26, 48, 49, 77, 78, 82, 83, 128, 135, 169, 171, 174, 305, 349, 350, 352, 456, 458, 460, 531, 533, 535, 881, 884, 1131, 1136, 1609, 1626, 1628, 1629, 1994, 1995, 2186, 2193, 2197, 2212, 2216, 2217, 2218, 2219], "min": [25, 26, 31, 32, 33, 40, 41, 56, 57, 73, 74, 79, 80, 81, 88, 89, 104, 105, 305, 349, 350, 351, 352, 353, 360, 361, 362, 363, 364, 445, 666, 669, 870, 876, 877, 923, 924, 925, 926, 927, 1164, 1168, 1375, 1378, 1379, 1382, 1414, 1453, 1454, 1455, 1456, 1457, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1565, 1568, 1711, 1764, 1767, 1794, 1795, 1796, 1797, 1798, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 1842, 1843, 1844, 1845, 1846, 2068], "4028235e": [25, 26, 305, 349, 350, 352], "38": [25, 26, 31, 77, 78, 79, 96, 97, 118, 305, 349, 350, 352, 445, 746, 747, 749, 750, 809, 812, 933, 957, 1131, 1133, 1147, 1229, 1230, 1232, 1276, 1277, 1278, 1279, 1280, 1711, 1769, 1772, 1994, 1998, 2230, 2239], "max": [25, 26, 31, 32, 33, 40, 41, 56, 57, 73, 74, 79, 80, 81, 88, 89, 104, 105, 115, 126, 128, 305, 349, 350, 351, 352, 353, 360, 361, 362, 363, 364, 445, 661, 664, 804, 805, 809, 810, 811, 813, 814, 815, 923, 924, 925, 926, 927, 1131, 1145, 1146, 1147, 1164, 1168, 1219, 1220, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1232, 1414, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1453, 1454, 1455, 1456, 1457, 1515, 1517, 1519, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1711, 1764, 1767, 1774, 1775, 1776, 1777, 1778, 1789, 1792, 2068, 2177, 2179, 2230, 2241], "iinfo": [25, 26, 73, 74, 121, 305, 364], "119": [25, 26, 360, 361], "122": [25, 26, 360, 361, 445, 531, 534], "int8": [25, 26, 48, 49, 73, 74, 96, 97, 116, 128, 305, 342, 354, 355, 360, 361, 362, 363, 365, 376, 377, 1984, 1985, 1986, 2230, 2233, 2238, 2239], "128": [25, 26, 31, 38, 39, 62, 67, 68, 73, 74, 79, 86, 87, 305, 360, 361, 362, 363, 881, 884, 933, 941, 969, 970, 971, 972, 973, 1131, 1136, 1414, 1448, 1451, 1486, 1647, 1654, 1657, 1664, 1667, 1681, 1682, 1683, 1685, 1711, 1784, 1787], "127": [25, 26, 31, 73, 74, 79, 305, 360, 361, 362, 363, 933, 960, 1334, 1335, 1336, 1337, 1338], "54": [25, 26, 29, 30, 38, 39, 77, 78, 79, 86, 87, 96, 97, 118, 360, 361, 445, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 556, 558, 560, 731, 733, 735, 756, 758, 760, 870, 872, 881, 884, 885, 1046, 1047, 1048, 1049, 1131, 1136, 1149, 1151, 1153, 1647, 1691, 1692, 1693, 1694, 1695, 1706, 1708, 1709, 1710, 1711, 1769, 1772, 1784, 1787, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2068, 2079, 2082], "1220": [25, 26, 360, 361], "int16": [25, 26, 48, 49, 73, 74, 96, 97, 116, 126, 128, 132, 305, 328, 331, 342, 354, 355, 360, 361, 362, 364, 381, 384, 407, 1984, 1985, 1986, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108, 2230, 2238, 2239], "32768": [25, 26, 73, 74, 360, 361, 362, 364], "32767": [25, 26, 73, 74, 360, 361, 362, 364], "is_bool_dtyp": [25, 26, 73, 74, 305], "is_float_dtyp": [25, 26, 73, 74, 129, 305, 380], "is_int_dtyp": [25, 26, 73, 74, 127, 129, 305], "is_uint_dtyp": [25, 26, 73, 74, 127, 129, 305], "result_typ": [25, 26, 73, 74, 116, 305, 397], "arrays_and_dtyp": [25, 26, 73, 74, 305, 393, 394, 395, 396, 397], "handl": [27, 28, 34, 35, 62, 65, 66, 67, 68, 75, 76, 110, 114, 115, 116, 117, 122, 123, 124, 125, 126, 127, 128, 130, 136, 150, 156, 157, 410, 413, 414, 415, 416, 417, 418, 419, 420, 425, 429, 430, 441, 444, 1621, 1622, 2131, 2141, 2177, 2178, 2179, 2180, 2181, 2182], "to_devic": [27, 28, 75, 76, 410, 416, 437], "stream": [27, 28, 75, 76, 410, 436, 437, 438, 439, 440, 2138], "__dlpack__": [27, 28, 75, 76, 219, 243, 246, 410, 436, 437, 438, 439, 440], "caveat": [27, 28, 75, 76, 410, 436, 437, 438, 439, 440], "portabl": [27, 28, 75, 76, 410, 436, 437, 438, 439, 440, 2126, 2132], "aco": [29, 30, 77, 78, 445, 455, 2126], "real": [29, 30, 31, 56, 57, 77, 78, 79, 104, 105, 114, 445, 451, 452, 453, 455, 456, 457, 466, 467, 468, 470, 476, 477, 478, 480, 481, 482, 483, 485, 541, 542, 543, 545, 556, 558, 560, 561, 563, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 656, 657, 671, 672, 675, 691, 692, 693, 695, 706, 707, 708, 710, 731, 732, 733, 735, 736, 737, 738, 740, 741, 743, 751, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 829, 833, 887, 889, 923, 924, 925, 926, 927, 933, 1131, 1137, 1164, 1168, 1316, 1711, 1737, 1799, 1802, 2068, 2083, 2085, 2091, 2092, 2093, 2094, 2100, 2103, 2136], "invers": [29, 30, 31, 40, 41, 77, 78, 79, 88, 89, 116, 148, 445, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 887, 888, 889, 890, 1131, 1137, 1711, 1753, 1754, 1755, 1756, 1757, 1769, 1772, 1789, 1790, 1791, 1792, 1793, 2285, 2290, 2291, 2292], "cosin": [29, 30, 77, 78, 445, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 870, 873, 881, 884, 1050, 1052, 1131, 1136], "57": [29, 30, 77, 78, 410, 422, 445, 451, 452, 453, 454, 455, 456, 459, 466, 467, 468, 469, 470, 471, 474, 481, 482, 484, 531, 534, 536, 537, 539, 540, 696, 697, 699], "69": [29, 30, 82, 83, 96, 97, 128, 135, 445, 451, 452, 626, 629, 881, 884, 1131, 1136, 1609, 1621, 1623, 1624, 1711, 1764, 1767, 1769, 1772, 1989, 1991, 1994, 1998], "acosh": [29, 30, 77, 78, 305, 354, 355, 357, 358, 445, 2126], "hyperbol": [29, 30, 77, 78, 445, 456, 457, 458, 459, 460, 471, 472, 473, 474, 475, 486, 487, 488, 489, 490, 531, 532, 533, 534, 535, 726, 727, 728, 729, 730, 751, 752, 753, 754, 755], "99": [29, 30, 34, 35, 73, 74, 77, 78, 96, 97, 219, 248, 360, 364, 445, 456, 457, 458, 459, 460, 526, 527, 1414, 1565, 1568, 1609, 1621, 1622, 1624, 1989, 1991, 2068, 2079, 2082], "asin": [29, 30, 77, 78, 445, 470, 2126], "sine": [29, 30, 77, 78, 445, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730], "927": [29, 30, 77, 78, 466, 467, 468, 470], "asinh": [29, 30, 77, 78, 445, 475, 2126], "atan": [29, 30, 77, 78, 445, 480, 2126], "tangent": [29, 30, 77, 78, 119, 445, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755], "785": [29, 30, 77, 78, 445, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "atan2": [29, 30, 77, 78, 445, 485, 2126], "quotient": [29, 30, 77, 78, 445, 481, 482, 483, 484, 485], "245": [29, 30, 86, 87, 481, 482, 1647, 1686, 1689, 1691, 1693, 1694, 1695], "68": [29, 30, 96, 97, 169, 182, 185, 219, 248, 445, 481, 482, 484, 881, 884, 1131, 1136, 1973, 1974, 1977, 1989, 1991, 1994, 1996], "588": [29, 30, 445, 481, 482, 484], "inf": [29, 30, 31, 32, 33, 40, 41, 77, 78, 79, 80, 81, 88, 89, 116, 213, 445, 481, 482, 484, 561, 564, 586, 587, 589, 591, 592, 593, 594, 595, 596, 597, 599, 601, 603, 604, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 769, 770, 933, 955, 1178, 1179, 1180, 1181, 1182, 1251, 1252, 1253, 1254, 1255, 1414, 1499, 1501, 1502, 1503, 1603, 1604, 1605, 1606, 1607, 1711, 1764, 1765, 1766, 1767, 1768, 1842, 1843, 1844, 1845, 1846, 2230, 2233, 2234, 2238, 2239, 2260, 2261], "36": [29, 30, 31, 38, 39, 56, 57, 79, 80, 81, 88, 89, 445, 481, 482, 484, 711, 712, 716, 717, 814, 818, 881, 884, 933, 948, 1039, 1040, 1041, 1042, 1131, 1136, 1414, 1448, 1451, 1453, 1456, 1457, 1691, 1692, 1711, 1769, 1772, 1784, 1787, 1814, 1818, 1832, 1833, 1835, 1953, 1965, 2068, 2079, 2080, 2082], "75": [29, 30, 31, 77, 78, 79, 80, 81, 86, 87, 96, 97, 219, 254, 257, 445, 471, 474, 475, 481, 482, 483, 484, 485, 541, 544, 870, 873, 881, 884, 933, 948, 1039, 1040, 1041, 1042, 1050, 1052, 1084, 1086, 1088, 1131, 1136, 1185, 1188, 1281, 1284, 1301, 1303, 1305, 1414, 1458, 1460, 1462, 1505, 1508, 1509, 1510, 1514, 1565, 1567, 1649, 1651, 1653, 1711, 1753, 1756, 1784, 1787, 1953, 1962, 1978, 1989, 1993, 1994, 1997], "52": [29, 30, 77, 78, 80, 81, 82, 83, 96, 97, 445, 481, 482, 484, 531, 533, 535, 541, 543, 544, 545, 1414, 1448, 1451, 1453, 1456, 1457, 1510, 1513, 1609, 1611, 1613, 1614, 1647, 1691, 1694, 1711, 1784, 1787, 1994, 1996, 2068, 2079, 2082], "719": [29, 30, 445, 481, 482, 484], "197": [29, 30, 445, 481, 482, 484], "atanh": [29, 30, 77, 78, 445, 490, 2126], "549": [29, 30, 77, 78, 86, 87, 445, 486, 487, 488, 489, 490, 1647, 1691, 1693, 1694, 1695], "47": [29, 30, 31, 48, 49, 77, 78, 79, 80, 81, 82, 83, 96, 97, 445, 486, 487, 488, 490, 731, 734, 809, 810, 814, 816, 1131, 1146, 1147, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1414, 1448, 1451, 1453, 1456, 1457, 1609, 1621, 1623, 1624, 1647, 1691, 1694, 1978, 1989, 1991, 1994, 1995, 1997], "bitwise_and": [29, 30, 77, 78, 120, 445, 495], "11": [29, 30, 31, 32, 33, 38, 39, 40, 41, 48, 49, 56, 57, 62, 67, 68, 77, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 96, 97, 104, 105, 114, 115, 116, 118, 129, 445, 461, 463, 465, 476, 479, 491, 492, 494, 561, 563, 706, 707, 709, 711, 714, 741, 742, 744, 804, 805, 807, 809, 810, 812, 814, 818, 881, 885, 908, 909, 910, 911, 912, 928, 931, 994, 995, 996, 997, 998, 1059, 1060, 1061, 1062, 1063, 1074, 1076, 1078, 1131, 1132, 1133, 1145, 1146, 1164, 1169, 1190, 1195, 1198, 1202, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1393, 1394, 1396, 1414, 1432, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1473, 1476, 1510, 1513, 1549, 1550, 1552, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1711, 1732, 1735, 1743, 1746, 1747, 1753, 1756, 1759, 1760, 1762, 1764, 1765, 1766, 1767, 1768, 1784, 1787, 1809, 1813, 1814, 1818, 1852, 1863, 1866, 1868, 1889, 1892, 1914, 1916, 1918, 1919, 1921, 1923, 1929, 1930, 1932, 1939, 1940, 1942, 1943, 1953, 1960, 1962, 1972, 1978, 1984, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 2005, 2026, 2030, 2031, 2032, 2036, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2076, 2077, 2078, 2079, 2080, 2082, 2109, 2112], "bitwise_invert": [29, 30, 77, 78, 445, 500], "bitiwse_invert": [29, 30, 496, 497], "bitwise_left_shift": [29, 30, 77, 78, 445, 505], "bitwise_or": [29, 30, 77, 78, 445, 510], "89": [29, 30, 48, 49, 62, 67, 68, 73, 74, 77, 78, 79, 96, 97, 305, 360, 362, 363, 445, 516, 517, 518, 519, 520, 881, 884, 885, 1131, 1136, 1711, 1819, 1822, 1989, 1991, 1994, 1995, 2068, 2104, 2108], "51": [29, 30, 31, 77, 78, 79, 80, 81, 96, 97, 445, 516, 517, 671, 673, 726, 727, 729, 881, 882, 883, 884, 885, 1131, 1136, 1510, 1514, 1989, 1993, 1994, 1996, 2230, 2239], "18": [29, 30, 31, 48, 49, 77, 78, 79, 86, 87, 96, 97, 104, 105, 114, 118, 120, 169, 182, 185, 445, 461, 465, 516, 517, 541, 544, 706, 707, 726, 727, 728, 729, 730, 881, 884, 933, 948, 984, 987, 994, 995, 997, 1039, 1040, 1041, 1042, 1079, 1080, 1081, 1082, 1083, 1131, 1136, 1141, 1142, 1145, 1190, 1198, 1219, 1220, 1221, 1222, 1223, 1669, 1671, 1673, 1711, 1732, 1735, 1759, 1762, 1784, 1787, 1978, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1996, 1998, 2068, 2074, 2076, 2077, 2079, 2082, 2095, 2097, 2099], "19": [29, 30, 31, 48, 49, 77, 78, 79, 88, 89, 96, 97, 118, 445, 471, 473, 475, 516, 517, 561, 565, 626, 628, 671, 673, 675, 746, 747, 748, 749, 750, 814, 815, 817, 881, 884, 885, 994, 995, 997, 1079, 1082, 1131, 1134, 1136, 1142, 1145, 1190, 1198, 1219, 1220, 1221, 1222, 1223, 1711, 1732, 1735, 1764, 1766, 1768, 1827, 1828, 1830, 1831, 1953, 1965, 1978, 1984, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1996, 1998, 2052, 2063, 2066], "26": [29, 30, 46, 47, 48, 49, 79, 80, 81, 82, 83, 96, 97, 445, 516, 517, 541, 544, 726, 729, 881, 884, 885, 1131, 1136, 1164, 1172, 1250, 1414, 1505, 1508, 1509, 1609, 1611, 1613, 1614, 1647, 1681, 1684, 1711, 1732, 1735, 1784, 1787, 1819, 1822, 1953, 1955, 1973, 1974, 1975, 1977, 1984, 1986, 1989, 1990, 2068, 2079, 2082], "27": [29, 30, 31, 40, 41, 48, 49, 77, 78, 79, 86, 87, 88, 89, 96, 97, 104, 105, 445, 511, 514, 516, 517, 531, 534, 691, 692, 693, 694, 726, 729, 731, 733, 735, 881, 884, 933, 943, 1009, 1010, 1012, 1131, 1136, 1266, 1270, 1414, 1510, 1513, 1647, 1706, 1708, 1709, 1710, 1711, 1759, 1762, 1784, 1787, 1832, 1833, 1834, 1835, 1836, 1953, 1955, 1962, 1984, 1988, 1989, 1990, 2068, 2079, 2082, 2095, 2097, 2099, 2230, 2238], "23": [29, 30, 31, 38, 39, 48, 49, 71, 72, 77, 78, 79, 80, 81, 96, 97, 128, 132, 219, 249, 251, 252, 253, 445, 516, 517, 519, 531, 532, 533, 535, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 706, 709, 711, 712, 716, 719, 726, 727, 728, 729, 730, 756, 760, 804, 805, 807, 809, 810, 814, 816, 849, 851, 852, 855, 858, 859, 881, 884, 885, 933, 937, 938, 958, 1131, 1132, 1136, 1145, 1146, 1147, 1219, 1220, 1222, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1312, 1314, 1315, 1510, 1514, 1647, 1674, 1677, 1706, 1707, 1709, 1711, 1732, 1735, 1764, 1767, 1814, 1818, 1953, 1955, 1962, 1984, 1985, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2005, 2026, 2030], "20": [29, 30, 31, 38, 39, 48, 49, 56, 57, 77, 78, 79, 80, 81, 86, 87, 96, 97, 104, 105, 115, 120, 130, 134, 445, 516, 517, 536, 539, 556, 557, 558, 559, 696, 698, 699, 711, 713, 714, 715, 731, 734, 804, 805, 807, 814, 815, 816, 817, 933, 948, 951, 1039, 1040, 1041, 1042, 1103, 1106, 1131, 1132, 1134, 1145, 1219, 1220, 1222, 1229, 1231, 1233, 1414, 1448, 1451, 1478, 1480, 1481, 1482, 1486, 1549, 1551, 1552, 1553, 1565, 1568, 1569, 1649, 1650, 1654, 1655, 1696, 1697, 1698, 1711, 1732, 1735, 1753, 1756, 1764, 1767, 1784, 1787, 1819, 1822, 1978, 1984, 1985, 1986, 1987, 2005, 2021, 2024, 2026, 2030, 2068, 2069, 2071, 2073, 2074, 2075, 2076, 2079, 2082, 2095, 2098, 2104, 2108], "74": [29, 30, 96, 97, 445, 516, 517, 636, 639, 881, 884, 1131, 1136, 1711, 1769, 1772, 1994, 1998], "41": [29, 30, 31, 77, 78, 79, 80, 81, 88, 89, 169, 182, 185, 445, 476, 478, 479, 480, 516, 517, 671, 673, 731, 732, 734, 809, 810, 1131, 1146, 1224, 1225, 1227, 1349, 1356, 1383, 1384, 1385, 1386, 1387, 1414, 1433, 1436, 1437, 1438, 1441, 1442, 1711, 1712, 1714, 1715, 1716, 2068, 2104, 2108], "59": [29, 30, 516, 517], "ceil": [29, 30, 77, 78, 125, 219, 221, 222, 445, 525, 2126], "express": [29, 30, 31, 77, 78, 79, 119, 121, 126, 132, 137, 445, 451, 454, 466, 469, 476, 479, 481, 484, 526, 527, 528, 529, 530, 536, 539, 696, 699, 721, 722, 723, 724, 725, 746, 747, 748, 749, 750, 933, 960, 1334, 1335, 1336, 1337, 1338, 2134, 2135, 2285, 2293, 2306], "radian": [29, 30, 31, 77, 78, 79, 119, 445, 451, 454, 466, 469, 476, 479, 481, 484, 526, 527, 528, 529, 530, 536, 537, 538, 539, 540, 696, 697, 698, 699, 700, 721, 722, 723, 724, 725, 746, 747, 748, 749, 750, 784, 785, 786, 787, 788, 933, 935, 960, 1334, 1335, 1336, 1337, 1338], "416": [29, 30, 445, 526, 527, 529], "540": [29, 30, 526, 527], "990": [29, 30, 526, 527], "cosh": [29, 30, 77, 78, 445, 456, 460, 535, 2126], "angl": [29, 30, 31, 77, 78, 79, 148, 445, 481, 484, 531, 532, 533, 534, 535, 726, 727, 728, 729, 730, 751, 752, 753, 754, 755, 788, 933, 949, 1069, 1072], "76": [29, 30, 56, 57, 73, 74, 77, 78, 96, 97, 305, 360, 362, 363, 445, 456, 458, 460, 531, 532, 533, 534, 535, 726, 728, 730, 751, 752, 1711, 1819, 1822, 1953, 1962, 1989, 1991, 2068, 2079, 2080, 2082], "81": [29, 30, 73, 74, 77, 78, 88, 89, 96, 97, 128, 305, 360, 362, 363, 445, 531, 532, 626, 629, 630, 736, 737, 739, 1711, 1769, 1772, 1832, 1833, 1835, 1953, 1962, 1978, 1994, 1996, 1997, 2068, 2079, 2082], "deg2rad": [29, 30, 77, 78, 445, 540], "degre": [29, 30, 31, 56, 57, 77, 78, 79, 104, 105, 445, 536, 537, 538, 539, 540, 696, 697, 698, 699, 700, 784, 785, 786, 787, 788, 933, 935, 1190, 1209, 1322, 1323, 1324, 1325, 1326, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2133], "180": [29, 30, 77, 78, 445, 536, 537, 539, 540, 696, 699, 700], "270": [29, 30, 77, 78, 445, 536, 537, 539, 540, 696, 699, 700], "360": [29, 30, 77, 78, 115, 445, 536, 537, 539, 540, 696, 699, 700], "71": [29, 30, 77, 78, 445, 536, 537, 539, 540, 696, 699], "28": [29, 30, 38, 39, 46, 47, 77, 78, 79, 80, 81, 86, 87, 96, 97, 104, 105, 445, 536, 537, 539, 540, 626, 628, 696, 699, 881, 884, 885, 1131, 1136, 1414, 1505, 1508, 1509, 1609, 1611, 1614, 1647, 1654, 1656, 1657, 1658, 1664, 1665, 1666, 1667, 1668, 1674, 1675, 1676, 1677, 1678, 1681, 1684, 1691, 1694, 1711, 1784, 1787, 1973, 1974, 1975, 1977, 1984, 1986, 1989, 1991, 1994, 1996, 2068, 2079, 2082, 2095, 2097, 2099], "dividend": [29, 30, 77, 78, 445, 541, 542, 543, 544, 545, 571, 572, 573, 575, 706, 707, 709, 761, 762, 763, 764, 765], "divisor": [29, 30, 31, 34, 35, 56, 57, 77, 78, 79, 82, 83, 104, 105, 445, 541, 542, 543, 544, 545, 571, 572, 573, 575, 576, 578, 580, 706, 707, 709, 761, 762, 763, 764, 765, 908, 909, 910, 912, 933, 947, 1032, 1035, 1059, 1060, 1061, 1062, 1063, 1190, 1202, 1212, 1393, 1394, 1395, 1396, 1397, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2177, 2178, 2179], "375": [29, 30, 546, 547, 681, 682], "erf": [29, 30, 77, 78, 445, 555], "exponenti": [29, 30, 77, 78, 445, 551, 552, 553, 554, 555, 556, 557, 559, 636, 639, 691, 692, 694, 1164, 1171, 1214, 1217], "gauss": [29, 30, 77, 78, 445, 551, 552, 553, 554, 555], "328": [29, 30, 445, 551, 552, 554, 746, 750], "677": [29, 30, 445, 551, 552, 554], "842": [29, 30, 445, 551, 552, 554, 746, 750], "exp": [29, 30, 31, 77, 78, 79, 126, 445, 560, 561, 564, 636, 639, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1141, 1142, 1711, 1799, 1802, 2126], "71828198": [29, 30, 77, 78, 556, 557, 558, 560], "38905573": [29, 30, 77, 78, 556, 557, 558, 560], "08553696": [29, 30, 77, 78, 556, 557, 558, 561, 565], "expm1": [29, 30, 77, 78, 116, 445, 565], "244": [29, 30, 561, 562, 881, 884, 1131, 1136], "918": [29, 30, 561, 562], "48": [29, 30, 31, 77, 78, 79, 80, 81, 82, 83, 96, 97, 169, 177, 180, 445, 456, 458, 459, 460, 561, 562, 731, 734, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 881, 882, 883, 884, 885, 1131, 1133, 1134, 1136, 1146, 1147, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1414, 1505, 1508, 1509, 1609, 1611, 1613, 1614, 1621, 1623, 1624, 1711, 1784, 1787, 1953, 1955, 1989, 1991, 1994, 1998, 2068, 2079, 2082], "147": [29, 30, 445, 561, 562, 564], "floor": [29, 30, 31, 77, 78, 125, 445, 511, 514, 570, 887, 889, 1131, 1137, 2126], "floor_divid": [29, 30, 77, 78, 445, 575, 2276, 2281], "isfinit": [29, 30, 77, 78, 126, 445, 590], "out_i": [29, 30, 77, 78, 79, 445, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 933, 958, 1312, 1314, 1315, 1316], "self_i": [29, 30, 77, 78, 79, 586, 587, 588, 591, 592, 593, 596, 597, 598, 601, 602, 603, 1312, 1314], "finit": [29, 30, 31, 77, 78, 79, 445, 461, 464, 481, 484, 586, 587, 588, 589, 590, 691, 694, 706, 709, 933, 955, 1251, 1252, 1253, 1254, 1255], "isinf": [29, 30, 77, 78, 445, 595], "detect_posit": [29, 30, 77, 78, 445, 591, 592, 593, 594, 595], "detect_neg": [29, 30, 77, 78, 445, 591, 592, 593, 594, 595], "isnan": [29, 30, 77, 78, 445, 600], "isreal": [29, 30, 77, 78, 445, 605], "1j": [29, 30, 31, 77, 78, 79, 601, 602, 603, 784, 785, 787, 849, 851, 933, 935, 1312, 1314, 1414, 1565, 1568], "5j": [29, 30, 77, 78, 79, 445, 601, 602, 604, 605, 849, 852, 853, 933, 937, 958, 1312, 1315, 1316], "6j": [29, 30, 31, 79, 445, 601, 602, 604, 849, 850, 933, 950, 1084, 1085, 1086, 1087, 1088, 1312, 1313], "61": [29, 30, 31, 77, 78, 79, 82, 83, 90, 91, 96, 97, 445, 471, 473, 616, 617, 619, 626, 629, 630, 736, 737, 739, 881, 882, 883, 884, 885, 1131, 1136, 1609, 1611, 1613, 1614, 1647, 1681, 1684, 1852, 1853, 1855, 1856, 1857, 1863, 1865, 1867, 1994, 1996], "log10": [29, 30, 77, 78, 445, 625], "logarithm": [29, 30, 77, 78, 445, 556, 559, 616, 619, 621, 622, 623, 624, 625, 626, 629, 631, 632, 633, 634, 635, 636, 639, 1711, 1799, 1802], "602": [29, 30, 445, 621, 622, 624], "699": [29, 30, 445, 621, 622, 624], "log1p": [29, 30, 77, 78, 445, 630], "693": [29, 30, 77, 78, 169, 202, 205, 445, 471, 474, 626, 627, 629, 630, 1852, 1863, 1866], "001": [29, 30, 31, 46, 47, 73, 74, 79, 82, 83, 135, 136, 169, 197, 200, 305, 349, 351, 352, 353, 626, 627, 849, 852, 933, 937, 958, 1103, 1104, 1105, 1107, 1312, 1315, 1609, 1615, 1617, 1618, 1973, 1974, 1975, 1977], "0953": [29, 30, 77, 78, 445, 616, 618, 619, 620, 626, 627], "log2": [29, 30, 77, 78, 445, 635, 933, 954, 1173, 1176], "logaddexp": [29, 30, 77, 78, 445], "logical_and": [29, 30, 77, 78, 126, 130, 445, 645, 2126, 2141], "logical_not": [29, 30, 77, 78, 116, 445, 650, 2126], "logical_or": [29, 30, 77, 78, 445, 655, 2126, 2141], "conform": [29, 30, 40, 41, 77, 78, 119, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 264, 267, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 349, 352, 360, 363, 393, 396, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 918, 921, 1164, 1167, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1846, 1868, 1874, 1877, 1884, 1887, 1889, 1892, 1894, 1897, 1904, 1907, 1909, 1912, 1919, 1922, 1924, 1927, 1944, 1948, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123], "org": [29, 30, 77, 78, 82, 83, 119, 305, 328, 331, 445, 586, 589, 651, 652, 653, 711, 714, 870, 876, 877, 918, 921, 1164, 1167, 1375, 1378, 1379, 1382, 1609, 1611, 1614, 1615, 1618, 1711, 1743, 1744, 1799, 1802, 1847, 1851, 1868, 1944, 1948, 2068, 2100, 2103], "api_specif": [29, 30, 77, 78, 119, 305, 328, 331, 445, 586, 589, 651, 652, 653, 711, 714, 1868, 1944, 1948, 2068, 2100, 2103], "elementwise_funct": [29, 30, 77, 78, 119, 445, 586, 589, 651, 652, 653, 711, 714], "noqa": [29, 30, 40, 41, 77, 78, 127, 219, 221, 222, 224, 226, 234, 235, 238, 240, 241, 243, 246, 248, 249, 252, 254, 257, 264, 267, 279, 280, 282, 285, 287, 291, 292, 296, 297, 299, 300, 304, 305, 328, 331, 349, 352, 360, 363, 393, 396, 445, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 541, 544, 546, 549, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 591, 594, 596, 599, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 652, 653, 654, 656, 659, 676, 679, 681, 684, 686, 689, 691, 694, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 1414, 1608, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1744, 1746, 1753, 1756, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1837, 1841, 1842, 1843, 1845, 1846, 1868, 1874, 1877, 1884, 1887, 1889, 1892, 1894, 1897, 1904, 1907, 1909, 1912, 1919, 1922, 1924, 1927, 1944, 1948, 2005, 2006, 2009, 2011, 2014, 2021, 2024, 2026, 2030, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2056, 2063, 2066, 2068, 2083, 2086, 2091, 2094, 2095, 2098, 2100, 2103, 2104, 2108, 2109, 2113, 2114, 2115, 2118, 2120, 2123, 2312, 2318, 2320], "logical_xor": [29, 30, 77, 78, 445, 660], "use_wher": [29, 30, 77, 78, 445, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670], "formula": [29, 30, 77, 78, 445, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670], "clip": [29, 30, 44, 45, 77, 78, 80, 81, 92, 93, 114, 123, 125, 135, 137, 445, 661, 662, 663, 664, 665, 666, 667, 669, 1414, 1433, 1435, 1436, 1437, 1438, 1441, 1868, 1873, 2126], "minimum": [29, 30, 31, 32, 33, 44, 45, 50, 51, 56, 57, 77, 78, 79, 80, 81, 92, 93, 98, 99, 104, 105, 445, 446, 449, 670, 838, 839, 840, 842, 933, 943, 945, 1009, 1012, 1019, 1020, 1021, 1022, 1023, 1190, 1208, 1285, 1288, 1414, 1487, 1488, 1556, 1557, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1868, 1869, 1870, 1871, 1872, 1873, 2005, 2011, 2012, 2013, 2014, 2015, 2068, 2083, 2086, 2091, 2092, 2093, 2094, 2126, 2131, 2137, 2141, 2230, 2233, 2234, 2238, 2239, 2241, 2249, 2250, 2252, 2255, 2260, 2261, 2262, 2263, 2276, 2281, 2282], "exce": [29, 30, 31, 79, 445, 666, 667, 669, 1190, 1211, 1367, 1368, 1369, 1370, 1371], "30": [29, 30, 31, 62, 67, 68, 79, 80, 81, 96, 97, 104, 105, 115, 445, 671, 672, 674, 881, 884, 933, 948, 1039, 1040, 1041, 1042, 1131, 1136, 1276, 1278, 1280, 1383, 1384, 1386, 1414, 1448, 1451, 1458, 1460, 1462, 1478, 1480, 1481, 1482, 1505, 1508, 1509, 1510, 1513, 1514, 1549, 1551, 1552, 1553, 1559, 1565, 1568, 1569, 1711, 1753, 1756, 1784, 1787, 1953, 1963, 1984, 1986, 1989, 1991, 1993, 2068, 2074, 2076, 2079, 2082, 2095, 2098, 2151, 2158, 2249, 2256], "56": [29, 30, 31, 38, 39, 48, 49, 77, 78, 79, 86, 87, 118, 219, 259, 262, 445, 671, 672, 674, 731, 734, 746, 747, 748, 749, 750, 756, 760, 881, 882, 883, 884, 885, 1131, 1136, 1609, 1611, 1614, 1647, 1654, 1656, 1657, 1658, 1664, 1665, 1666, 1667, 1668, 1674, 1675, 1676, 1677, 1678, 1691, 1692, 1711, 1784, 1787, 1814, 1818, 1989, 1990, 2068, 2079, 2082], "expon": [29, 30, 31, 32, 33, 79, 80, 81, 445, 691, 692, 694, 933, 943, 1009, 1010, 1011, 1012, 1013, 1154, 1155, 1414, 1570, 1571, 1572, 1573, 1574, 1711, 1769, 1772], "rad2deg": [29, 30, 77, 78, 445, 700], "286": [29, 30, 79, 696, 697, 881, 885], "458": [29, 30, 696, 697], "573": [29, 30, 445, 696, 697, 699], "reciproc": [29, 30, 77, 78, 445, 705], "333": [29, 30, 77, 78, 445, 541, 543, 544, 545, 701, 702, 1414, 1438, 1441, 1647, 1681, 1684], "remaind": [29, 30, 31, 44, 45, 65, 66, 77, 78, 79, 92, 93, 111, 125, 445, 710, 933, 946, 1024, 1025, 1026, 1027, 1028, 1868, 1914, 1915, 1916, 1917, 1918], "modulu": [29, 30, 77, 78, 125, 445, 706, 707, 708, 709, 710], "x2_i": [29, 30, 77, 78, 111, 445, 461, 464, 481, 484, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 541, 544, 546, 549, 571, 574, 576, 579, 581, 584, 606, 609, 611, 614, 636, 639, 641, 644, 651, 654, 656, 659, 671, 674, 681, 684, 691, 694, 706, 707, 708, 709, 710, 741, 745], "94": [29, 30, 34, 35, 48, 49, 77, 78, 82, 83, 96, 97, 410, 430, 471, 475, 711, 712, 716, 717, 881, 884, 1131, 1136, 1609, 1621, 1622, 1623, 1624, 1994, 1995, 1996], "256": [29, 30, 711, 712, 716, 717, 1647, 1654, 1657, 1664, 1667, 1674, 1677, 2230, 2233], "0001": [29, 30, 711, 712, 716, 717, 2177, 2178, 2179, 2180, 2182, 2230, 2234, 2238, 2239, 2260, 2261, 2263], "45": [29, 30, 31, 56, 57, 62, 67, 68, 77, 78, 79, 82, 83, 96, 97, 445, 481, 483, 484, 485, 541, 543, 544, 545, 711, 712, 716, 717, 784, 785, 787, 814, 816, 881, 884, 933, 935, 957, 1131, 1136, 1229, 1231, 1233, 1276, 1277, 1278, 1279, 1280, 1609, 1611, 1614, 1626, 1628, 1629, 1711, 1784, 1787, 1868, 1914, 1917, 1989, 1991, 1994, 1996, 2068, 2079, 2080, 2082, 2230, 2239], "678": [29, 30, 711, 712, 716, 717], "33": [29, 30, 48, 49, 56, 57, 77, 78, 80, 81, 82, 83, 86, 87, 445, 471, 473, 476, 479, 511, 514, 711, 712, 809, 812, 1131, 1133, 1414, 1438, 1440, 1565, 1568, 1609, 1621, 1623, 1624, 1647, 1686, 1689, 1691, 1693, 1694, 1695, 1711, 1784, 1787, 1953, 1972, 1984, 1985, 2068, 2079, 2082, 2109, 2111, 2230, 2234, 2238, 2239, 2260, 2261, 2262, 2263], "sin": [29, 30, 32, 33, 77, 78, 112, 132, 445, 725, 1414, 1466, 1467, 1469, 2126], "841": [29, 30, 63, 64, 77, 78, 169, 171, 173, 174, 445, 721, 722, 723, 724, 725], "909": [29, 30, 77, 78, 80, 81, 445, 721, 722, 723, 724, 725, 1565, 1569], "141": [29, 30, 77, 78, 305, 313, 316, 445, 721, 722, 723, 724, 725], "sinh": [29, 30, 77, 78, 445, 730, 2126], "63": [29, 30, 63, 64, 77, 78, 88, 89, 207, 209, 211, 445, 696, 699, 726, 727, 728, 729, 730, 731, 734, 881, 884, 1131, 1136, 1711, 1712, 1714, 1715, 1716, 1784, 1787, 1953, 1955, 2068, 2079, 2082], "232": [29, 30, 77, 78, 445, 726, 727, 728, 729, 730], "sqrt": [29, 30, 31, 77, 78, 79, 445, 735, 887, 889, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1137, 1141, 1142, 1842, 1843, 1845, 2151, 2154, 2156, 2158], "squar": [29, 30, 40, 41, 77, 78, 88, 89, 445, 731, 732, 733, 734, 735, 740, 1164, 1171, 1214, 1217, 1609, 1620, 1625, 1645, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1725, 1727, 1730, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1769, 1772, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1813, 1832, 1833, 1834, 1835, 1836, 1953, 1960], "73": [29, 30, 88, 89, 128, 731, 732, 1711, 1712, 1714, 1715, 1716, 1978, 1989, 1992], "44": [29, 30, 31, 48, 49, 77, 78, 79, 96, 97, 445, 471, 474, 671, 673, 711, 714, 731, 734, 736, 737, 739, 814, 815, 816, 817, 855, 858, 881, 883, 885, 933, 938, 1131, 1134, 1229, 1231, 1233, 1414, 1432, 1647, 1686, 1689, 1711, 1784, 1787, 1953, 1962, 1984, 1986, 1988, 1989, 1990, 1991, 2005, 2026, 2030, 2068, 2079, 2082], "tan": [29, 30, 77, 78, 114, 119, 122, 123, 125, 126, 132, 445, 747, 1414, 1421, 2126], "tanh": [29, 30, 77, 78, 132, 445, 752, 2126], "762": [29, 30, 77, 78, 445, 751, 753, 754, 755], "964": [29, 30, 77, 78, 445, 751, 753, 754, 755], "trunc": [29, 30, 77, 78, 445, 757], "025": [29, 30, 445, 756, 758, 760], "trunc_divid": [29, 30, 77, 78, 445, 762], "elementwis": [30, 31, 46, 47, 78, 94, 95, 123, 129, 132, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 745, 746, 750, 751, 755, 756, 760, 761, 765, 769, 770, 771, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 1178, 1179, 1181, 1296, 1297, 1299, 1408, 1412, 1711, 1832, 1836, 1973, 1974, 1975, 1976, 1977], "logit": [31, 42, 43, 79, 90, 91, 769, 819, 820, 821, 822, 823, 834, 835, 836, 837, 1182, 1183, 1184, 1306, 1307, 1852, 1863, 1864, 1865, 1866, 1867], "ep": [31, 40, 41, 79, 88, 89, 305, 349, 352, 769, 770, 923, 924, 925, 926, 927, 1089, 1090, 1091, 1092, 1093, 1164, 1168, 1178, 1179, 1180, 1181, 1182, 1281, 1282, 1711, 1774, 1775, 1776, 1777, 1778, 1789, 1792], "outpu": [31, 79, 769, 770, 1178, 1179, 1180, 1181, 1182], "clamp": [31, 79, 137, 769, 770, 1178, 1179, 1180, 1181, 1182], "19722438": [31, 79, 769, 770, 1178, 1179, 1180, 1181, 1182], "38629448": [31, 79, 769, 770, 1178, 1179, 1180, 1181, 1182], "38629436": [31, 79, 769, 770, 1178, 1179, 1180, 1181, 1182], "prelu": [31, 79, 769], "unidirect": [31, 769, 771, 1296, 1297, 1299], "relu6": [31, 79, 769, 1321], "rectifi": [31, 63, 64, 79, 169, 177, 180, 187, 189, 190, 191, 192, 194, 195, 196, 769, 772, 773, 1317, 1318, 1319, 1320, 1321, 1362, 1363, 1365, 1366], "linear": [31, 32, 33, 38, 39, 63, 64, 79, 80, 81, 86, 87, 114, 119, 126, 128, 130, 132, 135, 136, 137, 169, 171, 174, 176, 177, 180, 187, 189, 190, 191, 192, 194, 195, 196, 207, 209, 210, 211, 769, 772, 773, 1095, 1096, 1097, 1098, 1099, 1131, 1144, 1190, 1208, 1285, 1288, 1301, 1302, 1303, 1304, 1305, 1317, 1318, 1319, 1320, 1321, 1349, 1355, 1362, 1363, 1364, 1365, 1366, 1414, 1466, 1467, 1468, 1469, 1470, 1540, 1647, 1695, 1804, 1807, 1953, 1961, 2126, 2132, 2133, 2134, 2137, 2151, 2156, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2230, 2234, 2238, 2239, 2249, 2250, 2260, 2261, 2262, 2263], "thresholded_relu": [31, 79, 769, 1363], "eye_lik": [31, 79, 870, 983], "allclos": [31, 79, 783, 933], "rtol": [31, 40, 41, 79, 88, 89, 127, 779, 780, 781, 782, 783, 933, 934, 951, 1103, 1104, 1105, 1106, 1107, 1711, 1774, 1775, 1776, 1777, 1778, 1789, 1790, 1791, 1792, 1793, 2186, 2187, 2193, 2197, 2216, 2217, 2218, 2219], "atol": [31, 40, 41, 79, 88, 89, 127, 779, 780, 781, 782, 783, 933, 934, 951, 1103, 1104, 1105, 1106, 1107, 1711, 1774, 1775, 1776, 1777, 1778, 2186, 2187, 2193, 2197, 2216, 2217, 2218, 2219], "08": [31, 56, 57, 79, 96, 97, 445, 471, 474, 779, 780, 781, 782, 783, 933, 934, 951, 1103, 1104, 1105, 1106, 1107, 1647, 1706, 1709, 1989, 1991, 1994, 1996, 2109, 2111, 2186, 2187, 2230, 2238, 2239], "equal_nan": [31, 79, 779, 780, 781, 782, 783, 933, 934, 951, 1103, 1104, 1105, 1106, 1107], "toler": [31, 40, 41, 79, 88, 89, 111, 127, 779, 780, 781, 782, 783, 923, 924, 925, 926, 927, 933, 934, 951, 1103, 1104, 1105, 1106, 1107, 1164, 1168, 1711, 1774, 1775, 1776, 1777, 1778, 1789, 1790, 1791, 1792, 1793, 2134, 2186, 2187, 2193, 2197, 2216, 2217, 2218, 2219], "compar": [31, 32, 33, 54, 55, 65, 66, 79, 80, 81, 102, 103, 113, 118, 120, 121, 127, 128, 135, 779, 780, 781, 782, 783, 933, 934, 951, 1103, 1104, 1105, 1106, 1107, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066, 2130, 2132, 2134, 2140, 2141, 2197, 2216, 2217, 2218, 2219], "1e10": [31, 779, 780, 782, 933, 934, 951, 1103, 1106], "00001e10": [31, 779, 780, 782, 933, 934, 951, 1103, 1106], "00001e": [31, 779, 780, 782, 933, 934], "005": [31, 779, 780, 782, 933, 934, 951, 1103, 1106], "deg": [31, 79, 784, 785, 786, 787, 788, 933, 935], "set_backend": [31, 79, 111, 113, 116, 123, 124, 132, 134, 137, 305, 357, 358, 410, 414, 415, 432, 433, 784, 785, 786, 787, 788, 879, 880, 923, 926, 933, 935, 1101, 1164, 1168, 2126, 2312, 2318, 2320, 2324, 2325, 2326, 2327, 2328], "2j": [31, 79, 784, 785, 787, 849, 850, 933, 935, 950, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1131, 1141, 1142, 1312, 1313], "3j": [31, 77, 78, 79, 445, 601, 603, 604, 605, 784, 785, 787, 849, 850, 851, 852, 853, 933, 935, 937, 958, 1312, 1313, 1314, 1315, 1316], "35619449": [31, 784, 785, 787, 933, 935], "78539816": [31, 784, 785, 787, 933, 935], "135": [31, 784, 785, 787, 933, 935, 1414, 1433, 1436], "binar": [31, 79, 833, 933], "map": [31, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 114, 116, 122, 123, 126, 128, 129, 135, 148, 149, 171, 173, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 249, 251, 253, 274, 276, 278, 282, 284, 286, 300, 301, 303, 318, 320, 322, 328, 330, 332, 360, 362, 364, 372, 373, 375, 376, 378, 380, 393, 395, 397, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 779, 781, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 823, 824, 826, 828, 829, 830, 831, 832, 833, 849, 851, 853, 865, 867, 869, 896, 900, 906, 907, 908, 912, 933, 936, 979, 981, 983, 999, 1003, 1059, 1063, 1069, 1071, 1073, 1103, 1105, 1107, 1126, 1128, 1130, 1131, 1138, 1139, 1154, 1158, 1185, 1187, 1189, 1276, 1278, 1280, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1334, 1336, 1338, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1393, 1394, 1403, 1404, 1406, 1408, 1409, 1411, 1414, 1415, 1417, 1419, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1608, 1621, 1623, 1639, 1640, 1642, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1686, 1688, 1690, 1691, 1693, 1695, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1743, 1745, 1747, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1774, 1776, 1778, 1794, 1796, 1798, 1799, 1801, 1803, 1827, 1828, 1830, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1869, 1871, 1873, 1884, 1888, 1889, 1891, 1893, 1904, 1906, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1939, 1940, 1942, 1944, 1945, 1947, 1953, 1961, 1962, 1966, 1967, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2016, 2018, 2020, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2053, 2055, 2057, 2069, 2071, 2073, 2074, 2076, 2078, 2087, 2089, 2095, 2097, 2099, 2100, 2102, 2109, 2110, 2112, 2115, 2117, 2119, 2120, 2122, 2124, 2125, 2135, 2161, 2172], "outcom": [31, 79, 829, 830, 831, 832, 833, 933, 936, 948, 1039, 1040, 1041, 1042], "comparison": [31, 79, 120, 829, 830, 831, 832, 833, 933, 936, 1711, 1814, 1818], "param": [31, 62, 65, 66, 67, 68, 79, 80, 81, 137, 445, 671, 674, 829, 832, 933, 936, 953, 1154, 1157, 1414, 1420, 1473, 1476, 1477, 1478, 1481, 1482, 1842, 1845, 2285, 2295, 2296], "conj": [31, 79, 853, 933], "conjug": [31, 40, 41, 79, 88, 89, 774, 777, 778, 849, 850, 851, 852, 853, 887, 889, 901, 904, 923, 926, 933, 937, 1131, 1137, 1164, 1165, 1168, 1306, 1309, 1711, 1759, 1762, 1779, 1780, 1781, 1782, 1783], "copysign": [31, 79, 859, 933], "unsign": [31, 79, 116, 132, 855, 856, 857, 858, 859, 933, 938, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108, 2244, 2247], "count_nonzero": [31, 79, 869, 933], "keepdim": [31, 40, 41, 44, 45, 50, 51, 56, 57, 58, 59, 65, 66, 79, 88, 89, 92, 93, 98, 99, 104, 105, 106, 107, 120, 126, 132, 865, 866, 867, 868, 869, 933, 939, 956, 1234, 1235, 1236, 1237, 1238, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1301, 1302, 1303, 1304, 1305, 1349, 1352, 1353, 1354, 1355, 1711, 1764, 1765, 1766, 1767, 1768, 1842, 1843, 1844, 1845, 1846, 1868, 1939, 1940, 1941, 1942, 1943, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2068, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124], "count": [31, 44, 45, 52, 53, 58, 59, 79, 92, 93, 100, 101, 106, 107, 114, 118, 135, 410, 429, 865, 866, 867, 868, 869, 933, 939, 1711, 1837, 1841, 1868, 1874, 1875, 1877, 1889, 1890, 1891, 1892, 1893, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124], "flatten": [31, 32, 33, 40, 41, 44, 45, 50, 51, 52, 53, 79, 80, 81, 88, 89, 92, 93, 98, 99, 100, 101, 130, 838, 839, 865, 866, 867, 868, 869, 891, 894, 933, 939, 956, 998, 1164, 1166, 1190, 1234, 1235, 1236, 1237, 1238, 1240, 1242, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1301, 1302, 1303, 1304, 1305, 1349, 1352, 1353, 1354, 1355, 1414, 1448, 1451, 1466, 1467, 1468, 1469, 1470, 1711, 1748, 1751, 1784, 1787, 1842, 1843, 1844, 1845, 1846, 1868, 1874, 1875, 1877, 1899, 1900, 1901, 1902, 1909, 1910, 1911, 1912, 1913, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2149, 2150, 2186, 2193, 2197, 2207, 2210, 2218, 2219], "diff": [31, 65, 66, 79, 118, 125, 900, 933], "prepend": [31, 79, 896, 897, 898, 899, 900, 933, 940, 1711, 1759, 1762, 1868, 1884, 1887], "differenc": [31, 79, 896, 897, 898, 899, 900, 933, 940], "taken": [31, 40, 41, 79, 88, 89, 115, 121, 126, 129, 137, 896, 897, 898, 899, 900, 933, 940, 1711, 1732, 1733, 1734, 1735, 1736, 2135], "prior": [31, 79, 129, 896, 897, 898, 899, 900, 901, 904, 933, 940, 1306, 1309], "expand": [31, 32, 33, 44, 45, 79, 80, 81, 114, 896, 897, 898, 899, 900, 933, 940, 1190, 1414, 1466, 1467, 1468, 1469, 1470, 1868, 1884, 1885, 1887], "th": [31, 79, 891, 894, 896, 897, 898, 899, 900, 933, 940, 1164, 1166, 1301, 1304, 1349, 1355], "discret": [31, 79, 881, 884, 887, 889, 896, 897, 898, 899, 900, 933, 940, 984, 987, 1079, 1082, 1131, 1136, 1137, 1141, 1142, 1852, 1858, 1861], "exp2": [31, 79, 933, 973], "nearest": [31, 79, 445, 461, 464, 711, 714, 933, 942, 989, 990, 992, 1095, 1096, 1097, 1098, 1099, 1131, 1144, 1301, 1302, 1303, 1304, 1305, 1349, 1355], "float_pow": [31, 79, 933, 1013], "125": [31, 40, 41, 88, 89, 445, 511, 514, 933, 943, 1009, 1010, 1012, 1711, 1832, 1833, 1834, 1835, 1836], "fmax": [31, 79, 933, 1018], "fmin": [31, 79, 933, 1023], "fmod": [31, 79, 933, 1028], "divis": [31, 32, 33, 34, 35, 79, 80, 81, 82, 83, 123, 445, 511, 514, 541, 544, 571, 574, 706, 709, 761, 765, 908, 911, 933, 946, 1024, 1025, 1026, 1027, 1028, 1089, 1090, 1091, 1092, 1093, 1190, 1195, 1281, 1282, 1414, 1488, 1557, 1565, 1566, 1567, 1568, 1569, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1647, 1648, 1679, 1680, 2177, 2178, 2179], "gcd": [31, 79, 933, 1036], "gradient": [31, 35, 79, 83, 129, 135, 136, 148, 149, 410, 435, 843, 933, 1045, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1949, 1950, 1951, 1952, 2126, 2134, 2173, 2174, 2177, 2178, 2179, 2180, 2181, 2182, 2197, 2218, 2219, 2276, 2280], "edge_ord": [31, 79, 933, 948, 1039, 1040, 1041, 1042, 1043], "w": [31, 32, 33, 34, 35, 38, 39, 65, 66, 77, 78, 79, 80, 81, 82, 83, 86, 87, 132, 135, 136, 641, 643, 645, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 843, 860, 862, 864, 887, 889, 918, 921, 928, 931, 933, 948, 1039, 1040, 1041, 1042, 1044, 1045, 1131, 1132, 1133, 1134, 1137, 1145, 1146, 1147, 1148, 1164, 1167, 1169, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1290, 1414, 1448, 1449, 1450, 1451, 1452, 1458, 1460, 1461, 1462, 1565, 1568, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1691, 1692, 1693, 1694, 1695, 1953, 1960], "scale": [31, 38, 39, 46, 47, 79, 82, 83, 86, 87, 94, 95, 410, 433, 434, 848, 906, 907, 933, 948, 1039, 1040, 1041, 1042, 1089, 1090, 1091, 1092, 1093, 1121, 1124, 1131, 1135, 1138, 1139, 1164, 1170, 1281, 1282, 1609, 1630, 1632, 1633, 1647, 1686, 1687, 1688, 1689, 1690, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1973, 1974, 1975, 1976, 1977, 2134, 2136, 2151, 2159, 2161, 2169, 2172, 2177, 2180, 2230, 2238, 2249, 2250, 2260, 2261, 2262, 2263], "frist": [31, 79, 933, 948, 1039, 1040, 1041, 1042], "estim": [31, 79, 933, 948, 1039, 1040, 1041, 1042], "boundari": [31, 48, 49, 79, 96, 97, 933, 948, 1039, 1040, 1041, 1042, 1095, 1096, 1097, 1098, 1099, 1131, 1144, 1978, 1994, 1995, 1996, 1997, 1998, 2134], "diment": [31, 933, 948, 1039, 1040, 1042], "40": [31, 32, 33, 62, 67, 68, 79, 80, 81, 96, 97, 104, 105, 115, 445, 511, 514, 531, 534, 731, 734, 809, 810, 881, 882, 883, 884, 885, 933, 948, 1039, 1040, 1041, 1042, 1131, 1136, 1146, 1149, 1151, 1153, 1224, 1225, 1227, 1414, 1448, 1451, 1458, 1460, 1462, 1478, 1480, 1481, 1482, 1549, 1550, 1551, 1552, 1553, 1565, 1568, 1569, 1608, 1711, 1753, 1756, 1784, 1787, 1953, 1963, 1989, 1991, 2068, 2079, 2082, 2095, 2097, 2099], "72": [31, 48, 49, 79, 82, 83, 445, 556, 559, 561, 564, 881, 884, 933, 948, 1039, 1040, 1041, 1042, 1131, 1136, 1609, 1621, 1623, 1624, 1711, 1784, 1787, 1989, 1990, 2068, 2079, 2082], "33333333": [31, 79, 445, 701, 704, 933, 948, 1039, 1040, 1041, 1042], "hypot": [31, 79, 933, 1073], "hypotenus": [31, 933, 949, 1069, 1070, 1072], "4031": [31, 933, 949, 1069, 1070, 1072], "8102": [31, 933, 949, 1069, 1070, 1072], "val": [31, 32, 33, 65, 66, 79, 80, 81, 125, 134, 933, 950, 1084, 1085, 1086, 1087, 1088, 1414, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1556, 1557], "imaginari": [31, 79, 118, 923, 926, 933, 950, 1084, 1085, 1086, 1087, 1088, 1164, 1168], "4j": [31, 79, 933, 950, 1084, 1085, 1086, 1087, 1088], "isclos": [31, 79, 111, 933, 1107], "hold": [31, 32, 33, 40, 41, 56, 57, 79, 88, 89, 104, 105, 135, 779, 781, 783, 908, 910, 912, 933, 956, 1103, 1104, 1105, 1107, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1349, 1354, 1393, 1394, 1396, 1414, 1544, 1545, 1547, 1549, 1552, 1711, 1764, 1765, 1766, 1767, 1768, 2068, 2074, 2075, 2076, 2077, 2078, 2135, 2221], "lcm": [31, 79, 933, 1153], "60": [31, 56, 57, 79, 80, 81, 96, 97, 104, 105, 115, 784, 786, 788, 933, 952, 1149, 1150, 1151, 1152, 1153, 1414, 1478, 1480, 1510, 1513, 1514, 1549, 1551, 1553, 1565, 1568, 1608, 1711, 1784, 1787, 1953, 1957, 1984, 1986, 2068, 2069, 2072, 2079, 2082, 2095, 2096, 2097, 2098, 2099], "ldexp": [31, 79, 933, 1158], "represent": [31, 32, 33, 62, 65, 66, 67, 68, 79, 80, 81, 148, 213, 305, 311, 312, 349, 352, 360, 363, 410, 413, 414, 445, 446, 449, 461, 464, 491, 494, 506, 509, 516, 519, 656, 659, 933, 953, 957, 962, 1154, 1155, 1157, 1276, 1277, 1278, 1279, 1280, 1403, 1404, 1405, 1406, 1407, 1414, 1420, 1581, 1582, 1583, 1584, 2132, 2133, 2135, 2139, 2140, 2230, 2234, 2238, 2239, 2249, 2250, 2260, 2261, 2263], "logaddexp2": [31, 79, 933, 1177], "169925": [31, 79, 933, 954, 1173, 1174, 1175, 1176, 1177], "nan_to_num": [31, 79, 933, 1255], "posinf": [31, 79, 933, 955, 1251, 1252, 1253, 1254, 1255], "neginf": [31, 79, 933, 955, 1251, 1252, 1253, 1254, 1255], "small": [31, 40, 41, 46, 47, 79, 88, 89, 94, 95, 115, 118, 123, 127, 130, 132, 136, 149, 779, 782, 933, 934, 951, 955, 1089, 1090, 1091, 1092, 1093, 1103, 1106, 1251, 1252, 1253, 1254, 1255, 1281, 1282, 1711, 1774, 1775, 1776, 1777, 1778, 1789, 1790, 1791, 1792, 1793, 1799, 1802, 1973, 1974, 1975, 1976, 1977, 2135, 2151, 2155, 2175, 2176], "5e": [31, 34, 35, 79, 933, 955, 1251, 1252, 1253, 1254, 1255, 1276, 1278, 1280, 1609, 1626, 1627, 1629], "nansum": [31, 79, 933, 1270], "accumul": [31, 79, 933, 956, 1266, 1267, 1268, 1269, 1270], "By": [31, 44, 45, 56, 57, 58, 59, 79, 92, 93, 104, 105, 106, 107, 116, 118, 120, 123, 125, 126, 132, 136, 137, 870, 871, 878, 887, 889, 933, 956, 979, 982, 1039, 1041, 1131, 1137, 1159, 1160, 1161, 1162, 1163, 1266, 1267, 1268, 1269, 1270, 1339, 1340, 1389, 1392, 1711, 1837, 1841, 1868, 1899, 1900, 1901, 1902, 2068, 2069, 2072, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124], "reduc": [31, 32, 33, 40, 41, 50, 51, 56, 57, 58, 59, 65, 66, 79, 80, 81, 88, 89, 98, 99, 104, 105, 106, 107, 115, 120, 126, 130, 132, 134, 410, 435, 933, 956, 1234, 1235, 1236, 1237, 1238, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1301, 1302, 1303, 1304, 1305, 1349, 1352, 1353, 1354, 1355, 1414, 1453, 1454, 1455, 1456, 1457, 1711, 1794, 1795, 1796, 1797, 1798, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2068, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2132, 2136, 2137, 2138], "nextaft": [31, 79, 933, 1280], "0e": [31, 34, 35, 79, 82, 83, 933, 957, 1276, 1277, 1278, 1279, 1280, 1609, 1626, 1627, 1628, 1629], "50": [31, 56, 57, 77, 78, 79, 80, 81, 134, 445, 536, 538, 539, 540, 696, 698, 699, 700, 933, 957, 1121, 1123, 1125, 1276, 1277, 1278, 1279, 1280, 1414, 1458, 1460, 1462, 1478, 1480, 1481, 1482, 1505, 1508, 1509, 1510, 1513, 1514, 1549, 1551, 1552, 1553, 1565, 1568, 1569, 1711, 1753, 1756, 1784, 1787, 1953, 1955, 1957, 2005, 2021, 2024, 2068, 2079, 2080, 2082, 2230, 2234, 2238, 2239, 2260, 2261, 2262, 2263], "4013e": [31, 79, 933, 957, 1276, 1277, 1278, 1279, 1280], "4028e": [31, 79, 933, 957, 1276, 1277, 1278, 1279, 1280], "hand": [31, 111, 116, 123, 128, 149, 1312, 1313], "signbit": [31, 79, 933, 1333], "637": [31, 79, 933, 960, 1334, 1335, 1336, 1337], "212": [31, 38, 39, 79, 933, 960, 1334, 1335, 1336, 1337, 1338, 1691, 1692], "0909": [31, 79, 933, 960, 1334, 1335, 1336, 1337], "trapz": [31, 77, 78, 933], "dx": [31, 77, 78, 933, 961, 1372, 1373, 1374], "apart": [31, 77, 78, 933, 961, 1372, 1373, 1374], "trapezoid": [31, 77, 78, 933, 961, 1372, 1373, 1374], "xlogi": [31, 79, 933, 1404], "0986": [31, 79, 933, 962, 1403, 1404, 1405, 1406, 1407], "3863": [31, 79, 933, 962, 1403, 1404, 1405, 1406, 1407], "0000": [31, 79, 870, 872, 875, 933, 962, 1046, 1048, 1050, 1051, 1053, 1054, 1055, 1057, 1117, 1119, 1164, 1171, 1190, 1201, 1214, 1215, 1216, 1217, 1403, 1404, 1405, 1406, 1407], "zeta": [31, 79, 933, 1409], "0369": [31, 79, 933, 963, 1408, 1409, 1410, 1411, 1412], "2021": [31, 79, 933, 963, 1408, 1409, 1410, 1411, 1412, 2126], "isin": [31, 79, 1037, 1112], "test_el": [31, 79, 1037, 1038, 1108, 1109, 1110, 1111, 1112], "assume_uniqu": [31, 79, 1037, 1038, 1108, 1109, 1110, 1111, 1112], "invert": [31, 79, 445, 496, 499, 1037, 1038, 1108, 1109, 1110, 1111, 1112, 1711, 1769, 1772], "avg_pool1d": [31, 79, 808, 1131], "kernel": [31, 38, 39, 79, 86, 87, 130, 132, 149, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1131, 1132, 1133, 1134, 1145, 1146, 1147, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1647, 1696, 1697, 1698, 1699, 1700, 2134, 2137, 2138], "stride": [31, 38, 39, 79, 86, 87, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1131, 1132, 1133, 1134, 1145, 1146, 1147, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 2134, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168], "pad": [31, 38, 39, 44, 45, 79, 86, 87, 92, 93, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 881, 882, 883, 884, 885, 887, 889, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1095, 1096, 1097, 1098, 1099, 1131, 1132, 1133, 1134, 1136, 1137, 1141, 1142, 1144, 1145, 1146, 1147, 1190, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1289, 1414, 1466, 1469, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1868, 1879, 1880, 1881, 1882, 1883, 1944, 1945, 1946, 1947, 1948, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168], "data_format": [31, 38, 39, 79, 86, 87, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 906, 907, 1089, 1090, 1091, 1092, 1093, 1131, 1132, 1133, 1134, 1138, 1139, 1145, 1146, 1147, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1281, 1282, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168], "nwc": [31, 38, 39, 79, 86, 87, 804, 805, 806, 807, 808, 906, 1131, 1132, 1138, 1145, 1219, 1220, 1221, 1222, 1223, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1679, 1680, 2161, 2162, 2163], "batch_siz": [31, 38, 39, 48, 49, 79, 86, 87, 96, 97, 135, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1131, 1132, 1133, 1134, 1145, 1146, 1147, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1978, 1979, 1980, 1981, 1982, 1983], "d_in": [31, 38, 39, 79, 86, 87, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 887, 889, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1132, 1133, 1134, 1137, 1141, 1142, 1145, 1146, 1147, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685], "slide": [31, 38, 39, 79, 86, 87, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1131, 1132, 1133, 1134, 1145, 1146, 1147, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168], "algorithm": [31, 38, 39, 63, 64, 79, 86, 87, 116, 126, 130, 149, 171, 173, 175, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1095, 1096, 1097, 1098, 1099, 1131, 1132, 1133, 1134, 1144, 1145, 1146, 1147, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1649, 1650, 1651, 1653, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1681, 1682, 1683, 1685, 1711, 1799, 1802, 2134, 2136, 2138, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168], "ncw": [31, 38, 39, 79, 86, 87, 804, 805, 806, 807, 808, 906, 1131, 1132, 1138, 1145, 1219, 1220, 1221, 1222, 1223, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1679, 1680, 2161, 2162, 2163], "pool": [31, 79, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1131, 1132, 1133, 1134, 1145, 1146, 1147, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233], "reshap": [31, 38, 39, 40, 41, 44, 45, 65, 66, 79, 86, 87, 88, 89, 92, 93, 125, 126, 128, 130, 132, 134, 137, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 906, 994, 995, 996, 997, 998, 1089, 1090, 1091, 1092, 1093, 1131, 1132, 1133, 1134, 1138, 1145, 1146, 1147, 1164, 1172, 1190, 1198, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1250, 1281, 1282, 1414, 1608, 1647, 1659, 1661, 1662, 1663, 1669, 1672, 1681, 1684, 1711, 1764, 1765, 1766, 1767, 1768, 1842, 1846, 1868, 1908, 2126, 2128, 2129], "avg_pool2d": [31, 79, 813, 1131], "nhwc": [31, 38, 39, 79, 86, 87, 809, 810, 811, 812, 813, 1089, 1090, 1091, 1092, 1093, 1131, 1133, 1146, 1224, 1225, 1226, 1227, 1228, 1281, 1282, 1647, 1648, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 2161, 2164, 2165, 2168], "h": [31, 32, 33, 38, 39, 79, 80, 81, 86, 87, 110, 114, 115, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1131, 1133, 1134, 1146, 1147, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1414, 1448, 1449, 1450, 1451, 1452, 1458, 1460, 1461, 1462, 1647, 1648, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1953, 1957, 1961, 1963, 1971, 2130], "nchw": [31, 38, 39, 79, 86, 87, 809, 810, 811, 812, 813, 1089, 1090, 1091, 1092, 1093, 1131, 1133, 1146, 1224, 1225, 1226, 1227, 1228, 1281, 1282, 1647, 1648, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 2161, 2164, 2165, 2168], "max_pool2d": [31, 79, 809, 810, 1131, 1228], "46": [31, 48, 49, 79, 86, 87, 96, 97, 219, 259, 262, 445, 626, 629, 716, 719, 809, 810, 814, 816, 870, 872, 1046, 1047, 1048, 1049, 1131, 1146, 1147, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1691, 1693, 1695, 1953, 1955, 1984, 1985, 1989, 1991], "avg_pool3d": [31, 79, 818, 1131], "ndhwc": [31, 38, 39, 79, 86, 87, 814, 815, 816, 817, 818, 907, 1131, 1134, 1139, 1147, 1229, 1230, 1231, 1232, 1233, 1647, 1648, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 2161, 2166, 2167], "convolut": [31, 38, 39, 79, 86, 87, 814, 815, 816, 817, 818, 1131, 1134, 1147, 1229, 1230, 1231, 1232, 1233, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 2132, 2134, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168], "ncdhw": [31, 38, 39, 79, 86, 87, 814, 815, 816, 817, 818, 907, 1131, 1134, 1139, 1147, 1229, 1230, 1231, 1232, 1233, 1647, 1648, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 2161, 2166, 2167], "43": [31, 62, 67, 68, 96, 97, 445, 511, 514, 814, 815, 817, 1131, 1134, 1978, 1989, 1991, 1992, 1994, 1996, 1997, 2005, 2026, 2030], "dct": [31, 79, 135, 885, 1131], "norm": [31, 32, 33, 40, 41, 47, 79, 80, 81, 88, 89, 95, 129, 881, 882, 883, 884, 885, 887, 888, 889, 890, 923, 924, 925, 926, 927, 964, 967, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1126, 1127, 1129, 1131, 1136, 1137, 1140, 1141, 1142, 1164, 1168, 1185, 1186, 1188, 1189, 1282, 1283, 1284, 1414, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1515, 1517, 1519, 1711, 1764, 1765, 1766, 1767, 1768, 1842, 1843, 1844, 1845, 1846, 1974, 1975, 1976, 1977, 2126, 2176, 2177, 2179], "signal": [31, 79, 881, 882, 883, 884, 885, 887, 889, 1131, 1136, 1137, 2133, 2134], "liter": [31, 40, 41, 79, 88, 89, 121, 881, 882, 883, 884, 885, 1095, 1096, 1097, 1098, 1099, 1131, 1136, 1144, 1190, 1208, 1285, 1288, 1711, 1764, 1765, 1766, 1767, 1768, 1842, 1843, 1844, 1845, 1846], "lenght": [31, 79, 881, 882, 883, 884, 885, 1046, 1047, 1049, 1113, 1114, 1116, 1117, 1118, 1120, 1131, 1136, 1389, 1390, 1391], "transform": [31, 38, 39, 79, 86, 87, 128, 137, 148, 881, 882, 883, 884, 885, 887, 889, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1093, 1131, 1136, 1137, 1141, 1142, 1281, 1282, 1647, 1691, 1692, 1693, 1694, 1695, 2125, 2132, 2134, 2135, 2136, 2230, 2234, 2238, 2239, 2260, 2261, 2262, 2263], "truncat": [31, 79, 120, 135, 881, 882, 883, 884, 885, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1136, 1141, 1142, 1414, 1555, 2149, 2150], "larger": [31, 44, 45, 56, 57, 79, 92, 93, 104, 105, 128, 305, 349, 352, 881, 882, 883, 884, 885, 1131, 1136, 1868, 1869, 1872, 1909, 1910, 1911, 1912, 1913, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2141], "ortho": [31, 79, 881, 882, 883, 884, 885, 887, 889, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1136, 1137, 1141, 1142], "102": [31, 79, 96, 97, 881, 882, 883, 884, 885, 1131, 1136, 1984, 1986], "406": [31, 79, 881, 882, 883, 884, 885, 1131, 1136, 1414, 1433, 1436], "dft": [31, 79, 1131], "onesid": [31, 79, 887, 888, 889, 890, 1131, 1137], "dft_length": [31, 79, 887, 888, 889, 890, 1131, 1137], "backward": [31, 58, 59, 79, 106, 107, 149, 445, 706, 709, 887, 888, 889, 890, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1137, 1141, 1142, 1711, 1837, 1841, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124], "fourier": [31, 887, 889, 984, 987, 1079, 1082, 1131, 1137, 1141, 1142, 1414, 1466, 1469], "batch": [31, 32, 33, 40, 41, 65, 66, 79, 80, 81, 88, 89, 114, 123, 135, 410, 433, 434, 887, 889, 1095, 1096, 1097, 1098, 1099, 1131, 1137, 1144, 1414, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1475, 1476, 1477, 1608, 1647, 1691, 1694, 1711, 1758, 1842, 1843, 1844, 1845, 1846, 1949, 1950, 1951, 1952, 1973, 1974, 1977, 2132, 2175, 2176], "n_fft": [31, 887, 889, 1131, 1137], "satisfi": [31, 118, 887, 889, 923, 926, 1131, 1137, 1164, 1168], "symmetri": [31, 887, 889, 1131, 1137], "fast": [31, 887, 889, 1131, 1137, 2134], "rfft": [31, 887, 889, 1131, 1137], "batch_idx": [31, 887, 889, 1131, 1137], "signal_dim1": [31, 887, 889, 1131, 1137], "signal_dim2": [31, 887, 889, 1131, 1137], "signal_dimn": [31, 887, 889, 1131, 1137], "signal_dim": [31, 887, 889, 1131, 1137], "embed": [31, 79, 1131, 2134], "max_norm": [31, 32, 33, 79, 80, 81, 964, 965, 966, 967, 968, 1131, 1140, 1414, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442], "dim": [31, 65, 66, 71, 72, 79, 116, 120, 126, 127, 130, 219, 274, 276, 277, 278, 984, 985, 986, 987, 988, 994, 995, 996, 997, 998, 1079, 1080, 1081, 1082, 1083, 1131, 1141, 1142, 1190, 1198, 1647, 1648, 1679, 1680, 2161, 2172, 2249, 2259], "ifft": [31, 79, 984, 985, 1083, 1131], "pi": [31, 79, 213, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1141, 1142], "44509285e": [31, 79, 984, 985, 986, 987, 988, 1131, 1141], "14423775e": [31, 79, 984, 985, 986, 987, 988, 1131, 1141], "17j": [31, 79, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1141, 1142], "00000000e": [31, 79, 80, 81, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1141, 1142, 1466, 1468, 1470], "00": [31, 32, 33, 79, 80, 81, 88, 89, 128, 445, 561, 564, 881, 884, 918, 921, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1136, 1141, 1142, 1164, 1167, 1414, 1466, 1467, 1468, 1469, 1470, 1711, 1743, 1746, 1747, 2230, 2238, 2239], "11483250e": [31, 79, 984, 985, 986, 987, 988, 1131, 1141], "16j": [31, 79, 984, 985, 986, 987, 988, 1079, 1080, 1081, 1082, 1083, 1131, 1141, 1142], "33486982e": [31, 79, 984, 985, 986, 987, 988, 1131, 1141], "22464680e": [31, 79, 984, 985, 986, 987, 988, 1131, 1141], "95799250e": [31, 79, 984, 985, 986, 987, 988, 1131, 1141], "66951701e": [31, 79, 984, 985, 986, 987, 988, 1131, 1141], "30636606e": [31, 79, 1079, 1080, 1081, 1082, 1083, 1131, 1142], "43029718e": [31, 79, 1079, 1080, 1081, 1082, 1083, 1131, 1142], "18j": [31, 79, 984, 987, 1079, 1080, 1081, 1082, 1083, 1131, 1141, 1142], "53080850e": [31, 79, 1079, 1080, 1081, 1082, 1083, 1131, 1142], "58689626e": [31, 79, 1079, 1080, 1081, 1082, 1083, 1131, 1142], "24474906e": [31, 79, 1079, 1080, 1081, 1082, 1083, 1131, 1142], "91858728e": [31, 79, 1079, 1080, 1081, 1082, 1083, 1131, 1142], "01435406e": [31, 79, 1079, 1080, 1081, 1082, 1083, 1131, 1142], "interpol": [31, 79, 1099, 1131, 1301, 1302, 1303, 1304, 1305, 1349, 1355, 2134], "align_corn": [31, 79, 848, 1095, 1096, 1097, 1098, 1099, 1131, 1135, 1144], "antialia": [31, 79, 848, 1095, 1096, 1097, 1098, 1099, 1131, 1135, 1144], "height": [31, 32, 33, 38, 39, 79, 80, 81, 86, 87, 135, 1095, 1096, 1097, 1098, 1099, 1131, 1144, 1414, 1448, 1449, 1450, 1451, 1452, 1647, 1659, 1662, 1664, 1665, 1667, 1669, 1672, 1674, 1675, 1676, 1677, 1678, 1681, 1684, 2149, 2150], "width": [31, 32, 33, 38, 39, 79, 80, 81, 86, 87, 923, 924, 925, 926, 927, 1095, 1096, 1097, 1098, 1099, 1131, 1144, 1164, 1168, 1190, 1208, 1285, 1288, 1414, 1448, 1449, 1450, 1451, 1452, 1647, 1649, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1662, 1664, 1665, 1667, 1669, 1672, 1674, 1675, 1676, 1677, 1678, 1681, 1684], "bilinear": [31, 79, 1095, 1096, 1097, 1098, 1099, 1131, 1144], "trilinear": [31, 79, 1095, 1096, 1097, 1098, 1099, 1131, 1144], "pixel": [31, 79, 1095, 1096, 1097, 1098, 1099, 1131, 1144], "preserv": [31, 34, 35, 62, 65, 66, 67, 68, 79, 82, 83, 128, 137, 149, 789, 792, 794, 797, 799, 802, 999, 1002, 1004, 1007, 1095, 1096, 1097, 1098, 1099, 1131, 1144, 1190, 1191, 1192, 1193, 1199, 1200, 1261, 1262, 1263, 1264, 1349, 1354, 1609, 1639, 1640, 1641, 1642, 1643, 1868, 1889, 1892, 2230, 2234], "edg": [31, 44, 45, 79, 92, 93, 111, 128, 1095, 1096, 1097, 1098, 1099, 1131, 1144, 1190, 1208, 1285, 1288, 1868, 1869, 1872, 1879, 1880, 1881, 1882, 1883, 1944, 1945, 1946, 1947, 1948, 2126, 2134, 2136, 2140, 2260, 2261], "bicub": [31, 79, 1095, 1096, 1097, 1098, 1099, 1131, 1144], "antialias": [31, 79, 1095, 1096, 1097, 1098, 1099, 1131, 1144], "downsampl": [31, 79, 1095, 1096, 1097, 1098, 1099, 1131, 1144], "resiz": [31, 79, 1095, 1096, 1097, 1098, 1099, 1131, 1144], "max_pool1d": [31, 79, 1131, 1223], "dilat": [31, 38, 39, 79, 86, 87, 1131, 1146, 1224, 1225, 1226, 1227, 1228, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168], "ceil_mod": [31, 79, 1131, 1146, 1224, 1225, 1226, 1227, 1228], "max_pool3d": [31, 79, 814, 816, 1131, 1233], "adjoint": [31, 40, 41, 79, 88, 89, 778, 1164, 1711, 1753, 1754, 1755, 1756, 1757, 1804, 1805, 1806, 1808, 1809, 1813], "diagflat": [31, 79, 1121, 1122, 1164, 1214, 1216], "offset": [31, 40, 41, 79, 88, 89, 891, 892, 893, 894, 895, 1164, 1166, 1711, 1732, 1733, 1734, 1735, 1736, 1827, 1828, 1829, 1830, 1831], "padding_valu": [31, 79, 891, 892, 893, 894, 895, 1164, 1166], "right_left": [31, 79, 891, 892, 893, 894, 895, 1164, 1166], "num_row": [31, 79, 891, 892, 893, 894, 895, 1164, 1166], "num_col": [31, 79, 891, 892, 893, 894, 895, 1164, 1166], "eig": [31, 40, 41, 79, 922, 1164, 1711, 1738, 1741, 1743, 1746], "37228132": [31, 79, 918, 921, 928, 929, 930, 931, 932, 1164, 1167, 1169], "82456484": [31, 918, 921, 1164, 1167], "41597356": [31, 918, 921, 1164, 1167], "56576746": [31, 918, 921, 1164, 1167], "90937671": [31, 918, 921, 1164, 1167], "eigh_tridiagon": [31, 79, 927, 1164], "eigvals_onli": [31, 79, 923, 924, 925, 926, 927, 1164, 1168], "select_rang": [31, 79, 923, 924, 925, 926, 927, 1164, 1168], "tol": [31, 79, 923, 924, 925, 926, 927, 1164, 1168], "super": [31, 79, 120, 132, 135, 136, 137, 923, 924, 925, 926, 927, 1164, 1168], "eigenvalu": [31, 40, 41, 79, 88, 89, 918, 921, 923, 924, 925, 926, 927, 928, 930, 931, 932, 1164, 1167, 1168, 1169, 1711, 1737, 1738, 1741, 1743, 1744, 1745, 1746, 1747], "eigenvector": [31, 79, 918, 920, 921, 922, 923, 924, 925, 926, 927, 1164, 1167, 1168, 1711, 1737, 1738, 1741], "string": [31, 38, 39, 65, 66, 79, 86, 87, 113, 115, 116, 117, 120, 121, 126, 132, 135, 169, 170, 176, 305, 311, 312, 344, 346, 366, 409, 410, 411, 413, 414, 415, 416, 422, 430, 436, 440, 441, 444, 923, 924, 925, 926, 927, 1164, 1168, 1190, 1208, 1285, 1288, 1414, 1444, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1658, 1659, 1662, 1669, 1672, 1679, 1681, 1684, 1711, 1743, 1746, 2149, 2150, 2197, 2216, 2217, 2219, 2244, 2247], "cluster": [31, 79, 149, 923, 924, 925, 926, 927, 1164, 1168, 2134], "_2": [31, 79, 923, 924, 925, 926, 927, 1164, 1168], "precis": [31, 40, 41, 79, 88, 89, 115, 116, 126, 130, 305, 349, 352, 445, 731, 734, 923, 924, 925, 926, 927, 933, 943, 1009, 1012, 1164, 1168, 1711, 1799, 1802, 1842, 1843, 1844, 1845, 1846, 2138], "eig_val": [31, 79, 923, 924, 925, 926, 927, 1164, 1168], "decreas": [31, 79, 923, 924, 925, 926, 927, 1164, 1168, 2249, 2256], "eig_vector": [31, 79, 923, 924, 925, 926, 927, 1164, 1168], "38196": [31, 923, 924, 926, 1164, 1168], "61803": [31, 923, 924, 926, 1164, 1168], "eigval": [31, 79, 932, 1164], "kron": [31, 79, 1125, 1164, 1214, 1215, 2141], "matrix_exp": [31, 79, 1164], "7183": [31, 79, 1164, 1171, 1214, 1215, 1216, 1217], "3891": [31, 79, 1164, 1171, 1214, 1215, 1216, 1217], "atleast_1d": [31, 79, 793, 1190], "ari": [31, 79, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 908, 909, 910, 911, 912, 1059, 1060, 1061, 1062, 1063, 1190, 1191, 1192, 1193, 1195, 1202, 1212, 1393, 1394, 1395, 1396, 1397], "a1": [31, 80, 81, 219, 240, 241, 789, 790, 794, 795, 799, 800, 1422, 1424, 1426], "a2": [31, 789, 790, 794, 795, 799, 800], "atleast_2d": [31, 79, 798, 1190], "atleast_3d": [31, 79, 803, 1190], "dsplit": [31, 79, 912, 1190], "indices_or_sect": [31, 79, 908, 909, 910, 911, 912, 1059, 1060, 1061, 1062, 1063, 1190, 1195, 1202, 1212, 1393, 1394, 1395, 1396, 1397], "3rd": [31, 79, 908, 909, 910, 911, 912, 1190, 1195], "dstack": [31, 79, 917, 1190], "nativeshap": [31, 38, 39, 44, 45, 48, 49, 79, 92, 93, 96, 97, 219, 234, 248, 279, 280, 297, 299, 819, 820, 821, 822, 823, 824, 826, 827, 828, 901, 902, 903, 904, 905, 974, 975, 976, 977, 978, 1190, 1197, 1291, 1292, 1293, 1294, 1295, 1306, 1307, 1308, 1309, 1311, 1414, 1549, 1552, 1563, 1580, 1585, 1647, 1648, 1654, 1655, 1657, 1664, 1665, 1667, 1674, 1675, 1677, 1680, 1868, 1904, 1905, 1906, 1907, 1908, 1978, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998], "start_dim": [31, 79, 994, 995, 996, 997, 998, 1190, 1198], "end_dim": [31, 79, 994, 995, 996, 997, 998, 1190, 1198], "fastest": [31, 44, 45, 79, 92, 93, 994, 995, 996, 997, 998, 1164, 1172, 1190, 1198, 1250, 1868, 1904, 1905, 1906, 1907, 1908], "slowest": [31, 44, 45, 79, 92, 93, 994, 995, 996, 997, 998, 1190, 1198, 1868, 1904, 1905, 1906, 1907, 1908], "fortran": [31, 44, 45, 79, 92, 93, 994, 995, 996, 997, 998, 1190, 1198, 1868, 1904, 1905, 1906, 1907, 1908, 2134, 2138], "memori": [31, 44, 45, 79, 92, 93, 115, 116, 117, 125, 126, 130, 132, 147, 149, 219, 264, 267, 410, 415, 430, 435, 441, 444, 994, 995, 996, 997, 998, 1190, 1198, 1261, 1262, 1263, 1264, 1349, 1354, 1647, 1696, 1699, 1868, 1904, 1905, 1906, 1907, 1908, 2126, 2134, 2136, 2137, 2138], "layout": [31, 44, 45, 79, 92, 93, 113, 126, 130, 994, 995, 996, 997, 998, 1190, 1198, 1868, 1904, 1905, 1906, 1907, 1908], "underli": [31, 44, 45, 79, 92, 93, 114, 130, 445, 491, 494, 506, 509, 516, 519, 656, 659, 994, 995, 996, 997, 998, 1190, 1198, 1711, 1799, 1802, 1868, 1904, 1905, 1906, 1907, 1908, 2134], "fliplr": [31, 79, 1003, 1190], "flip": [31, 44, 45, 79, 92, 93, 134, 135, 137, 445, 496, 499, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1190, 1199, 1200, 1868, 1893, 2126], "diag": [31, 40, 41, 79, 88, 89, 132, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1190, 1199, 1200, 1711], "flipud": [31, 79, 1008, 1190], "heavisid": [31, 79, 1058, 1190], "5000": [31, 1054, 1055, 1057, 1190, 1201, 1711, 1753, 1756], "hsplit": [31, 79, 844, 847, 1063, 1190], "horizont": [31, 79, 1059, 1060, 1061, 1062, 1063, 1190, 1202, 1414, 1448, 1451], "hstack": [31, 79, 1068, 1190], "vstack": [31, 79, 1064, 1065, 1190, 1399], "i0": [31, 79, 1078, 1190], "bessel": [31, 56, 57, 79, 104, 105, 870, 874, 1074, 1075, 1076, 1077, 1078, 1113, 1114, 1115, 1116, 1190, 1204, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113], "26606588": [31, 79, 1074, 1075, 1076, 1077, 1078, 1190, 1204], "2795853": [31, 79, 1074, 1075, 1076, 1077, 1078, 1190, 1204], "88079259": [31, 79, 1074, 1075, 1076, 1077, 1078, 1190, 1204], "moveaxi": [31, 79, 1190, 1244], "destin": [31, 79, 1190, 1205, 1240, 1241, 1242, 1243, 1244], "unstack": [31, 44, 45, 65, 66, 92, 93, 114, 132, 135, 1240, 1241, 1868, 1940, 2126, 2141], "reorder": [31, 44, 45, 79, 92, 93, 1190, 1205, 1240, 1241, 1242, 1243, 1244, 1414, 1448, 1451, 1868, 1889, 1890, 1891, 1892, 1893], "pad_width": [31, 44, 45, 79, 92, 93, 1190, 1208, 1285, 1286, 1287, 1288, 1289, 1868, 1879, 1880, 1881, 1882, 1883, 1944, 1945, 1946, 1947, 1948], "constant": [31, 44, 45, 46, 47, 79, 92, 93, 94, 95, 123, 127, 129, 136, 137, 149, 1089, 1090, 1091, 1092, 1093, 1190, 1208, 1281, 1282, 1285, 1286, 1287, 1288, 1289, 1868, 1879, 1880, 1881, 1882, 1883, 1953, 1960, 1973, 1974, 1975, 1976, 1977, 2151, 2157, 2160, 2173, 2174, 2175, 2176], "stat_length": [31, 79, 1190, 1208, 1285, 1286, 1287, 1288, 1289], "constant_valu": [31, 79, 1190, 1208, 1285, 1286, 1287, 1288, 1289], "end_valu": [31, 79, 1190, 1208, 1285, 1286, 1287, 1288, 1289], "reflect_typ": [31, 79, 1190, 1208, 1285, 1286, 1287, 1288, 1289], "rot90": [31, 79, 1190, 1326], "rotat": [31, 79, 148, 1190, 1209, 1322, 1323, 1324, 1325, 1326], "plane": [31, 79, 1190, 1209, 1322, 1323, 1324, 1325, 1326], "take_along_axi": [31, 79, 1190, 1358], "arr": [31, 32, 33, 73, 74, 79, 116, 117, 305, 376, 378, 379, 380, 1190, 1210, 1357, 1358, 1359, 1360, 1361, 1549, 1550], "top_k": [31, 79, 1190, 1368], "largest": [31, 65, 66, 79, 148, 305, 349, 352, 360, 363, 1190, 1211, 1367, 1368, 1369, 1370, 1371, 1711, 1764, 1767, 1809, 1813], "retun": [31, 79, 1190, 1211, 1367, 1368, 1369, 1370, 1371], "smallest": [31, 65, 66, 79, 305, 349, 352, 360, 363, 445, 521, 524, 1190, 1211, 1367, 1368, 1369, 1370, 1371, 1711, 1764, 1767, 2230, 2234, 2238, 2239, 2249, 2250], "vsplit": [31, 79, 1190, 1394], "instance_norm": [31, 79, 1093, 1281], "bia": [31, 38, 39, 79, 86, 87, 94, 95, 132, 136, 1089, 1090, 1091, 1092, 1093, 1281, 1282, 1414, 1540, 1647, 1648, 1679, 1680, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1973, 1974, 1976, 1977, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2171], "running_mean": [31, 79, 1089, 1090, 1091, 1092, 1093, 1281, 1282], "running_stddev": [31, 79, 1089, 1090, 1091, 1092, 1093, 1281, 1282], "affin": [31, 79, 1089, 1090, 1091, 1092, 1093, 1281, 1282, 2175, 2176], "track_running_stat": [31, 79, 1089, 1090, 1091, 1092, 1093, 1281, 1282], "4d": [31, 907, 1089, 1090, 1092, 1131, 1139, 1281, 1282], "stddev": [31, 79, 1089, 1090, 1091, 1092, 1093, 1281, 1282], "82836342": [31, 1089, 1090, 1092, 1281, 1282], "58581817": [31, 1089, 1090, 1092, 1281, 1282], "29290909": [31, 79, 1089, 1090, 1091, 1092, 1093, 1281, 1282], "41418171": [31, 79, 1089, 1090, 1091, 1092, 1093, 1281, 1282], "14645454": [31, 1089, 1090, 1092, 1281, 1282], "20709085": [31, 1089, 1090, 1092, 1281, 1282], "30000001": [31, 79, 1089, 1090, 1091, 1092, 1093, 1281, 1282, 1414, 1448, 1451, 2031, 2037, 2041], "52426404": [31, 79, 1089, 1090, 1091, 1092, 1093, 1281, 1282], "l2_normal": [31, 79, 1130, 1185, 1187, 1281], "l2": [31, 40, 41, 88, 89, 114, 1126, 1127, 1129, 1185, 1188, 1281, 1283, 1284, 1711, 1842, 1843, 1844, 1845, 1846], "4472": [31, 1126, 1127, 1129, 1185, 1186, 1281, 1283], "8944": [31, 1126, 1127, 1129, 1185, 1186, 1281, 1283], "lp_normal": [31, 79, 1189, 1281], "lp": [31, 1185, 1186, 1188, 1281, 1284], "bernoulli": [31, 79, 823, 906, 907, 1131, 1138, 1139, 1306], "event": [31, 79, 128, 819, 820, 821, 822, 823, 1306, 1307], "parameter": [31, 48, 49, 79, 96, 97, 819, 820, 821, 822, 823, 824, 825, 1029, 1030, 1291, 1292, 1306, 1307, 1978, 1979, 1980, 1981, 1983, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998], "independ": [31, 48, 49, 79, 96, 97, 111, 116, 118, 124, 132, 137, 819, 820, 821, 822, 823, 1306, 1307, 1711, 1717, 1720, 1804, 1807, 1978, 1979, 1980, 1981, 1982, 1983, 2132], "prob": [31, 38, 39, 79, 86, 87, 96, 97, 819, 820, 821, 822, 823, 906, 907, 1131, 1138, 1139, 1306, 1307, 1647, 1686, 1687, 1688, 1689, 1690, 1978, 1979, 1982, 1983, 2161, 2169], "drawn": [31, 48, 49, 79, 96, 97, 128, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 901, 902, 903, 904, 905, 1029, 1030, 1291, 1292, 1293, 1294, 1295, 1306, 1307, 1308, 1309, 1311, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2151, 2159, 2230, 2238, 2239, 2240, 2244, 2245, 2246, 2249, 2252, 2255, 2258], "dirichlet": [31, 79, 905, 1306], "shuffl": [31, 48, 49, 65, 66, 79, 96, 97, 901, 902, 903, 1978, 2004, 2126], "10598304": [31, 901, 902, 904, 1306, 1309], "21537054": [31, 901, 902, 904, 1306, 1309], "67864642": [31, 901, 902, 904, 1306, 1309], "48006698": [31, 901, 902, 904, 1306, 1309], "07472073": [31, 901, 902, 904, 1306, 1309], "44521229": [31, 901, 902, 904, 1306, 1309], "55479872": [31, 901, 902, 904, 1306, 1309], "05426367": [31, 901, 902, 904, 1306, 1309], "39093761": [31, 901, 902, 904, 1306, 1309], "19531053": [31, 901, 902, 904, 1306, 1309], "51675832": [31, 901, 902, 904, 1306, 1309], "28793114": [31, 901, 902, 904, 1306, 1309], "12315625": [31, 901, 902, 904, 1306, 1309], "29823365": [31, 901, 902, 904, 1306, 1309], "5786101": [31, 901, 902, 904, 1306, 1309], "15564976": [31, 901, 902, 904, 1306, 1309], "50542368": [31, 901, 902, 904, 1306, 1309], "33892656": [31, 901, 902, 904, 1306, 1309], "1325352": [31, 901, 902, 904, 1306, 1309], "44439589": [31, 901, 902, 904, 1306, 1309], "42306891": [31, 901, 902, 904, 1306, 1309], "gamma": [31, 46, 47, 94, 95, 1306, 1973, 1974, 1975, 1976, 1977], "poisson": [31, 79, 1295, 1306], "rate": [31, 34, 35, 79, 82, 83, 115, 1291, 1292, 1293, 1294, 1295, 1306, 1311, 1609, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1949, 1950, 1951, 1952, 2161, 2172, 2177, 2178, 2179, 2180, 2181, 2182], "paramt": [31, 1291, 1292, 1953, 1961, 1971], "lam": [31, 79, 1291, 1292, 1293, 1294, 1295, 1306, 1311], "lexsort": [31, 79, 1163, 1339], "indirectli": [31, 79, 1159, 1160, 1161, 1162, 1163, 1339, 1340], "column": [31, 40, 41, 79, 88, 89, 219, 240, 241, 860, 861, 862, 864, 870, 876, 877, 918, 921, 999, 1002, 1004, 1007, 1064, 1067, 1159, 1160, 1162, 1164, 1167, 1190, 1199, 1200, 1203, 1339, 1340, 1375, 1378, 1379, 1382, 1711, 1737, 1738, 1741, 1764, 1767, 1794, 1795, 1796, 1797, 1798, 1804, 1807, 1809, 1813, 1832, 1833, 1834, 1835, 1836, 2151, 2152, 2155, 2156, 2159], "msort": [31, 79, 1249, 1339], "bincount": [31, 79, 842, 1349], "weight": [31, 34, 35, 38, 39, 79, 82, 83, 86, 87, 114, 123, 132, 136, 137, 834, 835, 836, 837, 838, 839, 840, 841, 842, 870, 873, 964, 967, 968, 1050, 1052, 1131, 1140, 1183, 1184, 1349, 1350, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1647, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1706, 1707, 1708, 1709, 1710, 2133, 2151, 2155, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2170, 2171, 2173, 2174, 2177, 2179, 2180], "minlength": [31, 79, 838, 839, 840, 841, 842, 1349, 1350], "corrcoef": [31, 79, 864, 1349], "rowvar": [31, 79, 860, 861, 862, 863, 864, 1349, 1351], "row": [31, 79, 219, 240, 241, 860, 861, 862, 864, 870, 876, 877, 1004, 1007, 1159, 1162, 1190, 1200, 1213, 1339, 1340, 1375, 1378, 1379, 1382, 1398, 1402, 1711, 1764, 1767, 1804, 1807, 1809, 1813, 1832, 1836, 1978, 1979, 1982, 2005, 2021, 2024, 2151, 2152, 2155, 2156, 2159], "relationship": [31, 79, 860, 861, 862, 864, 2151, 2156], "median": [31, 79, 126, 1190, 1208, 1238, 1261, 1262, 1263, 1264, 1265, 1285, 1288, 1349, 1354], "nanmean": [31, 79, 1260, 1349], "6666666666666665": [31, 79, 1256, 1257, 1258, 1259, 1260, 1349, 1353], "nanmedian": [31, 79, 1349], "overwrite_input": [31, 79, 1261, 1262, 1263, 1264, 1349, 1354], "treat": [31, 65, 66, 79, 128, 133, 137, 933, 956, 1261, 1262, 1263, 1264, 1266, 1269, 1349, 1354, 2197, 2217, 2219], "undefin": [31, 79, 121, 1190, 1208, 1261, 1262, 1263, 1264, 1285, 1288, 1349, 1354], "quantil": [31, 79, 1305, 1349], "higher": [31, 34, 35, 79, 131, 132, 137, 149, 789, 792, 794, 797, 799, 802, 1190, 1191, 1192, 1193, 1301, 1302, 1303, 1304, 1305, 1349, 1355, 1621, 1622, 2131, 2134, 2135, 2138, 2140, 2141, 2151, 2156], "midpoint": [31, 79, 1301, 1302, 1303, 1304, 1305, 1349, 1355], "fraction": [31, 79, 1301, 1302, 1303, 1304, 1305, 1349, 1355, 1647, 1686, 1689], "surround": [31, 79, 130, 1301, 1302, 1303, 1304, 1305, 1349, 1355], "whichev": [31, 79, 1301, 1302, 1303, 1304, 1305, 1349, 1355], "unravel_index": [31, 79, 1349, 1384], "unravel": [31, 79, 1349, 1356, 1383, 1384, 1385, 1386, 1387], "all_equ": [32, 33, 80, 81, 1414, 1419], "equality_matrix": [32, 33, 80, 81, 1414, 1415, 1416, 1417, 1418, 1419], "array_equ": [32, 33, 80, 81, 1414, 1426], "assert_supports_inplac": [32, 33, 80, 81, 1414, 1431], "ivybackendexcept": [32, 33, 80, 81, 112, 120, 1414, 1427, 1428, 1429, 1430], "inplac": [32, 33, 34, 35, 65, 66, 80, 81, 110, 112, 118, 122, 124, 126, 130, 134, 136, 1414, 1421, 1427, 1428, 1429, 1430, 1431, 1504, 1515, 1516, 1517, 1518, 1519, 1520, 1621, 1622, 1953, 1961, 1962, 1966, 1971, 1972, 2146, 2147, 2148, 2177, 2178, 2179, 2180, 2181, 2182, 2266, 2267, 2272, 2276, 2278], "xla_extens": [32, 33, 80, 81, 112, 116, 117, 122, 129, 132, 134, 1414, 1427, 1428, 1429, 1430, 2312, 2322], "devicearrai": [32, 33, 80, 81, 112, 126, 132, 134, 1414, 1427, 1428, 1429, 1430, 2312, 2322], "clip_matrix_norm": [32, 33, 80, 81, 1414, 1437], "downscal": [32, 33, 80, 81, 1414, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1515, 1517, 1519], "894": [32, 33, 80, 81, 1414, 1433, 1434, 1436, 1437, 1438, 1439, 1441, 1442, 1973, 1974, 1977], "clip_vector_norm": [32, 33, 80, 81, 1414, 1442], "default_v": [32, 33, 1414, 1445, 1446, 1447], "catch_except": [32, 33, 1414, 1445, 1446, 1447], "rev": [32, 33, 1414, 1445, 1446, 1447], "with_cal": [32, 33, 1414, 1445, 1446, 1447], "catch": [32, 33, 128, 1414, 1445, 1446, 1447], "callabl": [32, 33, 80, 81, 114, 120, 126, 132, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 176, 219, 228, 229, 230, 305, 354, 355, 357, 358, 410, 423, 424, 435, 1190, 1208, 1285, 1288, 1414, 1420, 1432, 1445, 1446, 1447, 1453, 1454, 1455, 1456, 1457, 1471, 1472, 1540, 1596, 1608, 1647, 1701, 1704, 1949, 1950, 1951, 1952, 1953, 1960, 1961, 1962, 1964, 1965, 1966, 1967, 2177, 2181, 2186, 2192, 2221, 2223, 2276, 2282], "einops_rearrang": [32, 33, 80, 81, 1414, 1452], "axes_length": [32, 33, 80, 81, 1414, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462], "arrang": [32, 33, 1414, 1448, 1449, 1451], "rearrang": [32, 33, 80, 81, 1414, 1448, 1449, 1450, 1451, 1452, 1458, 1459, 1460, 1461, 1462], "einops_reduc": [32, 33, 80, 81, 1414], "reduct": [32, 33, 42, 43, 58, 59, 65, 66, 79, 80, 81, 90, 91, 106, 107, 116, 120, 128, 134, 834, 835, 836, 837, 1183, 1184, 1414, 1453, 1454, 1455, 1456, 1457, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2126], "One": [32, 33, 44, 45, 48, 49, 80, 81, 92, 93, 96, 97, 112, 114, 116, 118, 127, 128, 132, 134, 135, 789, 792, 794, 797, 799, 802, 1190, 1191, 1192, 1193, 1208, 1285, 1288, 1414, 1453, 1454, 1455, 1456, 1457, 1868, 1904, 1905, 1906, 1907, 1908, 1978, 1984, 1985, 1986, 1987, 1988], "prod": [32, 33, 56, 57, 80, 81, 104, 105, 116, 118, 132, 1414, 1453, 1454, 1455, 1456, 1457, 2068, 2099, 2230], "einops_repeat": [32, 33, 80, 81, 1414], "fourier_encod": [32, 33, 80, 81, 1414, 1470], "max_freq": [32, 33, 80, 81, 1414, 1466, 1467, 1468, 1469, 1470], "num_band": [32, 33, 80, 81, 1414, 1466, 1467, 1468, 1469, 1470], "concat": [32, 33, 44, 45, 65, 66, 92, 93, 127, 130, 132, 410, 435, 1414, 1466, 1467, 1469, 1868, 1878, 1944, 1948, 2126], "band": [32, 33, 80, 81, 1414, 1466, 1467, 1468, 1469, 1470], "linearli": [32, 33, 80, 81, 1414, 1466, 1467, 1468, 1469, 1470, 1711, 1804, 1807], "oppos": [32, 33, 80, 81, 116, 1414, 1466, 1467, 1468, 1469, 1470], "geometr": [32, 33, 80, 81, 1414, 1466, 1467, 1468, 1469, 1470, 1711, 1832, 1836], "concaten": [32, 33, 44, 45, 127, 130, 132, 135, 1414, 1448, 1451, 1466, 1467, 1469, 1868, 1874, 1875, 1877, 2126], "seper": [32, 33, 118, 127, 128, 1414, 1466, 1467, 1469], "0000000e": [32, 33, 80, 81, 1414, 1466, 1467, 1468, 1469, 1470], "2246468e": [32, 33, 80, 81, 1414, 1466, 1467, 1468, 1469, 1470], "4492936e": [32, 33, 1414, 1466, 1467, 1469], "6739404e": [32, 33, 80, 81, 1414, 1466, 1467, 1468, 1469, 1470], "gather": [32, 33, 80, 81, 1414, 1477, 1478, 1479, 1480, 1481, 1482, 1486, 2141], "batch_dim": [32, 33, 80, 81, 1414, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 2285, 2295, 2296], "gather_nd": [32, 33, 80, 81, 1414, 2126], "get_num_dim": [32, 33, 80, 81, 1414, 1494, 2126], "as_arrai": [32, 33, 80, 81, 1414, 1490, 1491, 1492, 1493, 1494, 1563], "has_nan": [32, 33, 80, 81, 1414], "include_inf": [32, 33, 80, 81, 1414, 1499, 1500, 1501, 1502, 1503, 1603, 1604, 1605, 1606, 1607], "inplace_decr": [32, 33, 80, 81, 1414, 1509], "decrement": [32, 33, 80, 81, 1414, 1505, 1506, 1507, 1508, 1509], "inplace_incr": [32, 33, 80, 81, 1414, 1514], "inplace_upd": [32, 33, 80, 81, 125, 1414, 1519, 2146, 2147, 2148], "ensure_in_backend": [32, 33, 125, 1414, 1515, 1516, 1518], "is_arrai": [32, 33, 80, 81, 126, 1414, 1525], "exclus": [32, 33, 56, 57, 65, 66, 80, 81, 104, 105, 114, 116, 123, 129, 137, 219, 221, 222, 1414, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1534, 1535, 1536, 1537, 1538, 1978, 1984, 1987, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2138, 2140], "trace": [32, 33, 40, 41, 65, 66, 80, 81, 88, 89, 111, 116, 132, 149, 1414, 1497, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1534, 1535, 1536, 1537, 1538, 1555, 1561, 1598, 1602, 1711, 1828, 2125, 2135, 2140], "is_ivy_arrai": [32, 33, 80, 81, 125, 134, 1414, 1530], "is_ivy_contain": [32, 33, 62, 67, 68, 1414], "is_native_arrai": [32, 33, 80, 81, 134, 879, 880, 1101, 1414, 1526, 1528, 1538], "scatter_flat": [32, 33, 80, 81, 1414, 1548], "occupi": [32, 33, 305, 349, 352, 360, 363, 1414, 1544, 1545, 1547, 1549, 1552], "scatter_nd": [32, 33, 80, 81, 130, 134, 1414, 1553, 2126], "stable_divid": [32, 33, 80, 81, 123, 1414, 1569], "denomin": [32, 33, 46, 47, 80, 81, 94, 95, 123, 149, 1414, 1488, 1557, 1565, 1566, 1567, 1568, 1569, 1973, 1974, 1975, 1976, 1977, 2131, 2175, 2176], "min_denomin": [32, 33, 80, 81, 1414, 1565, 1566, 1567, 1568, 1569], "_min_denomin": [32, 33, 80, 81, 1414, 1565, 1566, 1567, 1568, 1569], "stable_pow": [32, 33, 80, 81, 1414, 1574], "min_bas": [32, 33, 80, 81, 1414, 1570, 1571, 1572, 1573, 1574], "_min_bas": [32, 33, 46, 47, 80, 81, 94, 95, 1414, 1570, 1571, 1572, 1573, 1574, 1973, 1974, 1975, 1976, 1977, 2175, 2176], "supports_inplace_upd": [32, 33, 80, 81, 1414, 1576], "to_list": [32, 33, 80, 81, 1414, 1582, 2126], "to_numpi": [32, 33, 80, 81, 127, 135, 1414, 1587, 2126], "to_scalar": [32, 33, 80, 81, 1414, 1592], "value_is_nan": [32, 33, 80, 81, 1414, 1604], "92": [32, 33, 96, 97, 1603, 1605, 1609, 1634, 1637, 1711, 1722, 1725, 1989, 1991, 1994, 1996], "adam_step": [34, 35, 82, 83, 1609], "mw": [34, 35, 82, 83, 136, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618], "vw": [34, 35, 82, 83, 136, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618], "beta1": [34, 35, 82, 83, 136, 1414, 1421, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 2177, 2178, 2179], "beta2": [34, 35, 82, 83, 136, 1414, 1421, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 2177, 2178, 2179], "999": [34, 35, 77, 78, 82, 83, 136, 445, 751, 752, 754, 755, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1634, 1637, 2177, 2178, 2179], "epsilon": [34, 35, 40, 41, 42, 43, 46, 47, 79, 82, 83, 88, 89, 90, 91, 94, 95, 114, 123, 125, 136, 834, 835, 836, 837, 1183, 1184, 1414, 1421, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1711, 1774, 1775, 1776, 1777, 1778, 1789, 1792, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1973, 1974, 1975, 1976, 1977, 2175, 2176, 2177, 2178, 2179], "07": [34, 35, 42, 43, 77, 78, 79, 82, 83, 90, 91, 96, 97, 136, 445, 481, 483, 484, 485, 616, 618, 619, 620, 636, 639, 716, 719, 834, 835, 836, 837, 1183, 1184, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1645, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1989, 1991, 2177, 2178, 2179], "cost": [34, 35, 82, 83, 130, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1949, 1950, 1951, 1952, 2132], "dc": [34, 35, 82, 83, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637], "dw": [34, 35, 82, 83, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637], "averag": [34, 35, 82, 83, 809, 812, 1131, 1133, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1949, 1950, 1951, 2151, 2156, 2159], "forget": [34, 35, 82, 83, 116, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 2177, 2178, 2179], "adam": [34, 35, 82, 83, 135, 136, 137, 1414, 1421, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 2126, 2134, 2177, 2179], "delta": [34, 35, 82, 83, 1609, 1611, 1612, 1613, 1614], "dcdw": [34, 35, 82, 83, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633], "adam_step_delta": [34, 35, 82, 83, 1609, 1611, 1612, 1613, 1614], "2020105": [34, 35, 1609, 1611, 1612, 1614], "22187898": [34, 35, 1609, 1611, 1612, 1614], "24144873": [34, 35, 1609, 1611, 1612, 1614], "10000002": [34, 35, 104, 105, 1609, 1611, 1612, 1614, 2087, 2089], "20000005": [34, 35, 1609, 1611, 1612, 1614], "00300002": [34, 35, 1609, 1611, 1612, 1614], "00800002": [34, 35, 1609, 1611, 1612, 1614], "adam_upd": [34, 35, 82, 83, 136, 1609], "lr": [34, 35, 82, 83, 135, 136, 1414, 1421, 1609, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 2177, 2178, 2179, 2180, 2181, 2182], "mw_tm1": [34, 35, 82, 83, 1609, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629], "vw_tm1": [34, 35, 82, 83, 1609, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629], "stop_gradi": [34, 35, 82, 83, 136, 410, 435, 1414, 1421, 1609, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1640, 1949, 1950, 1951, 1952, 2126, 2177, 2178, 2179, 2180, 2181, 2182], "ws_new": [34, 35, 82, 83, 1609, 1615, 1616, 1617, 1618, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637], "updated_weight": [34, 35, 82, 83, 1609, 1615, 1616, 1617, 1618], "92558753": [34, 35, 1615, 1616], "92558873": [34, 35, 1609, 1615, 1616, 1618], "92558718": [34, 35, 1609, 1615, 1616, 1618], "00000063e": [34, 35, 82, 83, 1609, 1615, 1616, 1617, 1618], "00000016e": [34, 35, 82, 83, 1609, 1615, 1616, 1617, 1618], "00000086e": [34, 35, 82, 83, 1609, 1615, 1616, 1617, 1618], "gradient_descent_upd": [34, 35, 82, 83, 1609, 1949, 1950, 1951, 1952, 2126], "descent": [34, 35, 82, 83, 136, 1609, 1621, 1622, 1623, 1624, 2134, 2177, 2182], "new_weight": [34, 35, 82, 83, 135, 1609, 1621, 1622, 1624, 1626, 1627, 1628, 1629], "95": [34, 35, 48, 49, 63, 64, 82, 83, 96, 97, 169, 171, 173, 174, 881, 884, 1131, 1136, 1609, 1611, 1614, 1621, 1622, 1623, 1624, 1634, 1637, 1978, 1989, 1990, 1991, 1992, 1994, 1996], "97": [34, 35, 77, 78, 82, 83, 96, 97, 445, 471, 474, 475, 1609, 1621, 1622, 1623, 1624, 1989, 1991], "96": [34, 35, 77, 78, 79, 80, 81, 96, 97, 445, 526, 528, 529, 530, 746, 750, 751, 752, 881, 884, 885, 1131, 1136, 1149, 1151, 1153, 1414, 1448, 1451, 1453, 1456, 1457, 1609, 1621, 1622, 1624, 1711, 1784, 1787, 1994, 1996, 2068, 2079, 2082], "lamb_upd": [34, 35, 82, 83, 1609], "max_trust_ratio": [34, 35, 82, 83, 1609, 1626, 1627, 1628, 1629, 2177, 2179], "decay_lambda": [34, 35, 82, 83, 1609, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 2177, 2179, 2180], "trust": [34, 35, 82, 83, 1609, 1626, 1627, 1628, 1629, 2177, 2179], "ratio": [34, 35, 82, 83, 1609, 1626, 1627, 1628, 1629, 2177, 2179], "decai": [34, 35, 82, 83, 1609, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 2177, 2179, 2180], "lamb": [34, 35, 82, 83, 136, 1609, 1626, 1627, 1628, 1629, 2177], "784": [34, 35, 1609, 1626, 1627, 1629], "78": [34, 35, 445, 516, 519, 716, 719, 1609, 1626, 1627, 1629, 1711, 1784, 1787, 1978, 1989, 1992, 2068, 2079, 2082], "lars_upd": [34, 35, 82, 83, 1609], "lar": [34, 35, 82, 83, 136, 1609, 1630, 1631, 1632, 1633, 2177], "optimizer_upd": [34, 35, 82, 83, 1609], "effective_grad": [34, 35, 82, 83, 1609, 1634, 1635, 1636, 1637], "3e": [34, 35, 82, 83, 1609, 1634, 1635, 1636, 1637], "preserve_typ": [34, 35, 82, 83, 1609, 1639, 1640, 1641, 1642, 1643], "conv1d": [38, 39, 86, 87, 1647, 1653, 2161], "fw": [38, 39, 86, 87, 128, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 2197, 2207, 2218], "d_out": [38, 39, 86, 87, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680], "wio": [38, 39, 1647, 1649, 1650, 1652, 1654, 1655], "conv1d_transpos": [38, 39, 86, 87, 1647, 1658], "output_shap": [38, 39, 86, 87, 1647, 1648, 1654, 1655, 1656, 1657, 1658, 1664, 1665, 1666, 1667, 1668, 1674, 1675, 1676, 1677, 1678, 1680, 2161, 2163, 2165, 2167], "low": [38, 39, 48, 49, 86, 87, 96, 97, 114, 126, 130, 132, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1658, 1659, 1662, 1669, 1672, 1679, 1681, 1684, 1978, 1984, 1985, 1986, 1987, 1988, 1994, 1995, 1996, 1997, 1998, 2130, 2132, 2134, 2135, 2136, 2138, 2140, 2249, 2253], "pair": [38, 39, 86, 87, 115, 445, 481, 484, 933, 963, 1190, 1206, 1273, 1408, 1412, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1658, 1659, 1662, 1669, 1672, 1679, 1681, 1684, 1706, 1707, 1708, 1709, 1710, 1711, 1717, 1720], "spatial": [38, 39, 86, 87, 148, 1647, 1648, 1649, 1652, 1654, 1655, 1656, 1658, 1659, 1662, 1669, 1672, 1679, 1681, 1684], "conv2d": [38, 39, 86, 87, 1647, 1663, 1664, 1666, 1668, 2126, 2161], "fh": [38, 39, 86, 87, 1647, 1648, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685], "hwio": [38, 39, 1647, 1659, 1660, 1662], "conv2d_transpos": [38, 39, 86, 87, 1647, 1668], "random_norm": [38, 39, 40, 41, 48, 49, 86, 87, 88, 89, 96, 97, 1414, 1448, 1451, 1647, 1654, 1656, 1657, 1658, 1664, 1665, 1666, 1667, 1668, 1669, 1672, 1674, 1675, 1676, 1677, 1678, 1681, 1682, 1683, 1684, 1685, 1696, 1697, 1698, 1711, 1809, 1810, 1811, 1812, 1813, 1978, 1993], "std": [38, 39, 48, 49, 56, 57, 86, 87, 96, 97, 104, 105, 118, 824, 827, 1306, 1308, 1647, 1654, 1656, 1657, 1658, 1664, 1665, 1666, 1667, 1668, 1669, 1672, 1674, 1675, 1676, 1677, 1678, 1681, 1682, 1683, 1684, 1685, 1978, 1984, 1987, 1989, 1990, 1991, 1992, 1993, 2068], "conv3d": [38, 39, 86, 87, 1647, 1673, 2161], "fd": [38, 39, 86, 87, 1647, 1648, 1669, 1670, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680], "conv3d_transpos": [38, 39, 86, 87, 1647, 1678], "depthwise_conv2d": [38, 39, 86, 87, 1647, 1685, 2126], "randint": [38, 39, 48, 49, 52, 53, 86, 87, 96, 97, 116, 1681, 1682, 1683, 1685, 1696, 1697, 1978, 1988, 2031, 2032, 2034, 2036, 2126], "255": [38, 39, 79, 86, 87, 445, 511, 514, 881, 885, 1681, 1682, 1683, 1685], "dropout": [38, 39, 86, 87, 135, 906, 907, 1131, 1138, 1139, 1647, 1690, 2161, 2172], "noise_shap": [38, 39, 86, 87, 1647, 1686, 1687, 1688, 1689, 1690], "droput": [38, 39, 1686, 1687], "reproduc": [38, 39, 86, 87, 111, 1647, 1686, 1687, 1688, 1689, 1690, 2230, 2232, 2233, 2234, 2238, 2239, 2241, 2244, 2245, 2246, 2247, 2249, 2252, 2253, 2254, 2255, 2257, 2258, 2260, 2261, 2262, 2263, 2276, 2281, 2282], "binari": [38, 39, 42, 43, 79, 86, 87, 90, 91, 445, 491, 494, 506, 509, 516, 519, 656, 659, 834, 835, 836, 837, 1183, 1184, 1647, 1686, 1687, 1688, 1689, 1690, 1852, 1853, 1854, 1855, 1856, 1857], "mask": [38, 39, 86, 87, 130, 1414, 1486, 1647, 1686, 1687, 1688, 1689, 1690, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710], "42857146": [38, 39, 1647, 1686, 1687, 1689], "85714293": [38, 39, 1647, 1686, 1687, 1689], "28571415": [38, 39, 86, 87, 1647, 1686, 1687, 1688, 1689, 1690], "71428585": [38, 39, 86, 87, 1647, 1686, 1687, 1688, 1689, 1690], "14285755": [38, 39, 86, 87, 1647, 1686, 1687, 1688, 1689, 1690], "5714283": [38, 39, 1647, 1686, 1687, 1689], "4285717": [38, 39, 86, 87, 1647, 1686, 1687, 1688, 1689, 1690], "8571434": [38, 39, 86, 87, 1647, 1686, 1687, 1688, 1689, 1690], "2857151": [38, 39, 1647, 1686, 1687, 1689], "dropout1d": [38, 39, 86, 87, 1131], "droput1d": [38, 39], "dropout3d": [38, 39, 86, 87, 1131], "droput3d": [38, 39], "outer_batch_shap": [38, 39, 86, 87, 1647, 1691, 1692, 1693, 1694, 1695], "inner_batch_shap": [38, 39, 86, 87, 1647, 1691, 1692, 1693, 1694, 1695], "in_featur": [38, 39, 86, 87, 1647, 1691, 1692, 1693, 1694, 1695], "out_featur": [38, 39, 86, 87, 1647, 1691, 1692, 1693, 1694, 1695], "84": [38, 39, 56, 57, 77, 78, 94, 95, 96, 97, 305, 360, 363, 410, 422, 626, 628, 1691, 1692, 1711, 1784, 1787, 1973, 1974, 1976, 1977, 1989, 1991, 1994, 1996, 2068, 2079, 2080, 2082], "133": [38, 39, 1414, 1438, 1441, 1691, 1692], "134": [38, 39, 1691, 1692, 1711, 1769, 1772], "lstm_updat": [38, 39, 86, 87, 132, 1647], "init_h": [38, 39, 86, 87, 132, 1647, 1696, 1697, 1698, 1699, 1700], "init_c": [38, 39, 86, 87, 132, 1647, 1696, 1697, 1698, 1699, 1700], "recurrent_kernel": [38, 39, 86, 87, 132, 1647, 1696, 1697, 1698, 1699, 1700], "recurrent_bia": [38, 39, 86, 87, 132, 1647, 1696, 1697, 1698, 1699, 1700], "cell": [38, 39, 86, 87, 115, 132, 1647, 1696, 1697, 1698, 1699, 2161, 2170], "batch_shap": [38, 39, 48, 49, 71, 72, 86, 87, 96, 97, 130, 132, 134, 219, 240, 241, 274, 276, 277, 278, 1647, 1696, 1697, 1698, 1699, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1847, 1851, 1978, 1979, 1980, 1981, 1982, 1983, 2161, 2170], "hidden": [38, 39, 86, 87, 120, 132, 136, 1647, 1696, 1697, 1698, 1699, 2161, 2170], "recurr": [38, 39, 86, 87, 132, 1647, 1696, 1697, 1698, 1699, 2134, 2138], "timestep": [38, 39, 86, 87, 132, 1647, 1696, 1697, 1698, 1699, 2161, 2170], "h_i": [38, 39, 86, 87, 1696, 1697, 1698], "c_i": [38, 39, 86, 87, 1696, 1697, 1698], "rc": [38, 39, 86, 87, 1696, 1697, 1698], "multi_head_attent": [38, 39, 86, 87, 125, 1647], "num_head": [38, 39, 86, 87, 1647, 1701, 1702, 1703, 1704, 1705, 2161, 2172], "to_q_fn": [38, 39, 86, 87, 1647, 1701, 1702, 1703, 1704, 1705], "to_kv_fn": [38, 39, 86, 87, 1647, 1701, 1702, 1703, 1704, 1705], "to_out_fn": [38, 39, 86, 87, 125, 1647, 1701, 1702, 1703, 1704, 1705], "to_q_v": [38, 39, 86, 87, 1647, 1701, 1702, 1703, 1704, 1705], "to_kv_v": [38, 39, 86, 87, 1647, 1701, 1702, 1703, 1704, 1705], "to_out_v": [38, 39, 86, 87, 1647, 1701, 1702, 1703, 1704, 1705], "scaled_dot_product_attent": [38, 39, 86, 87, 1647, 1710], "queri": [38, 39, 65, 66, 86, 87, 114, 116, 134, 410, 422, 434, 1414, 1486, 1647, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 2134, 2161, 2172], "num_queri": [38, 39, 86, 87, 1647, 1701, 1704, 1706, 1707, 1708, 1709, 1710], "feat_dim": [38, 39, 86, 87, 1647, 1706, 1707, 1708, 1709, 1710], "num_kei": [38, 39, 86, 87, 1647, 1701, 1704, 1706, 1707, 1708, 1709, 1710], "dot": [38, 39, 86, 87, 115, 1164, 1172, 1250, 1647, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1837, 1841, 2161, 2172], "score": [38, 39, 86, 87, 1647, 1706, 1707, 1708, 1709, 1710], "linear_algebra": [40, 41, 88, 89, 129, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1741, 1743, 1746, 1748, 1751, 1753, 1756, 1758, 1759, 1762, 1764, 1767, 1769, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1792, 1794, 1797, 1799, 1802, 1804, 1807, 1809, 1813, 1814, 1818, 1819, 1822, 1823, 1826, 1827, 1831, 1832, 1836, 1837, 1841, 1842, 1846, 1847, 1851], "choleski": [40, 41, 88, 89, 125, 1711, 1716], "symmetr": [40, 41, 79, 88, 89, 114, 870, 872, 873, 874, 875, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1190, 1208, 1285, 1288, 1711, 1712, 1713, 1714, 1715, 1716, 1737, 1738, 1741, 1743, 1746, 1847, 1851], "625": [40, 41, 1711, 1712, 1713, 1715], "cross": [40, 41, 42, 43, 79, 88, 89, 90, 91, 115, 834, 835, 836, 837, 1183, 1184, 1711, 1721, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 2126], "vif": [40, 41, 88, 89, 1711, 1717, 1718, 1719, 1720, 1721], "det": [40, 41, 88, 89, 115, 1711, 1799, 1802], "axis1": [40, 41, 44, 45, 88, 89, 92, 93, 1711, 1732, 1733, 1734, 1735, 1736, 1827, 1828, 1829, 1830, 1831, 1868, 1929, 1930, 1931, 1932, 1933], "axis2": [40, 41, 88, 89, 1711, 1732, 1733, 1734, 1735, 1736, 1827, 1828, 1829, 1830, 1831], "eigh": [40, 41, 88, 89, 1711, 1737], "uplo": [40, 41, 88, 89, 1711, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747], "eigvalsh": [40, 41, 88, 89, 1711, 1747], "inv": [40, 41, 88, 89, 1711, 1757, 2126], "matmul": [40, 41, 88, 89, 113, 128, 129, 132, 1414, 1608, 1711, 1763, 1809, 1811, 1813, 2126], "transpose_a": [40, 41, 88, 89, 1711, 1759, 1760, 1761, 1762, 1763], "transpose_b": [40, 41, 88, 89, 1711, 1759, 1760, 1761, 1762, 1763], "adjoint_a": [40, 41, 88, 89, 1711, 1759, 1760, 1761, 1762, 1763], "adjoint_b": [40, 41, 88, 89, 1711, 1759, 1760, 1761, 1762, 1763], "matrix_norm": [40, 41, 88, 89, 1711, 1768], "ord": [40, 41, 88, 89, 1711, 1764, 1765, 1766, 1767, 1768, 1842, 1843, 1844, 1845, 1846], "fro": [40, 41, 88, 89, 1711, 1764, 1765, 1766, 1767, 1768], "nuc": [40, 41, 88, 89, 1711, 1764, 1765, 1766, 1767, 1768], "matrix_pow": [40, 41, 88, 89, 1711], "matrix_rank": [40, 41, 88, 89, 1711, 1778], "singular": [40, 41, 88, 89, 116, 1711, 1764, 1767, 1774, 1775, 1776, 1777, 1778, 1789, 1790, 1791, 1792, 1793, 1809, 1810, 1811, 1812, 1813, 1814, 1818, 2249, 2256], "largest_singular_valu": [40, 41, 88, 89, 1711, 1774, 1775, 1776, 1777, 1778, 1789, 1791, 1792, 1793], "equival": [40, 41, 88, 89, 125, 126, 130, 135, 137, 219, 221, 222, 445, 511, 514, 646, 649, 651, 654, 706, 709, 1711, 1774, 1775, 1776, 1777, 1778, 1789, 1792, 1804, 1807, 1842, 1843, 1844, 1845, 1846, 2312, 2324, 2325, 2326, 2327], "defici": [40, 41, 1711, 1774, 1775, 1777], "matrix_transpos": [40, 41, 88, 89, 134, 1711], "pinv": [40, 41, 88, 89, 1711, 1793, 2126], "pseudo": [40, 41, 88, 89, 1711, 1789, 1790, 1791, 1792, 1793], "0426": [40, 41, 88, 89, 1789, 1790, 1793], "0964": [40, 41, 88, 89, 1789, 1790, 1793], "0605": [40, 41, 88, 89, 1789, 1790, 1793], "1368": [40, 41, 88, 89, 1789, 1790, 1793], "qr": [40, 41, 88, 89, 127, 1711, 1798], "orthonorm": [40, 41, 88, 89, 1711, 1794, 1795, 1796, 1797, 1798, 1809, 1813], "namedtupl": [40, 41, 52, 53, 88, 89, 100, 101, 1711, 1737, 1738, 1741, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1809, 1810, 1811, 1812, 1813, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046], "field": [40, 41, 52, 53, 88, 89, 100, 101, 115, 148, 1711, 1737, 1738, 1741, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1809, 1813, 2031, 2032, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2132, 2140], "slogdet": [40, 41, 88, 89, 1711, 1803], "logabsdet": [40, 41, 88, 89, 1711, 1799, 1800, 1801, 1802, 1803], "6931472": [40, 41, 88, 89, 1711, 1799, 1800, 1801, 1802, 1803], "098611": [40, 41, 1711, 1799, 1800, 1802], "solv": [40, 41, 88, 89, 111, 126, 133, 148, 1711, 2136], "svd": [40, 41, 88, 89, 1711, 1810, 1814, 1818, 2126], "compute_uv": [40, 41, 88, 89, 1711, 1809, 1810, 1811, 1812, 1813], "full_matric": [40, 41, 88, 89, 1711, 1809, 1810, 1811, 1812, 1813], "svf": [40, 41, 1809, 1811], "vh": [40, 41, 88, 89, 1711, 1809, 1810, 1811, 1812, 1813], "hermitian": [40, 41, 88, 89, 923, 926, 1164, 1168, 1711, 1737, 1738, 1741, 1743, 1746, 1809, 1810, 1811, 1812, 1813], "reconstruct": [40, 41, 52, 53, 100, 101, 127, 1711, 1809, 1811, 1813, 2031, 2032, 2036, 2042, 2043, 2044, 2045, 2046], "reconstructed_x": [40, 41, 1711, 1809, 1811, 1813], "svdval": [40, 41, 88, 89, 1711], "tensordot": [40, 41, 88, 89, 116, 1711], "tensorsolv": [40, 41, 88, 89, 1711], "vander": [40, 41, 88, 89, 1711, 1833], "vandermond": [40, 41, 88, 89, 1711, 1832, 1833, 1834, 1835, 1836], "vecdot": [40, 41, 88, 89, 1711], "vector_norm": [40, 41, 88, 89, 1711, 1843, 2126], "singleton": [40, 41, 50, 51, 56, 57, 58, 59, 88, 89, 98, 99, 104, 105, 106, 107, 132, 1711, 1842, 1843, 1844, 1845, 1846, 1868, 1884, 1887, 1919, 1922, 2005, 2011, 2012, 2013, 2014, 2015, 2068, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124], "accordingli": [40, 41, 50, 51, 56, 57, 58, 59, 88, 89, 98, 99, 104, 105, 106, 107, 121, 126, 132, 219, 264, 267, 445, 561, 564, 626, 629, 1711, 1842, 1843, 1844, 1845, 1846, 2005, 2011, 2012, 2013, 2014, 2015, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2068, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124], "mathemat": [40, 41, 88, 89, 116, 126, 130, 213, 445, 461, 464, 481, 484, 561, 564, 626, 629, 1711, 1764, 1767, 1842, 1843, 1844, 1845, 1846, 2134, 2140], "l1": [40, 41, 88, 89, 114, 135, 1711, 1842, 1843, 1844, 1845, 1846], "manhattan": [40, 41, 88, 89, 1711, 1842, 1843, 1844, 1845, 1846], "euclidean": [40, 41, 88, 89, 1711, 1842, 1843, 1844, 1845, 1846], "7416575": [40, 41, 88, 89, 1711, 1842, 1843, 1844, 1845, 1846], "vector_to_skew_symmetric_matrix": [40, 41, 88, 89, 1711, 2126], "binary_cross_entropi": [42, 43, 90, 91, 115, 1852, 1857], "pred": [42, 43, 79, 90, 91, 114, 123, 125, 834, 835, 836, 837, 1183, 1184, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867], "predict": [42, 43, 79, 90, 91, 834, 835, 836, 837, 1183, 1184, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867], "amount": [42, 43, 79, 90, 91, 115, 117, 127, 410, 441, 834, 835, 836, 837, 1183, 1184, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867], "smooth": [42, 43, 79, 90, 91, 834, 835, 836, 837, 1183, 1184, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867], "entropi": [42, 43, 79, 90, 91, 834, 835, 836, 837, 1183, 1184, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867], "357": [42, 43, 90, 91, 1852, 1853, 1854, 1855, 1856, 1857, 1863, 1864, 1866, 1867], "223": [42, 43, 90, 91, 1852, 1853, 1854, 1855, 1856, 1857, 1863, 1864, 1865, 1867], "cross_entropi": [42, 43, 90, 91, 114, 123, 125, 1852, 1862, 1863, 1866], "3862944": [42, 43, 1852, 1858, 1859, 1861], "sparse_cross_entropi": [42, 43, 90, 91, 1852, 1867], "loss": [43, 79, 91, 115, 116, 123, 126, 129, 135, 136, 137, 834, 835, 836, 837, 1184, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 2126, 2134, 2141], "x_min": [44, 45, 92, 93, 137, 1868, 1869, 1870, 1871, 1872, 1873], "x_max": [44, 45, 92, 93, 137, 1868, 1869, 1870, 1871, 1872, 1873], "join": [44, 45, 65, 66, 92, 93, 120, 1868, 1874, 1875, 1877, 1924, 1925, 1926, 1927, 1928, 2126], "constant_pad": [44, 45, 92, 93, 1868, 1883], "before_1": [44, 45, 92, 93, 1190, 1208, 1285, 1288, 1868, 1879, 1880, 1881, 1882, 1883, 1944, 1945, 1946, 1947, 1948], "after_1": [44, 45, 92, 93, 1190, 1208, 1285, 1288, 1868, 1879, 1880, 1881, 1882, 1883, 1944, 1945, 1946, 1947, 1948], "before_n": [44, 45, 92, 93, 1190, 1208, 1285, 1288, 1868, 1879, 1880, 1881, 1882, 1883, 1944, 1945, 1946, 1947, 1948], "after_n": [44, 45, 92, 93, 1190, 1208, 1285, 1288, 1868, 1879, 1880, 1881, 1882, 1883, 1944, 1945, 1946, 1947, 1948], "expand_dim": [44, 45, 92, 93, 126, 132, 135, 1647, 1681, 1684, 1868, 1888, 2126], "permute_dim": [44, 45, 92, 93, 1868, 1898], "repetit": [44, 45, 92, 93, 120, 1868, 1899, 1900, 1901, 1902, 1934, 1935, 1936, 1937, 1938], "fit": [44, 45, 92, 93, 126, 132, 1868, 1899, 1900, 1901, 1902, 2130, 2131, 2134], "flat": [44, 45, 65, 66, 92, 93, 1349, 1356, 1383, 1387, 1414, 1544, 1547, 1868, 1899, 1900, 1901, 1902, 2149, 2150], "allowzero": [44, 45, 92, 93, 1868, 1904, 1905, 1906, 1907, 1908], "valueerror": [44, 45, 92, 93, 120, 1868, 1904, 1905, 1906, 1907, 1908, 1919, 1922], "reus": [44, 45, 92, 93, 120, 128, 1868, 1904, 1905, 1906, 1907, 1908, 2139], "buffer": [44, 45, 92, 93, 149, 1868, 1904, 1905, 1906, 1907, 1908], "roll": [44, 45, 92, 93, 114, 122, 1868, 1913], "restor": [44, 45, 92, 93, 1868, 1909, 1910, 1911, 1912, 1913], "num_or_size_split": [44, 45, 65, 66, 92, 93, 132, 1647, 1701, 1704, 1868, 1914, 1915, 1916, 1917, 1918], "with_remaind": [44, 45, 65, 66, 92, 93, 1868, 1914, 1915, 1916, 1917, 1918], "squeez": [44, 45, 92, 93, 1868, 1923, 2126, 2134], "swapax": [44, 45, 92, 93, 1868, 1930], "axis0": [44, 45, 92, 93, 1868, 1929, 1930, 1931, 1932, 1933], "swap_ax": [44, 45, 1929, 1931], "swap": [44, 45, 92, 93, 1868, 1929, 1930, 1931, 1932, 1933, 2312, 2328], "tile": [44, 45, 80, 81, 92, 93, 1458, 1460, 1462, 1868, 1935, 2126], "unpack": [44, 45, 92, 93, 121, 127, 128, 1868, 1939, 1940, 1941, 1942, 1943], "zero_pad": [44, 45, 92, 93, 1868, 1945, 2126], "layer_norm": [46, 47, 94, 95, 1973], "normalized_idx": [46, 47, 94, 95, 1973, 1974, 1975, 1976, 1977], "new_std": [46, 47, 94, 95, 1973, 1974, 1975, 1976, 1977, 2175, 2176], "learnabl": [46, 47, 94, 95, 137, 1973, 1974, 1975, 1976, 1977, 2175, 2176], "0976": [46, 47, 1973, 1974, 1975, 1977], "3452": [46, 47, 1973, 1974, 1975, 1977], "2740": [46, 47, 1973, 1974, 1975, 1977], "1047": [46, 47, 1973, 1974, 1975, 1977], "5886": [46, 47, 1973, 1974, 1975, 1977], "2732": [46, 47, 1973, 1974, 1975, 1977], "7696": [46, 47, 1973, 1974, 1975, 1977, 2230, 2238], "7024": [46, 47, 1973, 1974, 1975, 1977], "2518": [46, 47, 1973, 1974, 1975, 1977], "826": [46, 47, 1973, 1974, 1975, 1977], "178": [46, 47, 1973, 1974, 1975, 1977], "981": [46, 47, 1973, 1974, 1975, 1977], "831": [46, 47, 1973, 1974, 1975, 1977], "421": [46, 47, 1973, 1974, 1975, 1977], "multinomi": [48, 49, 96, 97, 901, 904, 1306, 1309, 1978, 1983], "population_s": [48, 49, 96, 97, 1978, 1979, 1980, 1981, 1982, 1983], "num_sampl": [48, 49, 96, 97, 1978, 1979, 1980, 1981, 1982, 1983], "unnorm": [48, 49, 96, 97, 128, 1978, 1979, 1980, 1981, 1982, 1983], "popul": [48, 49, 56, 57, 65, 66, 96, 97, 104, 105, 116, 117, 128, 132, 150, 156, 157, 870, 871, 979, 982, 1978, 1979, 1980, 1981, 1982, 1983, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2140], "uniform": [48, 49, 96, 97, 136, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1994, 1995, 1996, 1997, 1998, 2141, 2151, 2153, 2154, 2158], "highest": [48, 49, 96, 97, 1978, 1984, 1985, 1986, 1987, 1988], "half": [48, 49, 96, 97, 130, 219, 221, 222, 1978, 1984, 1985, 1986, 1987, 1988, 1994, 1997], "int64": [48, 49, 50, 51, 54, 55, 73, 74, 96, 97, 98, 99, 102, 103, 104, 105, 116, 126, 128, 132, 219, 279, 280, 305, 328, 330, 331, 332, 342, 348, 354, 355, 360, 363, 372, 373, 374, 375, 376, 378, 380, 386, 389, 401, 1159, 1162, 1339, 1340, 1984, 1985, 1986, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2019, 2052, 2058, 2059, 2060, 2061, 2062, 2068, 2069, 2072, 2074, 2076, 2077, 2095, 2098, 2104, 2108, 2230, 2233, 2238], "235": [48, 49, 1989, 1990], "float16": [48, 49, 73, 74, 96, 97, 116, 128, 305, 334, 339, 340, 349, 351, 352, 353, 357, 358, 933, 943, 1009, 1012, 1711, 1842, 1846, 1989, 1990, 1991, 1994, 1995, 1996, 2230, 2233, 2238], "49": [48, 49, 88, 89, 445, 731, 734, 881, 884, 1131, 1136, 1164, 1172, 1250, 1832, 1833, 1835, 1989, 1990, 2068, 2079, 2082], "807": [48, 49, 1989, 1990], "random_uniform": [48, 49, 96, 97, 117, 128, 132, 136, 1978, 1998, 2126], "86": [48, 49, 96, 97, 1609, 1611, 1614, 1989, 1991, 1994, 1995, 1996], "53": [48, 49, 77, 78, 410, 441, 561, 563, 565, 1609, 1620, 1625, 1645, 1973, 1974, 1977, 1994, 1995], "argmax": [50, 51, 98, 99, 126, 2005, 2010, 2126], "select_last_index": [50, 51, 98, 99, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015], "insert": [50, 51, 98, 99, 115, 1868, 1884, 1887, 1953, 1959, 2005, 2006, 2007, 2008, 2009, 2010, 2052, 2058, 2061], "occurr": [50, 51, 2005, 2006, 2007, 2009, 2011, 2012, 2014, 2031, 2032, 2036], "argmin": [50, 51, 98, 99, 2005, 2015, 2126], "output_dtyp": [50, 51, 98, 99, 2005, 2011, 2012, 2013, 2014, 2015], "argwher": [50, 51, 98, 99, 121, 2005, 2020], "nonzero": [50, 51, 98, 99, 445, 461, 464, 2005, 2025], "as_tupl": [50, 51, 98, 99, 2005, 2021, 2022, 2023, 2024, 2025], "fewer": [50, 51, 98, 99, 2005, 2021, 2022, 2023, 2024, 2025], "yield": [50, 51, 115, 121, 1190, 1206, 1207, 1208, 1273, 1274, 1285, 1288, 2005, 2026, 2028, 2030], "condit": [50, 51, 98, 99, 111, 116, 118, 120, 125, 148, 1953, 1964, 1965, 2005, 2026, 2027, 2028, 2029, 2030, 2249, 2256], "unique_al": [52, 53, 100, 101, 2031, 2033], "inverse_indic": [52, 53, 100, 101, 2031, 2032, 2033, 2034, 2035, 2036, 2042, 2043, 2044, 2045, 2046], "vari": [52, 53, 114, 118, 126, 128, 134, 1414, 1448, 1451, 2031, 2032, 2034, 2036, 2037, 2041, 2042, 2046, 2047, 2051], "unique_count": [52, 53, 100, 101, 2031, 2038], "unique_invers": [52, 53, 100, 101, 2031, 2043], "unique_valu": [52, 53, 100, 101, 2031], "argsort": [54, 55, 102, 103, 126, 2052, 2057, 2058, 2061], "descend": [54, 55, 102, 103, 1711, 1809, 1813, 1814, 1818, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2064, 2065, 2066, 2067], "ascend": [54, 55, 102, 103, 1159, 1162, 1339, 1340, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2061], "stabil": [54, 55, 102, 103, 116, 130, 1414, 1565, 1568, 1570, 1573, 2052, 2053, 2054, 2055, 2056, 2057, 2063, 2066], "searchsort": [54, 55, 102, 103, 2052, 2062], "sorter": [54, 55, 102, 103, 2052, 2058, 2059, 2060, 2061, 2062], "ret_dtyp": [54, 55, 102, 103, 2052, 2058, 2059, 2060, 2061, 2062], "cumprod": [56, 57, 104, 105, 126, 137, 2068, 2073], "cumul": [56, 57, 104, 105, 148, 2068, 2069, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078], "exclud": [56, 57, 104, 105, 118, 132, 219, 221, 222, 870, 876, 877, 1375, 1378, 1379, 1382, 1978, 1994, 1997, 2069, 2070, 2071, 2073, 2230, 2234, 2238, 2239, 2260, 2261, 2312, 2314], "120": [56, 57, 62, 67, 68, 104, 105, 1711, 1784, 1787, 2069, 2070, 2071, 2073], "cumsum": [56, 57, 104, 105, 116, 2068, 2078, 2126], "einsum": [56, 57, 104, 105, 2068], "equat": [56, 57, 79, 104, 105, 870, 872, 1046, 1047, 1048, 1049, 1711, 1804, 1807, 2068, 2079, 2080, 2081, 2082, 2134], "contract": [56, 57, 1711, 1819, 1822, 2068, 2079, 2080, 2082], "operand": [56, 57, 112, 114, 119, 126, 445, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 516, 519, 521, 524, 526, 529, 531, 534, 556, 559, 561, 564, 566, 569, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 691, 694, 706, 709, 711, 714, 721, 724, 726, 729, 731, 734, 746, 750, 751, 755, 756, 760, 933, 960, 1334, 1337, 2068, 2079, 2080, 2082, 2083, 2086, 2091, 2094, 2104, 2108], "seq": [56, 57, 2068, 2079, 2080, 2082, 2230, 2243], "jk": [56, 57, 2068, 2079, 2080, 2082], "ik": [56, 57, 2068, 2079, 2080, 2082], "66": [56, 57, 80, 81, 82, 83, 445, 516, 519, 1414, 1448, 1451, 1453, 1456, 1457, 1609, 1621, 1623, 1624, 1711, 1784, 1787, 2068, 2079, 2080, 2082], "104": [56, 57, 1711, 1784, 1787, 2068, 2079, 2080, 2082], "126": [56, 57, 169, 171, 174, 445, 696, 699, 1711, 1769, 1772, 2068, 2079, 2080, 2082], "510": [56, 57, 2068, 2079, 2080, 2082], "arithmet": [56, 57, 104, 105, 126, 445, 511, 514, 2068, 2087, 2088, 2089, 2090], "x_i": [56, 57, 77, 78, 79, 119, 445, 446, 449, 451, 454, 456, 459, 466, 469, 471, 474, 476, 479, 496, 499, 521, 524, 526, 529, 531, 534, 556, 559, 561, 564, 566, 569, 586, 589, 590, 591, 594, 595, 596, 599, 600, 601, 604, 605, 616, 619, 621, 624, 626, 629, 631, 634, 646, 649, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 746, 750, 751, 755, 756, 760, 933, 958, 960, 1312, 1315, 1316, 1334, 1337, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2068, 2083, 2086, 2087, 2088, 2090, 2091, 2094, 2100, 2103, 2104, 2108, 2109, 2111, 2113, 2151, 2155], "propag": [56, 57, 445, 511, 514, 2068, 2083, 2086, 2087, 2088, 2090, 2091, 2094, 2100, 2103, 2104, 2108, 2109, 2111, 2113], "04999995": [56, 57, 2087, 2088], "0999999": [56, 57, 2087, 2088], "freedom": [56, 57, 104, 105, 113, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113], "adjust": [56, 57, 104, 105, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2312, 2328], "constitut": [56, 57, 104, 105, 123, 132, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113, 2135], "commonli": [56, 57, 104, 105, 120, 123, 2068, 2100, 2101, 2102, 2103, 2109, 2111, 2112, 2113], "8164966": [56, 57, 2068, 2100, 2101, 2103], "var": [56, 57, 104, 105, 108, 109, 118, 132, 214, 215, 216, 217, 218, 1949, 1950, 1951, 2068, 2110, 2285, 2298, 2305], "varianc": [56, 57, 104, 105, 2068, 2109, 2110, 2111, 2112, 2113, 2151, 2159], "unbias": [56, 57, 104, 105, 2068, 2109, 2111, 2112, 2113], "6666665": [56, 57, 135, 2109, 2111], "667": [56, 57, 80, 81, 445, 541, 544, 1414, 1438, 1440, 1565, 1567, 1568, 2109, 2111], "AND": [58, 59, 106, 107, 445, 491, 494, 641, 644, 2114, 2115, 2116, 2117, 2118, 2119], "add_ivy_array_instance_method": 60, "cl": [60, 61, 108, 109], "to_ignor": [60, 61, 108, 109, 1953, 1965, 1966], "loop": [60, 61, 108, 109, 113, 121, 149, 1949, 1950, 1951, 1952], "_wrap_funct": [60, 61, 108, 109, 123, 124], "toi": [60, 61, 108, 109], "arrayexampl": [60, 61], "hasattr": [60, 61, 108, 109], "dict_in": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "queue": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 135, 1414, 1495, 1559, 1600], "queue_load_s": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "container_combine_method": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "list_join": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "queue_timeout": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "print_limit": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "key_length_limit": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "print_ind": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "print_line_spac": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "ivyh": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "default_key_color": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "keyword_color_dict": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "rebuild_child_contain": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "types_to_iteratively_nest": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "alphabetical_kei": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "containerwithactiv": [62, 63, 67, 68], "containerwithconvers": [62, 67, 68, 69], "containerwithcr": [62, 67, 68, 71], "containerwithdatatyp": [62, 67, 68, 73], "containerwithdevic": [62, 67, 68, 75], "containerwithelementwis": [62, 67, 68, 77, 114], "containerwithgener": [62, 67, 68, 80], "containerwithgradi": [62, 67, 68, 82], "containerwithimag": [62, 67, 68, 84], "containerwithlay": [62, 67, 68, 86], "containerwithlinearalgebra": [62, 67, 68, 88], "containerwithloss": [62, 67, 68, 90], "containerwithnorm": [62, 67, 68, 94], "containerwithrandom": [62, 67, 68, 96], "containerwithsearch": [62, 67, 68, 98], "containerwithset": [62, 67, 68, 100], "containerwithsort": [62, 67, 68, 102], "containerwithstatist": [62, 67, 68, 104], "containerwithutil": [62, 67, 68, 106], "containerwithactivationexperiment": [62, 67, 68, 79], "containerwithconversionexperiment": [62, 67, 68, 79], "containerwithcreationexperiment": [62, 67, 68, 79], "containerwithdata_typeexperiment": [62, 67, 68, 79], "containerwithdeviceexperiment": [62, 67, 68, 79], "containerwithelementwiseexperiment": [62, 67, 68, 79], "containerwithgeneralexperiment": [62, 67, 68, 79], "containerwithgradientsexperiment": [62, 67, 68, 79], "containerwithimageexperiment": [62, 67, 68, 79], "containerwithlayersexperiment": [62, 67, 68, 79], "containerwithlinearalgebraexperiment": [62, 67, 68, 79], "containerwithlossesexperiment": [62, 67, 68, 79], "containerwithmanipulationexperiment": [62, 67, 68, 79], "containerwithnormsexperiment": [62, 67, 68, 79], "containerwithrandomexperiment": [62, 67, 68, 79], "containerwithsearchingexperiment": [62, 67, 68, 79], "containerwithsetexperiment": [62, 67, 68, 79], "containerwithsortingexperiment": [62, 67, 68, 79], "containerwithstatisticalexperiment": [62, 67, 68, 79], "containerwithutilityexperiment": [62, 67, 68, 79], "eq": [62, 67, 68], "ge": [62, 67, 68], "gt": [62, 67, 68, 127, 132], "dictionari": [62, 65, 66, 67, 68, 112, 115, 116, 126, 135, 149, 169, 170, 176, 410, 434, 1609, 1619, 2197, 2202, 2203], "asynchron": [62, 65, 66, 67, 68, 2134], "arriv": [62, 65, 66, 67, 68, 130, 1414, 1559], "cont_list_join": [62, 65, 66, 67, 68], "timeout": [62, 65, 66, 67, 68, 1414, 1495, 1559, 1600], "whitespac": [62, 65, 66, 67, 68], "indent": [62, 65, 66, 67, 68, 135], "extra": [62, 65, 66, 67, 68, 112, 116, 118, 124, 126, 127, 130, 132, 1414, 1608, 2131, 2136], "newlin": [62, 65, 66, 67, 68, 119], "color": [62, 65, 66, 67, 68, 2335, 2336], "termcolor": [62, 65, 66, 67, 68], "constructor": [62, 65, 66, 67, 68, 116, 117, 134, 1414, 1421, 2146, 2147, 2183, 2184, 2197, 2217, 2219], "alphabet": [62, 65, 66, 67, 68], "le": [62, 67, 68], "lt": [62, 67, 68], "ne": [62, 67, 68], "75979435": [62, 67, 68], "52153397": [62, 67, 68], "13532257": [62, 67, 68], "rshift": [62, 67, 68], "143": [62, 67, 68, 77, 78, 118, 445, 746, 747, 749, 750], "truediv": [62, 67, 68], "66666669": [62, 67, 68], "60000002": [62, 67, 68, 104, 105, 2087, 2089], "key_chain": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 171, 173, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 221, 223, 224, 227, 235, 237, 239, 240, 242, 243, 245, 247, 249, 251, 253, 254, 256, 258, 259, 261, 263, 264, 266, 268, 269, 271, 273, 274, 276, 278, 279, 281, 282, 284, 286, 287, 288, 290, 292, 293, 295, 297, 298, 300, 301, 303, 313, 315, 317, 318, 320, 322, 323, 325, 327, 328, 330, 332, 335, 337, 339, 341, 344, 345, 347, 349, 351, 353, 354, 356, 357, 359, 360, 362, 364, 367, 369, 371, 372, 373, 375, 376, 378, 380, 381, 383, 385, 386, 388, 390, 393, 395, 397, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 774, 776, 778, 779, 781, 783, 784, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 823, 824, 826, 828, 829, 831, 833, 834, 835, 837, 838, 842, 844, 847, 849, 851, 853, 855, 859, 860, 864, 865, 867, 869, 881, 885, 887, 888, 890, 891, 893, 895, 896, 900, 901, 905, 908, 912, 913, 915, 917, 918, 920, 922, 923, 925, 927, 928, 930, 932, 964, 966, 968, 969, 973, 974, 978, 979, 981, 983, 984, 988, 989, 993, 994, 998, 999, 1003, 1004, 1008, 1009, 1013, 1014, 1018, 1019, 1023, 1024, 1028, 1032, 1036, 1039, 1043, 1046, 1047, 1049, 1050, 1053, 1054, 1058, 1059, 1063, 1064, 1066, 1068, 1069, 1071, 1073, 1074, 1078, 1079, 1083, 1084, 1088, 1095, 1097, 1099, 1103, 1105, 1107, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1123, 1125, 1126, 1128, 1130, 1149, 1151, 1153, 1154, 1158, 1159, 1161, 1163, 1173, 1177, 1185, 1187, 1189, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1226, 1228, 1229, 1231, 1233, 1234, 1238, 1240, 1244, 1245, 1247, 1249, 1251, 1255, 1256, 1260, 1261, 1265, 1266, 1270, 1276, 1278, 1280, 1285, 1287, 1289, 1291, 1295, 1296, 1298, 1300, 1301, 1303, 1305, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1329, 1333, 1334, 1336, 1338, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1375, 1376, 1377, 1379, 1380, 1381, 1383, 1384, 1389, 1390, 1391, 1393, 1394, 1398, 1399, 1401, 1403, 1404, 1406, 1408, 1409, 1411, 1415, 1417, 1419, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1499, 1501, 1503, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1621, 1623, 1639, 1640, 1642, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1669, 1671, 1673, 1674, 1676, 1678, 1681, 1683, 1685, 1686, 1688, 1690, 1691, 1693, 1695, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1722, 1724, 1726, 1727, 1729, 1731, 1732, 1734, 1736, 1738, 1740, 1742, 1743, 1745, 1747, 1748, 1750, 1752, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1769, 1771, 1773, 1774, 1776, 1778, 1779, 1781, 1783, 1784, 1786, 1788, 1794, 1796, 1798, 1799, 1801, 1803, 1804, 1806, 1808, 1809, 1810, 1812, 1814, 1815, 1817, 1819, 1820, 1821, 1827, 1828, 1830, 1832, 1833, 1837, 1838, 1840, 1842, 1843, 1845, 1847, 1848, 1850, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1869, 1871, 1873, 1874, 1876, 1878, 1879, 1881, 1883, 1884, 1886, 1888, 1889, 1891, 1893, 1894, 1896, 1898, 1899, 1901, 1903, 1904, 1906, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1929, 1930, 1932, 1934, 1935, 1937, 1939, 1940, 1942, 1944, 1945, 1947, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2016, 2018, 2020, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2047, 2048, 2050, 2053, 2055, 2057, 2058, 2060, 2062, 2063, 2065, 2067, 2069, 2071, 2073, 2074, 2076, 2078, 2079, 2081, 2083, 2085, 2087, 2089, 2091, 2093, 2095, 2097, 2099, 2100, 2102, 2104, 2105, 2107, 2109, 2110, 2112, 2115, 2117, 2119, 2120, 2122, 2124], "to_appli": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 171, 173, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 221, 223, 224, 227, 235, 237, 239, 240, 242, 243, 245, 247, 249, 251, 253, 254, 256, 258, 259, 261, 263, 264, 266, 268, 269, 271, 273, 274, 276, 278, 279, 281, 282, 284, 286, 287, 288, 290, 292, 293, 295, 297, 298, 300, 301, 303, 313, 315, 317, 318, 320, 322, 323, 325, 327, 328, 330, 332, 335, 337, 339, 341, 344, 345, 347, 349, 351, 353, 354, 356, 357, 359, 360, 362, 364, 367, 369, 371, 372, 373, 375, 376, 378, 380, 381, 383, 385, 386, 388, 390, 393, 395, 397, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 774, 776, 778, 779, 781, 783, 784, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 823, 824, 826, 828, 829, 831, 833, 834, 835, 837, 838, 842, 844, 847, 849, 851, 853, 855, 859, 860, 864, 865, 867, 869, 881, 885, 887, 888, 890, 891, 893, 895, 896, 900, 901, 905, 908, 912, 913, 915, 917, 918, 920, 922, 923, 925, 927, 928, 930, 932, 964, 966, 968, 969, 973, 974, 978, 979, 981, 983, 984, 988, 989, 993, 994, 998, 999, 1003, 1004, 1008, 1009, 1013, 1014, 1018, 1019, 1023, 1024, 1028, 1032, 1036, 1039, 1043, 1046, 1047, 1049, 1050, 1053, 1054, 1058, 1059, 1063, 1064, 1066, 1068, 1069, 1071, 1073, 1074, 1078, 1079, 1083, 1084, 1088, 1095, 1097, 1099, 1103, 1105, 1107, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1123, 1125, 1126, 1128, 1130, 1149, 1151, 1153, 1154, 1158, 1159, 1161, 1163, 1173, 1177, 1185, 1187, 1189, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1226, 1228, 1229, 1231, 1233, 1234, 1238, 1240, 1244, 1245, 1247, 1249, 1251, 1255, 1256, 1260, 1261, 1265, 1266, 1270, 1276, 1278, 1280, 1285, 1287, 1289, 1291, 1295, 1296, 1298, 1300, 1301, 1303, 1305, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1329, 1333, 1334, 1336, 1338, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1375, 1376, 1377, 1379, 1380, 1381, 1383, 1384, 1389, 1390, 1391, 1393, 1394, 1398, 1399, 1401, 1403, 1404, 1406, 1408, 1409, 1411, 1415, 1417, 1419, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1499, 1501, 1503, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1621, 1623, 1639, 1640, 1642, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1669, 1671, 1673, 1674, 1676, 1678, 1681, 1683, 1685, 1686, 1688, 1690, 1691, 1693, 1695, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1722, 1724, 1726, 1727, 1729, 1731, 1732, 1734, 1736, 1738, 1740, 1742, 1743, 1745, 1747, 1748, 1750, 1752, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1769, 1771, 1773, 1774, 1776, 1778, 1779, 1781, 1783, 1784, 1786, 1788, 1794, 1796, 1798, 1799, 1801, 1803, 1804, 1806, 1808, 1809, 1810, 1812, 1814, 1815, 1817, 1819, 1820, 1821, 1827, 1828, 1830, 1832, 1833, 1837, 1838, 1840, 1842, 1843, 1845, 1847, 1848, 1850, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1869, 1871, 1873, 1874, 1876, 1878, 1879, 1881, 1883, 1884, 1886, 1888, 1889, 1891, 1893, 1894, 1896, 1898, 1899, 1901, 1903, 1904, 1906, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1929, 1930, 1932, 1934, 1935, 1937, 1939, 1940, 1942, 1944, 1945, 1947, 1953, 1967, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2016, 2018, 2020, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2047, 2048, 2050, 2053, 2055, 2057, 2058, 2060, 2062, 2063, 2065, 2067, 2069, 2071, 2073, 2074, 2076, 2078, 2079, 2081, 2083, 2085, 2087, 2089, 2091, 2093, 2095, 2097, 2099, 2100, 2102, 2104, 2105, 2107, 2109, 2110, 2112, 2115, 2117, 2119, 2120, 2122, 2124], "prune_unappli": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 171, 173, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 221, 223, 224, 227, 235, 237, 239, 240, 242, 243, 245, 247, 249, 251, 253, 254, 256, 258, 259, 261, 263, 264, 266, 268, 269, 271, 273, 274, 276, 278, 279, 281, 282, 284, 286, 287, 288, 290, 292, 293, 295, 297, 298, 300, 301, 303, 313, 315, 317, 318, 320, 322, 323, 325, 327, 328, 330, 332, 335, 337, 339, 341, 344, 345, 347, 349, 351, 353, 354, 356, 357, 359, 360, 362, 364, 367, 369, 371, 372, 373, 375, 376, 378, 380, 381, 383, 385, 386, 388, 390, 393, 395, 397, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 779, 781, 783, 784, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 823, 824, 826, 828, 829, 831, 833, 834, 835, 837, 838, 842, 844, 847, 849, 851, 853, 855, 859, 860, 864, 865, 867, 869, 881, 885, 887, 888, 890, 891, 893, 895, 896, 900, 901, 905, 908, 912, 913, 915, 917, 918, 920, 922, 923, 925, 927, 928, 930, 932, 964, 966, 968, 969, 973, 974, 978, 979, 981, 983, 984, 988, 989, 993, 994, 998, 999, 1003, 1004, 1008, 1009, 1013, 1014, 1018, 1019, 1023, 1024, 1028, 1032, 1036, 1039, 1043, 1046, 1047, 1049, 1050, 1053, 1054, 1058, 1059, 1063, 1064, 1066, 1068, 1069, 1071, 1073, 1074, 1078, 1079, 1083, 1084, 1088, 1095, 1097, 1099, 1103, 1105, 1107, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1123, 1125, 1126, 1128, 1130, 1149, 1151, 1153, 1154, 1158, 1159, 1161, 1163, 1173, 1177, 1185, 1187, 1189, 1219, 1221, 1223, 1224, 1226, 1228, 1229, 1231, 1233, 1234, 1238, 1240, 1244, 1245, 1247, 1249, 1251, 1255, 1256, 1260, 1261, 1265, 1266, 1270, 1276, 1278, 1280, 1285, 1287, 1289, 1291, 1295, 1296, 1298, 1300, 1301, 1303, 1305, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1329, 1333, 1334, 1336, 1338, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1375, 1376, 1377, 1379, 1380, 1381, 1383, 1384, 1389, 1390, 1391, 1393, 1394, 1398, 1399, 1401, 1403, 1404, 1406, 1408, 1409, 1411, 1415, 1417, 1419, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1499, 1501, 1503, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1621, 1623, 1639, 1640, 1642, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1669, 1671, 1673, 1674, 1676, 1678, 1681, 1683, 1685, 1686, 1688, 1690, 1691, 1693, 1695, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1722, 1724, 1726, 1727, 1729, 1731, 1732, 1734, 1736, 1738, 1740, 1742, 1743, 1745, 1747, 1748, 1750, 1752, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1769, 1771, 1773, 1774, 1776, 1778, 1779, 1781, 1783, 1784, 1786, 1788, 1794, 1796, 1798, 1799, 1801, 1803, 1804, 1806, 1808, 1809, 1810, 1812, 1814, 1815, 1817, 1819, 1820, 1821, 1827, 1828, 1830, 1832, 1833, 1837, 1838, 1840, 1842, 1843, 1845, 1847, 1848, 1850, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1869, 1871, 1873, 1874, 1876, 1878, 1879, 1881, 1883, 1884, 1886, 1888, 1889, 1891, 1893, 1894, 1896, 1898, 1899, 1901, 1903, 1904, 1906, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1929, 1930, 1932, 1934, 1935, 1937, 1939, 1940, 1942, 1944, 1945, 1947, 1953, 1967, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2016, 2018, 2020, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2047, 2048, 2050, 2053, 2055, 2057, 2058, 2060, 2062, 2063, 2065, 2067, 2069, 2071, 2073, 2074, 2076, 2078, 2079, 2081, 2083, 2085, 2087, 2089, 2091, 2093, 2095, 2097, 2099, 2100, 2102, 2104, 2105, 2107, 2109, 2110, 2112, 2115, 2117, 2119, 2120, 2122, 2124], "map_sequ": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 171, 173, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 221, 223, 224, 227, 235, 237, 239, 240, 242, 243, 245, 247, 249, 251, 253, 254, 256, 258, 259, 261, 263, 264, 266, 268, 269, 271, 273, 274, 276, 278, 279, 281, 282, 284, 286, 287, 288, 290, 292, 293, 295, 297, 298, 300, 301, 303, 313, 315, 317, 318, 320, 322, 323, 325, 327, 328, 330, 332, 335, 337, 339, 341, 344, 345, 347, 349, 351, 353, 354, 356, 357, 359, 360, 362, 364, 367, 369, 371, 372, 373, 375, 376, 378, 380, 381, 383, 385, 386, 388, 390, 393, 395, 397, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 779, 781, 783, 784, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 823, 824, 826, 828, 829, 831, 833, 834, 835, 837, 838, 842, 844, 847, 849, 851, 853, 855, 859, 860, 864, 865, 867, 869, 881, 885, 887, 888, 890, 891, 893, 895, 896, 900, 901, 905, 908, 912, 913, 915, 917, 918, 920, 922, 923, 925, 927, 928, 930, 932, 964, 966, 968, 969, 973, 974, 978, 979, 981, 983, 984, 988, 989, 993, 994, 998, 999, 1003, 1004, 1008, 1009, 1013, 1014, 1018, 1019, 1023, 1024, 1028, 1032, 1036, 1039, 1043, 1046, 1047, 1049, 1050, 1053, 1054, 1058, 1059, 1063, 1064, 1066, 1068, 1069, 1071, 1073, 1074, 1078, 1079, 1083, 1084, 1088, 1095, 1097, 1099, 1103, 1105, 1107, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1123, 1125, 1126, 1128, 1130, 1149, 1151, 1153, 1154, 1158, 1159, 1161, 1163, 1173, 1177, 1185, 1187, 1189, 1219, 1221, 1223, 1224, 1226, 1228, 1229, 1231, 1233, 1234, 1238, 1240, 1244, 1245, 1247, 1249, 1251, 1255, 1256, 1260, 1261, 1265, 1266, 1270, 1276, 1278, 1280, 1285, 1287, 1289, 1291, 1295, 1296, 1298, 1300, 1301, 1303, 1305, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1329, 1333, 1334, 1336, 1338, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1375, 1376, 1377, 1379, 1380, 1381, 1383, 1384, 1389, 1390, 1391, 1393, 1394, 1398, 1399, 1401, 1403, 1404, 1406, 1408, 1409, 1411, 1415, 1417, 1419, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1499, 1501, 1503, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1621, 1623, 1639, 1640, 1642, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1669, 1671, 1673, 1674, 1676, 1678, 1681, 1683, 1685, 1686, 1688, 1690, 1691, 1693, 1695, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1722, 1724, 1726, 1727, 1729, 1731, 1732, 1734, 1736, 1738, 1740, 1742, 1743, 1745, 1747, 1748, 1750, 1752, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1769, 1771, 1773, 1774, 1776, 1778, 1779, 1781, 1783, 1784, 1786, 1788, 1794, 1796, 1798, 1799, 1801, 1803, 1804, 1806, 1808, 1809, 1810, 1812, 1814, 1815, 1817, 1819, 1820, 1821, 1827, 1828, 1830, 1832, 1833, 1837, 1838, 1840, 1842, 1843, 1845, 1847, 1848, 1850, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1869, 1871, 1873, 1874, 1876, 1878, 1879, 1881, 1883, 1884, 1886, 1888, 1889, 1891, 1893, 1894, 1896, 1898, 1899, 1901, 1903, 1904, 1906, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1929, 1930, 1932, 1934, 1935, 1937, 1939, 1940, 1942, 1944, 1945, 1947, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2016, 2018, 2020, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2047, 2048, 2050, 2053, 2055, 2057, 2058, 2060, 2062, 2063, 2065, 2067, 2069, 2071, 2073, 2074, 2076, 2078, 2079, 2081, 2083, 2085, 2087, 2089, 2091, 2093, 2095, 2097, 2099, 2100, 2102, 2104, 2105, 2107, 2109, 2110, 2112, 2115, 2117, 2119, 2120, 2122, 2124], "static_adam_step": [62, 67, 68], "static_adam_upd": [62, 67, 68], "static_arg_info": [62, 67, 68], "static_arg_nam": [62, 67, 68], "static_arrai": [62, 67, 68], "static_as_ivy_dev": [62, 67, 68], "static_as_ivy_dtyp": [62, 67, 68], "static_as_native_dev": [62, 67, 68], "static_as_native_dtyp": [62, 67, 68], "static_asarray_handle_nest": [62, 67, 68], "static_asarray_infer_devic": [62, 67, 68], "static_asarray_to_native_arrays_and_back": [62, 67, 68], "static_cache_fn": [62, 67, 68], "static_check_float": [62, 67, 68], "static_clear_mem_on_dev": [62, 67, 68], "static_closest_valid_dtyp": [62, 67, 68], "static_container_typ": [62, 67, 68], "static_conv": [62, 67, 68], "static_conv_general_dil": [62, 67, 68], "static_conv_general_transpos": [62, 67, 68], "static_copy_arrai": [62, 67, 68, 219, 231, 233], "static_current_backend": [62, 67, 68], "static_current_backend_str": [62, 67, 68], "static_default": [62, 67, 68], "static_default_devic": [62, 67, 68], "static_default_dtyp": [62, 67, 68], "static_default_int_dtyp": [62, 67, 68], "static_default_uint_dtyp": [62, 67, 68], "static_deseri": [62, 67, 68], "static_dev_util": [62, 67, 68], "static_dtype_bit": [62, 67, 68], "static_einsum": [62, 67, 68], "static_empti": [62, 67, 68], "static_execute_with_gradi": [62, 67, 68], "static_exist": [62, 67, 68], "static_ful": [62, 67, 68], "static_function_supported_devic": [62, 67, 68], "static_function_supported_devices_and_dtyp": [62, 67, 68], "static_function_unsupported_devic": [62, 67, 68], "static_function_unsupported_devices_and_dtyp": [62, 67, 68], "static_get": [62, 67, 68], "static_get_all_arrays_in_memori": [62, 67, 68], "static_get_all_ivy_arrays_on_dev": [62, 67, 68], "static_get_array_mod": [62, 67, 68], "static_get_exception_trace_mod": [62, 67, 68], "static_get_item": [62, 67, 68], "static_get_min_bas": [62, 67, 68], "static_get_min_denomin": [62, 67, 68], "static_get_nestable_mod": [62, 67, 68], "static_get_queue_timeout": [62, 67, 68], "static_get_referrers_recurs": [62, 67, 68], "static_get_show_func_wrapper_trace_mod": [62, 67, 68], "static_get_tmp_dir": [62, 67, 68], "static_gpu_is_avail": [62, 67, 68], "static_grad": [62, 67, 68], "static_gradient_descent_upd": [62, 67, 68], "static_handle_array_funct": [62, 67, 68], "static_handle_array_like_without_promot": [62, 67, 68], "static_handle_except": [62, 67, 68], "static_handle_nest": [62, 67, 68], "static_handle_out_argu": [62, 67, 68], "static_handle_view": [62, 67, 68], "static_handle_view_index": [62, 67, 68], "static_infer_default_dtyp": [62, 67, 68], "static_infer_devic": [62, 67, 68], "static_infer_dtyp": [62, 67, 68], "static_inplace_arrays_support": [62, 67, 68], "static_inplace_variables_support": [62, 67, 68], "static_inputs_to_ivy_arrai": [62, 67, 68], "static_inputs_to_native_arrai": [62, 67, 68], "static_integer_arrays_to_float": [62, 67, 68], "static_invalid_dtyp": [62, 67, 68], "static_is_ivy_contain": [62, 67, 68], "static_isscalar": [62, 67, 68], "static_jac": [62, 67, 68], "static_lamb_upd": [62, 67, 68], "static_lars_upd": [62, 67, 68], "static_layer_norm": [62, 67, 68], "static_lu_factor": [62, 67, 68], "static_match_kwarg": [62, 67, 68], "static_max": [62, 67, 68], "static_mean": [62, 67, 68], "static_min": [62, 67, 68], "static_multiprocess": [62, 67, 68], "static_normalize_axis_tupl": [62, 67, 68], "static_num_arrays_in_memori": [62, 67, 68], "static_num_cpu_cor": [62, 67, 68], "static_num_gpu": [62, 67, 68], "static_num_ivy_arrays_on_dev": [62, 67, 68], "static_optimizer_upd": [62, 67, 68], "static_outputs_to_ivy_arrai": [62, 67, 68], "static_percent_used_mem_on_dev": [62, 67, 68], "static_print_all_arrays_in_memori": [62, 67, 68], "static_print_all_ivy_arrays_on_dev": [62, 67, 68], "static_promote_typ": [62, 67, 68], "static_promote_types_of_input": [62, 67, 68], "static_se": [62, 67, 68], "static_set_array_mod": [62, 67, 68], "static_set_default_complex_dtyp": [62, 67, 68], "static_set_default_devic": [62, 67, 68], "static_set_default_dtyp": [62, 67, 68], "static_set_default_float_dtyp": [62, 67, 68], "static_set_default_int_dtyp": [62, 67, 68], "static_set_default_uint_dtyp": [62, 67, 68], "static_set_exception_trace_mod": [62, 67, 68], "static_set_min_bas": [62, 67, 68], "static_set_min_denomin": [62, 67, 68], "static_set_nestable_mod": [62, 67, 68], "static_set_queue_timeout": [62, 67, 68], "static_set_shape_array_mod": [62, 67, 68], "static_set_show_func_wrapper_trace_mod": [62, 67, 68], "static_set_split_factor": [62, 67, 68], "static_set_tmp_dir": [62, 67, 68], "static_set_with_grad": [62, 67, 68], "static_shap": [62, 67, 68], "static_shape_array_mod": [62, 67, 68], "static_split_factor": [62, 67, 68], "static_split_func_cal": [62, 67, 68], "static_std": [62, 67, 68], "static_tensorsolv": [62, 67, 68], "static_to_ivy_shap": [62, 67, 68], "static_to_native_arrays_and_back": [62, 67, 68], "static_to_native_shap": [62, 67, 68], "static_total_mem_on_dev": [62, 67, 68], "static_tpu_is_avail": [62, 67, 68], "static_try_else_non": [62, 67, 68], "static_type_promote_arrai": [62, 67, 68], "static_unset_array_mod": [62, 67, 68], "static_unset_default_complex_dtyp": [62, 67, 68], "static_unset_default_devic": [62, 67, 68], "static_unset_default_dtyp": [62, 67, 68], "static_unset_default_float_dtyp": [62, 67, 68], "static_unset_default_int_dtyp": [62, 67, 68], "static_unset_default_uint_dtyp": [62, 67, 68], "static_unset_exception_trace_mod": [62, 67, 68], "static_unset_nestable_mod": [62, 67, 68], "static_unset_queue_timeout": [62, 67, 68], "static_unset_shape_array_mod": [62, 67, 68], "static_unset_show_func_wrapper_trace_mod": [62, 67, 68], "static_unset_with_grad": [62, 67, 68], "static_used_mem_on_dev": [62, 67, 68], "static_valid_dtyp": [62, 67, 68], "static_value_and_grad": [62, 67, 68], "static_vmap": [62, 67, 68], "static_with_grad": [62, 67, 68], "static_wrap": [62, 67, 68], "containerbas": [63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 1108, 1112], "formul": [63, 64, 171, 173, 175], "chain": [63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 114, 126, 136, 137, 149, 171, 173, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 249, 251, 253, 274, 276, 278, 282, 284, 286, 300, 301, 303, 318, 320, 322, 328, 330, 332, 360, 362, 364, 372, 373, 375, 376, 378, 380, 393, 395, 397, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 779, 781, 783, 819, 823, 824, 826, 828, 829, 831, 833, 849, 851, 853, 865, 867, 869, 896, 900, 908, 912, 979, 981, 983, 999, 1003, 1069, 1071, 1073, 1103, 1105, 1107, 1126, 1128, 1130, 1154, 1158, 1185, 1187, 1189, 1276, 1278, 1280, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1334, 1336, 1338, 1362, 1363, 1365, 1367, 1368, 1370, 1393, 1394, 1403, 1404, 1406, 1408, 1409, 1411, 1415, 1417, 1419, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1621, 1623, 1639, 1640, 1642, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1686, 1688, 1690, 1691, 1693, 1695, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1743, 1745, 1747, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1774, 1776, 1778, 1794, 1796, 1798, 1799, 1801, 1803, 1827, 1828, 1830, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1869, 1871, 1873, 1884, 1888, 1889, 1891, 1893, 1904, 1906, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1939, 1940, 1942, 1944, 1945, 1947, 1949, 1950, 1951, 1953, 1956, 1967, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2016, 2018, 2020, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2053, 2055, 2057, 2069, 2071, 2073, 2074, 2076, 2078, 2087, 2089, 2095, 2097, 2099, 2100, 2102, 2109, 2110, 2112, 2115, 2117, 2119, 2120, 2122, 2124, 2134, 2149, 2150, 2183, 2184], "prune": [63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 115, 171, 173, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 249, 251, 253, 274, 276, 278, 282, 284, 286, 300, 301, 303, 318, 320, 322, 328, 330, 332, 360, 362, 364, 372, 373, 375, 376, 378, 380, 393, 395, 397, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 779, 781, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 823, 824, 826, 828, 829, 831, 833, 849, 851, 853, 865, 867, 869, 896, 900, 908, 912, 979, 981, 983, 999, 1003, 1059, 1063, 1069, 1071, 1073, 1103, 1105, 1107, 1126, 1128, 1130, 1154, 1158, 1185, 1187, 1189, 1276, 1278, 1280, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1334, 1336, 1338, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1393, 1394, 1403, 1404, 1406, 1408, 1409, 1411, 1415, 1417, 1419, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1621, 1623, 1639, 1640, 1642, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1686, 1688, 1690, 1691, 1693, 1695, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1743, 1745, 1747, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1774, 1776, 1778, 1794, 1796, 1798, 1799, 1801, 1803, 1827, 1828, 1830, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1869, 1871, 1873, 1884, 1888, 1889, 1891, 1893, 1904, 1906, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1939, 1940, 1942, 1944, 1945, 1947, 1953, 1967, 1968, 1969, 1970, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2016, 2018, 2020, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2053, 2055, 2057, 2069, 2071, 2073, 2074, 2076, 2078, 2087, 2089, 2095, 2097, 2099, 2100, 2102, 2109, 2110, 2112, 2115, 2117, 2119, 2120, 2122, 2124, 2221], "166": [63, 64, 169, 171, 173, 174], "159": [63, 64, 169, 171, 173, 174, 1647, 1691, 1694], "38999999": [63, 64, 177, 179, 181], "371": [63, 64, 182, 184, 186], "30883577": [63, 64, 169, 187, 189, 190, 191], "28903052": [63, 64, 169, 187, 189, 190, 191], "10714479": [63, 64, 169, 187, 189, 190, 191], "2689414": [63, 64, 197, 199, 201, 202, 204, 206], "7310586": [63, 64, 197, 199, 201, 202, 204, 206], "88079703": [63, 64, 197, 199, 201], "62245935": [63, 64, 197, 199, 201], "4750208": [63, 64, 197, 199, 201], "72844321": [63, 64, 202, 204, 206], "19852395": [63, 64, 202, 204, 206], "07303288": [63, 64, 202, 204, 206], "revert": [63, 64, 169, 207, 209, 210, 211], "948": [63, 64, 207, 209, 211], "static_gelu": [63, 64, 171], "185": [63, 64, 171, 175], "046": [63, 64, 171, 175], "static_leaky_relu": [63, 64, 177], "static_log_softmax": [63, 64, 182], "static_mish": [63, 64, 187], "static_relu": [63, 64, 192], "static_sigmoid": [63, 64, 197], "static_softmax": [63, 64, 202], "static_softplu": [63, 64, 207], "53499615": [63, 64, 207, 211], "42036411": [63, 64, 207, 211], "31326175": [63, 64, 207, 211], "69314718": [63, 64, 207, 211], "__getitem__": [65, 66, 114], "slice": [65, 66, 80, 81, 870, 876, 877, 1190, 1210, 1357, 1361, 1375, 1378, 1379, 1382, 1414, 1473, 1476, 1478, 1481, 1482, 1486, 1953, 1963, 2134], "__setitem__": [65, 66, 112, 114, 134], "cont_all_fals": [65, 66], "assert_is_bool": [65, 66], "assert": [65, 66, 110, 111, 121, 126, 127, 128, 129, 134, 135, 1414, 1427, 1430, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2276, 2279, 2280, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306], "cont_all_key_chain": [65, 66], "include_empti": [65, 66], "cont_all_tru": [65, 66, 114, 135], "cont_as_bool": [65, 66], "cont_assert_contains_sub_contain": [65, 66], "sub_cont": [65, 66], "cont_assert_contains_sub_structur": [65, 66], "check_shap": [65, 66, 2285], "cont_assert_ident": [65, 66], "check_typ": [65, 66], "same_arrai": [65, 66, 135], "arrays_equ": [65, 66], "cont_assert_identical_structur": [65, 66], "cont_at_key_chain": [65, 66], "ignore_key_error": [65, 66], "ignore_non": [65, 66], "cont_at_kei": [65, 66], "substr": [65, 66], "cont_combin": [65, 66], "duplic": [65, 66, 113, 119, 121, 124, 127, 136, 1953, 1956, 2140], "container_rightmost": [65, 66], "cont_common_key_chain": [65, 66, 114], "cont_config": [65, 66], "cont_contains_sub_contain": [65, 66], "cont_contains_sub_structur": [65, 66], "cont_copi": [65, 66, 135], "cont_create_if_abs": [65, 66], "noth": [65, 66, 130, 2140], "cont_cutoff_at_depth": [65, 66], "depth_cutoff": [65, 66], "cont_cutoff_at_height": [65, 66], "height_cutoff": [65, 66], "cont_deep_copi": [65, 66, 135], "intern": [65, 66, 112, 114, 117, 119, 125, 127, 128, 1953, 1954, 1964, 1965, 2128, 2129, 2151, 2152, 2155, 2156, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2183, 2184], "cont_dev": [65, 66], "cont_dev_str": [65, 66], "cont_diff": [65, 66, 114, 135], "diff_kei": [65, 66], "detect_key_diff": [65, 66], "detect_value_diff": [65, 66], "detect_shape_diff": [65, 66], "container0": [65, 66], "cont_duplicate_array_keychain": [65, 66], "cont_find_sub_contain": [65, 66], "sub_cont_to_find": [65, 66], "exsit": [65, 66], "cont_find_sub_structur": [65, 66], "sub_struc_to_find": [65, 66], "cont_flatten_key_chain": [65, 66, 135], "__": [65, 66, 118, 135], "above_height": [65, 66, 135], "below_depth": [65, 66, 135], "cont_format_key_chain": [65, 66], "format_fn": [65, 66], "cont_from_disk_as_hdf5": [65, 66, 135], "h5_obj_or_filepath": [65, 66], "slice_obj": [65, 66], "load": [65, 66, 128, 149, 2133, 2140], "disk": [65, 66, 135, 2133], "h5py": [65, 66], "hdf5": [65, 66, 135, 2173, 2174], "h5": [65, 66], "cont_from_disk_as_json": [65, 66, 135], "json_filepath": [65, 66], "cont_from_disk_as_pickl": [65, 66, 135], "pickle_filepath": [65, 66], "pickl": [65, 66, 114, 135], "cont_from_flat_list": [65, 66], "flat_list": [65, 66], "cont_handle_inplac": [65, 66], "prime": [65, 66], "overwritten": [65, 66, 112, 113], "cont_has_kei": [65, 66], "query_kei": [65, 66], "somewher": [65, 66, 115], "cont_has_key_chain": [65, 66], "cont_ident": [65, 66, 135], "cont_identical_array_shap": [65, 66], "cont_identical_config": [65, 66], "cont_identical_structur": [65, 66], "cont_if_exist": [65, 66], "cont_inplace_upd": [65, 66], "cont_ivi": [65, 66], "cont_key_chains_contain": [65, 66], "sub_str": [65, 66], "cont_list_stack": [65, 66, 135], "cont_map": [65, 66, 114, 135], "cont_map_sub_cont": [65, 66], "include_self": [65, 66], "possibi": [65, 66], "cont_max_depth": [65, 66], "cont_multi_map": [65, 66, 114], "map_nest": [65, 66], "assert_ident": [65, 66], "leftmost": [65, 66, 1953, 1967], "cont_multi_map_in_funct": [65, 66, 114], "fn": [65, 66, 73, 74, 120, 126, 132, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 219, 228, 229, 230, 305, 354, 355, 356, 357, 358, 359, 410, 423, 424, 1414, 1420, 1471, 1472, 1596, 1953, 1960, 1961, 1962, 1964, 1965, 1966, 2186, 2189, 2190, 2191, 2192, 2197, 2209, 2210, 2211, 2212, 2213, 2285, 2287, 2312, 2321, 2332, 2334], "cont_num_arrai": [65, 66], "cont_overwrite_at_key_chain": [65, 66], "target_dict": [65, 66], "return_dict": [65, 66], "cont_prune_empti": [65, 66], "keep_non": [65, 66], "cont_prune_key_chain": [65, 66], "key1": [65, 66, 136], "key2": [65, 66], "key3": [65, 66], "cont_prune_key_from_key_chain": [65, 66], "cont_prune_kei": [65, 66], "cont_prune_keys_from_key_chain": [65, 66], "cont_reduc": [65, 66], "cont_remove_key_length_limit": [65, 66], "cont_remove_print_limit": [65, 66], "cont_reshape_lik": [65, 66], "leading_shap": [65, 66], "return_cont": [65, 66], "cont_restructur": [65, 66], "keep_orig": [65, 66], "cont_restructure_key_chain": [65, 66], "keychain_map": [65, 66], "cont_set_at_key_chain": [65, 66], "cont_set_at_kei": [65, 66], "cont_shap": [65, 66, 1647, 1669, 1672], "attribut": [65, 66, 114, 116, 119, 124, 125, 126, 133, 134, 135, 136, 150, 156, 157, 305, 349, 352, 354, 355, 357, 358, 360, 363, 410, 423, 424, 431, 870, 871, 979, 982, 1414, 1471, 1472, 2221, 2222], "cont_show": [65, 66], "cont_show_sub_contain": [65, 66], "sub_cont_or_keychain": [65, 66], "cont_size_ordered_arrai": [65, 66], "keychain": [65, 66, 79, 789, 791, 793, 794, 796, 798, 799, 801, 803, 1059, 1063, 1357, 1358, 1360], "cont_slice_kei": [65, 66], "key_slic": [65, 66], "all_depth": [65, 66], "cont_slice_via_kei": [65, 66], "slice_kei": [65, 66], "cont_sort_by_kei": [65, 66], "cont_structural_diff": [65, 66], "cont_to_dict": [65, 66], "cont_to_disk_as_hdf5": [65, 66, 135], "starting_index": [65, 66], "max_batch_s": [65, 66], "cont_to_disk_as_json": [65, 66, 135], "cont_to_disk_as_pickl": [65, 66, 135], "cont_to_flat_list": [65, 66], "cont_to_iter": [65, 66, 114], "leaf_keys_onli": [65, 66], "cont_to_iterator_kei": [65, 66], "cont_to_iterator_valu": [65, 66], "cont_to_json": [65, 66], "cont_to_nested_list": [65, 66], "cont_to_raw": [65, 66], "raw": [65, 66, 119, 2135], "cont_trim_kei": [65, 66], "max_length": [65, 66], "trim": [65, 66], "cont_try_kc": [65, 66], "tri": [65, 66, 2221, 2222], "cont_unifi": [65, 66], "concatten": [65, 66, 410, 435], "cont_unstack_cont": [65, 66], "dim_siz": [65, 66], "cont_update_config": [65, 66], "cont_with_default_key_color": [65, 66], "cont_with_entries_as_list": [65, 66], "cont_with_ivy_backend": [65, 66], "ivy_backend": [65, 66], "cont_with_key_length_limit": [65, 66, 135], "cont_with_print_ind": [65, 66, 135], "cont_with_print_limit": [65, 66, 135], "cont_with_print_line_spac": [65, 66], "h5_file_s": [65, 66], "shuffle_h5_fil": [65, 66], "seed_valu": [65, 66, 1978, 1999], "dataset": [65, 66, 135, 147, 2126], "split_cont": [65, 66], "constitu": [65, 66, 137], "static_to_ivi": [69, 70], "static_to_n": [69, 70], "2324": [71, 72, 219, 249, 251, 252, 253], "234": [71, 72, 77, 78, 219, 249, 251, 252, 253, 445, 551, 553, 555, 756, 757, 759, 760, 1647, 1691, 1694, 2230, 2239], "123": [71, 72, 73, 74, 128, 219, 249, 251, 252, 253, 360, 362, 1414, 1463, 1465], "15443469": [71, 72, 259, 261, 263], "64158883": [71, 72, 259, 261, 263], "5443469": [71, 72, 219, 259, 261, 262], "static_arang": [71, 72, 221], "static_asarrai": [71, 72, 224], "static_empty_lik": [71, 72, 235], "static_ey": [71, 72, 240], "n_row": [71, 72, 79, 219, 240, 241, 242, 870, 876, 877, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382], "n_col": [71, 72, 79, 219, 240, 241, 242, 870, 876, 877, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382], "static_from_dlpack": [71, 72, 243], "static_full_lik": [71, 72, 249], "static_linspac": [71, 72, 254], "static_logspac": [71, 72, 259], "static_meshgrid": [71, 72, 264], "static_native_arrai": [71, 72, 269], "static_one_hot": [71, 72, 274], "static_on": [71, 72, 279], "static_ones_lik": [71, 72, 282], "static_tril": [71, 72, 287], "static_triu": [71, 72, 292], "static_zero": [71, 72, 297], "static_zeros_lik": [71, 72, 300], "718": [73, 74, 77, 78, 305, 313, 315, 316, 317, 651, 653], "618": [73, 74, 77, 78, 305, 313, 315, 316, 317, 651, 653], "broadcats": [73, 74, 318, 320], "inquir": [73, 74, 349, 351, 353, 360, 362, 364], "55040e": [73, 74, 305, 349, 351, 352, 353], "7976931348623157e": [73, 74, 305, 349, 351, 352, 353], "308": [73, 74, 128, 305, 349, 351, 352, 353, 2230, 2233, 2239], "1800": [73, 74, 305, 360, 362, 363, 364], "2147483648": [73, 74, 305, 360, 362, 363, 364], "2147483647": [73, 74, 305, 360, 362, 363, 364], "complex64": [73, 74, 305, 335, 336, 372, 373, 374, 375, 398, 404], "static_astyp": [73, 74, 313], "static_broadcast_arrai": [73, 74, 318], "And": [73, 74, 128, 318, 322], "static_broadcast_to": [73, 74, 323], "static_can_cast": [73, 74, 328], "from_": [73, 74, 305, 328, 331, 332], "static_default_complex_dtyp": [73, 74, 335], "complex_dtyp": [73, 74, 305, 306, 335, 336, 337, 398], "static_default_float_dtyp": [73, 74, 339], "float_dtyp": [73, 74, 305, 308, 339, 340, 341, 400], "static_dtyp": [73, 74, 344], "static_finfo": [73, 74, 349], "static_function_supported_dtyp": [73, 74, 354], "static_function_unsupported_dtyp": [73, 74, 357], "static_iinfo": [73, 74, 360], "1084": [73, 74, 360, 364], "40000": [73, 74, 360, 364], "static_is_bool_dtyp": [73, 74, 367], "dtype_in": [73, 74, 305, 311, 312, 348, 366, 367, 370, 371, 372, 374, 375, 376, 379, 380, 381, 384, 385, 386, 389, 390, 409, 879, 880, 1101], "static_is_complex_dtyp": [73, 74, 372], "static_is_float_dtyp": [73, 74, 376], "static_is_int_dtyp": [73, 74, 381], "static_is_uint_dtyp": [73, 74, 386], "static_result_typ": [73, 74, 393], "contaion": [75, 76, 417, 419], "static_dev": [75, 76, 417], "static_to_devic": [75, 76, 436], "524": [77, 78, 445, 466, 468, 469, 470], "644": [77, 78, 136, 445, 466, 468, 469], "305": [77, 78, 79, 86, 87, 445, 466, 468, 469, 834, 835, 836, 837, 1183, 1184, 1691, 1693, 1695], "915": [77, 78, 445, 481, 483, 484, 485], "29": [77, 78, 80, 81, 82, 83, 96, 97, 445, 481, 483, 484, 485, 1414, 1448, 1451, 1453, 1456, 1457, 1609, 1626, 1628, 1629, 1984, 1986, 1989, 1991, 1994, 1996, 1998], "983": [77, 78, 445, 481, 483, 484, 485], "978": [77, 78, 169, 197, 200, 445, 481, 483, 484, 485], "696": [77, 78, 96, 97, 445, 481, 483, 484, 485, 1989, 1991], "993": [77, 78, 445, 481, 483, 484, 485], "203": [77, 78, 94, 95, 486, 488, 490, 1973, 1974, 1976, 1977], "34": [77, 78, 79, 80, 81, 96, 97, 305, 360, 363, 445, 516, 519, 531, 533, 535, 636, 639, 726, 728, 730, 814, 818, 1414, 1432, 1448, 1451, 1453, 1456, 1457, 1711, 1769, 1772, 1978, 1984, 1988, 1989, 1991, 1994, 1997], "351": [77, 78, 445, 536, 538, 539, 696, 698], "00613": [77, 78, 536, 538], "0154": [77, 78, 536, 538], "0262": [77, 78, 445, 536, 538, 539, 540, 696, 699], "873": [77, 78, 445, 536, 538, 539, 540, 696, 699], "thefunct": [77, 78, 551, 553, 561, 565, 566, 570], "27632612": [77, 78, 551, 553, 555], "934008": [77, 78, 551, 553, 555], "99999928": [77, 78, 551, 553, 555], "91903949": [77, 78, 551, 553, 555], "59814835": [77, 78, 556, 558, 560], "148": [77, 78, 556, 558, 560, 1164, 1172, 1250], "4131622": [77, 78, 556, 558, 560], "403": [77, 78, 556, 558], "428772": [77, 78, 556, 558], "649": [77, 78, 561, 563], "220": [77, 78, 561, 563], "959": [77, 78, 445, 561, 563, 721, 723, 724, 725], "865": [77, 78, 561, 563], "metho": [77, 78, 581, 583, 631, 633], "999999999999": [77, 78, 445, 586, 588, 589, 590], "7j": [77, 78, 79, 445, 601, 603, 604, 849, 851, 852, 933, 937, 958, 1312, 1314, 1315], "0j": [77, 78, 79, 445, 601, 603, 604, 605, 849, 851, 852, 853, 933, 937, 958, 1312, 1314, 1315, 1316], "898": [77, 78, 445, 621, 623, 624, 625], "0414": [77, 78, 445, 621, 623, 624, 625], "956": [77, 78, 626, 628], "nuner": [77, 78, 671, 673], "65": [77, 78, 82, 83, 96, 97, 445, 511, 514, 671, 673, 881, 884, 1131, 1136, 1414, 1505, 1508, 1609, 1611, 1613, 1614, 1711, 1784, 1787, 1989, 1991, 1994, 1996, 2068, 2079, 2082], "2860": [77, 78, 696, 698, 700], "413": [77, 78, 120, 696, 698], "recirpoc": [77, 78, 701, 703, 705], "300": [77, 78, 80, 81, 128, 445, 711, 713, 714, 715, 906, 1131, 1138, 1414, 1478, 1480, 1481, 1482, 1549, 1552, 1711, 1753, 1756], "527": [77, 78, 445, 711, 713, 714, 715], "301": [77, 78, 445, 711, 713, 714, 715], "757": [77, 78, 445, 721, 723, 724, 725], "279": [77, 78, 445, 721, 723, 724, 725, 881, 884, 1131, 1136, 1414, 1433, 1436], "835": [77, 78, 726, 728, 730], "347": [77, 78, 120, 726, 728, 730], "721": [77, 78, 726, 728, 730], "93": [77, 78, 80, 81, 96, 97, 410, 422, 731, 733, 735, 1414, 1448, 1451, 1453, 1456, 1457, 1989, 1991, 1994, 1996], "static_ab": [77, 78, 446], "static_aco": [77, 78, 451], "static_acosh": [77, 78, 456], "static_add": [77, 78, 114, 118, 119, 461], "static_asin": [77, 78, 466], "412": [77, 78, 86, 87, 445, 466, 469, 470, 1691, 1695], "201": [77, 78, 79, 445, 466, 469, 470, 881, 883, 885], "static_asinh": [77, 78, 471], "static_atan": [77, 78, 476], "static_atan2": [77, 78, 481], "static_atanh": [77, 78, 486], "static_bitwise_and": [77, 78, 491], "static_bitwise_invert": [77, 78, 496], "static_bitwise_left_shift": [77, 78, 501], "static_bitwise_or": [77, 78, 506], "static_bitwise_right_shift": [77, 78, 511], "static_bitwise_xor": [77, 78, 516], "static_ceil": [77, 78, 521], "static_co": [77, 78, 526], "static_cosh": [77, 78, 531], "static_deg2rad": [77, 78, 536], "static_divid": [77, 78, 541, 761, 762], "static_equ": [77, 78, 546], "static_erf": [77, 78, 551], "static_exp": [77, 78, 556], "static_expm1": [77, 78, 561], "areal": [77, 78, 561, 565], "71828175": [77, 78, 561, 565], "38905621": [77, 78, 561, 565], "59815216": [77, 78, 561, 565], "static_floor": [77, 78, 566], "static_floor_divid": [77, 78, 571], "static_great": [77, 78, 576], "static_greater_equ": [77, 78, 581], "static_isfinit": [77, 78, 586], "static_isinf": [77, 78, 591], "static_isnan": [77, 78, 596], "static_isr": [77, 78, 601], "23j": [77, 78, 79, 601, 605, 849, 853, 1312, 1316], "9j": [77, 78, 79, 601, 605, 849, 853, 1312, 1316], "static_less": [77, 78, 606], "static_less_equ": [77, 78, 611], "static_log": [77, 78, 616], "static_log10": [77, 78, 621], "static_log1p": [77, 78, 626], "static_log2": [77, 78, 631], "static_logaddexp": [77, 78, 636], "static_logical_and": [77, 78, 641], "static_logical_not": [77, 78, 646], "static_logical_or": [77, 78, 651], "static_logical_xor": [77, 78, 656], "static_maximum": [77, 78, 661], "static_minimum": [77, 78, 666], "static_multipli": [77, 78, 671], "static_neg": [77, 78, 676], "static_not_equ": [77, 78, 681], "static_posit": [77, 78, 686], "static_pow": [77, 78, 691], "static_rad2deg": [77, 78, 696], "5160": [77, 78, 696, 700], "10300": [77, 78, 445, 696, 699, 700], "15500": [77, 78, 696, 700], "20600": [77, 78, 696, 700], "static_reciproc": [77, 78, 701], "static_remaind": [77, 78, 706], "static_round": [77, 78, 711], "thevfunct": [77, 78, 711, 715], "static_sign": [77, 78, 716], "static_sin": [77, 78, 721], "static_sinh": [77, 78, 726], "static_sqrt": [77, 78, 731], "static_squar": [77, 78, 736], "static_subtract": [77, 78, 741], "static_tan": [77, 78, 114, 118, 746], "static_tanh": [77, 78, 751], "995": [77, 78, 445, 751, 752, 754, 755], "9999": [77, 78, 751, 752], "static_trapz": [77, 78], "static_trunc": [77, 78, 756], "static_trunc_divid": [77, 78, 761], "contan": [79, 1178, 1180, 1182], "19722462": [79, 1178, 1180, 1182], "84729779": [79, 1178, 1180, 1182], "static_logit": [79, 1178], "static_prelu": [79, 1296], "static_relu6": [79, 1317], "static_thresholded_relu": [79, 1362], "hamming_window": [79, 870, 1049], "coeffici": [79, 870, 872, 1046, 1047, 1048, 1049, 1711, 1804, 1807], "ham": [79, 870, 872, 1046, 1047, 1048, 1049], "8000": [79, 870, 872, 1046, 1047, 1048, 1049], "2000": [79, 870, 872, 1046, 1047, 1048, 1049], "4180": [79, 1046, 1047, 1049], "8180": [79, 1046, 1047, 1049], "hann_window": [79, 870, 1053], "hann": [79, 870, 873, 1050, 1051, 1052, 1053], "7500": [79, 1050, 1051, 1053], "3455": [79, 1050, 1051, 1053], "9045": [79, 1050, 1051, 1053], "kaiser_bessel_derived_window": [79, 870, 1116], "spectral": [79, 870, 874, 875, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120], "analysi": [79, 870, 874, 875, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 2134, 2135], "kaiser": [79, 870, 874, 875, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120], "70710677": [79, 870, 874, 1113, 1114, 1115, 1116, 1126, 1128, 1130, 1185, 1187], "18493208": [79, 870, 874, 1113, 1114, 1115, 1116], "9827513": [79, 870, 874, 1113, 1114, 1115, 1116], "kaiser_window": [79, 870, 1120], "static_kaiser_window": [79, 1117, 1118], "2049": [79, 1117, 1118, 1120], "8712": [79, 1117, 1118, 1120], "0367": [79, 870, 875, 1117, 1118, 1119, 1120], "7753": [79, 1117, 1118, 1120], "static_eye_lik": [79, 979], "static_hamming_window": [79, 1046], "static_hann_window": [79, 1050], "window_length": [79, 870, 872, 874, 875, 878, 1046, 1048, 1050, 1053, 1113, 1115, 1117, 1119, 1120, 1389, 1392], "static_hann": [79, 1050, 1053], "static_kaiser_bessel_derived_window": [79, 1113], "static_tril_indic": [79, 1375], "static_triu_indic": [79, 1379], "static_vorbis_window": [79, 1389], "vorbis_window": [79, 870, 1390], "vorbi": [79, 870, 878, 1389, 1390, 1391, 1392], "38268343": [79, 1389, 1390, 1391], "92387953": [79, 1389, 1390, 1391], "14943586": [79, 870, 878, 1389, 1390, 1391, 1392], "51644717": [79, 1389, 1390, 1391], "85631905": [79, 1389, 1390, 1391], "98877142": [79, 1389, 1390, 1391], "tril_indic": [79, 870], "triu_indic": [79, 870], "0003": [79, 779, 781, 783, 1711, 1753, 1756, 2230, 2234, 2238, 2239, 2260, 2261, 2263], "0006": [79, 779, 781, 783, 1408, 1409, 1411], "75j": [79, 784, 786, 788, 1084, 1086, 1088], "01317055": [79, 784, 786, 788], "05634501": [79, 784, 786, 788], "115": [79, 445, 536, 539, 696, 699, 784, 786, 788, 881, 884, 1131, 1136], "3461759": [79, 784, 786, 788], "524111": [79, 784, 786, 788], "335": [79, 849, 851, 1312, 1314], "345j": [79, 849, 851, 1312, 1314], "2345j": [79, 849, 851], "coord": [79, 1039, 1041], "6055": [79, 1069, 1071, 1073], "1080": [79, 1149, 1151, 1153], "1550": [79, 1149, 1151, 1153], "130": [79, 1149, 1151, 1153], "160": [79, 1154, 1156, 1158], "10240": [79, 1154, 1156, 1158], "08746284": [79, 1173, 1175, 1177], "32192809": [79, 1173, 1175, 1177], "000": [79, 1251, 1253, 2230, 2239], "took": [79, 1312, 1314], "0707": [79, 933, 960, 1334, 1336, 1337], "0579": [79, 933, 960, 1334, 1336, 1337], "static_allclos": [79, 779], "static_angl": [79, 784], "static_binar": [79, 829], "static_conj": [79, 849], "static_copysign": [79, 855], "static_count_nonzero": [79, 865], "static_diff": [79, 896], "static_exp2": [79, 969], "static_fix": [79, 989], "static_float_pow": [79, 1009], "static_fmax": [79, 1014], "static_fmin": [79, 1019], "static_fmod": [79, 1024], "static_gcd": [79, 1032], "static_gradi": [79, 1039], "static_hypot": [79, 1069], "static_imag": [79, 1084], "static_isclos": [79, 1103], "static_lcm": [79, 1149], "static_ldexp": [79, 1154], "static_logaddexp2": [79, 1173], "static_nan_to_num": [79, 1251], "static_nansum": [79, 1266], "static_nextaft": [79, 1276], "static_r": [79, 1312], "static_signbit": [79, 1329], "static_sinc": [79, 1334], "636": [79, 1334, 1338], "090": [79, 1334, 1338], "070": [79, 1334, 1338], "057": [79, 1334, 1338], "static_xlogi": [79, 1403], "static_zeta": [79, 1408], "0244": [79, 1408, 1409, 1411], "static_isin": [79, 1108], "673": [79, 881, 883, 885], "0507": [79, 881, 883, 885], "static_avg_pool1d": [79, 804], "static_avg_pool2d": [79, 809], "static_avg_pool3d": [79, 814], "static_dct": [79, 881], "132": [79, 881, 885], "182": [79, 881, 885], "242": [79, 881, 885], "253": [79, 445, 726, 729, 881, 885], "515": [79, 881, 885, 1978, 1989, 1992], "467": [79, 881, 885], "static_dft": [79, 887], "static_embed": [79, 964], "static_fft": [79, 984], "static_ifft": [79, 1079], "static_interpol": [79, 1095], "static_max_pool1d": [79, 1219], "static_max_pool2d": [79, 1224], "max_pool2dd": [79, 1224, 1228], "static_max_pool3d": [79, 1229], "eigenvealu": [79, 918, 920, 922], "xx": [79, 918, 920, 922, 928, 930, 932], "37228107": [79, 918, 920, 922], "3722816": [79, 918, 920, 922], "8245648": [79, 918, 920, 922], "41597357": [79, 918, 920, 922], "56576747": [79, 918, 920, 922], "9093767": [79, 918, 920, 922], "56155": [79, 923, 925, 926, 927, 1164, 1168], "82842": [79, 923, 925, 926, 927, 1164, 1168], "450": [79, 1121, 1123, 1125], "static_adjoint": [79, 774], "static_diagflat": [79, 891], "static_eig": [79, 918], "static_eigh_tridiagon": [79, 923], "static_eigv": [79, 928], "static_kron": [79, 1121], "kroneck": [79, 1121, 1124, 1125, 1164, 1170], "static_matrix_exp": [79, 1214], "binary_cross_entropy_with_logit": [79, 115, 837, 1183], "pos_weight": [79, 834, 835, 836, 837, 1183, 1184], "027": [79, 834, 835, 836, 837, 1183, 1184], "263": [79, 834, 835, 836, 837, 1183, 1184, 1414, 1438, 1441], "953": [79, 834, 835, 836, 837, 1183, 1184], "static_binary_cross_entropy_with_logit": [79, 834], "atleast": [79, 789, 791, 792, 793, 794, 796, 797, 798, 799, 801, 803, 1190, 1191, 1192], "1d": [79, 789, 791, 792, 793, 881, 884, 906, 907, 1131, 1136, 1138, 1139, 1190, 1191, 1210, 1357, 1361, 2161, 2162, 2163], "ary1": [79, 789, 791, 792, 794, 796, 797, 799, 801, 802, 1190, 1191, 1192, 1193], "ary2": [79, 789, 791, 792, 794, 796, 797, 799, 801, 802, 1190, 1191, 1192, 1193], "2d": [79, 126, 794, 796, 797, 798, 870, 871, 906, 979, 982, 1131, 1138, 1190, 1192, 2161, 2164, 2165, 2168], "3d": [79, 148, 799, 801, 803, 906, 1131, 1138, 2161, 2166, 2167], "broadcast_shap": [79, 847, 1190, 2230], "30192195": [79, 1074, 1076, 1078], "static_atleast_1d": [79, 789], "static_atleast_2d": [79, 794], "static_atleast_3d": [79, 799], "static_broadcast_shap": [79, 844], "static_dsplit": [79, 908], "static_dstack": [79, 913], "static_expand": [79, 974], "static_flatten": [79, 994], "static_fliplr": [79, 999], "static_flipud": [79, 1004], "static_heavisid": [79, 1054], "static_hsplit": [79, 1059], "static_hstack": [79, 1064], "static_i0": [79, 1074], "static_moveaxi": [79, 1234, 1238, 1240, 1256, 1260], "static_pad": [79, 1285], "static_rot90": [79, 1322], "static_take_along_axi": [79, 1357], "static_top_k": [79, 1367], "static_vsplit": [79, 1393], "static_vstack": [79, 1398], "static_instance_norm": [79, 1089, 1091], "68283635": [79, 1089, 1091, 1093], "25858182": [79, 1089, 1091, 1093], "14645457": [79, 1089, 1091, 1093], "20709086": [79, 1089, 1091, 1093], "59998751": [79, 1089, 1091, 1093], "10000312": [79, 1089, 1091, 1093], "20000625": [79, 1089, 1091, 1093], "19997501": [79, 1089, 1091, 1093], "25000787": [79, 1089, 1091, 1093], "49996877": [79, 1089, 1091, 1093], "35001087": [79, 1089, 1091, 1093], "09995651": [79, 1089, 1091, 1093], "30002821": [79, 1089, 1091, 1093], "79988766": [79, 1089, 1091, 1093], "17999999": [79, 1089, 1091, 1093], "46000001": [79, 1089, 1091, 1093], "45999998": [79, 1089, 1091, 1093], "static_l2_norm": [79, 1126, 1128], "16903085": [79, 1126, 1128, 1130, 1185, 1187], "50709254": [79, 1126, 1128, 1130, 1185, 1187], "84515423": [79, 1126, 1128, 1130, 1185, 1187], "44183609": [79, 1126, 1128, 1130, 1185, 1187], "56807494": [79, 1126, 1128, 1130, 1185, 1187], "69431382": [79, 1126, 1128, 1130, 1185, 1187], "89442718": [79, 1126, 1128, 1130, 1185, 1187], "44721359": [79, 1126, 1128, 1130, 1185, 1187], "static_lp_norm": [79, 1185, 1187], "12500000": [79, 1185, 1189], "37500000": [79, 1185, 1189], "62500000": [79, 1185, 1189], "27500000": [79, 1185, 1189], "35000000": [79, 1185, 1189], "42500000": [79, 1185, 1189], "0000000": [79, 1185, 1189], "5000000": [79, 1185, 1189], "2500000": [79, 1185, 1189], "43643127": [79, 901, 903, 905], "32325703": [79, 901, 903, 905], "24031169": [79, 901, 903, 905], "34251311": [79, 901, 903, 905], "31692529": [79, 901, 903, 905], "3405616": [79, 901, 903, 905], "5319725": [79, 901, 903, 905], "22458365": [79, 901, 903, 905], "24344385": [79, 901, 903, 905], "26588406": [79, 901, 903, 905], "61075421": [79, 901, 903, 905], "12336174": [79, 901, 903, 905], "51142915": [79, 901, 903, 905], "25041268": [79, 901, 903, 905], "23815817": [79, 901, 903, 905], "64042903": [79, 901, 903, 905], "25763214": [79, 901, 903, 905], "10193883": [79, 901, 903, 905], "31624692": [79, 901, 903, 905], "46567987": [79, 901, 903, 905], "21807321": [79, 901, 903, 905], "37677699": [79, 901, 903, 905], "39914594": [79, 901, 903, 905], "22407707": [79, 901, 903, 905], "static_bernoulli": [79, 819], "static_beta": [79, 824], "static_dirichlet": [79, 901], "static_poisson": [79, 1291], "static_lexsort": [79, 1159, 1245, 1249], "static_msort": [79, 1245], "static_bincount": [79, 838], "static_corrcoef": [79, 860], "static_median": [79, 1234], "static_nanmean": [79, 1256], "static_nanmedian": [79, 1261], "static_quantil": [79, 1301], "static_unravel_index": [79, 1383], "a0": [80, 81, 1422, 1424, 1426], "833": [80, 81, 1438, 1440], "classivi": [80, 81, 92, 93, 1466, 1468, 1470, 1868, 1914, 1917, 1934, 1937, 2031, 2037, 2041], "89858720e": [80, 81, 1466, 1468, 1470], "79717439e": [80, 81, 1466, 1468, 1470], "200": [80, 81, 135, 445, 511, 514, 906, 1131, 1138, 1414, 1478, 1480, 1481, 1482, 1549, 1551, 1552], "400": [80, 81, 115, 906, 1131, 1138, 1414, 1478, 1480, 1481, 1482, 1549, 1552, 1711, 1753, 1756], "500": [80, 81, 906, 1131, 1138, 1414, 1478, 1480, 1481, 1482], "600": [80, 81, 115, 906, 1131, 1138, 1478, 1480], "700": [80, 81, 1478, 1480], "static_all_equ": [80, 81, 1415], "static_array_equ": [80, 81, 1422], "x0": [80, 81, 118, 1414, 1422, 1425, 1426], "static_assert_supports_inplac": [80, 81, 1427], "static_clip_matrix_norm": [80, 81, 1433], "849": [80, 81, 1414, 1433, 1436, 1437, 1438, 1441, 1442], "static_clip_vector_norm": [80, 81, 1438], "static_einops_rearrang": [80, 81, 1448], "static_einops_reduc": [80, 81, 1453], "static_einops_repeat": [80, 81, 1458], "static_fourier_encod": [80, 81, 1466], "static_gath": [80, 81, 1473], "static_gather_nd": [80, 81, 1478], "static_get_num_dim": [80, 81, 1490], "static_has_nan": [80, 81, 1499], "leafwis": [80, 81, 1499, 1503], "static_inplace_decr": [80, 81, 1505], "static_inplace_incr": [80, 81, 1510], "static_inplace_upd": [80, 81, 1515], "static_is_arrai": [80, 81, 1521], "static_is_ivy_arrai": [80, 81, 1526], "static_is_native_arrai": [80, 81, 1534], "static_scatter_flat": [80, 81, 1544], "ref": [80, 81, 88, 89, 119, 445, 606, 609, 671, 674, 681, 684, 706, 709, 741, 745, 1544, 1548, 1549, 1553, 1774, 1778, 1868, 1924, 1927], "static_scatter_nd": [80, 81, 1549], "static_stable_divid": [80, 81, 1565], "22222222": [80, 81, 1565, 1569], "11111111": [80, 81, 1565, 1569], "857": [80, 81, 1414, 1565, 1568, 1569], "444": [80, 81, 1565, 1569], "static_stable_pow": [80, 81, 1570], "static_supports_inplace_upd": [80, 81, 1575], "static_to_list": [80, 81, 1581], "static_to_numpi": [80, 81, 1586], "static_to_scalar": [80, 81, 1591], "static_value_is_nan": [80, 81, 1603], "452": [80, 81, 1603, 1604], "425": [80, 81, 1603, 1606], "87": [82, 83, 445, 511, 514, 626, 629, 1609, 1611, 1613, 1614], "976": [82, 83, 445, 751, 755, 1609, 1611, 1613, 1614], "49e": [82, 83, 1609, 1611, 1613, 1614], "74e": [82, 83, 1609, 1611, 1613, 1614], "95e": [82, 83, 1609, 1611, 1613, 1614], "024": [82, 83, 834, 836, 1183, 1184, 1609, 1611, 1613, 1614], "096": [82, 83, 445, 536, 539, 1609, 1611, 1613, 1614], "216": [82, 83, 88, 89, 1609, 1611, 1613, 1614, 1832, 1833, 1835], "384": [82, 83, 1609, 1611, 1613, 1614], "626": [82, 83, 1609, 1611, 1613, 1614], "en": [82, 83, 115, 1609, 1611, 1614, 1615, 1618, 1711, 1847, 1851], "wikipedia": [82, 83, 1609, 1611, 1614, 1615, 1618, 1711, 1847, 1851], "wiki": [82, 83, 1609, 1611, 1614, 1615, 1618, 1711, 1847, 1851], "stochastic_gradient_desc": [82, 83, 1609, 1611, 1614, 1615, 1618], "01099": [82, 83, 1615, 1617], "01003": [82, 83, 1609, 1615, 1617, 1618], "01015": [82, 83, 1609, 1615, 1617, 1618], "99936122": [82, 83, 1609, 1615, 1617, 1618], "99936116": [82, 83, 1609, 1615, 1617, 1618], "99936128": [82, 83, 1609, 1615, 1617, 1618], "99936104": [82, 83, 1609, 1615, 1617, 1618], "w_new": [82, 83, 1609, 1621, 1623, 1624], "88": [82, 83, 96, 97, 169, 177, 180, 445, 516, 519, 1609, 1621, 1623, 1624, 1711, 1784, 1787, 1814, 1818, 1978, 1994, 1996, 1997, 2068, 2079, 2082], "708": [82, 83, 1609, 1626, 1628, 1629], "445": [82, 83, 1609, 1626, 1628, 1629], "6e": [82, 83, 1609, 1626, 1628, 1629], "00036": [82, 83, 1609, 1626, 1628, 1629], "00016": [82, 83, 1609, 1626, 1628, 1629], "00049": [82, 83, 1609, 1626, 1628, 1629], "layerwis": [82, 83, 1609, 1630, 1632, 1633], "static_stop_gradi": [82, 83, 1639], "112": [86, 87, 1654, 1656, 1658, 1711, 1784, 1787, 2068, 2079, 2082], "fdfh": [86, 87, 1669, 1671, 1673], "inp": [86, 87, 1647, 1681, 1683, 1684, 1685], "278": [86, 87, 1647, 1686, 1689, 1691, 1693, 1694, 1695], "105": [86, 87, 1647, 1686, 1689, 1691, 1693, 1694, 1695, 1711, 1784, 1787, 1852, 1853, 1856], "352": [86, 87, 1647, 1691, 1693, 1694, 1695], "195": [86, 87, 1691, 1693, 1695], "static_conv1d": [86, 87, 1649], "static_conv1d_transpos": [86, 87, 1654], "static_conv2d": [86, 87, 1659], "static_conv2d_transpos": [86, 87, 1664], "static_conv3d": [86, 87, 1669], "static_conv3d_transpos": [86, 87, 1674], "static_depthwise_conv2d": [86, 87, 1681], "static_dropout": [86, 87, 1686], "static_dropout1d": [86, 87], "static_dropout3d": [86, 87], "static_linear": [86, 87, 1691], "static_lstm_upd": [86, 87, 1696], "static_multi_head_attent": [86, 87, 1701], "static_scaled_dot_product_attent": [86, 87, 1706], "577": [88, 89, 1711, 1712, 1714, 1715, 1716], "707": [88, 89, 1711, 1712, 1714, 1715, 1716], "99999988": [88, 89, 1789, 1791], "0986123": [88, 89, 1711, 1799, 1801, 1802, 1803], "static_choleski": [88, 89, 1712], "static_rol": [88, 89, 92, 93, 114, 118, 1712, 1716, 1909], "static_cross": [88, 89, 1717], "static_det": [88, 89, 1722], "static_diag": [88, 89, 1727], "static_diagon": [88, 89, 1732], "static_eigh": [88, 89, 1738], "static_eigvalsh": [88, 89, 1743], "51572949": [88, 89, 1711, 1743, 1746, 1747], "17091519": [88, 89, 1711, 1743, 1746, 1747], "3448143": [88, 89, 1711, 1743, 1746, 1747], "88178420e": [88, 89, 1711, 1743, 1746, 1747], "35898387e": [88, 89, 1711, 1743, 1746, 1747], "46410179e": [88, 89, 1711, 1743, 1746, 1747], "static_inn": [88, 89, 1748], "static_inv": [88, 89, 1711, 1753, 1756], "static_matmul": [88, 89, 1759], "matul": [88, 89, 1759, 1763], "static_matrix_norm": [88, 89, 1764], "deimens": [88, 89, 1764, 1768], "static_matrix_pow": [88, 89, 1769], "static_matrix_rank": [88, 89, 1774], "static_matrix_transpos": [88, 89, 1779], "static_out": [88, 89, 1784], "static_pinv": [88, 89, 1789], "static_qr": [88, 89, 1794], "static_slogdet": [88, 89, 1799], "static_solv": [88, 89, 1804], "static_svd": [88, 89, 1809], "au": [88, 89, 1809, 1810, 1812], "aS": [88, 89, 1809, 1810, 1812], "avh": [88, 89, 1809, 1810, 1812], "bvh": [88, 89, 1809, 1810, 1812], "static_svdv": [88, 89, 1814], "static_tensordot": [88, 89, 1819], "static_trac": [88, 89, 1827], "static_vand": [88, 89, 1832], "343": [88, 89, 445, 711, 714, 1832, 1833, 1835], "512": [88, 89, 1647, 1654, 1657, 1832, 1833, 1835], "729": [88, 89, 136, 1832, 1833, 1835], "static_vecdot": [88, 89, 1837], "static_vector_norm": [88, 89, 1842], "77359247": [88, 89, 1842, 1843, 1845], "static_vector_to_skew_symmetric_matrix": [88, 89, 1847], "511": [90, 91, 1852, 1853, 1855, 1856, 1857, 1863, 1865, 1867], "5108256": [90, 91, 1858, 1860], "609438": [90, 91, 1711, 1799, 1802, 1858, 1860], "static_binary_cross_entropi": [90, 91, 1853], "static_cross_entropi": [90, 91, 1858], "20397282": [90, 91, 1858, 1862], "83258148": [90, 91, 1858, 1862], "60943794": [90, 91, 1858, 1862], "static_sparse_cross_entropi": [90, 91, 1863], "repreat": [92, 93, 1899, 1901], "static_clip": [92, 93, 1869], "static_concat": [92, 93, 1874], "static_constant_pad": [92, 93, 1879], "static_expand_dim": [92, 93, 1884], "container_axi": [92, 93, 1868, 1884, 1887, 1888], "static_flip": [92, 93, 1889], "static_permute_dim": [92, 93, 1894], "static_repeat": [92, 93, 1899], "static_reshap": [92, 93, 1904], "positivclip": [92, 93, 1909, 1913], "static_split": [92, 93, 1914], "static_squeez": [92, 93, 1919], "static_stack": [92, 93, 1924], "leavv": [92, 93, 1924, 1928], "static_swapax": [92, 93, 1929], "static_til": [92, 93, 1934], "static_unstack": [92, 93, 1939], "static_zero_pad": [92, 93, 1944], "342": [94, 95, 1973, 1974, 1976, 1977], "0427": [94, 95, 1973, 1974, 1976, 1977], "299": [94, 95, 1973, 1974, 1976, 1977], "241": [94, 95, 1974, 1976], "431": [96, 97, 1989, 1991], "83": [96, 97, 445, 731, 734, 881, 884, 1131, 1136, 1647, 1691, 1694, 1989, 1991], "274": [96, 97, 1989, 1991], "91": [96, 97, 445, 516, 519, 1647, 1691, 1694, 1711, 1784, 1787, 1978, 1989, 1991, 1992, 2068, 2079, 2082], "static_multinomi": [96, 97, 1979], "static_randint": [96, 97, 1984], "static_random_norm": [96, 97, 1989], "651": [96, 97, 1989, 1993], "static_random_uniform": [96, 97, 1994], "481": [96, 97, 1994, 1998], "0999": [96, 97, 1994, 1998], "static_shuffl": [96, 97, 2000], "static_argmax": [98, 99, 2006], "static_argmin": [98, 99, 2011], "static_argwher": [98, 99, 2016], "static_nonzero": [98, 99, 2021], "static_wher": [98, 99, 2026], "static_unique_al": [100, 101, 2032, 2035], "static_unique_count": [100, 101, 2037], "static_unique_invers": [100, 101, 2042], "static_unique_valu": [100, 101, 2047], "static_argsort": [102, 103, 2053], "static_searchsort": [102, 103, 2058], "static_sort": [102, 103, 2063], "cotain": [104, 105, 2091, 2093], "11000001": [104, 105, 2095, 2097, 2099], "23100001": [104, 105, 2095, 2097, 2099], "30800003": [104, 105, 2068, 2095, 2097, 2098, 2099], "static_cumprod": [104, 105, 2069], "static_cumsum": [104, 105, 2074], "static_prod": [104, 105, 2095], "static_sum": [104, 105, 2104], "static_var": [104, 105, 2109], "12666667": [104, 105, 2068, 2109, 2110, 2113], "11555555": [104, 105, 2068, 2109, 2110, 2113], "respectv": [104, 105, 2100, 2102], "81649649": [104, 105, 2100, 2102], "94280904": [104, 105, 2100, 2102], "509902": [104, 105, 2068, 2100, 2102, 2103], "2472192": [104, 105, 2100, 2102], "44948983": [104, 105, 2100, 2102], "41421354": [104, 105, 2100, 2102], "contian": [104, 105, 2109, 2112], "6666667": [104, 105, 2109, 2112], "static_al": [106, 107, 2115], "static_ani": [106, 107, 2120], "add_ivy_container_instance_method": 108, "containerexampl": [108, 109], "who": [110, 120, 131, 149, 2134, 2136], "hood": [110, 114, 118, 123, 126, 128, 130, 131, 132, 135, 137, 2141], "weed": [110, 131], "tour": 110, "primari": [110, 113, 116, 125, 126, 128, 130, 149, 870, 876, 877, 1159, 1162, 1339, 1340, 1375, 1378, 1379, 1382, 2125], "superset": [110, 126, 149], "goe": [110, 130], "dynam": [110, 116, 117, 125, 126, 132, 2134, 2138, 2312, 2322], "runtim": [110, 128, 130, 410, 411, 2134], "borrow": 110, "conjunct": 111, "establish": [111, 2136], "2020": [111, 2134], "group": [111, 114, 123, 126, 127, 1647, 1648, 1679, 1680, 1953, 1956, 2130, 2133, 2139], "intend": [111, 122, 2068, 2104, 2108, 2132, 2134, 2138, 2139, 2151, 2159, 2221], "popular": [111, 2134], "sens": [111, 118, 126, 134], "unconnect": 111, "decis": [111, 114, 116, 126, 130, 132, 134, 2134], "initialis": [111, 126, 128, 410, 411], "checkout": [111, 128], "everytim": [111, 116], "init": [111, 137, 2151, 2157, 2160], "thoroughli": 111, "ci": [111, 116, 121, 127, 128, 149], "test_linalg": [111, 127], "test_set_funct": 111, "test_signatur": 111, "excess": [111, 113, 118], "explicitli": [111, 112, 113, 114, 116, 119, 120, 123, 124, 125, 127, 128, 132, 149, 1711, 1738, 1741, 1743, 1746, 2134, 2161, 2170, 2172, 2173, 2174, 2197, 2219], "array_modul": 111, "vv": 111, "test_manipulation_funct": 111, "test_concat": [111, 128], "typic": [111, 123, 779, 782, 933, 934, 951, 1103, 1106, 2052, 2058, 2061, 2133, 2141], "nb": 111, "liber": 111, "bodi": [111, 128], "decor": [111, 112, 114, 116, 117, 123, 124, 125, 126, 127, 1414, 1432, 2230, 2233, 2249, 2252, 2253, 2254, 2276, 2281, 2282], "fortun": 111, "falsifi": [111, 128], "______________________": 111, "test_remaind": 111, "_______________________": 111, "test_operators_and_elementwise_funct": 111, "1264": 111, "st": [111, 127, 128, 2230, 2240, 2241], "1277": 111, "binary_param_assert_against_refimpl": 111, "ctx": 111, "mod": 111, "620": 111, "binary_assert_against_refimpl": 111, "324": 111, "scalar_o": 111, "assertionerror": [111, 120, 127, 128, 2249, 2252], "17304064": 111, "binaryparamcontext": 111, "temporarili": [111, 129, 2173, 2174], "reproduce_failur": [111, 128], "axic42baaowcnp": 111, "rumwmabaear0": 111, "parametr": [111, 128, 769, 771, 1296, 1299, 2134], "make_binary_param": 111, "dh": 111, "numeric_dtyp": 111, "left_strat": 111, "left_sym": 111, "right_strat": 111, "right_sym": 111, "right_is_scalar": 111, "xp": [111, 1094, 1131, 1143], "binary_param_assert_dtyp": 111, "binary_param_assert_shap": 111, "led": [111, 2136], "unexpectedli": 111, "discrep": [111, 127], "varieti": [111, 115, 116, 117, 128, 2130, 2132, 2136, 2137, 2140, 2141], "known": [111, 115, 116, 126, 128, 2151, 2154, 2156], "test_asarray_arrai": 111, "test_floor_divid": 111, "health": 111, "test_iop": 111, "__imod__": 111, "x1_i": [111, 445, 461, 464, 481, 484, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 541, 544, 546, 549, 571, 574, 576, 579, 581, 584, 606, 609, 611, 614, 636, 639, 641, 644, 651, 654, 656, 659, 671, 674, 681, 684, 691, 694, 706, 709, 741, 745], "isequ": 111, "test_matrix_norm": 111, "alter": 111, "tweak": 111, "array_api_methods_to_test": 111, "identifi": [111, 115, 128, 130, 169, 170, 176], "202": [111, 445, 531, 534], "test_trac": 111, "latter": [111, 113, 116, 119, 126], "scheme": [111, 136, 2134], "test_special_cas": 111, "__ipow__": 111, "is_integ": 111, "revisit": [111, 122], "tf": [112, 116, 117, 122, 125, 126, 128, 129, 130, 132, 137, 149, 2125, 2126, 2134], "wrapper": [112, 114, 116, 120, 124, 125, 126, 134, 2125, 2130, 2134, 2276, 2277, 2278, 2279, 2280], "_data": [112, 126, 134], "meta": [112, 129, 1950, 1951, 1952, 2134], "organiz": [112, 114, 126], "inherit": [112, 114, 120, 134, 149, 2125], "bear": [112, 114, 116, 126], "necessarili": [112, 114, 918, 921, 928, 931, 1164, 1167, 1169], "although": [112, 114, 126, 130, 1711, 1799, 1802, 2132, 2134], "underpin": [112, 114, 132], "programmat": [112, 114, 2135], "backup": [112, 114], "accident": [112, 114, 126], "readabl": [112, 114, 120, 122, 128, 129, 134, 135], "absent": [112, 114], "perk": [112, 114], "auto": [112, 114, 135], "__mul__": [112, 114, 118, 122, 130, 134], "throw": [112, 116, 120, 134, 2134], "imposs": 112, "firstli": [112, 116, 118, 119, 120, 123, 124, 125, 130, 135, 2130, 2140], "anywai": [112, 124, 126], "secondli": [112, 116], "permit": [112, 122, 126, 128, 130], "dictat": [112, 118, 122, 125, 2197, 2217, 2218, 2219], "standalon": [112, 128, 2125, 2130, 2135, 2140, 2141], "__ivy_array_function__": 112, "inspir": [112, 148], "__torch_function__": 112, "myarrai": 112, "plai": [112, 126, 128, 137, 2134, 2137], "handled_funct": 112, "notimpl": [112, 121], "four": [112, 116, 118, 122, 123, 128, 130, 135], "overridden": [112, 2177, 2181], "suppli": [112, 933, 959, 1190, 1208, 1285, 1288, 1329, 1332], "enough": [112, 115, 128, 134, 135, 136], "successfulli": [112, 121, 2173, 2174], "ivy_funct": 112, "my_ab": 112, "my_arrai": 112, "ivy_arrai": [112, 126, 1953, 1967], "Of": [112, 126, 135, 2139, 2140], "thrown": [112, 117, 120, 149, 1414, 1515, 1518], "subset": [112, 115, 119, 122, 126, 128, 132, 2134, 2249], "implicit_backend": [113, 132], "__dict__": [113, 132], "ivy_original_dict": [113, 132], "unmodifi": [113, 116, 410, 414], "get_backend": [113, 123, 2312], "opt": [113, 116, 125, 128, 129, 130], "unset_backend": [113, 2312], "unset": [113, 132, 2312, 2328], "fallback": 113, "backend_handl": [113, 132, 2126], "requires_grad": 113, "memory_format": 113, "preserve_format": 113, "weren": 113, "break": [113, 116, 121, 122, 129, 149, 2126], "Not": [113, 127, 135, 136, 149, 213, 918, 921, 928, 931, 933, 956, 1164, 1167, 1169, 1266, 1269], "vast": [113, 116, 2134], "minor": [113, 130, 149], "fn_name_v_1p12_and_abov": 113, "similarli": [113, 116, 126, 130, 134, 219, 264, 267, 870, 876, 877, 1375, 1378, 1379, 1382, 2140], "fn_name_v_1p01_to_1p1": 113, "fn_name": [113, 127, 128, 2197, 2218, 2221, 2223, 2276, 2281], "five": [114, 135], "recap": [114, 118, 136], "arbitrarili": [114, 124, 135, 2260, 2261, 2262], "multi_map": 114, "__repr__": 114, "control": [114, 116, 125, 126, 127, 130, 134, 135, 148, 870, 876, 877, 906, 907, 1131, 1138, 1139, 1375, 1378, 1379, 1382, 1711, 1727, 1730, 2125, 2134, 2140, 2149, 2150], "__getattr__": 114, "__setattr__": 114, "__contains__": 114, "__getstate__": 114, "__setstate__": 114, "unpickl": 114, "num_dim": [114, 137], "__len__": 114, "restrict": [114, 115, 126, 132, 2131], "enforc": [114, 134], "extern": [114, 122, 126, 128, 129], "flexibl": [114, 122, 129, 2134], "c1": 114, "lefthand": 114, "righthand": 114, "addition": [114, 125, 126, 2140], "counterpart": [114, 124], "behavior": [114, 115, 116, 126, 127, 128, 130, 132, 149, 445, 691, 694, 706, 709, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051, 2131], "presenc": [114, 125, 2186, 2189, 2190, 2191], "absenc": [114, 122, 2134], "implicitli": [114, 128, 132], "themselv": [114, 116, 117, 119, 123, 126, 136, 1953, 1954, 2131, 2140], "log_pr": [114, 123, 125], "intuit": [114, 128, 135, 136, 2130], "chronolog": 114, "concurr": [114, 115, 123, 2134], "had": [114, 115, 125, 132, 2134, 2135], "consum": [114, 115, 122, 127, 128, 2197, 2217, 2218, 2219], "sequenti": [114, 136], "But": [114, 115, 119, 124, 125, 137, 2249, 2256], "flow": [114, 148, 2134, 2135], "compil": [114, 126, 129, 130, 131, 133, 149, 212, 2125, 2126, 2130, 2133, 2134, 2135, 2138, 2141, 2173, 2174, 2177, 2178, 2179, 2180, 2181, 2182], "implic": 114, "whatsoev": [114, 123, 2125, 2140], "implicit": [114, 119, 126, 128, 132, 2134], "eager": [114, 149, 2134], "children": 114, "shallowest": 114, "deepest": 114, "regularli": 115, "feedback": 115, "rollback": 115, "incorpor": [115, 135, 2134], "fold": 115, "techniqu": 115, "triplet": 115, "notat": [115, 445, 481, 484, 2068, 2079, 2082], "test_torch": [115, 127], "test_tensor": [115, 127], "test_torch_instance_arctan_": 115, "7284": 115, "daili": 115, "neither": [115, 126, 130, 445, 461, 464, 1609, 1638, 1646], "nor": [115, 126, 445, 461, 464, 1609, 1638, 1646, 2138], "job": 115, "shoot": 115, "654": [115, 445, 526, 529], "impact": [115, 128, 136, 2136], "_reduce_loss": 115, "test_nn": 115, "test_loss": 115, "test_binary_cross_entropy_with_logit": 115, "test_cross_entropi": 115, "test_binary_cross_entropi": 115, "test_sparse_cross_entropi": 115, "test_loss_funct": 115, "test_torch_binary_cross_entropi": 115, "test_torch_cross_entropi": 115, "torch_binary_cross_entropi": 115, "torch_cross_entropi": 115, "underneath": [115, 2132], "achiev": [115, 116, 121, 124, 128, 135, 137, 2125], "magic": 115, "statement": [115, 121, 125, 128, 130, 149], "readthedoc": 115, "prepar": 115, "pedagog": 115, "f1": 115, "fm": 115, "encapsul": [115, 305, 360, 363], "yeah": 115, "procedur": [115, 118], "cyclic": 115, "intellig": [115, 128, 130, 2136], "tests_fil": 115, "file_nam": [115, 128, 129], "del": 115, "intersect": [115, 128, 148, 2244, 2247], "tests_lin": 115, "elif": [115, 120, 125, 126, 127], "correspondingli": 115, "tests_to_run": 115, "determine_tests_lin": 115, "mongodb": 115, "databas": [115, 128], "mechan": [115, 147, 149, 2126], "secret": 115, "db": 115, "ssh": 115, "deploi": [115, 2125, 2132, 2133, 2134, 2136, 2140], "ssh_deploy_kei": 115, "public": [115, 134, 1414, 1443, 2137], "suffic": [115, 124, 128], "massiv": 115, "constraint": [115, 116], "ex": [115, 2230, 2232, 2233, 2234, 2238, 2239, 2241, 2244, 2245, 2246, 2247, 2249, 2252, 2253, 2254, 2255, 2257, 2258, 2260, 2261, 2262, 2263, 2276, 2281, 2282], "mb": 115, "yml": 115, "felicit": 115, "clone_map": 115, "home": 115, "deploy_kei": 115, "user_email": 115, "rashul": 115, "chutani": 115, "user_nam": 115, "target_branch": 115, "github_serv": 115, "deploy_key_fil": 115, "chmod": 115, "ssh_known_hosts_fil": 115, "known_host": 115, "keyscan": 115, "export": [115, 2133, 2140], "git_ssh_command": 115, "userknownhostsfil": 115, "methodologi": 115, "master1": 115, "repeatedli": [115, 128, 1953, 1963], "restructur": 115, "index_map": 115, "test_map": 115, "routin": [115, 126, 130, 149, 2134], "aggreg": [115, 2031, 2032, 2036], "incorrect": 115, "snowbal": 115, "irrelev": [115, 116, 118], "recalibr": 115, "workflow_dispatch": 115, "schedul": [115, 149, 2134, 2141], "cron": 115, "saturdai": 115, "night": 115, "pm": 115, "fun": [115, 1414, 1608, 1953, 1965], "gut": 115, "lesser": [115, 120], "lol": 115, "cater": 115, "master2": 115, "master32": 115, "runner2": 115, "corrupt": 115, "forc": 115, "discard": 115, "stai": 115, "decoupl": [115, 136], "150": 115, "cycl": [115, 128], "rashulchutani": 115, "yellow": 115, "queu": 115, "redirect": 115, "book": 115, "ran": 115, "badg": 115, "clickabl": 115, "uint8": [116, 128, 305, 328, 331, 343, 354, 355, 386, 389, 393, 396, 402, 408, 2230, 2233, 2238], "uint16": [116, 126, 128, 132, 305, 334, 343, 357, 358, 360, 363, 386, 389, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108, 2230, 2238, 2239], "uint32": [116, 128, 132, 305, 343, 357, 358, 360, 363, 365, 408, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108, 2230, 2238, 2239], "uint64": [116, 128, 132, 305, 343, 357, 358, 365, 366, 393, 396, 399, 402, 2068, 2069, 2072, 2074, 2077, 2095, 2098, 2104, 2108, 2230, 2233, 2238], "bfloat16": [116, 126, 128, 129, 305, 354, 355, 2230, 2239], "all_dtyp": 116, "all_numeric_dtyp": 116, "all_int_dtyp": 116, "all_float_dtyp": 116, "replic": [116, 118, 126, 130], "thirdli": 116, "native_float32": 116, "importantli": [116, 134, 137, 148], "conveni": [116, 117, 122, 127, 133, 135, 136, 2125, 2140], "arguabl": [116, 117, 126], "jaxarrai": [116, 117, 122, 125, 129, 132], "jnp": [116, 117, 120, 122, 125, 129, 132, 137, 2126], "_handle_0_dim_output": [116, 125], "experiment": [116, 126, 129, 132, 767, 768, 769, 770, 771, 772, 773, 774, 777, 779, 782, 784, 787, 789, 792, 794, 797, 799, 802, 804, 807, 809, 812, 814, 817, 819, 822, 824, 827, 829, 832, 834, 836, 838, 841, 843, 844, 846, 848, 849, 852, 855, 858, 860, 863, 865, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 884, 887, 889, 891, 894, 896, 899, 901, 904, 906, 907, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 969, 972, 974, 977, 979, 982, 984, 987, 989, 992, 994, 997, 999, 1002, 1004, 1007, 1009, 1012, 1014, 1017, 1019, 1022, 1024, 1027, 1029, 1031, 1032, 1035, 1037, 1038, 1039, 1042, 1044, 1045, 1046, 1048, 1050, 1052, 1054, 1057, 1059, 1062, 1064, 1067, 1069, 1072, 1074, 1077, 1079, 1082, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1100, 1101, 1102, 1103, 1106, 1108, 1111, 1113, 1115, 1117, 1119, 1121, 1124, 1126, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1154, 1157, 1159, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1176, 1178, 1181, 1183, 1184, 1185, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1217, 1219, 1222, 1224, 1227, 1229, 1232, 1234, 1237, 1240, 1243, 1245, 1248, 1250, 1251, 1254, 1256, 1259, 1261, 1264, 1266, 1269, 1271, 1272, 1273, 1274, 1276, 1279, 1281, 1282, 1283, 1284, 1285, 1288, 1290, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1329, 1332, 1334, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1361, 1362, 1366, 1367, 1371, 1372, 1374, 1375, 1378, 1379, 1382, 1383, 1387, 1389, 1392, 1393, 1397, 1398, 1402, 1403, 1407, 1408, 1412, 2134], "subtli": [116, 125], "promote_types_frontend_nam": 116, "promote_types_of_frontend_name_input": 116, "frontend_nam": 116, "demonstr": [116, 118, 120, 134], "accuraci": 116, "upcast": 116, "instabl": [116, 2249, 2256], "underflow": [116, 1711, 1799, 1802], "nearli": [116, 122, 124, 2134], "downcast": 116, "footprint": 116, "concret": 116, "compound": 116, "settabl": [116, 117], "deleg": [116, 2141], "shape_to_tupl": 116, "with_supported_dtyp": [116, 150], "with_unsupported_dtyp": [116, 150], "unment": 116, "backend_vers": 116, "_cast_for_unary_op": 116, "target_typ": 116, "discov": 116, "unsupported_dtyp": 116, "former": [116, 119, 126], "uint": [116, 127, 305, 343, 386, 389, 402, 408], "lack": [116, 120, 125, 2134, 2141], "patch": [116, 2134], "subtl": [116, 129, 2140], "offici": [116, 132], "inconsist": [116, 120], "unexpect": [116, 305, 392], "84530": 116, "unwarr": 116, "risk": [116, 2140], "needlessli": 116, "bloat": 116, "undergo": [116, 149], "supported_dtyp": [116, 126], "unsupported_devic": 116, "supported_devic": 116, "slight": [116, 128, 136], "downsid": 116, "coverag": [116, 128, 2149, 2150], "inflat": 116, "idx": [117, 134, 1414, 1420], "tpu": [117, 410, 411, 414, 433, 442, 2134, 2137], "aliv": [117, 410, 425, 429, 431, 1414, 1483, 1542, 1543], "outsid": [117, 121, 123, 134, 1868, 1869, 1872, 1924, 1927, 2139], "dual": 117, "categor": [117, 123, 126], "far": [117, 118, 133, 1953, 1954, 1965, 2139, 2140], "eight": [118, 131], "func_nam": [118, 119, 123, 126], "static_func_nam": 118, "op_nam": 118, "__r": 118, "combinatori": 118, "variat": [118, 126, 128], "unus": [118, 121, 125], "okai": [118, 130, 132], "showcas": [118, 148], "meant": 118, "spec": [118, 119], "my_func": [118, 129], "some_flag": 118, "another_flag": 118, "jointli": 118, "5574077": 118, "1850398": 118, "5463025": 118, "8422884": 118, "91601413": 118, "9647598": 118, "3738229": 118, "1597457": 118, "0963247": 118, "9955841": 118, "3278579": 118, "multi": [118, 131, 149, 1647, 1701, 1704, 1711, 1717, 1720, 2126, 2130, 2132, 2134, 2138, 2161, 2172], "pars": [118, 149], "asid": [118, 148], "increasingli": 118, "14254655": 118, "1578213": 118, "380515": 118, "trivial": 118, "exlud": 118, "failing_fn_nam": 118, "onlin": [118, 119], "minutest": 118, "suffici": [118, 126, 128], "segment": 118, "fault": [118, 2134], "contrast": [119, 122, 126, 2140], "instanti": 119, "templat": [119, 128, 2126], "array_api": 119, "preview": 119, "render": 119, "incorrectli": 119, "domain": [119, 445, 451, 454, 456, 459, 466, 469, 471, 474, 476, 479, 481, 484, 526, 529, 531, 534, 556, 559, 561, 564, 616, 619, 621, 624, 631, 634, 721, 724, 726, 729, 731, 734, 746, 750, 751, 755, 933, 960, 1334, 1337, 2132, 2134], "codomain": [119, 445, 451, 454, 456, 459, 466, 469, 471, 474, 476, 479, 481, 484, 526, 529, 531, 534, 556, 559, 561, 564, 616, 619, 621, 624, 631, 634, 721, 724, 726, 729, 731, 734, 746, 750, 751, 755, 933, 960, 1334, 1337], "needless": [119, 127], "info": [119, 2126], "renam": [119, 126], "judgment": 119, "beyond": [119, 126, 1868, 1909, 1912, 2140], "pure": [119, 122, 126, 130, 134, 137, 149, 2134, 2140, 2141], "operator_nam": 119, "succinct": 119, "contstructor": 119, "_forward": [119, 132, 135, 136, 2126], "trainabl": [119, 133, 135, 136, 2146, 2147, 2148, 2173, 2174, 2183], "docst": 119, "ivyexcept": [120, 126, 1414, 1575, 1579, 1609, 1638, 1646], "_default": 120, "_delimit": 120, "indexerror": [120, 1609, 1644, 1868, 1884, 1887], "ivyerror": 120, "julia": [120, 2137, 2140], "118": [120, 1711, 1769, 1772], "new_fn": [120, 126], "124": [120, 1647, 1691, 1694], "new_arg": 120, "new_kwarg": 120, "186": 120, "lib": 120, "site": [120, 2135], "_src": 120, "219": 120, "_reduce_al": 120, "_ensure_optional_ax": 120, "213": [120, 128], "_reduct": 120, "lax": [120, 126, 127, 130, 137, 149], "preproc": 120, "_cast_to_bool": 120, "pos_dim": 120, "_reduction_dim": 120, "113": 120, "canon_axi": 120, "_canonicalize_axis_allow_nam": 120, "genexpr": 120, "106": 120, "maybe_named_axi": 120, "_canonicalize_axi": 120, "stdin": 120, "295": 120, "262": 120, "ivy_arg": 120, "ivy_kwarg": 120, "354": 120, "truth_value_test": 120, "121": 120, "__name__": [120, 1414, 1596], "bound": [120, 128, 132, 2140, 2230, 2241], "switch": [120, 2141], "visibl": 120, "unwieldi": 120, "awar": 120, "recov": [120, 126], "squash": 120, "hid": 120, "cleaner": [120, 135], "caught": 120, "functool": [120, 126, 134], "attributeerror": [120, 134], "_print_traceback_histori": 120, "error_stack": 120, "axiserror": 120, "got": [120, 2126], "polici": [120, 128, 148], "moreov": 120, "check_less": [120, 2285], "allow_equ": [120, 2285, 2297, 2301], "met": 120, "flake8": 121, "handler": [121, 131, 133, 137, 2125, 2126, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329], "annot": [121, 122], "star": 121, "byte": [121, 2139, 2140], "notimplementederror": 121, "unsuccess": 121, "exceed": 121, "black": 121, "disobei": 121, "inde": [121, 122, 130, 149, 2132], "adress": 122, "dedic": [122, 134, 136, 2146, 2147, 2148], "usabl": [122, 129], "sole": [122, 129, 2133, 2134, 2135], "strictli": [122, 125], "rational": 122, "__div__": [122, 130], "dicat": 122, "pep": 122, "484": 122, "brittl": 122, "freeli": 122, "technic": [122, 125, 149, 2134, 2136], "original_typ": 122, "cumbersom": 122, "omit": [122, 125, 126, 445, 711, 714, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051], "venn": 123, "diagram": [123, 2140], "light": [123, 126, 149, 2125, 2135, 2140], "array_arg": [123, 2197, 2198], "cach": [123, 128, 410, 415, 1414, 1432], "deal": [123, 126, 149], "modif": [123, 2134], "briefli": [123, 128, 135], "get_all_arrays_on_dev": 123, "nested_map": [123, 1953], "index_nest": [123, 1953], "heavili": [124, 126, 149], "facilit": 124, "integer_array_to_float": 124, "handle_cmd_line_arg": 124, "as_vari": [124, 127, 128, 2197, 2218, 2266, 2267, 2268, 2269, 2270, 2272, 2273, 2274, 2275], "with_out": [124, 127, 128, 2197, 2218, 2266, 2267, 2269, 2272, 2274], "instance_method": [124, 128, 2197, 2218, 2266, 2269, 2274], "test_gradi": [124, 2197, 2219, 2266, 2269, 2274, 2276, 2279, 2280], "topic": [124, 134, 2134], "program": [125, 2131, 2132, 2134, 2137, 2138, 2141], "ration": [125, 130], "speak": 125, "x_nativ": 125, "val_n": 125, "_is_vari": 125, "unspecifi": [125, 445, 691, 694, 706, 709, 1711, 1737, 1738, 1741, 1868, 1924, 1927], "predominantli": [125, 129, 148], "support_native_out": [125, 132], "math": [125, 126, 127, 137, 2126, 2132], "_wrap_fn": 125, "dim0": 125, "dim1": 125, "res_floor": 125, "mul": [125, 134], "extent": [125, 126], "maxim": [125, 130, 132, 2131, 2132, 2136, 2137, 2138], "third": [125, 149, 913, 916, 1190, 1196, 1711, 1809, 1813, 2031, 2032, 2036, 2133, 2134, 2140], "leverag": [125, 2132, 2134], "capabl": [125, 128, 130], "input_arrai": 125, "tf_frontend": 126, "fn_tree": [126, 127, 128, 2197, 2216, 2221, 2223, 2276, 2278, 2280], "wrong": [126, 130], "carefulli": [126, 2132, 2137, 2151, 2155], "torch_frontend": [126, 127], "numpy_frontend": 126, "jax_frontend": 126, "to_ivy_arrays_and_back": [126, 127, 150], "fidel": 126, "acceler": [126, 2126, 2132, 2136, 2137, 2138, 2139], "algebra": [126, 2132, 2133, 2134, 2137, 2141], "xla": [126, 149, 2125, 2134], "decompos": 126, "dynamic": 126, "mimic": 126, "arithmetic_oper": 126, "handle_numpy_out": 126, "handle_numpy_dtyp": 126, "handle_numpy_cast": 126, "from_zero_dim_arrays_to_scalar": 126, "_add": 126, "same_kind": 126, "subok": [126, 127, 130], "promote_types_of_numpy_input": 126, "underscor": 126, "obtain": 126, "unhandl": 126, "subclass": [126, 130], "trigonometric_funct": 126, "_tan": 126, "check_tensorflow_cast": 126, "raw_op": [126, 127], "tackl": 126, "map_raw_ops_alia": 126, "unnecessari": [126, 130], "output_typ": 126, "kwargs_to_upd": 126, "implemnt": 126, "pointwise_op": 126, "preferred_element_typ": 126, "finer": 126, "margin": 126, "meet": 126, "criteria": 126, "reduce_logsumexp": 126, "input_tensor": 126, "logsumexp": 126, "trick": 126, "max_input_tensor": 126, "omiss": 126, "sensibl": 126, "deem": 126, "reserv": 126, "resum": 126, "possibli": [126, 128, 149, 1414, 1581, 1584], "straight": [126, 128, 134, 2126], "ahead": [126, 2134], "heavi": [126, 127, 130, 2135, 2249, 2256], "logicaland": 126, "truth": [126, 128, 445, 546, 549, 576, 579, 581, 584, 606, 609, 611, 614, 681, 684, 2186, 2187, 2193, 2197, 2217, 2218, 2219], "np_frontend": 126, "_ivy_arrai": 126, "radd": 126, "_init_data": 126, "isinst": [126, 128, 129, 136, 137], "_process_str_data": 126, "check_equ": [126, 2285], "_dtype": [126, 127, 134], "_shape": [126, 134], "govern": 126, "promote_types_of_": 126, "_input": 126, "promote_types_of_torch_input": [126, 127], "saniti": 126, "func_wrapp": [126, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "handle_numpy_casting_speci": 126, "check_elem_in_list": [126, 2285], "equiv": 126, "unsaf": 126, "array_type_test": 126, "_isfinit": 126, "organis": 126, "watch": 126, "youtub": 126, "seri": [126, 128, 2134, 2136], "jump": 127, "knowledg": 127, "handle_frontend_test": [127, 128, 2276], "handle_frontend_method": [127, 128, 2276], "test_frontend_funct": [127, 2197], "lift": [127, 2135], "get_dtyp": [127, 128, 2230, 2233, 2235, 2238, 2239, 2244, 2245], "dtype_and_valu": [127, 128, 2230], "get_shap": [127, 128, 2249], "np_frontend_help": 127, "nn": [127, 130, 137, 219, 264, 267, 2126, 2135], "test_jax": 127, "test_jax_lax_oper": 127, "dtype_and_x": [127, 128], "available_dtyp": [127, 128, 2230, 2235, 2238, 2239, 2244, 2245, 2246], "test_with_out": [127, 2276, 2278, 2280], "test_jax_lax_tan": 127, "on_devic": [127, 2197, 2216, 2218], "test_flag": [127, 128, 2197, 2202, 2203, 2212, 2216, 2218], "input_dtyp": [127, 128, 2186, 2190, 2191, 2197, 2202, 2203, 2212, 2216, 2218], "num_positional_arg": [127, 128, 2197, 2214, 2218, 2266, 2267, 2268, 2269, 2270, 2272, 2273, 2274, 2275, 2276], "test_numpi": 127, "test_mathematical_funct": 127, "test_np_trigonometric_funct": 127, "dtypes_values_cast": 127, "dtypes_values_casting_dtyp": 127, "arr_func": 127, "get_dtypes_kind": 127, "number_positional_arg": [127, 2276, 2278, 2280], "get_num_positional_args_ufunc": 127, "test_numpy_tan": 127, "handle_where_and_array_bool": 127, "test_tensorflow": 127, "test_math": 127, "test_tensorflow_tan": 127, "test_pointwise_op": 127, "test_torch_tan": 127, "as_variable_flag": [127, 2197, 2218, 2276, 2278, 2280], "native_array_flag": [127, 2197, 2218, 2276, 2278, 2280], "_fill_valu": 127, "min_valu": [127, 128, 2230, 2232, 2234, 2238, 2239, 2240, 2241, 2244, 2245, 2249, 2250, 2260, 2261, 2262, 2263], "max_valu": [127, 128, 2230, 2232, 2234, 2238, 2239, 2240, 2241, 2244, 2245, 2249, 2250, 2260, 2261, 2262, 2263], "allow_non": [127, 128, 2230, 2235, 2249, 2252, 2255], "min_num_dim": [127, 128, 2230, 2233, 2235, 2238, 2239, 2249, 2255], "max_num_dim": [127, 128, 2230, 2233, 2235, 2238, 2239, 2249, 2255], "min_dim_s": [127, 128, 2230, 2233, 2235, 2238, 2239, 2249, 2255], "max_dim_s": [127, 2230, 2233, 2235, 2238, 2239, 2249, 2255], "test_jax_lax_ful": 127, "test_from_shape_or_valu": 127, "_input_fill_and_dtyp": 127, "dtype_and_input": 127, "dtype_to_cast": 127, "input_fill_dtyp": 127, "test_numpy_ful": 127, "test_tf_funct": 127, "test_tensorflow_fil": 127, "test_creation_op": 127, "test_torch_ful": 127, "test_valu": [127, 128, 2197, 2216, 2217, 2218, 2219], "add_nois": 127, "inter": [127, 2126], "all_clos": 127, "_get_dtype_and_matrix": 127, "test_torch_qr": 127, "frontend_ret": 127, "frontend_q": 127, "frontend_r": 127, "assert_all_clos": [127, 2186], "ret_np": [127, 2186, 2187, 2197, 2216], "ret_from_gt_np": [127, 2186, 2187], "ground_truth_backend": [127, 2186, 2187, 2193, 2197, 2212, 2218, 2219, 2221, 2225, 2276, 2279, 2280], "walkthrough": 127, "comparison_op": 127, "test_comparison_op": 127, "num_arrai": [127, 128, 2230, 2238, 2239, 2244, 2245], "allow_inf": [127, 128, 2230, 2233, 2234, 2238, 2239, 2260, 2261], "shared_dtyp": [127, 2230, 2238, 2239, 2244, 2245], "test_torch_great": 127, "all_alias": [127, 2197, 2216], "class_tre": [127, 2276, 2277], "init_tre": [127, 2276, 2277], "method_nam": [127, 2197, 2219, 2264, 2265, 2276, 2277], "test_frontend_method": [127, 2197], "test_ndarrai": 127, "test_numpy_instance_add__": 127, "frontend_method_data": [127, 2197, 2217], "init_flag": [127, 128, 2197, 2217, 2219], "method_flag": [127, 128, 2197, 2217, 2219, 2266], "init_input_dtyp": [127, 2197, 2217, 2219], "init_all_as_kwargs_np": [127, 2197, 2217, 2219], "method_input_dtyp": [127, 2197, 2217, 2219], "method_all_as_kwargs_np": [127, 2197, 2217, 2219], "test_tensorflow_instance_add": 127, "eagertensor": [127, 2312, 2328], "method_tre": [127, 128, 2276, 2279], "1e04": 127, "allow_infin": 127, "test_torch_instance_add": 127, "atol_": [127, 2197, 2212, 2217, 2218, 2219], "_arrays_idx_n_dtyp": 127, "test_manipul": [127, 128], "surprisingli": 127, "cat": [127, 130, 132, 137], "closest_relevant_group": 127, "strive": [127, 128, 130, 149, 2136], "exhaust": [128, 2131, 2140], "fixtur": 128, "hit": [128, 132], "eleg": [128, 2134], "unexplor": 128, "upload": 128, "artifact": 128, "impli": [128, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051], "bespok": 128, "_array_or_typ": 128, "test_default_int_dtyp": 128, "clariti": [128, 130, 2134], "print_hypothesis_exampl": 128, "searchstrategi": [128, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2238, 2239, 2241, 2244, 2245, 2246, 2247, 2249, 2251, 2252, 2253, 2254, 2255, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2266, 2272, 2273, 2274, 2275, 2276, 2281, 2282, 2283], "custom_strategi": 128, "sampled_from": [128, 2230, 2240, 2241], "randomis": 128, "simplist": 128, "intricaci": 128, "glanc": 128, "stratigi": 128, "one_of": 128, "datum": 128, "pipe": 128, "overload": 128, "shorthand": 128, "suppos": [128, 219, 240, 241, 1414, 1448, 1451], "scaler": [128, 2230, 2234, 2238, 2239, 2260, 2261, 2262, 2263], "array_or_scal": 128, "len_of_arrai": 128, "test_add": 128, "keywoard": 128, "gradient_test": [128, 2197], "test_gpu_is_avail": 128, "requri": 128, "handle_test": [128, 2276], "summara": 128, "pretest": 128, "slighlti": 128, "handle_method": [128, 2276], "pytet": 128, "snippet": 128, "thankfulli": 128, "captur": [128, 137, 2135], "mostli": 128, "seamlessli": 128, "encount": 128, "criterion": 128, "array_valu": [128, 2230], "valid_ax": 128, "craft": 128, "hoc": 128, "44758124e": [128, 2230, 2233, 2239], "11228": 128, "456": 128, "268": 128, "wherev": 128, "dtype_values_axi": [128, 2230], "9622": 128, "28136": 128, "6375": 128, "12720": 128, "21354": 128, "900e": 128, "955e": [128, 2230, 2238], "exclude_min": [128, 2230, 2234, 2238, 2239, 2260, 2261], "large_abs_safety_factor": [128, 2230, 2234, 2238, 2239, 2249, 2250, 2260, 2261, 2263], "safety_factor_scal": [128, 2230, 2234, 2238, 2239, 2249, 2250, 2260, 2261, 2262, 2263], "57384": 128, "25687": 128, "248": 128, "array_dtyp": [128, 2230, 2233, 2244], "min_siz": [128, 2230, 2241, 2249, 2252, 2276, 2277, 2278, 2279, 2280], "max_siz": [128, 2230, 2241, 2249, 2252, 2276, 2277, 2278, 2279, 2280], "array_bool": [128, 2230], "na": 128, "test_devic": 128, "array_shap": 128, "common_shap": 128, "test_lay": 128, "size_bound": [128, 2230, 2241], "reshape_shap": [128, 2249], "stand": 128, "fashion": [128, 2249, 2252], "some_sequ": 128, "allow_nan": [128, 2230, 2234, 2238, 2239, 2260, 2261], "allow_subnorm": [128, 2230, 2234, 2260, 2261], "get_bound": [128, 2249], "arrays_valu": 128, "36418": 128, "21716926": 128, "none_or_list_of_float": 128, "get_prob": 128, "get_mean_std": [128, 2249], "103515625e": 128, "099609375": 128, "probabilist": 128, "get_axi": [128, 2249], "number_positional_argu": 128, "unreproduc": 128, "report": 128, "ivy_np": [128, 2312, 2320], "valid_float_dtyp": 128, "test_demo": 128, "failing_test": 128, "traceback": 128, "shrink": 128, "prescrib": 128, "closest": [128, 130, 305, 334, 445, 521, 524, 566, 569, 571, 574, 711, 714, 756, 760], "scratch": 128, "therebi": 128, "test_gelu": 128, "test_fil": 128, "brief": 128, "phase": [128, 149, 2134], "notabl": [128, 2134], "verbos": [128, 132, 2126, 2336], "newer": 128, "max_exampl": 128, "deadlin": 128, "weird": 128, "systemat": 128, "safeguard": 128, "inabl": 128, "test_result_typ": 128, "9090909090909091": 128, "judgement": 129, "some_namespac": 129, "some_backend": 129, "another_backend": 129, "refactor": 129, "ongo": 129, "op": [129, 132, 149, 2312, 2328], "cooler": 129, "something_cool": 129, "_assert_fill_value_and_dtype_are_compat": 129, "_to_devic": 129, "shouldn": 129, "focus": [129, 148, 2132, 2133, 2134, 2140, 2141], "older": 129, "grow": [129, 2126, 2134], "unbound": 129, "battl": 129, "face": [130, 132, 2134, 2140], "answer": [130, 134, 149], "contradict": 130, "entail": 130, "sacrif": 130, "dimems": 130, "jacfwd": 130, "jacrev": 130, "banner": 130, "ravel": 130, "pointwis": 130, "fuse": 130, "tensorrt": 130, "highli": [130, 2134], "expens": 130, "incredibli": [130, 135, 149, 2137], "six": 130, "price": 130, "pai": 130, "intrus": 130, "x_beta": 130, "equip": 130, "deliber": [130, 445, 711, 714], "priorit": 130, "simplif": 130, "allevi": 130, "ineffici": [130, 149, 2134], "fledg": [132, 133], "syntact": [132, 137], "construct": [132, 136, 137, 1868, 1934, 1938, 2132, 2134, 2141, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2170, 2171, 2172, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184], "power_seq": 132, "backend_stack": 132, "cprint": [132, 2335], "_determine_backend_from_arg": 132, "importlib": [132, 2284], "import_modul": [132, 2330], "_backend_dict": 132, "illustr": [132, 148], "un": [132, 305, 366], "unrol": [132, 135, 1647, 1696, 1699], "lstm": [132, 1647, 1696, 1699, 2134, 2161], "x_shape": 132, "input_channel": [132, 136, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2170, 2171], "x_flat": 132, "wi": 132, "wi_x": 132, "wii_x": 132, "wif_x": 132, "wig_x": 132, "wio_x": 132, "wh": 132, "ht": 132, "ct": 132, "hts_list": 132, "wii_xt": 132, "wif_xt": 132, "wig_xt": 132, "wio_xt": 132, "zip": 132, "htm1": 132, "ctm1": 132, "wh_htm1": 132, "whi_htm1": 132, "whf_htm1": 132, "whg_htm1": 132, "who_htm1": 132, "ft": 132, "ot": 132, "reliabl": 132, "sacrific": 132, "hear": 132, "virtu": [132, 2131], "pure_ivi": 132, "compile_graph": [132, 137], "pure_torch": 132, "backbon": [132, 135], "_layer": 132, "unclean": 132, "wx": 132, "temp": 132, "ivy_func": 132, "emphas": 132, "torchscript": [132, 2125, 2141], "example_input": 132, "static_argnum": 132, "static_argnam": 132, "jit": [132, 149, 2134], "primit": [133, 149, 2132, 2134], "upcom": 133, "hierarch": [133, 135, 136, 2134], "_init": 134, "_size": 134, "_devic": 134, "_dev_str": 134, "_pre_repr": 134, "_post_repr": 134, "framework_str": 134, "noinspect": 134, "pypep8nam": 134, "typeerror": 134, "immut": 134, "claim": 134, "truli": 134, "_native_wrapp": 134, "genuin": 134, "some_method": 134, "rewritten": 134, "strang": 134, "compartment": 134, "newshap": 134, "new_shap": 134, "tidi": 134, "shorter": 134, "crystal": 134, "ton": 135, "ado": [135, 136], "soup": 135, "walk": [135, 136], "cnt": 135, "combo": 135, "3333335": 135, "Or": [135, 2312, 2322], "delimit": 135, "autocomplet": 135, "midwai": 135, "agent": 135, "total_spe": 135, "total_height": 135, "total_width": 135, "ag": 135, "tot": 135, "total_": 135, "total_h": 135, "cnt0": 135, "cnt1": 135, "diff_0": 135, "diff_1": 135, "config0": 135, "config1": 135, "decod": 135, "l0": 135, "decoder__l0": 135, "decoder__l1": 135, "encoder__l0": 135, "encoder__l1": 135, "l0__b": 135, "l0__w": 135, "l1__b": 135, "l1__w": 135, "printabl": 135, "obviou": [135, 2134], "foresight": 135, "untidili": 135, "update_ag": 135, "normalize_img": 135, "img": 135, "img_max": 135, "reduce_max": [135, 2126], "img_min": 135, "reduce_min": [135, 2126], "img_rang": 135, "agent_posit": 135, "agent_veloc": 135, "agent_cam_front_rgb": 135, "agent_cam_front_depth": 135, "agent_cam_rear_rgb": 135, "agent_cam_rear_depth": 135, "agent_cam_lidar": 135, "camera": 135, "front_rgb": 135, "front_depth": 135, "rear_rgb": 135, "rear_depth": 135, "lidar": 135, "rgb": 135, "rear": 135, "veloc": 135, "cam": 135, "cam_max": 135, "cam_min": 135, "cam_rang": 135, "perman": 135, "thread": [135, 2134], "pretti": [135, 2140], "straightforward": 135, "dataload": [135, 147, 2126], "_cnt": 135, "img_": 135, "_dataset_s": 135, "_batch_siz": 135, "_count": [135, 136], "__next__": 135, "filenam": [135, 2308, 2310], "img_fnam": 135, "fname": [135, 2173, 2174], "loaded_img": 135, "cv2": 135, "imread": 135, "from_numpi": 135, "loader": [135, 149, 2308, 2310], "batch_slic": 135, "model": [135, 136, 2125, 2126, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2140, 2141], "mymodel": [135, 2126], "linear0": [135, 136, 2126], "linear1": [135, 136, 2126], "x_in": [135, 136, 137, 2126], "loss_fn": [135, 136, 137, 2126], "reduce_mean": [135, 136, 137, 2126], "0145": 135, "grad_fn": [135, 1609, 1620, 1645], "addbackward0": 135, "_create_vari": 136, "output_channel": [136, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2170, 2171], "with_bia": [136, 2161, 2171], "_input_channel": 136, "_output_channel": 136, "_w_shape": 136, "_b_shape": 136, "_with_bia": 136, "396": 136, "764": 136, "872": 136, "211": 136, "439": 136, "nightmar": 136, "overcom": 136, "fc": 136, "v0": 136, "v1": 136, "key0": 136, "linear3": 136, "v2": 136, "counter": [136, 2197, 2201], "fed": [136, 410, 435], "weight_initi": [136, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2170, 2171], "glorotuniform": [136, 2151, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2170, 2171], "bias_initi": [136, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2171], "_w_init": 136, "_b_init": 136, "create_vari": [136, 2151, 2152, 2155, 2156, 2159], "var_shap": [136, 2151, 2152, 2155, 2156, 2159], "fan_out": [136, 2151, 2152, 2154, 2155, 2156, 2159], "fan_in": [136, 2151, 2152, 2153, 2154, 2155, 2156, 2158, 2159], "fan_mod": [136, 2151, 2156, 2159], "fan_sum": [136, 2151, 2156, 2159], "misnom": 136, "saw": 136, "vanilla": [136, 1949, 1951, 2134], "compile_on_next_step": [136, 1414, 1421, 2173, 2174, 2177, 2178, 2179, 2180, 2181, 2182], "_beta1": 136, "_beta2": 136, "_epsilon": 136, "_mw": 136, "_vw": 136, "_first_pass": 136, "_should_compil": 136, "_step": [136, 2177, 2181], "new_v": 136, "_lr": 136, "_inplac": 136, "_stop_gradi": 136, "set_stat": [136, 2177, 2178, 2179, 2180, 2181, 2182], "clip_by_valu": 137, "sparse_funct": 137, "num_class": 137, "new_axi": 137, "_linear": 137, "jax_graph": 137, "to_backend": 137, "to_ivy_modul": [137, 2146], "thinli": 137, "whilst": [137, 789, 792, 794, 797, 799, 802, 1190, 1191, 1192, 1193, 2125, 2134], "to_haiku_modul": 137, "hk": 137, "loss_fn_t": 137, "without_apply_rng": 137, "rng": 137, "prngkei": 137, "update_rul": 137, "tree_multimap": 137, "robot": [147, 2126], "perfect": 148, "differenti": [148, 2134], "orient": 148, "pose": 148, "euler": [148, 213], "quaternion": 148, "ivy_mech": 148, "target_facing_rotation_matrix": 148, "polar_to_cartesian_coord": 148, "ordin": [148, 1711, 1804, 1807], "warp": 148, "optic": 148, "voxel": 148, "ivy_vis": 148, "coords_to_voxel_grid": 148, "render_pixel_coord": 148, "neural": [148, 1647, 2126, 2130, 2132, 2133, 2134, 2138, 2140, 2141, 2143, 2161], "radianc": 148, "nerf": 148, "trajectori": 148, "motion": 148, "plan": [148, 2126], "mobil": [148, 2134], "sample_spline_path": 148, "rigidmobil": 148, "sample_bodi": 148, "drone": 148, "sample_link": 148, "openai": 148, "swimmer": 148, "reward": 148, "supervis": 148, "reinforc": 148, "door": [148, 149], "cartpol": 148, "mountain_car": 148, "pendulum": 148, "reacher": 148, "learnt": 148, "ture": 148, "ntm": 148, "egospher": 148, "esm": 148, "ivy_memori": 148, "egocentr": 148, "room": 148, "doubt": 149, "grate": 149, "probe": 149, "remark": 149, "surpris": 149, "lock": 149, "gold": 149, "dex": 149, "ye": 149, "scan": 149, "tricki": [149, 2125], "predictor": 149, "tight": 149, "driver": 149, "dispatch": [149, 2134, 2137], "Will": [149, 2149, 2150, 2312, 2322], "ast": 149, "cond": [149, 214, 215, 217], "jacobian": [149, 1609, 1625, 2134], "checkpoint": 149, "autodiff": 149, "shine": 149, "merci": 149, "autograd": 149, "compet": [149, 2134], "paradigm": [149, 2134], "parallelis": 149, "spmd": 149, "mixtur": 149, "expert": 149, "sophist": 149, "depart": 149, "hundr": 149, "thousand": 149, "deepli": [149, 1953, 1955, 2134], "broadli": [149, 2140], "supplementari": 149, "reusabl": [149, 2132, 2134], "fanci": [149, 2134], "fusion": [149, 2138], "lose": 149, "pmap": 149, "overhead": [149, 2137], "eventu": 149, "supplement": 149, "backdoor": 149, "callback": 149, "record": [149, 2135], "metric": 149, "somewhat": [149, 2134], "outsourc": 149, "array_funct": [150, 151], "handle_nan": 150, "_base": [150, 156, 157, 1953, 1954, 1964, 1965], "view_ref": [150, 156, 157], "output_to_native_arrai": 150, "try_array_function_overrid": 150, "overloaded_arg": [150, 167], "with_supported_device_and_dtyp": 150, "version_dict": 150, "with_supported_devic": 150, "with_unsupported_device_and_dtyp": 150, "with_unsupported_devic": 150, "custom_object": [169, 170, 176], "nonetyp": [169, 170, 176], "xxxxxxxxxxxxxx": [169, 170, 176], "custom_fn": [169, 170, 176], "gaussian": [169, 171, 174], "24000001": [169, 177, 180], "703": [169, 182, 185], "683": [169, 182, 185], "408": [169, 182, 185], "313": [169, 182, 185], "437": [169, 182, 185], "40337825": [169, 187, 190], "56114835": [169, 187, 190], "20788449": [169, 187, 190], "214": [169, 197, 200], "891": [169, 197, 200], "846": [169, 197, 200], "985": [169, 197, 200], "0768": [169, 202, 205, 445, 536, 539], "231": [169, 202, 205], "array_method": [171, 172, 177, 178, 182, 183, 187, 188, 192, 193, 197, 198, 202, 203, 207, 208, 224, 225, 231, 232, 235, 236, 243, 244, 249, 250, 254, 255, 259, 260, 264, 265, 269, 270, 274, 275, 282, 283, 287, 289, 292, 294, 300, 302, 313, 314, 318, 319, 323, 324, 328, 329, 349, 350, 360, 361, 367, 368, 376, 377, 381, 382, 386, 387, 393, 394, 417, 418, 436, 438, 446, 447, 451, 452, 456, 457, 461, 462, 466, 467, 471, 472, 476, 477, 481, 482, 486, 487, 491, 492, 496, 497, 501, 502, 506, 507, 511, 512, 516, 517, 521, 522, 526, 527, 531, 532, 536, 537, 541, 542, 546, 547, 551, 552, 556, 557, 561, 562, 566, 567, 571, 572, 576, 577, 581, 582, 586, 587, 591, 592, 596, 597, 601, 602, 606, 607, 611, 612, 616, 617, 621, 622, 626, 627, 631, 632, 636, 637, 641, 642, 646, 647, 651, 652, 656, 657, 661, 662, 666, 667, 671, 672, 676, 677, 681, 682, 686, 687, 691, 692, 696, 697, 701, 702, 706, 707, 711, 712, 716, 717, 721, 722, 726, 727, 731, 732, 736, 737, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 774, 775, 779, 780, 784, 785, 789, 790, 794, 795, 799, 800, 804, 805, 809, 810, 814, 815, 819, 820, 824, 825, 829, 830, 838, 839, 849, 850, 855, 856, 860, 861, 865, 866, 881, 882, 891, 892, 896, 897, 901, 902, 908, 909, 913, 914, 918, 919, 923, 924, 928, 929, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 989, 990, 994, 995, 999, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1025, 1029, 1030, 1032, 1033, 1039, 1040, 1054, 1055, 1059, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1085, 1089, 1090, 1095, 1096, 1103, 1104, 1108, 1109, 1121, 1122, 1126, 1127, 1149, 1150, 1154, 1155, 1159, 1160, 1173, 1174, 1178, 1179, 1185, 1186, 1214, 1215, 1219, 1220, 1224, 1225, 1229, 1230, 1234, 1235, 1240, 1241, 1245, 1246, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1276, 1277, 1285, 1286, 1291, 1292, 1296, 1297, 1301, 1302, 1312, 1313, 1317, 1318, 1322, 1323, 1329, 1330, 1334, 1335, 1357, 1359, 1362, 1364, 1367, 1369, 1372, 1373, 1383, 1385, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1415, 1416, 1422, 1423, 1427, 1428, 1433, 1434, 1438, 1439, 1445, 1446, 1448, 1449, 1453, 1454, 1458, 1459, 1463, 1464, 1466, 1467, 1473, 1474, 1478, 1479, 1490, 1491, 1499, 1500, 1505, 1506, 1510, 1511, 1515, 1516, 1521, 1522, 1526, 1527, 1531, 1532, 1534, 1535, 1544, 1545, 1549, 1550, 1565, 1566, 1570, 1571, 1575, 1577, 1581, 1583, 1586, 1588, 1591, 1593, 1603, 1605, 1611, 1612, 1615, 1616, 1621, 1622, 1626, 1627, 1630, 1631, 1634, 1635, 1639, 1641, 1649, 1650, 1654, 1655, 1659, 1660, 1664, 1665, 1669, 1670, 1674, 1675, 1681, 1682, 1686, 1687, 1691, 1692, 1696, 1697, 1701, 1702, 1706, 1707, 1712, 1713, 1717, 1718, 1722, 1723, 1727, 1728, 1732, 1733, 1738, 1739, 1743, 1744, 1748, 1749, 1753, 1754, 1759, 1760, 1764, 1765, 1769, 1770, 1774, 1775, 1779, 1780, 1784, 1785, 1789, 1790, 1794, 1795, 1799, 1800, 1804, 1805, 1809, 1811, 1814, 1816, 1823, 1824, 1827, 1829, 1832, 1834, 1837, 1839, 1842, 1844, 1847, 1849, 1853, 1854, 1858, 1859, 1863, 1864, 1869, 1870, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1899, 1900, 1904, 1905, 1909, 1910, 1914, 1915, 1919, 1920, 1924, 1925, 1929, 1931, 1934, 1936, 1939, 1941, 1944, 1946, 1974, 1975, 1979, 1980, 1984, 1985, 1989, 1990, 1994, 1995, 2000, 2001, 2006, 2007, 2011, 2012, 2016, 2017, 2021, 2022, 2026, 2028, 2032, 2034, 2037, 2039, 2042, 2044, 2047, 2049, 2053, 2054, 2058, 2059, 2063, 2064, 2069, 2070, 2074, 2075, 2079, 2080, 2083, 2084, 2087, 2088, 2091, 2092, 2095, 2096, 2100, 2101, 2104, 2106, 2109, 2111, 2115, 2116, 2120, 2121], "container_method": [171, 173, 175, 177, 179, 181, 182, 184, 186, 187, 189, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 221, 223, 224, 227, 235, 237, 239, 240, 242, 243, 245, 247, 249, 251, 253, 254, 256, 258, 259, 261, 263, 264, 266, 268, 269, 271, 273, 274, 276, 278, 279, 281, 282, 284, 286, 287, 288, 290, 292, 293, 295, 297, 298, 300, 301, 303, 313, 315, 317, 318, 320, 322, 323, 325, 327, 328, 330, 332, 335, 337, 339, 341, 344, 345, 347, 349, 351, 353, 354, 356, 357, 359, 360, 362, 364, 367, 369, 371, 372, 373, 375, 376, 378, 380, 381, 383, 385, 386, 388, 390, 393, 395, 397, 417, 419, 421, 436, 437, 439, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 774, 776, 778, 779, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 821, 823, 824, 826, 828, 829, 831, 833, 834, 835, 837, 838, 840, 842, 844, 845, 847, 849, 851, 853, 855, 857, 859, 860, 862, 864, 865, 867, 869, 881, 883, 885, 887, 888, 890, 891, 893, 895, 896, 898, 900, 901, 903, 905, 908, 910, 912, 913, 915, 917, 918, 920, 922, 923, 925, 927, 928, 930, 932, 964, 966, 968, 969, 971, 973, 974, 976, 978, 979, 981, 983, 984, 986, 988, 989, 991, 993, 994, 996, 998, 999, 1001, 1003, 1004, 1006, 1008, 1009, 1011, 1013, 1014, 1016, 1018, 1019, 1021, 1023, 1024, 1026, 1028, 1032, 1034, 1036, 1039, 1041, 1043, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1056, 1058, 1059, 1061, 1063, 1064, 1066, 1068, 1069, 1071, 1073, 1074, 1076, 1078, 1079, 1081, 1083, 1084, 1086, 1088, 1089, 1091, 1093, 1095, 1097, 1099, 1103, 1105, 1107, 1108, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1123, 1125, 1126, 1128, 1130, 1149, 1151, 1153, 1154, 1156, 1158, 1159, 1161, 1163, 1173, 1175, 1177, 1178, 1180, 1182, 1185, 1187, 1189, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1226, 1228, 1229, 1231, 1233, 1234, 1236, 1238, 1240, 1242, 1244, 1245, 1247, 1249, 1251, 1253, 1255, 1256, 1258, 1260, 1261, 1263, 1265, 1266, 1268, 1270, 1276, 1278, 1280, 1285, 1287, 1289, 1291, 1293, 1295, 1296, 1298, 1300, 1301, 1303, 1305, 1312, 1314, 1316, 1317, 1319, 1321, 1322, 1324, 1326, 1329, 1331, 1333, 1334, 1336, 1338, 1357, 1358, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1375, 1376, 1377, 1379, 1380, 1381, 1383, 1384, 1386, 1389, 1390, 1391, 1393, 1394, 1396, 1398, 1399, 1401, 1403, 1404, 1406, 1408, 1409, 1411, 1415, 1417, 1419, 1422, 1424, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1450, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1466, 1468, 1470, 1473, 1475, 1477, 1478, 1480, 1482, 1490, 1492, 1494, 1499, 1501, 1503, 1505, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1528, 1530, 1534, 1536, 1538, 1544, 1546, 1548, 1549, 1551, 1553, 1565, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1581, 1582, 1586, 1587, 1589, 1591, 1592, 1594, 1603, 1604, 1606, 1611, 1613, 1615, 1617, 1621, 1623, 1626, 1628, 1630, 1632, 1634, 1636, 1639, 1640, 1642, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1668, 1669, 1671, 1673, 1674, 1676, 1678, 1681, 1683, 1685, 1686, 1688, 1690, 1691, 1693, 1695, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1722, 1724, 1726, 1727, 1729, 1731, 1732, 1734, 1736, 1738, 1740, 1742, 1743, 1745, 1747, 1748, 1750, 1752, 1753, 1755, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1769, 1771, 1773, 1774, 1776, 1778, 1779, 1781, 1783, 1784, 1786, 1788, 1789, 1791, 1793, 1794, 1796, 1798, 1799, 1801, 1803, 1804, 1806, 1808, 1809, 1810, 1812, 1814, 1815, 1817, 1819, 1820, 1821, 1823, 1825, 1827, 1828, 1830, 1832, 1833, 1835, 1837, 1838, 1840, 1842, 1843, 1845, 1847, 1848, 1850, 1853, 1855, 1857, 1858, 1860, 1862, 1863, 1865, 1867, 1869, 1871, 1873, 1874, 1876, 1878, 1879, 1881, 1883, 1884, 1886, 1888, 1889, 1891, 1893, 1894, 1896, 1898, 1899, 1901, 1903, 1904, 1906, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1928, 1929, 1930, 1932, 1934, 1935, 1937, 1939, 1940, 1942, 1944, 1945, 1947, 1974, 1976, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 2000, 2002, 2004, 2006, 2008, 2010, 2011, 2013, 2015, 2016, 2018, 2020, 2021, 2023, 2025, 2026, 2027, 2029, 2032, 2033, 2035, 2037, 2038, 2040, 2042, 2043, 2045, 2047, 2048, 2050, 2053, 2055, 2057, 2058, 2060, 2062, 2063, 2065, 2067, 2069, 2071, 2073, 2074, 2076, 2078, 2079, 2081, 2083, 2085, 2087, 2089, 2091, 2093, 2095, 2097, 2099, 2100, 2102, 2104, 2105, 2107, 2109, 2110, 2112, 2115, 2117, 2119, 2120, 2122, 2124], "718281828459045": 213, "newaxi": 213, "141592653589793": 213, "control_flow_op": [214, 215, 216, 217, 218], "ifels": 214, "body_fn": [214, 215, 216, 217, 218], "orelse_fn": [214, 215, 217], "whileloop": 214, "test_fn": [214, 216, 218, 2221, 2223], "if_els": 214, "while_loop": 214, "nestedsequ": [219, 224, 226], "protocol": [219, 220], "_t_co": [219, 220], "ml_framework": [219, 221, 222], "distanc": [219, 221, 222], "adjac": [219, 221, 222], "obj": [219, 224, 226], "typevar": [219, 224, 226], "supportsbufferprotocol": [219, 224, 226], "intdtyp": [219, 240, 241, 282, 285, 300, 304, 305, 342, 372, 374, 386, 389, 401, 407], "numrow": [219, 240, 241], "numcolumn": [219, 240, 241], "interchang": [219, 243, 246, 1868, 1929, 1933], "33333337": [219, 254, 257], "66666663": [219, 254, 257], "41588834": [219, 259, 262], "7827941": [219, 259, 262], "6227766": [219, 259, 262], "23413252": [219, 259, 262], "conserv": [219, 264, 267], "n1": [219, 264, 267], "n2": [219, 264, 267], "n3": [219, 264, 267], "xv": [219, 264, 267], "yv": [219, 264, 267], "d_type": [219, 279, 280], "__new__": [219, 279, 280], "y1": [219, 282, 285, 300, 304, 870, 871, 979, 982], "y2": [219, 282, 285, 300, 304], "y3": [219, 282, 285, 300, 304], "defaultcomplexdtyp": 305, "defaultdtyp": 305, "defaultfloatdtyp": 305, "defaultintdtyp": 305, "int_dtyp": [305, 309, 342, 401], "defaultuintdtyp": 305, "uint_dtyp": [305, 310, 343, 402], "incompat": [305, 323, 326], "data_type_funct": [305, 328, 331], "xtype": [305, 334], "ytype": [305, 334], "native_uint16": [305, 334], "complexdtyp": [305, 335, 336, 372, 374, 398], "complex128": [305, 335, 336, 372, 374, 398, 404, 2230, 2239], "4294": [305, 335, 336, 339, 340], "967346": [305, 335, 336, 339, 340], "floatdtyp": [305, 339, 340, 400], "4294967346": [305, 342, 343], "uintdtyp": [305, 343, 386, 389, 402, 408], "native_bool": [305, 348], "followng": [305, 349, 352], "smallest_norm": [305, 349, 352], "314": [305, 360, 363, 849, 852, 933, 937, 958, 1312, 1315], "9223372036854775808": [305, 360, 363], "9223372036854775807": [305, 360, 363], "65535": [305, 360, 363], "4294967295": [305, 360, 363], "native_uint8": [305, 366], "type1": [305, 391], "type2": [305, 391], "array_api_promot": [305, 391, 392, 2230, 2238, 2244, 2245], "default_dtype_stack": [305, 399, 405], "native_uint64": [305, 399], "ret1": [305, 403], "ret2": [305, 403], "reset": [305, 404, 405, 406, 407, 408, 410, 443, 1414, 1597, 1598, 1599, 1600, 1601, 1602], "default_complex_dtype_stack": [305, 404], "default_float_dtype_stack": [305, 406], "native_float16": [305, 409], "defaultdevic": 410, "__enter__": [410, 411], "_dev": [410, 411], "__exit__": [410, 411], "exc_typ": [410, 411], "exc_val": [410, 411], "exc_tb": [410, 411], "exit": [410, 411], "profil": 410, "save_dir": [410, 412], "139740789224448": [410, 425], "physic": [410, 427], "process_specif": [410, 430, 444], "percentag": [410, 430], "ram": [410, 430, 441, 444], "036902561555": [410, 430], "7024003467681645": [410, 430], "7095597456708771": [410, 430], "attr_onli": [410, 431], "chunk": [410, 433, 434, 435], "max_chunk_s": [410, 435], "chunk_siz": [410, 435], "input_ax": [410, 435], "output_ax": [410, 435], "feed": [410, 435, 2134, 2135], "fist": [410, 435], "66700032": [410, 441], "589934592": [410, 441], "219563008": [410, 444], "902400346": [410, 444], "525205504": [410, 444], "magnitud": [445, 446, 449, 461, 464, 1711, 1809, 1813, 1814, 1818], "princip": [445, 451, 454, 466, 469, 476, 479, 933, 960, 1334, 1337], "2019": [445, 461, 464, 561, 564, 626, 629, 2134, 2137], "commut": [445, 461, 464], "809": [445, 471, 474], "199": [445, 471, 474], "569": [445, 471, 474], "733": [445, 471, 474], "denot": [445, 481, 484, 1609, 1638, 1646, 2173, 2174], "quadrant": [445, 481, 484], "3\u03c0": [445, 481, 484], "bitwis": [445, 491, 494, 506, 509, 516, 519, 656, 659], "170": [445, 511, 514], "243": [445, 511, 514], "225": [445, 511, 514], "xor": [445, 516, 519, 656, 659], "77": [445, 516, 519, 1711, 1784, 1787, 2068, 2079, 2082], "368": [445, 531, 534], "670": [445, 531, 534], "548": [445, 531, 534], "1490": [445, 531, 534], "0192": [445, 536, 539], "0384": [445, 536, 539], "0576": [445, 536, 539], "698": [445, 541, 544], "accur": [445, 561, 564, 626, 629, 1711, 1799, 1802], "fdlibm": [445, 561, 564, 626, 629], "compliant": [445, 561, 564, 626, 629, 646, 649, 651, 654, 2068, 2083, 2086, 2087, 2090, 2091, 2094, 2100, 2103], "632": [445, 561, 564], "20e": [445, 561, 564], "72e": [445, 561, 564], "greatest": [445, 566, 569, 571, 574, 933, 947, 1032, 1035], "742": [445, 626, 629], "versu": [445, 691, 694], "52095687": [445, 691, 694], "92457771": [445, 691, 694], "49372482": [445, 691, 694], "22738838": [445, 691, 694], "156": [445, 691, 694, 2230, 2239], "5877228": [445, 691, 694], "189": [445, 696, 699], "252": [445, 696, 699], "315": [445, 696, 699], "378": [445, 696, 699], "1150": [445, 696, 699], "2890": [445, 696, 699], "172": [445, 696, 699], "229": [445, 696, 699], "487": [445, 696, 699, 1647, 1691, 1694], "344": [445, 696, 699], "decim": [445, 711, 714], "imprecis": [445, 711, 714], "5654": [445, 711, 714], "034": [445, 711, 714], "433": [445, 711, 714, 1609, 1620, 1625, 1645], "932": [445, 721, 724], "746": [445, 721, 724], "443": [445, 721, 724], "657": [445, 721, 724, 1414, 1438, 1441], "indistinguish": [445, 731, 734], "infinit": [445, 731, 734], "32455532": [445, 731, 734], "89897949": [445, 731, 734], "169": [445, 731, 734], "546": [445, 746, 750, 1647, 1691, 1694], "916": [445, 746, 750, 1852, 1853, 1856], "996": [445, 746, 750], "462": [445, 751, 755], "604": [445, 751, 755], "984": [445, 751, 755], "997": [445, 751, 755], "0375": [445, 756, 760], "032": [445, 756, 760], "coo_indic": [768, 1271, 1342, 1344, 1347], "crow_indic": [768, 1271, 1342, 1344, 1347], "col_indic": [768, 1271, 1342, 1344, 1347], "ccol_indic": [768, 1271, 1342, 1344, 1347], "row_indic": [768, 1271, 1342, 1344, 1347], "dense_shap": [768, 1271, 1342, 1344, 1347], "to_dense_arrai": [768, 1342, 1344], "yj": [784, 787, 933, 935, 950, 1084, 1087], "ary3": [799, 802, 1190, 1193], "avg": [804, 807, 814, 817, 1131, 1132, 1134], "dimensio": [809, 812, 1131, 1133], "distrubut": [819, 822, 1306, 1307], "paramter": [819, 822, 1306, 1307], "463": [834, 836, 1183, 1184], "022": [834, 836, 1183, 1184], "059": [834, 836, 1183, 1184], "601": [834, 836, 1183, 1184], "015": [834, 836, 1183, 1184], "868": [834, 836, 1183, 1184], "908": [834, 836, 1183, 1184], "672": [834, 836, 1183, 1184], "002": [834, 836, 1183, 1184], "029": [834, 836, 1183, 1184], "144": [834, 836, 1183, 1184], "822": [834, 836, 1183, 1184], "custom_grad_func": [843, 1044, 1045], "input_s": [848, 1131, 1135], "output_s": [848, 1131, 1135], "kernel_fn": [848, 1131, 1135], "arrrai": [849, 852, 933, 937], "355j": [849, 852, 933, 937, 958, 1312, 1315], "55j": [849, 852, 933, 937, 958, 1312, 1315], "everywher": [870, 871, 979, 982], "t1": [870, 871, 979, 982], "0800": [870, 872, 1046, 1048], "3979": [870, 872, 1046, 1048], "9121": [870, 872, 1046, 1048], "5400": [870, 872, 1046, 1048], "han": [870, 873, 1050, 1052], "taper": [870, 873, 1050, 1052], "00713103": [870, 874, 1113, 1115], "99997455": [870, 874, 1113, 1115], "kaiser_derived_window": [870, 874, 1113, 1115], "00726415": [870, 874, 1113, 1115], "9999736": [870, 874, 1113, 1115], "2773e": [870, 875, 1117, 1119], "0172e": [870, 875, 1117, 1119], "9294e": [870, 875, 1117, 1119], "4149": [870, 875, 1117, 1119], "9138": [870, 875, 1117, 1119], "5529": [870, 875, 1117, 1119], "col": [870, 876, 877, 1375, 1378, 1379, 1382], "retain": [870, 876, 877, 1375, 1378, 1379, 1382, 1609, 1619, 2125], "downward": [870, 876, 877, 1375, 1378, 1379, 1382], "upward": [870, 876, 877, 1375, 1378, 1379, 1382], "2xn": [870, 876, 877, 1375, 1378, 1379, 1382], "subarrai": [870, 876, 877, 1375, 1378, 1379, 1382], "complementari": [870, 878, 1389, 1392, 2132, 2140], "38268346": [870, 878, 1389, 1392], "38268352": [870, 878, 1389, 1392], "8563191": [870, 878, 1389, 1392], "14943568": [870, 878, 1389, 1392], "is_native_dtyp": 879, "tranform": [881, 884, 1131, 1136], "22e": [881, 884, 1131, 1136], "24e": [881, 884, 1131, 1136], "91e": [881, 884, 1131, 1136], "10e": [881, 884, 1131, 1136], "16e": [881, 884, 1131, 1136], "81e": [881, 884, 1131, 1136], "280": [881, 884, 1131, 1136], "container_n": [881, 884, 1131, 1136], "container_norm": [881, 884, 1131, 1136], "superdiagon": [891, 894, 1164, 1166, 1711, 1727, 1730], "subdiagon": [891, 894, 1164, 1166, 1711, 1727, 1730], "multivari": [901, 904, 1306, 1309], "bayesian": [901, 904, 1306, 1309], "randomli": [906, 907, 1131, 1138, 1139, 1647, 1686, 1689, 2161, 2169, 2230, 2232, 2233, 2234, 2238, 2239, 2240, 2241, 2244, 2245, 2246, 2247, 2249, 2252, 2253, 2254, 2255, 2257, 2258, 2260, 2261, 2262, 2263, 2276, 2281, 2282], "ed": [906, 907, 1131, 1138, 1139], "5d": [907, 1131, 1139], "eigenvali": [918, 921, 1164, 1167], "72281323e": [918, 921, 1164, 1167], "37228132e": [918, 921, 1164, 1167], "88578059e": [918, 921, 1164, 1167], "10000000e": [918, 921, 1164, 1167], "76822128": [918, 921, 1164, 1167], "70710678": [918, 921, 1164, 1167], "6401844": [918, 921, 1164, 1167], "tridiagon": [923, 926, 1164, 1168], "18749806": [923, 926, 1164, 1168], "81250191": [923, 926, 1164, 1168], "350609": [923, 926, 1164, 1168], "56713122": [923, 926, 1164, 1168], "06563006": [923, 926, 1164, 1168], "74146169": [923, 926, 1164, 1168], "74215561": [923, 926, 1164, 1168], "0636413": [923, 926, 1164, 1168], "56742489": [923, 926, 1164, 1168], "35291126": [923, 926, 1164, 1168], "position": [933, 943, 1009, 1012], "inexact": [933, 943, 1009, 1012], "triangl": [933, 949, 1069, 1072], "999999e": [933, 951, 1103, 1106], "217234": [933, 960, 1334, 1337], "hurwitz": [933, 963, 1408, 1412], "emb": [964, 967, 1131, 1140], "frac": [984, 987, 1079, 1082, 1131, 1141, 1142], "02733949e": [984, 987, 1131, 1141], "00j": [984, 987, 1131, 1141], "49660576e": [984, 987, 1131, 1141], "68178638e": [984, 987, 1131, 1141], "01j": [984, 987, 1079, 1082, 1131, 1141, 1142], "98912367e": [984, 987, 1131, 1141], "21802426e": [984, 987, 1079, 1082, 1131, 1141, 1142], "04549134e": [984, 987, 1079, 1082, 1131, 1141, 1142], "82842712e": [984, 987, 1079, 1082, 1131, 1141, 1142], "86902654e": [984, 987, 1079, 1082, 1131, 1141, 1142], "25501143e": [984, 987, 1079, 1082, 1131, 1141, 1142], "32978028e": [984, 987, 1079, 1082, 1131, 1141, 1142], "52068201e": [984, 987, 1079, 1082, 1131, 1141, 1142], "71158374e": [984, 987, 1079, 1082, 1131, 1141, 1142], "bind_custom_gradient_funct": 1044, "horizot": [1064, 1067, 1190, 1203], "15318303e": [1079, 1082, 1131, 1142], "15148591e": [1079, 1082, 1131, 1142], "19j": [1079, 1082, 1131, 1142], "25000000e": [1079, 1082, 1131, 1142], "35378602e": [1079, 1082, 1131, 1142], "02j": [1079, 1082, 1131, 1142], "65404249e": [1079, 1082, 1131, 1142], "17611649e": [1079, 1082, 1131, 1142], "24320230e": [1079, 1082, 1131, 1142], "79344813e": [1079, 1082, 1131, 1142], "22374531e": [1079, 1082, 1131, 1142], "45929364e": [1079, 1082, 1131, 1142], "14208718e": [1079, 1082, 1131, 1142], "07177031e": [1079, 1082, 1131, 1142], "fp": [1094, 1131, 1143], "nearest_exact": [1095, 1098, 1131, 1144], "compute_weight_mat": 1131, "interp": 1131, "padding_ceil_mod": 1131, "indirect": [1159, 1162, 1339, 1340], "secondari": [1159, 1162, 1339, 1340], "multi_dot": 1164, "3333": [1185, 1188, 1281, 1284], "6666": [1185, 1188, 1281, 1284], "ndenumer": 1190, "multidimension": [1190, 1206, 1207, 1273, 1274, 2134], "ndindex": 1190, "linear_ramp": [1190, 1208, 1285, 1288], "ramp": [1190, 1208, 1285, 1288], "padding_func": [1190, 1208, 1285, 1288], "iaxis_pad_width": [1190, 1208, 1285, 1288], "iaxi": [1190, 1208, 1285, 1288], "unalt": [1190, 1208, 1285, 1288], "sparse_arrai": [1342, 1343, 1344, 1345, 1346, 1347, 1348], "nativesparsearrai": 1342, "sparsearrai": 1342, "is_ivy_sparse_arrai": 1342, "is_native_sparse_arrai": 1342, "native_sparse_arrai": 1342, "native_sparse_array_to_indices_values_and_shap": 1342, "inspect": [1414, 1420, 2333, 2334], "recalcul": [1414, 1432], "my_sum": [1414, 1432], "val1": [1414, 1432], "val2": [1414, 1432], "cached_sum": [1414, 1432], "line_eq": [1414, 1432], "slp": [1414, 1432], "itc": [1414, 1432], "cached_line_eq": [1414, 1432], "0353": [1414, 1433, 1436], "424": [1414, 1433, 1436], "58": [1414, 1433, 1436], "176": [1414, 1433, 1436], "339": [1414, 1433, 1436], "271": [1414, 1433, 1436], "168": [1414, 1433, 1436], "391": [1414, 1433, 1436], "417": [1414, 1438, 1441], "583": [1414, 1438, 1441], "0667": [1414, 1438, 1441], "267": [1414, 1438, 1441], "131": [1414, 1438, 1441], "394": [1414, 1438, 1441, 1978, 2000, 2003], "526": [1414, 1438, 1441], "788": [1414, 1438, 1441], "default_str": [1414, 1445, 1447], "46999979": [1414, 1448, 1451], "66000009": [1414, 1448, 1451], "93000001": [1414, 1448, 1451], "29000092": [1414, 1448, 1451], "33999991": [1414, 1448, 1451], "6400001": [1414, 1448, 1451], "96000004": [1414, 1448, 1451], "36000013": [1414, 1448, 1451], "51999998": [1414, 1448, 1451], "67000008": [1414, 1448, 1451], "960": [1414, 1448, 1451], "1280": [1414, 1448, 1451], "3600": [1414, 1448, 1451], "h1": [1414, 1448, 1451], "w1": [1414, 1448, 1451], "405": [1414, 1453, 1456], "array_mod": [1414, 1484], "exception_trace_mod": [1414, 1485], "max_depth": [1414, 1496, 1953, 1966], "seen_set": [1414, 1496], "local_set": [1414, 1496], "allow_dupl": [1414, 1540], "forkserv": [1414, 1541], "spawn": [1414, 1541], "garbag": [1414, 1543], "collector": [1414, 1543], "rtype": [1414, 1554, 1555, 1558, 1560, 1561], "exept": [1414, 1555], "tmp_dr": [1414, 1562], "tmp": [1414, 1562], "my_tmp": [1414, 1562], "49999999999975": [1414, 1565, 1568], "5015015015010504": [1414, 1565, 1568], "000444502911705e": [1414, 1565, 1568], "9999999999995j": [1414, 1565, 1568], "100000023841858": [1414, 1581, 1584], "200000047683716": [1414, 1581, 1584], "299999952316284": [1414, 1581, 1584], "400000095367432": [1414, 1581, 1584], "599999904632568": [1414, 1581, 1584], "dictionai": [1414, 1596], "hemant": [1414, 1596], "451": [1414, 1603, 1607], "in_ax": [1414, 1608], "out_ax": [1414, 1608], "thereof": [1414, 1608], "summaris": [1414, 1608], "gradienttrack": 1609, "0125": [1609, 1611, 1614], "171": [1609, 1611, 1614, 2230, 2239], "90000075": [1609, 1615, 1618], "90000164": [1609, 1615, 1618], "9000032": [1609, 1615, 1618], "50000012e": [1609, 1615, 1618], "92558754": [1609, 1615, 1618], "92558694": [1609, 1615, 1618], "92558682": [1609, 1615, 1618], "92558861": [1609, 1615, 1618], "60000025e": [1609, 1615, 1618], "01024": [1609, 1615, 1618], "retain_grad": [1609, 1619], "xs_grad_idx": [1609, 1619, 2197, 2212, 2218, 2219], "ret_grad_idx": [1609, 1619, 2197, 2212, 2218, 2219], "func_ret": [1609, 1619], "933": [1609, 1620, 1625, 1645], "jac_fn": [1609, 1625], "639": [1609, 1626, 1629], "361": [1609, 1626, 1629], "with_grads_stack": [1609, 1638, 1644, 1646], "value_grad": [1609, 1645], "423332": [1609, 1645], "channel_last": [1647, 1648, 1679, 1680], "feature_group_count": [1647, 1648, 1679, 1680], "x_dilat": [1647, 1648, 1679], "channel_first": [1647, 1648, 1679, 1680], "258": [1647, 1654, 1657, 1664, 1667, 1674, 1677], "dhwio": [1647, 1669, 1672], "depthwis": [1647, 1681, 1684, 2161, 2168, 2249, 2259], "hwi": [1647, 1681, 1684], "overfit": [1647, 1686, 1689], "1428566": [1647, 1686, 1689], "19999981": [1647, 1686, 1689], "39999962": [1647, 1686, 1689], "4000001": [1647, 1686, 1689], "5999999": [1647, 1686, 1689], "49000001": [1647, 1686, 1689], "55599999": [1647, 1686, 1689], "21000004": [1647, 1686, 1689], "incom": [1647, 1691, 1694], "666": [1647, 1691, 1694, 1711, 1764, 1767], "4269": [1647, 1691, 1694], "911": [1647, 1691, 1694], "157": [1647, 1691, 1694], "753": [1647, 1691, 1694], "101": [1647, 1691, 1694, 1711, 1753, 1756, 1953, 1960], "545": [1647, 1691, 1694, 1978, 1994, 1997], "547": [1647, 1691, 1694], "852": [1647, 1691, 1694], "963": [1647, 1691, 1694], "108": [1647, 1691, 1694, 2068, 2079, 2082], "196": [1647, 1691, 1694], "306": [1647, 1691, 1694], "query_dim": [1647, 1701, 1704, 2161, 2172], "measur": [1647, 1701, 1704, 2161, 2172], "cont_feat_dim": [1647, 1701, 1704], "numhead": [1647, 1701, 1704], "head_dim": [1647, 1701, 1704, 2161, 2172], "out_feat_dim": [1647, 1701, 1704], "5678761": [1647, 1701, 1704], "65441847": [1647, 1701, 1704], "18969631": [1647, 1701, 1704], "40131447": [1647, 1701, 1704], "19991851": [1647, 1701, 1704], "40000153": [1647, 1701, 1704], "68589532": [1647, 1701, 1704], "40129396": [1647, 1701, 1704], "40000817": [1647, 1701, 1704], "31219625": [1647, 1701, 1704], "25698996": [1647, 1701, 1704], "31022024": [1647, 1701, 1704], "16286421": [1647, 1701, 1704], "30296469": [1647, 1701, 1704], "16460133": [1647, 1701, 1704], "59497029": [1647, 1701, 1704], "40046397": [1647, 1701, 1704], "14009905": [1647, 1701, 1704], "81691194": [1647, 1701, 1704], "10732293": [1647, 1701, 1704], "40012637": [1647, 1701, 1704], "73519301": [1647, 1701, 1704], "40021262": [1647, 1701, 1704], "7615059": [1647, 1701, 1704], "40326414": [1647, 1701, 1704], "30141067": [1647, 1701, 1704], "19610119": [1647, 1701, 1704], "32028484": [1647, 1701, 1704], "1708746": [1647, 1701, 1704], "34100914": [1647, 1701, 1704], "14920235": [1647, 1701, 1704], "40000009": [1647, 1701, 1704], "73333335": [1647, 1701, 1704], "axisa": [1711, 1717, 1720], "axisb": [1711, 1717, 1720], "axisc": [1711, 1717, 1720], "293": [1711, 1722, 1725], "46997": [1711, 1722, 1725], "eigendecomposit": [1711, 1737, 1738, 1741], "qlq\u1d40": [1711, 1737, 1738, 1741], "orthogon": [1711, 1737, 1738, 1741], "45033181e": [1711, 1743, 1746], "02829754e": [1711, 1743, 1746], "54220343e": [1711, 1743, 1746], "12647155e": [1711, 1743, 1746], "38447177e": [1711, 1743, 1746], "56155300e": [1711, 1743, 1746], "26794919": [1711, 1743, 1746], "7320509": [1711, 1743, 1746], "array_lik": [1711, 1748, 1751, 1784, 1787], "0012": [1711, 1753, 1756], "00342": [1711, 1753, 1756], "000565": [1711, 1753, 1756], "0104": [1711, 1753, 1756], "000981": [1711, 1753, 1756], "00282": [1711, 1753, 1756], "000766": [1711, 1753, 1756], "0322": [1711, 1753, 1756], "00237": [1711, 1753, 1756], "000151": [1711, 1753, 1756], "00101": [1711, 1753, 1756], "00019": [1711, 1753, 1756], "0214": [1711, 1753, 1756], "00171": [1711, 1753, 1756], "0107": [1711, 1753, 1756], "0167": [1711, 1753, 1756], "0472": [1711, 1753, 1756], "0536": [1711, 1753, 1756], "0177": [1711, 1753, 1756], "000429": [1711, 1753, 1756], "00762": [1711, 1753, 1756], "pivot": [1711, 1758], "lu": [1711, 1758], "frobeniu": [1711, 1764, 1767], "nuclear": [1711, 1764, 1767], "induc": [1711, 1764, 1767], "47722558": [1711, 1764, 1767], "776": [1711, 1764, 1767], "6000004": [1711, 1764, 1767], "moor": [1711, 1789, 1792], "penros": [1711, 1789, 1792], "logsabsdet": [1711, 1799, 1802], "subject": [1711, 1799, 1802], "usvh": [1711, 1809, 1813], "et": [1711, 1809, 1813], "cetera": [1711, 1809, 1813], "ss": [1711, 1814, 1818], "615": [1711, 1814, 1818], "866": [1711, 1814, 1818], "864": [1711, 1814, 1818], "0x": [1711, 1832, 1836], "alexandr": [1711, 1832, 1836], "theophil": [1711, 1832, 1836], "9000001": [1711, 1842, 1846], "64158917": [1711, 1842, 1846], "33333334": [1711, 1842, 1846], "skew": [1711, 1847, 1851], "symmetric_matrix": [1711, 1847, 1851], "cross_product": [1711, 1847, 1851], "35667497": [1852, 1858, 1861], "793291": [1852, 1863, 1866], "512926": [1852, 1863, 1866], "squeezabl": [1868, 1919, 1922], "famili": [1868, 1924, 1927], "intxx": [1868, 1924, 1927], "floatxx": [1868, 1924, 1927], "rep": [1868, 1934, 1938], "manipulation_funct": [1868, 1944, 1948], "fomaml_step": 1949, "inner_cost_fn": [1949, 1950, 1951], "outer_cost_fn": [1949, 1950, 1951], "inner_grad_step": [1949, 1950, 1951, 1952], "inner_learning_r": [1949, 1950, 1951, 1952], "inner_optimization_step": [1949, 1950, 1951, 1952], "inner_batch_fn": [1949, 1950, 1951], "outer_batch_fn": [1949, 1950, 1951], "average_across_step": [1949, 1950, 1951], "inner_v": [1949, 1950, 1951], "keep_inner_v": [1949, 1950, 1951], "outer_v": [1949, 1950, 1951], "keep_outer_v": [1949, 1950, 1951], "return_inner_v": [1949, 1950, 1951, 1952], "num_task": [1949, 1950, 1951, 1952], "maml": [1949, 1950, 1951], "recev": [1949, 1950, 1951], "0x7f1f6653ea60": [1949, 1950, 1951, 1952], "maml_step": 1949, "rece": [1949, 1951], "reptile_step": 1949, "cost_fn": [1949, 1952], "reptil": [1949, 1952], "receivng": [1949, 1952], "all_nested_indic": 1953, "include_nest": [1953, 1954], "_index": [1953, 1954, 1965], "extra_nest_typ": [1953, 1954, 1955, 1964, 1965, 1966], "copy_nest": 1953, "to_mut": [1953, 1955, 1966], "mutabl": [1953, 1955, 1961, 1962, 1966, 1971, 1972], "copied_nest": [1953, 1955], "1337": [1953, 1955], "duplicate_array_index_chain": 1953, "insert_into_nest_at_index": 1953, "insert_into_nest_at_indic": 1953, "special_squar": [1953, 1960], "6666666666666667": [1953, 1960], "special_pow": [1953, 1960], "linear_model": [1953, 1960], "map_nest_at_index": 1953, "shallow": [1953, 1961, 1962, 1966, 1971, 1972], "_result": [1953, 1961, 1971], "hh": [1953, 1961], "map_nest_at_indic": 1953, "ub": [1953, 1962], "tb": [1953, 1962], "multi_index_nest": 1953, "nested_ani": 1953, "check_nest": [1953, 1964, 1965], "conditon": [1953, 1964, 1965], "nested_argwher": 1953, "stop_after_n_found": [1953, 1965], "nested_indic": [1953, 1965], "_depth": [1953, 1966], "_tuple_check_fn": [1953, 1966], "_list_check_fn": [1953, 1966], "_dict_check_fn": [1953, 1966], "nested_multi_map": 1953, "index_chain": [1953, 1967], "nest0": [1953, 1967], "unappli": [1953, 1967], "prune_empti": 1953, "prune_nest_at_index": 1953, "prune_nest_at_indic": 1953, "set_nest_at_index": 1953, "set_nest_at_indic": 1953, "111": [1953, 1972], "xyz": [1953, 1972], "pqr": [1953, 1972], "mini": [1973, 1974, 1977, 2175, 2176], "217": [1973, 1974, 1977], "uniformli": [1978, 1984, 1987, 1994, 1997], "22346112": [1978, 1989, 1992], "0922": [1978, 1989, 1992], "49671414": [1978, 1989, 1992], "1382643": [1978, 1989, 1992], "64768857": [1978, 1989, 1992], "5230298": [1978, 1989, 1992], "23415337": [1978, 1989, 1992], "23413695": [1978, 1989, 1992], "9213753": [1978, 1989, 1992], "12818667": [1978, 1989, 1992], "799": [1978, 1989, 1992], "469": [1978, 1989, 1992], "287": [1978, 1989, 1992], "0366": [1978, 1989, 1992], "26431865": [1978, 1994, 1997], "475": [1978, 1994, 1997], "878": [1978, 1994, 1997], "861": [1978, 1994, 1997], "929": [1978, 1994, 1997], "789": [1978, 1994, 1997], "519": [1978, 1994, 1997], "0435": [1978, 1994, 1997], "381": [1978, 1994, 1997], "4608004": [1978, 1994, 1997], "8458502": [1978, 1994, 1997], "67270088": [1978, 1994, 1997], "31128597": [1978, 1994, 1997], "x_j": [2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051], "fourth": [2031, 2032, 2036], "1141": [2031, 2032, 2036], "8101": [2031, 2032, 2036], "9298": [2031, 2032, 2036], "8460": [2031, 2032, 2036], "2119": [2031, 2032, 2036], "3519": [2031, 2032, 2036], "6252": [2031, 2032, 2036], "4033": [2031, 2032, 2036], "7443": [2031, 2032, 2036], "2577": [2031, 2032, 2036], "3707": [2031, 2032, 2036], "0545": [2031, 2032, 2036], "3238": [2031, 2032, 2036], "5944": [2031, 2032, 2036], "0775": [2031, 2032, 2036], "4327": [2031, 2032, 2036], "62519997": [2031, 2032, 2036], "40329999": [2031, 2032, 2036], "59439999": [2031, 2032, 2036], "74430001": [2031, 2032, 2036], "81010002": [2031, 2032, 2036], "84600002": [2031, 2032, 2036], "92979997": [2031, 2032, 2036], "39999998": [2031, 2037, 2041], "29999995": [2031, 2037, 2041], "einstein": [2068, 2079, 2082], "summat": [2068, 2079, 2082], "117": [2068, 2079, 2082], "sentinel": [2068, 2083, 2086, 2091, 2094], "90000004": [2068, 2087, 2090], "statistical_funct": [2068, 2100, 2103], "07472222": [2068, 2109, 2113], "00666667": [2068, 2109, 2113], "08966666": [2068, 2109, 2113], "simplicit": [2114, 2115, 2118, 2120, 2123], "nail": 2125, "funtion": 2125, "asset": 2125, "functiona": 2125, "scientist": 2125, "correl": 2125, "analyz": 2125, "ai": [2126, 2132, 2136], "colab": 2126, "interact": [2126, 2133, 2134, 2139], "sharp": 2126, "favorit": 2126, "jax_concat": 2126, "tf_concat": 2126, "np_concat": 2126, "torch_concat": 2126, "get_devic": 2126, "reduce_prod": 2126, "reduce_sum": 2126, "gradient_imag": 2126, "indices_wher": 2126, "bilinear_resampl": 2126, "stack_imag": 2126, "neural_net": 2126, "floormod": 2126, "articl": 2126, "lenton2021ivi": 2126, "lenton": 2126, "daniel": 2126, "pardo": 2126, "fabio": 2126, "falck": 2126, "fabian": 2126, "jame": 2126, "stephen": 2126, "clark": 2126, "ronald": 2126, "journal": 2126, "arxiv": 2126, "preprint": 2126, "2102": 2126, "02886": 2126, "nested_arrai": [2128, 2129], "nestedarrai": 2128, "classmethod": [2128, 2129], "from_row_length": [2128, 2129], "row_length": [2128, 2129], "from_row_split": [2128, 2129], "row_split": [2128, 2129], "unbind": [2128, 2129], "conceptu": [2130, 2135], "broken": [2130, 2134], "tracer": 2130, "infrastructur": [2130, 2136, 2137], "vendor": [2130, 2136], "complimentari": [2130, 2140], "acycl": [2130, 2135], "insert_numb": 2131, "insert_t": 2131, "scaffold": [2132, 2140], "heart": 2132, "toolchain": [2132, 2137], "intermedi": [2132, 2133, 2134, 2135, 2140], "ir": [2132, 2135, 2140], "assembli": [2132, 2139, 2140], "idl": 2132, "middl": 2132, "emit": 2132, "gnu": [2132, 2137], "gcc": [2132, 2139], "broader": 2132, "heterogen": 2132, "aid": 2132, "coprocessor": 2132, "programm": [2132, 2139], "gate": 2132, "onednn": 2132, "awai": [2132, 2134], "sit": [2132, 2135, 2140], "tandem": 2132, "possess": 2132, "khrono": [2133, 2139], "appl": 2133, "coremltool": 2133, "albeit": 2133, "promin": 2134, "abbrevi": 2134, "laboratori": 2134, "proprietari": [2134, 2138, 2139], "mathwork": 2134, "commerci": 2134, "1984": 2134, "plot": 2134, "toolbox": 2134, "mupad": 2134, "simulink": 2134, "graphic": [2134, 2138, 2139], "simul": 2134, "million": [2134, 2137], "worldwid": 2134, "scienc": [2134, 2136], "econom": 2134, "2001": 2134, "scientif": 2134, "od": 2134, "solver": 2134, "cython": 2134, "friendli": 2134, "2002": 2134, "lua": 2134, "luajit": 2134, "idiap": 2134, "epfl": 2134, "2005": 2134, "numarrai": 2134, "cpython": 2134, "partli": 2134, "2007": 2134, "classif": 2134, "regress": [2134, 2141], "forest": 2134, "boost": 2134, "dbscan": 2134, "inbuilt": 2134, "esqu": 2134, "aesara": 2134, "2008": 2134, "datafram": 2134, "critic": [2134, 2140], "2012": 2134, "Its": 2134, "polymorph": 2134, "parallel": [2134, 2138, 2139], "mpi": 2134, "openmp": 2134, "glue": 2134, "jaot": 2134, "nasa": 2134, "cern": 2134, "climat": 2134, "allianc": 2134, "influenti": 2134, "2014": 2134, "analyt": [2134, 2136, 2140], "scala": 2134, "ship": 2134, "forgiv": 2134, "decemb": 2134, "announc": 2134, "transit": 2134, "mainten": 2134, "v7": 2134, "meaning": 2134, "2016": 2134, "imper": 2134, "amazon": 2134, "traction": 2134, "cognit": [2134, 2141], "toolkit": [2134, 2135, 2141], "grade": 2134, "realiz": 2134, "dnn": 2134, "cnn": 2134, "rnn": 2134, "stochast": [2134, 2177, 2182], "sgd": [2134, 2177], "backpropag": 2134, "succumb": 2134, "came": 2134, "monitor": 2134, "practition": [2134, 2138, 2139, 2140], "hobbyist": 2134, "tremend": 2134, "ecosystem": 2134, "gear": 2134, "batteri": 2134, "zygot": 2134, "jl": 2134, "workload": 2134, "daggerflux": 2134, "frontier": 2134, "hessian": 2134, "2018": 2134, "lightweight": [2134, 2141], "shortcom": 2134, "eas": 2134, "barrier": 2134, "inexperienc": 2134, "underdevelop": 2134, "fanat": 2134, "ounc": 2134, "infanc": 2134, "emerg": 2134, "nich": 2134, "introduct": 2134, "lite": 2134, "enterpris": 2134, "reinvent": [2134, 2136], "inertia": 2134, "haven": 2134, "creator": [2134, 2136], "paszk": 2134, "hi": 2134, "safeti": [2134, 2230, 2234, 2238, 2239, 2249, 2250, 2260, 2261, 2262, 2263], "bulk": 2134, "haskel": 2134, "dataflow": 2135, "distil": 2135, "essenc": [2135, 2140], "enclos": 2135, "scope": [2135, 2139], "trace_modul": 2135, "scriptfunct": 2135, "scriptmodul": 2135, "fake": 2135, "proxi": 2135, "graphmodul": 2135, "travi": 2136, "oliph": 2136, "leader": 2136, "cornerston": 2136, "numba": 2136, "numfocu": 2136, "pydata": 2136, "confer": 2136, "consult": 2136, "servic": 2136, "expertis": 2136, "devop": 2136, "mlop": 2136, "dashboard": 2136, "startup": 2136, "mlir": [2136, 2137, 2140], "Their": 2136, "held": 2136, "privileg": 2136, "presum": 2136, "llvm": [2136, 2139], "founder": 2136, "tvm": [2136, 2140], "sustain": 2136, "empow": 2136, "har": 2136, "burden": 2136, "benchmark": 2136, "convention": 2137, "precompil": 2137, "executor": 2137, "exploit": 2137, "fsf": 2137, "gpl": 2137, "biggest": [2137, 2140], "nvidia": [2138, 2139], "conduct": 2138, "throughput": 2138, "autotun": 2138, "consumpt": 2138, "gpgpu": 2138, "talk": 2139, "classic": 2139, "sycl": 2139, "dpc": 2139, "processor": 2139, "x86": 2139, "oneapi": 2139, "ia": 2139, "aka": 2139, "xeon": 2139, "gen9": 2139, "xe": 2139, "card": 2139, "arria": 2139, "gx": 2139, "fpga": 2139, "tune": [2139, 2140], "lofti": 2140, "ambit": 2140, "realm": 2140, "bedrock": 2140, "flux": 2140, "bite": 2140, "chew": 2140, "eagerpi": 2140, "tensorli": 2140, "thinc": 2140, "neuropod": 2140, "exhibit": 2140, "emploi": 2140, "fx": 2140, "retrain": 2140, "wider": 2140, "closer": 2140, "greatli": 2140, "challeng": 2140, "modular": 2140, "anywher": 2140, "theano": 2141, "plaidml": 2141, "partial_svd": 2141, "tucker_mode_dot": 2141, "excel": 2141, "subsystem": 2141, "geglu": 2143, "moduleconvert": [2146, 2173, 2174], "from_haiku_modul": [2146, 2147], "native_modul": [2146, 2147, 2148], "params_hk": [2146, 2147], "rng_seed": [2146, 2147], "constructor_arg": [2146, 2147], "constructor_kwarg": [2146, 2147], "instance_arg": [2146, 2147], "instance_kwarg": [2146, 2147], "from_keras_modul": [2146, 2147], "from_torch_modul": [2146, 2147], "native_module_class": [2146, 2148], "modulehelp": [2149, 2173, 2174], "check_submod_ret": [2149, 2150], "expected_submod_ret": [2149, 2150, 2173, 2174], "get_mod_kei": [2149, 2150], "top_mod": [2149, 2150], "mod_depth": [2149, 2150], "mod_height": [2149, 2150], "mod_with_top_mod_key_chain": [2149, 2150], "flatten_key_chain": [2149, 2150], "iimedi": [2149, 2150], "show_mod_in_top_mod": [2149, 2150], "upper_depth": [2149, 2150], "lower_depth": [2149, 2150], "show_structur": [2149, 2150], "this_repr": [2149, 2150], "show_v_in_top_v": [2149, 2150], "perspect": [2149, 2150], "top_v": [2149, 2150], "sub_mod": [2149, 2150], "show_v": [2149, 2150], "comopos": [2149, 2150], "enumer": [2149, 2150], "track_submod_call_ord": [2149, 2150, 2173, 2174], "track_submod_ret": [2149, 2150, 2173, 2174], "v_with_top_v_key_chain": [2149, 2150], "rectangular": [2151, 2152, 2155, 2156, 2159], "firstlayersiren": 2151, "siren": [2151, 2153], "distribt": [2151, 2153, 2154, 2158], "glorot": [2151, 2154], "xavier": [2151, 2154], "neuron": [2151, 2155, 2156, 2159], "w_1x_1": [2151, 2155], "w_2x_2": [2151, 2155], "w_nx_n": [2151, 2155], "w_i": [2151, 2155], "vanish": [2151, 2155], "pick": [2151, 2155], "kaimingnorm": 2151, "kaim": [2151, 2156], "he": [2151, 2156], "distibut": [2151, 2156], "center": [2151, 2156], "negative_slop": [2151, 2156], "fan": [2151, 2156, 2159], "propog": [2151, 2156, 2159], "proport": [2151, 2156], "Ones": 2151, "w0": [2151, 2158], "wlim": [2151, 2159], "predefin": [2151, 2159], "initialz": [2151, 2159], "fan_avg": [2151, 2159], "filter_s": [2161, 2162, 2163], "conv1dtranspos": 2161, "filter_shap": [2161, 2164, 2165, 2166, 2167, 2168], "conv2dtranspos": 2161, "conv3dtranspos": 2161, "depthwiseconv2d": 2161, "num_channel": [2161, 2168], "bernoul": [2161, 2169], "num_lay": [2161, 2170], "return_sequ": [2161, 2170], "return_st": [2161, 2170], "get_initial_st": [2161, 2170], "dens": [2161, 2171], "multiheadattent": 2161, "dropout_r": [2161, 2172], "context_dim": [2161, 2172], "with_to_q_fn": [2161, 2172], "with_to_kv_fn": [2161, 2172], "with_to_out_fn": [2161, 2172], "build_mod": [2161, 2172, 2173, 2174], "on_init": [2161, 2172, 2173, 2174], "__call__": [2161, 2172, 2173, 2174, 2197, 2219], "store_var": [2173, 2174], "arg_stateful_idx": [2173, 2174], "kwarg_stateful_idx": [2173, 2174], "fallback_to_non_compil": [2173, 2174, 2177, 2181], "with_partial_v": [2173, 2174], "submod_depth": [2173, 2174], "submods_to_track": [2173, 2174], "varibl": [2173, 2174], "from_cal": [2173, 2174], "built_": [2173, 2174], "compile_kwarg": [2173, 2174], "_unified_ivy_graph": [2173, 2174], "_call": [2173, 2174], "save_weight": [2173, 2174], "weights_path": [2173, 2174], "show_graph": [2173, 2174], "randomness_factor": [2173, 2174], "save_to_disk": [2173, 2174], "with_edge_label": [2173, 2174], "with_arg_label": [2173, 2174], "with_output_label": [2173, 2174], "output_connected_onli": [2173, 2174], "include_gener": [2173, 2174], "array_cach": [2173, 2174], "highlight_subgraph": [2173, 2174], "return_graph": [2173, 2174], "layernorm": 2175, "normalized_shap": [2175, 2176], "elementwise_affin": [2175, 2176], "trail": [2175, 2176], "init_on_first_step": [2177, 2181], "ignore_miss": [2177, 2181], "sub_modul": [2183, 2184], "nativevari": [2183, 2184], "assert_same_type_and_shap": 2186, "this_key_chain": [2186, 2188], "check_unsupported_devic": 2186, "input_devic": [2186, 2189], "all_as_kwargs_np": [2186, 2189, 2190, 2191, 2197, 2212, 2216, 2218], "check_unsupported_device_and_dtyp": 2186, "check_unsupported_dtyp": 2186, "test_unsupported_funct": 2186, "value_test": 2186, "ret_np_flat": [2186, 2193], "ret_np_from_gt_flat": [2186, 2193], "ret_from_np_gt_flat": [2186, 2193], "available_framework": [2194, 2196], "ground_truth": 2194, "function_test": [2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220], "args_to_contain": 2197, "as_cont": 2197, "as_list": 2197, "convtru": 2197, "nativeclass": [2197, 2201], "create_args_kwarg": 2197, "args_np": [2197, 2202, 2203, 2212], "arg_np_val": [2197, 2202, 2203], "args_idx": [2197, 2202, 2203], "kwargs_np": [2197, 2202, 2203, 2212], "kwarg_np_val": [2197, 2202, 2203], "kwargs_idx": [2197, 2202, 2203], "create_frontend_args_kwarg": 2197, "empty_func": 2197, "flatten_and_to_np": 2197, "flatten_fw_and_to_np": 2197, "framework_compar": 2197, "get_frontend_ret": 2197, "get_ret_and_flattened_np_arrai": 2197, "gradient_incompatible_funct": 2197, "rtol_": [2197, 2212, 2217, 2218, 2219], "gradient_unsupported_dtyp": 2197, "kwargs_to_args_n_kwarg": 2197, "make_json_pick": [2197, 2244], "init_as_variable_flag": [2197, 2217, 2219, 2276, 2277, 2279], "init_num_positional_arg": [2197, 2217, 2219, 2276, 2277, 2279], "init_native_array_flag": [2197, 2217, 2219], "with_v": [2197, 2217, 2219], "ret_gt": [2197, 2217, 2218, 2219], "return_flat_np_arrai": [2197, 2218, 2219], "functiontestflag": [2197, 2218, 2266], "container_flag": [2197, 2218, 2266, 2270, 2274, 2275, 2276, 2280], "test_method": 2197, "class_nam": [2197, 2219], "init_with_v": [2197, 2219], "method_with_v": [2197, 2219], "device_": [2197, 2219], "method_as_variable_flag": [2197, 2219, 2276, 2277, 2279], "method_num_positional_arg": [2197, 2219, 2276, 2277, 2279], "method_native_array_flag": [2197, 2219], "method_container_flag": [2197, 2219, 2276, 2279], "tthe": [2197, 2219], "var_fn": 2197, "holder": 2221, "interruptedtest": 2221, "test_interrup": [2221, 2222], "baseexcept": [2221, 2222], "testdata": 2221, "supported_device_dtyp": [2221, 2223], "is_method": [2221, 2223], "remove_all_current_framework": 2221, "setup_api_test": 2221, "test_data": [2221, 2225, 2226], "setup_frontend_test": 2221, "teardown_api_test": 2221, "teardown_frontend_test": 2221, "hypothesis_help": [2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263], "array_help": [2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243], "array_and_broadcastable_shap": 2230, "array_indices_axi": 2230, "indices_dtyp": [2230, 2233], "disable_random_axi": [2230, 2233], "axis_zero": [2230, 2233], "first_dimension_onli": [2230, 2233], "indices_same_dim": [2230, 2233], "65536": [2230, 2233], "abs_smallest_v": [2230, 2234, 2238, 2239, 2249, 2250, 2260, 2261], "exclude_max": [2230, 2234, 2238, 2239, 2241, 2260, 2261], "small_abs_safety_factor": [2230, 2234, 2238, 2239, 2249, 2250, 2260, 2261, 2263], "subnorm": [2230, 2234, 2260, 2261], "0002": [2230, 2234, 2238, 2239, 2260, 2261, 2263], "arrays_and_ax": 2230, "return_dtyp": [2230, 2235], "force_int_axi": [2230, 2235, 2239], "arrays_for_pool": 2230, "min_dim": [2230, 2236, 2242], "max_dim": [2230, 2236, 2242], "min_sid": [2230, 2236, 2242], "max_sid": [2230, 2236, 2242], "allow_explicit_pad": [2230, 2236], "return_dil": [2230, 2236], "ret_shap": [2230, 2238, 2239], "array_api_dtyp": [2230, 2238, 2244, 2245], "37915": [2230, 2238], "6322": [2230, 2238], "26765": [2230, 2238], "12413": [2230, 2238], "26986": [2230, 2238], "34665": [2230, 2238], "000e": [2230, 2238], "711e": [2230, 2238], "100e": [2230, 2238], "40817": [2230, 2238], "56193": [2230, 2238], "29200": [2230, 2238], "5851": [2230, 2238], "9746": [2230, 2238], "9604645e": [2230, 2238], "192": [2230, 2238], "103": [2230, 2238], "41795": [2230, 2238], "1170789994": [2230, 2238], "44251": [2230, 2238], "44209": [2230, 2238], "433075925": [2230, 2238], "24791": [2230, 2238], "24691": [2230, 2238], "24892": [2230, 2238], "16711": [2230, 2238], "972": [2230, 2238], "15357": [2230, 2238], "72057594037927936": [2230, 2238], "min_axi": [2230, 2239], "max_axi": [2230, 2239], "valid_axi": [2230, 2239], "allow_neg_ax": [2230, 2239], "min_axes_s": [2230, 2239], "max_axes_s": [2230, 2239], "force_tuple_axi": [2230, 2239], "29788": [2230, 2239], "62222885e": [2230, 2239], "68281172e": [2230, 2239], "257j": [2230, 2239], "40129846e": [2230, 2239], "90000000e": [2230, 2239], "63426649e": [2230, 2239], "50000000e": [2230, 2239], "91931887e": [2230, 2239], "29488e": [2230, 2239], "14361019e": [2230, 2239], "96046448e": [2230, 2239], "12445": [2230, 2239], "list_of_s": 2230, "00001": [2230, 2241], "999999999999999": [2230, 2241], "9394938006792373": [2230, 2241], "mutually_broadcastable_shap": 2230, "num_shap": [2230, 2242], "base_shap": [2230, 2242], "dtype_help": [2244, 2245, 2246, 2247, 2248], "get_castable_dtyp": 2244, "castabl": [2244, 2246], "prune_funct": [2244, 2247], "signed_integ": [2244, 2247], "real_and_complex": [2244, 2247], "float_and_complex": [2244, 2247], "incas": [2244, 2247], "general_help": [2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259], "apply_safety_factor": 2249, "embedding_help": 2249, "allow_neg": [2249, 2252], "force_tupl": [2249, 2252], "force_int": [2249, 2252], "matrix_is_st": 2249, "cond_limit": [2249, 2256], "computation": [2249, 2256], "condition_index": [2249, 2256], "ill": [2249, 2256], "prone": [2249, 2256], "thumb": [2249, 2256], "gradual": [2249, 2256], "multicollinear": [2249, 2256], "tell": [2249, 2256], "x_and_filt": 2249, "number_help": [2260, 2261, 2262, 2263], "safety_factor": [2260, 2262], "frontendmethoddata": 2264, "ivy_init_modul": [2264, 2265], "framework_init_modul": [2264, 2265], "init_nam": [2264, 2265], "struct": 2265, "test_parameter_flag": [2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275], "frontendfunctiontestflag": 2266, "frontendmethodtestflag": 2266, "methodtestflag": 2266, "build_flag": 2266, "frontend_function_flag": 2266, "frontend_method_flag": 2266, "function_flag": 2266, "testing_help": [2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283], "init_native_arrai": [2276, 2277, 2279], "_as_varaible_strategi": [2276, 2277, 2278, 2279, 2280], "method_native_arrai": [2276, 2277, 2279], "_given_kwarg": [2276, 2277, 2278, 2279, 2280], "test_inplac": [2276, 2278], "init_container_flag": [2276, 2279], "test_instance_method": [2276, 2280], "num_positional_args_method": 2276, "check_al": 2285, "check_all_or_any_fn": 2285, "check_ani": 2285, "check_dimens": 2285, "elem": [2285, 2290], "check_exist": 2285, "check_fals": 2285, "check_fill_value_and_dtype_are_compat": 2285, "check_gather_input_valid": 2285, "check_gather_nd_input_valid": 2285, "check_great": 2285, "check_inplace_sizes_valid": 2285, "check_isinst": 2285, "allowed_typ": [2285, 2299], "check_kernel_padding_s": 2285, "kernel_s": [2285, 2300], "padding_s": [2285, 2300], "check_one_way_broadcast": 2285, "check_same_dtyp": 2285, "check_shapes_broadcast": 2285, "check_tru": 2285, "ast_help": [2308, 2309, 2310, 2311], "importtransform": 2308, "nodetransform": [2308, 2309], "impersonate_import": [2308, 2309], "visit_import": [2308, 2309], "visit_importfrom": [2308, 2309], "ivyload": 2308, "exec_modul": [2308, 2310], "ivypathfind": 2308, "metapathfind": [2308, 2311], "find_spec": [2308, 2311], "fullnam": [2308, 2311], "contextmanag": 2312, "choose_random_backend": 2312, "clear_backend_stack": 2312, "convert_from_numpy_to_target_backend": 2312, "variable_id": [2312, 2316, 2317], "numpy_obj": [2312, 2316, 2317], "convert_from_source_backend_to_numpi": 2312, "global_backend": [2312, 2318], "fn_name_from_version_specific_fn_nam": 2312, "ivy_jax": [2312, 2320], "prevent_access_loc": 2312, "set_backend_to_specific_vers": 2312, "set_jax_backend": 2312, "set_numpy_backend": 2312, "set_tensorflow_backend": 2312, "set_torch_backend": 2312, "with_backend": 2312, "dynamic_import": [2330, 2331], "add_array_spec": 2332, "fn_array_spec": 2332}, "objects": {"ivy": [[0, 0, 0, "-", "_version"], [150, 0, 0, "-", "func_wrapper"], [2142, 0, 0, "-", "stateful"]], "ivy.array": [[14, 0, 0, "-", "activations"], [16, 0, 0, "-", "array"], [18, 0, 0, "-", "conversions"], [23, 0, 0, "-", "creation"], [25, 0, 0, "-", "data_type"], [27, 0, 0, "-", "device"], [29, 0, 0, "-", "elementwise"], [32, 0, 0, "-", "general"], [34, 0, 0, "-", "gradients"], [36, 0, 0, "-", "image"], [38, 0, 0, "-", "layers"], [40, 0, 0, "-", "linear_algebra"], [42, 0, 0, "-", "losses"], [44, 0, 0, "-", "manipulation"], [46, 0, 0, "-", "norms"], [48, 0, 0, "-", "random"], [50, 0, 0, "-", "searching"], [52, 0, 0, "-", "set"], [54, 0, 0, "-", "sorting"], [56, 0, 0, "-", "statistical"], [58, 0, 0, "-", "utility"], [60, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[15, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[15, 2, 1, "", "gelu"], [15, 2, 1, "", "leaky_relu"], [15, 2, 1, "", "log_softmax"], [15, 2, 1, "", "mish"], [15, 2, 1, "", "relu"], [15, 2, 1, "", "sigmoid"], [15, 2, 1, "", "softmax"], [15, 2, 1, "", "softplus"]], "ivy.array.array": [[17, 1, 1, "", "Array"]], "ivy.array.array.Array": [[17, 3, 1, "", "T"], [17, 2, 1, "", "__abs__"], [17, 2, 1, "", "__add__"], [17, 2, 1, "", "__eq__"], [17, 2, 1, "", "__ge__"], [17, 2, 1, "", "__gt__"], [17, 2, 1, "", "__init__"], [17, 2, 1, "", "__le__"], [17, 2, 1, "", "__lt__"], [17, 2, 1, "", "__ne__"], [17, 2, 1, "", "__pow__"], [17, 2, 1, "", "__radd__"], [17, 2, 1, "", "__rrshift__"], [17, 2, 1, "", "__rshift__"], [17, 2, 1, "", "__rsub__"], [17, 2, 1, "", "__sub__"], [17, 2, 1, "", "__truediv__"], [17, 2, 1, "", "__xor__"], [17, 2, 1, "", "arange"], [17, 2, 1, "", "arg_info"], [17, 2, 1, "", "arg_names"], [17, 2, 1, "", "args_to_ivy"], [17, 2, 1, "", "args_to_native"], [17, 2, 1, "", "array"], [17, 2, 1, "", "as_ivy_dev"], [17, 2, 1, "", "as_ivy_dtype"], [17, 2, 1, "", "as_native_dev"], [17, 2, 1, "", "as_native_dtype"], [17, 2, 1, "", "asarray_handle_nestable"], [17, 2, 1, "", "asarray_infer_device"], [17, 2, 1, "", "asarray_to_native_arrays_and_back"], [17, 2, 1, "", "cache_fn"], [17, 2, 1, "", "check_float"], [17, 2, 1, "", "clear_mem_on_dev"], [17, 2, 1, "", "closest_valid_dtype"], [17, 2, 1, "", "container_types"], [17, 2, 1, "", "conv"], [17, 2, 1, "", "conv_general_dilated"], [17, 2, 1, "", "conv_general_transpose"], [17, 2, 1, "", "current_backend"], [17, 2, 1, "", "current_backend_str"], [17, 3, 1, "", "data"], [17, 2, 1, "", "default_complex_dtype"], [17, 2, 1, "", "default_device"], [17, 2, 1, "", "default_dtype"], [17, 2, 1, "", "default_float_dtype"], [17, 2, 1, "", "default_int_dtype"], [17, 2, 1, "", "default_uint_dtype"], [17, 2, 1, "", "deserialize"], [17, 2, 1, "", "dev_util"], [17, 3, 1, "", "device"], [17, 3, 1, "", "dtype"], [17, 2, 1, "", "dtype_bits"], [17, 3, 1, "", "dynamic_backend"], [17, 2, 1, "", "empty"], [17, 2, 1, "", "execute_with_gradients"], [17, 2, 1, "", "eye"], [17, 2, 1, "", "full"], [17, 2, 1, "", "function_supported_devices"], [17, 2, 1, "", "function_supported_devices_and_dtypes"], [17, 2, 1, "", "function_supported_dtypes"], [17, 2, 1, "", "function_unsupported_devices"], [17, 2, 1, "", "function_unsupported_devices_and_dtypes"], [17, 2, 1, "", "function_unsupported_dtypes"], [17, 2, 1, "", "get"], [17, 2, 1, "", "get_all_arrays_in_memory"], [17, 2, 1, "", "get_all_ivy_arrays_on_dev"], [17, 2, 1, "", "get_array_mode"], [17, 2, 1, "", "get_exception_trace_mode"], [17, 2, 1, "", "get_item"], [17, 2, 1, "", "get_min_base"], [17, 2, 1, "", "get_min_denominator"], [17, 2, 1, "", "get_nestable_mode"], [17, 2, 1, "", "get_queue_timeout"], [17, 2, 1, "", "get_referrers_recursive"], [17, 2, 1, "", "get_show_func_wrapper_trace_mode"], [17, 2, 1, "", "get_tmp_dir"], [17, 2, 1, "", "gpu_is_available"], [17, 2, 1, "", "grad"], [17, 2, 1, "", "handle_array_function"], [17, 2, 1, "", "handle_array_like_without_promotion"], [17, 2, 1, "", "handle_exceptions"], [17, 2, 1, "", "handle_nestable"], [17, 2, 1, "", "handle_out_argument"], [17, 2, 1, "", "handle_view"], [17, 2, 1, "", "handle_view_indexing"], [17, 2, 1, "", "infer_default_dtype"], [17, 2, 1, "", "infer_device"], [17, 2, 1, "", "infer_dtype"], [17, 2, 1, "", "inplace_arrays_supported"], [17, 2, 1, "", "inplace_variables_supported"], [17, 2, 1, "", "inputs_to_ivy_arrays"], [17, 2, 1, "", "inputs_to_native_arrays"], [17, 2, 1, "", "integer_arrays_to_float"], [17, 2, 1, "", "invalid_dtype"], [17, 2, 1, "", "is_complex_dtype"], [17, 2, 1, "", "isscalar"], [17, 2, 1, "", "jac"], [17, 2, 1, "", "lu_factor"], [17, 3, 1, "", "mT"], [17, 2, 1, "", "match_kwargs"], [17, 2, 1, "", "multiprocessing"], [17, 3, 1, "", "ndim"], [17, 2, 1, "", "normalize_axis_tuple"], [17, 2, 1, "", "num_arrays_in_memory"], [17, 2, 1, "", "num_cpu_cores"], [17, 2, 1, "", "num_gpus"], [17, 2, 1, "", "num_ivy_arrays_on_dev"], [17, 2, 1, "", "ones"], [17, 2, 1, "", "outputs_to_ivy_arrays"], [17, 2, 1, "", "percent_used_mem_on_dev"], [17, 2, 1, "", "print_all_arrays_in_memory"], [17, 2, 1, "", "print_all_ivy_arrays_on_dev"], [17, 2, 1, "", "promote_types"], [17, 2, 1, "", "promote_types_of_inputs"], [17, 2, 1, "", "seed"], [17, 2, 1, "", "set_array_mode"], [17, 2, 1, "", "set_default_complex_dtype"], [17, 2, 1, "", "set_default_device"], [17, 2, 1, "", "set_default_dtype"], [17, 2, 1, "", "set_default_float_dtype"], [17, 2, 1, "", "set_default_int_dtype"], [17, 2, 1, "", "set_default_uint_dtype"], [17, 2, 1, "", "set_exception_trace_mode"], [17, 2, 1, "", "set_min_base"], [17, 2, 1, "", "set_min_denominator"], [17, 2, 1, "", "set_nestable_mode"], [17, 2, 1, "", "set_queue_timeout"], [17, 2, 1, "", "set_shape_array_mode"], [17, 2, 1, "", "set_show_func_wrapper_trace_mode"], [17, 2, 1, "", "set_split_factor"], [17, 2, 1, "", "set_tmp_dir"], [17, 2, 1, "", "set_with_grads"], [17, 3, 1, "", "shape"], [17, 2, 1, "", "shape_array_mode"], [17, 3, 1, "", "size"], [17, 2, 1, "", "split_factor"], [17, 2, 1, "", "split_func_call"], [17, 2, 1, "", "to_ivy"], [17, 2, 1, "", "to_ivy_shape"], [17, 2, 1, "", "to_native"], [17, 2, 1, "", "to_native_arrays_and_back"], [17, 2, 1, "", "to_native_shape"], [17, 2, 1, "", "total_mem_on_dev"], [17, 2, 1, "", "tpu_is_available"], [17, 2, 1, "", "try_else_none"], [17, 2, 1, "", "type_promote_arrays"], [17, 2, 1, "", "unset_array_mode"], [17, 2, 1, "", "unset_default_complex_dtype"], [17, 2, 1, "", "unset_default_device"], [17, 2, 1, "", "unset_default_dtype"], [17, 2, 1, "", "unset_default_float_dtype"], [17, 2, 1, "", "unset_default_int_dtype"], [17, 2, 1, "", "unset_default_uint_dtype"], [17, 2, 1, "", "unset_exception_trace_mode"], [17, 2, 1, "", "unset_nestable_mode"], [17, 2, 1, "", "unset_queue_timeout"], [17, 2, 1, "", "unset_shape_array_mode"], [17, 2, 1, "", "unset_show_func_wrapper_trace_mode"], [17, 2, 1, "", "unset_with_grads"], [17, 2, 1, "", "used_mem_on_dev"], [17, 2, 1, "", "valid_dtype"], [17, 2, 1, "", "value_and_grad"], [17, 2, 1, "", "vmap"], [17, 2, 1, "", "with_grads"], [17, 2, 1, "", "wraps"], [17, 2, 1, "", "zeros"]], "ivy.array.array_methods": [[447, 4, 1, "", "abs"], [452, 4, 1, "", "acos"], [457, 4, 1, "", "acosh"], [1612, 4, 1, "", "adam_step"], [1616, 4, 1, "", "adam_update"], [462, 4, 1, "", "add"], [775, 4, 1, "", "adjoint"], [2116, 4, 1, "", "all"], [1416, 4, 1, "", "all_equal"], [780, 4, 1, "", "allclose"], [785, 4, 1, "", "angle"], [2121, 4, 1, "", "any"], [2007, 4, 1, "", "argmax"], [2012, 4, 1, "", "argmin"], [2054, 4, 1, "", "argsort"], [2017, 4, 1, "", "argwhere"], [1423, 4, 1, "", "array_equal"], [225, 4, 1, "", "asarray"], [467, 4, 1, "", "asin"], [472, 4, 1, "", "asinh"], [1428, 4, 1, "", "assert_supports_inplace"], [314, 4, 1, "", "astype"], [477, 4, 1, "", "atan"], [482, 4, 1, "", "atan2"], [487, 4, 1, "", "atanh"], [790, 4, 1, "", "atleast_1d"], [795, 4, 1, "", "atleast_2d"], [800, 4, 1, "", "atleast_3d"], [805, 4, 1, "", "avg_pool1d"], [810, 4, 1, "", "avg_pool2d"], [815, 4, 1, "", "avg_pool3d"], [820, 4, 1, "", "bernoulli"], [825, 4, 1, "", "beta"], [830, 4, 1, "", "binarizer"], [1854, 4, 1, "", "binary_cross_entropy"], [839, 4, 1, "", "bincount"], [492, 4, 1, "", "bitwise_and"], [497, 4, 1, "", "bitwise_invert"], [502, 4, 1, "", "bitwise_left_shift"], [507, 4, 1, "", "bitwise_or"], [512, 4, 1, "", "bitwise_right_shift"], [517, 4, 1, "", "bitwise_xor"], [319, 4, 1, "", "broadcast_arrays"], [324, 4, 1, "", "broadcast_to"], [329, 4, 1, "", "can_cast"], [522, 4, 1, "", "ceil"], [1713, 4, 1, "", "cholesky"], [1870, 4, 1, "", "clip"], [1434, 4, 1, "", "clip_matrix_norm"], [1439, 4, 1, "", "clip_vector_norm"], [1875, 4, 1, "", "concat"], [850, 4, 1, "", "conj"], [1880, 4, 1, "", "constant_pad"], [1650, 4, 1, "", "conv1d"], [1655, 4, 1, "", "conv1d_transpose"], [1660, 4, 1, "", "conv2d"], [1665, 4, 1, "", "conv2d_transpose"], [1670, 4, 1, "", "conv3d"], [1675, 4, 1, "", "conv3d_transpose"], [232, 4, 1, "", "copy_array"], [856, 4, 1, "", "copysign"], [861, 4, 1, "", "corrcoef"], [527, 4, 1, "", "cos"], [532, 4, 1, "", "cosh"], [866, 4, 1, "", "count_nonzero"], [1718, 4, 1, "", "cross"], [1859, 4, 1, "", "cross_entropy"], [2070, 4, 1, "", "cumprod"], [2075, 4, 1, "", "cumsum"], [882, 4, 1, "", "dct"], [1446, 4, 1, "", "default"], [537, 4, 1, "", "deg2rad"], [1682, 4, 1, "", "depthwise_conv2d"], [1723, 4, 1, "", "det"], [418, 4, 1, "", "dev"], [1728, 4, 1, "", "diag"], [892, 4, 1, "", "diagflat"], [1733, 4, 1, "", "diagonal"], [897, 4, 1, "", "diff"], [902, 4, 1, "", "dirichlet"], [542, 4, 1, "", "divide"], [1687, 4, 1, "", "dropout"], [909, 4, 1, "", "dsplit"], [914, 4, 1, "", "dstack"], [919, 4, 1, "", "eig"], [1739, 4, 1, "", "eigh"], [924, 4, 1, "", "eigh_tridiagonal"], [929, 4, 1, "", "eigvals"], [1744, 4, 1, "", "eigvalsh"], [1449, 4, 1, "", "einops_rearrange"], [1454, 4, 1, "", "einops_reduce"], [1459, 4, 1, "", "einops_repeat"], [2080, 4, 1, "", "einsum"], [965, 4, 1, "", "embedding"], [236, 4, 1, "", "empty_like"], [547, 4, 1, "", "equal"], [552, 4, 1, "", "erf"], [1464, 4, 1, "", "exists"], [557, 4, 1, "", "exp"], [970, 4, 1, "", "exp2"], [975, 4, 1, "", "expand"], [1885, 4, 1, "", "expand_dims"], [562, 4, 1, "", "expm1"], [980, 4, 1, "", "eye_like"], [985, 4, 1, "", "fft"], [350, 4, 1, "", "finfo"], [990, 4, 1, "", "fix"], [995, 4, 1, "", "flatten"], [1890, 4, 1, "", "flip"], [1000, 4, 1, "", "fliplr"], [1005, 4, 1, "", "flipud"], [1010, 4, 1, "", "float_power"], [567, 4, 1, "", "floor"], [572, 4, 1, "", "floor_divide"], [1015, 4, 1, "", "fmax"], [1020, 4, 1, "", "fmin"], [1025, 4, 1, "", "fmod"], [1467, 4, 1, "", "fourier_encode"], [244, 4, 1, "", "from_dlpack"], [250, 4, 1, "", "full_like"], [1030, 4, 1, "", "gamma"], [1474, 4, 1, "", "gather"], [1479, 4, 1, "", "gather_nd"], [1033, 4, 1, "", "gcd"], [172, 4, 1, "", "gelu"], [1491, 4, 1, "", "get_num_dims"], [1040, 4, 1, "", "gradient"], [1622, 4, 1, "", "gradient_descent_update"], [577, 4, 1, "", "greater"], [582, 4, 1, "", "greater_equal"], [1500, 4, 1, "", "has_nans"], [1055, 4, 1, "", "heaviside"], [1060, 4, 1, "", "hsplit"], [1065, 4, 1, "", "hstack"], [1070, 4, 1, "", "hypot"], [1075, 4, 1, "", "i0"], [1080, 4, 1, "", "ifft"], [361, 4, 1, "", "iinfo"], [1085, 4, 1, "", "imag"], [1749, 4, 1, "", "inner"], [1506, 4, 1, "", "inplace_decrement"], [1511, 4, 1, "", "inplace_increment"], [1516, 4, 1, "", "inplace_update"], [1090, 4, 1, "", "instance_norm"], [1096, 4, 1, "", "interpolate"], [1754, 4, 1, "", "inv"], [1522, 4, 1, "", "is_array"], [368, 4, 1, "", "is_bool_dtype"], [377, 4, 1, "", "is_float_dtype"], [382, 4, 1, "", "is_int_dtype"], [1527, 4, 1, "", "is_ivy_array"], [1532, 4, 1, "", "is_ivy_container"], [1535, 4, 1, "", "is_native_array"], [387, 4, 1, "", "is_uint_dtype"], [1104, 4, 1, "", "isclose"], [587, 4, 1, "", "isfinite"], [1109, 4, 1, "", "isin"], [592, 4, 1, "", "isinf"], [597, 4, 1, "", "isnan"], [602, 4, 1, "", "isreal"], [1122, 4, 1, "", "kron"], [1127, 4, 1, "", "l2_normalize"], [1627, 4, 1, "", "lamb_update"], [1631, 4, 1, "", "lars_update"], [1975, 4, 1, "", "layer_norm"], [1150, 4, 1, "", "lcm"], [1155, 4, 1, "", "ldexp"], [178, 4, 1, "", "leaky_relu"], [607, 4, 1, "", "less"], [612, 4, 1, "", "less_equal"], [1160, 4, 1, "", "lexsort"], [1692, 4, 1, "", "linear"], [255, 4, 1, "", "linspace"], [617, 4, 1, "", "log"], [622, 4, 1, "", "log10"], [627, 4, 1, "", "log1p"], [632, 4, 1, "", "log2"], [183, 4, 1, "", "log_softmax"], [637, 4, 1, "", "logaddexp"], [1174, 4, 1, "", "logaddexp2"], [642, 4, 1, "", "logical_and"], [647, 4, 1, "", "logical_not"], [652, 4, 1, "", "logical_or"], [657, 4, 1, "", "logical_xor"], [1179, 4, 1, "", "logit"], [260, 4, 1, "", "logspace"], [1186, 4, 1, "", "lp_normalize"], [1697, 4, 1, "", "lstm_update"], [1760, 4, 1, "", "matmul"], [1215, 4, 1, "", "matrix_exp"], [1765, 4, 1, "", "matrix_norm"], [1770, 4, 1, "", "matrix_power"], [1775, 4, 1, "", "matrix_rank"], [1780, 4, 1, "", "matrix_transpose"], [2084, 4, 1, "", "max"], [1220, 4, 1, "", "max_pool1d"], [1225, 4, 1, "", "max_pool2d"], [1230, 4, 1, "", "max_pool3d"], [662, 4, 1, "", "maximum"], [2088, 4, 1, "", "mean"], [1235, 4, 1, "", "median"], [265, 4, 1, "", "meshgrid"], [2092, 4, 1, "", "min"], [667, 4, 1, "", "minimum"], [188, 4, 1, "", "mish"], [1241, 4, 1, "", "moveaxis"], [1246, 4, 1, "", "msort"], [1702, 4, 1, "", "multi_head_attention"], [1980, 4, 1, "", "multinomial"], [672, 4, 1, "", "multiply"], [1252, 4, 1, "", "nan_to_num"], [1257, 4, 1, "", "nanmean"], [1262, 4, 1, "", "nanmedian"], [1267, 4, 1, "", "nansum"], [270, 4, 1, "", "native_array"], [677, 4, 1, "", "negative"], [1277, 4, 1, "", "nextafter"], [2022, 4, 1, "", "nonzero"], [682, 4, 1, "", "not_equal"], [275, 4, 1, "", "one_hot"], [283, 4, 1, "", "ones_like"], [1635, 4, 1, "", "optimizer_update"], [1785, 4, 1, "", "outer"], [1286, 4, 1, "", "pad"], [1895, 4, 1, "", "permute_dims"], [1790, 4, 1, "", "pinv"], [1292, 4, 1, "", "poisson"], [687, 4, 1, "", "positive"], [692, 4, 1, "", "pow"], [1297, 4, 1, "", "prelu"], [2096, 4, 1, "", "prod"], [1795, 4, 1, "", "qr"], [1302, 4, 1, "", "quantile"], [697, 4, 1, "", "rad2deg"], [1985, 4, 1, "", "randint"], [1990, 4, 1, "", "random_normal"], [1995, 4, 1, "", "random_uniform"], [1313, 4, 1, "", "real"], [702, 4, 1, "", "reciprocal"], [193, 4, 1, "", "relu"], [1318, 4, 1, "", "relu6"], [707, 4, 1, "", "remainder"], [1900, 4, 1, "", "repeat"], [1905, 4, 1, "", "reshape"], [394, 4, 1, "", "result_type"], [1910, 4, 1, "", "roll"], [1323, 4, 1, "", "rot90"], [712, 4, 1, "", "round"], [1707, 4, 1, "", "scaled_dot_product_attention"], [1545, 4, 1, "", "scatter_flat"], [1550, 4, 1, "", "scatter_nd"], [2059, 4, 1, "", "searchsorted"], [2001, 4, 1, "", "shuffle"], [198, 4, 1, "", "sigmoid"], [717, 4, 1, "", "sign"], [1330, 4, 1, "", "signbit"], [722, 4, 1, "", "sin"], [1335, 4, 1, "", "sinc"], [727, 4, 1, "", "sinh"], [1800, 4, 1, "", "slogdet"], [203, 4, 1, "", "softmax"], [208, 4, 1, "", "softplus"], [1805, 4, 1, "", "solve"], [2064, 4, 1, "", "sort"], [1864, 4, 1, "", "sparse_cross_entropy"], [1915, 4, 1, "", "split"], [732, 4, 1, "", "sqrt"], [737, 4, 1, "", "square"], [1920, 4, 1, "", "squeeze"], [1566, 4, 1, "", "stable_divide"], [1571, 4, 1, "", "stable_pow"], [1925, 4, 1, "", "stack"], [2101, 4, 1, "", "std"], [1641, 4, 1, "", "stop_gradient"], [743, 4, 1, "", "subtract"], [2106, 4, 1, "", "sum"], [1577, 4, 1, "", "supports_inplace_updates"], [1811, 4, 1, "", "svd"], [1816, 4, 1, "", "svdvals"], [1931, 4, 1, "", "swapaxes"], [1359, 4, 1, "", "take_along_axis"], [748, 4, 1, "", "tan"], [753, 4, 1, "", "tanh"], [1824, 4, 1, "", "tensorsolve"], [1364, 4, 1, "", "thresholded_relu"], [1936, 4, 1, "", "tile"], [438, 4, 1, "", "to_device"], [1583, 4, 1, "", "to_list"], [1588, 4, 1, "", "to_numpy"], [1593, 4, 1, "", "to_scalar"], [1369, 4, 1, "", "top_k"], [1829, 4, 1, "", "trace"], [1373, 4, 1, "", "trapz"], [289, 4, 1, "", "tril"], [294, 4, 1, "", "triu"], [758, 4, 1, "", "trunc"], [763, 4, 1, "", "trunc_divide"], [2034, 4, 1, "", "unique_all"], [2039, 4, 1, "", "unique_counts"], [2044, 4, 1, "", "unique_inverse"], [2049, 4, 1, "", "unique_values"], [1385, 4, 1, "", "unravel_index"], [1941, 4, 1, "", "unstack"], [1605, 4, 1, "", "value_is_nan"], [1834, 4, 1, "", "vander"], [2111, 4, 1, "", "var"], [1839, 4, 1, "", "vecdot"], [1844, 4, 1, "", "vector_norm"], [1849, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1395, 4, 1, "", "vsplit"], [1400, 4, 1, "", "vstack"], [2028, 4, 1, "", "where"], [1405, 4, 1, "", "xlogy"], [1946, 4, 1, "", "zero_pad"], [302, 4, 1, "", "zeros_like"], [1410, 4, 1, "", "zeta"]], "ivy.array.conversions": [[19, 4, 1, "", "args_to_ivy"], [20, 4, 1, "", "args_to_native"], [21, 4, 1, "", "to_ivy"], [22, 4, 1, "", "to_native"]], "ivy.array.creation": [[24, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[24, 2, 1, "", "asarray"], [24, 2, 1, "", "copy_array"], [24, 2, 1, "", "empty_like"], [24, 2, 1, "", "from_dlpack"], [24, 2, 1, "", "full_like"], [24, 2, 1, "", "linspace"], [24, 2, 1, "", "logspace"], [24, 2, 1, "", "meshgrid"], [24, 2, 1, "", "native_array"], [24, 2, 1, "", "one_hot"], [24, 2, 1, "", "ones_like"], [24, 2, 1, "", "tril"], [24, 2, 1, "", "triu"], [24, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[26, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[26, 2, 1, "", "astype"], [26, 2, 1, "", "broadcast_arrays"], [26, 2, 1, "", "broadcast_to"], [26, 2, 1, "", "can_cast"], [26, 2, 1, "", "dtype"], [26, 2, 1, "", "finfo"], [26, 2, 1, "", "iinfo"], [26, 2, 1, "", "is_bool_dtype"], [26, 2, 1, "", "is_float_dtype"], [26, 2, 1, "", "is_int_dtype"], [26, 2, 1, "", "is_uint_dtype"], [26, 2, 1, "", "result_type"]], "ivy.array.device": [[28, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[28, 2, 1, "", "dev"], [28, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[30, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[30, 2, 1, "", "abs"], [30, 2, 1, "", "acos"], [30, 2, 1, "", "acosh"], [30, 2, 1, "", "add"], [30, 2, 1, "", "asin"], [30, 2, 1, "", "asinh"], [30, 2, 1, "", "atan"], [30, 2, 1, "", "atan2"], [30, 2, 1, "", "atanh"], [30, 2, 1, "", "bitwise_and"], [30, 2, 1, "", "bitwise_invert"], [30, 2, 1, "", "bitwise_left_shift"], [30, 2, 1, "", "bitwise_or"], [30, 2, 1, "", "bitwise_right_shift"], [30, 2, 1, "", "bitwise_xor"], [30, 2, 1, "", "ceil"], [30, 2, 1, "", "cos"], [30, 2, 1, "", "cosh"], [30, 2, 1, "", "deg2rad"], [30, 2, 1, "", "divide"], [30, 2, 1, "", "equal"], [30, 2, 1, "", "erf"], [30, 2, 1, "", "exp"], [30, 2, 1, "", "expm1"], [30, 2, 1, "", "floor"], [30, 2, 1, "", "floor_divide"], [30, 2, 1, "", "greater"], [30, 2, 1, "", "greater_equal"], [30, 2, 1, "", "isfinite"], [30, 2, 1, "", "isinf"], [30, 2, 1, "", "isnan"], [30, 2, 1, "", "isreal"], [30, 2, 1, "", "less"], [30, 2, 1, "", "less_equal"], [30, 2, 1, "", "log"], [30, 2, 1, "", "log10"], [30, 2, 1, "", "log1p"], [30, 2, 1, "", "log2"], [30, 2, 1, "", "logaddexp"], [30, 2, 1, "", "logical_and"], [30, 2, 1, "", "logical_not"], [30, 2, 1, "", "logical_or"], [30, 2, 1, "", "logical_xor"], [30, 2, 1, "", "maximum"], [30, 2, 1, "", "minimum"], [30, 2, 1, "", "multiply"], [30, 2, 1, "", "negative"], [30, 2, 1, "", "not_equal"], [30, 2, 1, "", "positive"], [30, 2, 1, "", "pow"], [30, 2, 1, "", "rad2deg"], [30, 2, 1, "", "reciprocal"], [30, 2, 1, "", "remainder"], [30, 2, 1, "", "round"], [30, 2, 1, "", "sign"], [30, 2, 1, "", "sin"], [30, 2, 1, "", "sinh"], [30, 2, 1, "", "sqrt"], [30, 2, 1, "", "square"], [30, 2, 1, "", "subtract"], [30, 2, 1, "", "tan"], [30, 2, 1, "", "tanh"], [30, 2, 1, "", "trunc"], [30, 2, 1, "", "trunc_divide"]], "ivy.array.experimental": [[31, 1, 1, "", "ArrayWithActivationsExperimental"], [31, 1, 1, "", "ArrayWithConversionsExperimental"], [31, 1, 1, "", "ArrayWithCreationExperimental"], [31, 1, 1, "", "ArrayWithData_typeExperimental"], [31, 1, 1, "", "ArrayWithDeviceExperimental"], [31, 1, 1, "", "ArrayWithElementWiseExperimental"], [31, 1, 1, "", "ArrayWithGeneralExperimental"], [31, 1, 1, "", "ArrayWithGradientsExperimental"], [31, 1, 1, "", "ArrayWithImageExperimental"], [31, 1, 1, "", "ArrayWithLayersExperimental"], [31, 1, 1, "", "ArrayWithLinearAlgebraExperimental"], [31, 1, 1, "", "ArrayWithLossesExperimental"], [31, 1, 1, "", "ArrayWithManipulationExperimental"], [31, 1, 1, "", "ArrayWithNormsExperimental"], [31, 1, 1, "", "ArrayWithRandomExperimental"], [31, 1, 1, "", "ArrayWithSearchingExperimental"], [31, 1, 1, "", "ArrayWithSetExperimental"], [31, 1, 1, "", "ArrayWithSortingExperimental"], [31, 1, 1, "", "ArrayWithStatisticalExperimental"], [31, 1, 1, "", "ArrayWithUtilityExperimental"]], "ivy.array.experimental.ArrayWithActivationsExperimental": [[31, 2, 1, "", "logit"], [31, 2, 1, "", "prelu"], [31, 2, 1, "", "relu6"], [31, 2, 1, "", "thresholded_relu"]], "ivy.array.experimental.ArrayWithCreationExperimental": [[31, 2, 1, "", "eye_like"]], "ivy.array.experimental.ArrayWithElementWiseExperimental": [[31, 2, 1, "", "allclose"], [31, 2, 1, "", "angle"], [31, 2, 1, "", "binarizer"], [31, 2, 1, "", "conj"], [31, 2, 1, "", "copysign"], [31, 2, 1, "", "count_nonzero"], [31, 2, 1, "", "diff"], [31, 2, 1, "", "exp2"], [31, 2, 1, "", "fix"], [31, 2, 1, "", "float_power"], [31, 2, 1, "", "fmax"], [31, 2, 1, "", "fmin"], [31, 2, 1, "", "fmod"], [31, 2, 1, "", "gcd"], [31, 2, 1, "", "gradient"], [31, 2, 1, "", "hypot"], [31, 2, 1, "", "imag"], [31, 2, 1, "", "isclose"], [31, 2, 1, "", "lcm"], [31, 2, 1, "", "ldexp"], [31, 2, 1, "", "logaddexp2"], [31, 2, 1, "", "nan_to_num"], [31, 2, 1, "", "nansum"], [31, 2, 1, "", "nextafter"], [31, 2, 1, "", "real"], [31, 2, 1, "", "signbit"], [31, 2, 1, "", "sinc"], [31, 2, 1, "", "trapz"], [31, 2, 1, "", "xlogy"], [31, 2, 1, "", "zeta"]], "ivy.array.experimental.ArrayWithGeneralExperimental": [[31, 2, 1, "", "isin"]], "ivy.array.experimental.ArrayWithLayersExperimental": [[31, 2, 1, "", "avg_pool1d"], [31, 2, 1, "", "avg_pool2d"], [31, 2, 1, "", "avg_pool3d"], [31, 2, 1, "", "dct"], [31, 2, 1, "", "dft"], [31, 2, 1, "", "embedding"], [31, 2, 1, "", "fft"], [31, 2, 1, "", "ifft"], [31, 2, 1, "", "interpolate"], [31, 2, 1, "", "max_pool1d"], [31, 2, 1, "", "max_pool2d"], [31, 2, 1, "", "max_pool3d"]], "ivy.array.experimental.ArrayWithLinearAlgebraExperimental": [[31, 2, 1, "", "adjoint"], [31, 2, 1, "", "diagflat"], [31, 2, 1, "", "eig"], [31, 2, 1, "", "eigh_tridiagonal"], [31, 2, 1, "", "eigvals"], [31, 2, 1, "", "kron"], [31, 2, 1, "", "matrix_exp"]], "ivy.array.experimental.ArrayWithManipulationExperimental": [[31, 2, 1, "", "atleast_1d"], [31, 2, 1, "", "atleast_2d"], [31, 2, 1, "", "atleast_3d"], [31, 2, 1, "", "dsplit"], [31, 2, 1, "", "dstack"], [31, 2, 1, "", "expand"], [31, 2, 1, "", "flatten"], [31, 2, 1, "", "fliplr"], [31, 2, 1, "", "flipud"], [31, 2, 1, "", "heaviside"], [31, 2, 1, "", "hsplit"], [31, 2, 1, "", "hstack"], [31, 2, 1, "", "i0"], [31, 2, 1, "", "moveaxis"], [31, 2, 1, "", "pad"], [31, 2, 1, "", "rot90"], [31, 2, 1, "", "take_along_axis"], [31, 2, 1, "", "top_k"], [31, 2, 1, "", "vsplit"], [31, 2, 1, "", "vstack"]], "ivy.array.experimental.ArrayWithNormsExperimental": [[31, 2, 1, "", "instance_norm"], [31, 2, 1, "", "l2_normalize"], [31, 2, 1, "", "lp_normalize"]], "ivy.array.experimental.ArrayWithRandomExperimental": [[31, 2, 1, "", "bernoulli"], [31, 2, 1, "", "beta"], [31, 2, 1, "", "dirichlet"], [31, 2, 1, "", "gamma"], [31, 2, 1, "", "poisson"]], "ivy.array.experimental.ArrayWithSortingExperimental": [[31, 2, 1, "", "lexsort"], [31, 2, 1, "", "msort"]], "ivy.array.experimental.ArrayWithStatisticalExperimental": [[31, 2, 1, "", "bincount"], [31, 2, 1, "", "corrcoef"], [31, 2, 1, "", "median"], [31, 2, 1, "", "nanmean"], [31, 2, 1, "", "nanmedian"], [31, 2, 1, "", "quantile"], [31, 2, 1, "", "unravel_index"]], "ivy.array.general": [[33, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[33, 2, 1, "", "all_equal"], [33, 2, 1, "", "array_equal"], [33, 2, 1, "", "assert_supports_inplace"], [33, 2, 1, "", "clip_matrix_norm"], [33, 2, 1, "", "clip_vector_norm"], [33, 2, 1, "", "default"], [33, 2, 1, "", "einops_rearrange"], [33, 2, 1, "", "einops_reduce"], [33, 2, 1, "", "einops_repeat"], [33, 2, 1, "", "exists"], [33, 2, 1, "", "fourier_encode"], [33, 2, 1, "", "gather"], [33, 2, 1, "", "gather_nd"], [33, 2, 1, "", "get_num_dims"], [33, 2, 1, "", "has_nans"], [33, 2, 1, "", "inplace_decrement"], [33, 2, 1, "", "inplace_increment"], [33, 2, 1, "", "inplace_update"], [33, 2, 1, "", "is_array"], [33, 2, 1, "", "is_ivy_array"], [33, 2, 1, "", "is_ivy_container"], [33, 2, 1, "", "is_native_array"], [33, 2, 1, "", "scatter_flat"], [33, 2, 1, "", "scatter_nd"], [33, 2, 1, "", "stable_divide"], [33, 2, 1, "", "stable_pow"], [33, 2, 1, "", "supports_inplace_updates"], [33, 2, 1, "", "to_list"], [33, 2, 1, "", "to_numpy"], [33, 2, 1, "", "to_scalar"], [33, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[35, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[35, 2, 1, "", "adam_step"], [35, 2, 1, "", "adam_update"], [35, 2, 1, "", "gradient_descent_update"], [35, 2, 1, "", "lamb_update"], [35, 2, 1, "", "lars_update"], [35, 2, 1, "", "optimizer_update"], [35, 2, 1, "", "stop_gradient"]], "ivy.array.image": [[37, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[39, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[39, 2, 1, "", "conv1d"], [39, 2, 1, "", "conv1d_transpose"], [39, 2, 1, "", "conv2d"], [39, 2, 1, "", "conv2d_transpose"], [39, 2, 1, "", "conv3d"], [39, 2, 1, "", "conv3d_transpose"], [39, 2, 1, "", "depthwise_conv2d"], [39, 2, 1, "", "dropout"], [39, 2, 1, "", "dropout1d"], [39, 2, 1, "", "dropout3d"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "lstm_update"], [39, 2, 1, "", "multi_head_attention"], [39, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linear_algebra": [[41, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[41, 2, 1, "", "cholesky"], [41, 2, 1, "", "cross"], [41, 2, 1, "", "det"], [41, 2, 1, "", "diag"], [41, 2, 1, "", "diagonal"], [41, 2, 1, "", "eig"], [41, 2, 1, "", "eigh"], [41, 2, 1, "", "eigvalsh"], [41, 2, 1, "", "inner"], [41, 2, 1, "", "inv"], [41, 2, 1, "", "matmul"], [41, 2, 1, "", "matrix_norm"], [41, 2, 1, "", "matrix_power"], [41, 2, 1, "", "matrix_rank"], [41, 2, 1, "", "matrix_transpose"], [41, 2, 1, "", "outer"], [41, 2, 1, "", "pinv"], [41, 2, 1, "", "qr"], [41, 2, 1, "", "slogdet"], [41, 2, 1, "", "solve"], [41, 2, 1, "", "svd"], [41, 2, 1, "", "svdvals"], [41, 2, 1, "", "tensordot"], [41, 2, 1, "", "tensorsolve"], [41, 2, 1, "", "trace"], [41, 2, 1, "", "vander"], [41, 2, 1, "", "vecdot"], [41, 2, 1, "", "vector_norm"], [41, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[43, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[43, 2, 1, "", "binary_cross_entropy"], [43, 2, 1, "", "cross_entropy"], [43, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[45, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[45, 2, 1, "", "clip"], [45, 2, 1, "", "concat"], [45, 2, 1, "", "constant_pad"], [45, 2, 1, "", "expand_dims"], [45, 2, 1, "", "flip"], [45, 2, 1, "", "permute_dims"], [45, 2, 1, "", "repeat"], [45, 2, 1, "", "reshape"], [45, 2, 1, "", "roll"], [45, 2, 1, "", "split"], [45, 2, 1, "", "squeeze"], [45, 2, 1, "", "stack"], [45, 2, 1, "", "swapaxes"], [45, 2, 1, "", "tile"], [45, 2, 1, "", "unstack"], [45, 2, 1, "", "view"], [45, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[47, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[47, 2, 1, "", "layer_norm"]], "ivy.array.random": [[49, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[49, 2, 1, "", "multinomial"], [49, 2, 1, "", "randint"], [49, 2, 1, "", "random_normal"], [49, 2, 1, "", "random_uniform"], [49, 2, 1, "", "shuffle"]], "ivy.array.searching": [[51, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[51, 2, 1, "", "argmax"], [51, 2, 1, "", "argmin"], [51, 2, 1, "", "argwhere"], [51, 2, 1, "", "nonzero"], [51, 2, 1, "", "where"]], "ivy.array.set": [[53, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[53, 2, 1, "", "unique_all"], [53, 2, 1, "", "unique_counts"], [53, 2, 1, "", "unique_inverse"], [53, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[55, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[55, 2, 1, "", "argsort"], [55, 2, 1, "", "searchsorted"], [55, 2, 1, "", "sort"]], "ivy.array.statistical": [[57, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[57, 2, 1, "", "cumprod"], [57, 2, 1, "", "cumsum"], [57, 2, 1, "", "einsum"], [57, 2, 1, "", "max"], [57, 2, 1, "", "mean"], [57, 2, 1, "", "min"], [57, 2, 1, "", "prod"], [57, 2, 1, "", "std"], [57, 2, 1, "", "sum"], [57, 2, 1, "", "var"]], "ivy.array.utility": [[59, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[59, 2, 1, "", "all"], [59, 2, 1, "", "any"]], "ivy.array.wrapping": [[61, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy.container": [[63, 0, 0, "-", "activations"], [65, 0, 0, "-", "base"], [67, 0, 0, "-", "container"], [69, 0, 0, "-", "conversions"], [71, 0, 0, "-", "creation"], [73, 0, 0, "-", "data_type"], [75, 0, 0, "-", "device"], [77, 0, 0, "-", "elementwise"], [80, 0, 0, "-", "general"], [82, 0, 0, "-", "gradients"], [84, 0, 0, "-", "image"], [86, 0, 0, "-", "layers"], [88, 0, 0, "-", "linear_algebra"], [90, 0, 0, "-", "losses"], [92, 0, 0, "-", "manipulation"], [94, 0, 0, "-", "norms"], [96, 0, 0, "-", "random"], [98, 0, 0, "-", "searching"], [100, 0, 0, "-", "set"], [102, 0, 0, "-", "sorting"], [104, 0, 0, "-", "statistical"], [106, 0, 0, "-", "utility"], [108, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[64, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[64, 2, 1, "", "gelu"], [64, 2, 1, "", "leaky_relu"], [64, 2, 1, "", "log_softmax"], [64, 2, 1, "", "mish"], [64, 2, 1, "", "relu"], [64, 2, 1, "", "sigmoid"], [64, 2, 1, "", "softmax"], [64, 2, 1, "", "softplus"], [64, 2, 1, "", "static_gelu"], [64, 2, 1, "", "static_leaky_relu"], [64, 2, 1, "", "static_log_softmax"], [64, 2, 1, "", "static_mish"], [64, 2, 1, "", "static_relu"], [64, 2, 1, "", "static_sigmoid"], [64, 2, 1, "", "static_softmax"], [64, 2, 1, "", "static_softplus"]], "ivy.container.base": [[66, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[66, 2, 1, "", "__getitem__"], [66, 2, 1, "", "__init__"], [66, 2, 1, "", "__setitem__"], [66, 2, 1, "", "cont_all_false"], [66, 2, 1, "", "cont_all_key_chains"], [66, 2, 1, "", "cont_all_true"], [66, 2, 1, "", "cont_as_bools"], [66, 2, 1, "", "cont_assert_contains_sub_container"], [66, 2, 1, "", "cont_assert_contains_sub_structure"], [66, 2, 1, "", "cont_assert_identical"], [66, 2, 1, "", "cont_assert_identical_structure"], [66, 2, 1, "", "cont_at_key_chain"], [66, 2, 1, "", "cont_at_key_chains"], [66, 2, 1, "", "cont_at_keys"], [66, 2, 1, "", "cont_combine"], [66, 2, 1, "", "cont_common_key_chains"], [66, 3, 1, "", "cont_config"], [66, 2, 1, "", "cont_contains_sub_container"], [66, 2, 1, "", "cont_contains_sub_structure"], [66, 2, 1, "", "cont_copy"], [66, 2, 1, "", "cont_create_if_absent"], [66, 2, 1, "", "cont_cutoff_at_depth"], [66, 2, 1, "", "cont_cutoff_at_height"], [66, 2, 1, "", "cont_deep_copy"], [66, 3, 1, "", "cont_dev"], [66, 3, 1, "", "cont_dev_str"], [66, 2, 1, "", "cont_diff"], [66, 2, 1, "", "cont_duplicate_array_keychains"], [66, 2, 1, "", "cont_find_sub_container"], [66, 2, 1, "", "cont_find_sub_structure"], [66, 2, 1, "", "cont_flatten_key_chain"], [66, 2, 1, "", "cont_flatten_key_chains"], [66, 2, 1, "", "cont_format_key_chains"], [66, 2, 1, "", "cont_from_disk_as_hdf5"], [66, 2, 1, "", "cont_from_disk_as_json"], [66, 2, 1, "", "cont_from_disk_as_pickled"], [66, 2, 1, "", "cont_from_flat_list"], [66, 2, 1, "", "cont_handle_inplace"], [66, 2, 1, "", "cont_has_key"], [66, 2, 1, "", "cont_has_key_chain"], [66, 2, 1, "", "cont_identical"], [66, 2, 1, "", "cont_identical_array_shapes"], [66, 2, 1, "", "cont_identical_configs"], [66, 2, 1, "", "cont_identical_structure"], [66, 2, 1, "", "cont_if_exists"], [66, 2, 1, "", "cont_inplace_update"], [66, 3, 1, "", "cont_ivy"], [66, 2, 1, "", "cont_key_chains_containing"], [66, 2, 1, "", "cont_list_join"], [66, 2, 1, "", "cont_list_stack"], [66, 2, 1, "", "cont_map"], [66, 2, 1, "", "cont_map_sub_conts"], [66, 3, 1, "", "cont_max_depth"], [66, 2, 1, "", "cont_multi_map"], [66, 2, 1, "", "cont_multi_map_in_function"], [66, 2, 1, "", "cont_num_arrays"], [66, 2, 1, "", "cont_overwrite_at_key_chain"], [66, 2, 1, "", "cont_overwrite_at_key_chains"], [66, 2, 1, "", "cont_prune_empty"], [66, 2, 1, "", "cont_prune_key_chain"], [66, 2, 1, "", "cont_prune_key_chains"], [66, 2, 1, "", "cont_prune_key_from_key_chains"], [66, 2, 1, "", "cont_prune_keys"], [66, 2, 1, "", "cont_prune_keys_from_key_chains"], [66, 2, 1, "", "cont_reduce"], [66, 2, 1, "", "cont_remove_key_length_limit"], [66, 2, 1, "", "cont_remove_print_limit"], [66, 2, 1, "", "cont_reshape_like"], [66, 2, 1, "", "cont_restructure"], [66, 2, 1, "", "cont_restructure_key_chains"], [66, 2, 1, "", "cont_set_at_key_chain"], [66, 2, 1, "", "cont_set_at_key_chains"], [66, 2, 1, "", "cont_set_at_keys"], [66, 3, 1, "", "cont_shape"], [66, 3, 1, "", "cont_shapes"], [66, 2, 1, "", "cont_show"], [66, 2, 1, "", "cont_show_sub_container"], [66, 2, 1, "", "cont_size_ordered_arrays"], [66, 2, 1, "", "cont_slice_keys"], [66, 2, 1, "", "cont_slice_via_key"], [66, 2, 1, "", "cont_sort_by_key"], [66, 2, 1, "", "cont_structural_diff"], [66, 2, 1, "", "cont_to_dict"], [66, 2, 1, "", "cont_to_disk_as_hdf5"], [66, 2, 1, "", "cont_to_disk_as_json"], [66, 2, 1, "", "cont_to_disk_as_pickled"], [66, 2, 1, "", "cont_to_flat_list"], [66, 2, 1, "", "cont_to_iterator"], [66, 2, 1, "", "cont_to_iterator_keys"], [66, 2, 1, "", "cont_to_iterator_values"], [66, 2, 1, "", "cont_to_jsonable"], [66, 2, 1, "", "cont_to_nested_list"], [66, 2, 1, "", "cont_to_raw"], [66, 2, 1, "", "cont_trim_key"], [66, 2, 1, "", "cont_try_kc"], [66, 2, 1, "", "cont_unify"], [66, 2, 1, "", "cont_unstack_conts"], [66, 2, 1, "", "cont_update_config"], [66, 2, 1, "", "cont_with_default_key_color"], [66, 2, 1, "", "cont_with_entries_as_lists"], [66, 2, 1, "", "cont_with_ivy_backend"], [66, 2, 1, "", "cont_with_key_length_limit"], [66, 2, 1, "", "cont_with_print_indent"], [66, 2, 1, "", "cont_with_print_limit"], [66, 2, 1, "", "cont_with_print_line_spacing"], [66, 3, 1, "", "dynamic_backend"], [66, 2, 1, "", "h5_file_size"], [66, 2, 1, "", "shuffle_h5_file"], [66, 2, 1, "", "split_conts"]], "ivy.container.container": [[68, 1, 1, "", "Container"]], "ivy.container.container.Container": [[68, 2, 1, "", "__abs__"], [68, 2, 1, "", "__add__"], [68, 2, 1, "", "__eq__"], [68, 2, 1, "", "__ge__"], [68, 2, 1, "", "__gt__"], [68, 2, 1, "", "__init__"], [68, 2, 1, "", "__le__"], [68, 2, 1, "", "__lt__"], [68, 2, 1, "", "__ne__"], [68, 2, 1, "", "__pow__"], [68, 2, 1, "", "__radd__"], [68, 2, 1, "", "__rrshift__"], [68, 2, 1, "", "__rshift__"], [68, 2, 1, "", "__rsub__"], [68, 2, 1, "", "__sub__"], [68, 2, 1, "", "__truediv__"], [68, 2, 1, "", "__xor__"], [68, 2, 1, "", "arange"], [68, 2, 1, "", "arg_info"], [68, 2, 1, "", "arg_names"], [68, 2, 1, "", "array"], [68, 2, 1, "", "as_ivy_dev"], [68, 2, 1, "", "as_ivy_dtype"], [68, 2, 1, "", "as_native_dev"], [68, 2, 1, "", "as_native_dtype"], [68, 2, 1, "", "asarray"], [68, 2, 1, "", "asarray_handle_nestable"], [68, 2, 1, "", "asarray_infer_device"], [68, 2, 1, "", "asarray_to_native_arrays_and_back"], [68, 2, 1, "", "cache_fn"], [68, 2, 1, "", "check_float"], [68, 2, 1, "", "clear_mem_on_dev"], [68, 2, 1, "", "closest_valid_dtype"], [68, 2, 1, "", "container_types"], [68, 2, 1, "", "conv"], [68, 2, 1, "", "conv_general_dilated"], [68, 2, 1, "", "conv_general_transpose"], [68, 2, 1, "", "copy_array"], [68, 2, 1, "", "current_backend"], [68, 2, 1, "", "current_backend_str"], [68, 2, 1, "", "default"], [68, 2, 1, "", "default_complex_dtype"], [68, 2, 1, "", "default_device"], [68, 2, 1, "", "default_dtype"], [68, 2, 1, "", "default_float_dtype"], [68, 2, 1, "", "default_int_dtype"], [68, 2, 1, "", "default_uint_dtype"], [68, 2, 1, "", "deserialize"], [68, 2, 1, "", "dev_util"], [68, 2, 1, "", "dtype_bits"], [68, 2, 1, "", "empty"], [68, 2, 1, "", "execute_with_gradients"], [68, 2, 1, "", "exists"], [68, 2, 1, "", "eye"], [68, 2, 1, "", "full"], [68, 2, 1, "", "function_supported_devices"], [68, 2, 1, "", "function_supported_devices_and_dtypes"], [68, 2, 1, "", "function_supported_dtypes"], [68, 2, 1, "", "function_unsupported_devices"], [68, 2, 1, "", "function_unsupported_devices_and_dtypes"], [68, 2, 1, "", "function_unsupported_dtypes"], [68, 2, 1, "", "get_all_arrays_in_memory"], [68, 2, 1, "", "get_all_ivy_arrays_on_dev"], [68, 2, 1, "", "get_array_mode"], [68, 2, 1, "", "get_exception_trace_mode"], [68, 2, 1, "", "get_item"], [68, 2, 1, "", "get_min_base"], [68, 2, 1, "", "get_min_denominator"], [68, 2, 1, "", "get_nestable_mode"], [68, 2, 1, "", "get_queue_timeout"], [68, 2, 1, "", "get_referrers_recursive"], [68, 2, 1, "", "get_show_func_wrapper_trace_mode"], [68, 2, 1, "", "get_tmp_dir"], [68, 2, 1, "", "gpu_is_available"], [68, 2, 1, "", "grad"], [68, 2, 1, "", "handle_array_function"], [68, 2, 1, "", "handle_array_like_without_promotion"], [68, 2, 1, "", "handle_exceptions"], [68, 2, 1, "", "handle_nestable"], [68, 2, 1, "", "handle_out_argument"], [68, 2, 1, "", "handle_view"], [68, 2, 1, "", "handle_view_indexing"], [68, 2, 1, "", "infer_default_dtype"], [68, 2, 1, "", "infer_device"], [68, 2, 1, "", "infer_dtype"], [68, 2, 1, "", "inplace_arrays_supported"], [68, 2, 1, "", "inplace_variables_supported"], [68, 2, 1, "", "inputs_to_ivy_arrays"], [68, 2, 1, "", "inputs_to_native_arrays"], [68, 2, 1, "", "integer_arrays_to_float"], [68, 2, 1, "", "invalid_dtype"], [68, 2, 1, "", "is_ivy_container"], [68, 2, 1, "", "isscalar"], [68, 2, 1, "", "jac"], [68, 2, 1, "", "lu_factor"], [68, 2, 1, "", "match_kwargs"], [68, 2, 1, "", "multiprocessing"], [68, 2, 1, "", "normalize_axis_tuple"], [68, 2, 1, "", "num_arrays_in_memory"], [68, 2, 1, "", "num_cpu_cores"], [68, 2, 1, "", "num_gpus"], [68, 2, 1, "", "num_ivy_arrays_on_dev"], [68, 2, 1, "", "ones"], [68, 2, 1, "", "outputs_to_ivy_arrays"], [68, 2, 1, "", "percent_used_mem_on_dev"], [68, 2, 1, "", "print_all_arrays_in_memory"], [68, 2, 1, "", "print_all_ivy_arrays_on_dev"], [68, 2, 1, "", "promote_types"], [68, 2, 1, "", "promote_types_of_inputs"], [68, 2, 1, "", "seed"], [68, 2, 1, "", "set_array_mode"], [68, 2, 1, "", "set_default_complex_dtype"], [68, 2, 1, "", "set_default_device"], [68, 2, 1, "", "set_default_dtype"], [68, 2, 1, "", "set_default_float_dtype"], [68, 2, 1, "", "set_default_int_dtype"], [68, 2, 1, "", "set_default_uint_dtype"], [68, 2, 1, "", "set_exception_trace_mode"], [68, 2, 1, "", "set_min_base"], [68, 2, 1, "", "set_min_denominator"], [68, 2, 1, "", "set_nestable_mode"], [68, 2, 1, "", "set_queue_timeout"], [68, 2, 1, "", "set_shape_array_mode"], [68, 2, 1, "", "set_show_func_wrapper_trace_mode"], [68, 2, 1, "", "set_split_factor"], [68, 2, 1, "", "set_tmp_dir"], [68, 2, 1, "", "set_with_grads"], [68, 2, 1, "", "shape_array_mode"], [68, 2, 1, "", "split_factor"], [68, 2, 1, "", "split_func_call"], [68, 2, 1, "", "static_adam_step"], [68, 2, 1, "", "static_adam_update"], [68, 2, 1, "", "static_arg_info"], [68, 2, 1, "", "static_arg_names"], [68, 2, 1, "", "static_array"], [68, 2, 1, "", "static_as_ivy_dev"], [68, 2, 1, "", "static_as_ivy_dtype"], [68, 2, 1, "", "static_as_native_dev"], [68, 2, 1, "", "static_as_native_dtype"], [68, 2, 1, "", "static_asarray_handle_nestable"], [68, 2, 1, "", "static_asarray_infer_device"], [68, 2, 1, "", "static_asarray_to_native_arrays_and_back"], [68, 2, 1, "", "static_cache_fn"], [68, 2, 1, "", "static_check_float"], [68, 2, 1, "", "static_clear_mem_on_dev"], [68, 2, 1, "", "static_closest_valid_dtype"], [68, 2, 1, "", "static_container_types"], [68, 2, 1, "", "static_conv"], [68, 2, 1, "", "static_conv_general_dilated"], [68, 2, 1, "", "static_conv_general_transpose"], [68, 2, 1, "", "static_copy_array"], [68, 2, 1, "", "static_current_backend"], [68, 2, 1, "", "static_current_backend_str"], [68, 2, 1, "", "static_default"], [68, 2, 1, "", "static_default_device"], [68, 2, 1, "", "static_default_dtype"], [68, 2, 1, "", "static_default_int_dtype"], [68, 2, 1, "", "static_default_uint_dtype"], [68, 2, 1, "", "static_deserialize"], [68, 2, 1, "", "static_dev_util"], [68, 2, 1, "", "static_dtype_bits"], [68, 2, 1, "", "static_einsum"], [68, 2, 1, "", "static_empty"], [68, 2, 1, "", "static_execute_with_gradients"], [68, 2, 1, "", "static_exists"], [68, 2, 1, "", "static_full"], [68, 2, 1, "", "static_function_supported_devices"], [68, 2, 1, "", "static_function_supported_devices_and_dtypes"], [68, 2, 1, "", "static_function_unsupported_devices"], [68, 2, 1, "", "static_function_unsupported_devices_and_dtypes"], [68, 2, 1, "", "static_get"], [68, 2, 1, "", "static_get_all_arrays_in_memory"], [68, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [68, 2, 1, "", "static_get_array_mode"], [68, 2, 1, "", "static_get_exception_trace_mode"], [68, 2, 1, "", "static_get_item"], [68, 2, 1, "", "static_get_min_base"], [68, 2, 1, "", "static_get_min_denominator"], [68, 2, 1, "", "static_get_nestable_mode"], [68, 2, 1, "", "static_get_queue_timeout"], [68, 2, 1, "", "static_get_referrers_recursive"], [68, 2, 1, "", "static_get_show_func_wrapper_trace_mode"], [68, 2, 1, "", "static_get_tmp_dir"], [68, 2, 1, "", "static_gpu_is_available"], [68, 2, 1, "", "static_grad"], [68, 2, 1, "", "static_gradient_descent_update"], [68, 2, 1, "", "static_handle_array_function"], [68, 2, 1, "", "static_handle_array_like_without_promotion"], [68, 2, 1, "", "static_handle_exceptions"], [68, 2, 1, "", "static_handle_nestable"], [68, 2, 1, "", "static_handle_out_argument"], [68, 2, 1, "", "static_handle_view"], [68, 2, 1, "", "static_handle_view_indexing"], [68, 2, 1, "", "static_infer_default_dtype"], [68, 2, 1, "", "static_infer_device"], [68, 2, 1, "", "static_infer_dtype"], [68, 2, 1, "", "static_inplace_arrays_supported"], [68, 2, 1, "", "static_inplace_variables_supported"], [68, 2, 1, "", "static_inputs_to_ivy_arrays"], [68, 2, 1, "", "static_inputs_to_native_arrays"], [68, 2, 1, "", "static_integer_arrays_to_float"], [68, 2, 1, "", "static_invalid_dtype"], [68, 2, 1, "", "static_is_ivy_container"], [68, 2, 1, "", "static_isscalar"], [68, 2, 1, "", "static_jac"], [68, 2, 1, "", "static_lamb_update"], [68, 2, 1, "", "static_lars_update"], [68, 2, 1, "", "static_layer_norm"], [68, 2, 1, "", "static_lu_factor"], [68, 2, 1, "", "static_match_kwargs"], [68, 2, 1, "", "static_max"], [68, 2, 1, "", "static_mean"], [68, 2, 1, "", "static_min"], [68, 2, 1, "", "static_multiprocessing"], [68, 2, 1, "", "static_normalize_axis_tuple"], [68, 2, 1, "", "static_num_arrays_in_memory"], [68, 2, 1, "", "static_num_cpu_cores"], [68, 2, 1, "", "static_num_gpus"], [68, 2, 1, "", "static_num_ivy_arrays_on_dev"], [68, 2, 1, "", "static_optimizer_update"], [68, 2, 1, "", "static_outputs_to_ivy_arrays"], [68, 2, 1, "", "static_percent_used_mem_on_dev"], [68, 2, 1, "", "static_print_all_arrays_in_memory"], [68, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [68, 2, 1, "", "static_promote_types"], [68, 2, 1, "", "static_promote_types_of_inputs"], [68, 2, 1, "", "static_seed"], [68, 2, 1, "", "static_set_array_mode"], [68, 2, 1, "", "static_set_default_complex_dtype"], [68, 2, 1, "", "static_set_default_device"], [68, 2, 1, "", "static_set_default_dtype"], [68, 2, 1, "", "static_set_default_float_dtype"], [68, 2, 1, "", "static_set_default_int_dtype"], [68, 2, 1, "", "static_set_default_uint_dtype"], [68, 2, 1, "", "static_set_exception_trace_mode"], [68, 2, 1, "", "static_set_min_base"], [68, 2, 1, "", "static_set_min_denominator"], [68, 2, 1, "", "static_set_nestable_mode"], [68, 2, 1, "", "static_set_queue_timeout"], [68, 2, 1, "", "static_set_shape_array_mode"], [68, 2, 1, "", "static_set_show_func_wrapper_trace_mode"], [68, 2, 1, "", "static_set_split_factor"], [68, 2, 1, "", "static_set_tmp_dir"], [68, 2, 1, "", "static_set_with_grads"], [68, 2, 1, "", "static_shape"], [68, 2, 1, "", "static_shape_array_mode"], [68, 2, 1, "", "static_split_factor"], [68, 2, 1, "", "static_split_func_call"], [68, 2, 1, "", "static_std"], [68, 2, 1, "", "static_tensorsolve"], [68, 2, 1, "", "static_to_ivy_shape"], [68, 2, 1, "", "static_to_native_arrays_and_back"], [68, 2, 1, "", "static_to_native_shape"], [68, 2, 1, "", "static_total_mem_on_dev"], [68, 2, 1, "", "static_tpu_is_available"], [68, 2, 1, "", "static_try_else_none"], [68, 2, 1, "", "static_type_promote_arrays"], [68, 2, 1, "", "static_unset_array_mode"], [68, 2, 1, "", "static_unset_default_complex_dtype"], [68, 2, 1, "", "static_unset_default_device"], [68, 2, 1, "", "static_unset_default_dtype"], [68, 2, 1, "", "static_unset_default_float_dtype"], [68, 2, 1, "", "static_unset_default_int_dtype"], [68, 2, 1, "", "static_unset_default_uint_dtype"], [68, 2, 1, "", "static_unset_exception_trace_mode"], [68, 2, 1, "", "static_unset_nestable_mode"], [68, 2, 1, "", "static_unset_queue_timeout"], [68, 2, 1, "", "static_unset_shape_array_mode"], [68, 2, 1, "", "static_unset_show_func_wrapper_trace_mode"], [68, 2, 1, "", "static_unset_with_grads"], [68, 2, 1, "", "static_used_mem_on_dev"], [68, 2, 1, "", "static_valid_dtype"], [68, 2, 1, "", "static_value_and_grad"], [68, 2, 1, "", "static_vmap"], [68, 2, 1, "", "static_with_grads"], [68, 2, 1, "", "static_wraps"], [68, 2, 1, "", "to_ivy_shape"], [68, 2, 1, "", "to_native_arrays_and_back"], [68, 2, 1, "", "to_native_shape"], [68, 2, 1, "", "total_mem_on_dev"], [68, 2, 1, "", "tpu_is_available"], [68, 2, 1, "", "try_else_none"], [68, 2, 1, "", "type_promote_arrays"], [68, 2, 1, "", "unset_array_mode"], [68, 2, 1, "", "unset_default_complex_dtype"], [68, 2, 1, "", "unset_default_device"], [68, 2, 1, "", "unset_default_dtype"], [68, 2, 1, "", "unset_default_float_dtype"], [68, 2, 1, "", "unset_default_int_dtype"], [68, 2, 1, "", "unset_default_uint_dtype"], [68, 2, 1, "", "unset_exception_trace_mode"], [68, 2, 1, "", "unset_nestable_mode"], [68, 2, 1, "", "unset_queue_timeout"], [68, 2, 1, "", "unset_shape_array_mode"], [68, 2, 1, "", "unset_show_func_wrapper_trace_mode"], [68, 2, 1, "", "unset_with_grads"], [68, 2, 1, "", "used_mem_on_dev"], [68, 2, 1, "", "valid_dtype"], [68, 2, 1, "", "value_and_grad"], [68, 2, 1, "", "vmap"], [68, 2, 1, "", "with_grads"], [68, 2, 1, "", "wraps"], [68, 2, 1, "", "zeros"]], "ivy.container.container_methods": [[448, 4, 1, "", "abs"], [453, 4, 1, "", "acos"], [458, 4, 1, "", "acosh"], [1613, 4, 1, "", "adam_step"], [1617, 4, 1, "", "adam_update"], [463, 4, 1, "", "add"], [776, 4, 1, "", "adjoint"], [2117, 4, 1, "", "all"], [1417, 4, 1, "", "all_equal"], [781, 4, 1, "", "allclose"], [786, 4, 1, "", "angle"], [2122, 4, 1, "", "any"], [2008, 4, 1, "", "argmax"], [2013, 4, 1, "", "argmin"], [2055, 4, 1, "", "argsort"], [2018, 4, 1, "", "argwhere"], [1424, 4, 1, "", "array_equal"], [468, 4, 1, "", "asin"], [473, 4, 1, "", "asinh"], [1429, 4, 1, "", "assert_supports_inplace"], [315, 4, 1, "", "astype"], [478, 4, 1, "", "atan"], [483, 4, 1, "", "atan2"], [488, 4, 1, "", "atanh"], [791, 4, 1, "", "atleast_1d"], [796, 4, 1, "", "atleast_2d"], [801, 4, 1, "", "atleast_3d"], [806, 4, 1, "", "avg_pool1d"], [811, 4, 1, "", "avg_pool2d"], [816, 4, 1, "", "avg_pool3d"], [821, 4, 1, "", "bernoulli"], [826, 4, 1, "", "beta"], [831, 4, 1, "", "binarizer"], [1855, 4, 1, "", "binary_cross_entropy"], [835, 4, 1, "", "binary_cross_entropy_with_logits"], [840, 4, 1, "", "bincount"], [493, 4, 1, "", "bitwise_and"], [498, 4, 1, "", "bitwise_invert"], [503, 4, 1, "", "bitwise_left_shift"], [508, 4, 1, "", "bitwise_or"], [513, 4, 1, "", "bitwise_right_shift"], [518, 4, 1, "", "bitwise_xor"], [320, 4, 1, "", "broadcast_arrays"], [845, 4, 1, "", "broadcast_shapes"], [325, 4, 1, "", "broadcast_to"], [330, 4, 1, "", "can_cast"], [523, 4, 1, "", "ceil"], [1714, 4, 1, "", "cholesky"], [1871, 4, 1, "", "clip"], [1435, 4, 1, "", "clip_matrix_norm"], [1440, 4, 1, "", "clip_vector_norm"], [1876, 4, 1, "", "concat"], [851, 4, 1, "", "conj"], [1881, 4, 1, "", "constant_pad"], [1651, 4, 1, "", "conv1d"], [1656, 4, 1, "", "conv1d_transpose"], [1661, 4, 1, "", "conv2d"], [1666, 4, 1, "", "conv2d_transpose"], [1671, 4, 1, "", "conv3d"], [1676, 4, 1, "", "conv3d_transpose"], [857, 4, 1, "", "copysign"], [862, 4, 1, "", "corrcoef"], [528, 4, 1, "", "cos"], [533, 4, 1, "", "cosh"], [867, 4, 1, "", "count_nonzero"], [1719, 4, 1, "", "cross"], [1860, 4, 1, "", "cross_entropy"], [2071, 4, 1, "", "cumprod"], [2076, 4, 1, "", "cumsum"], [883, 4, 1, "", "dct"], [538, 4, 1, "", "deg2rad"], [1683, 4, 1, "", "depthwise_conv2d"], [1724, 4, 1, "", "det"], [419, 4, 1, "", "dev"], [888, 4, 1, "", "dft"], [1729, 4, 1, "", "diag"], [893, 4, 1, "", "diagflat"], [1734, 4, 1, "", "diagonal"], [898, 4, 1, "", "diff"], [903, 4, 1, "", "dirichlet"], [543, 4, 1, "", "divide"], [1688, 4, 1, "", "dropout"], [910, 4, 1, "", "dsplit"], [915, 4, 1, "", "dstack"], [345, 4, 1, "", "dtype"], [920, 4, 1, "", "eig"], [1740, 4, 1, "", "eigh"], [925, 4, 1, "", "eigh_tridiagonal"], [930, 4, 1, "", "eigvals"], [1745, 4, 1, "", "eigvalsh"], [1450, 4, 1, "", "einops_rearrange"], [1455, 4, 1, "", "einops_reduce"], [1460, 4, 1, "", "einops_repeat"], [2081, 4, 1, "", "einsum"], [966, 4, 1, "", "embedding"], [237, 4, 1, "", "empty_like"], [548, 4, 1, "", "equal"], [553, 4, 1, "", "erf"], [558, 4, 1, "", "exp"], [971, 4, 1, "", "exp2"], [976, 4, 1, "", "expand"], [1886, 4, 1, "", "expand_dims"], [563, 4, 1, "", "expm1"], [981, 4, 1, "", "eye_like"], [986, 4, 1, "", "fft"], [351, 4, 1, "", "finfo"], [991, 4, 1, "", "fix"], [996, 4, 1, "", "flatten"], [1891, 4, 1, "", "flip"], [1001, 4, 1, "", "fliplr"], [1006, 4, 1, "", "flipud"], [1011, 4, 1, "", "float_power"], [568, 4, 1, "", "floor"], [573, 4, 1, "", "floor_divide"], [1016, 4, 1, "", "fmax"], [1021, 4, 1, "", "fmin"], [1026, 4, 1, "", "fmod"], [1468, 4, 1, "", "fourier_encode"], [245, 4, 1, "", "from_dlpack"], [251, 4, 1, "", "full_like"], [1475, 4, 1, "", "gather"], [1480, 4, 1, "", "gather_nd"], [1034, 4, 1, "", "gcd"], [173, 4, 1, "", "gelu"], [1492, 4, 1, "", "get_num_dims"], [1041, 4, 1, "", "gradient"], [1623, 4, 1, "", "gradient_descent_update"], [578, 4, 1, "", "greater"], [583, 4, 1, "", "greater_equal"], [1047, 4, 1, "", "hamming_window"], [1051, 4, 1, "", "hann_window"], [1501, 4, 1, "", "has_nans"], [1056, 4, 1, "", "heaviside"], [1061, 4, 1, "", "hsplit"], [1066, 4, 1, "", "hstack"], [1071, 4, 1, "", "hypot"], [1076, 4, 1, "", "i0"], [1081, 4, 1, "", "ifft"], [362, 4, 1, "", "iinfo"], [1086, 4, 1, "", "imag"], [1750, 4, 1, "", "inner"], [1507, 4, 1, "", "inplace_decrement"], [1512, 4, 1, "", "inplace_increment"], [1517, 4, 1, "", "inplace_update"], [1091, 4, 1, "", "instance_norm"], [1097, 4, 1, "", "interpolate"], [1755, 4, 1, "", "inv"], [1523, 4, 1, "", "is_array"], [369, 4, 1, "", "is_bool_dtype"], [373, 4, 1, "", "is_complex_dtype"], [378, 4, 1, "", "is_float_dtype"], [383, 4, 1, "", "is_int_dtype"], [1528, 4, 1, "", "is_ivy_array"], [1536, 4, 1, "", "is_native_array"], [388, 4, 1, "", "is_uint_dtype"], [1105, 4, 1, "", "isclose"], [588, 4, 1, "", "isfinite"], [1110, 4, 1, "", "isin"], [593, 4, 1, "", "isinf"], [598, 4, 1, "", "isnan"], [603, 4, 1, "", "isreal"], [1114, 4, 1, "", "kaiser_bessel_derived_window"], [1118, 4, 1, "", "kaiser_window"], [1123, 4, 1, "", "kron"], [1128, 4, 1, "", "l2_normalize"], [1628, 4, 1, "", "lamb_update"], [1632, 4, 1, "", "lars_update"], [1976, 4, 1, "", "layer_norm"], [1151, 4, 1, "", "lcm"], [1156, 4, 1, "", "ldexp"], [179, 4, 1, "", "leaky_relu"], [608, 4, 1, "", "less"], [613, 4, 1, "", "less_equal"], [1161, 4, 1, "", "lexsort"], [1693, 4, 1, "", "linear"], [256, 4, 1, "", "linspace"], [618, 4, 1, "", "log"], [623, 4, 1, "", "log10"], [628, 4, 1, "", "log1p"], [633, 4, 1, "", "log2"], [184, 4, 1, "", "log_softmax"], [638, 4, 1, "", "logaddexp"], [1175, 4, 1, "", "logaddexp2"], [643, 4, 1, "", "logical_and"], [648, 4, 1, "", "logical_not"], [653, 4, 1, "", "logical_or"], [658, 4, 1, "", "logical_xor"], [1180, 4, 1, "", "logit"], [261, 4, 1, "", "logspace"], [1187, 4, 1, "", "lp_normalize"], [1698, 4, 1, "", "lstm_update"], [1761, 4, 1, "", "matmul"], [1216, 4, 1, "", "matrix_exp"], [1766, 4, 1, "", "matrix_norm"], [1771, 4, 1, "", "matrix_power"], [1776, 4, 1, "", "matrix_rank"], [1781, 4, 1, "", "matrix_transpose"], [2085, 4, 1, "", "max"], [1221, 4, 1, "", "max_pool1d"], [1226, 4, 1, "", "max_pool2d"], [1231, 4, 1, "", "max_pool3d"], [663, 4, 1, "", "maximum"], [2089, 4, 1, "", "mean"], [1236, 4, 1, "", "median"], [266, 4, 1, "", "meshgrid"], [2093, 4, 1, "", "min"], [668, 4, 1, "", "minimum"], [189, 4, 1, "", "mish"], [1242, 4, 1, "", "moveaxis"], [1247, 4, 1, "", "msort"], [1703, 4, 1, "", "multi_head_attention"], [1981, 4, 1, "", "multinomial"], [673, 4, 1, "", "multiply"], [1253, 4, 1, "", "nan_to_num"], [1258, 4, 1, "", "nanmean"], [1263, 4, 1, "", "nanmedian"], [1268, 4, 1, "", "nansum"], [271, 4, 1, "", "native_array"], [678, 4, 1, "", "negative"], [1278, 4, 1, "", "nextafter"], [2023, 4, 1, "", "nonzero"], [683, 4, 1, "", "not_equal"], [276, 4, 1, "", "one_hot"], [284, 4, 1, "", "ones_like"], [1636, 4, 1, "", "optimizer_update"], [1786, 4, 1, "", "outer"], [1287, 4, 1, "", "pad"], [1896, 4, 1, "", "permute_dims"], [1791, 4, 1, "", "pinv"], [1293, 4, 1, "", "poisson"], [688, 4, 1, "", "positive"], [693, 4, 1, "", "pow"], [1298, 4, 1, "", "prelu"], [2097, 4, 1, "", "prod"], [1796, 4, 1, "", "qr"], [1303, 4, 1, "", "quantile"], [698, 4, 1, "", "rad2deg"], [1986, 4, 1, "", "randint"], [1991, 4, 1, "", "random_normal"], [1996, 4, 1, "", "random_uniform"], [1314, 4, 1, "", "real"], [703, 4, 1, "", "reciprocal"], [194, 4, 1, "", "relu"], [1319, 4, 1, "", "relu6"], [708, 4, 1, "", "remainder"], [1901, 4, 1, "", "repeat"], [1906, 4, 1, "", "reshape"], [395, 4, 1, "", "result_type"], [1911, 4, 1, "", "roll"], [1324, 4, 1, "", "rot90"], [713, 4, 1, "", "round"], [1708, 4, 1, "", "scaled_dot_product_attention"], [1546, 4, 1, "", "scatter_flat"], [1551, 4, 1, "", "scatter_nd"], [2060, 4, 1, "", "searchsorted"], [2002, 4, 1, "", "shuffle"], [199, 4, 1, "", "sigmoid"], [718, 4, 1, "", "sign"], [1331, 4, 1, "", "signbit"], [723, 4, 1, "", "sin"], [1336, 4, 1, "", "sinc"], [728, 4, 1, "", "sinh"], [1801, 4, 1, "", "slogdet"], [204, 4, 1, "", "softmax"], [209, 4, 1, "", "softplus"], [1806, 4, 1, "", "solve"], [2065, 4, 1, "", "sort"], [1865, 4, 1, "", "sparse_cross_entropy"], [1916, 4, 1, "", "split"], [733, 4, 1, "", "sqrt"], [738, 4, 1, "", "square"], [1921, 4, 1, "", "squeeze"], [1567, 4, 1, "", "stable_divide"], [1572, 4, 1, "", "stable_pow"], [1926, 4, 1, "", "stack"], [450, 4, 1, "", "static_abs"], [455, 4, 1, "", "static_acos"], [460, 4, 1, "", "static_acosh"], [465, 4, 1, "", "static_add"], [778, 4, 1, "", "static_adjoint"], [2119, 4, 1, "", "static_all"], [1419, 4, 1, "", "static_all_equal"], [783, 4, 1, "", "static_allclose"], [788, 4, 1, "", "static_angle"], [2124, 4, 1, "", "static_any"], [223, 4, 1, "", "static_arange"], [2010, 4, 1, "", "static_argmax"], [2015, 4, 1, "", "static_argmin"], [2057, 4, 1, "", "static_argsort"], [2020, 4, 1, "", "static_argwhere"], [1426, 4, 1, "", "static_array_equal"], [227, 4, 1, "", "static_asarray"], [470, 4, 1, "", "static_asin"], [475, 4, 1, "", "static_asinh"], [1431, 4, 1, "", "static_assert_supports_inplace"], [317, 4, 1, "", "static_astype"], [480, 4, 1, "", "static_atan"], [485, 4, 1, "", "static_atan2"], [490, 4, 1, "", "static_atanh"], [793, 4, 1, "", "static_atleast_1d"], [798, 4, 1, "", "static_atleast_2d"], [803, 4, 1, "", "static_atleast_3d"], [808, 4, 1, "", "static_avg_pool1d"], [813, 4, 1, "", "static_avg_pool2d"], [818, 4, 1, "", "static_avg_pool3d"], [823, 4, 1, "", "static_bernoulli"], [828, 4, 1, "", "static_beta"], [833, 4, 1, "", "static_binarizer"], [1857, 4, 1, "", "static_binary_cross_entropy"], [837, 4, 1, "", "static_binary_cross_entropy_with_logits"], [842, 4, 1, "", "static_bincount"], [495, 4, 1, "", "static_bitwise_and"], [500, 4, 1, "", "static_bitwise_invert"], [505, 4, 1, "", "static_bitwise_left_shift"], [510, 4, 1, "", "static_bitwise_or"], [515, 4, 1, "", "static_bitwise_right_shift"], [520, 4, 1, "", "static_bitwise_xor"], [322, 4, 1, "", "static_broadcast_arrays"], [847, 4, 1, "", "static_broadcast_shapes"], [327, 4, 1, "", "static_broadcast_to"], [332, 4, 1, "", "static_can_cast"], [525, 4, 1, "", "static_ceil"], [1716, 4, 1, "", "static_cholesky"], [1873, 4, 1, "", "static_clip"], [1437, 4, 1, "", "static_clip_matrix_norm"], [1442, 4, 1, "", "static_clip_vector_norm"], [1878, 4, 1, "", "static_concat"], [853, 4, 1, "", "static_conj"], [1883, 4, 1, "", "static_constant_pad"], [1653, 4, 1, "", "static_conv1d"], [1658, 4, 1, "", "static_conv1d_transpose"], [1663, 4, 1, "", "static_conv2d"], [1668, 4, 1, "", "static_conv2d_transpose"], [1673, 4, 1, "", "static_conv3d"], [1678, 4, 1, "", "static_conv3d_transpose"], [859, 4, 1, "", "static_copysign"], [864, 4, 1, "", "static_corrcoef"], [530, 4, 1, "", "static_cos"], [535, 4, 1, "", "static_cosh"], [869, 4, 1, "", "static_count_nonzero"], [1721, 4, 1, "", "static_cross"], [1862, 4, 1, "", "static_cross_entropy"], [2073, 4, 1, "", "static_cumprod"], [2078, 4, 1, "", "static_cumsum"], [885, 4, 1, "", "static_dct"], [337, 4, 1, "", "static_default_complex_dtype"], [341, 4, 1, "", "static_default_float_dtype"], [540, 4, 1, "", "static_deg2rad"], [1685, 4, 1, "", "static_depthwise_conv2d"], [1726, 4, 1, "", "static_det"], [421, 4, 1, "", "static_dev"], [890, 4, 1, "", "static_dft"], [1731, 4, 1, "", "static_diag"], [895, 4, 1, "", "static_diagflat"], [1736, 4, 1, "", "static_diagonal"], [900, 4, 1, "", "static_diff"], [905, 4, 1, "", "static_dirichlet"], [545, 4, 1, "", "static_divide"], [1690, 4, 1, "", "static_dropout"], [912, 4, 1, "", "static_dsplit"], [917, 4, 1, "", "static_dstack"], [347, 4, 1, "", "static_dtype"], [922, 4, 1, "", "static_eig"], [1742, 4, 1, "", "static_eigh"], [927, 4, 1, "", "static_eigh_tridiagonal"], [932, 4, 1, "", "static_eigvals"], [1747, 4, 1, "", "static_eigvalsh"], [1452, 4, 1, "", "static_einops_rearrange"], [1457, 4, 1, "", "static_einops_reduce"], [1462, 4, 1, "", "static_einops_repeat"], [968, 4, 1, "", "static_embedding"], [239, 4, 1, "", "static_empty_like"], [550, 4, 1, "", "static_equal"], [555, 4, 1, "", "static_erf"], [560, 4, 1, "", "static_exp"], [973, 4, 1, "", "static_exp2"], [978, 4, 1, "", "static_expand"], [1888, 4, 1, "", "static_expand_dims"], [565, 4, 1, "", "static_expm1"], [242, 4, 1, "", "static_eye"], [983, 4, 1, "", "static_eye_like"], [988, 4, 1, "", "static_fft"], [353, 4, 1, "", "static_finfo"], [993, 4, 1, "", "static_fix"], [998, 4, 1, "", "static_flatten"], [1893, 4, 1, "", "static_flip"], [1003, 4, 1, "", "static_fliplr"], [1008, 4, 1, "", "static_flipud"], [1013, 4, 1, "", "static_float_power"], [570, 4, 1, "", "static_floor"], [575, 4, 1, "", "static_floor_divide"], [1018, 4, 1, "", "static_fmax"], [1023, 4, 1, "", "static_fmin"], [1028, 4, 1, "", "static_fmod"], [1470, 4, 1, "", "static_fourier_encode"], [247, 4, 1, "", "static_from_dlpack"], [253, 4, 1, "", "static_full_like"], [356, 4, 1, "", "static_function_supported_dtypes"], [359, 4, 1, "", "static_function_unsupported_dtypes"], [1477, 4, 1, "", "static_gather"], [1482, 4, 1, "", "static_gather_nd"], [1036, 4, 1, "", "static_gcd"], [175, 4, 1, "", "static_gelu"], [1494, 4, 1, "", "static_get_num_dims"], [1043, 4, 1, "", "static_gradient"], [580, 4, 1, "", "static_greater"], [585, 4, 1, "", "static_greater_equal"], [1049, 4, 1, "", "static_hamming_window"], [1053, 4, 1, "", "static_hann_window"], [1503, 4, 1, "", "static_has_nans"], [1058, 4, 1, "", "static_heaviside"], [1063, 4, 1, "", "static_hsplit"], [1068, 4, 1, "", "static_hstack"], [1073, 4, 1, "", "static_hypot"], [1078, 4, 1, "", "static_i0"], [1083, 4, 1, "", "static_ifft"], [364, 4, 1, "", "static_iinfo"], [1088, 4, 1, "", "static_imag"], [1752, 4, 1, "", "static_inner"], [1509, 4, 1, "", "static_inplace_decrement"], [1514, 4, 1, "", "static_inplace_increment"], [1519, 4, 1, "", "static_inplace_update"], [1093, 4, 1, "", "static_instance_norm"], [1099, 4, 1, "", "static_interpolate"], [1757, 4, 1, "", "static_inv"], [1525, 4, 1, "", "static_is_array"], [371, 4, 1, "", "static_is_bool_dtype"], [375, 4, 1, "", "static_is_complex_dtype"], [380, 4, 1, "", "static_is_float_dtype"], [385, 4, 1, "", "static_is_int_dtype"], [1530, 4, 1, "", "static_is_ivy_array"], [1538, 4, 1, "", "static_is_native_array"], [390, 4, 1, "", "static_is_uint_dtype"], [1107, 4, 1, "", "static_isclose"], [590, 4, 1, "", "static_isfinite"], [1112, 4, 1, "", "static_isin"], [595, 4, 1, "", "static_isinf"], [600, 4, 1, "", "static_isnan"], [605, 4, 1, "", "static_isreal"], [1116, 4, 1, "", "static_kaiser_bessel_derived_window"], [1120, 4, 1, "", "static_kaiser_window"], [1125, 4, 1, "", "static_kron"], [1130, 4, 1, "", "static_l2_normalize"], [1153, 4, 1, "", "static_lcm"], [1158, 4, 1, "", "static_ldexp"], [181, 4, 1, "", "static_leaky_relu"], [610, 4, 1, "", "static_less"], [615, 4, 1, "", "static_less_equal"], [1163, 4, 1, "", "static_lexsort"], [1695, 4, 1, "", "static_linear"], [258, 4, 1, "", "static_linspace"], [620, 4, 1, "", "static_log"], [625, 4, 1, "", "static_log10"], [630, 4, 1, "", "static_log1p"], [635, 4, 1, "", "static_log2"], [186, 4, 1, "", "static_log_softmax"], [640, 4, 1, "", "static_logaddexp"], [1177, 4, 1, "", "static_logaddexp2"], [645, 4, 1, "", "static_logical_and"], [650, 4, 1, "", "static_logical_not"], [655, 4, 1, "", "static_logical_or"], [660, 4, 1, "", "static_logical_xor"], [1182, 4, 1, "", "static_logit"], [263, 4, 1, "", "static_logspace"], [1189, 4, 1, "", "static_lp_normalize"], [1700, 4, 1, "", "static_lstm_update"], [1763, 4, 1, "", "static_matmul"], [1218, 4, 1, "", "static_matrix_exp"], [1768, 4, 1, "", "static_matrix_norm"], [1773, 4, 1, "", "static_matrix_power"], [1778, 4, 1, "", "static_matrix_rank"], [1783, 4, 1, "", "static_matrix_transpose"], [1223, 4, 1, "", "static_max_pool1d"], [1228, 4, 1, "", "static_max_pool2d"], [1233, 4, 1, "", "static_max_pool3d"], [665, 4, 1, "", "static_maximum"], [1238, 4, 1, "", "static_median"], [268, 4, 1, "", "static_meshgrid"], [670, 4, 1, "", "static_minimum"], [191, 4, 1, "", "static_mish"], [1244, 4, 1, "", "static_moveaxis"], [1249, 4, 1, "", "static_msort"], [1705, 4, 1, "", "static_multi_head_attention"], [1983, 4, 1, "", "static_multinomial"], [675, 4, 1, "", "static_multiply"], [1255, 4, 1, "", "static_nan_to_num"], [1260, 4, 1, "", "static_nanmean"], [1265, 4, 1, "", "static_nanmedian"], [1270, 4, 1, "", "static_nansum"], [273, 4, 1, "", "static_native_array"], [680, 4, 1, "", "static_negative"], [1280, 4, 1, "", "static_nextafter"], [2025, 4, 1, "", "static_nonzero"], [685, 4, 1, "", "static_not_equal"], [278, 4, 1, "", "static_one_hot"], [281, 4, 1, "", "static_ones"], [286, 4, 1, "", "static_ones_like"], [1788, 4, 1, "", "static_outer"], [1289, 4, 1, "", "static_pad"], [1898, 4, 1, "", "static_permute_dims"], [1793, 4, 1, "", "static_pinv"], [1295, 4, 1, "", "static_poisson"], [690, 4, 1, "", "static_positive"], [695, 4, 1, "", "static_pow"], [1300, 4, 1, "", "static_prelu"], [2099, 4, 1, "", "static_prod"], [1798, 4, 1, "", "static_qr"], [1305, 4, 1, "", "static_quantile"], [700, 4, 1, "", "static_rad2deg"], [1988, 4, 1, "", "static_randint"], [1993, 4, 1, "", "static_random_normal"], [1998, 4, 1, "", "static_random_uniform"], [1316, 4, 1, "", "static_real"], [705, 4, 1, "", "static_reciprocal"], [196, 4, 1, "", "static_relu"], [1321, 4, 1, "", "static_relu6"], [710, 4, 1, "", "static_remainder"], [1903, 4, 1, "", "static_repeat"], [1908, 4, 1, "", "static_reshape"], [397, 4, 1, "", "static_result_type"], [1913, 4, 1, "", "static_roll"], [1326, 4, 1, "", "static_rot90"], [715, 4, 1, "", "static_round"], [1710, 4, 1, "", "static_scaled_dot_product_attention"], [1548, 4, 1, "", "static_scatter_flat"], [1553, 4, 1, "", "static_scatter_nd"], [2062, 4, 1, "", "static_searchsorted"], [2004, 4, 1, "", "static_shuffle"], [201, 4, 1, "", "static_sigmoid"], [720, 4, 1, "", "static_sign"], [1333, 4, 1, "", "static_signbit"], [725, 4, 1, "", "static_sin"], [1338, 4, 1, "", "static_sinc"], [730, 4, 1, "", "static_sinh"], [1803, 4, 1, "", "static_slogdet"], [206, 4, 1, "", "static_softmax"], [211, 4, 1, "", "static_softplus"], [1808, 4, 1, "", "static_solve"], [2067, 4, 1, "", "static_sort"], [1867, 4, 1, "", "static_sparse_cross_entropy"], [1918, 4, 1, "", "static_split"], [735, 4, 1, "", "static_sqrt"], [740, 4, 1, "", "static_square"], [1923, 4, 1, "", "static_squeeze"], [1569, 4, 1, "", "static_stable_divide"], [1574, 4, 1, "", "static_stable_pow"], [1928, 4, 1, "", "static_stack"], [1640, 4, 1, "", "static_stop_gradient"], [742, 4, 1, "", "static_subtract"], [2105, 4, 1, "", "static_sum"], [1576, 4, 1, "", "static_supports_inplace_updates"], [1810, 4, 1, "", "static_svd"], [1815, 4, 1, "", "static_svdvals"], [1930, 4, 1, "", "static_swapaxes"], [1358, 4, 1, "", "static_take_along_axis"], [747, 4, 1, "", "static_tan"], [752, 4, 1, "", "static_tanh"], [1820, 4, 1, "", "static_tensordot"], [1363, 4, 1, "", "static_thresholded_relu"], [1935, 4, 1, "", "static_tile"], [437, 4, 1, "", "static_to_device"], [1582, 4, 1, "", "static_to_list"], [1587, 4, 1, "", "static_to_numpy"], [1592, 4, 1, "", "static_to_scalar"], [1368, 4, 1, "", "static_top_k"], [1828, 4, 1, "", "static_trace"], [288, 4, 1, "", "static_tril"], [1376, 4, 1, "", "static_tril_indices"], [293, 4, 1, "", "static_triu"], [1380, 4, 1, "", "static_triu_indices"], [757, 4, 1, "", "static_trunc"], [762, 4, 1, "", "static_trunc_divide"], [2033, 4, 1, "", "static_unique_all"], [2038, 4, 1, "", "static_unique_counts"], [2043, 4, 1, "", "static_unique_inverse"], [2048, 4, 1, "", "static_unique_values"], [1384, 4, 1, "", "static_unravel_index"], [1940, 4, 1, "", "static_unstack"], [1604, 4, 1, "", "static_value_is_nan"], [1833, 4, 1, "", "static_vander"], [2110, 4, 1, "", "static_var"], [1838, 4, 1, "", "static_vecdot"], [1843, 4, 1, "", "static_vector_norm"], [1848, 4, 1, "", "static_vector_to_skew_symmetric_matrix"], [1390, 4, 1, "", "static_vorbis_window"], [1394, 4, 1, "", "static_vsplit"], [1399, 4, 1, "", "static_vstack"], [2027, 4, 1, "", "static_where"], [1404, 4, 1, "", "static_xlogy"], [1945, 4, 1, "", "static_zero_pad"], [298, 4, 1, "", "static_zeros"], [301, 4, 1, "", "static_zeros_like"], [1409, 4, 1, "", "static_zeta"], [2102, 4, 1, "", "std"], [1642, 4, 1, "", "stop_gradient"], [744, 4, 1, "", "subtract"], [2107, 4, 1, "", "sum"], [1578, 4, 1, "", "supports_inplace_updates"], [1812, 4, 1, "", "svd"], [1817, 4, 1, "", "svdvals"], [1932, 4, 1, "", "swapaxes"], [1360, 4, 1, "", "take_along_axis"], [749, 4, 1, "", "tan"], [754, 4, 1, "", "tanh"], [1821, 4, 1, "", "tensordot"], [1825, 4, 1, "", "tensorsolve"], [1365, 4, 1, "", "thresholded_relu"], [1937, 4, 1, "", "tile"], [439, 4, 1, "", "to_device"], [1589, 4, 1, "", "to_numpy"], [1594, 4, 1, "", "to_scalar"], [1370, 4, 1, "", "top_k"], [1830, 4, 1, "", "trace"], [290, 4, 1, "", "tril"], [1377, 4, 1, "", "tril_indices"], [295, 4, 1, "", "triu"], [1381, 4, 1, "", "triu_indices"], [759, 4, 1, "", "trunc"], [764, 4, 1, "", "trunc_divide"], [2035, 4, 1, "", "unique_all"], [2040, 4, 1, "", "unique_counts"], [2045, 4, 1, "", "unique_inverse"], [2050, 4, 1, "", "unique_values"], [1386, 4, 1, "", "unravel_index"], [1942, 4, 1, "", "unstack"], [1606, 4, 1, "", "value_is_nan"], [1835, 4, 1, "", "vander"], [2112, 4, 1, "", "var"], [1840, 4, 1, "", "vecdot"], [1845, 4, 1, "", "vector_norm"], [1850, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1391, 4, 1, "", "vorbis_window"], [1396, 4, 1, "", "vsplit"], [1401, 4, 1, "", "vstack"], [2029, 4, 1, "", "where"], [1406, 4, 1, "", "xlogy"], [1947, 4, 1, "", "zero_pad"], [303, 4, 1, "", "zeros_like"], [1411, 4, 1, "", "zeta"]], "ivy.container.conversions": [[70, 1, 1, "", "ContainerWithConversions"]], "ivy.container.conversions.ContainerWithConversions": [[70, 2, 1, "", "static_to_ivy"], [70, 2, 1, "", "static_to_native"], [70, 2, 1, "", "to_ivy"], [70, 2, 1, "", "to_native"]], "ivy.container.creation": [[72, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[72, 2, 1, "", "empty_like"], [72, 2, 1, "", "from_dlpack"], [72, 2, 1, "", "full_like"], [72, 2, 1, "", "linspace"], [72, 2, 1, "", "logspace"], [72, 2, 1, "", "meshgrid"], [72, 2, 1, "", "native_array"], [72, 2, 1, "", "one_hot"], [72, 2, 1, "", "ones_like"], [72, 2, 1, "", "static_arange"], [72, 2, 1, "", "static_asarray"], [72, 2, 1, "", "static_empty_like"], [72, 2, 1, "", "static_eye"], [72, 2, 1, "", "static_from_dlpack"], [72, 2, 1, "", "static_full_like"], [72, 2, 1, "", "static_linspace"], [72, 2, 1, "", "static_logspace"], [72, 2, 1, "", "static_meshgrid"], [72, 2, 1, "", "static_native_array"], [72, 2, 1, "", "static_one_hot"], [72, 2, 1, "", "static_ones"], [72, 2, 1, "", "static_ones_like"], [72, 2, 1, "", "static_tril"], [72, 2, 1, "", "static_triu"], [72, 2, 1, "", "static_zeros"], [72, 2, 1, "", "static_zeros_like"], [72, 2, 1, "", "tril"], [72, 2, 1, "", "triu"], [72, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[74, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[74, 2, 1, "", "astype"], [74, 2, 1, "", "broadcast_arrays"], [74, 2, 1, "", "broadcast_to"], [74, 2, 1, "", "can_cast"], [74, 2, 1, "", "dtype"], [74, 2, 1, "", "finfo"], [74, 2, 1, "", "iinfo"], [74, 2, 1, "", "is_bool_dtype"], [74, 2, 1, "", "is_complex_dtype"], [74, 2, 1, "", "is_float_dtype"], [74, 2, 1, "", "is_int_dtype"], [74, 2, 1, "", "is_uint_dtype"], [74, 2, 1, "", "result_type"], [74, 2, 1, "", "static_astype"], [74, 2, 1, "", "static_broadcast_arrays"], [74, 2, 1, "", "static_broadcast_to"], [74, 2, 1, "", "static_can_cast"], [74, 2, 1, "", "static_default_complex_dtype"], [74, 2, 1, "", "static_default_float_dtype"], [74, 2, 1, "", "static_dtype"], [74, 2, 1, "", "static_finfo"], [74, 2, 1, "", "static_function_supported_dtypes"], [74, 2, 1, "", "static_function_unsupported_dtypes"], [74, 2, 1, "", "static_iinfo"], [74, 2, 1, "", "static_is_bool_dtype"], [74, 2, 1, "", "static_is_complex_dtype"], [74, 2, 1, "", "static_is_float_dtype"], [74, 2, 1, "", "static_is_int_dtype"], [74, 2, 1, "", "static_is_uint_dtype"], [74, 2, 1, "", "static_result_type"]], "ivy.container.device": [[76, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[76, 2, 1, "", "dev"], [76, 2, 1, "", "static_dev"], [76, 2, 1, "", "static_to_device"], [76, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[78, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[78, 2, 1, "", "abs"], [78, 2, 1, "", "acos"], [78, 2, 1, "", "acosh"], [78, 2, 1, "", "add"], [78, 2, 1, "", "asin"], [78, 2, 1, "", "asinh"], [78, 2, 1, "", "atan"], [78, 2, 1, "", "atan2"], [78, 2, 1, "", "atanh"], [78, 2, 1, "", "bitwise_and"], [78, 2, 1, "", "bitwise_invert"], [78, 2, 1, "", "bitwise_left_shift"], [78, 2, 1, "", "bitwise_or"], [78, 2, 1, "", "bitwise_right_shift"], [78, 2, 1, "", "bitwise_xor"], [78, 2, 1, "", "ceil"], [78, 2, 1, "", "cos"], [78, 2, 1, "", "cosh"], [78, 2, 1, "", "deg2rad"], [78, 2, 1, "", "divide"], [78, 2, 1, "", "equal"], [78, 2, 1, "", "erf"], [78, 2, 1, "", "exp"], [78, 2, 1, "", "expm1"], [78, 2, 1, "", "floor"], [78, 2, 1, "", "floor_divide"], [78, 2, 1, "", "greater"], [78, 2, 1, "", "greater_equal"], [78, 2, 1, "", "isfinite"], [78, 2, 1, "", "isinf"], [78, 2, 1, "", "isnan"], [78, 2, 1, "", "isreal"], [78, 2, 1, "", "less"], [78, 2, 1, "", "less_equal"], [78, 2, 1, "", "log"], [78, 2, 1, "", "log10"], [78, 2, 1, "", "log1p"], [78, 2, 1, "", "log2"], [78, 2, 1, "", "logaddexp"], [78, 2, 1, "", "logical_and"], [78, 2, 1, "", "logical_not"], [78, 2, 1, "", "logical_or"], [78, 2, 1, "", "logical_xor"], [78, 2, 1, "", "maximum"], [78, 2, 1, "", "minimum"], [78, 2, 1, "", "multiply"], [78, 2, 1, "", "negative"], [78, 2, 1, "", "not_equal"], [78, 2, 1, "", "positive"], [78, 2, 1, "", "pow"], [78, 2, 1, "", "rad2deg"], [78, 2, 1, "", "reciprocal"], [78, 2, 1, "", "remainder"], [78, 2, 1, "", "round"], [78, 2, 1, "", "sign"], [78, 2, 1, "", "sin"], [78, 2, 1, "", "sinh"], [78, 2, 1, "", "sqrt"], [78, 2, 1, "", "square"], [78, 2, 1, "", "static_abs"], [78, 2, 1, "", "static_acos"], [78, 2, 1, "", "static_acosh"], [78, 2, 1, "", "static_add"], [78, 2, 1, "", "static_asin"], [78, 2, 1, "", "static_asinh"], [78, 2, 1, "", "static_atan"], [78, 2, 1, "", "static_atan2"], [78, 2, 1, "", "static_atanh"], [78, 2, 1, "", "static_bitwise_and"], [78, 2, 1, "", "static_bitwise_invert"], [78, 2, 1, "", "static_bitwise_left_shift"], [78, 2, 1, "", "static_bitwise_or"], [78, 2, 1, "", "static_bitwise_right_shift"], [78, 2, 1, "", "static_bitwise_xor"], [78, 2, 1, "", "static_ceil"], [78, 2, 1, "", "static_cos"], [78, 2, 1, "", "static_cosh"], [78, 2, 1, "", "static_deg2rad"], [78, 2, 1, "", "static_divide"], [78, 2, 1, "", "static_equal"], [78, 2, 1, "", "static_erf"], [78, 2, 1, "", "static_exp"], [78, 2, 1, "", "static_expm1"], [78, 2, 1, "", "static_floor"], [78, 2, 1, "", "static_floor_divide"], [78, 2, 1, "", "static_greater"], [78, 2, 1, "", "static_greater_equal"], [78, 2, 1, "", "static_isfinite"], [78, 2, 1, "", "static_isinf"], [78, 2, 1, "", "static_isnan"], [78, 2, 1, "", "static_isreal"], [78, 2, 1, "", "static_less"], [78, 2, 1, "", "static_less_equal"], [78, 2, 1, "", "static_log"], [78, 2, 1, "", "static_log10"], [78, 2, 1, "", "static_log1p"], [78, 2, 1, "", "static_log2"], [78, 2, 1, "", "static_logaddexp"], [78, 2, 1, "", "static_logical_and"], [78, 2, 1, "", "static_logical_not"], [78, 2, 1, "", "static_logical_or"], [78, 2, 1, "", "static_logical_xor"], [78, 2, 1, "", "static_maximum"], [78, 2, 1, "", "static_minimum"], [78, 2, 1, "", "static_multiply"], [78, 2, 1, "", "static_negative"], [78, 2, 1, "", "static_not_equal"], [78, 2, 1, "", "static_positive"], [78, 2, 1, "", "static_pow"], [78, 2, 1, "", "static_rad2deg"], [78, 2, 1, "", "static_reciprocal"], [78, 2, 1, "", "static_remainder"], [78, 2, 1, "", "static_round"], [78, 2, 1, "", "static_sign"], [78, 2, 1, "", "static_sin"], [78, 2, 1, "", "static_sinh"], [78, 2, 1, "", "static_sqrt"], [78, 2, 1, "", "static_square"], [78, 2, 1, "", "static_subtract"], [78, 2, 1, "", "static_tan"], [78, 2, 1, "", "static_tanh"], [78, 2, 1, "", "static_trapz"], [78, 2, 1, "", "static_trunc"], [78, 2, 1, "", "static_trunc_divide"], [78, 2, 1, "", "subtract"], [78, 2, 1, "", "tan"], [78, 2, 1, "", "tanh"], [78, 2, 1, "", "trapz"], [78, 2, 1, "", "trunc"], [78, 2, 1, "", "trunc_divide"]], "ivy.container.experimental": [[79, 1, 1, "", "ContainerWithActivationExperimental"], [79, 1, 1, "", "ContainerWithConversionExperimental"], [79, 1, 1, "", "ContainerWithCreationExperimental"], [79, 1, 1, "", "ContainerWithData_typeExperimental"], [79, 1, 1, "", "ContainerWithDeviceExperimental"], [79, 1, 1, "", "ContainerWithElementWiseExperimental"], [79, 1, 1, "", "ContainerWithGeneralExperimental"], [79, 1, 1, "", "ContainerWithGradientsExperimental"], [79, 1, 1, "", "ContainerWithImageExperimental"], [79, 1, 1, "", "ContainerWithLayersExperimental"], [79, 1, 1, "", "ContainerWithLinearAlgebraExperimental"], [79, 1, 1, "", "ContainerWithLossesExperimental"], [79, 1, 1, "", "ContainerWithManipulationExperimental"], [79, 1, 1, "", "ContainerWithNormsExperimental"], [79, 1, 1, "", "ContainerWithRandomExperimental"], [79, 1, 1, "", "ContainerWithSearchingExperimental"], [79, 1, 1, "", "ContainerWithSetExperimental"], [79, 1, 1, "", "ContainerWithSortingExperimental"], [79, 1, 1, "", "ContainerWithStatisticalExperimental"], [79, 1, 1, "", "ContainerWithUtilityExperimental"]], "ivy.container.experimental.ContainerWithActivationExperimental": [[79, 2, 1, "", "logit"], [79, 2, 1, "", "prelu"], [79, 2, 1, "", "relu6"], [79, 2, 1, "", "static_logit"], [79, 2, 1, "", "static_prelu"], [79, 2, 1, "", "static_relu6"], [79, 2, 1, "", "static_thresholded_relu"], [79, 2, 1, "", "thresholded_relu"]], "ivy.container.experimental.ContainerWithCreationExperimental": [[79, 2, 1, "", "eye_like"], [79, 2, 1, "", "hamming_window"], [79, 2, 1, "", "hann_window"], [79, 2, 1, "", "kaiser_bessel_derived_window"], [79, 2, 1, "", "kaiser_window"], [79, 2, 1, "", "static_eye_like"], [79, 2, 1, "", "static_hamming_window"], [79, 2, 1, "", "static_hann_window"], [79, 2, 1, "", "static_kaiser_bessel_derived_window"], [79, 2, 1, "", "static_kaiser_window"], [79, 2, 1, "", "static_tril_indices"], [79, 2, 1, "", "static_triu_indices"], [79, 2, 1, "", "static_vorbis_window"], [79, 2, 1, "", "tril_indices"], [79, 2, 1, "", "triu_indices"], [79, 2, 1, "", "vorbis_window"]], "ivy.container.experimental.ContainerWithElementWiseExperimental": [[79, 2, 1, "", "allclose"], [79, 2, 1, "", "angle"], [79, 2, 1, "", "binarizer"], [79, 2, 1, "", "conj"], [79, 2, 1, "", "copysign"], [79, 2, 1, "", "count_nonzero"], [79, 2, 1, "", "diff"], [79, 2, 1, "", "exp2"], [79, 2, 1, "", "fix"], [79, 2, 1, "", "float_power"], [79, 2, 1, "", "fmax"], [79, 2, 1, "", "fmin"], [79, 2, 1, "", "fmod"], [79, 2, 1, "", "gcd"], [79, 2, 1, "", "gradient"], [79, 2, 1, "", "hypot"], [79, 2, 1, "", "imag"], [79, 2, 1, "", "isclose"], [79, 2, 1, "", "lcm"], [79, 2, 1, "", "ldexp"], [79, 2, 1, "", "logaddexp2"], [79, 2, 1, "", "nan_to_num"], [79, 2, 1, "", "nansum"], [79, 2, 1, "", "nextafter"], [79, 2, 1, "", "real"], [79, 2, 1, "", "signbit"], [79, 2, 1, "", "sinc"], [79, 2, 1, "", "static_allclose"], [79, 2, 1, "", "static_angle"], [79, 2, 1, "", "static_binarizer"], [79, 2, 1, "", "static_conj"], [79, 2, 1, "", "static_copysign"], [79, 2, 1, "", "static_count_nonzero"], [79, 2, 1, "", "static_diff"], [79, 2, 1, "", "static_exp2"], [79, 2, 1, "", "static_fix"], [79, 2, 1, "", "static_float_power"], [79, 2, 1, "", "static_fmax"], [79, 2, 1, "", "static_fmin"], [79, 2, 1, "", "static_fmod"], [79, 2, 1, "", "static_gcd"], [79, 2, 1, "", "static_gradient"], [79, 2, 1, "", "static_hypot"], [79, 2, 1, "", "static_imag"], [79, 2, 1, "", "static_isclose"], [79, 2, 1, "", "static_lcm"], [79, 2, 1, "", "static_ldexp"], [79, 2, 1, "", "static_logaddexp2"], [79, 2, 1, "", "static_nan_to_num"], [79, 2, 1, "", "static_nansum"], [79, 2, 1, "", "static_nextafter"], [79, 2, 1, "", "static_real"], [79, 2, 1, "", "static_signbit"], [79, 2, 1, "", "static_sinc"], [79, 2, 1, "", "static_xlogy"], [79, 2, 1, "", "static_zeta"], [79, 2, 1, "", "xlogy"], [79, 2, 1, "", "zeta"]], "ivy.container.experimental.ContainerWithGeneralExperimental": [[79, 2, 1, "", "isin"], [79, 2, 1, "", "static_isin"]], "ivy.container.experimental.ContainerWithLayersExperimental": [[79, 2, 1, "", "avg_pool1d"], [79, 2, 1, "", "avg_pool2d"], [79, 2, 1, "", "avg_pool3d"], [79, 2, 1, "", "dct"], [79, 2, 1, "", "dft"], [79, 2, 1, "", "embedding"], [79, 2, 1, "", "fft"], [79, 2, 1, "", "ifft"], [79, 2, 1, "", "interpolate"], [79, 2, 1, "", "max_pool1d"], [79, 2, 1, "", "max_pool2d"], [79, 2, 1, "", "max_pool3d"], [79, 2, 1, "", "static_avg_pool1d"], [79, 2, 1, "", "static_avg_pool2d"], [79, 2, 1, "", "static_avg_pool3d"], [79, 2, 1, "", "static_dct"], [79, 2, 1, "", "static_dft"], [79, 2, 1, "", "static_embedding"], [79, 2, 1, "", "static_fft"], [79, 2, 1, "", "static_ifft"], [79, 2, 1, "", "static_interpolate"], [79, 2, 1, "", "static_max_pool1d"], [79, 2, 1, "", "static_max_pool2d"], [79, 2, 1, "", "static_max_pool3d"]], "ivy.container.experimental.ContainerWithLinearAlgebraExperimental": [[79, 2, 1, "", "adjoint"], [79, 2, 1, "", "diagflat"], [79, 2, 1, "", "eig"], [79, 2, 1, "", "eigh_tridiagonal"], [79, 2, 1, "", "eigvals"], [79, 2, 1, "", "kron"], [79, 2, 1, "", "matrix_exp"], [79, 2, 1, "", "static_adjoint"], [79, 2, 1, "", "static_diagflat"], [79, 2, 1, "", "static_eig"], [79, 2, 1, "", "static_eigh_tridiagonal"], [79, 2, 1, "", "static_eigvals"], [79, 2, 1, "", "static_kron"], [79, 2, 1, "", "static_matrix_exp"]], "ivy.container.experimental.ContainerWithLossesExperimental": [[79, 2, 1, "", "binary_cross_entropy_with_logits"], [79, 2, 1, "", "static_binary_cross_entropy_with_logits"]], "ivy.container.experimental.ContainerWithManipulationExperimental": [[79, 2, 1, "", "atleast_1d"], [79, 2, 1, "", "atleast_2d"], [79, 2, 1, "", "atleast_3d"], [79, 2, 1, "", "broadcast_shapes"], [79, 2, 1, "", "dsplit"], [79, 2, 1, "", "dstack"], [79, 2, 1, "", "expand"], [79, 2, 1, "", "flatten"], [79, 2, 1, "", "fliplr"], [79, 2, 1, "", "flipud"], [79, 2, 1, "", "heaviside"], [79, 2, 1, "", "hsplit"], [79, 2, 1, "", "hstack"], [79, 2, 1, "", "i0"], [79, 2, 1, "", "moveaxis"], [79, 2, 1, "", "pad"], [79, 2, 1, "", "rot90"], [79, 2, 1, "", "static_atleast_1d"], [79, 2, 1, "", "static_atleast_2d"], [79, 2, 1, "", "static_atleast_3d"], [79, 2, 1, "", "static_broadcast_shapes"], [79, 2, 1, "", "static_dsplit"], [79, 2, 1, "", "static_dstack"], [79, 2, 1, "", "static_expand"], [79, 2, 1, "", "static_flatten"], [79, 2, 1, "", "static_fliplr"], [79, 2, 1, "", "static_flipud"], [79, 2, 1, "", "static_heaviside"], [79, 2, 1, "", "static_hsplit"], [79, 2, 1, "", "static_hstack"], [79, 2, 1, "", "static_i0"], [79, 2, 1, "", "static_moveaxis"], [79, 2, 1, "", "static_pad"], [79, 2, 1, "", "static_rot90"], [79, 2, 1, "", "static_take_along_axis"], [79, 2, 1, "", "static_top_k"], [79, 2, 1, "", "static_vsplit"], [79, 2, 1, "", "static_vstack"], [79, 2, 1, "", "take_along_axis"], [79, 2, 1, "", "top_k"], [79, 2, 1, "", "vsplit"], [79, 2, 1, "", "vstack"]], "ivy.container.experimental.ContainerWithNormsExperimental": [[79, 2, 1, "", "instance_norm"], [79, 2, 1, "", "l2_normalize"], [79, 2, 1, "", "lp_normalize"], [79, 2, 1, "", "static_instance_norm"], [79, 2, 1, "", "static_l2_normalize"], [79, 2, 1, "", "static_lp_normalize"]], "ivy.container.experimental.ContainerWithRandomExperimental": [[79, 2, 1, "", "bernoulli"], [79, 2, 1, "", "beta"], [79, 2, 1, "", "dirichlet"], [79, 2, 1, "", "poisson"], [79, 2, 1, "", "static_bernoulli"], [79, 2, 1, "", "static_beta"], [79, 2, 1, "", "static_dirichlet"], [79, 2, 1, "", "static_poisson"]], "ivy.container.experimental.ContainerWithSortingExperimental": [[79, 2, 1, "", "lexsort"], [79, 2, 1, "", "msort"], [79, 2, 1, "", "static_lexsort"], [79, 2, 1, "", "static_msort"]], "ivy.container.experimental.ContainerWithStatisticalExperimental": [[79, 2, 1, "", "bincount"], [79, 2, 1, "", "corrcoef"], [79, 2, 1, "", "median"], [79, 2, 1, "", "nanmean"], [79, 2, 1, "", "nanmedian"], [79, 2, 1, "", "quantile"], [79, 2, 1, "", "static_bincount"], [79, 2, 1, "", "static_corrcoef"], [79, 2, 1, "", "static_median"], [79, 2, 1, "", "static_nanmean"], [79, 2, 1, "", "static_nanmedian"], [79, 2, 1, "", "static_quantile"], [79, 2, 1, "", "static_unravel_index"], [79, 2, 1, "", "unravel_index"]], "ivy.container.general": [[81, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[81, 2, 1, "", "all_equal"], [81, 2, 1, "", "array_equal"], [81, 2, 1, "", "assert_supports_inplace"], [81, 2, 1, "", "clip_matrix_norm"], [81, 2, 1, "", "clip_vector_norm"], [81, 2, 1, "", "einops_rearrange"], [81, 2, 1, "", "einops_reduce"], [81, 2, 1, "", "einops_repeat"], [81, 2, 1, "", "fourier_encode"], [81, 2, 1, "", "gather"], [81, 2, 1, "", "gather_nd"], [81, 2, 1, "", "get_num_dims"], [81, 2, 1, "", "has_nans"], [81, 2, 1, "", "inplace_decrement"], [81, 2, 1, "", "inplace_increment"], [81, 2, 1, "", "inplace_update"], [81, 2, 1, "", "is_array"], [81, 2, 1, "", "is_ivy_array"], [81, 2, 1, "", "is_native_array"], [81, 2, 1, "", "scatter_flat"], [81, 2, 1, "", "scatter_nd"], [81, 2, 1, "", "stable_divide"], [81, 2, 1, "", "stable_pow"], [81, 2, 1, "", "static_all_equal"], [81, 2, 1, "", "static_array_equal"], [81, 2, 1, "", "static_assert_supports_inplace"], [81, 2, 1, "", "static_clip_matrix_norm"], [81, 2, 1, "", "static_clip_vector_norm"], [81, 2, 1, "", "static_einops_rearrange"], [81, 2, 1, "", "static_einops_reduce"], [81, 2, 1, "", "static_einops_repeat"], [81, 2, 1, "", "static_fourier_encode"], [81, 2, 1, "", "static_gather"], [81, 2, 1, "", "static_gather_nd"], [81, 2, 1, "", "static_get_num_dims"], [81, 2, 1, "", "static_has_nans"], [81, 2, 1, "", "static_inplace_decrement"], [81, 2, 1, "", "static_inplace_increment"], [81, 2, 1, "", "static_inplace_update"], [81, 2, 1, "", "static_is_array"], [81, 2, 1, "", "static_is_ivy_array"], [81, 2, 1, "", "static_is_native_array"], [81, 2, 1, "", "static_scatter_flat"], [81, 2, 1, "", "static_scatter_nd"], [81, 2, 1, "", "static_stable_divide"], [81, 2, 1, "", "static_stable_pow"], [81, 2, 1, "", "static_supports_inplace_updates"], [81, 2, 1, "", "static_to_list"], [81, 2, 1, "", "static_to_numpy"], [81, 2, 1, "", "static_to_scalar"], [81, 2, 1, "", "static_value_is_nan"], [81, 2, 1, "", "supports_inplace_updates"], [81, 2, 1, "", "to_list"], [81, 2, 1, "", "to_numpy"], [81, 2, 1, "", "to_scalar"], [81, 2, 1, "", "value_is_nan"]], "ivy.container.gradients": [[83, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[83, 2, 1, "", "adam_step"], [83, 2, 1, "", "adam_update"], [83, 2, 1, "", "gradient_descent_update"], [83, 2, 1, "", "lamb_update"], [83, 2, 1, "", "lars_update"], [83, 2, 1, "", "optimizer_update"], [83, 2, 1, "", "static_stop_gradient"], [83, 2, 1, "", "stop_gradient"]], "ivy.container.image": [[85, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[87, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[87, 2, 1, "", "conv1d"], [87, 2, 1, "", "conv1d_transpose"], [87, 2, 1, "", "conv2d"], [87, 2, 1, "", "conv2d_transpose"], [87, 2, 1, "", "conv3d"], [87, 2, 1, "", "conv3d_transpose"], [87, 2, 1, "", "depthwise_conv2d"], [87, 2, 1, "", "dropout"], [87, 2, 1, "", "dropout1d"], [87, 2, 1, "", "dropout3d"], [87, 2, 1, "", "linear"], [87, 2, 1, "", "lstm_update"], [87, 2, 1, "", "multi_head_attention"], [87, 2, 1, "", "scaled_dot_product_attention"], [87, 2, 1, "", "static_conv1d"], [87, 2, 1, "", "static_conv1d_transpose"], [87, 2, 1, "", "static_conv2d"], [87, 2, 1, "", "static_conv2d_transpose"], [87, 2, 1, "", "static_conv3d"], [87, 2, 1, "", "static_conv3d_transpose"], [87, 2, 1, "", "static_depthwise_conv2d"], [87, 2, 1, "", "static_dropout"], [87, 2, 1, "", "static_dropout1d"], [87, 2, 1, "", "static_dropout3d"], [87, 2, 1, "", "static_linear"], [87, 2, 1, "", "static_lstm_update"], [87, 2, 1, "", "static_multi_head_attention"], [87, 2, 1, "", "static_scaled_dot_product_attention"]], "ivy.container.linear_algebra": [[89, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[89, 2, 1, "", "cholesky"], [89, 2, 1, "", "cross"], [89, 2, 1, "", "det"], [89, 2, 1, "", "diag"], [89, 2, 1, "", "diagonal"], [89, 2, 1, "", "eigh"], [89, 2, 1, "", "eigvalsh"], [89, 2, 1, "", "inner"], [89, 2, 1, "", "inv"], [89, 2, 1, "", "matmul"], [89, 2, 1, "", "matrix_norm"], [89, 2, 1, "", "matrix_power"], [89, 2, 1, "", "matrix_rank"], [89, 2, 1, "", "matrix_transpose"], [89, 2, 1, "", "outer"], [89, 2, 1, "", "pinv"], [89, 2, 1, "", "qr"], [89, 2, 1, "", "slogdet"], [89, 2, 1, "", "solve"], [89, 2, 1, "", "static_cholesky"], [89, 2, 1, "", "static_cross"], [89, 2, 1, "", "static_det"], [89, 2, 1, "", "static_diag"], [89, 2, 1, "", "static_diagonal"], [89, 2, 1, "", "static_eigh"], [89, 2, 1, "", "static_eigvalsh"], [89, 2, 1, "", "static_inner"], [89, 2, 1, "", "static_inv"], [89, 2, 1, "", "static_matmul"], [89, 2, 1, "", "static_matrix_norm"], [89, 2, 1, "", "static_matrix_power"], [89, 2, 1, "", "static_matrix_rank"], [89, 2, 1, "", "static_matrix_transpose"], [89, 2, 1, "", "static_outer"], [89, 2, 1, "", "static_pinv"], [89, 2, 1, "", "static_qr"], [89, 2, 1, "", "static_slogdet"], [89, 2, 1, "", "static_solve"], [89, 2, 1, "", "static_svd"], [89, 2, 1, "", "static_svdvals"], [89, 2, 1, "", "static_tensordot"], [89, 2, 1, "", "static_trace"], [89, 2, 1, "", "static_vander"], [89, 2, 1, "", "static_vecdot"], [89, 2, 1, "", "static_vector_norm"], [89, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [89, 2, 1, "", "svd"], [89, 2, 1, "", "svdvals"], [89, 2, 1, "", "tensordot"], [89, 2, 1, "", "tensorsolve"], [89, 2, 1, "", "trace"], [89, 2, 1, "", "vander"], [89, 2, 1, "", "vecdot"], [89, 2, 1, "", "vector_norm"], [89, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[91, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[91, 2, 1, "", "binary_cross_entropy"], [91, 2, 1, "", "cross_entropy"], [91, 2, 1, "", "sparse_cross_entropy"], [91, 2, 1, "", "static_binary_cross_entropy"], [91, 2, 1, "", "static_cross_entropy"], [91, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[93, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[93, 2, 1, "", "clip"], [93, 2, 1, "", "concat"], [93, 2, 1, "", "constant_pad"], [93, 2, 1, "", "expand_dims"], [93, 2, 1, "", "flip"], [93, 2, 1, "", "permute_dims"], [93, 2, 1, "", "repeat"], [93, 2, 1, "", "reshape"], [93, 2, 1, "", "roll"], [93, 2, 1, "", "split"], [93, 2, 1, "", "squeeze"], [93, 2, 1, "", "stack"], [93, 2, 1, "", "static_clip"], [93, 2, 1, "", "static_concat"], [93, 2, 1, "", "static_constant_pad"], [93, 2, 1, "", "static_expand_dims"], [93, 2, 1, "", "static_flip"], [93, 2, 1, "", "static_permute_dims"], [93, 2, 1, "", "static_repeat"], [93, 2, 1, "", "static_reshape"], [93, 2, 1, "", "static_roll"], [93, 2, 1, "", "static_split"], [93, 2, 1, "", "static_squeeze"], [93, 2, 1, "", "static_stack"], [93, 2, 1, "", "static_swapaxes"], [93, 2, 1, "", "static_tile"], [93, 2, 1, "", "static_unstack"], [93, 2, 1, "", "static_zero_pad"], [93, 2, 1, "", "swapaxes"], [93, 2, 1, "", "tile"], [93, 2, 1, "", "unstack"], [93, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[95, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[95, 2, 1, "", "layer_norm"]], "ivy.container.random": [[97, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[97, 2, 1, "", "multinomial"], [97, 2, 1, "", "randint"], [97, 2, 1, "", "random_normal"], [97, 2, 1, "", "random_uniform"], [97, 2, 1, "", "shuffle"], [97, 2, 1, "", "static_multinomial"], [97, 2, 1, "", "static_randint"], [97, 2, 1, "", "static_random_normal"], [97, 2, 1, "", "static_random_uniform"], [97, 2, 1, "", "static_shuffle"]], "ivy.container.searching": [[99, 1, 1, "", "ContainerWithSearching"]], "ivy.container.searching.ContainerWithSearching": [[99, 2, 1, "", "argmax"], [99, 2, 1, "", "argmin"], [99, 2, 1, "", "argwhere"], [99, 2, 1, "", "nonzero"], [99, 2, 1, "", "static_argmax"], [99, 2, 1, "", "static_argmin"], [99, 2, 1, "", "static_argwhere"], [99, 2, 1, "", "static_nonzero"], [99, 2, 1, "", "static_where"], [99, 2, 1, "", "where"]], "ivy.container.set": [[101, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[101, 2, 1, "", "static_unique_all"], [101, 2, 1, "", "static_unique_counts"], [101, 2, 1, "", "static_unique_inverse"], [101, 2, 1, "", "static_unique_values"], [101, 2, 1, "", "unique_all"], [101, 2, 1, "", "unique_counts"], [101, 2, 1, "", "unique_inverse"], [101, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[103, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[103, 2, 1, "", "argsort"], [103, 2, 1, "", "searchsorted"], [103, 2, 1, "", "sort"], [103, 2, 1, "", "static_argsort"], [103, 2, 1, "", "static_searchsorted"], [103, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[105, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[105, 2, 1, "", "cumprod"], [105, 2, 1, "", "cumsum"], [105, 2, 1, "", "einsum"], [105, 2, 1, "", "max"], [105, 2, 1, "", "mean"], [105, 2, 1, "", "min"], [105, 2, 1, "", "prod"], [105, 2, 1, "", "static_cumprod"], [105, 2, 1, "", "static_cumsum"], [105, 2, 1, "", "static_prod"], [105, 2, 1, "", "static_sum"], [105, 2, 1, "", "static_var"], [105, 2, 1, "", "std"], [105, 2, 1, "", "sum"], [105, 2, 1, "", "var"]], "ivy.container.utility": [[107, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[107, 2, 1, "", "all"], [107, 2, 1, "", "any"], [107, 2, 1, "", "static_all"], [107, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[109, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[151, 4, 1, "", "handle_array_function"], [152, 4, 1, "", "handle_array_like_without_promotion"], [153, 4, 1, "", "handle_nans"], [154, 4, 1, "", "handle_nestable"], [155, 4, 1, "", "handle_out_argument"], [156, 4, 1, "", "handle_view"], [157, 4, 1, "", "handle_view_indexing"], [158, 4, 1, "", "infer_device"], [159, 4, 1, "", "infer_dtype"], [160, 4, 1, "", "inputs_to_ivy_arrays"], [161, 4, 1, "", "inputs_to_native_arrays"], [162, 4, 1, "", "integer_arrays_to_float"], [163, 4, 1, "", "output_to_native_arrays"], [164, 4, 1, "", "outputs_to_ivy_arrays"], [165, 4, 1, "", "to_ivy_arrays_and_back"], [166, 4, 1, "", "to_native_arrays_and_back"], [167, 4, 1, "", "try_array_function_override"], [150, 4, 1, "", "with_supported_device_and_dtypes"], [150, 4, 1, "", "with_supported_devices"], [150, 4, 1, "", "with_supported_dtypes"], [150, 4, 1, "", "with_unsupported_device_and_dtypes"], [150, 4, 1, "", "with_unsupported_devices"], [150, 4, 1, "", "with_unsupported_dtypes"]], "ivy.functional.ivy": [[169, 0, 0, "-", "activations"], [213, 0, 0, "-", "constants"], [214, 0, 0, "-", "control_flow_ops"], [219, 0, 0, "-", "creation"], [305, 0, 0, "-", "data_type"], [410, 0, 0, "-", "device"], [445, 0, 0, "-", "elementwise"], [766, 0, 0, "-", "experimental"], [1414, 0, 0, "-", "general"], [1609, 0, 0, "-", "gradients"], [1647, 0, 0, "-", "layers"], [1711, 0, 0, "-", "linear_algebra"], [1852, 0, 0, "-", "losses"], [1868, 0, 0, "-", "manipulation"], [1949, 0, 0, "-", "meta"], [1953, 0, 0, "-", "nest"], [1973, 0, 0, "-", "norms"], [1978, 0, 0, "-", "random"], [2005, 0, 0, "-", "searching"], [2031, 0, 0, "-", "set"], [2052, 0, 0, "-", "sorting"], [2068, 0, 0, "-", "statistical"], [2114, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[170, 4, 1, "", "deserialize"], [174, 4, 1, "", "gelu"], [176, 4, 1, "", "get"], [180, 4, 1, "", "leaky_relu"], [185, 4, 1, "", "log_softmax"], [190, 4, 1, "", "mish"], [195, 4, 1, "", "relu"], [200, 4, 1, "", "sigmoid"], [205, 4, 1, "", "softmax"], [210, 4, 1, "", "softplus"]], "ivy.functional.ivy.constants": [[213, 5, 1, "", "e"], [213, 5, 1, "", "inf"], [213, 5, 1, "", "nan"], [213, 5, 1, "", "newaxis"], [213, 5, 1, "", "pi"]], "ivy.functional.ivy.control_flow_ops": [[215, 4, 1, "", "IfElse"], [216, 4, 1, "", "WhileLoop"], [217, 4, 1, "", "if_else"], [218, 4, 1, "", "while_loop"]], "ivy.functional.ivy.creation": [[220, 1, 1, "", "NestedSequence"], [222, 4, 1, "", "arange"], [219, 4, 1, "", "array"], [226, 4, 1, "", "asarray"], [228, 4, 1, "", "asarray_handle_nestable"], [229, 4, 1, "", "asarray_infer_device"], [230, 4, 1, "", "asarray_to_native_arrays_and_back"], [233, 4, 1, "", "copy_array"], [234, 4, 1, "", "empty"], [238, 4, 1, "", "empty_like"], [241, 4, 1, "", "eye"], [246, 4, 1, "", "from_dlpack"], [248, 4, 1, "", "full"], [252, 4, 1, "", "full_like"], [257, 4, 1, "", "linspace"], [262, 4, 1, "", "logspace"], [267, 4, 1, "", "meshgrid"], [272, 4, 1, "", "native_array"], [277, 4, 1, "", "one_hot"], [280, 4, 1, "", "ones"], [285, 4, 1, "", "ones_like"], [291, 4, 1, "", "tril"], [296, 4, 1, "", "triu"], [299, 4, 1, "", "zeros"], [304, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.creation.NestedSequence": [[220, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type": [[306, 1, 1, "", "DefaultComplexDtype"], [307, 1, 1, "", "DefaultDtype"], [308, 1, 1, "", "DefaultFloatDtype"], [309, 1, 1, "", "DefaultIntDtype"], [310, 1, 1, "", "DefaultUintDtype"], [311, 4, 1, "", "as_ivy_dtype"], [312, 4, 1, "", "as_native_dtype"], [316, 4, 1, "", "astype"], [321, 4, 1, "", "broadcast_arrays"], [326, 4, 1, "", "broadcast_to"], [331, 4, 1, "", "can_cast"], [333, 4, 1, "", "check_float"], [334, 4, 1, "", "closest_valid_dtype"], [336, 4, 1, "", "default_complex_dtype"], [338, 4, 1, "", "default_dtype"], [340, 4, 1, "", "default_float_dtype"], [342, 4, 1, "", "default_int_dtype"], [343, 4, 1, "", "default_uint_dtype"], [346, 4, 1, "", "dtype"], [348, 4, 1, "", "dtype_bits"], [352, 4, 1, "", "finfo"], [355, 4, 1, "", "function_supported_dtypes"], [358, 4, 1, "", "function_unsupported_dtypes"], [363, 4, 1, "", "iinfo"], [365, 4, 1, "", "infer_default_dtype"], [366, 4, 1, "", "invalid_dtype"], [370, 4, 1, "", "is_bool_dtype"], [374, 4, 1, "", "is_complex_dtype"], [379, 4, 1, "", "is_float_dtype"], [384, 4, 1, "", "is_int_dtype"], [389, 4, 1, "", "is_uint_dtype"], [391, 4, 1, "", "promote_types"], [392, 4, 1, "", "promote_types_of_inputs"], [396, 4, 1, "", "result_type"], [398, 4, 1, "", "set_default_complex_dtype"], [399, 4, 1, "", "set_default_dtype"], [400, 4, 1, "", "set_default_float_dtype"], [401, 4, 1, "", "set_default_int_dtype"], [402, 4, 1, "", "set_default_uint_dtype"], [403, 4, 1, "", "type_promote_arrays"], [404, 4, 1, "", "unset_default_complex_dtype"], [405, 4, 1, "", "unset_default_dtype"], [406, 4, 1, "", "unset_default_float_dtype"], [407, 4, 1, "", "unset_default_int_dtype"], [408, 4, 1, "", "unset_default_uint_dtype"], [409, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultComplexDtype": [[306, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultDtype": [[307, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[308, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[309, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[310, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[411, 1, 1, "", "DefaultDevice"], [412, 1, 1, "", "Profiler"], [413, 4, 1, "", "as_ivy_dev"], [414, 4, 1, "", "as_native_dev"], [415, 4, 1, "", "clear_mem_on_dev"], [416, 4, 1, "", "default_device"], [420, 4, 1, "", "dev"], [422, 4, 1, "", "dev_util"], [423, 4, 1, "", "function_supported_devices"], [424, 4, 1, "", "function_unsupported_devices"], [425, 4, 1, "", "get_all_ivy_arrays_on_dev"], [426, 4, 1, "", "gpu_is_available"], [427, 4, 1, "", "num_cpu_cores"], [428, 4, 1, "", "num_gpus"], [429, 4, 1, "", "num_ivy_arrays_on_dev"], [430, 4, 1, "", "percent_used_mem_on_dev"], [431, 4, 1, "", "print_all_ivy_arrays_on_dev"], [432, 4, 1, "", "set_default_device"], [433, 4, 1, "", "set_split_factor"], [434, 4, 1, "", "split_factor"], [435, 4, 1, "", "split_func_call"], [440, 4, 1, "", "to_device"], [441, 4, 1, "", "total_mem_on_dev"], [442, 4, 1, "", "tpu_is_available"], [443, 4, 1, "", "unset_default_device"], [444, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[411, 2, 1, "", "__enter__"], [411, 2, 1, "", "__exit__"], [411, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[412, 2, 1, "", "__init__"], [412, 2, 1, "", "start"], [412, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[449, 4, 1, "", "abs"], [454, 4, 1, "", "acos"], [459, 4, 1, "", "acosh"], [464, 4, 1, "", "add"], [469, 4, 1, "", "asin"], [474, 4, 1, "", "asinh"], [479, 4, 1, "", "atan"], [484, 4, 1, "", "atan2"], [489, 4, 1, "", "atanh"], [494, 4, 1, "", "bitwise_and"], [499, 4, 1, "", "bitwise_invert"], [504, 4, 1, "", "bitwise_left_shift"], [509, 4, 1, "", "bitwise_or"], [514, 4, 1, "", "bitwise_right_shift"], [519, 4, 1, "", "bitwise_xor"], [524, 4, 1, "", "ceil"], [529, 4, 1, "", "cos"], [534, 4, 1, "", "cosh"], [539, 4, 1, "", "deg2rad"], [544, 4, 1, "", "divide"], [549, 4, 1, "", "equal"], [554, 4, 1, "", "erf"], [559, 4, 1, "", "exp"], [564, 4, 1, "", "expm1"], [569, 4, 1, "", "floor"], [574, 4, 1, "", "floor_divide"], [579, 4, 1, "", "greater"], [584, 4, 1, "", "greater_equal"], [589, 4, 1, "", "isfinite"], [594, 4, 1, "", "isinf"], [599, 4, 1, "", "isnan"], [604, 4, 1, "", "isreal"], [609, 4, 1, "", "less"], [614, 4, 1, "", "less_equal"], [619, 4, 1, "", "log"], [624, 4, 1, "", "log10"], [629, 4, 1, "", "log1p"], [634, 4, 1, "", "log2"], [639, 4, 1, "", "logaddexp"], [644, 4, 1, "", "logical_and"], [649, 4, 1, "", "logical_not"], [654, 4, 1, "", "logical_or"], [659, 4, 1, "", "logical_xor"], [664, 4, 1, "", "maximum"], [669, 4, 1, "", "minimum"], [674, 4, 1, "", "multiply"], [679, 4, 1, "", "negative"], [684, 4, 1, "", "not_equal"], [689, 4, 1, "", "positive"], [694, 4, 1, "", "pow"], [699, 4, 1, "", "rad2deg"], [704, 4, 1, "", "reciprocal"], [709, 4, 1, "", "remainder"], [714, 4, 1, "", "round"], [719, 4, 1, "", "sign"], [724, 4, 1, "", "sin"], [729, 4, 1, "", "sinh"], [734, 4, 1, "", "sqrt"], [739, 4, 1, "", "square"], [745, 4, 1, "", "subtract"], [750, 4, 1, "", "tan"], [755, 4, 1, "", "tanh"], [760, 4, 1, "", "trunc"], [765, 4, 1, "", "trunc_divide"]], "ivy.functional.ivy.experimental": [[767, 1, 1, "", "NativeSparseArray"], [768, 1, 1, "", "SparseArray"], [769, 0, 0, "-", "activations"], [777, 4, 1, "", "adjoint"], [782, 4, 1, "", "allclose"], [787, 4, 1, "", "angle"], [792, 4, 1, "", "atleast_1d"], [797, 4, 1, "", "atleast_2d"], [802, 4, 1, "", "atleast_3d"], [807, 4, 1, "", "avg_pool1d"], [812, 4, 1, "", "avg_pool2d"], [817, 4, 1, "", "avg_pool3d"], [822, 4, 1, "", "bernoulli"], [827, 4, 1, "", "beta"], [832, 4, 1, "", "binarizer"], [836, 4, 1, "", "binary_cross_entropy_with_logits"], [841, 4, 1, "", "bincount"], [843, 4, 1, "", "bind_custom_gradient_function"], [846, 4, 1, "", "broadcast_shapes"], [848, 4, 1, "", "compute_weight_mat"], [852, 4, 1, "", "conj"], [854, 0, 0, "-", "constants"], [858, 4, 1, "", "copysign"], [863, 4, 1, "", "corrcoef"], [868, 4, 1, "", "count_nonzero"], [870, 0, 0, "-", "creation"], [879, 0, 0, "-", "data_type"], [884, 4, 1, "", "dct"], [886, 0, 0, "-", "device"], [889, 4, 1, "", "dft"], [894, 4, 1, "", "diagflat"], [899, 4, 1, "", "diff"], [904, 4, 1, "", "dirichlet"], [906, 4, 1, "", "dropout1d"], [907, 4, 1, "", "dropout3d"], [911, 4, 1, "", "dsplit"], [916, 4, 1, "", "dstack"], [921, 4, 1, "", "eig"], [926, 4, 1, "", "eigh_tridiagonal"], [931, 4, 1, "", "eigvals"], [933, 0, 0, "-", "elementwise"], [967, 4, 1, "", "embedding"], [972, 4, 1, "", "exp2"], [977, 4, 1, "", "expand"], [982, 4, 1, "", "eye_like"], [987, 4, 1, "", "fft"], [992, 4, 1, "", "fix"], [997, 4, 1, "", "flatten"], [1002, 4, 1, "", "fliplr"], [1007, 4, 1, "", "flipud"], [1012, 4, 1, "", "float_power"], [1017, 4, 1, "", "fmax"], [1022, 4, 1, "", "fmin"], [1027, 4, 1, "", "fmod"], [1031, 4, 1, "", "gamma"], [1035, 4, 1, "", "gcd"], [1037, 0, 0, "-", "general"], [1042, 4, 1, "", "gradient"], [1044, 0, 0, "-", "gradients"], [1048, 4, 1, "", "hamming_window"], [1052, 4, 1, "", "hann_window"], [1057, 4, 1, "", "heaviside"], [1062, 4, 1, "", "hsplit"], [1067, 4, 1, "", "hstack"], [1072, 4, 1, "", "hypot"], [1077, 4, 1, "", "i0"], [1082, 4, 1, "", "ifft"], [1087, 4, 1, "", "imag"], [1092, 4, 1, "", "instance_norm"], [1094, 4, 1, "", "interp"], [1098, 4, 1, "", "interpolate"], [1100, 4, 1, "", "is_ivy_sparse_array"], [1101, 4, 1, "", "is_native_dtype"], [1102, 4, 1, "", "is_native_sparse_array"], [1106, 4, 1, "", "isclose"], [1111, 4, 1, "", "isin"], [1115, 4, 1, "", "kaiser_bessel_derived_window"], [1119, 4, 1, "", "kaiser_window"], [1124, 4, 1, "", "kron"], [1129, 4, 1, "", "l2_normalize"], [1131, 0, 0, "-", "layers"], [1152, 4, 1, "", "lcm"], [1157, 4, 1, "", "ldexp"], [1162, 4, 1, "", "lexsort"], [1164, 0, 0, "-", "linear_algebra"], [1176, 4, 1, "", "logaddexp2"], [1181, 4, 1, "", "logit"], [1183, 0, 0, "-", "losses"], [1188, 4, 1, "", "lp_normalize"], [1190, 0, 0, "-", "manipulation"], [1217, 4, 1, "", "matrix_exp"], [1222, 4, 1, "", "max_pool1d"], [1227, 4, 1, "", "max_pool2d"], [1232, 4, 1, "", "max_pool3d"], [1237, 4, 1, "", "median"], [1239, 0, 0, "-", "meta"], [1243, 4, 1, "", "moveaxis"], [1248, 4, 1, "", "msort"], [1250, 4, 1, "", "multi_dot"], [1254, 4, 1, "", "nan_to_num"], [1259, 4, 1, "", "nanmean"], [1264, 4, 1, "", "nanmedian"], [1269, 4, 1, "", "nansum"], [1271, 4, 1, "", "native_sparse_array"], [1272, 4, 1, "", "native_sparse_array_to_indices_values_and_shape"], [1273, 4, 1, "", "ndenumerate"], [1274, 4, 1, "", "ndindex"], [1275, 0, 0, "-", "nest"], [1279, 4, 1, "", "nextafter"], [1281, 0, 0, "-", "norms"], [1288, 4, 1, "", "pad"], [1290, 4, 1, "", "padding_ceil_mode"], [1294, 4, 1, "", "poisson"], [1299, 4, 1, "", "prelu"], [1304, 4, 1, "", "quantile"], [1306, 0, 0, "-", "random"], [1315, 4, 1, "", "real"], [1320, 4, 1, "", "relu6"], [1325, 4, 1, "", "rot90"], [1327, 0, 0, "-", "searching"], [1328, 0, 0, "-", "set"], [1332, 4, 1, "", "signbit"], [1337, 4, 1, "", "sinc"], [1339, 0, 0, "-", "sorting"], [1342, 0, 0, "-", "sparse_array"], [1349, 0, 0, "-", "statistical"], [1361, 4, 1, "", "take_along_axis"], [1366, 4, 1, "", "thresholded_relu"], [1371, 4, 1, "", "top_k"], [1374, 4, 1, "", "trapz"], [1378, 4, 1, "", "tril_indices"], [1382, 4, 1, "", "triu_indices"], [1387, 4, 1, "", "unravel_index"], [1388, 0, 0, "-", "utility"], [1392, 4, 1, "", "vorbis_window"], [1397, 4, 1, "", "vsplit"], [1402, 4, 1, "", "vstack"], [1407, 4, 1, "", "xlogy"], [1412, 4, 1, "", "zeta"]], "ivy.functional.ivy.experimental.SparseArray": [[768, 2, 1, "", "__init__"], [768, 3, 1, "", "ccol_indices"], [768, 3, 1, "", "col_indices"], [768, 3, 1, "", "coo_indices"], [768, 3, 1, "", "crow_indices"], [768, 3, 1, "", "data"], [768, 3, 1, "", "dense_shape"], [768, 3, 1, "", "row_indices"], [768, 2, 1, "", "to_dense_array"], [768, 3, 1, "", "values"]], "ivy.functional.ivy.experimental.activations": [[770, 4, 1, "", "logit"], [771, 4, 1, "", "prelu"], [772, 4, 1, "", "relu6"], [773, 4, 1, "", "thresholded_relu"]], "ivy.functional.ivy.experimental.creation": [[871, 4, 1, "", "eye_like"], [872, 4, 1, "", "hamming_window"], [873, 4, 1, "", "hann_window"], [874, 4, 1, "", "kaiser_bessel_derived_window"], [875, 4, 1, "", "kaiser_window"], [876, 4, 1, "", "tril_indices"], [877, 4, 1, "", "triu_indices"], [878, 4, 1, "", "vorbis_window"]], "ivy.functional.ivy.experimental.data_type": [[880, 4, 1, "", "is_native_dtype"]], "ivy.functional.ivy.experimental.elementwise": [[934, 4, 1, "", "allclose"], [935, 4, 1, "", "angle"], [936, 4, 1, "", "binarizer"], [937, 4, 1, "", "conj"], [938, 4, 1, "", "copysign"], [939, 4, 1, "", "count_nonzero"], [940, 4, 1, "", "diff"], [941, 4, 1, "", "exp2"], [942, 4, 1, "", "fix"], [943, 4, 1, "", "float_power"], [944, 4, 1, "", "fmax"], [945, 4, 1, "", "fmin"], [946, 4, 1, "", "fmod"], [947, 4, 1, "", "gcd"], [948, 4, 1, "", "gradient"], [949, 4, 1, "", "hypot"], [950, 4, 1, "", "imag"], [951, 4, 1, "", "isclose"], [952, 4, 1, "", "lcm"], [953, 4, 1, "", "ldexp"], [954, 4, 1, "", "logaddexp2"], [955, 4, 1, "", "nan_to_num"], [956, 4, 1, "", "nansum"], [957, 4, 1, "", "nextafter"], [958, 4, 1, "", "real"], [959, 4, 1, "", "signbit"], [960, 4, 1, "", "sinc"], [961, 4, 1, "", "trapz"], [962, 4, 1, "", "xlogy"], [963, 4, 1, "", "zeta"]], "ivy.functional.ivy.experimental.general": [[1038, 4, 1, "", "isin"]], "ivy.functional.ivy.experimental.gradients": [[1045, 4, 1, "", "bind_custom_gradient_function"]], "ivy.functional.ivy.experimental.layers": [[1132, 4, 1, "", "avg_pool1d"], [1133, 4, 1, "", "avg_pool2d"], [1134, 4, 1, "", "avg_pool3d"], [1135, 4, 1, "", "compute_weight_mat"], [1136, 4, 1, "", "dct"], [1137, 4, 1, "", "dft"], [1138, 4, 1, "", "dropout1d"], [1139, 4, 1, "", "dropout3d"], [1140, 4, 1, "", "embedding"], [1141, 4, 1, "", "fft"], [1142, 4, 1, "", "ifft"], [1143, 4, 1, "", "interp"], [1144, 4, 1, "", "interpolate"], [1145, 4, 1, "", "max_pool1d"], [1146, 4, 1, "", "max_pool2d"], [1147, 4, 1, "", "max_pool3d"], [1148, 4, 1, "", "padding_ceil_mode"]], "ivy.functional.ivy.experimental.linear_algebra": [[1165, 4, 1, "", "adjoint"], [1166, 4, 1, "", "diagflat"], [1167, 4, 1, "", "eig"], [1168, 4, 1, "", "eigh_tridiagonal"], [1169, 4, 1, "", "eigvals"], [1170, 4, 1, "", "kron"], [1171, 4, 1, "", "matrix_exp"], [1172, 4, 1, "", "multi_dot"]], "ivy.functional.ivy.experimental.losses": [[1184, 4, 1, "", "binary_cross_entropy_with_logits"]], "ivy.functional.ivy.experimental.manipulation": [[1191, 4, 1, "", "atleast_1d"], [1192, 4, 1, "", "atleast_2d"], [1193, 4, 1, "", "atleast_3d"], [1194, 4, 1, "", "broadcast_shapes"], [1195, 4, 1, "", "dsplit"], [1196, 4, 1, "", "dstack"], [1197, 4, 1, "", "expand"], [1198, 4, 1, "", "flatten"], [1199, 4, 1, "", "fliplr"], [1200, 4, 1, "", "flipud"], [1201, 4, 1, "", "heaviside"], [1202, 4, 1, "", "hsplit"], [1203, 4, 1, "", "hstack"], [1204, 4, 1, "", "i0"], [1205, 4, 1, "", "moveaxis"], [1206, 4, 1, "", "ndenumerate"], [1207, 4, 1, "", "ndindex"], [1208, 4, 1, "", "pad"], [1209, 4, 1, "", "rot90"], [1210, 4, 1, "", "take_along_axis"], [1211, 4, 1, "", "top_k"], [1212, 4, 1, "", "vsplit"], [1213, 4, 1, "", "vstack"]], "ivy.functional.ivy.experimental.norms": [[1282, 4, 1, "", "instance_norm"], [1283, 4, 1, "", "l2_normalize"], [1284, 4, 1, "", "lp_normalize"]], "ivy.functional.ivy.experimental.random": [[1307, 4, 1, "", "bernoulli"], [1308, 4, 1, "", "beta"], [1309, 4, 1, "", "dirichlet"], [1310, 4, 1, "", "gamma"], [1311, 4, 1, "", "poisson"]], "ivy.functional.ivy.experimental.sorting": [[1340, 4, 1, "", "lexsort"], [1341, 4, 1, "", "msort"]], "ivy.functional.ivy.experimental.sparse_array": [[1343, 1, 1, "", "NativeSparseArray"], [1344, 1, 1, "", "SparseArray"], [1345, 4, 1, "", "is_ivy_sparse_array"], [1346, 4, 1, "", "is_native_sparse_array"], [1347, 4, 1, "", "native_sparse_array"], [1348, 4, 1, "", "native_sparse_array_to_indices_values_and_shape"]], "ivy.functional.ivy.experimental.sparse_array.SparseArray": [[1344, 2, 1, "", "__init__"], [1344, 3, 1, "", "ccol_indices"], [1344, 3, 1, "", "col_indices"], [1344, 3, 1, "", "coo_indices"], [1344, 3, 1, "", "crow_indices"], [1344, 3, 1, "", "data"], [1344, 3, 1, "", "dense_shape"], [1344, 3, 1, "", "row_indices"], [1344, 2, 1, "", "to_dense_array"], [1344, 3, 1, "", "values"]], "ivy.functional.ivy.experimental.statistical": [[1350, 4, 1, "", "bincount"], [1351, 4, 1, "", "corrcoef"], [1352, 4, 1, "", "median"], [1353, 4, 1, "", "nanmean"], [1354, 4, 1, "", "nanmedian"], [1355, 4, 1, "", "quantile"], [1356, 4, 1, "", "unravel_index"]], "ivy.functional.ivy.general": [[1418, 4, 1, "", "all_equal"], [1420, 4, 1, "", "arg_info"], [1421, 4, 1, "", "arg_names"], [1425, 4, 1, "", "array_equal"], [1430, 4, 1, "", "assert_supports_inplace"], [1432, 4, 1, "", "cache_fn"], [1436, 4, 1, "", "clip_matrix_norm"], [1441, 4, 1, "", "clip_vector_norm"], [1443, 4, 1, "", "container_types"], [1444, 4, 1, "", "current_backend_str"], [1447, 4, 1, "", "default"], [1451, 4, 1, "", "einops_rearrange"], [1456, 4, 1, "", "einops_reduce"], [1461, 4, 1, "", "einops_repeat"], [1465, 4, 1, "", "exists"], [1469, 4, 1, "", "fourier_encode"], [1471, 4, 1, "", "function_supported_devices_and_dtypes"], [1472, 4, 1, "", "function_unsupported_devices_and_dtypes"], [1476, 4, 1, "", "gather"], [1481, 4, 1, "", "gather_nd"], [1483, 4, 1, "", "get_all_arrays_in_memory"], [1484, 4, 1, "", "get_array_mode"], [1485, 4, 1, "", "get_exception_trace_mode"], [1486, 4, 1, "", "get_item"], [1487, 4, 1, "", "get_min_base"], [1488, 4, 1, "", "get_min_denominator"], [1489, 4, 1, "", "get_nestable_mode"], [1493, 4, 1, "", "get_num_dims"], [1495, 4, 1, "", "get_queue_timeout"], [1496, 4, 1, "", "get_referrers_recursive"], [1497, 4, 1, "", "get_show_func_wrapper_trace_mode"], [1498, 4, 1, "", "get_tmp_dir"], [1502, 4, 1, "", "has_nans"], [1504, 4, 1, "", "inplace_arrays_supported"], [1508, 4, 1, "", "inplace_decrement"], [1513, 4, 1, "", "inplace_increment"], [1518, 4, 1, "", "inplace_update"], [1520, 4, 1, "", "inplace_variables_supported"], [1524, 4, 1, "", "is_array"], [1529, 4, 1, "", "is_ivy_array"], [1533, 4, 1, "", "is_ivy_container"], [1537, 4, 1, "", "is_native_array"], [1539, 4, 1, "", "isscalar"], [1540, 4, 1, "", "match_kwargs"], [1541, 4, 1, "", "multiprocessing"], [1542, 4, 1, "", "num_arrays_in_memory"], [1543, 4, 1, "", "print_all_arrays_in_memory"], [1547, 4, 1, "", "scatter_flat"], [1552, 4, 1, "", "scatter_nd"], [1554, 4, 1, "", "set_array_mode"], [1555, 4, 1, "", "set_exception_trace_mode"], [1556, 4, 1, "", "set_min_base"], [1557, 4, 1, "", "set_min_denominator"], [1558, 4, 1, "", "set_nestable_mode"], [1559, 4, 1, "", "set_queue_timeout"], [1560, 4, 1, "", "set_shape_array_mode"], [1561, 4, 1, "", "set_show_func_wrapper_trace_mode"], [1562, 4, 1, "", "set_tmp_dir"], [1563, 4, 1, "", "shape"], [1564, 4, 1, "", "shape_array_mode"], [1568, 4, 1, "", "stable_divide"], [1573, 4, 1, "", "stable_pow"], [1579, 4, 1, "", "supports_inplace_updates"], [1580, 4, 1, "", "to_ivy_shape"], [1584, 4, 1, "", "to_list"], [1585, 4, 1, "", "to_native_shape"], [1590, 4, 1, "", "to_numpy"], [1595, 4, 1, "", "to_scalar"], [1596, 4, 1, "", "try_else_none"], [1597, 4, 1, "", "unset_array_mode"], [1598, 4, 1, "", "unset_exception_trace_mode"], [1599, 4, 1, "", "unset_nestable_mode"], [1600, 4, 1, "", "unset_queue_timeout"], [1601, 4, 1, "", "unset_shape_array_mode"], [1602, 4, 1, "", "unset_show_func_wrapper_trace_mode"], [1607, 4, 1, "", "value_is_nan"], [1608, 4, 1, "", "vmap"]], "ivy.functional.ivy.gradients": [[1610, 1, 1, "", "GradientTracking"], [1614, 4, 1, "", "adam_step"], [1618, 4, 1, "", "adam_update"], [1619, 4, 1, "", "execute_with_gradients"], [1620, 4, 1, "", "grad"], [1624, 4, 1, "", "gradient_descent_update"], [1625, 4, 1, "", "jac"], [1629, 4, 1, "", "lamb_update"], [1633, 4, 1, "", "lars_update"], [1637, 4, 1, "", "optimizer_update"], [1638, 4, 1, "", "set_with_grads"], [1643, 4, 1, "", "stop_gradient"], [1644, 4, 1, "", "unset_with_grads"], [1645, 4, 1, "", "value_and_grad"], [1646, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[1610, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[1648, 4, 1, "", "conv"], [1652, 4, 1, "", "conv1d"], [1657, 4, 1, "", "conv1d_transpose"], [1662, 4, 1, "", "conv2d"], [1667, 4, 1, "", "conv2d_transpose"], [1672, 4, 1, "", "conv3d"], [1677, 4, 1, "", "conv3d_transpose"], [1679, 4, 1, "", "conv_general_dilated"], [1680, 4, 1, "", "conv_general_transpose"], [1684, 4, 1, "", "depthwise_conv2d"], [1689, 4, 1, "", "dropout"], [1694, 4, 1, "", "linear"], [1699, 4, 1, "", "lstm_update"], [1704, 4, 1, "", "multi_head_attention"], [1709, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[1715, 4, 1, "", "cholesky"], [1720, 4, 1, "", "cross"], [1725, 4, 1, "", "det"], [1730, 4, 1, "", "diag"], [1735, 4, 1, "", "diagonal"], [1737, 4, 1, "", "eig"], [1741, 4, 1, "", "eigh"], [1746, 4, 1, "", "eigvalsh"], [1751, 4, 1, "", "inner"], [1756, 4, 1, "", "inv"], [1758, 4, 1, "", "lu_factor"], [1762, 4, 1, "", "matmul"], [1767, 4, 1, "", "matrix_norm"], [1772, 4, 1, "", "matrix_power"], [1777, 4, 1, "", "matrix_rank"], [1782, 4, 1, "", "matrix_transpose"], [1787, 4, 1, "", "outer"], [1792, 4, 1, "", "pinv"], [1797, 4, 1, "", "qr"], [1802, 4, 1, "", "slogdet"], [1807, 4, 1, "", "solve"], [1813, 4, 1, "", "svd"], [1818, 4, 1, "", "svdvals"], [1822, 4, 1, "", "tensordot"], [1826, 4, 1, "", "tensorsolve"], [1831, 4, 1, "", "trace"], [1836, 4, 1, "", "vander"], [1841, 4, 1, "", "vecdot"], [1846, 4, 1, "", "vector_norm"], [1851, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[1856, 4, 1, "", "binary_cross_entropy"], [1861, 4, 1, "", "cross_entropy"], [1866, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[1872, 4, 1, "", "clip"], [1877, 4, 1, "", "concat"], [1882, 4, 1, "", "constant_pad"], [1887, 4, 1, "", "expand_dims"], [1892, 4, 1, "", "flip"], [1897, 4, 1, "", "permute_dims"], [1902, 4, 1, "", "repeat"], [1907, 4, 1, "", "reshape"], [1912, 4, 1, "", "roll"], [1917, 4, 1, "", "split"], [1922, 4, 1, "", "squeeze"], [1927, 4, 1, "", "stack"], [1933, 4, 1, "", "swapaxes"], [1938, 4, 1, "", "tile"], [1943, 4, 1, "", "unstack"], [1948, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1950, 4, 1, "", "fomaml_step"], [1951, 4, 1, "", "maml_step"], [1952, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1954, 4, 1, "", "all_nested_indices"], [1955, 4, 1, "", "copy_nest"], [1956, 4, 1, "", "duplicate_array_index_chains"], [1957, 4, 1, "", "index_nest"], [1958, 4, 1, "", "insert_into_nest_at_index"], [1959, 4, 1, "", "insert_into_nest_at_indices"], [1960, 4, 1, "", "map"], [1961, 4, 1, "", "map_nest_at_index"], [1962, 4, 1, "", "map_nest_at_indices"], [1963, 4, 1, "", "multi_index_nest"], [1964, 4, 1, "", "nested_any"], [1965, 4, 1, "", "nested_argwhere"], [1966, 4, 1, "", "nested_map"], [1967, 4, 1, "", "nested_multi_map"], [1968, 4, 1, "", "prune_empty"], [1969, 4, 1, "", "prune_nest_at_index"], [1970, 4, 1, "", "prune_nest_at_indices"], [1971, 4, 1, "", "set_nest_at_index"], [1972, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1977, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1982, 4, 1, "", "multinomial"], [1987, 4, 1, "", "randint"], [1992, 4, 1, "", "random_normal"], [1997, 4, 1, "", "random_uniform"], [1999, 4, 1, "", "seed"], [2003, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[2009, 4, 1, "", "argmax"], [2014, 4, 1, "", "argmin"], [2019, 4, 1, "", "argwhere"], [2024, 4, 1, "", "nonzero"], [2030, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[2036, 4, 1, "", "unique_all"], [2041, 4, 1, "", "unique_counts"], [2046, 4, 1, "", "unique_inverse"], [2051, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[2056, 4, 1, "", "argsort"], [2061, 4, 1, "", "searchsorted"], [2066, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[2072, 4, 1, "", "cumprod"], [2077, 4, 1, "", "cumsum"], [2082, 4, 1, "", "einsum"], [2086, 4, 1, "", "max"], [2090, 4, 1, "", "mean"], [2094, 4, 1, "", "min"], [2098, 4, 1, "", "prod"], [2103, 4, 1, "", "std"], [2108, 4, 1, "", "sum"], [2113, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[2118, 4, 1, "", "all"], [2123, 4, 1, "", "any"]], "ivy.nested_array": [[2128, 0, 0, "-", "nested_array"]], "ivy.nested_array.nested_array": [[2129, 1, 1, "", "NestedArray"]], "ivy.nested_array.nested_array.NestedArray": [[2129, 2, 1, "", "__init__"], [2129, 3, 1, "", "data"], [2129, 3, 1, "", "device"], [2129, 3, 1, "", "dtype"], [2129, 2, 1, "", "from_row_lengths"], [2129, 2, 1, "", "from_row_split"], [2129, 3, 1, "", "ndim"], [2129, 2, 1, "", "nested_array"], [2129, 2, 1, "", "reshape"], [2129, 3, 1, "", "shape"], [2129, 2, 1, "", "unbind"]], "ivy.stateful": [[2143, 0, 0, "-", "activations"], [2146, 0, 0, "-", "converters"], [2149, 0, 0, "-", "helpers"], [2151, 0, 0, "-", "initializers"], [2161, 0, 0, "-", "layers"], [2173, 0, 0, "-", "module"], [2175, 0, 0, "-", "norms"], [2177, 0, 0, "-", "optimizers"], [2183, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[2144, 1, 1, "", "GEGLU"], [2145, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[2144, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[2145, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[2147, 1, 1, "", "ModuleConverters"], [2148, 4, 1, "", "to_ivy_module"]], "ivy.stateful.converters.ModuleConverters": [[2147, 2, 1, "", "from_haiku_module"], [2147, 2, 1, "", "from_keras_module"], [2147, 2, 1, "", "from_torch_module"]], "ivy.stateful.helpers": [[2150, 1, 1, "", "ModuleHelpers"]], "ivy.stateful.helpers.ModuleHelpers": [[2150, 2, 1, "", "check_submod_rets"], [2150, 2, 1, "", "get_mod_key"], [2150, 2, 1, "", "mod_depth"], [2150, 2, 1, "", "mod_height"], [2150, 2, 1, "", "mod_with_top_mod_key_chain"], [2150, 2, 1, "", "show_mod_in_top_mod"], [2150, 2, 1, "", "show_structure"], [2150, 2, 1, "", "show_v_in_top_v"], [2150, 2, 1, "", "sub_mods"], [2150, 2, 1, "", "track_submod_call_order"], [2150, 2, 1, "", "track_submod_rets"], [2150, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.initializers": [[2152, 1, 1, "", "Constant"], [2153, 1, 1, "", "FirstLayerSiren"], [2154, 1, 1, "", "GlorotUniform"], [2155, 1, 1, "", "Initializer"], [2156, 1, 1, "", "KaimingNormal"], [2157, 1, 1, "", "Ones"], [2158, 1, 1, "", "Siren"], [2159, 1, 1, "", "Uniform"], [2160, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[2152, 2, 1, "", "__init__"], [2152, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[2153, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[2154, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Initializer": [[2155, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.KaimingNormal": [[2156, 2, 1, "", "__init__"], [2156, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[2157, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[2158, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[2159, 2, 1, "", "__init__"], [2159, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[2160, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[2162, 1, 1, "", "Conv1D"], [2163, 1, 1, "", "Conv1DTranspose"], [2164, 1, 1, "", "Conv2D"], [2165, 1, 1, "", "Conv2DTranspose"], [2166, 1, 1, "", "Conv3D"], [2167, 1, 1, "", "Conv3DTranspose"], [2168, 1, 1, "", "DepthwiseConv2D"], [2169, 1, 1, "", "Dropout"], [2170, 1, 1, "", "LSTM"], [2171, 1, 1, "", "Linear"], [2172, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[2162, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[2163, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[2164, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[2165, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[2166, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[2167, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[2168, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[2169, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[2170, 2, 1, "", "__init__"], [2170, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[2171, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[2172, 2, 1, "", "__init__"]], "ivy.stateful.module": [[2174, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[2174, 2, 1, "", "__call__"], [2174, 2, 1, "", "__init__"], [2174, 2, 1, "", "build"], [2174, 3, 1, "", "build_mode"], [2174, 3, 1, "", "built_"], [2174, 2, 1, "", "compile"], [2174, 2, 1, "", "save_weights"], [2174, 2, 1, "", "show_graph"]], "ivy.stateful.norms": [[2176, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[2176, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[2178, 1, 1, "", "Adam"], [2179, 1, 1, "", "LAMB"], [2180, 1, 1, "", "LARS"], [2181, 1, 1, "", "Optimizer"], [2182, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[2178, 2, 1, "", "__init__"], [2178, 2, 1, "", "set_state"], [2178, 3, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[2179, 2, 1, "", "__init__"], [2179, 2, 1, "", "set_state"], [2179, 3, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[2180, 2, 1, "", "__init__"], [2180, 2, 1, "", "set_state"], [2180, 3, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[2181, 2, 1, "", "__init__"], [2181, 2, 1, "", "set_state"], [2181, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[2182, 2, 1, "", "__init__"], [2182, 2, 1, "", "set_state"], [2182, 3, 1, "", "state"]], "ivy.stateful.sequential": [[2184, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[2184, 2, 1, "", "__init__"]], "ivy.utils": [[2284, 0, 0, "-", "_importlib"], [2285, 0, 0, "-", "assertions"], [2307, 0, 0, "-", "backend"], [2330, 0, 0, "-", "dynamic_import"], [2332, 0, 0, "-", "inspection"], [2335, 0, 0, "-", "verbosity"]], "ivy.utils.assertions": [[2286, 4, 1, "", "check_all"], [2287, 4, 1, "", "check_all_or_any_fn"], [2288, 4, 1, "", "check_any"], [2289, 4, 1, "", "check_dimensions"], [2290, 4, 1, "", "check_elem_in_list"], [2291, 4, 1, "", "check_equal"], [2292, 4, 1, "", "check_exists"], [2293, 4, 1, "", "check_false"], [2294, 4, 1, "", "check_fill_value_and_dtype_are_compatible"], [2295, 4, 1, "", "check_gather_input_valid"], [2296, 4, 1, "", "check_gather_nd_input_valid"], [2297, 4, 1, "", "check_greater"], [2298, 4, 1, "", "check_inplace_sizes_valid"], [2299, 4, 1, "", "check_isinstance"], [2300, 4, 1, "", "check_kernel_padding_size"], [2301, 4, 1, "", "check_less"], [2302, 4, 1, "", "check_one_way_broadcastable"], [2303, 4, 1, "", "check_same_dtype"], [2304, 4, 1, "", "check_shape"], [2305, 4, 1, "", "check_shapes_broadcastable"], [2306, 4, 1, "", "check_true"]], "ivy.utils.backend": [[2308, 0, 0, "-", "ast_helpers"], [2312, 0, 0, "-", "handler"]], "ivy.utils.backend.ast_helpers": [[2309, 1, 1, "", "ImportTransformer"], [2310, 1, 1, "", "IvyLoader"], [2311, 1, 1, "", "IvyPathFinder"]], "ivy.utils.backend.ast_helpers.ImportTransformer": [[2309, 2, 1, "", "__init__"], [2309, 2, 1, "", "impersonate_import"], [2309, 2, 1, "", "visit_Import"], [2309, 2, 1, "", "visit_ImportFrom"]], "ivy.utils.backend.ast_helpers.IvyLoader": [[2310, 2, 1, "", "__init__"], [2310, 2, 1, "", "exec_module"]], "ivy.utils.backend.ast_helpers.IvyPathFinder": [[2311, 2, 1, "", "find_spec"]], "ivy.utils.backend.handler": [[2313, 1, 1, "", "ContextManager"], [2314, 4, 1, "", "choose_random_backend"], [2315, 4, 1, "", "clear_backend_stack"], [2316, 4, 1, "", "convert_from_numpy_to_target_backend"], [2317, 4, 1, "", "convert_from_source_backend_to_numpy"], [2318, 4, 1, "", "current_backend"], [2319, 4, 1, "", "fn_name_from_version_specific_fn_name"], [2320, 4, 1, "", "get_backend"], [2321, 4, 1, "", "prevent_access_locally"], [2322, 4, 1, "", "set_backend"], [2323, 4, 1, "", "set_backend_to_specific_version"], [2324, 4, 1, "", "set_jax_backend"], [2325, 4, 1, "", "set_numpy_backend"], [2326, 4, 1, "", "set_tensorflow_backend"], [2327, 4, 1, "", "set_torch_backend"], [2328, 4, 1, "", "unset_backend"], [2329, 4, 1, "", "with_backend"]], "ivy.utils.backend.handler.ContextManager": [[2313, 2, 1, "", "__init__"]], "ivy.utils.dynamic_import": [[2331, 4, 1, "", "import_module"]], "ivy.utils.inspection": [[2333, 4, 1, "", "add_array_specs"], [2334, 4, 1, "", "fn_array_spec"]], "ivy.utils.verbosity": [[2336, 4, 1, "", "cprint"]], "ivy_tests.test_ivy.helpers": [[2186, 0, 0, "-", "assertions"], [2194, 0, 0, "-", "available_frameworks"], [2197, 0, 0, "-", "function_testing"], [2221, 0, 0, "-", "globals"], [2229, 0, 0, "-", "hypothesis_helpers"], [2264, 0, 0, "-", "structs"], [2266, 0, 0, "-", "test_parameter_flags"], [2276, 0, 0, "-", "testing_helpers"]], "ivy_tests.test_ivy.helpers.assertions": [[2187, 4, 1, "", "assert_all_close"], [2188, 4, 1, "", "assert_same_type_and_shape"], [2189, 4, 1, "", "check_unsupported_device"], [2190, 4, 1, "", "check_unsupported_device_and_dtype"], [2191, 4, 1, "", "check_unsupported_dtype"], [2192, 4, 1, "", "test_unsupported_function"], [2193, 4, 1, "", "value_test"]], "ivy_tests.test_ivy.helpers.available_frameworks": [[2195, 4, 1, "", "available_frameworks"], [2196, 4, 1, "", "ground_truth"]], "ivy_tests.test_ivy.helpers.function_testing": [[2198, 4, 1, "", "args_to_container"], [2199, 4, 1, "", "as_cont"], [2200, 4, 1, "", "as_lists"], [2201, 4, 1, "", "convtrue"], [2202, 4, 1, "", "create_args_kwargs"], [2203, 4, 1, "", "create_frontend_args_kwargs"], [2204, 4, 1, "", "empty_func"], [2205, 4, 1, "", "flatten"], [2206, 4, 1, "", "flatten_and_to_np"], [2207, 4, 1, "", "flatten_fw_and_to_np"], [2208, 4, 1, "", "framework_comparator"], [2209, 4, 1, "", "get_frontend_ret"], [2210, 4, 1, "", "get_ret_and_flattened_np_array"], [2211, 4, 1, "", "gradient_incompatible_function"], [2212, 4, 1, "", "gradient_test"], [2213, 4, 1, "", "gradient_unsupported_dtypes"], [2214, 4, 1, "", "kwargs_to_args_n_kwargs"], [2215, 4, 1, "", "make_json_pickable"], [2216, 4, 1, "", "test_frontend_function"], [2217, 4, 1, "", "test_frontend_method"], [2218, 4, 1, "", "test_function"], [2219, 4, 1, "", "test_method"], [2220, 4, 1, "", "var_fn"]], "ivy_tests.test_ivy.helpers.globals": [[2222, 1, 1, "", "InterruptedTest"], [2223, 1, 1, "", "TestData"], [2224, 4, 1, "", "remove_all_current_framework"], [2225, 4, 1, "", "setup_api_test"], [2226, 4, 1, "", "setup_frontend_test"], [2227, 4, 1, "", "teardown_api_test"], [2228, 4, 1, "", "teardown_frontend_test"]], "ivy_tests.test_ivy.helpers.globals.InterruptedTest": [[2222, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.globals.TestData": [[2223, 2, 1, "", "__init__"], [2223, 6, 1, "", "fn_name"], [2223, 6, 1, "", "fn_tree"], [2223, 6, 1, "", "is_method"], [2223, 6, 1, "", "supported_device_dtypes"], [2223, 6, 1, "", "test_fn"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers": [[2230, 0, 0, "-", "array_helpers"], [2244, 0, 0, "-", "dtype_helpers"], [2249, 0, 0, "-", "general_helpers"], [2260, 0, 0, "-", "number_helpers"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers": [[2231, 4, 1, "", "array_and_broadcastable_shape"], [2232, 4, 1, "", "array_bools"], [2233, 4, 1, "", "array_indices_axis"], [2234, 4, 1, "", "array_values"], [2235, 4, 1, "", "arrays_and_axes"], [2236, 4, 1, "", "arrays_for_pooling"], [2237, 4, 1, "", "broadcast_shapes"], [2238, 4, 1, "", "dtype_and_values"], [2239, 4, 1, "", "dtype_values_axis"], [2240, 4, 1, "", "list_of_size"], [2241, 4, 1, "", "lists"], [2242, 4, 1, "", "mutually_broadcastable_shapes"], [2243, 4, 1, "", "prod"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers": [[2245, 4, 1, "", "array_dtypes"], [2246, 4, 1, "", "get_castable_dtype"], [2247, 4, 1, "", "get_dtypes"], [2248, 4, 1, "", "make_json_pickable"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers": [[2250, 4, 1, "", "apply_safety_factor"], [2251, 4, 1, "", "embedding_helper"], [2252, 4, 1, "", "get_axis"], [2253, 4, 1, "", "get_bounds"], [2254, 4, 1, "", "get_mean_std"], [2255, 4, 1, "", "get_shape"], [2256, 4, 1, "", "matrix_is_stable"], [2257, 4, 1, "", "reshape_shapes"], [2258, 4, 1, "", "subsets"], [2259, 4, 1, "", "x_and_filters"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers": [[2261, 4, 1, "", "floats"], [2262, 4, 1, "", "ints"], [2263, 4, 1, "", "number"]], "ivy_tests.test_ivy.helpers.structs": [[2265, 1, 1, "", "FrontendMethodData"]], "ivy_tests.test_ivy.helpers.structs.FrontendMethodData": [[2265, 2, 1, "", "__init__"], [2265, 6, 1, "", "framework_init_module"], [2265, 6, 1, "", "init_name"], [2265, 6, 1, "", "ivy_init_module"], [2265, 6, 1, "", "method_name"]], "ivy_tests.test_ivy.helpers.test_parameter_flags": [[2267, 1, 1, "", "FrontendFunctionTestFlags"], [2268, 1, 1, "", "FrontendMethodTestFlags"], [2269, 1, 1, "", "FunctionTestFlags"], [2270, 1, 1, "", "MethodTestFlags"], [2271, 4, 1, "", "build_flag"], [2272, 4, 1, "", "frontend_function_flags"], [2273, 4, 1, "", "frontend_method_flags"], [2274, 4, 1, "", "function_flags"], [2275, 4, 1, "", "method_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags": [[2267, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags": [[2268, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags": [[2269, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags": [[2270, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.testing_helpers": [[2277, 4, 1, "", "handle_frontend_method"], [2278, 4, 1, "", "handle_frontend_test"], [2279, 4, 1, "", "handle_method"], [2280, 4, 1, "", "handle_test"], [2281, 4, 1, "", "num_positional_args"], [2282, 4, 1, "", "num_positional_args_method"], [2283, 4, 1, "", "seed"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"background": [1, 2126], "ml": [2, 2136, 2140], "explos": 2, "standard": [3, 130, 2131, 2140], "skeptic": 3, "complimentari": 3, "v": [3, 149], "competit": 3, "do": [3, 128], "work": [3, 7, 2130], "The": [3, 11, 126, 134, 149], "arrai": [3, 13, 16, 111, 112, 115, 122, 134, 172, 178, 183, 188, 193, 198, 203, 208, 225, 232, 236, 244, 250, 255, 260, 265, 270, 275, 283, 289, 294, 302, 314, 319, 324, 329, 350, 361, 368, 377, 382, 387, 394, 418, 438, 447, 452, 457, 462, 467, 472, 477, 482, 487, 492, 497, 502, 507, 512, 517, 522, 527, 532, 537, 542, 547, 552, 557, 562, 567, 572, 577, 582, 587, 592, 597, 602, 607, 612, 617, 622, 627, 632, 637, 642, 647, 652, 657, 662, 667, 672, 677, 682, 687, 692, 697, 702, 707, 712, 717, 722, 727, 732, 737, 743, 748, 753, 758, 763, 775, 780, 785, 790, 795, 800, 805, 810, 815, 820, 825, 830, 839, 850, 856, 861, 866, 882, 892, 897, 902, 909, 914, 919, 924, 929, 965, 970, 975, 980, 985, 990, 995, 1000, 1005, 1010, 1015, 1020, 1025, 1030, 1033, 1040, 1055, 1060, 1065, 1070, 1075, 1080, 1085, 1090, 1096, 1104, 1109, 1122, 1127, 1150, 1155, 1160, 1174, 1179, 1186, 1215, 1220, 1225, 1230, 1235, 1241, 1246, 1252, 1257, 1262, 1267, 1277, 1286, 1292, 1297, 1302, 1313, 1318, 1323, 1330, 1335, 1342, 1359, 1364, 1369, 1373, 1385, 1395, 1400, 1405, 1410, 1416, 1423, 1428, 1434, 1439, 1446, 1449, 1454, 1459, 1464, 1467, 1474, 1479, 1491, 1500, 1506, 1511, 1516, 1522, 1527, 1532, 1535, 1545, 1550, 1566, 1571, 1577, 1583, 1588, 1593, 1605, 1612, 1616, 1622, 1627, 1631, 1635, 1641, 1650, 1655, 1660, 1665, 1670, 1675, 1682, 1687, 1692, 1697, 1702, 1707, 1713, 1718, 1723, 1728, 1733, 1739, 1744, 1749, 1754, 1760, 1765, 1770, 1775, 1780, 1785, 1790, 1795, 1800, 1805, 1811, 1816, 1824, 1829, 1834, 1839, 1844, 1849, 1854, 1859, 1864, 1870, 1875, 1880, 1885, 1890, 1895, 1900, 1905, 1910, 1915, 1920, 1925, 1931, 1936, 1941, 1946, 1975, 1980, 1985, 1990, 1995, 2001, 2007, 2012, 2017, 2022, 2028, 2034, 2039, 2044, 2049, 2054, 2059, 2064, 2070, 2075, 2080, 2084, 2088, 2092, 2096, 2101, 2106, 2111, 2116, 2121, 2128, 2131, 2230], "api": [3, 9, 11, 111, 114, 115, 129, 132, 134, 136, 137, 2131, 2138, 2140], "why": [4, 128], "unifi": [4, 134, 2136, 2140], "No": [4, 10], "more": [4, 10, 130], "re": [4, 128], "implement": [4, 115], "infinit": 4, "shelf": 4, "life": 4, "contribut": [5, 2126], "appli": [6, 148], "librari": [6, 148], "introduct": [6, 126, 127], "exampl": [6, 118, 122, 127, 130], "ivi": [6, 9, 11, 112, 115, 118, 120, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 172, 173, 174, 175, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 222, 223, 225, 226, 227, 232, 233, 236, 237, 238, 239, 241, 242, 244, 245, 246, 247, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 298, 299, 301, 302, 303, 304, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 336, 337, 340, 341, 345, 346, 347, 350, 351, 352, 353, 355, 356, 358, 359, 361, 362, 363, 364, 368, 369, 370, 371, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 394, 395, 396, 397, 418, 419, 420, 421, 437, 438, 439, 440, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 682, 683, 684, 685, 687, 688, 689, 690, 692, 693, 694, 695, 697, 698, 699, 700, 702, 703, 704, 705, 707, 708, 709, 710, 712, 713, 714, 715, 717, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 733, 734, 735, 737, 738, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 752, 753, 754, 755, 757, 758, 759, 760, 762, 763, 764, 765, 775, 776, 777, 778, 780, 781, 782, 783, 785, 786, 787, 788, 790, 791, 792, 793, 795, 796, 797, 798, 800, 801, 802, 803, 805, 806, 807, 808, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 825, 826, 827, 828, 830, 831, 832, 833, 835, 836, 837, 839, 840, 841, 842, 845, 846, 847, 850, 851, 852, 853, 856, 857, 858, 859, 861, 862, 863, 864, 866, 867, 868, 869, 882, 883, 884, 885, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 909, 910, 911, 912, 914, 915, 916, 917, 919, 920, 921, 922, 924, 925, 926, 927, 929, 930, 931, 932, 965, 966, 967, 968, 970, 971, 972, 973, 975, 976, 977, 978, 980, 981, 982, 983, 985, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1031, 1033, 1034, 1035, 1036, 1040, 1041, 1042, 1043, 1047, 1048, 1049, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1096, 1097, 1098, 1099, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1174, 1175, 1176, 1177, 1179, 1180, 1181, 1182, 1186, 1187, 1188, 1189, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1277, 1278, 1279, 1280, 1286, 1287, 1288, 1289, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1313, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1330, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1373, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1416, 1417, 1418, 1419, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1446, 1447, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1467, 1468, 1469, 1470, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1491, 1492, 1493, 1494, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1522, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1532, 1533, 1535, 1536, 1537, 1538, 1545, 1546, 1547, 1548, 1550, 1551, 1552, 1553, 1566, 1567, 1568, 1569, 1571, 1572, 1573, 1574, 1576, 1577, 1578, 1579, 1582, 1583, 1584, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1595, 1604, 1605, 1606, 1607, 1612, 1613, 1614, 1616, 1617, 1618, 1622, 1623, 1624, 1627, 1628, 1629, 1631, 1632, 1633, 1635, 1636, 1637, 1640, 1641, 1642, 1643, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1658, 1660, 1661, 1662, 1663, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1675, 1676, 1677, 1678, 1682, 1683, 1684, 1685, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1707, 1708, 1709, 1710, 1713, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1752, 1754, 1755, 1756, 1757, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1770, 1771, 1772, 1773, 1775, 1776, 1777, 1778, 1780, 1781, 1782, 1783, 1785, 1786, 1787, 1788, 1790, 1791, 1792, 1793, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 1810, 1811, 1812, 1813, 1815, 1816, 1817, 1818, 1820, 1821, 1822, 1824, 1825, 1826, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1848, 1849, 1850, 1851, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1975, 1976, 1977, 1980, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 2001, 2002, 2003, 2004, 2007, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2033, 2034, 2035, 2036, 2038, 2039, 2040, 2041, 2043, 2044, 2045, 2046, 2048, 2049, 2050, 2051, 2054, 2055, 2056, 2057, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2070, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2084, 2085, 2086, 2088, 2089, 2090, 2092, 2093, 2094, 2096, 2097, 2098, 2099, 2101, 2102, 2103, 2105, 2106, 2107, 2108, 2110, 2111, 2112, 2113, 2116, 2117, 2118, 2119, 2121, 2122, 2123, 2124, 2140], "robot": [6, 145, 148], "build": [7, 132], "doc": 7, "docker": [7, 10, 11], "dockerless": 7, "us": [7, 10, 111, 127, 135], "miniconda": [7, 10], "venv": [7, 10], "document": 7, "pipelin": [7, 115, 128, 149], "make_doc": 7, "sh": 7, "entrypoint": 7, "_make_doc": 7, "generate_src_rst_fil": 7, "py": 7, "sphinx": 7, "correct_built_html_fil": 7, "remove_fil": 7, "help": [8, 11], "resourc": 8, "open": 9, "task": 9, "function": [9, 114, 116, 117, 120, 122, 123, 124, 126, 127, 128, 129, 132, 137, 149, 2197], "format": [9, 121, 2133, 2140], "checklist": 9, "frontend": [9, 113, 126, 127, 137], "where": [9, 2026, 2028, 2029, 2030], "place": 9, "experiment": [9, 11, 31, 79, 766], "set": [10, 52, 100, 113, 1328, 2031], "up": 10, "fork": [10, 11], "clone": [10, 115], "repo": 10, "pycharm": [10, 11], "virtual": 10, "environ": 10, "interpret": 10, "window": 10, "maco": 10, "ubuntu": 10, "test": [10, 11, 111, 115, 127, 128, 2197, 2266, 2276], "detail": 10, "hypothesi": [10, 127, 128, 2229], "log": [10, 616, 617, 618, 619], "free": 10, "github": 10, "codespac": 10, "pre": [10, 121], "commit": [10, 11, 115, 121], "basic": [11, 126], "get": [11, 176], "todo": 11, "list": [11, 2241], "issu": 11, "manag": 11, "your": [11, 128], "who": 11, "To": 11, "ask": 11, "With": 11, "command": 11, "line": 11, "browser": 11, "pull": [11, 115], "request": [11, 115], "small": 11, "often": 11, "interact": 11, "contain": [11, 62, 67, 114, 135, 173, 175, 179, 181, 184, 186, 189, 191, 194, 196, 199, 201, 204, 206, 209, 211, 223, 227, 237, 239, 242, 245, 247, 251, 253, 256, 258, 261, 263, 266, 268, 271, 273, 276, 278, 281, 284, 286, 288, 290, 293, 295, 298, 301, 303, 315, 317, 320, 322, 325, 327, 330, 332, 337, 341, 345, 347, 351, 353, 356, 359, 362, 364, 369, 371, 373, 375, 378, 380, 383, 385, 388, 390, 395, 397, 419, 421, 437, 439, 448, 450, 453, 455, 458, 460, 463, 465, 468, 470, 473, 475, 478, 480, 483, 485, 488, 490, 493, 495, 498, 500, 503, 505, 508, 510, 513, 515, 518, 520, 523, 525, 528, 530, 533, 535, 538, 540, 543, 545, 548, 550, 553, 555, 558, 560, 563, 565, 568, 570, 573, 575, 578, 580, 583, 585, 588, 590, 593, 595, 598, 600, 603, 605, 608, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 665, 668, 670, 673, 675, 678, 680, 683, 685, 688, 690, 693, 695, 698, 700, 703, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 742, 744, 747, 749, 752, 754, 757, 759, 762, 764, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 835, 837, 840, 842, 845, 847, 851, 853, 857, 859, 862, 864, 867, 869, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 910, 912, 915, 917, 920, 922, 925, 927, 930, 932, 966, 968, 971, 973, 976, 978, 981, 983, 986, 988, 991, 993, 996, 998, 1001, 1003, 1006, 1008, 1011, 1013, 1016, 1018, 1021, 1023, 1026, 1028, 1034, 1036, 1041, 1043, 1047, 1049, 1051, 1053, 1056, 1058, 1061, 1063, 1066, 1068, 1071, 1073, 1076, 1078, 1081, 1083, 1086, 1088, 1091, 1093, 1097, 1099, 1105, 1107, 1110, 1112, 1114, 1116, 1118, 1120, 1123, 1125, 1128, 1130, 1151, 1153, 1156, 1158, 1161, 1163, 1175, 1177, 1180, 1182, 1187, 1189, 1216, 1218, 1221, 1223, 1226, 1228, 1231, 1233, 1236, 1238, 1242, 1244, 1247, 1249, 1253, 1255, 1258, 1260, 1263, 1265, 1268, 1270, 1278, 1280, 1287, 1289, 1293, 1295, 1298, 1300, 1303, 1305, 1314, 1316, 1319, 1321, 1324, 1326, 1331, 1333, 1336, 1338, 1358, 1360, 1363, 1365, 1368, 1370, 1376, 1377, 1380, 1381, 1384, 1386, 1390, 1391, 1394, 1396, 1399, 1401, 1404, 1406, 1409, 1411, 1417, 1419, 1424, 1426, 1429, 1431, 1435, 1437, 1440, 1442, 1450, 1452, 1455, 1457, 1460, 1462, 1468, 1470, 1475, 1477, 1480, 1482, 1492, 1494, 1501, 1503, 1507, 1509, 1512, 1514, 1517, 1519, 1523, 1525, 1528, 1530, 1536, 1538, 1546, 1548, 1551, 1553, 1567, 1569, 1572, 1574, 1576, 1578, 1582, 1587, 1589, 1592, 1594, 1604, 1606, 1613, 1617, 1623, 1628, 1632, 1636, 1640, 1642, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1671, 1673, 1676, 1678, 1683, 1685, 1688, 1690, 1693, 1695, 1698, 1700, 1703, 1705, 1708, 1710, 1714, 1716, 1719, 1721, 1724, 1726, 1729, 1731, 1734, 1736, 1740, 1742, 1745, 1747, 1750, 1752, 1755, 1757, 1761, 1763, 1766, 1768, 1771, 1773, 1776, 1778, 1781, 1783, 1786, 1788, 1791, 1793, 1796, 1798, 1801, 1803, 1806, 1808, 1810, 1812, 1815, 1817, 1820, 1821, 1825, 1828, 1830, 1833, 1835, 1838, 1840, 1843, 1845, 1848, 1850, 1855, 1857, 1860, 1862, 1865, 1867, 1871, 1873, 1876, 1878, 1881, 1883, 1886, 1888, 1891, 1893, 1896, 1898, 1901, 1903, 1906, 1908, 1911, 1913, 1916, 1918, 1921, 1923, 1926, 1928, 1930, 1932, 1935, 1937, 1940, 1942, 1945, 1947, 1976, 1981, 1983, 1986, 1988, 1991, 1993, 1996, 1998, 2002, 2004, 2008, 2010, 2013, 2015, 2018, 2020, 2023, 2025, 2027, 2029, 2033, 2035, 2038, 2040, 2043, 2045, 2048, 2050, 2055, 2057, 2060, 2062, 2065, 2067, 2071, 2073, 2076, 2078, 2081, 2085, 2089, 2093, 2097, 2099, 2102, 2105, 2107, 2110, 2112, 2117, 2119, 2122, 2124], "run": [11, 111, 128], "local": 11, "most": 11, "out": [11, 122, 125], "id": [11, 111], "data": [12, 25, 73, 116, 126, 128, 135, 149, 305, 879, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051], "class": [12, 112, 120, 126, 134, 2142], "activ": [14, 63, 169, 769, 2143], "arraywithactiv": 15, "convers": [18, 69], "args_to_ivi": 19, "args_to_n": 20, "to_ivi": 21, "to_n": 22, "creation": [23, 71, 219, 870], "arraywithcr": 24, "type": [25, 73, 116, 123, 126, 149, 305, 879], "arraywithdatatyp": 26, "devic": [27, 75, 117, 122, 126, 410, 886], "arraywithdevic": 28, "elementwis": [29, 77, 445, 933], "arraywithelementwis": 30, "gener": [32, 80, 128, 130, 1037, 1414, 2249], "arraywithgener": 33, "gradient": [34, 82, 948, 1039, 1040, 1041, 1042, 1044, 1609], "arraywithgradi": 35, "imag": [36, 84, 950, 1084, 1085, 1086, 1087], "arraywithimag": 37, "layer": [38, 86, 1131, 1647, 2161], "arraywithlay": 39, "linear": [40, 88, 1164, 1691, 1692, 1693, 1694, 1711, 2171], "algebra": [40, 88, 1164, 1711], "arraywithlinearalgebra": 41, "loss": [42, 90, 1183, 1852], "arraywithloss": 43, "manipul": [44, 92, 1190, 1868], "arraywithmanipul": 45, "norm": [46, 94, 1281, 1973, 2175], "arraywithnorm": 47, "random": [48, 96, 1306, 1978], "arraywithrandom": 49, "search": [50, 98, 1327, 2005], "arraywithsearch": 51, "arraywithset": 53, "sort": [54, 102, 1339, 2052, 2063, 2064, 2065, 2066], "arraywithsort": 55, "statist": [56, 104, 1349, 2068], "arraywithstatist": 57, "util": [58, 106, 1388, 2114], "arraywithutil": 59, "wrap": [60, 108, 124], "add_ivy_array_instance_method": 61, "containerwithactiv": 64, "base": 65, "containerbas": 66, "containerwithconvers": 70, "containerwithcr": 72, "containerwithdatatyp": 74, "containerwithdevic": 76, "containerwithelementwis": 78, "containerwithgener": 81, "containerwithgradi": 83, "containerwithimag": 85, "containerwithlay": 87, "containerwithlinearalgebra": 89, "containerwithloss": 91, "containerwithmanipul": 93, "containerwithnorm": 95, "containerwithrandom": 97, "containerwithsearch": 99, "containerwithset": 101, "containerwithsort": 103, "containerwithstatist": 105, "containerwithutil": 107, "add_ivy_container_instance_method": 109, "deep": 110, "dive": 110, "termin": 111, "regener": 111, "failur": 111, "skip": 111, "nativ": 112, "handl": [112, 120, 149], "integr": [112, 115, 128], "custom": [112, 135, 149], "backend": [113, 116, 129, 132, 149, 2307], "version": [113, 129, 149], "support": [113, 116, 126, 149], "instanc": [114, 126, 127, 134], "method": [114, 126, 127, 134, 135], "static": 114, "special": [114, 126], "nestabl": [114, 122, 123], "continu": 115, "push": 115, "pr": 115, "trigger": 115, "A": [115, 130], "top": 115, "down": 115, "view": 115, "store": 115, "retriev": 115, "map": [115, 1960], "repositori": 115, "nitti": 115, "gritti": 115, "storag": 115, "space": 115, "unifyai": 115, "determin": 115, "coverag": 115, "workflow": 115, "multipl": 115, "runner": 115, "race": 115, "condit": 115, "period": 115, "manual": 115, "dispatch": 115, "ci": 115, "dashboard": 115, "modul": [116, 117, 136, 2173, 2174], "promot": [116, 126], "argument": [116, 117, 122, 125, 126], "other": [116, 117], "unsupport": 116, "bug": 116, "superset": [116, 130], "docstr": [118, 119], "tan": [118, 127, 746, 748, 749, 750], "roll": [118, 1909, 1910, 1911, 1912], "add": [118, 127, 461, 462, 463, 464, 2140], "except": 120, "configur": [120, 135], "mode": 120, "stack": [120, 1924, 1925, 1926, 1927], "trace": [120, 1827, 1829, 1830, 1831], "func_wrapp": 120, "prune": 120, "handle_except": 120, "decor": [120, 128], "assert": [120, 2186, 2285], "lint": 121, "check": [121, 149], "hook": 121, "posit": [122, 686, 687, 688, 689], "keyword": 122, "input": 122, "dtype": [122, 344, 345, 346, 2244], "number": [122, 2260, 2263], "oper": [122, 134, 149], "integ": 122, "sequenc": 122, "primari": 123, "composit": [123, 126], "mix": 123, "standalon": 123, "conveni": 123, "inplac": 125, "updat": 125, "copi": 125, "unus": 126, "miss": 126, "temporari": 126, "rule": 126, "numpi": [126, 2134], "cast": 126, "duplic": [126, 130], "polici": 126, "full": [127, 248], "without": 127, "valu": 127, "alia": 127, "helper": [127, 128, 129, 2149, 2229, 2230, 2244, 2249, 2260, 2276, 2308], "write": 128, "own": 128, "strategi": 128, "we": 128, "need": 128, "how": 128, "effect": 128, "bonu": 128, "extend": [128, 130], "featur": 128, "self": 128, "consist": 128, "explicit": 128, "test_array_funct": 128, "fail": 128, "navig": 129, "code": 129, "categor": 129, "submodul": 129, "design": [129, 131, 2126], "pin": 129, "behaviour": 130, "what": [130, 2140], "i": 130, "non": 130, "when": 130, "too": 130, "much": 130, "balanc": 130, "effici": 130, "block": 132, "handler": [132, 2312], "graph": [132, 137, 2135, 2140], "compil": [132, 137, 2132, 2137, 2139, 2140], "framework": [133, 2134, 2137, 2140, 2141, 2142, 2194], "monkei": 134, "patch": 134, "construct": 135, "represent": 135, "recurs": 135, "built": 135, "ins": 135, "access": 135, "save": 135, "load": 135, "comparison": 135, "case": 135, "compartment": 135, "network": [135, 137], "weight": 135, "state": [136, 149], "initi": [136, 2151, 2155], "optim": [136, 2177, 2181], "transpil": 137, "role": 137, "convert": [137, 2146], "model": [137, 144, 149], "builder": 139, "ecosystem": 140, "gym": [141, 148], "mech": 142, "memori": [143, 148], "vision": [146, 148], "extens": [147, 2126], "mechan": 148, "faq": 149, "maintain": 149, "dynam": [149, 2330], "size": 149, "shape": [149, 1563, 2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051], "gpu": 149, "deploy": 149, "control": [149, 214], "flow": [149, 214], "auto": 149, "differenti": 149, "replica": 149, "parallel": 149, "altern": 149, "structur": 149, "func": 150, "wrapper": [150, 2140, 2141], "handle_array_funct": 151, "handle_array_like_without_promot": 152, "handle_nan": 153, "handle_nest": 154, "handle_out_argu": 155, "handle_view": 156, "handle_view_index": 157, "infer_devic": 158, "infer_dtyp": 159, "inputs_to_ivy_arrai": 160, "inputs_to_native_arrai": 161, "integer_arrays_to_float": 162, "output_to_native_arrai": 163, "outputs_to_ivy_arrai": 164, "to_ivy_arrays_and_back": 165, "to_native_arrays_and_back": 166, "try_array_function_overrid": 167, "deseri": 170, "gelu": [171, 172, 173, 174, 2145], "static_gelu": 175, "leaky_relu": [177, 178, 179, 180], "static_leaky_relu": 181, "log_softmax": [182, 183, 184, 185], "static_log_softmax": 186, "mish": [187, 188, 189, 190], "static_mish": 191, "relu": [192, 193, 194, 195], "static_relu": 196, "sigmoid": [197, 198, 199, 200], "static_sigmoid": 201, "softmax": [202, 203, 204, 205], "static_softmax": 206, "softplu": [207, 208, 209, 210], "static_softplu": 211, "constant": [213, 854, 2152], "op": 214, "ifels": 215, "whileloop": 216, "if_els": 217, "while_loop": 218, "note": [219, 243, 246], "nestedsequ": 220, "arang": [221, 222], "static_arang": 223, "asarrai": [224, 225, 226], "static_asarrai": 227, "asarray_handle_nest": 228, "asarray_infer_devic": 229, "asarray_to_native_arrays_and_back": 230, "copy_arrai": [231, 232, 233], "empti": 234, "empty_lik": [235, 236, 237, 238], "static_empty_lik": 239, "ey": [240, 241], "static_ey": 242, "from_dlpack": [243, 244, 245, 246], "static_from_dlpack": 247, "full_lik": [249, 250, 251, 252], "static_full_lik": 253, "linspac": [254, 255, 256, 257], "static_linspac": 258, "logspac": [259, 260, 261, 262], "static_logspac": 263, "meshgrid": [264, 265, 266, 267], "static_meshgrid": 268, "native_arrai": [269, 270, 271, 272], "static_native_arrai": 273, "one_hot": [274, 275, 276, 277], "static_one_hot": 278, "ones": [279, 280], "static_on": 281, "ones_lik": [282, 283, 284, 285], "static_ones_lik": 286, "tril": [287, 289, 290, 291], "static_tril": 288, "triu": [292, 294, 295, 296], "static_triu": 293, "zero": [297, 299, 2160], "static_zero": 298, "zeros_lik": [300, 302, 303, 304], "static_zeros_lik": 301, "defaultcomplexdtyp": 306, "defaultdtyp": 307, "defaultfloatdtyp": 308, "defaultintdtyp": 309, "defaultuintdtyp": 310, "as_ivy_dtyp": 311, "as_native_dtyp": 312, "astyp": [313, 314, 315, 316], "static_astyp": 317, "broadcast_arrai": [318, 319, 320, 321], "static_broadcast_arrai": 322, "broadcast_to": [323, 324, 325, 326], "static_broadcast_to": 327, "can_cast": [328, 329, 330, 331], "static_can_cast": 332, "check_float": 333, "closest_valid_dtyp": 334, "default_complex_dtyp": [335, 336], "static_default_complex_dtyp": 337, "default_dtyp": 338, "default_float_dtyp": [339, 340], "static_default_float_dtyp": 341, "default_int_dtyp": 342, "default_uint_dtyp": 343, "static_dtyp": 347, "dtype_bit": 348, "finfo": [349, 350, 351, 352], "static_finfo": 353, "function_supported_dtyp": [354, 355], "static_function_supported_dtyp": 356, "function_unsupported_dtyp": [357, 358], "static_function_unsupported_dtyp": 359, "iinfo": [360, 361, 362, 363], "static_iinfo": 364, "infer_default_dtyp": 365, "invalid_dtyp": 366, "is_bool_dtyp": [367, 368, 369, 370], "static_is_bool_dtyp": 371, "is_complex_dtyp": [372, 373, 374], "static_is_complex_dtyp": 375, "is_float_dtyp": [376, 377, 378, 379], "static_is_float_dtyp": 380, "is_int_dtyp": [381, 382, 383, 384], "static_is_int_dtyp": 385, "is_uint_dtyp": [386, 387, 388, 389], "static_is_uint_dtyp": 390, "promote_typ": 391, "promote_types_of_input": 392, "result_typ": [393, 394, 395, 396], "static_result_typ": 397, "set_default_complex_dtyp": 398, "set_default_dtyp": 399, "set_default_float_dtyp": 400, "set_default_int_dtyp": 401, "set_default_uint_dtyp": 402, "type_promote_arrai": 403, "unset_default_complex_dtyp": 404, "unset_default_dtyp": 405, "unset_default_float_dtyp": 406, "unset_default_int_dtyp": 407, "unset_default_uint_dtyp": 408, "valid_dtyp": 409, "defaultdevic": 411, "profil": 412, "as_ivy_dev": 413, "as_native_dev": 414, "clear_mem_on_dev": 415, "default_devic": 416, "dev": [417, 418, 419, 420], "static_dev": 421, "dev_util": 422, "function_supported_devic": 423, "function_unsupported_devic": 424, "get_all_ivy_arrays_on_dev": 425, "gpu_is_avail": 426, "num_cpu_cor": 427, "num_gpu": 428, "num_ivy_arrays_on_dev": 429, "percent_used_mem_on_dev": 430, "print_all_ivy_arrays_on_dev": 431, "set_default_devic": 432, "set_split_factor": 433, "split_factor": 434, "split_func_cal": 435, "to_devic": [436, 438, 439, 440], "static_to_devic": 437, "total_mem_on_dev": 441, "tpu_is_avail": 442, "unset_default_devic": 443, "used_mem_on_dev": 444, "ab": [446, 447, 448, 449], "static_ab": 450, "aco": [451, 452, 453, 454], "static_aco": 455, "acosh": [456, 457, 458, 459], "static_acosh": 460, "static_add": 465, "asin": [466, 467, 468, 469], "static_asin": 470, "asinh": [471, 472, 473, 474], "static_asinh": 475, "atan": [476, 477, 478, 479], "static_atan": 480, "atan2": [481, 482, 483, 484], "static_atan2": 485, "atanh": [486, 487, 488, 489], "static_atanh": 490, "bitwise_and": [491, 492, 493, 494], "static_bitwise_and": 495, "bitwise_invert": [496, 497, 498, 499], "static_bitwise_invert": 500, "bitwise_left_shift": [501, 502, 503, 504], "static_bitwise_left_shift": 505, "bitwise_or": [506, 507, 508, 509], "static_bitwise_or": 510, "bitwise_right_shift": [511, 512, 513, 514], "static_bitwise_right_shift": 515, "bitwise_xor": [516, 517, 518, 519], "static_bitwise_xor": 520, "ceil": [521, 522, 523, 524], "static_ceil": 525, "co": [526, 527, 528, 529], "static_co": 530, "cosh": [531, 532, 533, 534], "static_cosh": 535, "deg2rad": [536, 537, 538, 539], "static_deg2rad": 540, "divid": [541, 542, 543, 544], "static_divid": 545, "equal": [546, 547, 548, 549], "static_equ": 550, "erf": [551, 552, 553, 554], "static_erf": 555, "exp": [556, 557, 558, 559], "static_exp": 560, "expm1": [561, 562, 563, 564], "static_expm1": 565, "floor": [566, 567, 568, 569], "static_floor": 570, "floor_divid": [571, 572, 573, 574], "static_floor_divid": 575, "greater": [576, 577, 578, 579], "static_great": 580, "greater_equ": [581, 582, 583, 584], "static_greater_equ": 585, "isfinit": [586, 587, 588, 589], "static_isfinit": 590, "isinf": [591, 592, 593, 594], "static_isinf": 595, "isnan": [596, 597, 598, 599], "static_isnan": 600, "isreal": [601, 602, 603, 604], "static_isr": 605, "less": [606, 607, 608, 609], "static_less": 610, "less_equ": [611, 612, 613, 614], "static_less_equ": 615, "static_log": 620, "log10": [621, 622, 623, 624], "static_log10": 625, "log1p": [626, 627, 628, 629], "static_log1p": 630, "log2": [631, 632, 633, 634], "static_log2": 635, "logaddexp": [636, 637, 638, 639], "static_logaddexp": 640, "logical_and": [641, 642, 643, 644], "static_logical_and": 645, "logical_not": [646, 647, 648, 649], "static_logical_not": 650, "logical_or": [651, 652, 653, 654], "static_logical_or": 655, "logical_xor": [656, 657, 658, 659], "static_logical_xor": 660, "maximum": [661, 662, 663, 664], "static_maximum": 665, "minimum": [666, 667, 668, 669], "static_minimum": 670, "multipli": [671, 672, 673, 674], "static_multipli": 675, "neg": [676, 677, 678, 679], "static_neg": 680, "not_equ": [681, 682, 683, 684], "static_not_equ": 685, "static_posit": 690, "pow": [691, 692, 693, 694], "static_pow": 695, "rad2deg": [696, 697, 698, 699], "static_rad2deg": 700, "reciproc": [701, 702, 703, 704], "static_reciproc": 705, "remaind": [706, 707, 708, 709], "static_remaind": 710, "round": [711, 712, 713, 714], "static_round": 715, "sign": [716, 717, 718, 719], "static_sign": 720, "sin": [721, 722, 723, 724], "static_sin": 725, "sinh": [726, 727, 728, 729], "static_sinh": 730, "sqrt": [731, 732, 733, 734], "static_sqrt": 735, "squar": [736, 737, 738, 739], "static_squar": 740, "subtract": [741, 743, 744, 745], "static_subtract": 742, "static_tan": 747, "tanh": [751, 753, 754, 755], "static_tanh": 752, "trunc": [756, 758, 759, 760], "static_trunc": 757, "trunc_divid": [761, 763, 764, 765], "static_trunc_divid": 762, "nativesparsearrai": [767, 1343], "sparsearrai": [768, 1344], "logit": [770, 1178, 1179, 1180, 1181], "prelu": [771, 1296, 1297, 1298, 1299], "relu6": [772, 1317, 1318, 1319, 1320], "thresholded_relu": [773, 1362, 1364, 1365, 1366], "adjoint": [774, 775, 776, 777, 1165], "static_adjoint": 778, "allclos": [779, 780, 781, 782, 934], "static_allclos": 783, "angl": [784, 785, 786, 787, 935], "static_angl": 788, "atleast_1d": [789, 790, 791, 792, 1191], "static_atleast_1d": 793, "atleast_2d": [794, 795, 796, 797, 1192], "static_atleast_2d": 798, "atleast_3d": [799, 800, 801, 802, 1193], "static_atleast_3d": 803, "avg_pool1d": [804, 805, 806, 807, 1132], "static_avg_pool1d": 808, "avg_pool2d": [809, 810, 811, 812, 1133], "static_avg_pool2d": 813, "avg_pool3d": [814, 815, 816, 817, 1134], "static_avg_pool3d": 818, "bernoulli": [819, 820, 821, 822, 1307], "static_bernoulli": 823, "beta": [824, 825, 826, 827, 1308], "static_beta": 828, "binar": [829, 830, 831, 832, 936], "static_binar": 833, "binary_cross_entropy_with_logit": [834, 835, 836, 1184], "static_binary_cross_entropy_with_logit": 837, "bincount": [838, 839, 840, 841, 1350], "static_bincount": 842, "bind_custom_gradient_funct": [843, 1045], "broadcast_shap": [844, 845, 846, 1194, 2237], "static_broadcast_shap": 847, "compute_weight_mat": [848, 1135], "conj": [849, 850, 851, 852, 937], "static_conj": 853, "copysign": [855, 856, 857, 858, 938], "static_copysign": 859, "corrcoef": [860, 861, 862, 863, 1351], "static_corrcoef": 864, "count_nonzero": [865, 866, 867, 868, 939], "static_count_nonzero": 869, "eye_lik": [871, 979, 980, 981, 982], "hamming_window": [872, 1046, 1047, 1048], "hann_window": [873, 1050, 1051, 1052], "kaiser_bessel_derived_window": [874, 1113, 1114, 1115], "kaiser_window": [875, 1117, 1118, 1119], "tril_indic": [876, 1375, 1377, 1378], "triu_indic": [877, 1379, 1381, 1382], "vorbis_window": [878, 1389, 1391, 1392], "is_native_dtyp": [880, 1101], "dct": [881, 882, 883, 884, 1136], "static_dct": 885, "dft": [887, 888, 889, 1137], "static_dft": 890, "diagflat": [891, 892, 893, 894, 1166], "static_diagflat": 895, "diff": [896, 897, 898, 899, 940], "static_diff": 900, "dirichlet": [901, 902, 903, 904, 1309], "static_dirichlet": 905, "dropout1d": [906, 1138], "dropout3d": [907, 1139], "dsplit": [908, 909, 910, 911, 1195], "static_dsplit": 912, "dstack": [913, 914, 915, 916, 1196], "static_dstack": 917, "eig": [918, 919, 920, 921, 1167, 1737], "static_eig": 922, "eigh_tridiagon": [923, 924, 925, 926, 1168], "static_eigh_tridiagon": 927, "eigval": [928, 929, 930, 931, 1169], "static_eigv": 932, "exp2": [941, 969, 970, 971, 972], "fix": [942, 989, 990, 991, 992], "float_pow": [943, 1009, 1010, 1011, 1012], "fmax": [944, 1014, 1015, 1016, 1017], "fmin": [945, 1019, 1020, 1021, 1022], "fmod": [946, 1024, 1025, 1026, 1027], "gcd": [947, 1032, 1033, 1034, 1035], "hypot": [949, 1069, 1070, 1071, 1072], "isclos": [951, 1103, 1104, 1105, 1106], "lcm": [952, 1149, 1150, 1151, 1152], "ldexp": [953, 1154, 1155, 1156, 1157], "logaddexp2": [954, 1173, 1174, 1175, 1176], "nan_to_num": [955, 1251, 1252, 1253, 1254], "nansum": [956, 1266, 1267, 1268, 1269], "nextaft": [957, 1276, 1277, 1278, 1279], "real": [958, 1312, 1313, 1314, 1315], "signbit": [959, 1329, 1330, 1331, 1332], "sinc": [960, 1334, 1335, 1336, 1337], "trapz": [961, 1372, 1373, 1374], "xlogi": [962, 1403, 1405, 1406, 1407], "zeta": [963, 1408, 1410, 1411, 1412], "embed": [964, 965, 966, 967, 1140], "static_embed": 968, "static_exp2": 973, "expand": [974, 975, 976, 977, 1197], "static_expand": 978, "static_eye_lik": 983, "fft": [984, 985, 986, 987, 1141], "static_fft": 988, "static_fix": 993, "flatten": [994, 995, 996, 997, 1198, 2205], "static_flatten": 998, "fliplr": [999, 1000, 1001, 1002, 1199], "static_fliplr": 1003, "flipud": [1004, 1005, 1006, 1007, 1200], "static_flipud": 1008, "static_float_pow": 1013, "static_fmax": 1018, "static_fmin": 1023, "static_fmod": 1028, "gamma": [1029, 1030, 1031, 1310], "static_gcd": 1036, "isin": [1038, 1108, 1109, 1110, 1111], "static_gradi": 1043, "static_hamming_window": 1049, "static_hann_window": 1053, "heavisid": [1054, 1055, 1056, 1057, 1201], "static_heavisid": 1058, "hsplit": [1059, 1060, 1061, 1062, 1202], "static_hsplit": 1063, "hstack": [1064, 1065, 1066, 1067, 1203], "static_hstack": 1068, "static_hypot": 1073, "i0": [1074, 1075, 1076, 1077, 1204], "static_i0": 1078, "ifft": [1079, 1080, 1081, 1082, 1142], "static_ifft": 1083, "static_imag": 1088, "instance_norm": [1089, 1090, 1091, 1092, 1282], "static_instance_norm": 1093, "interp": [1094, 1143], "interpol": [1095, 1096, 1097, 1098, 1144], "static_interpol": 1099, "is_ivy_sparse_arrai": [1100, 1345], "is_native_sparse_arrai": [1102, 1346], "static_isclos": 1107, "static_isin": 1112, "static_kaiser_bessel_derived_window": 1116, "static_kaiser_window": 1120, "kron": [1121, 1122, 1123, 1124, 1170], "static_kron": 1125, "l2_normal": [1126, 1127, 1128, 1129, 1283], "static_l2_norm": 1130, "max_pool1d": [1145, 1219, 1220, 1221, 1222], "max_pool2d": [1146, 1224, 1225, 1226, 1227], "max_pool3d": [1147, 1229, 1230, 1231, 1232], "padding_ceil_mod": [1148, 1290], "static_lcm": 1153, "static_ldexp": 1158, "lexsort": [1159, 1160, 1161, 1162, 1340], "static_lexsort": 1163, "matrix_exp": [1171, 1214, 1215, 1216, 1217], "multi_dot": [1172, 1250], "static_logaddexp2": 1177, "static_logit": 1182, "lp_normal": [1185, 1186, 1187, 1188, 1284], "static_lp_norm": 1189, "moveaxi": [1205, 1240, 1241, 1242, 1243], "ndenumer": [1206, 1273], "ndindex": [1207, 1274], "pad": [1208, 1285, 1286, 1287, 1288], "rot90": [1209, 1322, 1323, 1324, 1325], "take_along_axi": [1210, 1357, 1359, 1360, 1361], "top_k": [1211, 1367, 1369, 1370, 1371], "vsplit": [1212, 1393, 1395, 1396, 1397], "vstack": [1213, 1398, 1400, 1401, 1402], "static_matrix_exp": 1218, "static_max_pool1d": 1223, "static_max_pool2d": 1228, "static_max_pool3d": 1233, "median": [1234, 1235, 1236, 1237, 1352], "static_median": 1238, "meta": [1239, 1949], "static_moveaxi": 1244, "msort": [1245, 1246, 1247, 1248, 1341], "static_msort": 1249, "static_nan_to_num": 1255, "nanmean": [1256, 1257, 1258, 1259, 1353], "static_nanmean": 1260, "nanmedian": [1261, 1262, 1263, 1264, 1354], "static_nanmedian": 1265, "static_nansum": 1270, "native_sparse_arrai": [1271, 1347], "native_sparse_array_to_indices_values_and_shap": [1272, 1348], "nest": [1275, 1953, 2128], "static_nextaft": 1280, "static_pad": 1289, "poisson": [1291, 1292, 1293, 1294, 1311], "static_poisson": 1295, "static_prelu": 1300, "quantil": [1301, 1302, 1303, 1304, 1355], "static_quantil": 1305, "static_r": 1316, "static_relu6": 1321, "static_rot90": 1326, "static_signbit": 1333, "static_sinc": 1338, "spars": 1342, "unravel_index": [1356, 1383, 1385, 1386, 1387], "static_take_along_axi": 1358, "static_thresholded_relu": 1363, "static_top_k": 1368, "static_tril_indic": 1376, "static_triu_indic": 1380, "static_unravel_index": 1384, "static_vorbis_window": 1390, "static_vsplit": 1394, "static_vstack": 1399, "static_xlogi": 1404, "static_zeta": 1409, "paramet": [1414, 1554, 1555, 1558, 1560, 1561, 2266], "all_equ": [1415, 1416, 1417, 1418], "static_all_equ": 1419, "arg_info": 1420, "arg_nam": 1421, "array_equ": [1422, 1423, 1424, 1425], "static_array_equ": 1426, "assert_supports_inplac": [1427, 1428, 1429, 1430], "static_assert_supports_inplac": 1431, "cache_fn": 1432, "clip_matrix_norm": [1433, 1434, 1435, 1436], "static_clip_matrix_norm": 1437, "clip_vector_norm": [1438, 1439, 1440, 1441], "static_clip_vector_norm": 1442, "container_typ": 1443, "current_backend_str": 1444, "default": [1445, 1446, 1447], "einops_rearrang": [1448, 1449, 1450, 1451], "static_einops_rearrang": 1452, "einops_reduc": [1453, 1454, 1455, 1456], "static_einops_reduc": 1457, "einops_repeat": [1458, 1459, 1460, 1461], "static_einops_repeat": 1462, "exist": [1463, 1464, 1465], "fourier_encod": [1466, 1467, 1468, 1469], "static_fourier_encod": 1470, "function_supported_devices_and_dtyp": 1471, "function_unsupported_devices_and_dtyp": 1472, "gather": [1473, 1474, 1475, 1476], "static_gath": 1477, "gather_nd": [1478, 1479, 1480, 1481], "static_gather_nd": 1482, "get_all_arrays_in_memori": 1483, "get_array_mod": 1484, "get_exception_trace_mod": 1485, "get_item": 1486, "get_min_bas": 1487, "get_min_denomin": 1488, "get_nestable_mod": 1489, "get_num_dim": [1490, 1491, 1492, 1493], "static_get_num_dim": 1494, "get_queue_timeout": 1495, "get_referrers_recurs": 1496, "get_show_func_wrapper_trace_mod": 1497, "get_tmp_dir": 1498, "has_nan": [1499, 1500, 1501, 1502], "static_has_nan": 1503, "inplace_arrays_support": 1504, "inplace_decr": [1505, 1506, 1507, 1508], "static_inplace_decr": 1509, "inplace_incr": [1510, 1511, 1512, 1513], "static_inplace_incr": 1514, "inplace_upd": [1515, 1516, 1517, 1518], "static_inplace_upd": 1519, "inplace_variables_support": 1520, "is_arrai": [1521, 1522, 1523, 1524], "static_is_arrai": 1525, "is_ivy_arrai": [1526, 1527, 1528, 1529], "static_is_ivy_arrai": 1530, "is_ivy_contain": [1531, 1532, 1533], "is_native_arrai": [1534, 1535, 1536, 1537], "static_is_native_arrai": 1538, "isscalar": 1539, "match_kwarg": 1540, "multiprocess": 1541, "num_arrays_in_memori": 1542, "print_all_arrays_in_memori": 1543, "scatter_flat": [1544, 1545, 1546, 1547], "static_scatter_flat": 1548, "scatter_nd": [1549, 1550, 1551, 1552], "static_scatter_nd": 1553, "set_array_mod": 1554, "set_exception_trace_mod": 1555, "set_min_bas": 1556, "set_min_denomin": 1557, "set_nestable_mod": 1558, "set_queue_timeout": 1559, "set_shape_array_mod": 1560, "set_show_func_wrapper_trace_mod": 1561, "set_tmp_dir": 1562, "shape_array_mod": 1564, "stable_divid": [1565, 1566, 1567, 1568], "static_stable_divid": 1569, "stable_pow": [1570, 1571, 1572, 1573], "static_stable_pow": 1574, "supports_inplace_upd": [1575, 1577, 1578, 1579], "static_supports_inplace_upd": 1576, "to_ivy_shap": 1580, "to_list": [1581, 1583, 1584], "static_to_list": 1582, "to_native_shap": 1585, "to_numpi": [1586, 1588, 1589, 1590], "static_to_numpi": 1587, "to_scalar": [1591, 1593, 1594, 1595], "static_to_scalar": 1592, "try_else_non": 1596, "unset_array_mod": 1597, "unset_exception_trace_mod": 1598, "unset_nestable_mod": 1599, "unset_queue_timeout": 1600, "unset_shape_array_mod": 1601, "unset_show_func_wrapper_trace_mod": 1602, "value_is_nan": [1603, 1605, 1606, 1607], "static_value_is_nan": 1604, "vmap": 1608, "gradienttrack": 1610, "adam_step": [1611, 1612, 1613, 1614], "adam_upd": [1615, 1616, 1617, 1618], "execute_with_gradi": 1619, "grad": 1620, "gradient_descent_upd": [1621, 1622, 1623, 1624], "jac": 1625, "lamb_upd": [1626, 1627, 1628, 1629], "lars_upd": [1630, 1631, 1632, 1633], "optimizer_upd": [1634, 1635, 1636, 1637], "set_with_grad": 1638, "stop_gradi": [1639, 1641, 1642, 1643], "static_stop_gradi": 1640, "unset_with_grad": 1644, "value_and_grad": 1645, "with_grad": 1646, "conv": 1648, "conv1d": [1649, 1650, 1651, 1652, 2162], "static_conv1d": 1653, "conv1d_transpos": [1654, 1655, 1656, 1657], "static_conv1d_transpos": 1658, "conv2d": [1659, 1660, 1661, 1662, 2164], "static_conv2d": 1663, "conv2d_transpos": [1664, 1665, 1666, 1667], "static_conv2d_transpos": 1668, "conv3d": [1669, 1670, 1671, 1672, 2166], "static_conv3d": 1673, "conv3d_transpos": [1674, 1675, 1676, 1677], "static_conv3d_transpos": 1678, "conv_general_dil": 1679, "conv_general_transpos": 1680, "depthwise_conv2d": [1681, 1682, 1683, 1684], "static_depthwise_conv2d": 1685, "dropout": [1686, 1687, 1688, 1689, 2169], "static_dropout": 1690, "static_linear": 1695, "lstm_updat": [1696, 1697, 1698, 1699], "static_lstm_upd": 1700, "multi_head_attent": [1701, 1702, 1703, 1704], "static_multi_head_attent": 1705, "scaled_dot_product_attent": [1706, 1707, 1708, 1709], "static_scaled_dot_product_attent": 1710, "choleski": [1712, 1713, 1714, 1715], "static_choleski": 1716, "cross": [1717, 1718, 1719, 1720], "static_cross": 1721, "det": [1722, 1723, 1724, 1725], "static_det": 1726, "diag": [1727, 1728, 1729, 1730], "static_diag": 1731, "diagon": [1732, 1733, 1734, 1735], "static_diagon": 1736, "eigh": [1738, 1739, 1740, 1741], "static_eigh": 1742, "eigvalsh": [1743, 1744, 1745, 1746], "static_eigvalsh": 1747, "inner": [1748, 1749, 1750, 1751], "static_inn": 1752, "inv": [1753, 1754, 1755, 1756], "static_inv": 1757, "lu_factor": 1758, "matmul": [1759, 1760, 1761, 1762], "static_matmul": 1763, "matrix_norm": [1764, 1765, 1766, 1767], "static_matrix_norm": 1768, "matrix_pow": [1769, 1770, 1771, 1772], "static_matrix_pow": 1773, "matrix_rank": [1774, 1775, 1776, 1777], "static_matrix_rank": 1778, "matrix_transpos": [1779, 1780, 1781, 1782], "static_matrix_transpos": 1783, "outer": [1784, 1785, 1786, 1787], "static_out": 1788, "pinv": [1789, 1790, 1791, 1792], "static_pinv": 1793, "qr": [1794, 1795, 1796, 1797], "static_qr": 1798, "slogdet": [1799, 1800, 1801, 1802], "static_slogdet": 1803, "solv": [1804, 1805, 1806, 1807], "static_solv": 1808, "svd": [1809, 1811, 1812, 1813], "static_svd": 1810, "svdval": [1814, 1816, 1817, 1818], "static_svdv": 1815, "tensordot": [1819, 1821, 1822], "static_tensordot": 1820, "tensorsolv": [1823, 1824, 1825, 1826], "static_trac": 1828, "vander": [1832, 1834, 1835, 1836], "static_vand": 1833, "vecdot": [1837, 1839, 1840, 1841], "static_vecdot": 1838, "vector_norm": [1842, 1844, 1845, 1846], "static_vector_norm": 1843, "vector_to_skew_symmetric_matrix": [1847, 1849, 1850, 1851], "static_vector_to_skew_symmetric_matrix": 1848, "binary_cross_entropi": [1853, 1854, 1855, 1856], "static_binary_cross_entropi": 1857, "cross_entropi": [1858, 1859, 1860, 1861], "static_cross_entropi": 1862, "sparse_cross_entropi": [1863, 1864, 1865, 1866], "static_sparse_cross_entropi": 1867, "clip": [1869, 1870, 1871, 1872], "static_clip": 1873, "concat": [1874, 1875, 1876, 1877], "static_concat": 1878, "constant_pad": [1879, 1880, 1881, 1882], "static_constant_pad": 1883, "expand_dim": [1884, 1885, 1886, 1887], "static_expand_dim": 1888, "flip": [1889, 1890, 1891, 1892], "static_flip": 1893, "permute_dim": [1894, 1895, 1896, 1897], "static_permute_dim": 1898, "repeat": [1899, 1900, 1901, 1902], "static_repeat": 1903, "reshap": [1904, 1905, 1906, 1907], "static_reshap": 1908, "static_rol": 1913, "split": [1914, 1915, 1916, 1917], "static_split": 1918, "squeez": [1919, 1920, 1921, 1922], "static_squeez": 1923, "static_stack": 1928, "swapax": [1929, 1931, 1932, 1933], "static_swapax": 1930, "tile": [1934, 1936, 1937, 1938], "static_til": 1935, "unstack": [1939, 1941, 1942, 1943], "static_unstack": 1940, "zero_pad": [1944, 1946, 1947, 1948], "static_zero_pad": 1945, "fomaml_step": 1950, "maml_step": 1951, "reptile_step": 1952, "all_nested_indic": 1954, "copy_nest": 1955, "duplicate_array_index_chain": 1956, "index_nest": 1957, "insert_into_nest_at_index": 1958, "insert_into_nest_at_indic": 1959, "map_nest_at_index": 1961, "map_nest_at_indic": 1962, "multi_index_nest": 1963, "nested_ani": 1964, "nested_argwher": 1965, "nested_map": 1966, "nested_multi_map": 1967, "prune_empti": 1968, "prune_nest_at_index": 1969, "prune_nest_at_indic": 1970, "set_nest_at_index": 1971, "set_nest_at_indic": 1972, "layer_norm": [1974, 1975, 1976, 1977], "multinomi": [1979, 1980, 1981, 1982], "static_multinomi": 1983, "randint": [1984, 1985, 1986, 1987], "static_randint": 1988, "random_norm": [1989, 1990, 1991, 1992], "static_random_norm": 1993, "random_uniform": [1994, 1995, 1996, 1997], "static_random_uniform": 1998, "seed": [1999, 2283], "shuffl": [2000, 2001, 2002, 2003], "static_shuffl": 2004, "argmax": [2006, 2007, 2008, 2009], "static_argmax": 2010, "argmin": [2011, 2012, 2013, 2014], "static_argmin": 2015, "argwher": [2016, 2017, 2018, 2019], "static_argwher": 2020, "nonzero": [2021, 2022, 2023, 2024], "static_nonzero": 2025, "static_wher": 2027, "depend": [2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051], "output": [2031, 2032, 2036, 2037, 2041, 2042, 2046, 2047, 2051], "unique_al": [2032, 2034, 2035, 2036], "static_unique_al": 2033, "unique_count": [2037, 2039, 2040, 2041], "static_unique_count": 2038, "unique_invers": [2042, 2044, 2045, 2046], "static_unique_invers": 2043, "unique_valu": [2047, 2049, 2050, 2051], "static_unique_valu": 2048, "argsort": [2053, 2054, 2055, 2056], "static_argsort": 2057, "searchsort": [2058, 2059, 2060, 2061], "static_searchsort": 2062, "static_sort": 2067, "cumprod": [2069, 2070, 2071, 2072], "static_cumprod": 2073, "cumsum": [2074, 2075, 2076, 2077], "static_cumsum": 2078, "einsum": [2079, 2080, 2081, 2082], "max": [2083, 2084, 2085, 2086], "mean": [2087, 2088, 2089, 2090], "min": [2091, 2092, 2093, 2094], "prod": [2095, 2096, 2097, 2098, 2243], "static_prod": 2099, "std": [2100, 2101, 2102, 2103], "sum": [2104, 2106, 2107, 2108], "static_sum": 2105, "var": [2109, 2111, 2112, 2113], "static_var": 2110, "all": [2115, 2116, 2117, 2118], "static_al": 2119, "ani": [2120, 2121, 2122, 2123], "static_ani": 2124, "glossari": 2125, "content": 2126, "overview": 2126, "quick": 2126, "start": 2126, "citat": 2126, "nestedarrai": 2129, "relat": 2130, "infrastructur": [2132, 2140], "llvm": 2132, "mlir": 2132, "oneapi": 2132, "exchang": [2133, 2140], "onnx": 2133, "nnef": 2133, "coreml": 2133, "matlab": 2134, "scipi": 2134, "torch": [2134, 2135], "scikit": 2134, "learn": 2134, "theano": 2134, "panda": 2134, "julia": 2134, "apach": [2134, 2137], "spark": 2134, "mllib": 2134, "caff": 2134, "chainer": 2134, "tensorflow": 2134, "1": 2134, "mxnet": 2134, "cntk": 2134, "pytorch": 2134, "flux": 2134, "jax": 2134, "2": 2134, "dex": 2134, "languag": 2134, "tracer": [2135, 2140], "tf": 2135, "jaxpr": 2135, "jit": 2135, "fx": 2135, "compani": [2136, 2140], "quansight": 2136, "modular": 2136, "octoml": 2136, "multi": [2137, 2140], "vendor": [2137, 2138, 2139, 2140], "tvm": 2137, "xla": 2137, "gcc": 2137, "specif": [2138, 2139, 2140], "tensorrt": 2138, "cuda": 2138, "icc": 2139, "icx": 2139, "nvcc": 2139, "doe": 2140, "eagerpi": 2141, "kera": 2141, "thinc": 2141, "tensorli": 2141, "neuropod": 2141, "geglu": 2144, "moduleconvert": 2147, "to_ivy_modul": 2148, "modulehelp": 2150, "firstlayersiren": 2153, "glorotuniform": 2154, "kaimingnorm": 2156, "Ones": 2157, "siren": 2158, "uniform": 2159, "conv1dtranspos": 2163, "conv2dtranspos": 2165, "conv3dtranspos": 2167, "depthwiseconv2d": 2168, "lstm": 2170, "multiheadattent": 2172, "layernorm": 2176, "adam": 2178, "lamb": 2179, "lar": 2180, "sgd": 2182, "sequenti": [2183, 2184], "assert_all_clos": 2187, "assert_same_type_and_shap": 2188, "check_unsupported_devic": 2189, "check_unsupported_device_and_dtyp": 2190, "check_unsupported_dtyp": 2191, "test_unsupported_funct": 2192, "value_test": 2193, "avail": 2194, "available_framework": 2195, "ground_truth": 2196, "args_to_contain": 2198, "as_cont": 2199, "as_list": 2200, "convtru": 2201, "create_args_kwarg": 2202, "create_frontend_args_kwarg": 2203, "empty_func": 2204, "flatten_and_to_np": 2206, "flatten_fw_and_to_np": 2207, "framework_compar": 2208, "get_frontend_ret": 2209, "get_ret_and_flattened_np_arrai": 2210, "gradient_incompatible_funct": 2211, "gradient_test": 2212, "gradient_unsupported_dtyp": 2213, "kwargs_to_args_n_kwarg": 2214, "make_json_pick": [2215, 2248], "test_frontend_funct": 2216, "test_frontend_method": 2217, "test_funct": 2218, "test_method": 2219, "var_fn": 2220, "global": 2221, "interruptedtest": 2222, "testdata": 2223, "remove_all_current_framework": 2224, "setup_api_test": 2225, "setup_frontend_test": 2226, "teardown_api_test": 2227, "teardown_frontend_test": 2228, "array_and_broadcastable_shap": 2231, "array_bool": 2232, "array_indices_axi": 2233, "array_valu": 2234, "arrays_and_ax": 2235, "arrays_for_pool": 2236, "dtype_and_valu": 2238, "dtype_values_axi": 2239, "list_of_s": 2240, "mutually_broadcastable_shap": 2242, "array_dtyp": 2245, "get_castable_dtyp": 2246, "get_dtyp": 2247, "apply_safety_factor": 2250, "embedding_help": 2251, "get_axi": 2252, "get_bound": 2253, "get_mean_std": 2254, "get_shap": 2255, "matrix_is_st": 2256, "reshape_shap": 2257, "subset": 2258, "x_and_filt": 2259, "float": 2261, "int": 2262, "struct": 2264, "frontendmethoddata": 2265, "flag": 2266, "frontendfunctiontestflag": 2267, "frontendmethodtestflag": 2268, "functiontestflag": 2269, "methodtestflag": 2270, "build_flag": 2271, "frontend_function_flag": 2272, "frontend_method_flag": 2273, "function_flag": 2274, "method_flag": 2275, "handle_frontend_method": 2277, "handle_frontend_test": 2278, "handle_method": 2279, "handle_test": 2280, "num_positional_arg": 2281, "num_positional_args_method": 2282, "check_al": 2286, "check_all_or_any_fn": 2287, "check_ani": 2288, "check_dimens": 2289, "check_elem_in_list": 2290, "check_equ": 2291, "check_exist": 2292, "check_fals": 2293, "check_fill_value_and_dtype_are_compat": 2294, "check_gather_input_valid": 2295, "check_gather_nd_input_valid": 2296, "check_great": 2297, "check_inplace_sizes_valid": 2298, "check_isinst": 2299, "check_kernel_padding_s": 2300, "check_less": 2301, "check_one_way_broadcast": 2302, "check_same_dtyp": 2303, "check_shap": 2304, "check_shapes_broadcast": 2305, "check_tru": 2306, "ast": 2308, "importtransform": 2309, "ivyload": 2310, "ivypathfind": 2311, "contextmanag": 2313, "choose_random_backend": 2314, "clear_backend_stack": 2315, "convert_from_numpy_to_target_backend": 2316, "convert_from_source_backend_to_numpi": 2317, "current_backend": 2318, "fn_name_from_version_specific_fn_nam": 2319, "get_backend": 2320, "prevent_access_loc": 2321, "set_backend": 2322, "set_backend_to_specific_vers": 2323, "set_jax_backend": 2324, "set_numpy_backend": 2325, "set_tensorflow_backend": 2326, "set_torch_backend": 2327, "unset_backend": 2328, "with_backend": 2329, "import": 2330, "import_modul": 2331, "inspect": 2332, "add_array_spec": 2333, "fn_array_spec": 2334, "verbos": 2335, "cprint": 2336}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Background": [[1, "background"], [2126, "background"]], "ML Explosion": [[2, "ml-explosion"]], "Standardization": [[3, "standardization"]], "Skepticism": [[3, "skepticism"]], "Complimentary vs Competitive": [[3, "complimentary-vs-competitive"]], "Do Standards Work?": [[3, "do-standards-work"]], "The Array API Standard": [[3, "the-array-api-standard"]], "Why Unify?": [[4, "why-unify"]], "No More Re-implementations \ud83d\udea7": [[4, "no-more-re-implementations"]], "\u201cInfinite\u201d Shelf-Life \u2705": [[4, "infinite-shelf-life"]], "Contributing": [[5, "contributing"], [2126, "contributing"]], "Applied Libraries": [[6, "applied-libraries"], [148, "applied-libraries"]], "Introduction": [[6, "introduction"], [126, "introduction"], [127, "introduction"]], "Example - Ivy Robot": [[6, "example-ivy-robot"]], "Building the Docs": [[7, "building-the-docs"]], "Building the Docs with Docker": [[7, "building-the-docs-with-docker"]], "Dockerless Doc-building": [[7, "dockerless-doc-building"]], "Using miniconda": [[7, "using-miniconda"], [10, "using-miniconda"]], "Using venv": [[7, "using-venv"], [10, "using-venv"]], "Building the docs": [[7, "id1"]], "Working of the Documentation Building Pipeline": [[7, "working-of-the-documentation-building-pipeline"]], "make_docs.sh:": [[7, "make-docs-sh"]], "entrypoint.sh:": [[7, "entrypoint-sh"]], "_make_docs.sh:": [[7, "id2"]], "generate_src_rst_files.py:": [[7, "generate-src-rst-files-py"]], "sphinx-build.py": [[7, "sphinx-build-py"]], "correct_built_html_files.py": [[7, "correct-built-html-files-py"]], "remove_files.sh": [[7, "remove-files-sh"]], "Helpful Resources": [[8, "helpful-resources"]], "Open Tasks": [[9, "open-tasks"]], "Function Formatting": [[9, "function-formatting"]], "Formatting checklist": [[9, "formatting-checklist"]], "Frontend APIs": [[9, "frontend-apis"]], "Where to place a frontend function": [[9, "where-to-place-a-frontend-function"]], "Ivy Experimental API": [[9, "ivy-experimental-api"], [11, "ivy-experimental-api"]], "Setting Up": [[10, "setting-up"]], "Forking and cloning the repo": [[10, "forking-and-cloning-the-repo"]], "PyCharm": [[10, "pycharm"]], "Virtual environments - No Docker": [[10, "virtual-environments-no-docker"]], "Docker Interpreter with PyCharm": [[10, "docker-interpreter-with-pycharm"]], "Windows": [[10, "windows"], [10, "id6"]], "MacOS": [[10, "macos"]], "Ubuntu": [[10, "ubuntu"], [10, "id8"]], "Setting Up Testing": [[10, "setting-up-testing"]], "More Detailed Hypothesis Logs": [[10, "more-detailed-hypothesis-logs"]], "Setting up for Free": [[10, "setting-up-for-free"]], "GitHub Codespaces": [[10, "github-codespaces"]], "Pre-Commit": [[10, "pre-commit"]], "The Basics": [[11, "the-basics"]], "Getting Help": [[11, "getting-help"]], "ToDo List Issues": [[11, "todo-list-issues"]], "Managing Your Fork": [[11, "managing-your-fork"]], "Who To Ask": [[11, "who-to-ask"]], "With Command Line:": [[11, "with-command-line"]], "With Browser:": [[11, "with-browser"]], "Pull Requests": [[11, "pull-requests"]], "Small Commits Often": [[11, "small-commits-often"]], "Interactive Ivy Docker Container": [[11, "interactive-ivy-docker-container"]], "Running Tests Locally": [[11, "running-tests-locally"]], "With Docker": [[11, "with-docker"]], "Getting the most out of IDE": [[11, "getting-the-most-out-of-ide"]], "with PyCharm": [[11, "with-pycharm"]], "Data classes": [[12, "data-classes"]], "Array": [[13, "module-ivy.array.array"], [16, "module-ivy.array.array"]], "Activations": [[14, "module-ivy.array.activations"], [63, "module-ivy.container.activations"], [169, "module-ivy.functional.ivy.activations"], [769, "module-ivy.functional.ivy.experimental.activations"], [2143, "module-ivy.stateful.activations"]], "ArrayWithActivations": [[15, "arraywithactivations"]], "Conversions": [[18, "module-ivy.array.conversions"], [69, "module-ivy.container.conversions"]], "args_to_ivy": [[19, "args-to-ivy"]], "args_to_native": [[20, "args-to-native"]], "to_ivy": [[21, "to-ivy"]], "to_native": [[22, "to-native"]], "Creation": [[23, "module-ivy.array.creation"], [71, "module-ivy.container.creation"], [219, "module-ivy.functional.ivy.creation"], [870, "module-ivy.functional.ivy.experimental.creation"]], "ArrayWithCreation": [[24, "arraywithcreation"]], "Data type": [[25, "module-ivy.array.data_type"], [73, "module-ivy.container.data_type"], [305, "module-ivy.functional.ivy.data_type"], [879, "module-ivy.functional.ivy.experimental.data_type"]], "ArrayWithDataTypes": [[26, "arraywithdatatypes"]], "Device": [[27, "module-ivy.array.device"], [75, "module-ivy.container.device"], [410, "module-ivy.functional.ivy.device"], [886, "module-ivy.functional.ivy.experimental.device"]], "ArrayWithDevice": [[28, "arraywithdevice"]], "Elementwise": [[29, "module-ivy.array.elementwise"], [77, "module-ivy.container.elementwise"], [445, "module-ivy.functional.ivy.elementwise"], [933, "module-ivy.functional.ivy.experimental.elementwise"]], "ArrayWithElementwise": [[30, "arraywithelementwise"]], "Experimental": [[31, "experimental"], [79, "experimental"], [766, "module-ivy.functional.ivy.experimental"]], "General": [[32, "module-ivy.array.general"], [80, "module-ivy.container.general"], [1037, "module-ivy.functional.ivy.experimental.general"], [1414, "module-ivy.functional.ivy.general"]], "ArrayWithGeneral": [[33, "arraywithgeneral"]], "Gradients": [[34, "module-ivy.array.gradients"], [82, "module-ivy.container.gradients"], [1044, "module-ivy.functional.ivy.experimental.gradients"], [1609, "module-ivy.functional.ivy.gradients"]], "ArrayWithGradients": [[35, "arraywithgradients"]], "Image": [[36, "module-ivy.array.image"], [84, "module-ivy.container.image"]], "ArrayWithImage": [[37, "arraywithimage"]], "Layers": [[38, "module-ivy.array.layers"], [86, "module-ivy.container.layers"], [1131, "module-ivy.functional.ivy.experimental.layers"], [1647, "module-ivy.functional.ivy.layers"], [2161, "module-ivy.stateful.layers"]], "ArrayWithLayers": [[39, "arraywithlayers"]], "Linear algebra": [[40, "module-ivy.array.linear_algebra"], [88, "module-ivy.container.linear_algebra"], [1164, "module-ivy.functional.ivy.experimental.linear_algebra"], [1711, "module-ivy.functional.ivy.linear_algebra"]], "ArrayWithLinearAlgebra": [[41, "arraywithlinearalgebra"]], "Losses": [[42, "module-ivy.array.losses"], [90, "module-ivy.container.losses"], [1183, "module-ivy.functional.ivy.experimental.losses"], [1852, "module-ivy.functional.ivy.losses"]], "ArrayWithLosses": [[43, "arraywithlosses"]], "Manipulation": [[44, "module-ivy.array.manipulation"], [92, "module-ivy.container.manipulation"], [1190, "module-ivy.functional.ivy.experimental.manipulation"], [1868, "module-ivy.functional.ivy.manipulation"]], "ArrayWithManipulation": [[45, "arraywithmanipulation"]], "Norms": [[46, "module-ivy.array.norms"], [94, "module-ivy.container.norms"], [1281, "module-ivy.functional.ivy.experimental.norms"], [1973, "module-ivy.functional.ivy.norms"], [2175, "module-ivy.stateful.norms"]], "ArrayWithNorms": [[47, "arraywithnorms"]], "Random": [[48, "module-ivy.array.random"], [96, "module-ivy.container.random"], [1306, "module-ivy.functional.ivy.experimental.random"], [1978, "module-ivy.functional.ivy.random"]], "ArrayWithRandom": [[49, "arraywithrandom"]], "Searching": [[50, "module-ivy.array.searching"], [98, "module-ivy.container.searching"], [1327, "module-ivy.functional.ivy.experimental.searching"], [2005, "module-ivy.functional.ivy.searching"]], "ArrayWithSearching": [[51, "arraywithsearching"]], "Set": [[52, "module-ivy.array.set"], [100, "module-ivy.container.set"], [1328, "module-ivy.functional.ivy.experimental.set"], [2031, "module-ivy.functional.ivy.set"]], "ArrayWithSet": [[53, "arraywithset"]], "Sorting": [[54, "module-ivy.array.sorting"], [102, "module-ivy.container.sorting"], [1339, "module-ivy.functional.ivy.experimental.sorting"], [2052, "module-ivy.functional.ivy.sorting"]], "ArrayWithSorting": [[55, "arraywithsorting"]], "Statistical": [[56, "module-ivy.array.statistical"], [104, "module-ivy.container.statistical"], [1349, "module-ivy.functional.ivy.experimental.statistical"], [2068, "module-ivy.functional.ivy.statistical"]], "ArrayWithStatistical": [[57, "arraywithstatistical"]], "Utility": [[58, "module-ivy.array.utility"], [106, "module-ivy.container.utility"], [1388, "module-ivy.functional.ivy.experimental.utility"], [2114, "module-ivy.functional.ivy.utility"]], "ArrayWithUtility": [[59, "arraywithutility"]], "Wrapping": [[60, "module-ivy.array.wrapping"], [108, "module-ivy.container.wrapping"]], "add_ivy_array_instance_methods": [[61, "add-ivy-array-instance-methods"]], "Container": [[62, "module-ivy.container.container"], [67, "module-ivy.container.container"]], "ContainerWithActivations": [[64, "containerwithactivations"]], "Base": [[65, "module-ivy.container.base"]], "ContainerBase": [[66, "containerbase"]], "ContainerWithConversions": [[70, "containerwithconversions"]], "ContainerWithCreation": [[72, "containerwithcreation"]], "ContainerWithDataTypes": [[74, "containerwithdatatypes"]], "ContainerWithDevice": [[76, "containerwithdevice"]], "ContainerWithElementwise": [[78, "containerwithelementwise"]], "ContainerWithGeneral": [[81, "containerwithgeneral"]], "ContainerWithGradients": [[83, "containerwithgradients"]], "ContainerWithImage": [[85, "containerwithimage"]], "ContainerWithLayers": [[87, "containerwithlayers"]], "ContainerWithLinearAlgebra": [[89, "containerwithlinearalgebra"]], "ContainerWithLosses": [[91, "containerwithlosses"]], "ContainerWithManipulation": [[93, "containerwithmanipulation"]], "ContainerWithNorms": [[95, "containerwithnorms"]], "ContainerWithRandom": [[97, "containerwithrandom"]], "ContainerWithSearching": [[99, "containerwithsearching"]], "ContainerWithSet": [[101, "containerwithset"]], "ContainerWithSorting": [[103, "containerwithsorting"]], "ContainerWithStatistical": [[105, "containerwithstatistical"]], "ContainerWithUtility": [[107, "containerwithutility"]], "add_ivy_container_instance_methods": [[109, "add-ivy-container-instance-methods"]], "Deep Dive": [[110, "deep-dive"]], "Array API Tests": [[111, "array-api-tests"], [115, "array-api-tests"]], "Running the Tests": [[111, "running-the-tests"]], "Using Terminal": [[111, "using-terminal"]], "Using the IDE": [[111, "using-the-ide"]], "Regenerating Test Failures": [[111, "regenerating-test-failures"]], "Test Skipping": [[111, "test-skipping"]], "Arrays": [[112, "arrays"]], "Native Array": [[112, "native-array"]], "Ivy Array": [[112, "ivy-array"], [134, "ivy-array"]], "Array Handling": [[112, "array-handling"]], "Integrating custom classes with Ivy": [[112, "integrating-custom-classes-with-ivy"]], "Backend Setting": [[113, "backend-setting"]], "Backend and Frontend Version Support": [[113, "backend-and-frontend-version-support"]], "Containers": [[114, "containers"]], "Container Instance Methods": [[114, "container-instance-methods"]], "Container Static Methods": [[114, "container-static-methods"]], "API Static Methods": [[114, "api-static-methods"]], "API Instance Methods": [[114, "api-instance-methods"]], "API Special Methods": [[114, "api-special-methods"]], "Nestable Functions": [[114, "nestable-functions"], [122, "nestable-functions"], [123, "nestable-functions"]], "Continuous Integration": [[115, "continuous-integration"]], "Commit (Push/PR) Triggered Testing": [[115, "commit-push-pr-triggered-testing"]], "Ivy Tests": [[115, "ivy-tests"], [128, "ivy-tests"]], "Implementation": [[115, "implementation"]], "A Top-Down View": [[115, "a-top-down-view"]], "Storing (and retrieving) the Mapping": [[115, "storing-and-retrieving-the-mapping"]], "Cloning and Pushing to the Repository": [[115, "cloning-and-pushing-to-the-repository"]], "Implementational Nitty Gritties": [[115, "implementational-nitty-gritties"]], "Storage Space (unifyai/Mapping)": [[115, "storage-space-unifyai-mapping"]], "Determine Test Coverage Workflow": [[115, "determine-test-coverage-workflow"]], "Multiple Runners": [[115, "multiple-runners"]], "Race Condition": [[115, "race-condition"]], "Periodic Testing": [[115, "periodic-testing"]], "Manually Dispatched Workflows": [[115, "manually-dispatched-workflows"]], "CI Pipeline \u27a1\ufe0f": [[115, "ci-pipeline"]], "Push": [[115, "push"]], "Pull Request": [[115, "pull-request"]], "Dashboard": [[115, "dashboard"]], "Data Types": [[116, "data-types"]], "Data Type Module": [[116, "data-type-module"]], "Data Type Promotion": [[116, "data-type-promotion"]], "Arguments in other Functions": [[116, "arguments-in-other-functions"], [117, "arguments-in-other-functions"]], "Supported and Unsupported Data Types": [[116, "supported-and-unsupported-data-types"]], "Backend Data Type Bugs": [[116, "backend-data-type-bugs"]], "Superset Data Type Support": [[116, "superset-data-type-support"]], "Devices": [[117, "devices"]], "Device Module": [[117, "device-module"]], "Docstring Examples": [[118, "docstring-examples"]], "ivy.tan": [[118, "ivy-tan"], [750, "ivy-tan"]], "ivy.roll": [[118, "ivy-roll"], [1912, "ivy-roll"]], "ivy.add": [[118, "ivy-add"], [464, "ivy-add"]], "Docstrings": [[119, "docstrings"]], "Exception Handling": [[120, "exception-handling"]], "Ivy Exception Class": [[120, "ivy-exception-class"]], "Configurable Mode for Stack Trace": [[120, "configurable-mode-for-stack-trace"]], "Ivy func_wrapper Pruning": [[120, "ivy-func-wrapper-pruning"]], "@handle_exceptions Decorator": [[120, "handle-exceptions-decorator"]], "Assertion Function": [[120, "assertion-function"]], "Formatting": [[121, "formatting"]], "Lint Checks": [[121, "lint-checks"]], "Pre-Commit Hook": [[121, "pre-commit-hook"]], "Function Arguments": [[122, "function-arguments"]], "Examples": [[122, "examples"]], "Positional and Keyword Arguments": [[122, "positional-and-keyword-arguments"]], "Input Arrays": [[122, "input-arrays"]], "out Argument": [[122, "out-argument"]], "dtype and device arguments": [[122, "dtype-and-device-arguments"]], "Numbers in Operator Functions": [[122, "numbers-in-operator-functions"]], "Integer Sequences": [[122, "integer-sequences"]], "Function Types": [[123, "function-types"]], "Primary Functions": [[123, "primary-functions"]], "Compositional Functions": [[123, "compositional-functions"]], "Mixed Functions": [[123, "mixed-functions"]], "Standalone Functions": [[123, "standalone-functions"]], "Convenience Functions": [[123, "convenience-functions"]], "Function Wrapping": [[124, "function-wrapping"]], "Inplace Updates": [[125, "inplace-updates"]], "out argument": [[125, "out-argument"]], "copy argument": [[125, "copy-argument"]], "Ivy Frontends": [[126, "ivy-frontends"]], "The Frontend Basics": [[126, "the-frontend-basics"]], "Unused Arguments": [[126, "unused-arguments"]], "Compositions": [[126, "compositions"]], "Missing Ivy Functions": [[126, "missing-ivy-functions"]], "Temporary Compositions": [[126, "temporary-compositions"]], "Supported Data Types and Devices": [[126, "supported-data-types-and-devices"]], "Classes and Instance Methods": [[126, "id6"]], "Frontend Data Type Promotion Rules": [[126, "frontend-data-type-promotion-rules"]], "NumPy Special Argument - Casting": [[126, "numpy-special-argument-casting"]], "Frontends Duplicate Policy": [[126, "frontends-duplicate-policy"]], "Ivy Frontend Tests": [[127, "ivy-frontend-tests"]], "Frontend Test Examples": [[127, "frontend-test-examples"]], "ivy.tan()": [[127, "ivy-tan"]], "ivy.full()": [[127, "ivy-full"]], "Testing Without Using Tests Values": [[127, "testing-without-using-tests-values"]], "Alias functions": [[127, "alias-functions"]], "Frontend Instance Method Tests": [[127, "frontend-instance-method-tests"]], "Frontend Instance Method Test Examples": [[127, "frontend-instance-method-test-examples"]], "ivy.add()": [[127, "ivy-add"]], "Hypothesis Helpers": [[127, "hypothesis-helpers"]], "Testing Pipeline": [[128, "testing-pipeline"]], "Hypothesis": [[128, "id2"]], "Data Generation": [[128, "id3"]], "Writing your own strategy": [[128, "writing-your-own-strategy"]], "Writing Hypothesis Test": [[128, "writing-hypothesis-test"]], "Ivy Test Decorators": [[128, "ivy-test-decorators"]], "Writing Ivy Tests": [[128, "writing-ivy-tests"]], "Integration of Strategies into Ivy Tests": [[128, "integration-of-strategies-into-ivy-tests"]], "Why do we need helper functions": [[128, "why-do-we-need-helper-functions"]], "How to write Hypothesis Tests effectively": [[128, "how-to-write-hypothesis-tests-effectively"]], "Bonus: Hypothesis\u2019 Extended Features": [[128, "bonus-hypothesis-extended-features"]], "Self-Consistent and Explicit Testing": [[128, "self-consistent-and-explicit-testing"]], "test_array_function": [[128, "id6"]], "Running Ivy Tests": [[128, "running-ivy-tests"]], "Re-Running Failed Ivy Tests": [[128, "re-running-failed-ivy-tests"]], "Navigating the Code": [[129, "navigating-the-code"]], "Categorization": [[129, "categorization"]], "Submodule Design": [[129, "submodule-design"]], "Ivy API": [[129, "ivy-api"]], "Backend API": [[129, "backend-api"]], "Submodule Helper Functions": [[129, "submodule-helper-functions"]], "Version Pinning": [[129, "version-pinning"]], "Superset Behaviour": [[130, "superset-behaviour"]], "Extending the Standard": [[130, "extending-the-standard"]], "What is the Superset?": [[130, "what-is-the-superset"]], "A Non-Duplicate Superset": [[130, "a-non-duplicate-superset"]], "What is not the Superset?": [[130, "what-is-not-the-superset"]], "When the Superset is Too Much": [[130, "when-the-superset-is-too-much"]], "Balancing Generalization with Efficiency": [[130, "balancing-generalization-with-efficiency"]], "More Examples": [[130, "more-examples"]], "Design": [[131, "design"], [2126, "design"]], "Building Blocks": [[132, "building-blocks"]], "Backend Functional APIs \u2705": [[132, "backend-functional-apis"]], "Ivy Functional API \u2705": [[132, "ivy-functional-api"]], "Backend Handler \u2705": [[132, "backend-handler"]], "Graph Compiler \ud83d\udea7": [[132, "graph-compiler"]], "Ivy as a Framework": [[133, "ivy-as-a-framework"]], "The Array Class": [[134, "the-array-class"]], "Unifying Operators": [[134, "unifying-operators"]], "API Monkey Patching": [[134, "api-monkey-patching"]], "Instance Methods": [[134, "instance-methods"]], "Ivy Container": [[135, "ivy-container"]], "Construction": [[135, "construction"]], "Representation": [[135, "representation"]], "Recursive Methods": [[135, "recursive-methods"]], "Built-ins": [[135, "built-ins"]], "Access": [[135, "access"]], "Saving and Loading": [[135, "saving-and-loading"]], "Comparisons": [[135, "comparisons"]], "Customized Representations": [[135, "customized-representations"]], "Use Cases": [[135, "use-cases"]], "Compartmentalization": [[135, "compartmentalization"]], "Configuration": [[135, "configuration"]], "Data loading": [[135, "data-loading"]], "Network weights": [[135, "network-weights"]], "Ivy Stateful API": [[136, "ivy-stateful-api"]], "Modules": [[136, "modules"]], "Initializers": [[136, "initializers"], [2151, "module-ivy.stateful.initializers"]], "Optimizers": [[136, "optimizers"], [2177, "module-ivy.stateful.optimizers"]], "Ivy as a Transpiler": [[137, "ivy-as-a-transpiler"]], "Frontend Functional APIs \ud83d\udea7": [[137, "frontend-functional-apis"]], "Role of the Graph Compiler \ud83d\udea7": [[137, "role-of-the-graph-compiler"]], "Converting Network Models \ud83d\udea7": [[137, "converting-network-models"]], "Ivy": [[138, "ivy"]], "Ivy builder": [[139, "ivy-builder"]], "Ivy ecosystem": [[140, "ivy-ecosystem"]], "Ivy gym": [[141, "ivy-gym"]], "Ivy mech": [[142, "ivy-mech"]], "Ivy memory": [[143, "ivy-memory"]], "Ivy models": [[144, "ivy-models"]], "Ivy robot": [[145, "ivy-robot"]], "Ivy vision": [[146, "ivy-vision"]], "Extensions": [[147, "extensions"], [2126, "extensions"]], "Ivy Mechanics": [[148, "ivy-mechanics"]], "Ivy Vision": [[148, "ivy-vision"]], "Ivy Robot": [[148, "ivy-robot"]], "Ivy Gym": [[148, "ivy-gym"]], "Ivy Memory": [[148, "ivy-memory"]], "FAQ": [[149, "faq"]], "Maintaining Backend Versions": [[149, "maintaining-backend-versions"]], "Dynamic Sizes": [[149, "dynamic-sizes"]], "Type and Shape Checking": [[149, "type-and-shape-checking"]], "GPU handling": [[149, "gpu-handling"]], "Model Deployment": [[149, "model-deployment"]], "Dynamic Control Flow": [[149, "dynamic-control-flow"]], "Auto-Differentiation": [[149, "auto-differentiation"]], "Replicas, and Data vs Model Parallelism": [[149, "replicas-and-data-vs-model-parallelism"]], "Support for Functions": [[149, "support-for-functions"]], "Alternative Data Structures": [[149, "alternative-data-structures"]], "Custom Operations": [[149, "custom-operations"]], "The Pipeline": [[149, "the-pipeline"]], "State": [[149, "state"]], "Func wrapper": [[150, "module-ivy.func_wrapper"]], "handle_array_function": [[151, "handle-array-function"]], "handle_array_like_without_promotion": [[152, "handle-array-like-without-promotion"]], "handle_nans": [[153, "handle-nans"]], "handle_nestable": [[154, "handle-nestable"]], "handle_out_argument": [[155, "handle-out-argument"]], "handle_view": [[156, "handle-view"]], "handle_view_indexing": [[157, "handle-view-indexing"]], "infer_device": [[158, "infer-device"]], "infer_dtype": [[159, "infer-dtype"]], "inputs_to_ivy_arrays": [[160, "inputs-to-ivy-arrays"]], "inputs_to_native_arrays": [[161, "inputs-to-native-arrays"]], "integer_arrays_to_float": [[162, "integer-arrays-to-float"]], "output_to_native_arrays": [[163, "output-to-native-arrays"]], "outputs_to_ivy_arrays": [[164, "outputs-to-ivy-arrays"]], "to_ivy_arrays_and_back": [[165, "to-ivy-arrays-and-back"]], "to_native_arrays_and_back": [[166, "to-native-arrays-and-back"]], "try_array_function_override": [[167, "try-array-function-override"]], "deserialize": [[170, "deserialize"]], "gelu": [[171, "gelu"]], "ivy.Array.gelu": [[172, "ivy-array-gelu"]], "ivy.Container.gelu": [[173, "ivy-container-gelu"]], "ivy.gelu": [[174, "ivy-gelu"]], "ivy.Container.static_gelu": [[175, "ivy-container-static-gelu"]], "get": [[176, "get"]], "leaky_relu": [[177, "leaky-relu"]], "ivy.Array.leaky_relu": [[178, "ivy-array-leaky-relu"]], "ivy.Container.leaky_relu": [[179, "ivy-container-leaky-relu"]], "ivy.leaky_relu": [[180, "ivy-leaky-relu"]], "ivy.Container.static_leaky_relu": [[181, "ivy-container-static-leaky-relu"]], "log_softmax": [[182, "log-softmax"]], "ivy.Array.log_softmax": [[183, "ivy-array-log-softmax"]], "ivy.Container.log_softmax": [[184, "ivy-container-log-softmax"]], "ivy.log_softmax": [[185, "ivy-log-softmax"]], "ivy.Container.static_log_softmax": [[186, "ivy-container-static-log-softmax"]], "mish": [[187, "mish"]], "ivy.Array.mish": [[188, "ivy-array-mish"]], "ivy.Container.mish": [[189, "ivy-container-mish"]], "ivy.mish": [[190, "ivy-mish"]], "ivy.Container.static_mish": [[191, "ivy-container-static-mish"]], "relu": [[192, "relu"]], "ivy.Array.relu": [[193, "ivy-array-relu"]], "ivy.Container.relu": [[194, "ivy-container-relu"]], "ivy.relu": [[195, "ivy-relu"]], "ivy.Container.static_relu": [[196, "ivy-container-static-relu"]], "sigmoid": [[197, "sigmoid"]], "ivy.Array.sigmoid": [[198, "ivy-array-sigmoid"]], "ivy.Container.sigmoid": [[199, "ivy-container-sigmoid"]], "ivy.sigmoid": [[200, "ivy-sigmoid"]], "ivy.Container.static_sigmoid": [[201, "ivy-container-static-sigmoid"]], "softmax": [[202, "softmax"]], "ivy.Array.softmax": [[203, "ivy-array-softmax"]], "ivy.Container.softmax": [[204, "ivy-container-softmax"]], "ivy.softmax": [[205, "ivy-softmax"]], "ivy.Container.static_softmax": [[206, "ivy-container-static-softmax"]], "softplus": [[207, "softplus"]], "ivy.Array.softplus": [[208, "ivy-array-softplus"]], "ivy.Container.softplus": [[209, "ivy-container-softplus"]], "ivy.softplus": [[210, "ivy-softplus"]], "ivy.Container.static_softplus": [[211, "ivy-container-static-softplus"]], "Constants": [[213, "module-ivy.functional.ivy.constants"], [854, "module-ivy.functional.ivy.experimental.constants"]], "Control flow ops": [[214, "module-ivy.functional.ivy.control_flow_ops"]], "IfElse": [[215, "ifelse"]], "WhileLoop": [[216, "whileloop"]], "if_else": [[217, "if-else"]], "while_loop": [[218, "while-loop"]], "Note": [[219, null], [243, null], [246, null]], "NestedSequence": [[220, "nestedsequence"]], "arange": [[221, "arange"]], "ivy.arange": [[222, "ivy-arange"]], "ivy.Container.static_arange": [[223, "ivy-container-static-arange"]], "asarray": [[224, "asarray"]], "ivy.Array.asarray": [[225, "ivy-array-asarray"]], "ivy.asarray": [[226, "ivy-asarray"]], "ivy.Container.static_asarray": [[227, "ivy-container-static-asarray"]], "asarray_handle_nestable": [[228, "asarray-handle-nestable"]], "asarray_infer_device": [[229, "asarray-infer-device"]], "asarray_to_native_arrays_and_back": [[230, "asarray-to-native-arrays-and-back"]], "copy_array": [[231, "copy-array"]], "ivy.Array.copy_array": [[232, "ivy-array-copy-array"]], "ivy.copy_array": [[233, "ivy-copy-array"]], "empty": [[234, "empty"]], "empty_like": [[235, "empty-like"]], "ivy.Array.empty_like": [[236, "ivy-array-empty-like"]], "ivy.Container.empty_like": [[237, "ivy-container-empty-like"]], "ivy.empty_like": [[238, "ivy-empty-like"]], "ivy.Container.static_empty_like": [[239, "ivy-container-static-empty-like"]], "eye": [[240, "eye"]], "ivy.eye": [[241, "ivy-eye"]], "ivy.Container.static_eye": [[242, "ivy-container-static-eye"]], "from_dlpack": [[243, "from-dlpack"]], "ivy.Array.from_dlpack": [[244, "ivy-array-from-dlpack"]], "ivy.Container.from_dlpack": [[245, "ivy-container-from-dlpack"]], "ivy.from_dlpack": [[246, "ivy-from-dlpack"]], "ivy.Container.static_from_dlpack": [[247, "ivy-container-static-from-dlpack"]], "full": [[248, "full"]], "full_like": [[249, "full-like"]], "ivy.Array.full_like": [[250, "ivy-array-full-like"]], "ivy.Container.full_like": [[251, "ivy-container-full-like"]], "ivy.full_like": [[252, "ivy-full-like"]], "ivy.Container.static_full_like": [[253, "ivy-container-static-full-like"]], "linspace": [[254, "linspace"]], "ivy.Array.linspace": [[255, "ivy-array-linspace"]], "ivy.Container.linspace": [[256, "ivy-container-linspace"]], "ivy.linspace": [[257, "ivy-linspace"]], "ivy.Container.static_linspace": [[258, "ivy-container-static-linspace"]], "logspace": [[259, "logspace"]], "ivy.Array.logspace": [[260, "ivy-array-logspace"]], "ivy.Container.logspace": [[261, "ivy-container-logspace"]], "ivy.logspace": [[262, "ivy-logspace"]], "ivy.Container.static_logspace": [[263, "ivy-container-static-logspace"]], "meshgrid": [[264, "meshgrid"]], "ivy.Array.meshgrid": [[265, "ivy-array-meshgrid"]], "ivy.Container.meshgrid": [[266, "ivy-container-meshgrid"]], "ivy.meshgrid": [[267, "ivy-meshgrid"]], "ivy.Container.static_meshgrid": [[268, "ivy-container-static-meshgrid"]], "native_array": [[269, "native-array"]], "ivy.Array.native_array": [[270, "ivy-array-native-array"]], "ivy.Container.native_array": [[271, "ivy-container-native-array"]], "ivy.native_array": [[272, "ivy-native-array"]], "ivy.Container.static_native_array": [[273, "ivy-container-static-native-array"]], "one_hot": [[274, "one-hot"]], "ivy.Array.one_hot": [[275, "ivy-array-one-hot"]], "ivy.Container.one_hot": [[276, "ivy-container-one-hot"]], "ivy.one_hot": [[277, "ivy-one-hot"]], "ivy.Container.static_one_hot": [[278, "ivy-container-static-one-hot"]], "ones": [[279, "ones"]], "ivy.ones": [[280, "ivy-ones"]], "ivy.Container.static_ones": [[281, "ivy-container-static-ones"]], "ones_like": [[282, "ones-like"]], "ivy.Array.ones_like": [[283, "ivy-array-ones-like"]], "ivy.Container.ones_like": [[284, "ivy-container-ones-like"]], "ivy.ones_like": [[285, "ivy-ones-like"]], "ivy.Container.static_ones_like": [[286, "ivy-container-static-ones-like"]], "tril": [[287, "tril"]], "ivy.Container.static_tril": [[288, "ivy-container-static-tril"]], "ivy.Array.tril": [[289, "ivy-array-tril"]], "ivy.Container.tril": [[290, "ivy-container-tril"]], "ivy.tril": [[291, "ivy-tril"]], "triu": [[292, "triu"]], "ivy.Container.static_triu": [[293, "ivy-container-static-triu"]], "ivy.Array.triu": [[294, "ivy-array-triu"]], "ivy.Container.triu": [[295, "ivy-container-triu"]], "ivy.triu": [[296, "ivy-triu"]], "zeros": [[297, "zeros"]], "ivy.Container.static_zeros": [[298, "ivy-container-static-zeros"]], "ivy.zeros": [[299, "ivy-zeros"]], "zeros_like": [[300, "zeros-like"]], "ivy.Container.static_zeros_like": [[301, "ivy-container-static-zeros-like"]], "ivy.Array.zeros_like": [[302, "ivy-array-zeros-like"]], "ivy.Container.zeros_like": [[303, "ivy-container-zeros-like"]], "ivy.zeros_like": [[304, "ivy-zeros-like"]], "DefaultComplexDtype": [[306, "defaultcomplexdtype"]], "DefaultDtype": [[307, "defaultdtype"]], "DefaultFloatDtype": [[308, "defaultfloatdtype"]], "DefaultIntDtype": [[309, "defaultintdtype"]], "DefaultUintDtype": [[310, "defaultuintdtype"]], "as_ivy_dtype": [[311, "as-ivy-dtype"]], "as_native_dtype": [[312, "as-native-dtype"]], "astype": [[313, "astype"]], "ivy.Array.astype": [[314, "ivy-array-astype"]], "ivy.Container.astype": [[315, "ivy-container-astype"]], "ivy.astype": [[316, "ivy-astype"]], "ivy.Container.static_astype": [[317, "ivy-container-static-astype"]], "broadcast_arrays": [[318, "broadcast-arrays"]], "ivy.Array.broadcast_arrays": [[319, "ivy-array-broadcast-arrays"]], "ivy.Container.broadcast_arrays": [[320, "ivy-container-broadcast-arrays"]], "ivy.broadcast_arrays": [[321, "ivy-broadcast-arrays"]], "ivy.Container.static_broadcast_arrays": [[322, "ivy-container-static-broadcast-arrays"]], "broadcast_to": [[323, "broadcast-to"]], "ivy.Array.broadcast_to": [[324, "ivy-array-broadcast-to"]], "ivy.Container.broadcast_to": [[325, "ivy-container-broadcast-to"]], "ivy.broadcast_to": [[326, "ivy-broadcast-to"]], "ivy.Container.static_broadcast_to": [[327, "ivy-container-static-broadcast-to"]], "can_cast": [[328, "can-cast"]], "ivy.Array.can_cast": [[329, "ivy-array-can-cast"]], "ivy.Container.can_cast": [[330, "ivy-container-can-cast"]], "ivy.can_cast": [[331, "ivy-can-cast"]], "ivy.Container.static_can_cast": [[332, "ivy-container-static-can-cast"]], "check_float": [[333, "check-float"]], "closest_valid_dtype": [[334, "closest-valid-dtype"]], "default_complex_dtype": [[335, "default-complex-dtype"]], "ivy.default_complex_dtype": [[336, "ivy-default-complex-dtype"]], "ivy.Container.static_default_complex_dtype": [[337, "ivy-container-static-default-complex-dtype"]], "default_dtype": [[338, "default-dtype"]], "default_float_dtype": [[339, "default-float-dtype"]], "ivy.default_float_dtype": [[340, "ivy-default-float-dtype"]], "ivy.Container.static_default_float_dtype": [[341, "ivy-container-static-default-float-dtype"]], "default_int_dtype": [[342, "default-int-dtype"]], "default_uint_dtype": [[343, "default-uint-dtype"]], "dtype": [[344, "dtype"]], "ivy.Container.dtype": [[345, "ivy-container-dtype"]], "ivy.dtype": [[346, "ivy-dtype"]], "ivy.Container.static_dtype": [[347, "ivy-container-static-dtype"]], "dtype_bits": [[348, "dtype-bits"]], "finfo": [[349, "finfo"]], "ivy.Array.finfo": [[350, "ivy-array-finfo"]], "ivy.Container.finfo": [[351, "ivy-container-finfo"]], "ivy.finfo": [[352, "ivy-finfo"]], "ivy.Container.static_finfo": [[353, "ivy-container-static-finfo"]], "function_supported_dtypes": [[354, "function-supported-dtypes"]], "ivy.function_supported_dtypes": [[355, "ivy-function-supported-dtypes"]], "ivy.Container.static_function_supported_dtypes": [[356, "ivy-container-static-function-supported-dtypes"]], "function_unsupported_dtypes": [[357, "function-unsupported-dtypes"]], "ivy.function_unsupported_dtypes": [[358, "ivy-function-unsupported-dtypes"]], "ivy.Container.static_function_unsupported_dtypes": [[359, "ivy-container-static-function-unsupported-dtypes"]], "iinfo": [[360, "iinfo"]], "ivy.Array.iinfo": [[361, "ivy-array-iinfo"]], "ivy.Container.iinfo": [[362, "ivy-container-iinfo"]], "ivy.iinfo": [[363, "ivy-iinfo"]], "ivy.Container.static_iinfo": [[364, "ivy-container-static-iinfo"]], "infer_default_dtype": [[365, "infer-default-dtype"]], "invalid_dtype": [[366, "invalid-dtype"]], "is_bool_dtype": [[367, "is-bool-dtype"]], "ivy.Array.is_bool_dtype": [[368, "ivy-array-is-bool-dtype"]], "ivy.Container.is_bool_dtype": [[369, "ivy-container-is-bool-dtype"]], "ivy.is_bool_dtype": [[370, "ivy-is-bool-dtype"]], "ivy.Container.static_is_bool_dtype": [[371, "ivy-container-static-is-bool-dtype"]], "is_complex_dtype": [[372, "is-complex-dtype"]], "ivy.Container.is_complex_dtype": [[373, "ivy-container-is-complex-dtype"]], "ivy.is_complex_dtype": [[374, "ivy-is-complex-dtype"]], "ivy.Container.static_is_complex_dtype": [[375, "ivy-container-static-is-complex-dtype"]], "is_float_dtype": [[376, "is-float-dtype"]], "ivy.Array.is_float_dtype": [[377, "ivy-array-is-float-dtype"]], "ivy.Container.is_float_dtype": [[378, "ivy-container-is-float-dtype"]], "ivy.is_float_dtype": [[379, "ivy-is-float-dtype"]], "ivy.Container.static_is_float_dtype": [[380, "ivy-container-static-is-float-dtype"]], "is_int_dtype": [[381, "is-int-dtype"]], "ivy.Array.is_int_dtype": [[382, "ivy-array-is-int-dtype"]], "ivy.Container.is_int_dtype": [[383, "ivy-container-is-int-dtype"]], "ivy.is_int_dtype": [[384, "ivy-is-int-dtype"]], "ivy.Container.static_is_int_dtype": [[385, "ivy-container-static-is-int-dtype"]], "is_uint_dtype": [[386, "is-uint-dtype"]], "ivy.Array.is_uint_dtype": [[387, "ivy-array-is-uint-dtype"]], "ivy.Container.is_uint_dtype": [[388, "ivy-container-is-uint-dtype"]], "ivy.is_uint_dtype": [[389, "ivy-is-uint-dtype"]], "ivy.Container.static_is_uint_dtype": [[390, "ivy-container-static-is-uint-dtype"]], "promote_types": [[391, "promote-types"]], "promote_types_of_inputs": [[392, "promote-types-of-inputs"]], "result_type": [[393, "result-type"]], "ivy.Array.result_type": [[394, "ivy-array-result-type"]], "ivy.Container.result_type": [[395, "ivy-container-result-type"]], "ivy.result_type": [[396, "ivy-result-type"]], "ivy.Container.static_result_type": [[397, "ivy-container-static-result-type"]], "set_default_complex_dtype": [[398, "set-default-complex-dtype"]], "set_default_dtype": [[399, "set-default-dtype"]], "set_default_float_dtype": [[400, "set-default-float-dtype"]], "set_default_int_dtype": [[401, "set-default-int-dtype"]], "set_default_uint_dtype": [[402, "set-default-uint-dtype"]], "type_promote_arrays": [[403, "type-promote-arrays"]], "unset_default_complex_dtype": [[404, "unset-default-complex-dtype"]], "unset_default_dtype": [[405, "unset-default-dtype"]], "unset_default_float_dtype": [[406, "unset-default-float-dtype"]], "unset_default_int_dtype": [[407, "unset-default-int-dtype"]], "unset_default_uint_dtype": [[408, "unset-default-uint-dtype"]], "valid_dtype": [[409, "valid-dtype"]], "DefaultDevice": [[411, "defaultdevice"]], "Profiler": [[412, "profiler"]], "as_ivy_dev": [[413, "as-ivy-dev"]], "as_native_dev": [[414, "as-native-dev"]], "clear_mem_on_dev": [[415, "clear-mem-on-dev"]], "default_device": [[416, "default-device"]], "dev": [[417, "dev"]], "ivy.Array.dev": [[418, "ivy-array-dev"]], "ivy.Container.dev": [[419, "ivy-container-dev"]], "ivy.dev": [[420, "ivy-dev"]], "ivy.Container.static_dev": [[421, "ivy-container-static-dev"]], "dev_util": [[422, "dev-util"]], "function_supported_devices": [[423, "function-supported-devices"]], "function_unsupported_devices": [[424, "function-unsupported-devices"]], "get_all_ivy_arrays_on_dev": [[425, "get-all-ivy-arrays-on-dev"]], "gpu_is_available": [[426, "gpu-is-available"]], "num_cpu_cores": [[427, "num-cpu-cores"]], "num_gpus": [[428, "num-gpus"]], "num_ivy_arrays_on_dev": [[429, "num-ivy-arrays-on-dev"]], "percent_used_mem_on_dev": [[430, "percent-used-mem-on-dev"]], "print_all_ivy_arrays_on_dev": [[431, "print-all-ivy-arrays-on-dev"]], "set_default_device": [[432, "set-default-device"]], "set_split_factor": [[433, "set-split-factor"]], "split_factor": [[434, "split-factor"]], "split_func_call": [[435, "split-func-call"]], "to_device": [[436, "to-device"]], "ivy.Container.static_to_device": [[437, "ivy-container-static-to-device"]], "ivy.Array.to_device": [[438, "ivy-array-to-device"]], "ivy.Container.to_device": [[439, "ivy-container-to-device"]], "ivy.to_device": [[440, "ivy-to-device"]], "total_mem_on_dev": [[441, "total-mem-on-dev"]], "tpu_is_available": [[442, "tpu-is-available"]], "unset_default_device": [[443, "unset-default-device"]], "used_mem_on_dev": [[444, "used-mem-on-dev"]], "abs": [[446, "abs"]], "ivy.Array.abs": [[447, "ivy-array-abs"]], "ivy.Container.abs": [[448, "ivy-container-abs"]], "ivy.abs": [[449, "ivy-abs"]], "ivy.Container.static_abs": [[450, "ivy-container-static-abs"]], "acos": [[451, "acos"]], "ivy.Array.acos": [[452, "ivy-array-acos"]], "ivy.Container.acos": [[453, "ivy-container-acos"]], "ivy.acos": [[454, "ivy-acos"]], "ivy.Container.static_acos": [[455, "ivy-container-static-acos"]], "acosh": [[456, "acosh"]], "ivy.Array.acosh": [[457, "ivy-array-acosh"]], "ivy.Container.acosh": [[458, "ivy-container-acosh"]], "ivy.acosh": [[459, "ivy-acosh"]], "ivy.Container.static_acosh": [[460, "ivy-container-static-acosh"]], "add": [[461, "add"]], "ivy.Array.add": [[462, "ivy-array-add"]], "ivy.Container.add": [[463, "ivy-container-add"]], "ivy.Container.static_add": [[465, "ivy-container-static-add"]], "asin": [[466, "asin"]], "ivy.Array.asin": [[467, "ivy-array-asin"]], "ivy.Container.asin": [[468, "ivy-container-asin"]], "ivy.asin": [[469, "ivy-asin"]], "ivy.Container.static_asin": [[470, "ivy-container-static-asin"]], "asinh": [[471, "asinh"]], "ivy.Array.asinh": [[472, "ivy-array-asinh"]], "ivy.Container.asinh": [[473, "ivy-container-asinh"]], "ivy.asinh": [[474, "ivy-asinh"]], "ivy.Container.static_asinh": [[475, "ivy-container-static-asinh"]], "atan": [[476, "atan"]], "ivy.Array.atan": [[477, "ivy-array-atan"]], "ivy.Container.atan": [[478, "ivy-container-atan"]], "ivy.atan": [[479, "ivy-atan"]], "ivy.Container.static_atan": [[480, "ivy-container-static-atan"]], "atan2": [[481, "atan2"]], "ivy.Array.atan2": [[482, "ivy-array-atan2"]], "ivy.Container.atan2": [[483, "ivy-container-atan2"]], "ivy.atan2": [[484, "ivy-atan2"]], "ivy.Container.static_atan2": [[485, "ivy-container-static-atan2"]], "atanh": [[486, "atanh"]], "ivy.Array.atanh": [[487, "ivy-array-atanh"]], "ivy.Container.atanh": [[488, "ivy-container-atanh"]], "ivy.atanh": [[489, "ivy-atanh"]], "ivy.Container.static_atanh": [[490, "ivy-container-static-atanh"]], "bitwise_and": [[491, "bitwise-and"]], "ivy.Array.bitwise_and": [[492, "ivy-array-bitwise-and"]], "ivy.Container.bitwise_and": [[493, "ivy-container-bitwise-and"]], "ivy.bitwise_and": [[494, "ivy-bitwise-and"]], "ivy.Container.static_bitwise_and": [[495, "ivy-container-static-bitwise-and"]], "bitwise_invert": [[496, "bitwise-invert"]], "ivy.Array.bitwise_invert": [[497, "ivy-array-bitwise-invert"]], "ivy.Container.bitwise_invert": [[498, "ivy-container-bitwise-invert"]], "ivy.bitwise_invert": [[499, "ivy-bitwise-invert"]], "ivy.Container.static_bitwise_invert": [[500, "ivy-container-static-bitwise-invert"]], "bitwise_left_shift": [[501, "bitwise-left-shift"]], "ivy.Array.bitwise_left_shift": [[502, "ivy-array-bitwise-left-shift"]], "ivy.Container.bitwise_left_shift": [[503, "ivy-container-bitwise-left-shift"]], "ivy.bitwise_left_shift": [[504, "ivy-bitwise-left-shift"]], "ivy.Container.static_bitwise_left_shift": [[505, "ivy-container-static-bitwise-left-shift"]], "bitwise_or": [[506, "bitwise-or"]], "ivy.Array.bitwise_or": [[507, "ivy-array-bitwise-or"]], "ivy.Container.bitwise_or": [[508, "ivy-container-bitwise-or"]], "ivy.bitwise_or": [[509, "ivy-bitwise-or"]], "ivy.Container.static_bitwise_or": [[510, "ivy-container-static-bitwise-or"]], "bitwise_right_shift": [[511, "bitwise-right-shift"]], "ivy.Array.bitwise_right_shift": [[512, "ivy-array-bitwise-right-shift"]], "ivy.Container.bitwise_right_shift": [[513, "ivy-container-bitwise-right-shift"]], "ivy.bitwise_right_shift": [[514, "ivy-bitwise-right-shift"]], "ivy.Container.static_bitwise_right_shift": [[515, "ivy-container-static-bitwise-right-shift"]], "bitwise_xor": [[516, "bitwise-xor"]], "ivy.Array.bitwise_xor": [[517, "ivy-array-bitwise-xor"]], "ivy.Container.bitwise_xor": [[518, "ivy-container-bitwise-xor"]], "ivy.bitwise_xor": [[519, "ivy-bitwise-xor"]], "ivy.Container.static_bitwise_xor": [[520, "ivy-container-static-bitwise-xor"]], "ceil": [[521, "ceil"]], "ivy.Array.ceil": [[522, "ivy-array-ceil"]], "ivy.Container.ceil": [[523, "ivy-container-ceil"]], "ivy.ceil": [[524, "ivy-ceil"]], "ivy.Container.static_ceil": [[525, "ivy-container-static-ceil"]], "cos": [[526, "cos"]], "ivy.Array.cos": [[527, "ivy-array-cos"]], "ivy.Container.cos": [[528, "ivy-container-cos"]], "ivy.cos": [[529, "ivy-cos"]], "ivy.Container.static_cos": [[530, "ivy-container-static-cos"]], "cosh": [[531, "cosh"]], "ivy.Array.cosh": [[532, "ivy-array-cosh"]], "ivy.Container.cosh": [[533, "ivy-container-cosh"]], "ivy.cosh": [[534, "ivy-cosh"]], "ivy.Container.static_cosh": [[535, "ivy-container-static-cosh"]], "deg2rad": [[536, "deg2rad"]], "ivy.Array.deg2rad": [[537, "ivy-array-deg2rad"]], "ivy.Container.deg2rad": [[538, "ivy-container-deg2rad"]], "ivy.deg2rad": [[539, "ivy-deg2rad"]], "ivy.Container.static_deg2rad": [[540, "ivy-container-static-deg2rad"]], "divide": [[541, "divide"]], "ivy.Array.divide": [[542, "ivy-array-divide"]], "ivy.Container.divide": [[543, "ivy-container-divide"]], "ivy.divide": [[544, "ivy-divide"]], "ivy.Container.static_divide": [[545, "ivy-container-static-divide"]], "equal": [[546, "equal"]], "ivy.Array.equal": [[547, "ivy-array-equal"]], "ivy.Container.equal": [[548, "ivy-container-equal"]], "ivy.equal": [[549, "ivy-equal"]], "ivy.Container.static_equal": [[550, "ivy-container-static-equal"]], "erf": [[551, "erf"]], "ivy.Array.erf": [[552, "ivy-array-erf"]], "ivy.Container.erf": [[553, "ivy-container-erf"]], "ivy.erf": [[554, "ivy-erf"]], "ivy.Container.static_erf": [[555, "ivy-container-static-erf"]], "exp": [[556, "exp"]], "ivy.Array.exp": [[557, "ivy-array-exp"]], "ivy.Container.exp": [[558, "ivy-container-exp"]], "ivy.exp": [[559, "ivy-exp"]], "ivy.Container.static_exp": [[560, "ivy-container-static-exp"]], "expm1": [[561, "expm1"]], "ivy.Array.expm1": [[562, "ivy-array-expm1"]], "ivy.Container.expm1": [[563, "ivy-container-expm1"]], "ivy.expm1": [[564, "ivy-expm1"]], "ivy.Container.static_expm1": [[565, "ivy-container-static-expm1"]], "floor": [[566, "floor"]], "ivy.Array.floor": [[567, "ivy-array-floor"]], "ivy.Container.floor": [[568, "ivy-container-floor"]], "ivy.floor": [[569, "ivy-floor"]], "ivy.Container.static_floor": [[570, "ivy-container-static-floor"]], "floor_divide": [[571, "floor-divide"]], "ivy.Array.floor_divide": [[572, "ivy-array-floor-divide"]], "ivy.Container.floor_divide": [[573, "ivy-container-floor-divide"]], "ivy.floor_divide": [[574, "ivy-floor-divide"]], "ivy.Container.static_floor_divide": [[575, "ivy-container-static-floor-divide"]], "greater": [[576, "greater"]], "ivy.Array.greater": [[577, "ivy-array-greater"]], "ivy.Container.greater": [[578, "ivy-container-greater"]], "ivy.greater": [[579, "ivy-greater"]], "ivy.Container.static_greater": [[580, "ivy-container-static-greater"]], "greater_equal": [[581, "greater-equal"]], "ivy.Array.greater_equal": [[582, "ivy-array-greater-equal"]], "ivy.Container.greater_equal": [[583, "ivy-container-greater-equal"]], "ivy.greater_equal": [[584, "ivy-greater-equal"]], "ivy.Container.static_greater_equal": [[585, "ivy-container-static-greater-equal"]], "isfinite": [[586, "isfinite"]], "ivy.Array.isfinite": [[587, "ivy-array-isfinite"]], "ivy.Container.isfinite": [[588, "ivy-container-isfinite"]], "ivy.isfinite": [[589, "ivy-isfinite"]], "ivy.Container.static_isfinite": [[590, "ivy-container-static-isfinite"]], "isinf": [[591, "isinf"]], "ivy.Array.isinf": [[592, "ivy-array-isinf"]], "ivy.Container.isinf": [[593, "ivy-container-isinf"]], "ivy.isinf": [[594, "ivy-isinf"]], "ivy.Container.static_isinf": [[595, "ivy-container-static-isinf"]], "isnan": [[596, "isnan"]], "ivy.Array.isnan": [[597, "ivy-array-isnan"]], "ivy.Container.isnan": [[598, "ivy-container-isnan"]], "ivy.isnan": [[599, "ivy-isnan"]], "ivy.Container.static_isnan": [[600, "ivy-container-static-isnan"]], "isreal": [[601, "isreal"]], "ivy.Array.isreal": [[602, "ivy-array-isreal"]], "ivy.Container.isreal": [[603, "ivy-container-isreal"]], "ivy.isreal": [[604, "ivy-isreal"]], "ivy.Container.static_isreal": [[605, "ivy-container-static-isreal"]], "less": [[606, "less"]], "ivy.Array.less": [[607, "ivy-array-less"]], "ivy.Container.less": [[608, "ivy-container-less"]], "ivy.less": [[609, "ivy-less"]], "ivy.Container.static_less": [[610, "ivy-container-static-less"]], "less_equal": [[611, "less-equal"]], "ivy.Array.less_equal": [[612, "ivy-array-less-equal"]], "ivy.Container.less_equal": [[613, "ivy-container-less-equal"]], "ivy.less_equal": [[614, "ivy-less-equal"]], "ivy.Container.static_less_equal": [[615, "ivy-container-static-less-equal"]], "log": [[616, "log"]], "ivy.Array.log": [[617, "ivy-array-log"]], "ivy.Container.log": [[618, "ivy-container-log"]], "ivy.log": [[619, "ivy-log"]], "ivy.Container.static_log": [[620, "ivy-container-static-log"]], "log10": [[621, "log10"]], "ivy.Array.log10": [[622, "ivy-array-log10"]], "ivy.Container.log10": [[623, "ivy-container-log10"]], "ivy.log10": [[624, "ivy-log10"]], "ivy.Container.static_log10": [[625, "ivy-container-static-log10"]], "log1p": [[626, "log1p"]], "ivy.Array.log1p": [[627, "ivy-array-log1p"]], "ivy.Container.log1p": [[628, "ivy-container-log1p"]], "ivy.log1p": [[629, "ivy-log1p"]], "ivy.Container.static_log1p": [[630, "ivy-container-static-log1p"]], "log2": [[631, "log2"]], "ivy.Array.log2": [[632, "ivy-array-log2"]], "ivy.Container.log2": [[633, "ivy-container-log2"]], "ivy.log2": [[634, "ivy-log2"]], "ivy.Container.static_log2": [[635, "ivy-container-static-log2"]], "logaddexp": [[636, "logaddexp"]], "ivy.Array.logaddexp": [[637, "ivy-array-logaddexp"]], "ivy.Container.logaddexp": [[638, "ivy-container-logaddexp"]], "ivy.logaddexp": [[639, "ivy-logaddexp"]], "ivy.Container.static_logaddexp": [[640, "ivy-container-static-logaddexp"]], "logical_and": [[641, "logical-and"]], "ivy.Array.logical_and": [[642, "ivy-array-logical-and"]], "ivy.Container.logical_and": [[643, "ivy-container-logical-and"]], "ivy.logical_and": [[644, "ivy-logical-and"]], "ivy.Container.static_logical_and": [[645, "ivy-container-static-logical-and"]], "logical_not": [[646, "logical-not"]], "ivy.Array.logical_not": [[647, "ivy-array-logical-not"]], "ivy.Container.logical_not": [[648, "ivy-container-logical-not"]], "ivy.logical_not": [[649, "ivy-logical-not"]], "ivy.Container.static_logical_not": [[650, "ivy-container-static-logical-not"]], "logical_or": [[651, "logical-or"]], "ivy.Array.logical_or": [[652, "ivy-array-logical-or"]], "ivy.Container.logical_or": [[653, "ivy-container-logical-or"]], "ivy.logical_or": [[654, "ivy-logical-or"]], "ivy.Container.static_logical_or": [[655, "ivy-container-static-logical-or"]], "logical_xor": [[656, "logical-xor"]], "ivy.Array.logical_xor": [[657, "ivy-array-logical-xor"]], "ivy.Container.logical_xor": [[658, "ivy-container-logical-xor"]], "ivy.logical_xor": [[659, "ivy-logical-xor"]], "ivy.Container.static_logical_xor": [[660, "ivy-container-static-logical-xor"]], "maximum": [[661, "maximum"]], "ivy.Array.maximum": [[662, "ivy-array-maximum"]], "ivy.Container.maximum": [[663, "ivy-container-maximum"]], "ivy.maximum": [[664, "ivy-maximum"]], "ivy.Container.static_maximum": [[665, "ivy-container-static-maximum"]], "minimum": [[666, "minimum"]], "ivy.Array.minimum": [[667, "ivy-array-minimum"]], "ivy.Container.minimum": [[668, "ivy-container-minimum"]], "ivy.minimum": [[669, "ivy-minimum"]], "ivy.Container.static_minimum": [[670, "ivy-container-static-minimum"]], "multiply": [[671, "multiply"]], "ivy.Array.multiply": [[672, "ivy-array-multiply"]], "ivy.Container.multiply": [[673, "ivy-container-multiply"]], "ivy.multiply": [[674, "ivy-multiply"]], "ivy.Container.static_multiply": [[675, "ivy-container-static-multiply"]], "negative": [[676, "negative"]], "ivy.Array.negative": [[677, "ivy-array-negative"]], "ivy.Container.negative": [[678, "ivy-container-negative"]], "ivy.negative": [[679, "ivy-negative"]], "ivy.Container.static_negative": [[680, "ivy-container-static-negative"]], "not_equal": [[681, "not-equal"]], "ivy.Array.not_equal": [[682, "ivy-array-not-equal"]], "ivy.Container.not_equal": [[683, "ivy-container-not-equal"]], "ivy.not_equal": [[684, "ivy-not-equal"]], "ivy.Container.static_not_equal": [[685, "ivy-container-static-not-equal"]], "positive": [[686, "positive"]], "ivy.Array.positive": [[687, "ivy-array-positive"]], "ivy.Container.positive": [[688, "ivy-container-positive"]], "ivy.positive": [[689, "ivy-positive"]], "ivy.Container.static_positive": [[690, "ivy-container-static-positive"]], "pow": [[691, "pow"]], "ivy.Array.pow": [[692, "ivy-array-pow"]], "ivy.Container.pow": [[693, "ivy-container-pow"]], "ivy.pow": [[694, "ivy-pow"]], "ivy.Container.static_pow": [[695, "ivy-container-static-pow"]], "rad2deg": [[696, "rad2deg"]], "ivy.Array.rad2deg": [[697, "ivy-array-rad2deg"]], "ivy.Container.rad2deg": [[698, "ivy-container-rad2deg"]], "ivy.rad2deg": [[699, "ivy-rad2deg"]], "ivy.Container.static_rad2deg": [[700, "ivy-container-static-rad2deg"]], "reciprocal": [[701, "reciprocal"]], "ivy.Array.reciprocal": [[702, "ivy-array-reciprocal"]], "ivy.Container.reciprocal": [[703, "ivy-container-reciprocal"]], "ivy.reciprocal": [[704, "ivy-reciprocal"]], "ivy.Container.static_reciprocal": [[705, "ivy-container-static-reciprocal"]], "remainder": [[706, "remainder"]], "ivy.Array.remainder": [[707, "ivy-array-remainder"]], "ivy.Container.remainder": [[708, "ivy-container-remainder"]], "ivy.remainder": [[709, "ivy-remainder"]], "ivy.Container.static_remainder": [[710, "ivy-container-static-remainder"]], "round": [[711, "round"]], "ivy.Array.round": [[712, "ivy-array-round"]], "ivy.Container.round": [[713, "ivy-container-round"]], "ivy.round": [[714, "ivy-round"]], "ivy.Container.static_round": [[715, "ivy-container-static-round"]], "sign": [[716, "sign"]], "ivy.Array.sign": [[717, "ivy-array-sign"]], "ivy.Container.sign": [[718, "ivy-container-sign"]], "ivy.sign": [[719, "ivy-sign"]], "ivy.Container.static_sign": [[720, "ivy-container-static-sign"]], "sin": [[721, "sin"]], "ivy.Array.sin": [[722, "ivy-array-sin"]], "ivy.Container.sin": [[723, "ivy-container-sin"]], "ivy.sin": [[724, "ivy-sin"]], "ivy.Container.static_sin": [[725, "ivy-container-static-sin"]], "sinh": [[726, "sinh"]], "ivy.Array.sinh": [[727, "ivy-array-sinh"]], "ivy.Container.sinh": [[728, "ivy-container-sinh"]], "ivy.sinh": [[729, "ivy-sinh"]], "ivy.Container.static_sinh": [[730, "ivy-container-static-sinh"]], "sqrt": [[731, "sqrt"]], "ivy.Array.sqrt": [[732, "ivy-array-sqrt"]], "ivy.Container.sqrt": [[733, "ivy-container-sqrt"]], "ivy.sqrt": [[734, "ivy-sqrt"]], "ivy.Container.static_sqrt": [[735, "ivy-container-static-sqrt"]], "square": [[736, "square"]], "ivy.Array.square": [[737, "ivy-array-square"]], "ivy.Container.square": [[738, "ivy-container-square"]], "ivy.square": [[739, "ivy-square"]], "ivy.Container.static_square": [[740, "ivy-container-static-square"]], "subtract": [[741, "subtract"]], "ivy.Container.static_subtract": [[742, "ivy-container-static-subtract"]], "ivy.Array.subtract": [[743, "ivy-array-subtract"]], "ivy.Container.subtract": [[744, "ivy-container-subtract"]], "ivy.subtract": [[745, "ivy-subtract"]], "tan": [[746, "tan"]], "ivy.Container.static_tan": [[747, "ivy-container-static-tan"]], "ivy.Array.tan": [[748, "ivy-array-tan"]], "ivy.Container.tan": [[749, "ivy-container-tan"]], "tanh": [[751, "tanh"]], "ivy.Container.static_tanh": [[752, "ivy-container-static-tanh"]], "ivy.Array.tanh": [[753, "ivy-array-tanh"]], "ivy.Container.tanh": [[754, "ivy-container-tanh"]], "ivy.tanh": [[755, "ivy-tanh"]], "trunc": [[756, "trunc"]], "ivy.Container.static_trunc": [[757, "ivy-container-static-trunc"]], "ivy.Array.trunc": [[758, "ivy-array-trunc"]], "ivy.Container.trunc": [[759, "ivy-container-trunc"]], "ivy.trunc": [[760, "ivy-trunc"]], "trunc_divide": [[761, "trunc-divide"]], "ivy.Container.static_trunc_divide": [[762, "ivy-container-static-trunc-divide"]], "ivy.Array.trunc_divide": [[763, "ivy-array-trunc-divide"]], "ivy.Container.trunc_divide": [[764, "ivy-container-trunc-divide"]], "ivy.trunc_divide": [[765, "ivy-trunc-divide"]], "NativeSparseArray": [[767, "nativesparsearray"], [1343, "nativesparsearray"]], "SparseArray": [[768, "sparsearray"], [1344, "sparsearray"]], "logit": [[770, "logit"], [1178, "logit"]], "prelu": [[771, "prelu"], [1296, "prelu"]], "relu6": [[772, "relu6"], [1317, "relu6"]], "thresholded_relu": [[773, "thresholded-relu"], [1362, "thresholded-relu"]], "adjoint": [[774, "adjoint"], [1165, "adjoint"]], "ivy.Array.adjoint": [[775, "ivy-array-adjoint"]], "ivy.Container.adjoint": [[776, "ivy-container-adjoint"]], "ivy.adjoint": [[777, "ivy-adjoint"]], "ivy.Container.static_adjoint": [[778, "ivy-container-static-adjoint"]], "allclose": [[779, "allclose"], [934, "allclose"]], "ivy.Array.allclose": [[780, "ivy-array-allclose"]], "ivy.Container.allclose": [[781, "ivy-container-allclose"]], "ivy.allclose": [[782, "ivy-allclose"]], "ivy.Container.static_allclose": [[783, "ivy-container-static-allclose"]], "angle": [[784, "angle"], [935, "angle"]], "ivy.Array.angle": [[785, "ivy-array-angle"]], "ivy.Container.angle": [[786, "ivy-container-angle"]], "ivy.angle": [[787, "ivy-angle"]], "ivy.Container.static_angle": [[788, "ivy-container-static-angle"]], "atleast_1d": [[789, "atleast-1d"], [1191, "atleast-1d"]], "ivy.Array.atleast_1d": [[790, "ivy-array-atleast-1d"]], "ivy.Container.atleast_1d": [[791, "ivy-container-atleast-1d"]], "ivy.atleast_1d": [[792, "ivy-atleast-1d"]], "ivy.Container.static_atleast_1d": [[793, "ivy-container-static-atleast-1d"]], "atleast_2d": [[794, "atleast-2d"], [1192, "atleast-2d"]], "ivy.Array.atleast_2d": [[795, "ivy-array-atleast-2d"]], "ivy.Container.atleast_2d": [[796, "ivy-container-atleast-2d"]], "ivy.atleast_2d": [[797, "ivy-atleast-2d"]], "ivy.Container.static_atleast_2d": [[798, "ivy-container-static-atleast-2d"]], "atleast_3d": [[799, "atleast-3d"], [1193, "atleast-3d"]], "ivy.Array.atleast_3d": [[800, "ivy-array-atleast-3d"]], "ivy.Container.atleast_3d": [[801, "ivy-container-atleast-3d"]], "ivy.atleast_3d": [[802, "ivy-atleast-3d"]], "ivy.Container.static_atleast_3d": [[803, "ivy-container-static-atleast-3d"]], "avg_pool1d": [[804, "avg-pool1d"], [1132, "avg-pool1d"]], "ivy.Array.avg_pool1d": [[805, "ivy-array-avg-pool1d"]], "ivy.Container.avg_pool1d": [[806, "ivy-container-avg-pool1d"]], "ivy.avg_pool1d": [[807, "ivy-avg-pool1d"]], "ivy.Container.static_avg_pool1d": [[808, "ivy-container-static-avg-pool1d"]], "avg_pool2d": [[809, "avg-pool2d"], [1133, "avg-pool2d"]], "ivy.Array.avg_pool2d": [[810, "ivy-array-avg-pool2d"]], "ivy.Container.avg_pool2d": [[811, "ivy-container-avg-pool2d"]], "ivy.avg_pool2d": [[812, "ivy-avg-pool2d"]], "ivy.Container.static_avg_pool2d": [[813, "ivy-container-static-avg-pool2d"]], "avg_pool3d": [[814, "avg-pool3d"], [1134, "avg-pool3d"]], "ivy.Array.avg_pool3d": [[815, "ivy-array-avg-pool3d"]], "ivy.Container.avg_pool3d": [[816, "ivy-container-avg-pool3d"]], "ivy.avg_pool3d": [[817, "ivy-avg-pool3d"]], "ivy.Container.static_avg_pool3d": [[818, "ivy-container-static-avg-pool3d"]], "bernoulli": [[819, "bernoulli"], [1307, "bernoulli"]], "ivy.Array.bernoulli": [[820, "ivy-array-bernoulli"]], "ivy.Container.bernoulli": [[821, "ivy-container-bernoulli"]], "ivy.bernoulli": [[822, "ivy-bernoulli"]], "ivy.Container.static_bernoulli": [[823, "ivy-container-static-bernoulli"]], "beta": [[824, "beta"], [1308, "beta"]], "ivy.Array.beta": [[825, "ivy-array-beta"]], "ivy.Container.beta": [[826, "ivy-container-beta"]], "ivy.beta": [[827, "ivy-beta"]], "ivy.Container.static_beta": [[828, "ivy-container-static-beta"]], "binarizer": [[829, "binarizer"], [936, "binarizer"]], "ivy.Array.binarizer": [[830, "ivy-array-binarizer"]], "ivy.Container.binarizer": [[831, "ivy-container-binarizer"]], "ivy.binarizer": [[832, "ivy-binarizer"]], "ivy.Container.static_binarizer": [[833, "ivy-container-static-binarizer"]], "binary_cross_entropy_with_logits": [[834, "binary-cross-entropy-with-logits"], [1184, "binary-cross-entropy-with-logits"]], "ivy.Container.binary_cross_entropy_with_logits": [[835, "ivy-container-binary-cross-entropy-with-logits"]], "ivy.binary_cross_entropy_with_logits": [[836, "ivy-binary-cross-entropy-with-logits"]], "ivy.Container.static_binary_cross_entropy_with_logits": [[837, "ivy-container-static-binary-cross-entropy-with-logits"]], "bincount": [[838, "bincount"], [1350, "bincount"]], "ivy.Array.bincount": [[839, "ivy-array-bincount"]], "ivy.Container.bincount": [[840, "ivy-container-bincount"]], "ivy.bincount": [[841, "ivy-bincount"]], "ivy.Container.static_bincount": [[842, "ivy-container-static-bincount"]], "bind_custom_gradient_function": [[843, "bind-custom-gradient-function"], [1045, "bind-custom-gradient-function"]], "broadcast_shapes": [[844, "broadcast-shapes"], [1194, "broadcast-shapes"], [2237, "broadcast-shapes"]], "ivy.Container.broadcast_shapes": [[845, "ivy-container-broadcast-shapes"]], "ivy.broadcast_shapes": [[846, "ivy-broadcast-shapes"]], "ivy.Container.static_broadcast_shapes": [[847, "ivy-container-static-broadcast-shapes"]], "compute_weight_mat": [[848, "compute-weight-mat"], [1135, "compute-weight-mat"]], "conj": [[849, "conj"], [937, "conj"]], "ivy.Array.conj": [[850, "ivy-array-conj"]], "ivy.Container.conj": [[851, "ivy-container-conj"]], "ivy.conj": [[852, "ivy-conj"]], "ivy.Container.static_conj": [[853, "ivy-container-static-conj"]], "copysign": [[855, "copysign"], [938, "copysign"]], "ivy.Array.copysign": [[856, "ivy-array-copysign"]], "ivy.Container.copysign": [[857, "ivy-container-copysign"]], "ivy.copysign": [[858, "ivy-copysign"]], "ivy.Container.static_copysign": [[859, "ivy-container-static-copysign"]], "corrcoef": [[860, "corrcoef"], [1351, "corrcoef"]], "ivy.Array.corrcoef": [[861, "ivy-array-corrcoef"]], "ivy.Container.corrcoef": [[862, "ivy-container-corrcoef"]], "ivy.corrcoef": [[863, "ivy-corrcoef"]], "ivy.Container.static_corrcoef": [[864, "ivy-container-static-corrcoef"]], "count_nonzero": [[865, "count-nonzero"], [939, "count-nonzero"]], "ivy.Array.count_nonzero": [[866, "ivy-array-count-nonzero"]], "ivy.Container.count_nonzero": [[867, "ivy-container-count-nonzero"]], "ivy.count_nonzero": [[868, "ivy-count-nonzero"]], "ivy.Container.static_count_nonzero": [[869, "ivy-container-static-count-nonzero"]], "eye_like": [[871, "eye-like"], [979, "eye-like"]], "hamming_window": [[872, "hamming-window"], [1046, "hamming-window"]], "hann_window": [[873, "hann-window"], [1050, "hann-window"]], "kaiser_bessel_derived_window": [[874, "kaiser-bessel-derived-window"], [1113, "kaiser-bessel-derived-window"]], "kaiser_window": [[875, "kaiser-window"], [1117, "kaiser-window"]], "tril_indices": [[876, "tril-indices"], [1375, "tril-indices"]], "triu_indices": [[877, "triu-indices"], [1379, "triu-indices"]], "vorbis_window": [[878, "vorbis-window"], [1389, "vorbis-window"]], "is_native_dtype": [[880, "is-native-dtype"], [1101, "is-native-dtype"]], "dct": [[881, "dct"], [1136, "dct"]], "ivy.Array.dct": [[882, "ivy-array-dct"]], "ivy.Container.dct": [[883, "ivy-container-dct"]], "ivy.dct": [[884, "ivy-dct"]], "ivy.Container.static_dct": [[885, "ivy-container-static-dct"]], "dft": [[887, "dft"], [1137, "dft"]], "ivy.Container.dft": [[888, "ivy-container-dft"]], "ivy.dft": [[889, "ivy-dft"]], "ivy.Container.static_dft": [[890, "ivy-container-static-dft"]], "diagflat": [[891, "diagflat"], [1166, "diagflat"]], "ivy.Array.diagflat": [[892, "ivy-array-diagflat"]], "ivy.Container.diagflat": [[893, "ivy-container-diagflat"]], "ivy.diagflat": [[894, "ivy-diagflat"]], "ivy.Container.static_diagflat": [[895, "ivy-container-static-diagflat"]], "diff": [[896, "diff"], [940, "diff"]], "ivy.Array.diff": [[897, "ivy-array-diff"]], "ivy.Container.diff": [[898, "ivy-container-diff"]], "ivy.diff": [[899, "ivy-diff"]], "ivy.Container.static_diff": [[900, "ivy-container-static-diff"]], "dirichlet": [[901, "dirichlet"], [1309, "dirichlet"]], "ivy.Array.dirichlet": [[902, "ivy-array-dirichlet"]], "ivy.Container.dirichlet": [[903, "ivy-container-dirichlet"]], "ivy.dirichlet": [[904, "ivy-dirichlet"]], "ivy.Container.static_dirichlet": [[905, "ivy-container-static-dirichlet"]], "dropout1d": [[906, "dropout1d"], [1138, "dropout1d"]], "dropout3d": [[907, "dropout3d"], [1139, "dropout3d"]], "dsplit": [[908, "dsplit"], [1195, "dsplit"]], "ivy.Array.dsplit": [[909, "ivy-array-dsplit"]], "ivy.Container.dsplit": [[910, "ivy-container-dsplit"]], "ivy.dsplit": [[911, "ivy-dsplit"]], "ivy.Container.static_dsplit": [[912, "ivy-container-static-dsplit"]], "dstack": [[913, "dstack"], [1196, "dstack"]], "ivy.Array.dstack": [[914, "ivy-array-dstack"]], "ivy.Container.dstack": [[915, "ivy-container-dstack"]], "ivy.dstack": [[916, "ivy-dstack"]], "ivy.Container.static_dstack": [[917, "ivy-container-static-dstack"]], "eig": [[918, "eig"], [1167, "eig"], [1737, "eig"]], "ivy.Array.eig": [[919, "ivy-array-eig"]], "ivy.Container.eig": [[920, "ivy-container-eig"]], "ivy.eig": [[921, "ivy-eig"]], "ivy.Container.static_eig": [[922, "ivy-container-static-eig"]], "eigh_tridiagonal": [[923, "eigh-tridiagonal"], [1168, "eigh-tridiagonal"]], "ivy.Array.eigh_tridiagonal": [[924, "ivy-array-eigh-tridiagonal"]], "ivy.Container.eigh_tridiagonal": [[925, "ivy-container-eigh-tridiagonal"]], "ivy.eigh_tridiagonal": [[926, "ivy-eigh-tridiagonal"]], "ivy.Container.static_eigh_tridiagonal": [[927, "ivy-container-static-eigh-tridiagonal"]], "eigvals": [[928, "eigvals"], [1169, "eigvals"]], "ivy.Array.eigvals": [[929, "ivy-array-eigvals"]], "ivy.Container.eigvals": [[930, "ivy-container-eigvals"]], "ivy.eigvals": [[931, "ivy-eigvals"]], "ivy.Container.static_eigvals": [[932, "ivy-container-static-eigvals"]], "exp2": [[941, "exp2"], [969, "exp2"]], "fix": [[942, "fix"], [989, "fix"]], "float_power": [[943, "float-power"], [1009, "float-power"]], "fmax": [[944, "fmax"], [1014, "fmax"]], "fmin": [[945, "fmin"], [1019, "fmin"]], "fmod": [[946, "fmod"], [1024, "fmod"]], "gcd": [[947, "gcd"], [1032, "gcd"]], "gradient": [[948, "gradient"], [1039, "gradient"]], "hypot": [[949, "hypot"], [1069, "hypot"]], "imag": [[950, "imag"], [1084, "imag"]], "isclose": [[951, "isclose"], [1103, "isclose"]], "lcm": [[952, "lcm"], [1149, "lcm"]], "ldexp": [[953, "ldexp"], [1154, "ldexp"]], "logaddexp2": [[954, "logaddexp2"], [1173, "logaddexp2"]], "nan_to_num": [[955, "nan-to-num"], [1251, "nan-to-num"]], "nansum": [[956, "nansum"], [1266, "nansum"]], "nextafter": [[957, "nextafter"], [1276, "nextafter"]], "real": [[958, "real"], [1312, "real"]], "signbit": [[959, "signbit"], [1329, "signbit"]], "sinc": [[960, "sinc"], [1334, "sinc"]], "trapz": [[961, "trapz"], [1372, "trapz"]], "xlogy": [[962, "xlogy"], [1403, "xlogy"]], "zeta": [[963, "zeta"], [1408, "zeta"]], "embedding": [[964, "embedding"], [1140, "embedding"]], "ivy.Array.embedding": [[965, "ivy-array-embedding"]], "ivy.Container.embedding": [[966, "ivy-container-embedding"]], "ivy.embedding": [[967, "ivy-embedding"]], "ivy.Container.static_embedding": [[968, "ivy-container-static-embedding"]], "ivy.Array.exp2": [[970, "ivy-array-exp2"]], "ivy.Container.exp2": [[971, "ivy-container-exp2"]], "ivy.exp2": [[972, "ivy-exp2"]], "ivy.Container.static_exp2": [[973, "ivy-container-static-exp2"]], "expand": [[974, "expand"], [1197, "expand"]], "ivy.Array.expand": [[975, "ivy-array-expand"]], "ivy.Container.expand": [[976, "ivy-container-expand"]], "ivy.expand": [[977, "ivy-expand"]], "ivy.Container.static_expand": [[978, "ivy-container-static-expand"]], "ivy.Array.eye_like": [[980, "ivy-array-eye-like"]], "ivy.Container.eye_like": [[981, "ivy-container-eye-like"]], "ivy.eye_like": [[982, "ivy-eye-like"]], "ivy.Container.static_eye_like": [[983, "ivy-container-static-eye-like"]], "fft": [[984, "fft"], [1141, "fft"]], "ivy.Array.fft": [[985, "ivy-array-fft"]], "ivy.Container.fft": [[986, "ivy-container-fft"]], "ivy.fft": [[987, "ivy-fft"]], "ivy.Container.static_fft": [[988, "ivy-container-static-fft"]], "ivy.Array.fix": [[990, "ivy-array-fix"]], "ivy.Container.fix": [[991, "ivy-container-fix"]], "ivy.fix": [[992, "ivy-fix"]], "ivy.Container.static_fix": [[993, "ivy-container-static-fix"]], "flatten": [[994, "flatten"], [1198, "flatten"], [2205, "flatten"]], "ivy.Array.flatten": [[995, "ivy-array-flatten"]], "ivy.Container.flatten": [[996, "ivy-container-flatten"]], "ivy.flatten": [[997, "ivy-flatten"]], "ivy.Container.static_flatten": [[998, "ivy-container-static-flatten"]], "fliplr": [[999, "fliplr"], [1199, "fliplr"]], "ivy.Array.fliplr": [[1000, "ivy-array-fliplr"]], "ivy.Container.fliplr": [[1001, "ivy-container-fliplr"]], "ivy.fliplr": [[1002, "ivy-fliplr"]], "ivy.Container.static_fliplr": [[1003, "ivy-container-static-fliplr"]], "flipud": [[1004, "flipud"], [1200, "flipud"]], "ivy.Array.flipud": [[1005, "ivy-array-flipud"]], "ivy.Container.flipud": [[1006, "ivy-container-flipud"]], "ivy.flipud": [[1007, "ivy-flipud"]], "ivy.Container.static_flipud": [[1008, "ivy-container-static-flipud"]], "ivy.Array.float_power": [[1010, "ivy-array-float-power"]], "ivy.Container.float_power": [[1011, "ivy-container-float-power"]], "ivy.float_power": [[1012, "ivy-float-power"]], "ivy.Container.static_float_power": [[1013, "ivy-container-static-float-power"]], "ivy.Array.fmax": [[1015, "ivy-array-fmax"]], "ivy.Container.fmax": [[1016, "ivy-container-fmax"]], "ivy.fmax": [[1017, "ivy-fmax"]], "ivy.Container.static_fmax": [[1018, "ivy-container-static-fmax"]], "ivy.Array.fmin": [[1020, "ivy-array-fmin"]], "ivy.Container.fmin": [[1021, "ivy-container-fmin"]], "ivy.fmin": [[1022, "ivy-fmin"]], "ivy.Container.static_fmin": [[1023, "ivy-container-static-fmin"]], "ivy.Array.fmod": [[1025, "ivy-array-fmod"]], "ivy.Container.fmod": [[1026, "ivy-container-fmod"]], "ivy.fmod": [[1027, "ivy-fmod"]], "ivy.Container.static_fmod": [[1028, "ivy-container-static-fmod"]], "gamma": [[1029, "gamma"], [1310, "gamma"]], "ivy.Array.gamma": [[1030, "ivy-array-gamma"]], "ivy.gamma": [[1031, "ivy-gamma"]], "ivy.Array.gcd": [[1033, "ivy-array-gcd"]], "ivy.Container.gcd": [[1034, "ivy-container-gcd"]], "ivy.gcd": [[1035, "ivy-gcd"]], "ivy.Container.static_gcd": [[1036, "ivy-container-static-gcd"]], "isin": [[1038, "isin"], [1108, "isin"]], "ivy.Array.gradient": [[1040, "ivy-array-gradient"]], "ivy.Container.gradient": [[1041, "ivy-container-gradient"]], "ivy.gradient": [[1042, "ivy-gradient"]], "ivy.Container.static_gradient": [[1043, "ivy-container-static-gradient"]], "ivy.Container.hamming_window": [[1047, "ivy-container-hamming-window"]], "ivy.hamming_window": [[1048, "ivy-hamming-window"]], "ivy.Container.static_hamming_window": [[1049, "ivy-container-static-hamming-window"]], "ivy.Container.hann_window": [[1051, "ivy-container-hann-window"]], "ivy.hann_window": [[1052, "ivy-hann-window"]], "ivy.Container.static_hann_window": [[1053, "ivy-container-static-hann-window"]], "heaviside": [[1054, "heaviside"], [1201, "heaviside"]], "ivy.Array.heaviside": [[1055, "ivy-array-heaviside"]], "ivy.Container.heaviside": [[1056, "ivy-container-heaviside"]], "ivy.heaviside": [[1057, "ivy-heaviside"]], "ivy.Container.static_heaviside": [[1058, "ivy-container-static-heaviside"]], "hsplit": [[1059, "hsplit"], [1202, "hsplit"]], "ivy.Array.hsplit": [[1060, "ivy-array-hsplit"]], "ivy.Container.hsplit": [[1061, "ivy-container-hsplit"]], "ivy.hsplit": [[1062, "ivy-hsplit"]], "ivy.Container.static_hsplit": [[1063, "ivy-container-static-hsplit"]], "hstack": [[1064, "hstack"], [1203, "hstack"]], "ivy.Array.hstack": [[1065, "ivy-array-hstack"]], "ivy.Container.hstack": [[1066, "ivy-container-hstack"]], "ivy.hstack": [[1067, "ivy-hstack"]], "ivy.Container.static_hstack": [[1068, "ivy-container-static-hstack"]], "ivy.Array.hypot": [[1070, "ivy-array-hypot"]], "ivy.Container.hypot": [[1071, "ivy-container-hypot"]], "ivy.hypot": [[1072, "ivy-hypot"]], "ivy.Container.static_hypot": [[1073, "ivy-container-static-hypot"]], "i0": [[1074, "i0"], [1204, "i0"]], "ivy.Array.i0": [[1075, "ivy-array-i0"]], "ivy.Container.i0": [[1076, "ivy-container-i0"]], "ivy.i0": [[1077, "ivy-i0"]], "ivy.Container.static_i0": [[1078, "ivy-container-static-i0"]], "ifft": [[1079, "ifft"], [1142, "ifft"]], "ivy.Array.ifft": [[1080, "ivy-array-ifft"]], "ivy.Container.ifft": [[1081, "ivy-container-ifft"]], "ivy.ifft": [[1082, "ivy-ifft"]], "ivy.Container.static_ifft": [[1083, "ivy-container-static-ifft"]], "ivy.Array.imag": [[1085, "ivy-array-imag"]], "ivy.Container.imag": [[1086, "ivy-container-imag"]], "ivy.imag": [[1087, "ivy-imag"]], "ivy.Container.static_imag": [[1088, "ivy-container-static-imag"]], "instance_norm": [[1089, "instance-norm"], [1282, "instance-norm"]], "ivy.Array.instance_norm": [[1090, "ivy-array-instance-norm"]], "ivy.Container.instance_norm": [[1091, "ivy-container-instance-norm"]], "ivy.instance_norm": [[1092, "ivy-instance-norm"]], "ivy.Container.static_instance_norm": [[1093, "ivy-container-static-instance-norm"]], "interp": [[1094, "interp"], [1143, "interp"]], "interpolate": [[1095, "interpolate"], [1144, "interpolate"]], "ivy.Array.interpolate": [[1096, "ivy-array-interpolate"]], "ivy.Container.interpolate": [[1097, "ivy-container-interpolate"]], "ivy.interpolate": [[1098, "ivy-interpolate"]], "ivy.Container.static_interpolate": [[1099, "ivy-container-static-interpolate"]], "is_ivy_sparse_array": [[1100, "is-ivy-sparse-array"], [1345, "is-ivy-sparse-array"]], "is_native_sparse_array": [[1102, "is-native-sparse-array"], [1346, "is-native-sparse-array"]], "ivy.Array.isclose": [[1104, "ivy-array-isclose"]], "ivy.Container.isclose": [[1105, "ivy-container-isclose"]], "ivy.isclose": [[1106, "ivy-isclose"]], "ivy.Container.static_isclose": [[1107, "ivy-container-static-isclose"]], "ivy.Array.isin": [[1109, "ivy-array-isin"]], "ivy.Container.isin": [[1110, "ivy-container-isin"]], "ivy.isin": [[1111, "ivy-isin"]], "ivy.Container.static_isin": [[1112, "ivy-container-static-isin"]], "ivy.Container.kaiser_bessel_derived_window": [[1114, "ivy-container-kaiser-bessel-derived-window"]], "ivy.kaiser_bessel_derived_window": [[1115, "ivy-kaiser-bessel-derived-window"]], "ivy.Container.static_kaiser_bessel_derived_window": [[1116, "ivy-container-static-kaiser-bessel-derived-window"]], "ivy.Container.kaiser_window": [[1118, "ivy-container-kaiser-window"]], "ivy.kaiser_window": [[1119, "ivy-kaiser-window"]], "ivy.Container.static_kaiser_window": [[1120, "ivy-container-static-kaiser-window"]], "kron": [[1121, "kron"], [1170, "kron"]], "ivy.Array.kron": [[1122, "ivy-array-kron"]], "ivy.Container.kron": [[1123, "ivy-container-kron"]], "ivy.kron": [[1124, "ivy-kron"]], "ivy.Container.static_kron": [[1125, "ivy-container-static-kron"]], "l2_normalize": [[1126, "l2-normalize"], [1283, "l2-normalize"]], "ivy.Array.l2_normalize": [[1127, "ivy-array-l2-normalize"]], "ivy.Container.l2_normalize": [[1128, "ivy-container-l2-normalize"]], "ivy.l2_normalize": [[1129, "ivy-l2-normalize"]], "ivy.Container.static_l2_normalize": [[1130, "ivy-container-static-l2-normalize"]], "max_pool1d": [[1145, "max-pool1d"], [1219, "max-pool1d"]], "max_pool2d": [[1146, "max-pool2d"], [1224, "max-pool2d"]], "max_pool3d": [[1147, "max-pool3d"], [1229, "max-pool3d"]], "padding_ceil_mode": [[1148, "padding-ceil-mode"], [1290, "padding-ceil-mode"]], "ivy.Array.lcm": [[1150, "ivy-array-lcm"]], "ivy.Container.lcm": [[1151, "ivy-container-lcm"]], "ivy.lcm": [[1152, "ivy-lcm"]], "ivy.Container.static_lcm": [[1153, "ivy-container-static-lcm"]], "ivy.Array.ldexp": [[1155, "ivy-array-ldexp"]], "ivy.Container.ldexp": [[1156, "ivy-container-ldexp"]], "ivy.ldexp": [[1157, "ivy-ldexp"]], "ivy.Container.static_ldexp": [[1158, "ivy-container-static-ldexp"]], "lexsort": [[1159, "lexsort"], [1340, "lexsort"]], "ivy.Array.lexsort": [[1160, "ivy-array-lexsort"]], "ivy.Container.lexsort": [[1161, "ivy-container-lexsort"]], "ivy.lexsort": [[1162, "ivy-lexsort"]], "ivy.Container.static_lexsort": [[1163, "ivy-container-static-lexsort"]], "matrix_exp": [[1171, "matrix-exp"], [1214, "matrix-exp"]], "multi_dot": [[1172, "multi-dot"], [1250, "multi-dot"]], "ivy.Array.logaddexp2": [[1174, "ivy-array-logaddexp2"]], "ivy.Container.logaddexp2": [[1175, "ivy-container-logaddexp2"]], "ivy.logaddexp2": [[1176, "ivy-logaddexp2"]], "ivy.Container.static_logaddexp2": [[1177, "ivy-container-static-logaddexp2"]], "ivy.Array.logit": [[1179, "ivy-array-logit"]], "ivy.Container.logit": [[1180, "ivy-container-logit"]], "ivy.logit": [[1181, "ivy-logit"]], "ivy.Container.static_logit": [[1182, "ivy-container-static-logit"]], "lp_normalize": [[1185, "lp-normalize"], [1284, "lp-normalize"]], "ivy.Array.lp_normalize": [[1186, "ivy-array-lp-normalize"]], "ivy.Container.lp_normalize": [[1187, "ivy-container-lp-normalize"]], "ivy.lp_normalize": [[1188, "ivy-lp-normalize"]], "ivy.Container.static_lp_normalize": [[1189, "ivy-container-static-lp-normalize"]], "moveaxis": [[1205, "moveaxis"], [1240, "moveaxis"]], "ndenumerate": [[1206, "ndenumerate"], [1273, "ndenumerate"]], "ndindex": [[1207, "ndindex"], [1274, "ndindex"]], "pad": [[1208, "pad"], [1285, "pad"]], "rot90": [[1209, "rot90"], [1322, "rot90"]], "take_along_axis": [[1210, "take-along-axis"], [1357, "take-along-axis"]], "top_k": [[1211, "top-k"], [1367, "top-k"]], "vsplit": [[1212, "vsplit"], [1393, "vsplit"]], "vstack": [[1213, "vstack"], [1398, "vstack"]], "ivy.Array.matrix_exp": [[1215, "ivy-array-matrix-exp"]], "ivy.Container.matrix_exp": [[1216, "ivy-container-matrix-exp"]], "ivy.matrix_exp": [[1217, "ivy-matrix-exp"]], "ivy.Container.static_matrix_exp": [[1218, "ivy-container-static-matrix-exp"]], "ivy.Array.max_pool1d": [[1220, "ivy-array-max-pool1d"]], "ivy.Container.max_pool1d": [[1221, "ivy-container-max-pool1d"]], "ivy.max_pool1d": [[1222, "ivy-max-pool1d"]], "ivy.Container.static_max_pool1d": [[1223, "ivy-container-static-max-pool1d"]], "ivy.Array.max_pool2d": [[1225, "ivy-array-max-pool2d"]], "ivy.Container.max_pool2d": [[1226, "ivy-container-max-pool2d"]], "ivy.max_pool2d": [[1227, "ivy-max-pool2d"]], "ivy.Container.static_max_pool2d": [[1228, "ivy-container-static-max-pool2d"]], "ivy.Array.max_pool3d": [[1230, "ivy-array-max-pool3d"]], "ivy.Container.max_pool3d": [[1231, "ivy-container-max-pool3d"]], "ivy.max_pool3d": [[1232, "ivy-max-pool3d"]], "ivy.Container.static_max_pool3d": [[1233, "ivy-container-static-max-pool3d"]], "median": [[1234, "median"], [1352, "median"]], "ivy.Array.median": [[1235, "ivy-array-median"]], "ivy.Container.median": [[1236, "ivy-container-median"]], "ivy.median": [[1237, "ivy-median"]], "ivy.Container.static_median": [[1238, "ivy-container-static-median"]], "Meta": [[1239, "module-ivy.functional.ivy.experimental.meta"], [1949, "module-ivy.functional.ivy.meta"]], "ivy.Array.moveaxis": [[1241, "ivy-array-moveaxis"]], "ivy.Container.moveaxis": [[1242, "ivy-container-moveaxis"]], "ivy.moveaxis": [[1243, "ivy-moveaxis"]], "ivy.Container.static_moveaxis": [[1244, "ivy-container-static-moveaxis"]], "msort": [[1245, "msort"], [1341, "msort"]], "ivy.Array.msort": [[1246, "ivy-array-msort"]], "ivy.Container.msort": [[1247, "ivy-container-msort"]], "ivy.msort": [[1248, "ivy-msort"]], "ivy.Container.static_msort": [[1249, "ivy-container-static-msort"]], "ivy.Array.nan_to_num": [[1252, "ivy-array-nan-to-num"]], "ivy.Container.nan_to_num": [[1253, "ivy-container-nan-to-num"]], "ivy.nan_to_num": [[1254, "ivy-nan-to-num"]], "ivy.Container.static_nan_to_num": [[1255, "ivy-container-static-nan-to-num"]], "nanmean": [[1256, "nanmean"], [1353, "nanmean"]], "ivy.Array.nanmean": [[1257, "ivy-array-nanmean"]], "ivy.Container.nanmean": [[1258, "ivy-container-nanmean"]], "ivy.nanmean": [[1259, "ivy-nanmean"]], "ivy.Container.static_nanmean": [[1260, "ivy-container-static-nanmean"]], "nanmedian": [[1261, "nanmedian"], [1354, "nanmedian"]], "ivy.Array.nanmedian": [[1262, "ivy-array-nanmedian"]], "ivy.Container.nanmedian": [[1263, "ivy-container-nanmedian"]], "ivy.nanmedian": [[1264, "ivy-nanmedian"]], "ivy.Container.static_nanmedian": [[1265, "ivy-container-static-nanmedian"]], "ivy.Array.nansum": [[1267, "ivy-array-nansum"]], "ivy.Container.nansum": [[1268, "ivy-container-nansum"]], "ivy.nansum": [[1269, "ivy-nansum"]], "ivy.Container.static_nansum": [[1270, "ivy-container-static-nansum"]], "native_sparse_array": [[1271, "native-sparse-array"], [1347, "native-sparse-array"]], "native_sparse_array_to_indices_values_and_shape": [[1272, "native-sparse-array-to-indices-values-and-shape"], [1348, "native-sparse-array-to-indices-values-and-shape"]], "Nest": [[1275, "module-ivy.functional.ivy.experimental.nest"], [1953, "module-ivy.functional.ivy.nest"]], "ivy.Array.nextafter": [[1277, "ivy-array-nextafter"]], "ivy.Container.nextafter": [[1278, "ivy-container-nextafter"]], "ivy.nextafter": [[1279, "ivy-nextafter"]], "ivy.Container.static_nextafter": [[1280, "ivy-container-static-nextafter"]], "ivy.Array.pad": [[1286, "ivy-array-pad"]], "ivy.Container.pad": [[1287, "ivy-container-pad"]], "ivy.pad": [[1288, "ivy-pad"]], "ivy.Container.static_pad": [[1289, "ivy-container-static-pad"]], "poisson": [[1291, "poisson"], [1311, "poisson"]], "ivy.Array.poisson": [[1292, "ivy-array-poisson"]], "ivy.Container.poisson": [[1293, "ivy-container-poisson"]], "ivy.poisson": [[1294, "ivy-poisson"]], "ivy.Container.static_poisson": [[1295, "ivy-container-static-poisson"]], "ivy.Array.prelu": [[1297, "ivy-array-prelu"]], "ivy.Container.prelu": [[1298, "ivy-container-prelu"]], "ivy.prelu": [[1299, "ivy-prelu"]], "ivy.Container.static_prelu": [[1300, "ivy-container-static-prelu"]], "quantile": [[1301, "quantile"], [1355, "quantile"]], "ivy.Array.quantile": [[1302, "ivy-array-quantile"]], "ivy.Container.quantile": [[1303, "ivy-container-quantile"]], "ivy.quantile": [[1304, "ivy-quantile"]], "ivy.Container.static_quantile": [[1305, "ivy-container-static-quantile"]], "ivy.Array.real": [[1313, "ivy-array-real"]], "ivy.Container.real": [[1314, "ivy-container-real"]], "ivy.real": [[1315, "ivy-real"]], "ivy.Container.static_real": [[1316, "ivy-container-static-real"]], "ivy.Array.relu6": [[1318, "ivy-array-relu6"]], "ivy.Container.relu6": [[1319, "ivy-container-relu6"]], "ivy.relu6": [[1320, "ivy-relu6"]], "ivy.Container.static_relu6": [[1321, "ivy-container-static-relu6"]], "ivy.Array.rot90": [[1323, "ivy-array-rot90"]], "ivy.Container.rot90": [[1324, "ivy-container-rot90"]], "ivy.rot90": [[1325, "ivy-rot90"]], "ivy.Container.static_rot90": [[1326, "ivy-container-static-rot90"]], "ivy.Array.signbit": [[1330, "ivy-array-signbit"]], "ivy.Container.signbit": [[1331, "ivy-container-signbit"]], "ivy.signbit": [[1332, "ivy-signbit"]], "ivy.Container.static_signbit": [[1333, "ivy-container-static-signbit"]], "ivy.Array.sinc": [[1335, "ivy-array-sinc"]], "ivy.Container.sinc": [[1336, "ivy-container-sinc"]], "ivy.sinc": [[1337, "ivy-sinc"]], "ivy.Container.static_sinc": [[1338, "ivy-container-static-sinc"]], "Sparse array": [[1342, "module-ivy.functional.ivy.experimental.sparse_array"]], "unravel_index": [[1356, "unravel-index"], [1383, "unravel-index"]], "ivy.Container.static_take_along_axis": [[1358, "ivy-container-static-take-along-axis"]], "ivy.Array.take_along_axis": [[1359, "ivy-array-take-along-axis"]], "ivy.Container.take_along_axis": [[1360, "ivy-container-take-along-axis"]], "ivy.take_along_axis": [[1361, "ivy-take-along-axis"]], "ivy.Container.static_thresholded_relu": [[1363, "ivy-container-static-thresholded-relu"]], "ivy.Array.thresholded_relu": [[1364, "ivy-array-thresholded-relu"]], "ivy.Container.thresholded_relu": [[1365, "ivy-container-thresholded-relu"]], "ivy.thresholded_relu": [[1366, "ivy-thresholded-relu"]], "ivy.Container.static_top_k": [[1368, "ivy-container-static-top-k"]], "ivy.Array.top_k": [[1369, "ivy-array-top-k"]], "ivy.Container.top_k": [[1370, "ivy-container-top-k"]], "ivy.top_k": [[1371, "ivy-top-k"]], "ivy.Array.trapz": [[1373, "ivy-array-trapz"]], "ivy.trapz": [[1374, "ivy-trapz"]], "ivy.Container.static_tril_indices": [[1376, "ivy-container-static-tril-indices"]], "ivy.Container.tril_indices": [[1377, "ivy-container-tril-indices"]], "ivy.tril_indices": [[1378, "ivy-tril-indices"]], "ivy.Container.static_triu_indices": [[1380, "ivy-container-static-triu-indices"]], "ivy.Container.triu_indices": [[1381, "ivy-container-triu-indices"]], "ivy.triu_indices": [[1382, "ivy-triu-indices"]], "ivy.Container.static_unravel_index": [[1384, "ivy-container-static-unravel-index"]], "ivy.Array.unravel_index": [[1385, "ivy-array-unravel-index"]], "ivy.Container.unravel_index": [[1386, "ivy-container-unravel-index"]], "ivy.unravel_index": [[1387, "ivy-unravel-index"]], "ivy.Container.static_vorbis_window": [[1390, "ivy-container-static-vorbis-window"]], "ivy.Container.vorbis_window": [[1391, "ivy-container-vorbis-window"]], "ivy.vorbis_window": [[1392, "ivy-vorbis-window"]], "ivy.Container.static_vsplit": [[1394, "ivy-container-static-vsplit"]], "ivy.Array.vsplit": [[1395, "ivy-array-vsplit"]], "ivy.Container.vsplit": [[1396, "ivy-container-vsplit"]], "ivy.vsplit": [[1397, "ivy-vsplit"]], "ivy.Container.static_vstack": [[1399, "ivy-container-static-vstack"]], "ivy.Array.vstack": [[1400, "ivy-array-vstack"]], "ivy.Container.vstack": [[1401, "ivy-container-vstack"]], "ivy.vstack": [[1402, "ivy-vstack"]], "ivy.Container.static_xlogy": [[1404, "ivy-container-static-xlogy"]], "ivy.Array.xlogy": [[1405, "ivy-array-xlogy"]], "ivy.Container.xlogy": [[1406, "ivy-container-xlogy"]], "ivy.xlogy": [[1407, "ivy-xlogy"]], "ivy.Container.static_zeta": [[1409, "ivy-container-static-zeta"]], "ivy.Array.zeta": [[1410, "ivy-array-zeta"]], "ivy.Container.zeta": [[1411, "ivy-container-zeta"]], "ivy.zeta": [[1412, "ivy-zeta"]], "Parameter": [[1414, "parameter"], [1414, "id1"], [1414, "id2"], [1414, "id3"], [1414, "id4"], [1554, "parameter"], [1555, "parameter"], [1558, "parameter"], [1560, "parameter"], [1561, "parameter"]], "all_equal": [[1415, "all-equal"]], "ivy.Array.all_equal": [[1416, "ivy-array-all-equal"]], "ivy.Container.all_equal": [[1417, "ivy-container-all-equal"]], "ivy.all_equal": [[1418, "ivy-all-equal"]], "ivy.Container.static_all_equal": [[1419, "ivy-container-static-all-equal"]], "arg_info": [[1420, "arg-info"]], "arg_names": [[1421, "arg-names"]], "array_equal": [[1422, "array-equal"]], "ivy.Array.array_equal": [[1423, "ivy-array-array-equal"]], "ivy.Container.array_equal": [[1424, "ivy-container-array-equal"]], "ivy.array_equal": [[1425, "ivy-array-equal"]], "ivy.Container.static_array_equal": [[1426, "ivy-container-static-array-equal"]], "assert_supports_inplace": [[1427, "assert-supports-inplace"]], "ivy.Array.assert_supports_inplace": [[1428, "ivy-array-assert-supports-inplace"]], "ivy.Container.assert_supports_inplace": [[1429, "ivy-container-assert-supports-inplace"]], "ivy.assert_supports_inplace": [[1430, "ivy-assert-supports-inplace"]], "ivy.Container.static_assert_supports_inplace": [[1431, "ivy-container-static-assert-supports-inplace"]], "cache_fn": [[1432, "cache-fn"]], "clip_matrix_norm": [[1433, "clip-matrix-norm"]], "ivy.Array.clip_matrix_norm": [[1434, "ivy-array-clip-matrix-norm"]], "ivy.Container.clip_matrix_norm": [[1435, "ivy-container-clip-matrix-norm"]], "ivy.clip_matrix_norm": [[1436, "ivy-clip-matrix-norm"]], "ivy.Container.static_clip_matrix_norm": [[1437, "ivy-container-static-clip-matrix-norm"]], "clip_vector_norm": [[1438, "clip-vector-norm"]], "ivy.Array.clip_vector_norm": [[1439, "ivy-array-clip-vector-norm"]], "ivy.Container.clip_vector_norm": [[1440, "ivy-container-clip-vector-norm"]], "ivy.clip_vector_norm": [[1441, "ivy-clip-vector-norm"]], "ivy.Container.static_clip_vector_norm": [[1442, "ivy-container-static-clip-vector-norm"]], "container_types": [[1443, "container-types"]], "current_backend_str": [[1444, "current-backend-str"]], "default": [[1445, "default"]], "ivy.Array.default": [[1446, "ivy-array-default"]], "ivy.default": [[1447, "ivy-default"]], "einops_rearrange": [[1448, "einops-rearrange"]], "ivy.Array.einops_rearrange": [[1449, "ivy-array-einops-rearrange"]], "ivy.Container.einops_rearrange": [[1450, "ivy-container-einops-rearrange"]], "ivy.einops_rearrange": [[1451, "ivy-einops-rearrange"]], "ivy.Container.static_einops_rearrange": [[1452, "ivy-container-static-einops-rearrange"]], "einops_reduce": [[1453, "einops-reduce"]], "ivy.Array.einops_reduce": [[1454, "ivy-array-einops-reduce"]], "ivy.Container.einops_reduce": [[1455, "ivy-container-einops-reduce"]], "ivy.einops_reduce": [[1456, "ivy-einops-reduce"]], "ivy.Container.static_einops_reduce": [[1457, "ivy-container-static-einops-reduce"]], "einops_repeat": [[1458, "einops-repeat"]], "ivy.Array.einops_repeat": [[1459, "ivy-array-einops-repeat"]], "ivy.Container.einops_repeat": [[1460, "ivy-container-einops-repeat"]], "ivy.einops_repeat": [[1461, "ivy-einops-repeat"]], "ivy.Container.static_einops_repeat": [[1462, "ivy-container-static-einops-repeat"]], "exists": [[1463, "exists"]], "ivy.Array.exists": [[1464, "ivy-array-exists"]], "ivy.exists": [[1465, "ivy-exists"]], "fourier_encode": [[1466, "fourier-encode"]], "ivy.Array.fourier_encode": [[1467, "ivy-array-fourier-encode"]], "ivy.Container.fourier_encode": [[1468, "ivy-container-fourier-encode"]], "ivy.fourier_encode": [[1469, "ivy-fourier-encode"]], "ivy.Container.static_fourier_encode": [[1470, "ivy-container-static-fourier-encode"]], "function_supported_devices_and_dtypes": [[1471, "function-supported-devices-and-dtypes"]], "function_unsupported_devices_and_dtypes": [[1472, "function-unsupported-devices-and-dtypes"]], "gather": [[1473, "gather"]], "ivy.Array.gather": [[1474, "ivy-array-gather"]], "ivy.Container.gather": [[1475, "ivy-container-gather"]], "ivy.gather": [[1476, "ivy-gather"]], "ivy.Container.static_gather": [[1477, "ivy-container-static-gather"]], "gather_nd": [[1478, "gather-nd"]], "ivy.Array.gather_nd": [[1479, "ivy-array-gather-nd"]], "ivy.Container.gather_nd": [[1480, "ivy-container-gather-nd"]], "ivy.gather_nd": [[1481, "ivy-gather-nd"]], "ivy.Container.static_gather_nd": [[1482, "ivy-container-static-gather-nd"]], "get_all_arrays_in_memory": [[1483, "get-all-arrays-in-memory"]], "get_array_mode": [[1484, "get-array-mode"]], "get_exception_trace_mode": [[1485, "get-exception-trace-mode"]], "get_item": [[1486, "get-item"]], "get_min_base": [[1487, "get-min-base"]], "get_min_denominator": [[1488, "get-min-denominator"]], "get_nestable_mode": [[1489, "get-nestable-mode"]], "get_num_dims": [[1490, "get-num-dims"]], "ivy.Array.get_num_dims": [[1491, "ivy-array-get-num-dims"]], "ivy.Container.get_num_dims": [[1492, "ivy-container-get-num-dims"]], "ivy.get_num_dims": [[1493, "ivy-get-num-dims"]], "ivy.Container.static_get_num_dims": [[1494, "ivy-container-static-get-num-dims"]], "get_queue_timeout": [[1495, "get-queue-timeout"]], "get_referrers_recursive": [[1496, "get-referrers-recursive"]], "get_show_func_wrapper_trace_mode": [[1497, "get-show-func-wrapper-trace-mode"]], "get_tmp_dir": [[1498, "get-tmp-dir"]], "has_nans": [[1499, "has-nans"]], "ivy.Array.has_nans": [[1500, "ivy-array-has-nans"]], "ivy.Container.has_nans": [[1501, "ivy-container-has-nans"]], "ivy.has_nans": [[1502, "ivy-has-nans"]], "ivy.Container.static_has_nans": [[1503, "ivy-container-static-has-nans"]], "inplace_arrays_supported": [[1504, "inplace-arrays-supported"]], "inplace_decrement": [[1505, "inplace-decrement"]], "ivy.Array.inplace_decrement": [[1506, "ivy-array-inplace-decrement"]], "ivy.Container.inplace_decrement": [[1507, "ivy-container-inplace-decrement"]], "ivy.inplace_decrement": [[1508, "ivy-inplace-decrement"]], "ivy.Container.static_inplace_decrement": [[1509, "ivy-container-static-inplace-decrement"]], "inplace_increment": [[1510, "inplace-increment"]], "ivy.Array.inplace_increment": [[1511, "ivy-array-inplace-increment"]], "ivy.Container.inplace_increment": [[1512, "ivy-container-inplace-increment"]], "ivy.inplace_increment": [[1513, "ivy-inplace-increment"]], "ivy.Container.static_inplace_increment": [[1514, "ivy-container-static-inplace-increment"]], "inplace_update": [[1515, "inplace-update"]], "ivy.Array.inplace_update": [[1516, "ivy-array-inplace-update"]], "ivy.Container.inplace_update": [[1517, "ivy-container-inplace-update"]], "ivy.inplace_update": [[1518, "ivy-inplace-update"]], "ivy.Container.static_inplace_update": [[1519, "ivy-container-static-inplace-update"]], "inplace_variables_supported": [[1520, "inplace-variables-supported"]], "is_array": [[1521, "is-array"]], "ivy.Array.is_array": [[1522, "ivy-array-is-array"]], "ivy.Container.is_array": [[1523, "ivy-container-is-array"]], "ivy.is_array": [[1524, "ivy-is-array"]], "ivy.Container.static_is_array": [[1525, "ivy-container-static-is-array"]], "is_ivy_array": [[1526, "is-ivy-array"]], "ivy.Array.is_ivy_array": [[1527, "ivy-array-is-ivy-array"]], "ivy.Container.is_ivy_array": [[1528, "ivy-container-is-ivy-array"]], "ivy.is_ivy_array": [[1529, "ivy-is-ivy-array"]], "ivy.Container.static_is_ivy_array": [[1530, "ivy-container-static-is-ivy-array"]], "is_ivy_container": [[1531, "is-ivy-container"]], "ivy.Array.is_ivy_container": [[1532, "ivy-array-is-ivy-container"]], "ivy.is_ivy_container": [[1533, "ivy-is-ivy-container"]], "is_native_array": [[1534, "is-native-array"]], "ivy.Array.is_native_array": [[1535, "ivy-array-is-native-array"]], "ivy.Container.is_native_array": [[1536, "ivy-container-is-native-array"]], "ivy.is_native_array": [[1537, "ivy-is-native-array"]], "ivy.Container.static_is_native_array": [[1538, "ivy-container-static-is-native-array"]], "isscalar": [[1539, "isscalar"]], "match_kwargs": [[1540, "match-kwargs"]], "multiprocessing": [[1541, "multiprocessing"]], "num_arrays_in_memory": [[1542, "num-arrays-in-memory"]], "print_all_arrays_in_memory": [[1543, "print-all-arrays-in-memory"]], "scatter_flat": [[1544, "scatter-flat"]], "ivy.Array.scatter_flat": [[1545, "ivy-array-scatter-flat"]], "ivy.Container.scatter_flat": [[1546, "ivy-container-scatter-flat"]], "ivy.scatter_flat": [[1547, "ivy-scatter-flat"]], "ivy.Container.static_scatter_flat": [[1548, "ivy-container-static-scatter-flat"]], "scatter_nd": [[1549, "scatter-nd"]], "ivy.Array.scatter_nd": [[1550, "ivy-array-scatter-nd"]], "ivy.Container.scatter_nd": [[1551, "ivy-container-scatter-nd"]], "ivy.scatter_nd": [[1552, "ivy-scatter-nd"]], "ivy.Container.static_scatter_nd": [[1553, "ivy-container-static-scatter-nd"]], "set_array_mode": [[1554, "set-array-mode"]], "set_exception_trace_mode": [[1555, "set-exception-trace-mode"]], "set_min_base": [[1556, "set-min-base"]], "set_min_denominator": [[1557, "set-min-denominator"]], "set_nestable_mode": [[1558, "set-nestable-mode"]], "set_queue_timeout": [[1559, "set-queue-timeout"]], "set_shape_array_mode": [[1560, "set-shape-array-mode"]], "set_show_func_wrapper_trace_mode": [[1561, "set-show-func-wrapper-trace-mode"]], "set_tmp_dir": [[1562, "set-tmp-dir"]], "shape": [[1563, "shape"]], "shape_array_mode": [[1564, "shape-array-mode"]], "stable_divide": [[1565, "stable-divide"]], "ivy.Array.stable_divide": [[1566, "ivy-array-stable-divide"]], "ivy.Container.stable_divide": [[1567, "ivy-container-stable-divide"]], "ivy.stable_divide": [[1568, "ivy-stable-divide"]], "ivy.Container.static_stable_divide": [[1569, "ivy-container-static-stable-divide"]], "stable_pow": [[1570, "stable-pow"]], "ivy.Array.stable_pow": [[1571, "ivy-array-stable-pow"]], "ivy.Container.stable_pow": [[1572, "ivy-container-stable-pow"]], "ivy.stable_pow": [[1573, "ivy-stable-pow"]], "ivy.Container.static_stable_pow": [[1574, "ivy-container-static-stable-pow"]], "supports_inplace_updates": [[1575, "supports-inplace-updates"]], "ivy.Container.static_supports_inplace_updates": [[1576, "ivy-container-static-supports-inplace-updates"]], "ivy.Array.supports_inplace_updates": [[1577, "ivy-array-supports-inplace-updates"]], "ivy.Container.supports_inplace_updates": [[1578, "ivy-container-supports-inplace-updates"]], "ivy.supports_inplace_updates": [[1579, "ivy-supports-inplace-updates"]], "to_ivy_shape": [[1580, "to-ivy-shape"]], "to_list": [[1581, "to-list"]], "ivy.Container.static_to_list": [[1582, "ivy-container-static-to-list"]], "ivy.Array.to_list": [[1583, "ivy-array-to-list"]], "ivy.to_list": [[1584, "ivy-to-list"]], "to_native_shape": [[1585, "to-native-shape"]], "to_numpy": [[1586, "to-numpy"]], "ivy.Container.static_to_numpy": [[1587, "ivy-container-static-to-numpy"]], "ivy.Array.to_numpy": [[1588, "ivy-array-to-numpy"]], "ivy.Container.to_numpy": [[1589, "ivy-container-to-numpy"]], "ivy.to_numpy": [[1590, "ivy-to-numpy"]], "to_scalar": [[1591, "to-scalar"]], "ivy.Container.static_to_scalar": [[1592, "ivy-container-static-to-scalar"]], "ivy.Array.to_scalar": [[1593, "ivy-array-to-scalar"]], "ivy.Container.to_scalar": [[1594, "ivy-container-to-scalar"]], "ivy.to_scalar": [[1595, "ivy-to-scalar"]], "try_else_none": [[1596, "try-else-none"]], "unset_array_mode": [[1597, "unset-array-mode"]], "unset_exception_trace_mode": [[1598, "unset-exception-trace-mode"]], "unset_nestable_mode": [[1599, "unset-nestable-mode"]], "unset_queue_timeout": [[1600, "unset-queue-timeout"]], "unset_shape_array_mode": [[1601, "unset-shape-array-mode"]], "unset_show_func_wrapper_trace_mode": [[1602, "unset-show-func-wrapper-trace-mode"]], "value_is_nan": [[1603, "value-is-nan"]], "ivy.Container.static_value_is_nan": [[1604, "ivy-container-static-value-is-nan"]], "ivy.Array.value_is_nan": [[1605, "ivy-array-value-is-nan"]], "ivy.Container.value_is_nan": [[1606, "ivy-container-value-is-nan"]], "ivy.value_is_nan": [[1607, "ivy-value-is-nan"]], "vmap": [[1608, "vmap"]], "GradientTracking": [[1610, "gradienttracking"]], "adam_step": [[1611, "adam-step"]], "ivy.Array.adam_step": [[1612, "ivy-array-adam-step"]], "ivy.Container.adam_step": [[1613, "ivy-container-adam-step"]], "ivy.adam_step": [[1614, "ivy-adam-step"]], "adam_update": [[1615, "adam-update"]], "ivy.Array.adam_update": [[1616, "ivy-array-adam-update"]], "ivy.Container.adam_update": [[1617, "ivy-container-adam-update"]], "ivy.adam_update": [[1618, "ivy-adam-update"]], "execute_with_gradients": [[1619, "execute-with-gradients"]], "grad": [[1620, "grad"]], "gradient_descent_update": [[1621, "gradient-descent-update"]], "ivy.Array.gradient_descent_update": [[1622, "ivy-array-gradient-descent-update"]], "ivy.Container.gradient_descent_update": [[1623, "ivy-container-gradient-descent-update"]], "ivy.gradient_descent_update": [[1624, "ivy-gradient-descent-update"]], "jac": [[1625, "jac"]], "lamb_update": [[1626, "lamb-update"]], "ivy.Array.lamb_update": [[1627, "ivy-array-lamb-update"]], "ivy.Container.lamb_update": [[1628, "ivy-container-lamb-update"]], "ivy.lamb_update": [[1629, "ivy-lamb-update"]], "lars_update": [[1630, "lars-update"]], "ivy.Array.lars_update": [[1631, "ivy-array-lars-update"]], "ivy.Container.lars_update": [[1632, "ivy-container-lars-update"]], "ivy.lars_update": [[1633, "ivy-lars-update"]], "optimizer_update": [[1634, "optimizer-update"]], "ivy.Array.optimizer_update": [[1635, "ivy-array-optimizer-update"]], "ivy.Container.optimizer_update": [[1636, "ivy-container-optimizer-update"]], "ivy.optimizer_update": [[1637, "ivy-optimizer-update"]], "set_with_grads": [[1638, "set-with-grads"]], "stop_gradient": [[1639, "stop-gradient"]], "ivy.Container.static_stop_gradient": [[1640, "ivy-container-static-stop-gradient"]], "ivy.Array.stop_gradient": [[1641, "ivy-array-stop-gradient"]], "ivy.Container.stop_gradient": [[1642, "ivy-container-stop-gradient"]], "ivy.stop_gradient": [[1643, "ivy-stop-gradient"]], "unset_with_grads": [[1644, "unset-with-grads"]], "value_and_grad": [[1645, "value-and-grad"]], "with_grads": [[1646, "with-grads"]], "conv": [[1648, "conv"]], "conv1d": [[1649, "conv1d"]], "ivy.Array.conv1d": [[1650, "ivy-array-conv1d"]], "ivy.Container.conv1d": [[1651, "ivy-container-conv1d"]], "ivy.conv1d": [[1652, "ivy-conv1d"]], "ivy.Container.static_conv1d": [[1653, "ivy-container-static-conv1d"]], "conv1d_transpose": [[1654, "conv1d-transpose"]], "ivy.Array.conv1d_transpose": [[1655, "ivy-array-conv1d-transpose"]], "ivy.Container.conv1d_transpose": [[1656, "ivy-container-conv1d-transpose"]], "ivy.conv1d_transpose": [[1657, "ivy-conv1d-transpose"]], "ivy.Container.static_conv1d_transpose": [[1658, "ivy-container-static-conv1d-transpose"]], "conv2d": [[1659, "conv2d"]], "ivy.Array.conv2d": [[1660, "ivy-array-conv2d"]], "ivy.Container.conv2d": [[1661, "ivy-container-conv2d"]], "ivy.conv2d": [[1662, "ivy-conv2d"]], "ivy.Container.static_conv2d": [[1663, "ivy-container-static-conv2d"]], "conv2d_transpose": [[1664, "conv2d-transpose"]], "ivy.Array.conv2d_transpose": [[1665, "ivy-array-conv2d-transpose"]], "ivy.Container.conv2d_transpose": [[1666, "ivy-container-conv2d-transpose"]], "ivy.conv2d_transpose": [[1667, "ivy-conv2d-transpose"]], "ivy.Container.static_conv2d_transpose": [[1668, "ivy-container-static-conv2d-transpose"]], "conv3d": [[1669, "conv3d"]], "ivy.Array.conv3d": [[1670, "ivy-array-conv3d"]], "ivy.Container.conv3d": [[1671, "ivy-container-conv3d"]], "ivy.conv3d": [[1672, "ivy-conv3d"]], "ivy.Container.static_conv3d": [[1673, "ivy-container-static-conv3d"]], "conv3d_transpose": [[1674, "conv3d-transpose"]], "ivy.Array.conv3d_transpose": [[1675, "ivy-array-conv3d-transpose"]], "ivy.Container.conv3d_transpose": [[1676, "ivy-container-conv3d-transpose"]], "ivy.conv3d_transpose": [[1677, "ivy-conv3d-transpose"]], "ivy.Container.static_conv3d_transpose": [[1678, "ivy-container-static-conv3d-transpose"]], "conv_general_dilated": [[1679, "conv-general-dilated"]], "conv_general_transpose": [[1680, "conv-general-transpose"]], "depthwise_conv2d": [[1681, "depthwise-conv2d"]], "ivy.Array.depthwise_conv2d": [[1682, "ivy-array-depthwise-conv2d"]], "ivy.Container.depthwise_conv2d": [[1683, "ivy-container-depthwise-conv2d"]], "ivy.depthwise_conv2d": [[1684, "ivy-depthwise-conv2d"]], "ivy.Container.static_depthwise_conv2d": [[1685, "ivy-container-static-depthwise-conv2d"]], "dropout": [[1686, "dropout"]], "ivy.Array.dropout": [[1687, "ivy-array-dropout"]], "ivy.Container.dropout": [[1688, "ivy-container-dropout"]], "ivy.dropout": [[1689, "ivy-dropout"]], "ivy.Container.static_dropout": [[1690, "ivy-container-static-dropout"]], "linear": [[1691, "linear"]], "ivy.Array.linear": [[1692, "ivy-array-linear"]], "ivy.Container.linear": [[1693, "ivy-container-linear"]], "ivy.linear": [[1694, "ivy-linear"]], "ivy.Container.static_linear": [[1695, "ivy-container-static-linear"]], "lstm_update": [[1696, "lstm-update"]], "ivy.Array.lstm_update": [[1697, "ivy-array-lstm-update"]], "ivy.Container.lstm_update": [[1698, "ivy-container-lstm-update"]], "ivy.lstm_update": [[1699, "ivy-lstm-update"]], "ivy.Container.static_lstm_update": [[1700, "ivy-container-static-lstm-update"]], "multi_head_attention": [[1701, "multi-head-attention"]], "ivy.Array.multi_head_attention": [[1702, "ivy-array-multi-head-attention"]], "ivy.Container.multi_head_attention": [[1703, "ivy-container-multi-head-attention"]], "ivy.multi_head_attention": [[1704, "ivy-multi-head-attention"]], "ivy.Container.static_multi_head_attention": [[1705, "ivy-container-static-multi-head-attention"]], "scaled_dot_product_attention": [[1706, "scaled-dot-product-attention"]], "ivy.Array.scaled_dot_product_attention": [[1707, "ivy-array-scaled-dot-product-attention"]], "ivy.Container.scaled_dot_product_attention": [[1708, "ivy-container-scaled-dot-product-attention"]], "ivy.scaled_dot_product_attention": [[1709, "ivy-scaled-dot-product-attention"]], "ivy.Container.static_scaled_dot_product_attention": [[1710, "ivy-container-static-scaled-dot-product-attention"]], "cholesky": [[1712, "cholesky"]], "ivy.Array.cholesky": [[1713, "ivy-array-cholesky"]], "ivy.Container.cholesky": [[1714, "ivy-container-cholesky"]], "ivy.cholesky": [[1715, "ivy-cholesky"]], "ivy.Container.static_cholesky": [[1716, "ivy-container-static-cholesky"]], "cross": [[1717, "cross"]], "ivy.Array.cross": [[1718, "ivy-array-cross"]], "ivy.Container.cross": [[1719, "ivy-container-cross"]], "ivy.cross": [[1720, "ivy-cross"]], "ivy.Container.static_cross": [[1721, "ivy-container-static-cross"]], "det": [[1722, "det"]], "ivy.Array.det": [[1723, "ivy-array-det"]], "ivy.Container.det": [[1724, "ivy-container-det"]], "ivy.det": [[1725, "ivy-det"]], "ivy.Container.static_det": [[1726, "ivy-container-static-det"]], "diag": [[1727, "diag"]], "ivy.Array.diag": [[1728, "ivy-array-diag"]], "ivy.Container.diag": [[1729, "ivy-container-diag"]], "ivy.diag": [[1730, "ivy-diag"]], "ivy.Container.static_diag": [[1731, "ivy-container-static-diag"]], "diagonal": [[1732, "diagonal"]], "ivy.Array.diagonal": [[1733, "ivy-array-diagonal"]], "ivy.Container.diagonal": [[1734, "ivy-container-diagonal"]], "ivy.diagonal": [[1735, "ivy-diagonal"]], "ivy.Container.static_diagonal": [[1736, "ivy-container-static-diagonal"]], "eigh": [[1738, "eigh"]], "ivy.Array.eigh": [[1739, "ivy-array-eigh"]], "ivy.Container.eigh": [[1740, "ivy-container-eigh"]], "ivy.eigh": [[1741, "ivy-eigh"]], "ivy.Container.static_eigh": [[1742, "ivy-container-static-eigh"]], "eigvalsh": [[1743, "eigvalsh"]], "ivy.Array.eigvalsh": [[1744, "ivy-array-eigvalsh"]], "ivy.Container.eigvalsh": [[1745, "ivy-container-eigvalsh"]], "ivy.eigvalsh": [[1746, "ivy-eigvalsh"]], "ivy.Container.static_eigvalsh": [[1747, "ivy-container-static-eigvalsh"]], "inner": [[1748, "inner"]], "ivy.Array.inner": [[1749, "ivy-array-inner"]], "ivy.Container.inner": [[1750, "ivy-container-inner"]], "ivy.inner": [[1751, "ivy-inner"]], "ivy.Container.static_inner": [[1752, "ivy-container-static-inner"]], "inv": [[1753, "inv"]], "ivy.Array.inv": [[1754, "ivy-array-inv"]], "ivy.Container.inv": [[1755, "ivy-container-inv"]], "ivy.inv": [[1756, "ivy-inv"]], "ivy.Container.static_inv": [[1757, "ivy-container-static-inv"]], "lu_factor": [[1758, "lu-factor"]], "matmul": [[1759, "matmul"]], "ivy.Array.matmul": [[1760, "ivy-array-matmul"]], "ivy.Container.matmul": [[1761, "ivy-container-matmul"]], "ivy.matmul": [[1762, "ivy-matmul"]], "ivy.Container.static_matmul": [[1763, "ivy-container-static-matmul"]], "matrix_norm": [[1764, "matrix-norm"]], "ivy.Array.matrix_norm": [[1765, "ivy-array-matrix-norm"]], "ivy.Container.matrix_norm": [[1766, "ivy-container-matrix-norm"]], "ivy.matrix_norm": [[1767, "ivy-matrix-norm"]], "ivy.Container.static_matrix_norm": [[1768, "ivy-container-static-matrix-norm"]], "matrix_power": [[1769, "matrix-power"]], "ivy.Array.matrix_power": [[1770, "ivy-array-matrix-power"]], "ivy.Container.matrix_power": [[1771, "ivy-container-matrix-power"]], "ivy.matrix_power": [[1772, "ivy-matrix-power"]], "ivy.Container.static_matrix_power": [[1773, "ivy-container-static-matrix-power"]], "matrix_rank": [[1774, "matrix-rank"]], "ivy.Array.matrix_rank": [[1775, "ivy-array-matrix-rank"]], "ivy.Container.matrix_rank": [[1776, "ivy-container-matrix-rank"]], "ivy.matrix_rank": [[1777, "ivy-matrix-rank"]], "ivy.Container.static_matrix_rank": [[1778, "ivy-container-static-matrix-rank"]], "matrix_transpose": [[1779, "matrix-transpose"]], "ivy.Array.matrix_transpose": [[1780, "ivy-array-matrix-transpose"]], "ivy.Container.matrix_transpose": [[1781, "ivy-container-matrix-transpose"]], "ivy.matrix_transpose": [[1782, "ivy-matrix-transpose"]], "ivy.Container.static_matrix_transpose": [[1783, "ivy-container-static-matrix-transpose"]], "outer": [[1784, "outer"]], "ivy.Array.outer": [[1785, "ivy-array-outer"]], "ivy.Container.outer": [[1786, "ivy-container-outer"]], "ivy.outer": [[1787, "ivy-outer"]], "ivy.Container.static_outer": [[1788, "ivy-container-static-outer"]], "pinv": [[1789, "pinv"]], "ivy.Array.pinv": [[1790, "ivy-array-pinv"]], "ivy.Container.pinv": [[1791, "ivy-container-pinv"]], "ivy.pinv": [[1792, "ivy-pinv"]], "ivy.Container.static_pinv": [[1793, "ivy-container-static-pinv"]], "qr": [[1794, "qr"]], "ivy.Array.qr": [[1795, "ivy-array-qr"]], "ivy.Container.qr": [[1796, "ivy-container-qr"]], "ivy.qr": [[1797, "ivy-qr"]], "ivy.Container.static_qr": [[1798, "ivy-container-static-qr"]], "slogdet": [[1799, "slogdet"]], "ivy.Array.slogdet": [[1800, "ivy-array-slogdet"]], "ivy.Container.slogdet": [[1801, "ivy-container-slogdet"]], "ivy.slogdet": [[1802, "ivy-slogdet"]], "ivy.Container.static_slogdet": [[1803, "ivy-container-static-slogdet"]], "solve": [[1804, "solve"]], "ivy.Array.solve": [[1805, "ivy-array-solve"]], "ivy.Container.solve": [[1806, "ivy-container-solve"]], "ivy.solve": [[1807, "ivy-solve"]], "ivy.Container.static_solve": [[1808, "ivy-container-static-solve"]], "svd": [[1809, "svd"]], "ivy.Container.static_svd": [[1810, "ivy-container-static-svd"]], "ivy.Array.svd": [[1811, "ivy-array-svd"]], "ivy.Container.svd": [[1812, "ivy-container-svd"]], "ivy.svd": [[1813, "ivy-svd"]], "svdvals": [[1814, "svdvals"]], "ivy.Container.static_svdvals": [[1815, "ivy-container-static-svdvals"]], "ivy.Array.svdvals": [[1816, "ivy-array-svdvals"]], "ivy.Container.svdvals": [[1817, "ivy-container-svdvals"]], "ivy.svdvals": [[1818, "ivy-svdvals"]], "tensordot": [[1819, "tensordot"]], "ivy.Container.static_tensordot": [[1820, "ivy-container-static-tensordot"]], "ivy.Container.tensordot": [[1821, "ivy-container-tensordot"]], "ivy.tensordot": [[1822, "ivy-tensordot"]], "tensorsolve": [[1823, "tensorsolve"]], "ivy.Array.tensorsolve": [[1824, "ivy-array-tensorsolve"]], "ivy.Container.tensorsolve": [[1825, "ivy-container-tensorsolve"]], "ivy.tensorsolve": [[1826, "ivy-tensorsolve"]], "trace": [[1827, "trace"]], "ivy.Container.static_trace": [[1828, "ivy-container-static-trace"]], "ivy.Array.trace": [[1829, "ivy-array-trace"]], "ivy.Container.trace": [[1830, "ivy-container-trace"]], "ivy.trace": [[1831, "ivy-trace"]], "vander": [[1832, "vander"]], "ivy.Container.static_vander": [[1833, "ivy-container-static-vander"]], "ivy.Array.vander": [[1834, "ivy-array-vander"]], "ivy.Container.vander": [[1835, "ivy-container-vander"]], "ivy.vander": [[1836, "ivy-vander"]], "vecdot": [[1837, "vecdot"]], "ivy.Container.static_vecdot": [[1838, "ivy-container-static-vecdot"]], "ivy.Array.vecdot": [[1839, "ivy-array-vecdot"]], "ivy.Container.vecdot": [[1840, "ivy-container-vecdot"]], "ivy.vecdot": [[1841, "ivy-vecdot"]], "vector_norm": [[1842, "vector-norm"]], "ivy.Container.static_vector_norm": [[1843, "ivy-container-static-vector-norm"]], "ivy.Array.vector_norm": [[1844, "ivy-array-vector-norm"]], "ivy.Container.vector_norm": [[1845, "ivy-container-vector-norm"]], "ivy.vector_norm": [[1846, "ivy-vector-norm"]], "vector_to_skew_symmetric_matrix": [[1847, "vector-to-skew-symmetric-matrix"]], "ivy.Container.static_vector_to_skew_symmetric_matrix": [[1848, "ivy-container-static-vector-to-skew-symmetric-matrix"]], "ivy.Array.vector_to_skew_symmetric_matrix": [[1849, "ivy-array-vector-to-skew-symmetric-matrix"]], "ivy.Container.vector_to_skew_symmetric_matrix": [[1850, "ivy-container-vector-to-skew-symmetric-matrix"]], "ivy.vector_to_skew_symmetric_matrix": [[1851, "ivy-vector-to-skew-symmetric-matrix"]], "binary_cross_entropy": [[1853, "binary-cross-entropy"]], "ivy.Array.binary_cross_entropy": [[1854, "ivy-array-binary-cross-entropy"]], "ivy.Container.binary_cross_entropy": [[1855, "ivy-container-binary-cross-entropy"]], "ivy.binary_cross_entropy": [[1856, "ivy-binary-cross-entropy"]], "ivy.Container.static_binary_cross_entropy": [[1857, "ivy-container-static-binary-cross-entropy"]], "cross_entropy": [[1858, "cross-entropy"]], "ivy.Array.cross_entropy": [[1859, "ivy-array-cross-entropy"]], "ivy.Container.cross_entropy": [[1860, "ivy-container-cross-entropy"]], "ivy.cross_entropy": [[1861, "ivy-cross-entropy"]], "ivy.Container.static_cross_entropy": [[1862, "ivy-container-static-cross-entropy"]], "sparse_cross_entropy": [[1863, "sparse-cross-entropy"]], "ivy.Array.sparse_cross_entropy": [[1864, "ivy-array-sparse-cross-entropy"]], "ivy.Container.sparse_cross_entropy": [[1865, "ivy-container-sparse-cross-entropy"]], "ivy.sparse_cross_entropy": [[1866, "ivy-sparse-cross-entropy"]], "ivy.Container.static_sparse_cross_entropy": [[1867, "ivy-container-static-sparse-cross-entropy"]], "clip": [[1869, "clip"]], "ivy.Array.clip": [[1870, "ivy-array-clip"]], "ivy.Container.clip": [[1871, "ivy-container-clip"]], "ivy.clip": [[1872, "ivy-clip"]], "ivy.Container.static_clip": [[1873, "ivy-container-static-clip"]], "concat": [[1874, "concat"]], "ivy.Array.concat": [[1875, "ivy-array-concat"]], "ivy.Container.concat": [[1876, "ivy-container-concat"]], "ivy.concat": [[1877, "ivy-concat"]], "ivy.Container.static_concat": [[1878, "ivy-container-static-concat"]], "constant_pad": [[1879, "constant-pad"]], "ivy.Array.constant_pad": [[1880, "ivy-array-constant-pad"]], "ivy.Container.constant_pad": [[1881, "ivy-container-constant-pad"]], "ivy.constant_pad": [[1882, "ivy-constant-pad"]], "ivy.Container.static_constant_pad": [[1883, "ivy-container-static-constant-pad"]], "expand_dims": [[1884, "expand-dims"]], "ivy.Array.expand_dims": [[1885, "ivy-array-expand-dims"]], "ivy.Container.expand_dims": [[1886, "ivy-container-expand-dims"]], "ivy.expand_dims": [[1887, "ivy-expand-dims"]], "ivy.Container.static_expand_dims": [[1888, "ivy-container-static-expand-dims"]], "flip": [[1889, "flip"]], "ivy.Array.flip": [[1890, "ivy-array-flip"]], "ivy.Container.flip": [[1891, "ivy-container-flip"]], "ivy.flip": [[1892, "ivy-flip"]], "ivy.Container.static_flip": [[1893, "ivy-container-static-flip"]], "permute_dims": [[1894, "permute-dims"]], "ivy.Array.permute_dims": [[1895, "ivy-array-permute-dims"]], "ivy.Container.permute_dims": [[1896, "ivy-container-permute-dims"]], "ivy.permute_dims": [[1897, "ivy-permute-dims"]], "ivy.Container.static_permute_dims": [[1898, "ivy-container-static-permute-dims"]], "repeat": [[1899, "repeat"]], "ivy.Array.repeat": [[1900, "ivy-array-repeat"]], "ivy.Container.repeat": [[1901, "ivy-container-repeat"]], "ivy.repeat": [[1902, "ivy-repeat"]], "ivy.Container.static_repeat": [[1903, "ivy-container-static-repeat"]], "reshape": [[1904, "reshape"]], "ivy.Array.reshape": [[1905, "ivy-array-reshape"]], "ivy.Container.reshape": [[1906, "ivy-container-reshape"]], "ivy.reshape": [[1907, "ivy-reshape"]], "ivy.Container.static_reshape": [[1908, "ivy-container-static-reshape"]], "roll": [[1909, "roll"]], "ivy.Array.roll": [[1910, "ivy-array-roll"]], "ivy.Container.roll": [[1911, "ivy-container-roll"]], "ivy.Container.static_roll": [[1913, "ivy-container-static-roll"]], "split": [[1914, "split"]], "ivy.Array.split": [[1915, "ivy-array-split"]], "ivy.Container.split": [[1916, "ivy-container-split"]], "ivy.split": [[1917, "ivy-split"]], "ivy.Container.static_split": [[1918, "ivy-container-static-split"]], "squeeze": [[1919, "squeeze"]], "ivy.Array.squeeze": [[1920, "ivy-array-squeeze"]], "ivy.Container.squeeze": [[1921, "ivy-container-squeeze"]], "ivy.squeeze": [[1922, "ivy-squeeze"]], "ivy.Container.static_squeeze": [[1923, "ivy-container-static-squeeze"]], "stack": [[1924, "stack"]], "ivy.Array.stack": [[1925, "ivy-array-stack"]], "ivy.Container.stack": [[1926, "ivy-container-stack"]], "ivy.stack": [[1927, "ivy-stack"]], "ivy.Container.static_stack": [[1928, "ivy-container-static-stack"]], "swapaxes": [[1929, "swapaxes"]], "ivy.Container.static_swapaxes": [[1930, "ivy-container-static-swapaxes"]], "ivy.Array.swapaxes": [[1931, "ivy-array-swapaxes"]], "ivy.Container.swapaxes": [[1932, "ivy-container-swapaxes"]], "ivy.swapaxes": [[1933, "ivy-swapaxes"]], "tile": [[1934, "tile"]], "ivy.Container.static_tile": [[1935, "ivy-container-static-tile"]], "ivy.Array.tile": [[1936, "ivy-array-tile"]], "ivy.Container.tile": [[1937, "ivy-container-tile"]], "ivy.tile": [[1938, "ivy-tile"]], "unstack": [[1939, "unstack"]], "ivy.Container.static_unstack": [[1940, "ivy-container-static-unstack"]], "ivy.Array.unstack": [[1941, "ivy-array-unstack"]], "ivy.Container.unstack": [[1942, "ivy-container-unstack"]], "ivy.unstack": [[1943, "ivy-unstack"]], "zero_pad": [[1944, "zero-pad"]], "ivy.Container.static_zero_pad": [[1945, "ivy-container-static-zero-pad"]], "ivy.Array.zero_pad": [[1946, "ivy-array-zero-pad"]], "ivy.Container.zero_pad": [[1947, "ivy-container-zero-pad"]], "ivy.zero_pad": [[1948, "ivy-zero-pad"]], "fomaml_step": [[1950, "fomaml-step"]], "maml_step": [[1951, "maml-step"]], "reptile_step": [[1952, "reptile-step"]], "all_nested_indices": [[1954, "all-nested-indices"]], "copy_nest": [[1955, "copy-nest"]], "duplicate_array_index_chains": [[1956, "duplicate-array-index-chains"]], "index_nest": [[1957, "index-nest"]], "insert_into_nest_at_index": [[1958, "insert-into-nest-at-index"]], "insert_into_nest_at_indices": [[1959, "insert-into-nest-at-indices"]], "map": [[1960, "map"]], "map_nest_at_index": [[1961, "map-nest-at-index"]], "map_nest_at_indices": [[1962, "map-nest-at-indices"]], "multi_index_nest": [[1963, "multi-index-nest"]], "nested_any": [[1964, "nested-any"]], "nested_argwhere": [[1965, "nested-argwhere"]], "nested_map": [[1966, "nested-map"]], "nested_multi_map": [[1967, "nested-multi-map"]], "prune_empty": [[1968, "prune-empty"]], "prune_nest_at_index": [[1969, "prune-nest-at-index"]], "prune_nest_at_indices": [[1970, "prune-nest-at-indices"]], "set_nest_at_index": [[1971, "set-nest-at-index"]], "set_nest_at_indices": [[1972, "set-nest-at-indices"]], "layer_norm": [[1974, "layer-norm"]], "ivy.Array.layer_norm": [[1975, "ivy-array-layer-norm"]], "ivy.Container.layer_norm": [[1976, "ivy-container-layer-norm"]], "ivy.layer_norm": [[1977, "ivy-layer-norm"]], "multinomial": [[1979, "multinomial"]], "ivy.Array.multinomial": [[1980, "ivy-array-multinomial"]], "ivy.Container.multinomial": [[1981, "ivy-container-multinomial"]], "ivy.multinomial": [[1982, "ivy-multinomial"]], "ivy.Container.static_multinomial": [[1983, "ivy-container-static-multinomial"]], "randint": [[1984, "randint"]], "ivy.Array.randint": [[1985, "ivy-array-randint"]], "ivy.Container.randint": [[1986, "ivy-container-randint"]], "ivy.randint": [[1987, "ivy-randint"]], "ivy.Container.static_randint": [[1988, "ivy-container-static-randint"]], "random_normal": [[1989, "random-normal"]], "ivy.Array.random_normal": [[1990, "ivy-array-random-normal"]], "ivy.Container.random_normal": [[1991, "ivy-container-random-normal"]], "ivy.random_normal": [[1992, "ivy-random-normal"]], "ivy.Container.static_random_normal": [[1993, "ivy-container-static-random-normal"]], "random_uniform": [[1994, "random-uniform"]], "ivy.Array.random_uniform": [[1995, "ivy-array-random-uniform"]], "ivy.Container.random_uniform": [[1996, "ivy-container-random-uniform"]], "ivy.random_uniform": [[1997, "ivy-random-uniform"]], "ivy.Container.static_random_uniform": [[1998, "ivy-container-static-random-uniform"]], "seed": [[1999, "seed"], [2283, "seed"]], "shuffle": [[2000, "shuffle"]], "ivy.Array.shuffle": [[2001, "ivy-array-shuffle"]], "ivy.Container.shuffle": [[2002, "ivy-container-shuffle"]], "ivy.shuffle": [[2003, "ivy-shuffle"]], "ivy.Container.static_shuffle": [[2004, "ivy-container-static-shuffle"]], "argmax": [[2006, "argmax"]], "ivy.Array.argmax": [[2007, "ivy-array-argmax"]], "ivy.Container.argmax": [[2008, "ivy-container-argmax"]], "ivy.argmax": [[2009, "ivy-argmax"]], "ivy.Container.static_argmax": [[2010, "ivy-container-static-argmax"]], "argmin": [[2011, "argmin"]], "ivy.Array.argmin": [[2012, "ivy-array-argmin"]], "ivy.Container.argmin": [[2013, "ivy-container-argmin"]], "ivy.argmin": [[2014, "ivy-argmin"]], "ivy.Container.static_argmin": [[2015, "ivy-container-static-argmin"]], "argwhere": [[2016, "argwhere"]], "ivy.Array.argwhere": [[2017, "ivy-array-argwhere"]], "ivy.Container.argwhere": [[2018, "ivy-container-argwhere"]], "ivy.argwhere": [[2019, "ivy-argwhere"]], "ivy.Container.static_argwhere": [[2020, "ivy-container-static-argwhere"]], "nonzero": [[2021, "nonzero"]], "ivy.Array.nonzero": [[2022, "ivy-array-nonzero"]], "ivy.Container.nonzero": [[2023, "ivy-container-nonzero"]], "ivy.nonzero": [[2024, "ivy-nonzero"]], "ivy.Container.static_nonzero": [[2025, "ivy-container-static-nonzero"]], "where": [[2026, "where"]], "ivy.Container.static_where": [[2027, "ivy-container-static-where"]], "ivy.Array.where": [[2028, "ivy-array-where"]], "ivy.Container.where": [[2029, "ivy-container-where"]], "ivy.where": [[2030, "ivy-where"]], "Data-dependent output shape": [[2031, null], [2031, null], [2031, null], [2031, null], [2032, null], [2036, null], [2037, null], [2041, null], [2042, null], [2046, null], [2047, null], [2051, null]], "unique_all": [[2032, "unique-all"]], "ivy.Container.static_unique_all": [[2033, "ivy-container-static-unique-all"]], "ivy.Array.unique_all": [[2034, "ivy-array-unique-all"]], "ivy.Container.unique_all": [[2035, "ivy-container-unique-all"]], "ivy.unique_all": [[2036, "ivy-unique-all"]], "unique_counts": [[2037, "unique-counts"]], "ivy.Container.static_unique_counts": [[2038, "ivy-container-static-unique-counts"]], "ivy.Array.unique_counts": [[2039, "ivy-array-unique-counts"]], "ivy.Container.unique_counts": [[2040, "ivy-container-unique-counts"]], "ivy.unique_counts": [[2041, "ivy-unique-counts"]], "unique_inverse": [[2042, "unique-inverse"]], "ivy.Container.static_unique_inverse": [[2043, "ivy-container-static-unique-inverse"]], "ivy.Array.unique_inverse": [[2044, "ivy-array-unique-inverse"]], "ivy.Container.unique_inverse": [[2045, "ivy-container-unique-inverse"]], "ivy.unique_inverse": [[2046, "ivy-unique-inverse"]], "unique_values": [[2047, "unique-values"]], "ivy.Container.static_unique_values": [[2048, "ivy-container-static-unique-values"]], "ivy.Array.unique_values": [[2049, "ivy-array-unique-values"]], "ivy.Container.unique_values": [[2050, "ivy-container-unique-values"]], "ivy.unique_values": [[2051, "ivy-unique-values"]], "argsort": [[2053, "argsort"]], "ivy.Array.argsort": [[2054, "ivy-array-argsort"]], "ivy.Container.argsort": [[2055, "ivy-container-argsort"]], "ivy.argsort": [[2056, "ivy-argsort"]], "ivy.Container.static_argsort": [[2057, "ivy-container-static-argsort"]], "searchsorted": [[2058, "searchsorted"]], "ivy.Array.searchsorted": [[2059, "ivy-array-searchsorted"]], "ivy.Container.searchsorted": [[2060, "ivy-container-searchsorted"]], "ivy.searchsorted": [[2061, "ivy-searchsorted"]], "ivy.Container.static_searchsorted": [[2062, "ivy-container-static-searchsorted"]], "sort": [[2063, "sort"]], "ivy.Array.sort": [[2064, "ivy-array-sort"]], "ivy.Container.sort": [[2065, "ivy-container-sort"]], "ivy.sort": [[2066, "ivy-sort"]], "ivy.Container.static_sort": [[2067, "ivy-container-static-sort"]], "cumprod": [[2069, "cumprod"]], "ivy.Array.cumprod": [[2070, "ivy-array-cumprod"]], "ivy.Container.cumprod": [[2071, "ivy-container-cumprod"]], "ivy.cumprod": [[2072, "ivy-cumprod"]], "ivy.Container.static_cumprod": [[2073, "ivy-container-static-cumprod"]], "cumsum": [[2074, "cumsum"]], "ivy.Array.cumsum": [[2075, "ivy-array-cumsum"]], "ivy.Container.cumsum": [[2076, "ivy-container-cumsum"]], "ivy.cumsum": [[2077, "ivy-cumsum"]], "ivy.Container.static_cumsum": [[2078, "ivy-container-static-cumsum"]], "einsum": [[2079, "einsum"]], "ivy.Array.einsum": [[2080, "ivy-array-einsum"]], "ivy.Container.einsum": [[2081, "ivy-container-einsum"]], "ivy.einsum": [[2082, "ivy-einsum"]], "max": [[2083, "max"]], "ivy.Array.max": [[2084, "ivy-array-max"]], "ivy.Container.max": [[2085, "ivy-container-max"]], "ivy.max": [[2086, "ivy-max"]], "mean": [[2087, "mean"]], "ivy.Array.mean": [[2088, "ivy-array-mean"]], "ivy.Container.mean": [[2089, "ivy-container-mean"]], "ivy.mean": [[2090, "ivy-mean"]], "min": [[2091, "min"]], "ivy.Array.min": [[2092, "ivy-array-min"]], "ivy.Container.min": [[2093, "ivy-container-min"]], "ivy.min": [[2094, "ivy-min"]], "prod": [[2095, "prod"], [2243, "prod"]], "ivy.Array.prod": [[2096, "ivy-array-prod"]], "ivy.Container.prod": [[2097, "ivy-container-prod"]], "ivy.prod": [[2098, "ivy-prod"]], "ivy.Container.static_prod": [[2099, "ivy-container-static-prod"]], "std": [[2100, "std"]], "ivy.Array.std": [[2101, "ivy-array-std"]], "ivy.Container.std": [[2102, "ivy-container-std"]], "ivy.std": [[2103, "ivy-std"]], "sum": [[2104, "sum"]], "ivy.Container.static_sum": [[2105, "ivy-container-static-sum"]], "ivy.Array.sum": [[2106, "ivy-array-sum"]], "ivy.Container.sum": [[2107, "ivy-container-sum"]], "ivy.sum": [[2108, "ivy-sum"]], "var": [[2109, "var"]], "ivy.Container.static_var": [[2110, "ivy-container-static-var"]], "ivy.Array.var": [[2111, "ivy-array-var"]], "ivy.Container.var": [[2112, "ivy-container-var"]], "ivy.var": [[2113, "ivy-var"]], "all": [[2115, "all"]], "ivy.Array.all": [[2116, "ivy-array-all"]], "ivy.Container.all": [[2117, "ivy-container-all"]], "ivy.all": [[2118, "ivy-all"]], "ivy.Container.static_all": [[2119, "ivy-container-static-all"]], "any": [[2120, "any"]], "ivy.Array.any": [[2121, "ivy-array-any"]], "ivy.Container.any": [[2122, "ivy-container-any"]], "ivy.any": [[2123, "ivy-any"]], "ivy.Container.static_any": [[2124, "ivy-container-static-any"]], "Glossary": [[2125, "glossary"]], "Contents": [[2126, "contents"]], "Overview": [[2126, "overview"]], "Quick Start": [[2126, "quick-start"]], "Citation": [[2126, "citation"]], "Nested array": [[2128, "module-ivy.nested_array.nested_array"]], "NestedArray": [[2129, "nestedarray"]], "Related Work": [[2130, "related-work"]], "API Standards": [[2131, "api-standards"], [2140, "api-standards"]], "Array API Standard": [[2131, "id1"]], "Compiler Infrastructure": [[2132, "compiler-infrastructure"], [2140, "compiler-infrastructure"]], "LLVM": [[2132, "id1"]], "MLIR": [[2132, "id2"]], "OneAPI": [[2132, "id3"]], "Exchange Formats": [[2133, "exchange-formats"], [2140, "exchange-formats"]], "ONNX onnx": [[2133, "onnx-onnx"]], "NNEF nnef": [[2133, "nnef-nnef"]], "CoreML coreml": [[2133, "coreml-coreml"]], "Frameworks": [[2134, "frameworks"], [2140, "frameworks"]], "MATLAB matlab": [[2134, "matlab-matlab"]], "SciPy scipy": [[2134, "scipy-scipy"]], "Torch torch": [[2134, "torch-torch"]], "NumPy numpy": [[2134, "numpy-numpy"]], "SciKit Learn scikit-learn": [[2134, "scikit-learn-scikit-learn"]], "Theano theano": [[2134, "theano-theano"]], "Pandas pandas": [[2134, "pandas-pandas"]], "Julia julia": [[2134, "julia-julia"]], "Apache Spark MLlib apache-spark-mllib": [[2134, "apache-spark-mllib-apache-spark-mllib"]], "Caffe caffe": [[2134, "caffe-caffe"]], "Chainer chainer": [[2134, "chainer-chainer"]], "TensorFlow 1 tensorflow-1": [[2134, "tensorflow-1-tensorflow-1"]], "MXNet mxnet": [[2134, "mxnet-mxnet"]], "CNTK cntk": [[2134, "cntk-cntk"]], "PyTorch pytorch": [[2134, "pytorch-pytorch"]], "Flux flux": [[2134, "flux-flux"]], "JAX jax": [[2134, "jax-jax"]], "TensorFlow 2 tensorflow-2": [[2134, "tensorflow-2-tensorflow-2"]], "DEX Language dex-language": [[2134, "dex-language-dex-language"]], "Graph Tracers": [[2135, "graph-tracers"], [2140, "graph-tracers"]], "tf.Graph": [[2135, "tf-graph"]], "Jaxpr": [[2135, "jaxpr"]], "torch.jit": [[2135, "torch-jit"]], "torch.fx": [[2135, "torch-fx"]], "ML-Unifying Companies": [[2136, "ml-unifying-companies"], [2140, "ml-unifying-companies"]], "Quansight": [[2136, "id1"]], "Modular": [[2136, "id2"]], "OctoML": [[2136, "id3"]], "Multi-Vendor Compiler Frameworks": [[2137, "multi-vendor-compiler-frameworks"], [2140, "multi-vendor-compiler-frameworks"]], "Apache TVM": [[2137, "apache-tvm"]], "XLA": [[2137, "xla"]], "GCC": [[2137, "gcc"]], "Vendor-Specific APIs": [[2138, "vendor-specific-apis"], [2140, "vendor-specific-apis"]], "TensorRT tensorrt": [[2138, "tensorrt-tensorrt"]], "CUDA cuda": [[2138, "cuda-cuda"]], "Vendor-Specific Compilers": [[2139, "vendor-specific-compilers"], [2140, "vendor-specific-compilers"]], "ICC": [[2139, "id1"]], "ICX": [[2139, "icx"]], "NVCC": [[2139, "nvcc"]], "What does Ivy Add?": [[2140, "what-does-ivy-add"]], "Wrapper Frameworks": [[2140, "wrapper-frameworks"], [2141, "wrapper-frameworks"]], "EagerPy eagerpy": [[2141, "eagerpy-eagerpy"]], "Keras keras": [[2141, "keras-keras"]], "Thinc thinc": [[2141, "thinc-thinc"]], "TensorLy tensorly": [[2141, "tensorly-tensorly"]], "NeuroPod": [[2141, "id1"]], "Framework classes": [[2142, "module-ivy.stateful"]], "GEGLU": [[2144, "geglu"]], "GELU": [[2145, "gelu"]], "Converters": [[2146, "module-ivy.stateful.converters"]], "ModuleConverters": [[2147, "moduleconverters"]], "to_ivy_module": [[2148, "to-ivy-module"]], "Helpers": [[2149, "module-ivy.stateful.helpers"]], "ModuleHelpers": [[2150, "modulehelpers"]], "Constant": [[2152, "constant"]], "FirstLayerSiren": [[2153, "firstlayersiren"]], "GlorotUniform": [[2154, "glorotuniform"]], "Initializer": [[2155, "initializer"]], "KaimingNormal": [[2156, "kaimingnormal"]], "Ones": [[2157, "ones"]], "Siren": [[2158, "siren"]], "Uniform": [[2159, "uniform"]], "Zeros": [[2160, "zeros"]], "Conv1D": [[2162, "conv1d"]], "Conv1DTranspose": [[2163, "conv1dtranspose"]], "Conv2D": [[2164, "conv2d"]], "Conv2DTranspose": [[2165, "conv2dtranspose"]], "Conv3D": [[2166, "conv3d"]], "Conv3DTranspose": [[2167, "conv3dtranspose"]], "DepthwiseConv2D": [[2168, "depthwiseconv2d"]], "Dropout": [[2169, "dropout"]], "LSTM": [[2170, "lstm"]], "Linear": [[2171, "linear"]], "MultiHeadAttention": [[2172, "multiheadattention"]], "Module": [[2173, "module-ivy.stateful.module"], [2174, "module"]], "LayerNorm": [[2176, "layernorm"]], "Adam": [[2178, "adam"]], "LAMB": [[2179, "lamb"]], "LARS": [[2180, "lars"]], "Optimizer": [[2181, "optimizer"]], "SGD": [[2182, "sgd"]], "Sequential": [[2183, "module-ivy.stateful.sequential"], [2184, "sequential"]], "Assertions": [[2186, "module-ivy_tests.test_ivy.helpers.assertions"], [2285, "module-ivy.utils.assertions"]], "assert_all_close": [[2187, "assert-all-close"]], "assert_same_type_and_shape": [[2188, "assert-same-type-and-shape"]], "check_unsupported_device": [[2189, "check-unsupported-device"]], "check_unsupported_device_and_dtype": [[2190, "check-unsupported-device-and-dtype"]], "check_unsupported_dtype": [[2191, "check-unsupported-dtype"]], "test_unsupported_function": [[2192, "test-unsupported-function"]], "value_test": [[2193, "value-test"]], "Available frameworks": [[2194, "module-ivy_tests.test_ivy.helpers.available_frameworks"]], "available_frameworks": [[2195, "available-frameworks"]], "ground_truth": [[2196, "ground-truth"]], "Function testing": [[2197, "module-ivy_tests.test_ivy.helpers.function_testing"]], "args_to_container": [[2198, "args-to-container"]], "as_cont": [[2199, "as-cont"]], "as_lists": [[2200, "as-lists"]], "convtrue": [[2201, "convtrue"]], "create_args_kwargs": [[2202, "create-args-kwargs"]], "create_frontend_args_kwargs": [[2203, "create-frontend-args-kwargs"]], "empty_func": [[2204, "empty-func"]], "flatten_and_to_np": [[2206, "flatten-and-to-np"]], "flatten_fw_and_to_np": [[2207, "flatten-fw-and-to-np"]], "framework_comparator": [[2208, "framework-comparator"]], "get_frontend_ret": [[2209, "get-frontend-ret"]], "get_ret_and_flattened_np_array": [[2210, "get-ret-and-flattened-np-array"]], "gradient_incompatible_function": [[2211, "gradient-incompatible-function"]], "gradient_test": [[2212, "gradient-test"]], "gradient_unsupported_dtypes": [[2213, "gradient-unsupported-dtypes"]], "kwargs_to_args_n_kwargs": [[2214, "kwargs-to-args-n-kwargs"]], "make_json_pickable": [[2215, "make-json-pickable"], [2248, "make-json-pickable"]], "test_frontend_function": [[2216, "test-frontend-function"]], "test_frontend_method": [[2217, "test-frontend-method"]], "test_function": [[2218, "test-function"]], "test_method": [[2219, "test-method"]], "var_fn": [[2220, "var-fn"]], "Globals": [[2221, "module-ivy_tests.test_ivy.helpers.globals"]], "InterruptedTest": [[2222, "interruptedtest"]], "TestData": [[2223, "testdata"]], "remove_all_current_framework": [[2224, "remove-all-current-framework"]], "setup_api_test": [[2225, "setup-api-test"]], "setup_frontend_test": [[2226, "setup-frontend-test"]], "teardown_api_test": [[2227, "teardown-api-test"]], "teardown_frontend_test": [[2228, "teardown-frontend-test"]], "Hypothesis helpers": [[2229, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"]], "Array helpers": [[2230, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers"]], "array_and_broadcastable_shape": [[2231, "array-and-broadcastable-shape"]], "array_bools": [[2232, "array-bools"]], "array_indices_axis": [[2233, "array-indices-axis"]], "array_values": [[2234, "array-values"]], "arrays_and_axes": [[2235, "arrays-and-axes"]], "arrays_for_pooling": [[2236, "arrays-for-pooling"]], "dtype_and_values": [[2238, "dtype-and-values"]], "dtype_values_axis": [[2239, "dtype-values-axis"]], "list_of_size": [[2240, "list-of-size"]], "lists": [[2241, "lists"]], "mutually_broadcastable_shapes": [[2242, "mutually-broadcastable-shapes"]], "Dtype helpers": [[2244, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers"]], "array_dtypes": [[2245, "array-dtypes"]], "get_castable_dtype": [[2246, "get-castable-dtype"]], "get_dtypes": [[2247, "get-dtypes"]], "General helpers": [[2249, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers"]], "apply_safety_factor": [[2250, "apply-safety-factor"]], "embedding_helper": [[2251, "embedding-helper"]], "get_axis": [[2252, "get-axis"]], "get_bounds": [[2253, "get-bounds"]], "get_mean_std": [[2254, "get-mean-std"]], "get_shape": [[2255, "get-shape"]], "matrix_is_stable": [[2256, "matrix-is-stable"]], "reshape_shapes": [[2257, "reshape-shapes"]], "subsets": [[2258, "subsets"]], "x_and_filters": [[2259, "x-and-filters"]], "Number helpers": [[2260, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers"]], "floats": [[2261, "floats"]], "ints": [[2262, "ints"]], "number": [[2263, "number"]], "Structs": [[2264, "module-ivy_tests.test_ivy.helpers.structs"]], "FrontendMethodData": [[2265, "frontendmethoddata"]], "Test parameter flags": [[2266, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"]], "FrontendFunctionTestFlags": [[2267, "frontendfunctiontestflags"]], "FrontendMethodTestFlags": [[2268, "frontendmethodtestflags"]], "FunctionTestFlags": [[2269, "functiontestflags"]], "MethodTestFlags": [[2270, "methodtestflags"]], "build_flag": [[2271, "build-flag"]], "frontend_function_flags": [[2272, "frontend-function-flags"]], "frontend_method_flags": [[2273, "frontend-method-flags"]], "function_flags": [[2274, "function-flags"]], "method_flags": [[2275, "method-flags"]], "Testing helpers": [[2276, "module-ivy_tests.test_ivy.helpers.testing_helpers"]], "handle_frontend_method": [[2277, "handle-frontend-method"]], "handle_frontend_test": [[2278, "handle-frontend-test"]], "handle_method": [[2279, "handle-method"]], "handle_test": [[2280, "handle-test"]], "num_positional_args": [[2281, "num-positional-args"]], "num_positional_args_method": [[2282, "num-positional-args-method"]], "check_all": [[2286, "check-all"]], "check_all_or_any_fn": [[2287, "check-all-or-any-fn"]], "check_any": [[2288, "check-any"]], "check_dimensions": [[2289, "check-dimensions"]], "check_elem_in_list": [[2290, "check-elem-in-list"]], "check_equal": [[2291, "check-equal"]], "check_exists": [[2292, "check-exists"]], "check_false": [[2293, "check-false"]], "check_fill_value_and_dtype_are_compatible": [[2294, "check-fill-value-and-dtype-are-compatible"]], "check_gather_input_valid": [[2295, "check-gather-input-valid"]], "check_gather_nd_input_valid": [[2296, "check-gather-nd-input-valid"]], "check_greater": [[2297, "check-greater"]], "check_inplace_sizes_valid": [[2298, "check-inplace-sizes-valid"]], "check_isinstance": [[2299, "check-isinstance"]], "check_kernel_padding_size": [[2300, "check-kernel-padding-size"]], "check_less": [[2301, "check-less"]], "check_one_way_broadcastable": [[2302, "check-one-way-broadcastable"]], "check_same_dtype": [[2303, "check-same-dtype"]], "check_shape": [[2304, "check-shape"]], "check_shapes_broadcastable": [[2305, "check-shapes-broadcastable"]], "check_true": [[2306, "check-true"]], "Backend": [[2307, "module-ivy.utils.backend"]], "Ast helpers": [[2308, "module-ivy.utils.backend.ast_helpers"]], "ImportTransformer": [[2309, "importtransformer"]], "IvyLoader": [[2310, "ivyloader"]], "IvyPathFinder": [[2311, "ivypathfinder"]], "Handler": [[2312, "module-ivy.utils.backend.handler"]], "ContextManager": [[2313, "contextmanager"]], "choose_random_backend": [[2314, "choose-random-backend"]], "clear_backend_stack": [[2315, "clear-backend-stack"]], "convert_from_numpy_to_target_backend": [[2316, "convert-from-numpy-to-target-backend"]], "convert_from_source_backend_to_numpy": [[2317, "convert-from-source-backend-to-numpy"]], "current_backend": [[2318, "current-backend"]], "fn_name_from_version_specific_fn_name": [[2319, "fn-name-from-version-specific-fn-name"]], "get_backend": [[2320, "get-backend"]], "prevent_access_locally": [[2321, "prevent-access-locally"]], "set_backend": [[2322, "set-backend"]], "set_backend_to_specific_version": [[2323, "set-backend-to-specific-version"]], "set_jax_backend": [[2324, "set-jax-backend"]], "set_numpy_backend": [[2325, "set-numpy-backend"]], "set_tensorflow_backend": [[2326, "set-tensorflow-backend"]], "set_torch_backend": [[2327, "set-torch-backend"]], "unset_backend": [[2328, "unset-backend"]], "with_backend": [[2329, "with-backend"]], "Dynamic import": [[2330, "module-ivy.utils.dynamic_import"]], "import_module": [[2331, "import-module"]], "Inspection": [[2332, "module-ivy.utils.inspection"]], "add_array_specs": [[2333, "add-array-specs"]], "fn_array_spec": [[2334, "fn-array-spec"]], "Verbosity": [[2335, "module-ivy.utils.verbosity"]], "cprint": [[2336, "cprint"]]}, "indexentries": {"ivy._version": [[0, "module-ivy._version"]], "module": [[0, "module-ivy._version"], [13, "module-ivy.array.array"], [14, "module-ivy.array.activations"], [16, "module-ivy.array.array"], [18, "module-ivy.array.conversions"], [23, "module-ivy.array.creation"], [25, "module-ivy.array.data_type"], [27, "module-ivy.array.device"], [29, "module-ivy.array.elementwise"], [32, "module-ivy.array.general"], [34, "module-ivy.array.gradients"], [36, "module-ivy.array.image"], [38, "module-ivy.array.layers"], [40, "module-ivy.array.linear_algebra"], [42, "module-ivy.array.losses"], [44, "module-ivy.array.manipulation"], [46, "module-ivy.array.norms"], [48, "module-ivy.array.random"], [50, "module-ivy.array.searching"], [52, "module-ivy.array.set"], [54, "module-ivy.array.sorting"], [56, "module-ivy.array.statistical"], [58, "module-ivy.array.utility"], [60, "module-ivy.array.wrapping"], [62, "module-ivy.container.container"], [63, "module-ivy.container.activations"], [65, "module-ivy.container.base"], [67, "module-ivy.container.container"], [69, "module-ivy.container.conversions"], [71, "module-ivy.container.creation"], [73, "module-ivy.container.data_type"], [75, "module-ivy.container.device"], [77, "module-ivy.container.elementwise"], [80, "module-ivy.container.general"], [82, "module-ivy.container.gradients"], [84, "module-ivy.container.image"], [86, "module-ivy.container.layers"], [88, "module-ivy.container.linear_algebra"], [90, "module-ivy.container.losses"], [92, "module-ivy.container.manipulation"], [94, "module-ivy.container.norms"], [96, "module-ivy.container.random"], [98, "module-ivy.container.searching"], [100, "module-ivy.container.set"], [102, "module-ivy.container.sorting"], [104, "module-ivy.container.statistical"], [106, "module-ivy.container.utility"], [108, "module-ivy.container.wrapping"], [150, "module-ivy.func_wrapper"], [169, "module-ivy.functional.ivy.activations"], [213, "module-ivy.functional.ivy.constants"], [214, "module-ivy.functional.ivy.control_flow_ops"], [219, "module-ivy.functional.ivy.creation"], [305, "module-ivy.functional.ivy.data_type"], [410, "module-ivy.functional.ivy.device"], [445, "module-ivy.functional.ivy.elementwise"], [766, "module-ivy.functional.ivy.experimental"], [769, "module-ivy.functional.ivy.experimental.activations"], [854, "module-ivy.functional.ivy.experimental.constants"], [870, "module-ivy.functional.ivy.experimental.creation"], [879, "module-ivy.functional.ivy.experimental.data_type"], [886, "module-ivy.functional.ivy.experimental.device"], [933, "module-ivy.functional.ivy.experimental.elementwise"], [1037, "module-ivy.functional.ivy.experimental.general"], [1044, "module-ivy.functional.ivy.experimental.gradients"], [1131, "module-ivy.functional.ivy.experimental.layers"], [1164, "module-ivy.functional.ivy.experimental.linear_algebra"], [1183, "module-ivy.functional.ivy.experimental.losses"], [1190, "module-ivy.functional.ivy.experimental.manipulation"], [1239, "module-ivy.functional.ivy.experimental.meta"], [1275, "module-ivy.functional.ivy.experimental.nest"], [1281, "module-ivy.functional.ivy.experimental.norms"], [1306, "module-ivy.functional.ivy.experimental.random"], [1327, "module-ivy.functional.ivy.experimental.searching"], [1328, "module-ivy.functional.ivy.experimental.set"], [1339, "module-ivy.functional.ivy.experimental.sorting"], [1342, "module-ivy.functional.ivy.experimental.sparse_array"], [1349, "module-ivy.functional.ivy.experimental.statistical"], [1388, "module-ivy.functional.ivy.experimental.utility"], [1414, "module-ivy.functional.ivy.general"], [1609, "module-ivy.functional.ivy.gradients"], [1647, "module-ivy.functional.ivy.layers"], [1711, "module-ivy.functional.ivy.linear_algebra"], [1852, "module-ivy.functional.ivy.losses"], [1868, "module-ivy.functional.ivy.manipulation"], [1949, "module-ivy.functional.ivy.meta"], [1953, "module-ivy.functional.ivy.nest"], [1973, "module-ivy.functional.ivy.norms"], [1978, "module-ivy.functional.ivy.random"], [2005, "module-ivy.functional.ivy.searching"], [2031, "module-ivy.functional.ivy.set"], [2052, "module-ivy.functional.ivy.sorting"], [2068, "module-ivy.functional.ivy.statistical"], [2114, "module-ivy.functional.ivy.utility"], [2128, "module-ivy.nested_array.nested_array"], [2142, "module-ivy.stateful"], [2143, "module-ivy.stateful.activations"], [2146, "module-ivy.stateful.converters"], [2149, "module-ivy.stateful.helpers"], [2151, "module-ivy.stateful.initializers"], [2161, "module-ivy.stateful.layers"], [2173, "module-ivy.stateful.module"], [2175, "module-ivy.stateful.norms"], [2177, "module-ivy.stateful.optimizers"], [2183, "module-ivy.stateful.sequential"], [2186, "module-ivy_tests.test_ivy.helpers.assertions"], [2194, "module-ivy_tests.test_ivy.helpers.available_frameworks"], [2197, "module-ivy_tests.test_ivy.helpers.function_testing"], [2221, "module-ivy_tests.test_ivy.helpers.globals"], [2229, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"], [2230, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers"], [2244, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers"], [2249, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers"], [2260, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers"], [2264, "module-ivy_tests.test_ivy.helpers.structs"], [2266, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"], [2276, "module-ivy_tests.test_ivy.helpers.testing_helpers"], [2284, "module-ivy.utils._importlib"], [2285, "module-ivy.utils.assertions"], [2307, "module-ivy.utils.backend"], [2308, "module-ivy.utils.backend.ast_helpers"], [2312, "module-ivy.utils.backend.handler"], [2330, "module-ivy.utils.dynamic_import"], [2332, "module-ivy.utils.inspection"], [2335, "module-ivy.utils.verbosity"]], "array (class in ivy.array.array)": [[13, "ivy.array.array.Array"], [16, "ivy.array.array.Array"], [17, "ivy.array.array.Array"]], "t (ivy.array.array.array property)": [[13, "ivy.array.array.Array.T"], [16, "ivy.array.array.Array.T"], [17, "ivy.array.array.Array.T"]], "__abs__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__abs__"], [16, "ivy.array.array.Array.__abs__"], [17, "ivy.array.array.Array.__abs__"]], "__add__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__add__"], [16, "ivy.array.array.Array.__add__"], [17, "ivy.array.array.Array.__add__"]], "__eq__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__eq__"], [16, "ivy.array.array.Array.__eq__"], [17, "ivy.array.array.Array.__eq__"]], "__ge__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__ge__"], [16, "ivy.array.array.Array.__ge__"], [17, "ivy.array.array.Array.__ge__"]], "__gt__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__gt__"], [16, "ivy.array.array.Array.__gt__"], [17, "ivy.array.array.Array.__gt__"]], "__init__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__init__"], [16, "ivy.array.array.Array.__init__"], [17, "ivy.array.array.Array.__init__"]], "__le__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__le__"], [16, "ivy.array.array.Array.__le__"], [17, "ivy.array.array.Array.__le__"]], "__lt__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__lt__"], [16, "ivy.array.array.Array.__lt__"], [17, "ivy.array.array.Array.__lt__"]], "__ne__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__ne__"], [16, "ivy.array.array.Array.__ne__"], [17, "ivy.array.array.Array.__ne__"]], "__pow__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__pow__"], [16, "ivy.array.array.Array.__pow__"], [17, "ivy.array.array.Array.__pow__"]], "__radd__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__radd__"], [16, "ivy.array.array.Array.__radd__"], [17, "ivy.array.array.Array.__radd__"]], "__rrshift__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__rrshift__"], [16, "ivy.array.array.Array.__rrshift__"], [17, "ivy.array.array.Array.__rrshift__"]], "__rshift__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__rshift__"], [16, "ivy.array.array.Array.__rshift__"], [17, "ivy.array.array.Array.__rshift__"]], "__rsub__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__rsub__"], [16, "ivy.array.array.Array.__rsub__"], [17, "ivy.array.array.Array.__rsub__"]], "__sub__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__sub__"], [16, "ivy.array.array.Array.__sub__"], [17, "ivy.array.array.Array.__sub__"]], "__truediv__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__truediv__"], [16, "ivy.array.array.Array.__truediv__"], [17, "ivy.array.array.Array.__truediv__"]], "__xor__() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.__xor__"], [16, "ivy.array.array.Array.__xor__"], [17, "ivy.array.array.Array.__xor__"]], "arange() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.arange"], [16, "ivy.array.array.Array.arange"], [17, "ivy.array.array.Array.arange"]], "arg_info() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.arg_info"], [16, "ivy.array.array.Array.arg_info"], [17, "ivy.array.array.Array.arg_info"]], "arg_names() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.arg_names"], [16, "ivy.array.array.Array.arg_names"], [17, "ivy.array.array.Array.arg_names"]], "args_to_ivy() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.args_to_ivy"], [16, "ivy.array.array.Array.args_to_ivy"], [17, "ivy.array.array.Array.args_to_ivy"]], "args_to_native() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.args_to_native"], [16, "ivy.array.array.Array.args_to_native"], [17, "ivy.array.array.Array.args_to_native"]], "array() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.array"], [16, "ivy.array.array.Array.array"], [17, "ivy.array.array.Array.array"]], "as_ivy_dev() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.as_ivy_dev"], [16, "ivy.array.array.Array.as_ivy_dev"], [17, "ivy.array.array.Array.as_ivy_dev"]], "as_ivy_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.as_ivy_dtype"], [16, "ivy.array.array.Array.as_ivy_dtype"], [17, "ivy.array.array.Array.as_ivy_dtype"]], "as_native_dev() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.as_native_dev"], [16, "ivy.array.array.Array.as_native_dev"], [17, "ivy.array.array.Array.as_native_dev"]], "as_native_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.as_native_dtype"], [16, "ivy.array.array.Array.as_native_dtype"], [17, "ivy.array.array.Array.as_native_dtype"]], "asarray_handle_nestable() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.asarray_handle_nestable"], [16, "ivy.array.array.Array.asarray_handle_nestable"], [17, "ivy.array.array.Array.asarray_handle_nestable"]], "asarray_infer_device() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.asarray_infer_device"], [16, "ivy.array.array.Array.asarray_infer_device"], [17, "ivy.array.array.Array.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.asarray_to_native_arrays_and_back"], [16, "ivy.array.array.Array.asarray_to_native_arrays_and_back"], [17, "ivy.array.array.Array.asarray_to_native_arrays_and_back"]], "cache_fn() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.cache_fn"], [16, "ivy.array.array.Array.cache_fn"], [17, "ivy.array.array.Array.cache_fn"]], "check_float() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.check_float"], [16, "ivy.array.array.Array.check_float"], [17, "ivy.array.array.Array.check_float"]], "clear_mem_on_dev() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.clear_mem_on_dev"], [16, "ivy.array.array.Array.clear_mem_on_dev"], [17, "ivy.array.array.Array.clear_mem_on_dev"]], "closest_valid_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.closest_valid_dtype"], [16, "ivy.array.array.Array.closest_valid_dtype"], [17, "ivy.array.array.Array.closest_valid_dtype"]], "container_types() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.container_types"], [16, "ivy.array.array.Array.container_types"], [17, "ivy.array.array.Array.container_types"]], "conv() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.conv"], [16, "ivy.array.array.Array.conv"], [17, "ivy.array.array.Array.conv"]], "conv_general_dilated() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.conv_general_dilated"], [16, "ivy.array.array.Array.conv_general_dilated"], [17, "ivy.array.array.Array.conv_general_dilated"]], "conv_general_transpose() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.conv_general_transpose"], [16, "ivy.array.array.Array.conv_general_transpose"], [17, "ivy.array.array.Array.conv_general_transpose"]], "current_backend() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.current_backend"], [16, "ivy.array.array.Array.current_backend"], [17, "ivy.array.array.Array.current_backend"]], "current_backend_str() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.current_backend_str"], [16, "ivy.array.array.Array.current_backend_str"], [17, "ivy.array.array.Array.current_backend_str"]], "data (ivy.array.array.array property)": [[13, "ivy.array.array.Array.data"], [16, "ivy.array.array.Array.data"], [17, "ivy.array.array.Array.data"]], "default_complex_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.default_complex_dtype"], [16, "ivy.array.array.Array.default_complex_dtype"], [17, "ivy.array.array.Array.default_complex_dtype"]], "default_device() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.default_device"], [16, "ivy.array.array.Array.default_device"], [17, "ivy.array.array.Array.default_device"]], "default_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.default_dtype"], [16, "ivy.array.array.Array.default_dtype"], [17, "ivy.array.array.Array.default_dtype"]], "default_float_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.default_float_dtype"], [16, "ivy.array.array.Array.default_float_dtype"], [17, "ivy.array.array.Array.default_float_dtype"]], "default_int_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.default_int_dtype"], [16, "ivy.array.array.Array.default_int_dtype"], [17, "ivy.array.array.Array.default_int_dtype"]], "default_uint_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.default_uint_dtype"], [16, "ivy.array.array.Array.default_uint_dtype"], [17, "ivy.array.array.Array.default_uint_dtype"]], "deserialize() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.deserialize"], [16, "ivy.array.array.Array.deserialize"], [17, "ivy.array.array.Array.deserialize"]], "dev_util() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.dev_util"], [16, "ivy.array.array.Array.dev_util"], [17, "ivy.array.array.Array.dev_util"]], "device (ivy.array.array.array property)": [[13, "ivy.array.array.Array.device"], [16, "ivy.array.array.Array.device"], [17, "ivy.array.array.Array.device"]], "dtype (ivy.array.array.array property)": [[13, "ivy.array.array.Array.dtype"], [16, "ivy.array.array.Array.dtype"], [17, "ivy.array.array.Array.dtype"]], "dtype_bits() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.dtype_bits"], [16, "ivy.array.array.Array.dtype_bits"], [17, "ivy.array.array.Array.dtype_bits"]], "dynamic_backend (ivy.array.array.array property)": [[13, "ivy.array.array.Array.dynamic_backend"], [16, "ivy.array.array.Array.dynamic_backend"], [17, "ivy.array.array.Array.dynamic_backend"]], "empty() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.empty"], [16, "ivy.array.array.Array.empty"], [17, "ivy.array.array.Array.empty"]], "execute_with_gradients() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.execute_with_gradients"], [16, "ivy.array.array.Array.execute_with_gradients"], [17, "ivy.array.array.Array.execute_with_gradients"]], "eye() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.eye"], [16, "ivy.array.array.Array.eye"], [17, "ivy.array.array.Array.eye"]], "full() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.full"], [16, "ivy.array.array.Array.full"], [17, "ivy.array.array.Array.full"]], "function_supported_devices() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.function_supported_devices"], [16, "ivy.array.array.Array.function_supported_devices"], [17, "ivy.array.array.Array.function_supported_devices"]], "function_supported_devices_and_dtypes() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.function_supported_devices_and_dtypes"], [16, "ivy.array.array.Array.function_supported_devices_and_dtypes"], [17, "ivy.array.array.Array.function_supported_devices_and_dtypes"]], "function_supported_dtypes() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.function_supported_dtypes"], [16, "ivy.array.array.Array.function_supported_dtypes"], [17, "ivy.array.array.Array.function_supported_dtypes"]], "function_unsupported_devices() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.function_unsupported_devices"], [16, "ivy.array.array.Array.function_unsupported_devices"], [17, "ivy.array.array.Array.function_unsupported_devices"]], "function_unsupported_devices_and_dtypes() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.function_unsupported_devices_and_dtypes"], [16, "ivy.array.array.Array.function_unsupported_devices_and_dtypes"], [17, "ivy.array.array.Array.function_unsupported_devices_and_dtypes"]], "function_unsupported_dtypes() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.function_unsupported_dtypes"], [16, "ivy.array.array.Array.function_unsupported_dtypes"], [17, "ivy.array.array.Array.function_unsupported_dtypes"]], "get() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.get"], [16, "ivy.array.array.Array.get"], [17, "ivy.array.array.Array.get"]], "get_all_arrays_in_memory() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.get_all_arrays_in_memory"], [16, "ivy.array.array.Array.get_all_arrays_in_memory"], [17, "ivy.array.array.Array.get_all_arrays_in_memory"]], "get_all_ivy_arrays_on_dev() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.get_all_ivy_arrays_on_dev"], [16, "ivy.array.array.Array.get_all_ivy_arrays_on_dev"], [17, "ivy.array.array.Array.get_all_ivy_arrays_on_dev"]], "get_array_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.get_array_mode"], [16, "ivy.array.array.Array.get_array_mode"], [17, "ivy.array.array.Array.get_array_mode"]], "get_exception_trace_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.get_exception_trace_mode"], [16, "ivy.array.array.Array.get_exception_trace_mode"], [17, "ivy.array.array.Array.get_exception_trace_mode"]], "get_item() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.get_item"], [16, "ivy.array.array.Array.get_item"], [17, "ivy.array.array.Array.get_item"]], "get_min_base() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.get_min_base"], [16, "ivy.array.array.Array.get_min_base"], [17, "ivy.array.array.Array.get_min_base"]], "get_min_denominator() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.get_min_denominator"], [16, "ivy.array.array.Array.get_min_denominator"], [17, "ivy.array.array.Array.get_min_denominator"]], "get_nestable_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.get_nestable_mode"], [16, "ivy.array.array.Array.get_nestable_mode"], [17, "ivy.array.array.Array.get_nestable_mode"]], "get_queue_timeout() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.get_queue_timeout"], [16, "ivy.array.array.Array.get_queue_timeout"], [17, "ivy.array.array.Array.get_queue_timeout"]], "get_referrers_recursive() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.get_referrers_recursive"], [16, "ivy.array.array.Array.get_referrers_recursive"], [17, "ivy.array.array.Array.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.get_show_func_wrapper_trace_mode"], [16, "ivy.array.array.Array.get_show_func_wrapper_trace_mode"], [17, "ivy.array.array.Array.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.get_tmp_dir"], [16, "ivy.array.array.Array.get_tmp_dir"], [17, "ivy.array.array.Array.get_tmp_dir"]], "gpu_is_available() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.gpu_is_available"], [16, "ivy.array.array.Array.gpu_is_available"], [17, "ivy.array.array.Array.gpu_is_available"]], "grad() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.grad"], [16, "ivy.array.array.Array.grad"], [17, "ivy.array.array.Array.grad"]], "handle_array_function() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.handle_array_function"], [16, "ivy.array.array.Array.handle_array_function"], [17, "ivy.array.array.Array.handle_array_function"]], "handle_array_like_without_promotion() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.handle_array_like_without_promotion"], [16, "ivy.array.array.Array.handle_array_like_without_promotion"], [17, "ivy.array.array.Array.handle_array_like_without_promotion"]], "handle_exceptions() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.handle_exceptions"], [16, "ivy.array.array.Array.handle_exceptions"], [17, "ivy.array.array.Array.handle_exceptions"]], "handle_nestable() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.handle_nestable"], [16, "ivy.array.array.Array.handle_nestable"], [17, "ivy.array.array.Array.handle_nestable"]], "handle_out_argument() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.handle_out_argument"], [16, "ivy.array.array.Array.handle_out_argument"], [17, "ivy.array.array.Array.handle_out_argument"]], "handle_view() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.handle_view"], [16, "ivy.array.array.Array.handle_view"], [17, "ivy.array.array.Array.handle_view"]], "handle_view_indexing() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.handle_view_indexing"], [16, "ivy.array.array.Array.handle_view_indexing"], [17, "ivy.array.array.Array.handle_view_indexing"]], "infer_default_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.infer_default_dtype"], [16, "ivy.array.array.Array.infer_default_dtype"], [17, "ivy.array.array.Array.infer_default_dtype"]], "infer_device() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.infer_device"], [16, "ivy.array.array.Array.infer_device"], [17, "ivy.array.array.Array.infer_device"]], "infer_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.infer_dtype"], [16, "ivy.array.array.Array.infer_dtype"], [17, "ivy.array.array.Array.infer_dtype"]], "inplace_arrays_supported() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.inplace_arrays_supported"], [16, "ivy.array.array.Array.inplace_arrays_supported"], [17, "ivy.array.array.Array.inplace_arrays_supported"]], "inplace_variables_supported() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.inplace_variables_supported"], [16, "ivy.array.array.Array.inplace_variables_supported"], [17, "ivy.array.array.Array.inplace_variables_supported"]], "inputs_to_ivy_arrays() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.inputs_to_ivy_arrays"], [16, "ivy.array.array.Array.inputs_to_ivy_arrays"], [17, "ivy.array.array.Array.inputs_to_ivy_arrays"]], "inputs_to_native_arrays() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.inputs_to_native_arrays"], [16, "ivy.array.array.Array.inputs_to_native_arrays"], [17, "ivy.array.array.Array.inputs_to_native_arrays"]], "integer_arrays_to_float() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.integer_arrays_to_float"], [16, "ivy.array.array.Array.integer_arrays_to_float"], [17, "ivy.array.array.Array.integer_arrays_to_float"]], "invalid_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.invalid_dtype"], [16, "ivy.array.array.Array.invalid_dtype"], [17, "ivy.array.array.Array.invalid_dtype"]], "is_complex_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.is_complex_dtype"], [16, "ivy.array.array.Array.is_complex_dtype"], [17, "ivy.array.array.Array.is_complex_dtype"]], "isscalar() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.isscalar"], [16, "ivy.array.array.Array.isscalar"], [17, "ivy.array.array.Array.isscalar"]], "ivy.array.array": [[13, "module-ivy.array.array"], [16, "module-ivy.array.array"]], "jac() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.jac"], [16, "ivy.array.array.Array.jac"], [17, "ivy.array.array.Array.jac"]], "lu_factor() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.lu_factor"], [16, "ivy.array.array.Array.lu_factor"], [17, "ivy.array.array.Array.lu_factor"]], "mt (ivy.array.array.array property)": [[13, "ivy.array.array.Array.mT"], [16, "ivy.array.array.Array.mT"], [17, "ivy.array.array.Array.mT"]], "match_kwargs() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.match_kwargs"], [16, "ivy.array.array.Array.match_kwargs"], [17, "ivy.array.array.Array.match_kwargs"]], "multiprocessing() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.multiprocessing"], [16, "ivy.array.array.Array.multiprocessing"], [17, "ivy.array.array.Array.multiprocessing"]], "ndim (ivy.array.array.array property)": [[13, "ivy.array.array.Array.ndim"], [16, "ivy.array.array.Array.ndim"], [17, "ivy.array.array.Array.ndim"]], "normalize_axis_tuple() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.normalize_axis_tuple"], [16, "ivy.array.array.Array.normalize_axis_tuple"], [17, "ivy.array.array.Array.normalize_axis_tuple"]], "num_arrays_in_memory() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.num_arrays_in_memory"], [16, "ivy.array.array.Array.num_arrays_in_memory"], [17, "ivy.array.array.Array.num_arrays_in_memory"]], "num_cpu_cores() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.num_cpu_cores"], [16, "ivy.array.array.Array.num_cpu_cores"], [17, "ivy.array.array.Array.num_cpu_cores"]], "num_gpus() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.num_gpus"], [16, "ivy.array.array.Array.num_gpus"], [17, "ivy.array.array.Array.num_gpus"]], "num_ivy_arrays_on_dev() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.num_ivy_arrays_on_dev"], [16, "ivy.array.array.Array.num_ivy_arrays_on_dev"], [17, "ivy.array.array.Array.num_ivy_arrays_on_dev"]], "ones() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.ones"], [16, "ivy.array.array.Array.ones"], [17, "ivy.array.array.Array.ones"]], "outputs_to_ivy_arrays() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.outputs_to_ivy_arrays"], [16, "ivy.array.array.Array.outputs_to_ivy_arrays"], [17, "ivy.array.array.Array.outputs_to_ivy_arrays"]], "percent_used_mem_on_dev() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.percent_used_mem_on_dev"], [16, "ivy.array.array.Array.percent_used_mem_on_dev"], [17, "ivy.array.array.Array.percent_used_mem_on_dev"]], "print_all_arrays_in_memory() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.print_all_arrays_in_memory"], [16, "ivy.array.array.Array.print_all_arrays_in_memory"], [17, "ivy.array.array.Array.print_all_arrays_in_memory"]], "print_all_ivy_arrays_on_dev() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.print_all_ivy_arrays_on_dev"], [16, "ivy.array.array.Array.print_all_ivy_arrays_on_dev"], [17, "ivy.array.array.Array.print_all_ivy_arrays_on_dev"]], "promote_types() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.promote_types"], [16, "ivy.array.array.Array.promote_types"], [17, "ivy.array.array.Array.promote_types"]], "promote_types_of_inputs() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.promote_types_of_inputs"], [16, "ivy.array.array.Array.promote_types_of_inputs"], [17, "ivy.array.array.Array.promote_types_of_inputs"]], "seed() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.seed"], [16, "ivy.array.array.Array.seed"], [17, "ivy.array.array.Array.seed"]], "set_array_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_array_mode"], [16, "ivy.array.array.Array.set_array_mode"], [17, "ivy.array.array.Array.set_array_mode"]], "set_default_complex_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_default_complex_dtype"], [16, "ivy.array.array.Array.set_default_complex_dtype"], [17, "ivy.array.array.Array.set_default_complex_dtype"]], "set_default_device() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_default_device"], [16, "ivy.array.array.Array.set_default_device"], [17, "ivy.array.array.Array.set_default_device"]], "set_default_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_default_dtype"], [16, "ivy.array.array.Array.set_default_dtype"], [17, "ivy.array.array.Array.set_default_dtype"]], "set_default_float_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_default_float_dtype"], [16, "ivy.array.array.Array.set_default_float_dtype"], [17, "ivy.array.array.Array.set_default_float_dtype"]], "set_default_int_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_default_int_dtype"], [16, "ivy.array.array.Array.set_default_int_dtype"], [17, "ivy.array.array.Array.set_default_int_dtype"]], "set_default_uint_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_default_uint_dtype"], [16, "ivy.array.array.Array.set_default_uint_dtype"], [17, "ivy.array.array.Array.set_default_uint_dtype"]], "set_exception_trace_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_exception_trace_mode"], [16, "ivy.array.array.Array.set_exception_trace_mode"], [17, "ivy.array.array.Array.set_exception_trace_mode"]], "set_min_base() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_min_base"], [16, "ivy.array.array.Array.set_min_base"], [17, "ivy.array.array.Array.set_min_base"]], "set_min_denominator() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_min_denominator"], [16, "ivy.array.array.Array.set_min_denominator"], [17, "ivy.array.array.Array.set_min_denominator"]], "set_nestable_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_nestable_mode"], [16, "ivy.array.array.Array.set_nestable_mode"], [17, "ivy.array.array.Array.set_nestable_mode"]], "set_queue_timeout() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_queue_timeout"], [16, "ivy.array.array.Array.set_queue_timeout"], [17, "ivy.array.array.Array.set_queue_timeout"]], "set_shape_array_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_shape_array_mode"], [16, "ivy.array.array.Array.set_shape_array_mode"], [17, "ivy.array.array.Array.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_show_func_wrapper_trace_mode"], [16, "ivy.array.array.Array.set_show_func_wrapper_trace_mode"], [17, "ivy.array.array.Array.set_show_func_wrapper_trace_mode"]], "set_split_factor() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_split_factor"], [16, "ivy.array.array.Array.set_split_factor"], [17, "ivy.array.array.Array.set_split_factor"]], "set_tmp_dir() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_tmp_dir"], [16, "ivy.array.array.Array.set_tmp_dir"], [17, "ivy.array.array.Array.set_tmp_dir"]], "set_with_grads() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.set_with_grads"], [16, "ivy.array.array.Array.set_with_grads"], [17, "ivy.array.array.Array.set_with_grads"]], "shape (ivy.array.array.array property)": [[13, "ivy.array.array.Array.shape"], [16, "ivy.array.array.Array.shape"], [17, "ivy.array.array.Array.shape"]], "shape_array_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.shape_array_mode"], [16, "ivy.array.array.Array.shape_array_mode"], [17, "ivy.array.array.Array.shape_array_mode"]], "size (ivy.array.array.array property)": [[13, "ivy.array.array.Array.size"], [16, "ivy.array.array.Array.size"], [17, "ivy.array.array.Array.size"]], "split_factor() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.split_factor"], [16, "ivy.array.array.Array.split_factor"], [17, "ivy.array.array.Array.split_factor"]], "split_func_call() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.split_func_call"], [16, "ivy.array.array.Array.split_func_call"], [17, "ivy.array.array.Array.split_func_call"]], "to_ivy() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.to_ivy"], [16, "ivy.array.array.Array.to_ivy"], [17, "ivy.array.array.Array.to_ivy"]], "to_ivy_shape() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.to_ivy_shape"], [16, "ivy.array.array.Array.to_ivy_shape"], [17, "ivy.array.array.Array.to_ivy_shape"]], "to_native() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.to_native"], [16, "ivy.array.array.Array.to_native"], [17, "ivy.array.array.Array.to_native"]], "to_native_arrays_and_back() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.to_native_arrays_and_back"], [16, "ivy.array.array.Array.to_native_arrays_and_back"], [17, "ivy.array.array.Array.to_native_arrays_and_back"]], "to_native_shape() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.to_native_shape"], [16, "ivy.array.array.Array.to_native_shape"], [17, "ivy.array.array.Array.to_native_shape"]], "total_mem_on_dev() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.total_mem_on_dev"], [16, "ivy.array.array.Array.total_mem_on_dev"], [17, "ivy.array.array.Array.total_mem_on_dev"]], "tpu_is_available() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.tpu_is_available"], [16, "ivy.array.array.Array.tpu_is_available"], [17, "ivy.array.array.Array.tpu_is_available"]], "try_else_none() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.try_else_none"], [16, "ivy.array.array.Array.try_else_none"], [17, "ivy.array.array.Array.try_else_none"]], "type_promote_arrays() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.type_promote_arrays"], [16, "ivy.array.array.Array.type_promote_arrays"], [17, "ivy.array.array.Array.type_promote_arrays"]], "unset_array_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.unset_array_mode"], [16, "ivy.array.array.Array.unset_array_mode"], [17, "ivy.array.array.Array.unset_array_mode"]], "unset_default_complex_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.unset_default_complex_dtype"], [16, "ivy.array.array.Array.unset_default_complex_dtype"], [17, "ivy.array.array.Array.unset_default_complex_dtype"]], "unset_default_device() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.unset_default_device"], [16, "ivy.array.array.Array.unset_default_device"], [17, "ivy.array.array.Array.unset_default_device"]], "unset_default_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.unset_default_dtype"], [16, "ivy.array.array.Array.unset_default_dtype"], [17, "ivy.array.array.Array.unset_default_dtype"]], "unset_default_float_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.unset_default_float_dtype"], [16, "ivy.array.array.Array.unset_default_float_dtype"], [17, "ivy.array.array.Array.unset_default_float_dtype"]], "unset_default_int_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.unset_default_int_dtype"], [16, "ivy.array.array.Array.unset_default_int_dtype"], [17, "ivy.array.array.Array.unset_default_int_dtype"]], "unset_default_uint_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.unset_default_uint_dtype"], [16, "ivy.array.array.Array.unset_default_uint_dtype"], [17, "ivy.array.array.Array.unset_default_uint_dtype"]], "unset_exception_trace_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.unset_exception_trace_mode"], [16, "ivy.array.array.Array.unset_exception_trace_mode"], [17, "ivy.array.array.Array.unset_exception_trace_mode"]], "unset_nestable_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.unset_nestable_mode"], [16, "ivy.array.array.Array.unset_nestable_mode"], [17, "ivy.array.array.Array.unset_nestable_mode"]], "unset_queue_timeout() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.unset_queue_timeout"], [16, "ivy.array.array.Array.unset_queue_timeout"], [17, "ivy.array.array.Array.unset_queue_timeout"]], "unset_shape_array_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.unset_shape_array_mode"], [16, "ivy.array.array.Array.unset_shape_array_mode"], [17, "ivy.array.array.Array.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.unset_show_func_wrapper_trace_mode"], [16, "ivy.array.array.Array.unset_show_func_wrapper_trace_mode"], [17, "ivy.array.array.Array.unset_show_func_wrapper_trace_mode"]], "unset_with_grads() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.unset_with_grads"], [16, "ivy.array.array.Array.unset_with_grads"], [17, "ivy.array.array.Array.unset_with_grads"]], "used_mem_on_dev() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.used_mem_on_dev"], [16, "ivy.array.array.Array.used_mem_on_dev"], [17, "ivy.array.array.Array.used_mem_on_dev"]], "valid_dtype() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.valid_dtype"], [16, "ivy.array.array.Array.valid_dtype"], [17, "ivy.array.array.Array.valid_dtype"]], "value_and_grad() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.value_and_grad"], [16, "ivy.array.array.Array.value_and_grad"], [17, "ivy.array.array.Array.value_and_grad"]], "vmap() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.vmap"], [16, "ivy.array.array.Array.vmap"], [17, "ivy.array.array.Array.vmap"]], "with_grads() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.with_grads"], [16, "ivy.array.array.Array.with_grads"], [17, "ivy.array.array.Array.with_grads"]], "wraps() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.wraps"], [16, "ivy.array.array.Array.wraps"], [17, "ivy.array.array.Array.wraps"]], "zeros() (ivy.array.array.array method)": [[13, "ivy.array.array.Array.zeros"], [16, "ivy.array.array.Array.zeros"], [17, "ivy.array.array.Array.zeros"]], "arraywithactivations (class in ivy.array.activations)": [[14, "ivy.array.activations.ArrayWithActivations"], [15, "ivy.array.activations.ArrayWithActivations"]], "gelu() (ivy.array.activations.arraywithactivations method)": [[14, "ivy.array.activations.ArrayWithActivations.gelu"], [15, "ivy.array.activations.ArrayWithActivations.gelu"]], "ivy.array.activations": [[14, "module-ivy.array.activations"]], "leaky_relu() (ivy.array.activations.arraywithactivations method)": [[14, "ivy.array.activations.ArrayWithActivations.leaky_relu"], [15, "ivy.array.activations.ArrayWithActivations.leaky_relu"]], "log_softmax() (ivy.array.activations.arraywithactivations method)": [[14, "ivy.array.activations.ArrayWithActivations.log_softmax"], [15, "ivy.array.activations.ArrayWithActivations.log_softmax"]], "mish() (ivy.array.activations.arraywithactivations method)": [[14, "ivy.array.activations.ArrayWithActivations.mish"], [15, "ivy.array.activations.ArrayWithActivations.mish"]], "relu() (ivy.array.activations.arraywithactivations method)": [[14, "ivy.array.activations.ArrayWithActivations.relu"], [15, "ivy.array.activations.ArrayWithActivations.relu"]], "sigmoid() (ivy.array.activations.arraywithactivations method)": [[14, "ivy.array.activations.ArrayWithActivations.sigmoid"], [15, "ivy.array.activations.ArrayWithActivations.sigmoid"]], "softmax() (ivy.array.activations.arraywithactivations method)": [[14, "ivy.array.activations.ArrayWithActivations.softmax"], [15, "ivy.array.activations.ArrayWithActivations.softmax"]], "softplus() (ivy.array.activations.arraywithactivations method)": [[14, "ivy.array.activations.ArrayWithActivations.softplus"], [15, "ivy.array.activations.ArrayWithActivations.softplus"]], "args_to_ivy() (in module ivy.array.conversions)": [[18, "ivy.array.conversions.args_to_ivy"], [19, "ivy.array.conversions.args_to_ivy"]], "args_to_native() (in module ivy.array.conversions)": [[18, "ivy.array.conversions.args_to_native"], [20, "ivy.array.conversions.args_to_native"]], "ivy.array.conversions": [[18, "module-ivy.array.conversions"]], "to_ivy() (in module ivy.array.conversions)": [[18, "ivy.array.conversions.to_ivy"], [21, "ivy.array.conversions.to_ivy"]], "to_native() (in module ivy.array.conversions)": [[18, "ivy.array.conversions.to_native"], [22, "ivy.array.conversions.to_native"]], "arraywithcreation (class in ivy.array.creation)": [[23, "ivy.array.creation.ArrayWithCreation"], [24, "ivy.array.creation.ArrayWithCreation"]], "asarray() (ivy.array.creation.arraywithcreation method)": [[23, "ivy.array.creation.ArrayWithCreation.asarray"], [24, "ivy.array.creation.ArrayWithCreation.asarray"]], "copy_array() (ivy.array.creation.arraywithcreation method)": [[23, "ivy.array.creation.ArrayWithCreation.copy_array"], [24, "ivy.array.creation.ArrayWithCreation.copy_array"]], "empty_like() (ivy.array.creation.arraywithcreation method)": [[23, "ivy.array.creation.ArrayWithCreation.empty_like"], [24, "ivy.array.creation.ArrayWithCreation.empty_like"]], "from_dlpack() (ivy.array.creation.arraywithcreation method)": [[23, "ivy.array.creation.ArrayWithCreation.from_dlpack"], [24, "ivy.array.creation.ArrayWithCreation.from_dlpack"]], "full_like() (ivy.array.creation.arraywithcreation method)": [[23, "ivy.array.creation.ArrayWithCreation.full_like"], [24, "ivy.array.creation.ArrayWithCreation.full_like"]], "ivy.array.creation": [[23, "module-ivy.array.creation"]], "linspace() (ivy.array.creation.arraywithcreation method)": [[23, "ivy.array.creation.ArrayWithCreation.linspace"], [24, "ivy.array.creation.ArrayWithCreation.linspace"]], "logspace() (ivy.array.creation.arraywithcreation method)": [[23, "ivy.array.creation.ArrayWithCreation.logspace"], [24, "ivy.array.creation.ArrayWithCreation.logspace"]], "meshgrid() (ivy.array.creation.arraywithcreation method)": [[23, "ivy.array.creation.ArrayWithCreation.meshgrid"], [24, "ivy.array.creation.ArrayWithCreation.meshgrid"]], "native_array() (ivy.array.creation.arraywithcreation method)": [[23, "ivy.array.creation.ArrayWithCreation.native_array"], [24, "ivy.array.creation.ArrayWithCreation.native_array"]], "one_hot() (ivy.array.creation.arraywithcreation method)": [[23, "ivy.array.creation.ArrayWithCreation.one_hot"], [24, "ivy.array.creation.ArrayWithCreation.one_hot"]], "ones_like() (ivy.array.creation.arraywithcreation method)": [[23, "ivy.array.creation.ArrayWithCreation.ones_like"], [24, "ivy.array.creation.ArrayWithCreation.ones_like"]], "tril() (ivy.array.creation.arraywithcreation method)": [[23, "ivy.array.creation.ArrayWithCreation.tril"], [24, "ivy.array.creation.ArrayWithCreation.tril"]], "triu() (ivy.array.creation.arraywithcreation method)": [[23, "ivy.array.creation.ArrayWithCreation.triu"], [24, "ivy.array.creation.ArrayWithCreation.triu"]], "zeros_like() (ivy.array.creation.arraywithcreation method)": [[23, "ivy.array.creation.ArrayWithCreation.zeros_like"], [24, "ivy.array.creation.ArrayWithCreation.zeros_like"]], "arraywithdatatypes (class in ivy.array.data_type)": [[25, "ivy.array.data_type.ArrayWithDataTypes"], [26, "ivy.array.data_type.ArrayWithDataTypes"]], "astype() (ivy.array.data_type.arraywithdatatypes method)": [[25, "ivy.array.data_type.ArrayWithDataTypes.astype"], [26, "ivy.array.data_type.ArrayWithDataTypes.astype"]], "broadcast_arrays() (ivy.array.data_type.arraywithdatatypes method)": [[25, "ivy.array.data_type.ArrayWithDataTypes.broadcast_arrays"], [26, "ivy.array.data_type.ArrayWithDataTypes.broadcast_arrays"]], "broadcast_to() (ivy.array.data_type.arraywithdatatypes method)": [[25, "ivy.array.data_type.ArrayWithDataTypes.broadcast_to"], [26, "ivy.array.data_type.ArrayWithDataTypes.broadcast_to"]], "can_cast() (ivy.array.data_type.arraywithdatatypes method)": [[25, "ivy.array.data_type.ArrayWithDataTypes.can_cast"], [26, "ivy.array.data_type.ArrayWithDataTypes.can_cast"]], "dtype() (ivy.array.data_type.arraywithdatatypes method)": [[25, "ivy.array.data_type.ArrayWithDataTypes.dtype"], [26, "ivy.array.data_type.ArrayWithDataTypes.dtype"]], "finfo() (ivy.array.data_type.arraywithdatatypes method)": [[25, "ivy.array.data_type.ArrayWithDataTypes.finfo"], [26, "ivy.array.data_type.ArrayWithDataTypes.finfo"]], "iinfo() (ivy.array.data_type.arraywithdatatypes method)": [[25, "ivy.array.data_type.ArrayWithDataTypes.iinfo"], [26, "ivy.array.data_type.ArrayWithDataTypes.iinfo"]], "is_bool_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[25, "ivy.array.data_type.ArrayWithDataTypes.is_bool_dtype"], [26, "ivy.array.data_type.ArrayWithDataTypes.is_bool_dtype"]], "is_float_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[25, "ivy.array.data_type.ArrayWithDataTypes.is_float_dtype"], [26, "ivy.array.data_type.ArrayWithDataTypes.is_float_dtype"]], "is_int_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[25, "ivy.array.data_type.ArrayWithDataTypes.is_int_dtype"], [26, "ivy.array.data_type.ArrayWithDataTypes.is_int_dtype"]], "is_uint_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[25, "ivy.array.data_type.ArrayWithDataTypes.is_uint_dtype"], [26, "ivy.array.data_type.ArrayWithDataTypes.is_uint_dtype"]], "ivy.array.data_type": [[25, "module-ivy.array.data_type"]], "result_type() (ivy.array.data_type.arraywithdatatypes method)": [[25, "ivy.array.data_type.ArrayWithDataTypes.result_type"], [26, "ivy.array.data_type.ArrayWithDataTypes.result_type"]], "arraywithdevice (class in ivy.array.device)": [[27, "ivy.array.device.ArrayWithDevice"], [28, "ivy.array.device.ArrayWithDevice"]], "dev() (ivy.array.device.arraywithdevice method)": [[27, "ivy.array.device.ArrayWithDevice.dev"], [28, "ivy.array.device.ArrayWithDevice.dev"]], "ivy.array.device": [[27, "module-ivy.array.device"]], "to_device() (ivy.array.device.arraywithdevice method)": [[27, "ivy.array.device.ArrayWithDevice.to_device"], [28, "ivy.array.device.ArrayWithDevice.to_device"]], "arraywithelementwise (class in ivy.array.elementwise)": [[29, "ivy.array.elementwise.ArrayWithElementwise"], [30, "ivy.array.elementwise.ArrayWithElementwise"]], "abs() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.abs"], [30, "ivy.array.elementwise.ArrayWithElementwise.abs"]], "acos() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.acos"], [30, "ivy.array.elementwise.ArrayWithElementwise.acos"]], "acosh() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.acosh"], [30, "ivy.array.elementwise.ArrayWithElementwise.acosh"]], "add() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.add"], [30, "ivy.array.elementwise.ArrayWithElementwise.add"]], "asin() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.asin"], [30, "ivy.array.elementwise.ArrayWithElementwise.asin"]], "asinh() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.asinh"], [30, "ivy.array.elementwise.ArrayWithElementwise.asinh"]], "atan() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.atan"], [30, "ivy.array.elementwise.ArrayWithElementwise.atan"]], "atan2() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.atan2"], [30, "ivy.array.elementwise.ArrayWithElementwise.atan2"]], "atanh() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.atanh"], [30, "ivy.array.elementwise.ArrayWithElementwise.atanh"]], "bitwise_and() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.bitwise_and"], [30, "ivy.array.elementwise.ArrayWithElementwise.bitwise_and"]], "bitwise_invert() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.bitwise_invert"], [30, "ivy.array.elementwise.ArrayWithElementwise.bitwise_invert"]], "bitwise_left_shift() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.bitwise_left_shift"], [30, "ivy.array.elementwise.ArrayWithElementwise.bitwise_left_shift"]], "bitwise_or() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.bitwise_or"], [30, "ivy.array.elementwise.ArrayWithElementwise.bitwise_or"]], "bitwise_right_shift() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.bitwise_right_shift"], [30, "ivy.array.elementwise.ArrayWithElementwise.bitwise_right_shift"]], "bitwise_xor() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.bitwise_xor"], [30, "ivy.array.elementwise.ArrayWithElementwise.bitwise_xor"]], "ceil() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.ceil"], [30, "ivy.array.elementwise.ArrayWithElementwise.ceil"]], "cos() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.cos"], [30, "ivy.array.elementwise.ArrayWithElementwise.cos"]], "cosh() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.cosh"], [30, "ivy.array.elementwise.ArrayWithElementwise.cosh"]], "deg2rad() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.deg2rad"], [30, "ivy.array.elementwise.ArrayWithElementwise.deg2rad"]], "divide() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.divide"], [30, "ivy.array.elementwise.ArrayWithElementwise.divide"]], "equal() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.equal"], [30, "ivy.array.elementwise.ArrayWithElementwise.equal"]], "erf() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.erf"], [30, "ivy.array.elementwise.ArrayWithElementwise.erf"]], "exp() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.exp"], [30, "ivy.array.elementwise.ArrayWithElementwise.exp"]], "expm1() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.expm1"], [30, "ivy.array.elementwise.ArrayWithElementwise.expm1"]], "floor() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.floor"], [30, "ivy.array.elementwise.ArrayWithElementwise.floor"]], "floor_divide() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.floor_divide"], [30, "ivy.array.elementwise.ArrayWithElementwise.floor_divide"]], "greater() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.greater"], [30, "ivy.array.elementwise.ArrayWithElementwise.greater"]], "greater_equal() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.greater_equal"], [30, "ivy.array.elementwise.ArrayWithElementwise.greater_equal"]], "isfinite() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.isfinite"], [30, "ivy.array.elementwise.ArrayWithElementwise.isfinite"]], "isinf() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.isinf"], [30, "ivy.array.elementwise.ArrayWithElementwise.isinf"]], "isnan() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.isnan"], [30, "ivy.array.elementwise.ArrayWithElementwise.isnan"]], "isreal() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.isreal"], [30, "ivy.array.elementwise.ArrayWithElementwise.isreal"]], "ivy.array.elementwise": [[29, "module-ivy.array.elementwise"]], "less() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.less"], [30, "ivy.array.elementwise.ArrayWithElementwise.less"]], "less_equal() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.less_equal"], [30, "ivy.array.elementwise.ArrayWithElementwise.less_equal"]], "log() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.log"], [30, "ivy.array.elementwise.ArrayWithElementwise.log"]], "log10() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.log10"], [30, "ivy.array.elementwise.ArrayWithElementwise.log10"]], "log1p() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.log1p"], [30, "ivy.array.elementwise.ArrayWithElementwise.log1p"]], "log2() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.log2"], [30, "ivy.array.elementwise.ArrayWithElementwise.log2"]], "logaddexp() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.logaddexp"], [30, "ivy.array.elementwise.ArrayWithElementwise.logaddexp"]], "logical_and() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.logical_and"], [30, "ivy.array.elementwise.ArrayWithElementwise.logical_and"]], "logical_not() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.logical_not"], [30, "ivy.array.elementwise.ArrayWithElementwise.logical_not"]], "logical_or() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.logical_or"], [30, "ivy.array.elementwise.ArrayWithElementwise.logical_or"]], "logical_xor() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.logical_xor"], [30, "ivy.array.elementwise.ArrayWithElementwise.logical_xor"]], "maximum() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.maximum"], [30, "ivy.array.elementwise.ArrayWithElementwise.maximum"]], "minimum() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.minimum"], [30, "ivy.array.elementwise.ArrayWithElementwise.minimum"]], "multiply() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.multiply"], [30, "ivy.array.elementwise.ArrayWithElementwise.multiply"]], "negative() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.negative"], [30, "ivy.array.elementwise.ArrayWithElementwise.negative"]], "not_equal() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.not_equal"], [30, "ivy.array.elementwise.ArrayWithElementwise.not_equal"]], "positive() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.positive"], [30, "ivy.array.elementwise.ArrayWithElementwise.positive"]], "pow() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.pow"], [30, "ivy.array.elementwise.ArrayWithElementwise.pow"]], "rad2deg() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.rad2deg"], [30, "ivy.array.elementwise.ArrayWithElementwise.rad2deg"]], "reciprocal() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.reciprocal"], [30, "ivy.array.elementwise.ArrayWithElementwise.reciprocal"]], "remainder() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.remainder"], [30, "ivy.array.elementwise.ArrayWithElementwise.remainder"]], "round() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.round"], [30, "ivy.array.elementwise.ArrayWithElementwise.round"]], "sign() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.sign"], [30, "ivy.array.elementwise.ArrayWithElementwise.sign"]], "sin() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.sin"], [30, "ivy.array.elementwise.ArrayWithElementwise.sin"]], "sinh() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.sinh"], [30, "ivy.array.elementwise.ArrayWithElementwise.sinh"]], "sqrt() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.sqrt"], [30, "ivy.array.elementwise.ArrayWithElementwise.sqrt"]], "square() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.square"], [30, "ivy.array.elementwise.ArrayWithElementwise.square"]], "subtract() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.subtract"], [30, "ivy.array.elementwise.ArrayWithElementwise.subtract"]], "tan() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.tan"], [30, "ivy.array.elementwise.ArrayWithElementwise.tan"]], "tanh() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.tanh"], [30, "ivy.array.elementwise.ArrayWithElementwise.tanh"]], "trunc() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.trunc"], [30, "ivy.array.elementwise.ArrayWithElementwise.trunc"]], "trunc_divide() (ivy.array.elementwise.arraywithelementwise method)": [[29, "ivy.array.elementwise.ArrayWithElementwise.trunc_divide"], [30, "ivy.array.elementwise.ArrayWithElementwise.trunc_divide"]], "arraywithactivationsexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithActivationsExperimental"]], "arraywithconversionsexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithConversionsExperimental"]], "arraywithcreationexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithCreationExperimental"]], "arraywithdata_typeexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithData_typeExperimental"]], "arraywithdeviceexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithDeviceExperimental"]], "arraywithelementwiseexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental"]], "arraywithgeneralexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithGeneralExperimental"]], "arraywithgradientsexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithGradientsExperimental"]], "arraywithimageexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithImageExperimental"]], "arraywithlayersexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithLayersExperimental"]], "arraywithlinearalgebraexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental"]], "arraywithlossesexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithLossesExperimental"]], "arraywithmanipulationexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental"]], "arraywithnormsexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithNormsExperimental"]], "arraywithrandomexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithRandomExperimental"]], "arraywithsearchingexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithSearchingExperimental"]], "arraywithsetexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithSetExperimental"]], "arraywithsortingexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithSortingExperimental"]], "arraywithstatisticalexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithStatisticalExperimental"]], "arraywithutilityexperimental (class in ivy.array.experimental)": [[31, "ivy.array.experimental.ArrayWithUtilityExperimental"]], "adjoint() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[31, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.adjoint"]], "allclose() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.allclose"]], "angle() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.angle"]], "atleast_1d() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.atleast_1d"]], "atleast_2d() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.atleast_2d"]], "atleast_3d() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.atleast_3d"]], "avg_pool1d() (ivy.array.experimental.arraywithlayersexperimental method)": [[31, "ivy.array.experimental.ArrayWithLayersExperimental.avg_pool1d"]], "avg_pool2d() (ivy.array.experimental.arraywithlayersexperimental method)": [[31, "ivy.array.experimental.ArrayWithLayersExperimental.avg_pool2d"]], "avg_pool3d() (ivy.array.experimental.arraywithlayersexperimental method)": [[31, "ivy.array.experimental.ArrayWithLayersExperimental.avg_pool3d"]], "bernoulli() (ivy.array.experimental.arraywithrandomexperimental method)": [[31, "ivy.array.experimental.ArrayWithRandomExperimental.bernoulli"]], "beta() (ivy.array.experimental.arraywithrandomexperimental method)": [[31, "ivy.array.experimental.ArrayWithRandomExperimental.beta"]], "binarizer() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.binarizer"]], "bincount() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[31, "ivy.array.experimental.ArrayWithStatisticalExperimental.bincount"]], "conj() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.conj"]], "copysign() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.copysign"]], "corrcoef() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[31, "ivy.array.experimental.ArrayWithStatisticalExperimental.corrcoef"]], "count_nonzero() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.count_nonzero"]], "dct() (ivy.array.experimental.arraywithlayersexperimental method)": [[31, "ivy.array.experimental.ArrayWithLayersExperimental.dct"]], "dft() (ivy.array.experimental.arraywithlayersexperimental method)": [[31, "ivy.array.experimental.ArrayWithLayersExperimental.dft"]], "diagflat() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[31, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.diagflat"]], "diff() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.diff"]], "dirichlet() (ivy.array.experimental.arraywithrandomexperimental method)": [[31, "ivy.array.experimental.ArrayWithRandomExperimental.dirichlet"]], "dsplit() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.dsplit"]], "dstack() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.dstack"]], "eig() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[31, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.eig"]], "eigh_tridiagonal() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[31, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.eigh_tridiagonal"]], "eigvals() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[31, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.eigvals"]], "embedding() (ivy.array.experimental.arraywithlayersexperimental method)": [[31, "ivy.array.experimental.ArrayWithLayersExperimental.embedding"]], "exp2() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.exp2"]], "expand() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.expand"]], "eye_like() (ivy.array.experimental.arraywithcreationexperimental method)": [[31, "ivy.array.experimental.ArrayWithCreationExperimental.eye_like"]], "fft() (ivy.array.experimental.arraywithlayersexperimental method)": [[31, "ivy.array.experimental.ArrayWithLayersExperimental.fft"]], "fix() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.fix"]], "flatten() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.flatten"]], "fliplr() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.fliplr"]], "flipud() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.flipud"]], "float_power() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.float_power"]], "fmax() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.fmax"]], "fmin() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.fmin"]], "fmod() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.fmod"]], "gamma() (ivy.array.experimental.arraywithrandomexperimental method)": [[31, "ivy.array.experimental.ArrayWithRandomExperimental.gamma"]], "gcd() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.gcd"]], "gradient() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.gradient"]], "heaviside() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.heaviside"]], "hsplit() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.hsplit"]], "hstack() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.hstack"]], "hypot() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.hypot"]], "i0() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.i0"]], "ifft() (ivy.array.experimental.arraywithlayersexperimental method)": [[31, "ivy.array.experimental.ArrayWithLayersExperimental.ifft"]], "imag() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.imag"]], "instance_norm() (ivy.array.experimental.arraywithnormsexperimental method)": [[31, "ivy.array.experimental.ArrayWithNormsExperimental.instance_norm"]], "interpolate() (ivy.array.experimental.arraywithlayersexperimental method)": [[31, "ivy.array.experimental.ArrayWithLayersExperimental.interpolate"]], "isclose() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.isclose"]], "isin() (ivy.array.experimental.arraywithgeneralexperimental method)": [[31, "ivy.array.experimental.ArrayWithGeneralExperimental.isin"]], "kron() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[31, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.kron"]], "l2_normalize() (ivy.array.experimental.arraywithnormsexperimental method)": [[31, "ivy.array.experimental.ArrayWithNormsExperimental.l2_normalize"]], "lcm() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.lcm"]], "ldexp() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.ldexp"]], "lexsort() (ivy.array.experimental.arraywithsortingexperimental method)": [[31, "ivy.array.experimental.ArrayWithSortingExperimental.lexsort"]], "logaddexp2() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.logaddexp2"]], "logit() (ivy.array.experimental.arraywithactivationsexperimental method)": [[31, "ivy.array.experimental.ArrayWithActivationsExperimental.logit"]], "lp_normalize() (ivy.array.experimental.arraywithnormsexperimental method)": [[31, "ivy.array.experimental.ArrayWithNormsExperimental.lp_normalize"]], "matrix_exp() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[31, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.matrix_exp"]], "max_pool1d() (ivy.array.experimental.arraywithlayersexperimental method)": [[31, "ivy.array.experimental.ArrayWithLayersExperimental.max_pool1d"]], "max_pool2d() (ivy.array.experimental.arraywithlayersexperimental method)": [[31, "ivy.array.experimental.ArrayWithLayersExperimental.max_pool2d"]], "max_pool3d() (ivy.array.experimental.arraywithlayersexperimental method)": [[31, "ivy.array.experimental.ArrayWithLayersExperimental.max_pool3d"]], "median() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[31, "ivy.array.experimental.ArrayWithStatisticalExperimental.median"]], "moveaxis() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.moveaxis"]], "msort() (ivy.array.experimental.arraywithsortingexperimental method)": [[31, "ivy.array.experimental.ArrayWithSortingExperimental.msort"]], "nan_to_num() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.nan_to_num"]], "nanmean() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[31, "ivy.array.experimental.ArrayWithStatisticalExperimental.nanmean"]], "nanmedian() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[31, "ivy.array.experimental.ArrayWithStatisticalExperimental.nanmedian"]], "nansum() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.nansum"]], "nextafter() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.nextafter"]], "pad() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.pad"]], "poisson() (ivy.array.experimental.arraywithrandomexperimental method)": [[31, "ivy.array.experimental.ArrayWithRandomExperimental.poisson"]], "prelu() (ivy.array.experimental.arraywithactivationsexperimental method)": [[31, "ivy.array.experimental.ArrayWithActivationsExperimental.prelu"]], "quantile() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[31, "ivy.array.experimental.ArrayWithStatisticalExperimental.quantile"]], "real() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.real"]], "relu6() (ivy.array.experimental.arraywithactivationsexperimental method)": [[31, "ivy.array.experimental.ArrayWithActivationsExperimental.relu6"]], "rot90() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.rot90"]], "signbit() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.signbit"]], "sinc() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.sinc"]], "take_along_axis() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.take_along_axis"]], "thresholded_relu() (ivy.array.experimental.arraywithactivationsexperimental method)": [[31, "ivy.array.experimental.ArrayWithActivationsExperimental.thresholded_relu"]], "top_k() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.top_k"]], "trapz() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.trapz"]], "unravel_index() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[31, "ivy.array.experimental.ArrayWithStatisticalExperimental.unravel_index"]], "vsplit() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.vsplit"]], "vstack() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[31, "ivy.array.experimental.ArrayWithManipulationExperimental.vstack"]], "xlogy() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.xlogy"]], "zeta() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[31, "ivy.array.experimental.ArrayWithElementWiseExperimental.zeta"]], "arraywithgeneral (class in ivy.array.general)": [[32, "ivy.array.general.ArrayWithGeneral"], [33, "ivy.array.general.ArrayWithGeneral"]], "all_equal() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.all_equal"], [33, "ivy.array.general.ArrayWithGeneral.all_equal"]], "array_equal() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.array_equal"], [33, "ivy.array.general.ArrayWithGeneral.array_equal"]], "assert_supports_inplace() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.assert_supports_inplace"], [33, "ivy.array.general.ArrayWithGeneral.assert_supports_inplace"]], "clip_matrix_norm() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.clip_matrix_norm"], [33, "ivy.array.general.ArrayWithGeneral.clip_matrix_norm"]], "clip_vector_norm() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.clip_vector_norm"], [33, "ivy.array.general.ArrayWithGeneral.clip_vector_norm"]], "default() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.default"], [33, "ivy.array.general.ArrayWithGeneral.default"]], "einops_rearrange() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.einops_rearrange"], [33, "ivy.array.general.ArrayWithGeneral.einops_rearrange"]], "einops_reduce() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.einops_reduce"], [33, "ivy.array.general.ArrayWithGeneral.einops_reduce"]], "einops_repeat() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.einops_repeat"], [33, "ivy.array.general.ArrayWithGeneral.einops_repeat"]], "exists() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.exists"], [33, "ivy.array.general.ArrayWithGeneral.exists"]], "fourier_encode() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.fourier_encode"], [33, "ivy.array.general.ArrayWithGeneral.fourier_encode"]], "gather() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.gather"], [33, "ivy.array.general.ArrayWithGeneral.gather"]], "gather_nd() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.gather_nd"], [33, "ivy.array.general.ArrayWithGeneral.gather_nd"]], "get_num_dims() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.get_num_dims"], [33, "ivy.array.general.ArrayWithGeneral.get_num_dims"]], "has_nans() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.has_nans"], [33, "ivy.array.general.ArrayWithGeneral.has_nans"]], "inplace_decrement() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.inplace_decrement"], [33, "ivy.array.general.ArrayWithGeneral.inplace_decrement"]], "inplace_increment() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.inplace_increment"], [33, "ivy.array.general.ArrayWithGeneral.inplace_increment"]], "inplace_update() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.inplace_update"], [33, "ivy.array.general.ArrayWithGeneral.inplace_update"]], "is_array() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.is_array"], [33, "ivy.array.general.ArrayWithGeneral.is_array"]], "is_ivy_array() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.is_ivy_array"], [33, "ivy.array.general.ArrayWithGeneral.is_ivy_array"]], "is_ivy_container() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.is_ivy_container"], [33, "ivy.array.general.ArrayWithGeneral.is_ivy_container"]], "is_native_array() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.is_native_array"], [33, "ivy.array.general.ArrayWithGeneral.is_native_array"]], "ivy.array.general": [[32, "module-ivy.array.general"]], "scatter_flat() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.scatter_flat"], [33, "ivy.array.general.ArrayWithGeneral.scatter_flat"]], "scatter_nd() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.scatter_nd"], [33, "ivy.array.general.ArrayWithGeneral.scatter_nd"]], "stable_divide() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.stable_divide"], [33, "ivy.array.general.ArrayWithGeneral.stable_divide"]], "stable_pow() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.stable_pow"], [33, "ivy.array.general.ArrayWithGeneral.stable_pow"]], "supports_inplace_updates() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.supports_inplace_updates"], [33, "ivy.array.general.ArrayWithGeneral.supports_inplace_updates"]], "to_list() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.to_list"], [33, "ivy.array.general.ArrayWithGeneral.to_list"]], "to_numpy() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.to_numpy"], [33, "ivy.array.general.ArrayWithGeneral.to_numpy"]], "to_scalar() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.to_scalar"], [33, "ivy.array.general.ArrayWithGeneral.to_scalar"]], "value_is_nan() (ivy.array.general.arraywithgeneral method)": [[32, "ivy.array.general.ArrayWithGeneral.value_is_nan"], [33, "ivy.array.general.ArrayWithGeneral.value_is_nan"]], "arraywithgradients (class in ivy.array.gradients)": [[34, "ivy.array.gradients.ArrayWithGradients"], [35, "ivy.array.gradients.ArrayWithGradients"]], "adam_step() (ivy.array.gradients.arraywithgradients method)": [[34, "ivy.array.gradients.ArrayWithGradients.adam_step"], [35, "ivy.array.gradients.ArrayWithGradients.adam_step"]], "adam_update() (ivy.array.gradients.arraywithgradients method)": [[34, "ivy.array.gradients.ArrayWithGradients.adam_update"], [35, "ivy.array.gradients.ArrayWithGradients.adam_update"]], "gradient_descent_update() (ivy.array.gradients.arraywithgradients method)": [[34, "ivy.array.gradients.ArrayWithGradients.gradient_descent_update"], [35, "ivy.array.gradients.ArrayWithGradients.gradient_descent_update"]], "ivy.array.gradients": [[34, "module-ivy.array.gradients"]], "lamb_update() (ivy.array.gradients.arraywithgradients method)": [[34, "ivy.array.gradients.ArrayWithGradients.lamb_update"], [35, "ivy.array.gradients.ArrayWithGradients.lamb_update"]], "lars_update() (ivy.array.gradients.arraywithgradients method)": [[34, "ivy.array.gradients.ArrayWithGradients.lars_update"], [35, "ivy.array.gradients.ArrayWithGradients.lars_update"]], "optimizer_update() (ivy.array.gradients.arraywithgradients method)": [[34, "ivy.array.gradients.ArrayWithGradients.optimizer_update"], [35, "ivy.array.gradients.ArrayWithGradients.optimizer_update"]], "stop_gradient() (ivy.array.gradients.arraywithgradients method)": [[34, "ivy.array.gradients.ArrayWithGradients.stop_gradient"], [35, "ivy.array.gradients.ArrayWithGradients.stop_gradient"]], "arraywithimage (class in ivy.array.image)": [[36, "ivy.array.image.ArrayWithImage"], [37, "ivy.array.image.ArrayWithImage"]], "ivy.array.image": [[36, "module-ivy.array.image"]], "arraywithlayers (class in ivy.array.layers)": [[38, "ivy.array.layers.ArrayWithLayers"], [39, "ivy.array.layers.ArrayWithLayers"]], "conv1d() (ivy.array.layers.arraywithlayers method)": [[38, "ivy.array.layers.ArrayWithLayers.conv1d"], [39, "ivy.array.layers.ArrayWithLayers.conv1d"]], "conv1d_transpose() (ivy.array.layers.arraywithlayers method)": [[38, "ivy.array.layers.ArrayWithLayers.conv1d_transpose"], [39, "ivy.array.layers.ArrayWithLayers.conv1d_transpose"]], "conv2d() (ivy.array.layers.arraywithlayers method)": [[38, "ivy.array.layers.ArrayWithLayers.conv2d"], [39, "ivy.array.layers.ArrayWithLayers.conv2d"]], "conv2d_transpose() (ivy.array.layers.arraywithlayers method)": [[38, "ivy.array.layers.ArrayWithLayers.conv2d_transpose"], [39, "ivy.array.layers.ArrayWithLayers.conv2d_transpose"]], "conv3d() (ivy.array.layers.arraywithlayers method)": [[38, "ivy.array.layers.ArrayWithLayers.conv3d"], [39, "ivy.array.layers.ArrayWithLayers.conv3d"]], "conv3d_transpose() (ivy.array.layers.arraywithlayers method)": [[38, "ivy.array.layers.ArrayWithLayers.conv3d_transpose"], [39, "ivy.array.layers.ArrayWithLayers.conv3d_transpose"]], "depthwise_conv2d() (ivy.array.layers.arraywithlayers method)": [[38, "ivy.array.layers.ArrayWithLayers.depthwise_conv2d"], [39, "ivy.array.layers.ArrayWithLayers.depthwise_conv2d"]], "dropout() (ivy.array.layers.arraywithlayers method)": [[38, "ivy.array.layers.ArrayWithLayers.dropout"], [39, "ivy.array.layers.ArrayWithLayers.dropout"]], "dropout1d() (ivy.array.layers.arraywithlayers method)": [[38, "ivy.array.layers.ArrayWithLayers.dropout1d"], [39, "ivy.array.layers.ArrayWithLayers.dropout1d"]], "dropout3d() (ivy.array.layers.arraywithlayers method)": [[38, "ivy.array.layers.ArrayWithLayers.dropout3d"], [39, "ivy.array.layers.ArrayWithLayers.dropout3d"]], "ivy.array.layers": [[38, "module-ivy.array.layers"]], "linear() (ivy.array.layers.arraywithlayers method)": [[38, "ivy.array.layers.ArrayWithLayers.linear"], [39, "ivy.array.layers.ArrayWithLayers.linear"]], "lstm_update() (ivy.array.layers.arraywithlayers method)": [[38, "ivy.array.layers.ArrayWithLayers.lstm_update"], [39, "ivy.array.layers.ArrayWithLayers.lstm_update"]], "multi_head_attention() (ivy.array.layers.arraywithlayers method)": [[38, "ivy.array.layers.ArrayWithLayers.multi_head_attention"], [39, "ivy.array.layers.ArrayWithLayers.multi_head_attention"]], "scaled_dot_product_attention() (ivy.array.layers.arraywithlayers method)": [[38, "ivy.array.layers.ArrayWithLayers.scaled_dot_product_attention"], [39, "ivy.array.layers.ArrayWithLayers.scaled_dot_product_attention"]], "arraywithlinearalgebra (class in ivy.array.linear_algebra)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra"]], "cholesky() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cholesky"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cholesky"]], "cross() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cross"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cross"]], "det() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.det"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.det"]], "diag() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diag"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diag"]], "diagonal() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diagonal"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diagonal"]], "eig() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eig"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eig"]], "eigh() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigh"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigh"]], "eigvalsh() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigvalsh"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigvalsh"]], "inner() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inner"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inner"]], "inv() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inv"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inv"]], "ivy.array.linear_algebra": [[40, "module-ivy.array.linear_algebra"]], "matmul() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matmul"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matmul"]], "matrix_norm() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_norm"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_norm"]], "matrix_power() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_power"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_power"]], "matrix_rank() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_rank"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_rank"]], "matrix_transpose() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_transpose"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_transpose"]], "outer() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.outer"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.outer"]], "pinv() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.pinv"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.pinv"]], "qr() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.qr"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.qr"]], "slogdet() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.slogdet"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.slogdet"]], "solve() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.solve"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.solve"]], "svd() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svd"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svd"]], "svdvals() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svdvals"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svdvals"]], "tensordot() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensordot"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensordot"]], "tensorsolve() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensorsolve"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensorsolve"]], "trace() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.trace"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.trace"]], "vander() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vander"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vander"]], "vecdot() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vecdot"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vecdot"]], "vector_norm() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_norm"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[40, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_to_skew_symmetric_matrix"], [41, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_to_skew_symmetric_matrix"]], "arraywithlosses (class in ivy.array.losses)": [[42, "ivy.array.losses.ArrayWithLosses"], [43, "ivy.array.losses.ArrayWithLosses"]], "binary_cross_entropy() (ivy.array.losses.arraywithlosses method)": [[42, "ivy.array.losses.ArrayWithLosses.binary_cross_entropy"], [43, "ivy.array.losses.ArrayWithLosses.binary_cross_entropy"]], "cross_entropy() (ivy.array.losses.arraywithlosses method)": [[42, "ivy.array.losses.ArrayWithLosses.cross_entropy"], [43, "ivy.array.losses.ArrayWithLosses.cross_entropy"]], "ivy.array.losses": [[42, "module-ivy.array.losses"]], "sparse_cross_entropy() (ivy.array.losses.arraywithlosses method)": [[42, "ivy.array.losses.ArrayWithLosses.sparse_cross_entropy"], [43, "ivy.array.losses.ArrayWithLosses.sparse_cross_entropy"]], "arraywithmanipulation (class in ivy.array.manipulation)": [[44, "ivy.array.manipulation.ArrayWithManipulation"], [45, "ivy.array.manipulation.ArrayWithManipulation"]], "clip() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.clip"], [45, "ivy.array.manipulation.ArrayWithManipulation.clip"]], "concat() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.concat"], [45, "ivy.array.manipulation.ArrayWithManipulation.concat"]], "constant_pad() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.constant_pad"], [45, "ivy.array.manipulation.ArrayWithManipulation.constant_pad"]], "expand_dims() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.expand_dims"], [45, "ivy.array.manipulation.ArrayWithManipulation.expand_dims"]], "flip() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.flip"], [45, "ivy.array.manipulation.ArrayWithManipulation.flip"]], "ivy.array.manipulation": [[44, "module-ivy.array.manipulation"]], "permute_dims() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.permute_dims"], [45, "ivy.array.manipulation.ArrayWithManipulation.permute_dims"]], "repeat() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.repeat"], [45, "ivy.array.manipulation.ArrayWithManipulation.repeat"]], "reshape() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.reshape"], [45, "ivy.array.manipulation.ArrayWithManipulation.reshape"]], "roll() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.roll"], [45, "ivy.array.manipulation.ArrayWithManipulation.roll"]], "split() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.split"], [45, "ivy.array.manipulation.ArrayWithManipulation.split"]], "squeeze() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.squeeze"], [45, "ivy.array.manipulation.ArrayWithManipulation.squeeze"]], "stack() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.stack"], [45, "ivy.array.manipulation.ArrayWithManipulation.stack"]], "swapaxes() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.swapaxes"], [45, "ivy.array.manipulation.ArrayWithManipulation.swapaxes"]], "tile() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.tile"], [45, "ivy.array.manipulation.ArrayWithManipulation.tile"]], "unstack() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.unstack"], [45, "ivy.array.manipulation.ArrayWithManipulation.unstack"]], "view() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.view"], [45, "ivy.array.manipulation.ArrayWithManipulation.view"]], "zero_pad() (ivy.array.manipulation.arraywithmanipulation method)": [[44, "ivy.array.manipulation.ArrayWithManipulation.zero_pad"], [45, "ivy.array.manipulation.ArrayWithManipulation.zero_pad"]], "arraywithnorms (class in ivy.array.norms)": [[46, "ivy.array.norms.ArrayWithNorms"], [47, "ivy.array.norms.ArrayWithNorms"]], "ivy.array.norms": [[46, "module-ivy.array.norms"]], "layer_norm() (ivy.array.norms.arraywithnorms method)": [[46, "ivy.array.norms.ArrayWithNorms.layer_norm"], [47, "ivy.array.norms.ArrayWithNorms.layer_norm"]], "arraywithrandom (class in ivy.array.random)": [[48, "ivy.array.random.ArrayWithRandom"], [49, "ivy.array.random.ArrayWithRandom"]], "ivy.array.random": [[48, "module-ivy.array.random"]], "multinomial() (ivy.array.random.arraywithrandom method)": [[48, "ivy.array.random.ArrayWithRandom.multinomial"], [49, "ivy.array.random.ArrayWithRandom.multinomial"]], "randint() (ivy.array.random.arraywithrandom method)": [[48, "ivy.array.random.ArrayWithRandom.randint"], [49, "ivy.array.random.ArrayWithRandom.randint"]], "random_normal() (ivy.array.random.arraywithrandom method)": [[48, "ivy.array.random.ArrayWithRandom.random_normal"], [49, "ivy.array.random.ArrayWithRandom.random_normal"]], "random_uniform() (ivy.array.random.arraywithrandom method)": [[48, "ivy.array.random.ArrayWithRandom.random_uniform"], [49, "ivy.array.random.ArrayWithRandom.random_uniform"]], "shuffle() (ivy.array.random.arraywithrandom method)": [[48, "ivy.array.random.ArrayWithRandom.shuffle"], [49, "ivy.array.random.ArrayWithRandom.shuffle"]], "arraywithsearching (class in ivy.array.searching)": [[50, "ivy.array.searching.ArrayWithSearching"], [51, "ivy.array.searching.ArrayWithSearching"]], "argmax() (ivy.array.searching.arraywithsearching method)": [[50, "ivy.array.searching.ArrayWithSearching.argmax"], [51, "ivy.array.searching.ArrayWithSearching.argmax"]], "argmin() (ivy.array.searching.arraywithsearching method)": [[50, "ivy.array.searching.ArrayWithSearching.argmin"], [51, "ivy.array.searching.ArrayWithSearching.argmin"]], "argwhere() (ivy.array.searching.arraywithsearching method)": [[50, "ivy.array.searching.ArrayWithSearching.argwhere"], [51, "ivy.array.searching.ArrayWithSearching.argwhere"]], "ivy.array.searching": [[50, "module-ivy.array.searching"]], "nonzero() (ivy.array.searching.arraywithsearching method)": [[50, "ivy.array.searching.ArrayWithSearching.nonzero"], [51, "ivy.array.searching.ArrayWithSearching.nonzero"]], "where() (ivy.array.searching.arraywithsearching method)": [[50, "ivy.array.searching.ArrayWithSearching.where"], [51, "ivy.array.searching.ArrayWithSearching.where"]], "arraywithset (class in ivy.array.set)": [[52, "ivy.array.set.ArrayWithSet"], [53, "ivy.array.set.ArrayWithSet"]], "ivy.array.set": [[52, "module-ivy.array.set"]], "unique_all() (ivy.array.set.arraywithset method)": [[52, "ivy.array.set.ArrayWithSet.unique_all"], [53, "ivy.array.set.ArrayWithSet.unique_all"]], "unique_counts() (ivy.array.set.arraywithset method)": [[52, "ivy.array.set.ArrayWithSet.unique_counts"], [53, "ivy.array.set.ArrayWithSet.unique_counts"]], "unique_inverse() (ivy.array.set.arraywithset method)": [[52, "ivy.array.set.ArrayWithSet.unique_inverse"], [53, "ivy.array.set.ArrayWithSet.unique_inverse"]], "unique_values() (ivy.array.set.arraywithset method)": [[52, "ivy.array.set.ArrayWithSet.unique_values"], [53, "ivy.array.set.ArrayWithSet.unique_values"]], "arraywithsorting (class in ivy.array.sorting)": [[54, "ivy.array.sorting.ArrayWithSorting"], [55, "ivy.array.sorting.ArrayWithSorting"]], "argsort() (ivy.array.sorting.arraywithsorting method)": [[54, "ivy.array.sorting.ArrayWithSorting.argsort"], [55, "ivy.array.sorting.ArrayWithSorting.argsort"]], "ivy.array.sorting": [[54, "module-ivy.array.sorting"]], "searchsorted() (ivy.array.sorting.arraywithsorting method)": [[54, "ivy.array.sorting.ArrayWithSorting.searchsorted"], [55, "ivy.array.sorting.ArrayWithSorting.searchsorted"]], "sort() (ivy.array.sorting.arraywithsorting method)": [[54, "ivy.array.sorting.ArrayWithSorting.sort"], [55, "ivy.array.sorting.ArrayWithSorting.sort"]], "arraywithstatistical (class in ivy.array.statistical)": [[56, "ivy.array.statistical.ArrayWithStatistical"], [57, "ivy.array.statistical.ArrayWithStatistical"]], "cumprod() (ivy.array.statistical.arraywithstatistical method)": [[56, "ivy.array.statistical.ArrayWithStatistical.cumprod"], [57, "ivy.array.statistical.ArrayWithStatistical.cumprod"]], "cumsum() (ivy.array.statistical.arraywithstatistical method)": [[56, "ivy.array.statistical.ArrayWithStatistical.cumsum"], [57, "ivy.array.statistical.ArrayWithStatistical.cumsum"]], "einsum() (ivy.array.statistical.arraywithstatistical method)": [[56, "ivy.array.statistical.ArrayWithStatistical.einsum"], [57, "ivy.array.statistical.ArrayWithStatistical.einsum"]], "ivy.array.statistical": [[56, "module-ivy.array.statistical"]], "max() (ivy.array.statistical.arraywithstatistical method)": [[56, "ivy.array.statistical.ArrayWithStatistical.max"], [57, "ivy.array.statistical.ArrayWithStatistical.max"]], "mean() (ivy.array.statistical.arraywithstatistical method)": [[56, "ivy.array.statistical.ArrayWithStatistical.mean"], [57, "ivy.array.statistical.ArrayWithStatistical.mean"]], "min() (ivy.array.statistical.arraywithstatistical method)": [[56, "ivy.array.statistical.ArrayWithStatistical.min"], [57, "ivy.array.statistical.ArrayWithStatistical.min"]], "prod() (ivy.array.statistical.arraywithstatistical method)": [[56, "ivy.array.statistical.ArrayWithStatistical.prod"], [57, "ivy.array.statistical.ArrayWithStatistical.prod"]], "std() (ivy.array.statistical.arraywithstatistical method)": [[56, "ivy.array.statistical.ArrayWithStatistical.std"], [57, "ivy.array.statistical.ArrayWithStatistical.std"]], "sum() (ivy.array.statistical.arraywithstatistical method)": [[56, "ivy.array.statistical.ArrayWithStatistical.sum"], [57, "ivy.array.statistical.ArrayWithStatistical.sum"]], "var() (ivy.array.statistical.arraywithstatistical method)": [[56, "ivy.array.statistical.ArrayWithStatistical.var"], [57, "ivy.array.statistical.ArrayWithStatistical.var"]], "arraywithutility (class in ivy.array.utility)": [[58, "ivy.array.utility.ArrayWithUtility"], [59, "ivy.array.utility.ArrayWithUtility"]], "all() (ivy.array.utility.arraywithutility method)": [[58, "ivy.array.utility.ArrayWithUtility.all"], [59, "ivy.array.utility.ArrayWithUtility.all"]], "any() (ivy.array.utility.arraywithutility method)": [[58, "ivy.array.utility.ArrayWithUtility.any"], [59, "ivy.array.utility.ArrayWithUtility.any"]], "ivy.array.utility": [[58, "module-ivy.array.utility"]], "add_ivy_array_instance_methods() (in module ivy.array.wrapping)": [[60, "ivy.array.wrapping.add_ivy_array_instance_methods"], [61, "ivy.array.wrapping.add_ivy_array_instance_methods"]], "ivy.array.wrapping": [[60, "module-ivy.array.wrapping"]], "container (class in ivy.container.container)": [[62, "ivy.container.container.Container"], [67, "ivy.container.container.Container"], [68, "ivy.container.container.Container"]], "__abs__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__abs__"], [67, "ivy.container.container.Container.__abs__"], [68, "ivy.container.container.Container.__abs__"]], "__add__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__add__"], [67, "ivy.container.container.Container.__add__"], [68, "ivy.container.container.Container.__add__"]], "__eq__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__eq__"], [67, "ivy.container.container.Container.__eq__"], [68, "ivy.container.container.Container.__eq__"]], "__ge__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__ge__"], [67, "ivy.container.container.Container.__ge__"], [68, "ivy.container.container.Container.__ge__"]], "__gt__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__gt__"], [67, "ivy.container.container.Container.__gt__"], [68, "ivy.container.container.Container.__gt__"]], "__init__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__init__"], [67, "ivy.container.container.Container.__init__"], [68, "ivy.container.container.Container.__init__"]], "__le__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__le__"], [67, "ivy.container.container.Container.__le__"], [68, "ivy.container.container.Container.__le__"]], "__lt__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__lt__"], [67, "ivy.container.container.Container.__lt__"], [68, "ivy.container.container.Container.__lt__"]], "__ne__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__ne__"], [67, "ivy.container.container.Container.__ne__"], [68, "ivy.container.container.Container.__ne__"]], "__pow__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__pow__"], [67, "ivy.container.container.Container.__pow__"], [68, "ivy.container.container.Container.__pow__"]], "__radd__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__radd__"], [67, "ivy.container.container.Container.__radd__"], [68, "ivy.container.container.Container.__radd__"]], "__rrshift__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__rrshift__"], [67, "ivy.container.container.Container.__rrshift__"], [68, "ivy.container.container.Container.__rrshift__"]], "__rshift__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__rshift__"], [67, "ivy.container.container.Container.__rshift__"], [68, "ivy.container.container.Container.__rshift__"]], "__rsub__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__rsub__"], [67, "ivy.container.container.Container.__rsub__"], [68, "ivy.container.container.Container.__rsub__"]], "__sub__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__sub__"], [67, "ivy.container.container.Container.__sub__"], [68, "ivy.container.container.Container.__sub__"]], "__truediv__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__truediv__"], [67, "ivy.container.container.Container.__truediv__"], [68, "ivy.container.container.Container.__truediv__"]], "__xor__() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.__xor__"], [67, "ivy.container.container.Container.__xor__"], [68, "ivy.container.container.Container.__xor__"]], "arange() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.arange"], [67, "ivy.container.container.Container.arange"], [68, "ivy.container.container.Container.arange"]], "arg_info() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.arg_info"], [67, "ivy.container.container.Container.arg_info"], [68, "ivy.container.container.Container.arg_info"]], "arg_names() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.arg_names"], [67, "ivy.container.container.Container.arg_names"], [68, "ivy.container.container.Container.arg_names"]], "array() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.array"], [67, "ivy.container.container.Container.array"], [68, "ivy.container.container.Container.array"]], "as_ivy_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.as_ivy_dev"], [67, "ivy.container.container.Container.as_ivy_dev"], [68, "ivy.container.container.Container.as_ivy_dev"]], "as_ivy_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.as_ivy_dtype"], [67, "ivy.container.container.Container.as_ivy_dtype"], [68, "ivy.container.container.Container.as_ivy_dtype"]], "as_native_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.as_native_dev"], [67, "ivy.container.container.Container.as_native_dev"], [68, "ivy.container.container.Container.as_native_dev"]], "as_native_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.as_native_dtype"], [67, "ivy.container.container.Container.as_native_dtype"], [68, "ivy.container.container.Container.as_native_dtype"]], "asarray() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.asarray"], [67, "ivy.container.container.Container.asarray"], [68, "ivy.container.container.Container.asarray"]], "asarray_handle_nestable() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.asarray_handle_nestable"], [67, "ivy.container.container.Container.asarray_handle_nestable"], [68, "ivy.container.container.Container.asarray_handle_nestable"]], "asarray_infer_device() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.asarray_infer_device"], [67, "ivy.container.container.Container.asarray_infer_device"], [68, "ivy.container.container.Container.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.asarray_to_native_arrays_and_back"], [67, "ivy.container.container.Container.asarray_to_native_arrays_and_back"], [68, "ivy.container.container.Container.asarray_to_native_arrays_and_back"]], "cache_fn() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.cache_fn"], [67, "ivy.container.container.Container.cache_fn"], [68, "ivy.container.container.Container.cache_fn"]], "check_float() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.check_float"], [67, "ivy.container.container.Container.check_float"], [68, "ivy.container.container.Container.check_float"]], "clear_mem_on_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.clear_mem_on_dev"], [67, "ivy.container.container.Container.clear_mem_on_dev"], [68, "ivy.container.container.Container.clear_mem_on_dev"]], "closest_valid_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.closest_valid_dtype"], [67, "ivy.container.container.Container.closest_valid_dtype"], [68, "ivy.container.container.Container.closest_valid_dtype"]], "container_types() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.container_types"], [67, "ivy.container.container.Container.container_types"], [68, "ivy.container.container.Container.container_types"]], "conv() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.conv"], [67, "ivy.container.container.Container.conv"], [68, "ivy.container.container.Container.conv"]], "conv_general_dilated() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.conv_general_dilated"], [67, "ivy.container.container.Container.conv_general_dilated"], [68, "ivy.container.container.Container.conv_general_dilated"]], "conv_general_transpose() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.conv_general_transpose"], [67, "ivy.container.container.Container.conv_general_transpose"], [68, "ivy.container.container.Container.conv_general_transpose"]], "copy_array() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.copy_array"], [67, "ivy.container.container.Container.copy_array"], [68, "ivy.container.container.Container.copy_array"]], "current_backend() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.current_backend"], [67, "ivy.container.container.Container.current_backend"], [68, "ivy.container.container.Container.current_backend"]], "current_backend_str() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.current_backend_str"], [67, "ivy.container.container.Container.current_backend_str"], [68, "ivy.container.container.Container.current_backend_str"]], "default() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.default"], [67, "ivy.container.container.Container.default"], [68, "ivy.container.container.Container.default"]], "default_complex_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.default_complex_dtype"], [67, "ivy.container.container.Container.default_complex_dtype"], [68, "ivy.container.container.Container.default_complex_dtype"]], "default_device() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.default_device"], [67, "ivy.container.container.Container.default_device"], [68, "ivy.container.container.Container.default_device"]], "default_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.default_dtype"], [67, "ivy.container.container.Container.default_dtype"], [68, "ivy.container.container.Container.default_dtype"]], "default_float_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.default_float_dtype"], [67, "ivy.container.container.Container.default_float_dtype"], [68, "ivy.container.container.Container.default_float_dtype"]], "default_int_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.default_int_dtype"], [67, "ivy.container.container.Container.default_int_dtype"], [68, "ivy.container.container.Container.default_int_dtype"]], "default_uint_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.default_uint_dtype"], [67, "ivy.container.container.Container.default_uint_dtype"], [68, "ivy.container.container.Container.default_uint_dtype"]], "deserialize() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.deserialize"], [67, "ivy.container.container.Container.deserialize"], [68, "ivy.container.container.Container.deserialize"]], "dev_util() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.dev_util"], [67, "ivy.container.container.Container.dev_util"], [68, "ivy.container.container.Container.dev_util"]], "dtype_bits() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.dtype_bits"], [67, "ivy.container.container.Container.dtype_bits"], [68, "ivy.container.container.Container.dtype_bits"]], "empty() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.empty"], [67, "ivy.container.container.Container.empty"], [68, "ivy.container.container.Container.empty"]], "execute_with_gradients() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.execute_with_gradients"], [67, "ivy.container.container.Container.execute_with_gradients"], [68, "ivy.container.container.Container.execute_with_gradients"]], "exists() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.exists"], [67, "ivy.container.container.Container.exists"], [68, "ivy.container.container.Container.exists"]], "eye() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.eye"], [67, "ivy.container.container.Container.eye"], [68, "ivy.container.container.Container.eye"]], "full() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.full"], [67, "ivy.container.container.Container.full"], [68, "ivy.container.container.Container.full"]], "function_supported_devices() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.function_supported_devices"], [67, "ivy.container.container.Container.function_supported_devices"], [68, "ivy.container.container.Container.function_supported_devices"]], "function_supported_devices_and_dtypes() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.function_supported_devices_and_dtypes"], [67, "ivy.container.container.Container.function_supported_devices_and_dtypes"], [68, "ivy.container.container.Container.function_supported_devices_and_dtypes"]], "function_supported_dtypes() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.function_supported_dtypes"], [67, "ivy.container.container.Container.function_supported_dtypes"], [68, "ivy.container.container.Container.function_supported_dtypes"]], "function_unsupported_devices() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.function_unsupported_devices"], [67, "ivy.container.container.Container.function_unsupported_devices"], [68, "ivy.container.container.Container.function_unsupported_devices"]], "function_unsupported_devices_and_dtypes() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.function_unsupported_devices_and_dtypes"], [67, "ivy.container.container.Container.function_unsupported_devices_and_dtypes"], [68, "ivy.container.container.Container.function_unsupported_devices_and_dtypes"]], "function_unsupported_dtypes() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.function_unsupported_dtypes"], [67, "ivy.container.container.Container.function_unsupported_dtypes"], [68, "ivy.container.container.Container.function_unsupported_dtypes"]], "get_all_arrays_in_memory() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.get_all_arrays_in_memory"], [67, "ivy.container.container.Container.get_all_arrays_in_memory"], [68, "ivy.container.container.Container.get_all_arrays_in_memory"]], "get_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.get_all_ivy_arrays_on_dev"], [67, "ivy.container.container.Container.get_all_ivy_arrays_on_dev"], [68, "ivy.container.container.Container.get_all_ivy_arrays_on_dev"]], "get_array_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.get_array_mode"], [67, "ivy.container.container.Container.get_array_mode"], [68, "ivy.container.container.Container.get_array_mode"]], "get_exception_trace_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.get_exception_trace_mode"], [67, "ivy.container.container.Container.get_exception_trace_mode"], [68, "ivy.container.container.Container.get_exception_trace_mode"]], "get_item() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.get_item"], [67, "ivy.container.container.Container.get_item"], [68, "ivy.container.container.Container.get_item"]], "get_min_base() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.get_min_base"], [67, "ivy.container.container.Container.get_min_base"], [68, "ivy.container.container.Container.get_min_base"]], "get_min_denominator() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.get_min_denominator"], [67, "ivy.container.container.Container.get_min_denominator"], [68, "ivy.container.container.Container.get_min_denominator"]], "get_nestable_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.get_nestable_mode"], [67, "ivy.container.container.Container.get_nestable_mode"], [68, "ivy.container.container.Container.get_nestable_mode"]], "get_queue_timeout() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.get_queue_timeout"], [67, "ivy.container.container.Container.get_queue_timeout"], [68, "ivy.container.container.Container.get_queue_timeout"]], "get_referrers_recursive() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.get_referrers_recursive"], [67, "ivy.container.container.Container.get_referrers_recursive"], [68, "ivy.container.container.Container.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.get_show_func_wrapper_trace_mode"], [67, "ivy.container.container.Container.get_show_func_wrapper_trace_mode"], [68, "ivy.container.container.Container.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.get_tmp_dir"], [67, "ivy.container.container.Container.get_tmp_dir"], [68, "ivy.container.container.Container.get_tmp_dir"]], "gpu_is_available() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.gpu_is_available"], [67, "ivy.container.container.Container.gpu_is_available"], [68, "ivy.container.container.Container.gpu_is_available"]], "grad() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.grad"], [67, "ivy.container.container.Container.grad"], [68, "ivy.container.container.Container.grad"]], "handle_array_function() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.handle_array_function"], [67, "ivy.container.container.Container.handle_array_function"], [68, "ivy.container.container.Container.handle_array_function"]], "handle_array_like_without_promotion() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.handle_array_like_without_promotion"], [67, "ivy.container.container.Container.handle_array_like_without_promotion"], [68, "ivy.container.container.Container.handle_array_like_without_promotion"]], "handle_exceptions() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.handle_exceptions"], [67, "ivy.container.container.Container.handle_exceptions"], [68, "ivy.container.container.Container.handle_exceptions"]], "handle_nestable() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.handle_nestable"], [67, "ivy.container.container.Container.handle_nestable"], [68, "ivy.container.container.Container.handle_nestable"]], "handle_out_argument() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.handle_out_argument"], [67, "ivy.container.container.Container.handle_out_argument"], [68, "ivy.container.container.Container.handle_out_argument"]], "handle_view() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.handle_view"], [67, "ivy.container.container.Container.handle_view"], [68, "ivy.container.container.Container.handle_view"]], "handle_view_indexing() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.handle_view_indexing"], [67, "ivy.container.container.Container.handle_view_indexing"], [68, "ivy.container.container.Container.handle_view_indexing"]], "infer_default_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.infer_default_dtype"], [67, "ivy.container.container.Container.infer_default_dtype"], [68, "ivy.container.container.Container.infer_default_dtype"]], "infer_device() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.infer_device"], [67, "ivy.container.container.Container.infer_device"], [68, "ivy.container.container.Container.infer_device"]], "infer_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.infer_dtype"], [67, "ivy.container.container.Container.infer_dtype"], [68, "ivy.container.container.Container.infer_dtype"]], "inplace_arrays_supported() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.inplace_arrays_supported"], [67, "ivy.container.container.Container.inplace_arrays_supported"], [68, "ivy.container.container.Container.inplace_arrays_supported"]], "inplace_variables_supported() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.inplace_variables_supported"], [67, "ivy.container.container.Container.inplace_variables_supported"], [68, "ivy.container.container.Container.inplace_variables_supported"]], "inputs_to_ivy_arrays() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.inputs_to_ivy_arrays"], [67, "ivy.container.container.Container.inputs_to_ivy_arrays"], [68, "ivy.container.container.Container.inputs_to_ivy_arrays"]], "inputs_to_native_arrays() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.inputs_to_native_arrays"], [67, "ivy.container.container.Container.inputs_to_native_arrays"], [68, "ivy.container.container.Container.inputs_to_native_arrays"]], "integer_arrays_to_float() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.integer_arrays_to_float"], [67, "ivy.container.container.Container.integer_arrays_to_float"], [68, "ivy.container.container.Container.integer_arrays_to_float"]], "invalid_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.invalid_dtype"], [67, "ivy.container.container.Container.invalid_dtype"], [68, "ivy.container.container.Container.invalid_dtype"]], "is_ivy_container() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.is_ivy_container"], [67, "ivy.container.container.Container.is_ivy_container"], [68, "ivy.container.container.Container.is_ivy_container"]], "isscalar() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.isscalar"], [67, "ivy.container.container.Container.isscalar"], [68, "ivy.container.container.Container.isscalar"]], "ivy.container.container": [[62, "module-ivy.container.container"], [67, "module-ivy.container.container"]], "jac() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.jac"], [67, "ivy.container.container.Container.jac"], [68, "ivy.container.container.Container.jac"]], "lu_factor() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.lu_factor"], [67, "ivy.container.container.Container.lu_factor"], [68, "ivy.container.container.Container.lu_factor"]], "match_kwargs() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.match_kwargs"], [67, "ivy.container.container.Container.match_kwargs"], [68, "ivy.container.container.Container.match_kwargs"]], "multiprocessing() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.multiprocessing"], [67, "ivy.container.container.Container.multiprocessing"], [68, "ivy.container.container.Container.multiprocessing"]], "normalize_axis_tuple() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.normalize_axis_tuple"], [67, "ivy.container.container.Container.normalize_axis_tuple"], [68, "ivy.container.container.Container.normalize_axis_tuple"]], "num_arrays_in_memory() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.num_arrays_in_memory"], [67, "ivy.container.container.Container.num_arrays_in_memory"], [68, "ivy.container.container.Container.num_arrays_in_memory"]], "num_cpu_cores() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.num_cpu_cores"], [67, "ivy.container.container.Container.num_cpu_cores"], [68, "ivy.container.container.Container.num_cpu_cores"]], "num_gpus() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.num_gpus"], [67, "ivy.container.container.Container.num_gpus"], [68, "ivy.container.container.Container.num_gpus"]], "num_ivy_arrays_on_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.num_ivy_arrays_on_dev"], [67, "ivy.container.container.Container.num_ivy_arrays_on_dev"], [68, "ivy.container.container.Container.num_ivy_arrays_on_dev"]], "ones() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.ones"], [67, "ivy.container.container.Container.ones"], [68, "ivy.container.container.Container.ones"]], "outputs_to_ivy_arrays() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.outputs_to_ivy_arrays"], [67, "ivy.container.container.Container.outputs_to_ivy_arrays"], [68, "ivy.container.container.Container.outputs_to_ivy_arrays"]], "percent_used_mem_on_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.percent_used_mem_on_dev"], [67, "ivy.container.container.Container.percent_used_mem_on_dev"], [68, "ivy.container.container.Container.percent_used_mem_on_dev"]], "print_all_arrays_in_memory() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.print_all_arrays_in_memory"], [67, "ivy.container.container.Container.print_all_arrays_in_memory"], [68, "ivy.container.container.Container.print_all_arrays_in_memory"]], "print_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.print_all_ivy_arrays_on_dev"], [67, "ivy.container.container.Container.print_all_ivy_arrays_on_dev"], [68, "ivy.container.container.Container.print_all_ivy_arrays_on_dev"]], "promote_types() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.promote_types"], [67, "ivy.container.container.Container.promote_types"], [68, "ivy.container.container.Container.promote_types"]], "promote_types_of_inputs() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.promote_types_of_inputs"], [67, "ivy.container.container.Container.promote_types_of_inputs"], [68, "ivy.container.container.Container.promote_types_of_inputs"]], "seed() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.seed"], [67, "ivy.container.container.Container.seed"], [68, "ivy.container.container.Container.seed"]], "set_array_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_array_mode"], [67, "ivy.container.container.Container.set_array_mode"], [68, "ivy.container.container.Container.set_array_mode"]], "set_default_complex_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_default_complex_dtype"], [67, "ivy.container.container.Container.set_default_complex_dtype"], [68, "ivy.container.container.Container.set_default_complex_dtype"]], "set_default_device() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_default_device"], [67, "ivy.container.container.Container.set_default_device"], [68, "ivy.container.container.Container.set_default_device"]], "set_default_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_default_dtype"], [67, "ivy.container.container.Container.set_default_dtype"], [68, "ivy.container.container.Container.set_default_dtype"]], "set_default_float_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_default_float_dtype"], [67, "ivy.container.container.Container.set_default_float_dtype"], [68, "ivy.container.container.Container.set_default_float_dtype"]], "set_default_int_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_default_int_dtype"], [67, "ivy.container.container.Container.set_default_int_dtype"], [68, "ivy.container.container.Container.set_default_int_dtype"]], "set_default_uint_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_default_uint_dtype"], [67, "ivy.container.container.Container.set_default_uint_dtype"], [68, "ivy.container.container.Container.set_default_uint_dtype"]], "set_exception_trace_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_exception_trace_mode"], [67, "ivy.container.container.Container.set_exception_trace_mode"], [68, "ivy.container.container.Container.set_exception_trace_mode"]], "set_min_base() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_min_base"], [67, "ivy.container.container.Container.set_min_base"], [68, "ivy.container.container.Container.set_min_base"]], "set_min_denominator() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_min_denominator"], [67, "ivy.container.container.Container.set_min_denominator"], [68, "ivy.container.container.Container.set_min_denominator"]], "set_nestable_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_nestable_mode"], [67, "ivy.container.container.Container.set_nestable_mode"], [68, "ivy.container.container.Container.set_nestable_mode"]], "set_queue_timeout() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_queue_timeout"], [67, "ivy.container.container.Container.set_queue_timeout"], [68, "ivy.container.container.Container.set_queue_timeout"]], "set_shape_array_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_shape_array_mode"], [67, "ivy.container.container.Container.set_shape_array_mode"], [68, "ivy.container.container.Container.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_show_func_wrapper_trace_mode"], [67, "ivy.container.container.Container.set_show_func_wrapper_trace_mode"], [68, "ivy.container.container.Container.set_show_func_wrapper_trace_mode"]], "set_split_factor() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_split_factor"], [67, "ivy.container.container.Container.set_split_factor"], [68, "ivy.container.container.Container.set_split_factor"]], "set_tmp_dir() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_tmp_dir"], [67, "ivy.container.container.Container.set_tmp_dir"], [68, "ivy.container.container.Container.set_tmp_dir"]], "set_with_grads() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.set_with_grads"], [67, "ivy.container.container.Container.set_with_grads"], [68, "ivy.container.container.Container.set_with_grads"]], "shape_array_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.shape_array_mode"], [67, "ivy.container.container.Container.shape_array_mode"], [68, "ivy.container.container.Container.shape_array_mode"]], "split_factor() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.split_factor"], [67, "ivy.container.container.Container.split_factor"], [68, "ivy.container.container.Container.split_factor"]], "split_func_call() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.split_func_call"], [67, "ivy.container.container.Container.split_func_call"], [68, "ivy.container.container.Container.split_func_call"]], "static_adam_step() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_adam_step"], [67, "ivy.container.container.Container.static_adam_step"], [68, "ivy.container.container.Container.static_adam_step"]], "static_adam_update() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_adam_update"], [67, "ivy.container.container.Container.static_adam_update"], [68, "ivy.container.container.Container.static_adam_update"]], "static_arg_info() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_arg_info"], [67, "ivy.container.container.Container.static_arg_info"], [68, "ivy.container.container.Container.static_arg_info"]], "static_arg_names() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_arg_names"], [67, "ivy.container.container.Container.static_arg_names"], [68, "ivy.container.container.Container.static_arg_names"]], "static_array() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_array"], [67, "ivy.container.container.Container.static_array"], [68, "ivy.container.container.Container.static_array"]], "static_as_ivy_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_as_ivy_dev"], [67, "ivy.container.container.Container.static_as_ivy_dev"], [68, "ivy.container.container.Container.static_as_ivy_dev"]], "static_as_ivy_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_as_ivy_dtype"], [67, "ivy.container.container.Container.static_as_ivy_dtype"], [68, "ivy.container.container.Container.static_as_ivy_dtype"]], "static_as_native_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_as_native_dev"], [67, "ivy.container.container.Container.static_as_native_dev"], [68, "ivy.container.container.Container.static_as_native_dev"]], "static_as_native_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_as_native_dtype"], [67, "ivy.container.container.Container.static_as_native_dtype"], [68, "ivy.container.container.Container.static_as_native_dtype"]], "static_asarray_handle_nestable() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_asarray_handle_nestable"], [67, "ivy.container.container.Container.static_asarray_handle_nestable"], [68, "ivy.container.container.Container.static_asarray_handle_nestable"]], "static_asarray_infer_device() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_asarray_infer_device"], [67, "ivy.container.container.Container.static_asarray_infer_device"], [68, "ivy.container.container.Container.static_asarray_infer_device"]], "static_asarray_to_native_arrays_and_back() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_asarray_to_native_arrays_and_back"], [67, "ivy.container.container.Container.static_asarray_to_native_arrays_and_back"], [68, "ivy.container.container.Container.static_asarray_to_native_arrays_and_back"]], "static_cache_fn() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_cache_fn"], [67, "ivy.container.container.Container.static_cache_fn"], [68, "ivy.container.container.Container.static_cache_fn"]], "static_check_float() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_check_float"], [67, "ivy.container.container.Container.static_check_float"], [68, "ivy.container.container.Container.static_check_float"]], "static_clear_mem_on_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_clear_mem_on_dev"], [67, "ivy.container.container.Container.static_clear_mem_on_dev"], [68, "ivy.container.container.Container.static_clear_mem_on_dev"]], "static_closest_valid_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_closest_valid_dtype"], [67, "ivy.container.container.Container.static_closest_valid_dtype"], [68, "ivy.container.container.Container.static_closest_valid_dtype"]], "static_container_types() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_container_types"], [67, "ivy.container.container.Container.static_container_types"], [68, "ivy.container.container.Container.static_container_types"]], "static_conv() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_conv"], [67, "ivy.container.container.Container.static_conv"], [68, "ivy.container.container.Container.static_conv"]], "static_conv_general_dilated() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_conv_general_dilated"], [67, "ivy.container.container.Container.static_conv_general_dilated"], [68, "ivy.container.container.Container.static_conv_general_dilated"]], "static_conv_general_transpose() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_conv_general_transpose"], [67, "ivy.container.container.Container.static_conv_general_transpose"], [68, "ivy.container.container.Container.static_conv_general_transpose"]], "static_copy_array() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_copy_array"], [67, "ivy.container.container.Container.static_copy_array"], [68, "ivy.container.container.Container.static_copy_array"]], "static_current_backend() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_current_backend"], [67, "ivy.container.container.Container.static_current_backend"], [68, "ivy.container.container.Container.static_current_backend"]], "static_current_backend_str() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_current_backend_str"], [67, "ivy.container.container.Container.static_current_backend_str"], [68, "ivy.container.container.Container.static_current_backend_str"]], "static_default() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_default"], [67, "ivy.container.container.Container.static_default"], [68, "ivy.container.container.Container.static_default"]], "static_default_device() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_default_device"], [67, "ivy.container.container.Container.static_default_device"], [68, "ivy.container.container.Container.static_default_device"]], "static_default_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_default_dtype"], [67, "ivy.container.container.Container.static_default_dtype"], [68, "ivy.container.container.Container.static_default_dtype"]], "static_default_int_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_default_int_dtype"], [67, "ivy.container.container.Container.static_default_int_dtype"], [68, "ivy.container.container.Container.static_default_int_dtype"]], "static_default_uint_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_default_uint_dtype"], [67, "ivy.container.container.Container.static_default_uint_dtype"], [68, "ivy.container.container.Container.static_default_uint_dtype"]], "static_deserialize() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_deserialize"], [67, "ivy.container.container.Container.static_deserialize"], [68, "ivy.container.container.Container.static_deserialize"]], "static_dev_util() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_dev_util"], [67, "ivy.container.container.Container.static_dev_util"], [68, "ivy.container.container.Container.static_dev_util"]], "static_dtype_bits() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_dtype_bits"], [67, "ivy.container.container.Container.static_dtype_bits"], [68, "ivy.container.container.Container.static_dtype_bits"]], "static_einsum() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_einsum"], [67, "ivy.container.container.Container.static_einsum"], [68, "ivy.container.container.Container.static_einsum"]], "static_empty() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_empty"], [67, "ivy.container.container.Container.static_empty"], [68, "ivy.container.container.Container.static_empty"]], "static_execute_with_gradients() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_execute_with_gradients"], [67, "ivy.container.container.Container.static_execute_with_gradients"], [68, "ivy.container.container.Container.static_execute_with_gradients"]], "static_exists() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_exists"], [67, "ivy.container.container.Container.static_exists"], [68, "ivy.container.container.Container.static_exists"]], "static_full() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_full"], [67, "ivy.container.container.Container.static_full"], [68, "ivy.container.container.Container.static_full"]], "static_function_supported_devices() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_function_supported_devices"], [67, "ivy.container.container.Container.static_function_supported_devices"], [68, "ivy.container.container.Container.static_function_supported_devices"]], "static_function_supported_devices_and_dtypes() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_function_supported_devices_and_dtypes"], [67, "ivy.container.container.Container.static_function_supported_devices_and_dtypes"], [68, "ivy.container.container.Container.static_function_supported_devices_and_dtypes"]], "static_function_unsupported_devices() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_function_unsupported_devices"], [67, "ivy.container.container.Container.static_function_unsupported_devices"], [68, "ivy.container.container.Container.static_function_unsupported_devices"]], "static_function_unsupported_devices_and_dtypes() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_function_unsupported_devices_and_dtypes"], [67, "ivy.container.container.Container.static_function_unsupported_devices_and_dtypes"], [68, "ivy.container.container.Container.static_function_unsupported_devices_and_dtypes"]], "static_get() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_get"], [67, "ivy.container.container.Container.static_get"], [68, "ivy.container.container.Container.static_get"]], "static_get_all_arrays_in_memory() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_get_all_arrays_in_memory"], [67, "ivy.container.container.Container.static_get_all_arrays_in_memory"], [68, "ivy.container.container.Container.static_get_all_arrays_in_memory"]], "static_get_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_get_all_ivy_arrays_on_dev"], [67, "ivy.container.container.Container.static_get_all_ivy_arrays_on_dev"], [68, "ivy.container.container.Container.static_get_all_ivy_arrays_on_dev"]], "static_get_array_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_get_array_mode"], [67, "ivy.container.container.Container.static_get_array_mode"], [68, "ivy.container.container.Container.static_get_array_mode"]], "static_get_exception_trace_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_get_exception_trace_mode"], [67, "ivy.container.container.Container.static_get_exception_trace_mode"], [68, "ivy.container.container.Container.static_get_exception_trace_mode"]], "static_get_item() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_get_item"], [67, "ivy.container.container.Container.static_get_item"], [68, "ivy.container.container.Container.static_get_item"]], "static_get_min_base() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_get_min_base"], [67, "ivy.container.container.Container.static_get_min_base"], [68, "ivy.container.container.Container.static_get_min_base"]], "static_get_min_denominator() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_get_min_denominator"], [67, "ivy.container.container.Container.static_get_min_denominator"], [68, "ivy.container.container.Container.static_get_min_denominator"]], "static_get_nestable_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_get_nestable_mode"], [67, "ivy.container.container.Container.static_get_nestable_mode"], [68, "ivy.container.container.Container.static_get_nestable_mode"]], "static_get_queue_timeout() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_get_queue_timeout"], [67, "ivy.container.container.Container.static_get_queue_timeout"], [68, "ivy.container.container.Container.static_get_queue_timeout"]], "static_get_referrers_recursive() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_get_referrers_recursive"], [67, "ivy.container.container.Container.static_get_referrers_recursive"], [68, "ivy.container.container.Container.static_get_referrers_recursive"]], "static_get_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_get_show_func_wrapper_trace_mode"], [67, "ivy.container.container.Container.static_get_show_func_wrapper_trace_mode"], [68, "ivy.container.container.Container.static_get_show_func_wrapper_trace_mode"]], "static_get_tmp_dir() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_get_tmp_dir"], [67, "ivy.container.container.Container.static_get_tmp_dir"], [68, "ivy.container.container.Container.static_get_tmp_dir"]], "static_gpu_is_available() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_gpu_is_available"], [67, "ivy.container.container.Container.static_gpu_is_available"], [68, "ivy.container.container.Container.static_gpu_is_available"]], "static_grad() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_grad"], [67, "ivy.container.container.Container.static_grad"], [68, "ivy.container.container.Container.static_grad"]], "static_gradient_descent_update() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_gradient_descent_update"], [67, "ivy.container.container.Container.static_gradient_descent_update"], [68, "ivy.container.container.Container.static_gradient_descent_update"]], "static_handle_array_function() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_handle_array_function"], [67, "ivy.container.container.Container.static_handle_array_function"], [68, "ivy.container.container.Container.static_handle_array_function"]], "static_handle_array_like_without_promotion() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_handle_array_like_without_promotion"], [67, "ivy.container.container.Container.static_handle_array_like_without_promotion"], [68, "ivy.container.container.Container.static_handle_array_like_without_promotion"]], "static_handle_exceptions() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_handle_exceptions"], [67, "ivy.container.container.Container.static_handle_exceptions"], [68, "ivy.container.container.Container.static_handle_exceptions"]], "static_handle_nestable() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_handle_nestable"], [67, "ivy.container.container.Container.static_handle_nestable"], [68, "ivy.container.container.Container.static_handle_nestable"]], "static_handle_out_argument() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_handle_out_argument"], [67, "ivy.container.container.Container.static_handle_out_argument"], [68, "ivy.container.container.Container.static_handle_out_argument"]], "static_handle_view() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_handle_view"], [67, "ivy.container.container.Container.static_handle_view"], [68, "ivy.container.container.Container.static_handle_view"]], "static_handle_view_indexing() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_handle_view_indexing"], [67, "ivy.container.container.Container.static_handle_view_indexing"], [68, "ivy.container.container.Container.static_handle_view_indexing"]], "static_infer_default_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_infer_default_dtype"], [67, "ivy.container.container.Container.static_infer_default_dtype"], [68, "ivy.container.container.Container.static_infer_default_dtype"]], "static_infer_device() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_infer_device"], [67, "ivy.container.container.Container.static_infer_device"], [68, "ivy.container.container.Container.static_infer_device"]], "static_infer_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_infer_dtype"], [67, "ivy.container.container.Container.static_infer_dtype"], [68, "ivy.container.container.Container.static_infer_dtype"]], "static_inplace_arrays_supported() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_inplace_arrays_supported"], [67, "ivy.container.container.Container.static_inplace_arrays_supported"], [68, "ivy.container.container.Container.static_inplace_arrays_supported"]], "static_inplace_variables_supported() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_inplace_variables_supported"], [67, "ivy.container.container.Container.static_inplace_variables_supported"], [68, "ivy.container.container.Container.static_inplace_variables_supported"]], "static_inputs_to_ivy_arrays() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_inputs_to_ivy_arrays"], [67, "ivy.container.container.Container.static_inputs_to_ivy_arrays"], [68, "ivy.container.container.Container.static_inputs_to_ivy_arrays"]], "static_inputs_to_native_arrays() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_inputs_to_native_arrays"], [67, "ivy.container.container.Container.static_inputs_to_native_arrays"], [68, "ivy.container.container.Container.static_inputs_to_native_arrays"]], "static_integer_arrays_to_float() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_integer_arrays_to_float"], [67, "ivy.container.container.Container.static_integer_arrays_to_float"], [68, "ivy.container.container.Container.static_integer_arrays_to_float"]], "static_invalid_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_invalid_dtype"], [67, "ivy.container.container.Container.static_invalid_dtype"], [68, "ivy.container.container.Container.static_invalid_dtype"]], "static_is_ivy_container() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_is_ivy_container"], [67, "ivy.container.container.Container.static_is_ivy_container"], [68, "ivy.container.container.Container.static_is_ivy_container"]], "static_isscalar() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_isscalar"], [67, "ivy.container.container.Container.static_isscalar"], [68, "ivy.container.container.Container.static_isscalar"]], "static_jac() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_jac"], [67, "ivy.container.container.Container.static_jac"], [68, "ivy.container.container.Container.static_jac"]], "static_lamb_update() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_lamb_update"], [67, "ivy.container.container.Container.static_lamb_update"], [68, "ivy.container.container.Container.static_lamb_update"]], "static_lars_update() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_lars_update"], [67, "ivy.container.container.Container.static_lars_update"], [68, "ivy.container.container.Container.static_lars_update"]], "static_layer_norm() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_layer_norm"], [67, "ivy.container.container.Container.static_layer_norm"], [68, "ivy.container.container.Container.static_layer_norm"]], "static_lu_factor() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_lu_factor"], [67, "ivy.container.container.Container.static_lu_factor"], [68, "ivy.container.container.Container.static_lu_factor"]], "static_match_kwargs() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_match_kwargs"], [67, "ivy.container.container.Container.static_match_kwargs"], [68, "ivy.container.container.Container.static_match_kwargs"]], "static_max() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_max"], [67, "ivy.container.container.Container.static_max"], [68, "ivy.container.container.Container.static_max"]], "static_mean() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_mean"], [67, "ivy.container.container.Container.static_mean"], [68, "ivy.container.container.Container.static_mean"]], "static_min() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_min"], [67, "ivy.container.container.Container.static_min"], [68, "ivy.container.container.Container.static_min"]], "static_multiprocessing() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_multiprocessing"], [67, "ivy.container.container.Container.static_multiprocessing"], [68, "ivy.container.container.Container.static_multiprocessing"]], "static_normalize_axis_tuple() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_normalize_axis_tuple"], [67, "ivy.container.container.Container.static_normalize_axis_tuple"], [68, "ivy.container.container.Container.static_normalize_axis_tuple"]], "static_num_arrays_in_memory() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_num_arrays_in_memory"], [67, "ivy.container.container.Container.static_num_arrays_in_memory"], [68, "ivy.container.container.Container.static_num_arrays_in_memory"]], "static_num_cpu_cores() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_num_cpu_cores"], [67, "ivy.container.container.Container.static_num_cpu_cores"], [68, "ivy.container.container.Container.static_num_cpu_cores"]], "static_num_gpus() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_num_gpus"], [67, "ivy.container.container.Container.static_num_gpus"], [68, "ivy.container.container.Container.static_num_gpus"]], "static_num_ivy_arrays_on_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_num_ivy_arrays_on_dev"], [67, "ivy.container.container.Container.static_num_ivy_arrays_on_dev"], [68, "ivy.container.container.Container.static_num_ivy_arrays_on_dev"]], "static_optimizer_update() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_optimizer_update"], [67, "ivy.container.container.Container.static_optimizer_update"], [68, "ivy.container.container.Container.static_optimizer_update"]], "static_outputs_to_ivy_arrays() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_outputs_to_ivy_arrays"], [67, "ivy.container.container.Container.static_outputs_to_ivy_arrays"], [68, "ivy.container.container.Container.static_outputs_to_ivy_arrays"]], "static_percent_used_mem_on_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_percent_used_mem_on_dev"], [67, "ivy.container.container.Container.static_percent_used_mem_on_dev"], [68, "ivy.container.container.Container.static_percent_used_mem_on_dev"]], "static_print_all_arrays_in_memory() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_print_all_arrays_in_memory"], [67, "ivy.container.container.Container.static_print_all_arrays_in_memory"], [68, "ivy.container.container.Container.static_print_all_arrays_in_memory"]], "static_print_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_print_all_ivy_arrays_on_dev"], [67, "ivy.container.container.Container.static_print_all_ivy_arrays_on_dev"], [68, "ivy.container.container.Container.static_print_all_ivy_arrays_on_dev"]], "static_promote_types() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_promote_types"], [67, "ivy.container.container.Container.static_promote_types"], [68, "ivy.container.container.Container.static_promote_types"]], "static_promote_types_of_inputs() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_promote_types_of_inputs"], [67, "ivy.container.container.Container.static_promote_types_of_inputs"], [68, "ivy.container.container.Container.static_promote_types_of_inputs"]], "static_seed() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_seed"], [67, "ivy.container.container.Container.static_seed"], [68, "ivy.container.container.Container.static_seed"]], "static_set_array_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_array_mode"], [67, "ivy.container.container.Container.static_set_array_mode"], [68, "ivy.container.container.Container.static_set_array_mode"]], "static_set_default_complex_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_default_complex_dtype"], [67, "ivy.container.container.Container.static_set_default_complex_dtype"], [68, "ivy.container.container.Container.static_set_default_complex_dtype"]], "static_set_default_device() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_default_device"], [67, "ivy.container.container.Container.static_set_default_device"], [68, "ivy.container.container.Container.static_set_default_device"]], "static_set_default_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_default_dtype"], [67, "ivy.container.container.Container.static_set_default_dtype"], [68, "ivy.container.container.Container.static_set_default_dtype"]], "static_set_default_float_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_default_float_dtype"], [67, "ivy.container.container.Container.static_set_default_float_dtype"], [68, "ivy.container.container.Container.static_set_default_float_dtype"]], "static_set_default_int_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_default_int_dtype"], [67, "ivy.container.container.Container.static_set_default_int_dtype"], [68, "ivy.container.container.Container.static_set_default_int_dtype"]], "static_set_default_uint_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_default_uint_dtype"], [67, "ivy.container.container.Container.static_set_default_uint_dtype"], [68, "ivy.container.container.Container.static_set_default_uint_dtype"]], "static_set_exception_trace_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_exception_trace_mode"], [67, "ivy.container.container.Container.static_set_exception_trace_mode"], [68, "ivy.container.container.Container.static_set_exception_trace_mode"]], "static_set_min_base() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_min_base"], [67, "ivy.container.container.Container.static_set_min_base"], [68, "ivy.container.container.Container.static_set_min_base"]], "static_set_min_denominator() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_min_denominator"], [67, "ivy.container.container.Container.static_set_min_denominator"], [68, "ivy.container.container.Container.static_set_min_denominator"]], "static_set_nestable_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_nestable_mode"], [67, "ivy.container.container.Container.static_set_nestable_mode"], [68, "ivy.container.container.Container.static_set_nestable_mode"]], "static_set_queue_timeout() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_queue_timeout"], [67, "ivy.container.container.Container.static_set_queue_timeout"], [68, "ivy.container.container.Container.static_set_queue_timeout"]], "static_set_shape_array_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_shape_array_mode"], [67, "ivy.container.container.Container.static_set_shape_array_mode"], [68, "ivy.container.container.Container.static_set_shape_array_mode"]], "static_set_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_show_func_wrapper_trace_mode"], [67, "ivy.container.container.Container.static_set_show_func_wrapper_trace_mode"], [68, "ivy.container.container.Container.static_set_show_func_wrapper_trace_mode"]], "static_set_split_factor() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_split_factor"], [67, "ivy.container.container.Container.static_set_split_factor"], [68, "ivy.container.container.Container.static_set_split_factor"]], "static_set_tmp_dir() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_tmp_dir"], [67, "ivy.container.container.Container.static_set_tmp_dir"], [68, "ivy.container.container.Container.static_set_tmp_dir"]], "static_set_with_grads() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_set_with_grads"], [67, "ivy.container.container.Container.static_set_with_grads"], [68, "ivy.container.container.Container.static_set_with_grads"]], "static_shape() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_shape"], [67, "ivy.container.container.Container.static_shape"], [68, "ivy.container.container.Container.static_shape"]], "static_shape_array_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_shape_array_mode"], [67, "ivy.container.container.Container.static_shape_array_mode"], [68, "ivy.container.container.Container.static_shape_array_mode"]], "static_split_factor() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_split_factor"], [67, "ivy.container.container.Container.static_split_factor"], [68, "ivy.container.container.Container.static_split_factor"]], "static_split_func_call() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_split_func_call"], [67, "ivy.container.container.Container.static_split_func_call"], [68, "ivy.container.container.Container.static_split_func_call"]], "static_std() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_std"], [67, "ivy.container.container.Container.static_std"], [68, "ivy.container.container.Container.static_std"]], "static_tensorsolve() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_tensorsolve"], [67, "ivy.container.container.Container.static_tensorsolve"], [68, "ivy.container.container.Container.static_tensorsolve"]], "static_to_ivy_shape() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_to_ivy_shape"], [67, "ivy.container.container.Container.static_to_ivy_shape"], [68, "ivy.container.container.Container.static_to_ivy_shape"]], "static_to_native_arrays_and_back() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_to_native_arrays_and_back"], [67, "ivy.container.container.Container.static_to_native_arrays_and_back"], [68, "ivy.container.container.Container.static_to_native_arrays_and_back"]], "static_to_native_shape() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_to_native_shape"], [67, "ivy.container.container.Container.static_to_native_shape"], [68, "ivy.container.container.Container.static_to_native_shape"]], "static_total_mem_on_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_total_mem_on_dev"], [67, "ivy.container.container.Container.static_total_mem_on_dev"], [68, "ivy.container.container.Container.static_total_mem_on_dev"]], "static_tpu_is_available() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_tpu_is_available"], [67, "ivy.container.container.Container.static_tpu_is_available"], [68, "ivy.container.container.Container.static_tpu_is_available"]], "static_try_else_none() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_try_else_none"], [67, "ivy.container.container.Container.static_try_else_none"], [68, "ivy.container.container.Container.static_try_else_none"]], "static_type_promote_arrays() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_type_promote_arrays"], [67, "ivy.container.container.Container.static_type_promote_arrays"], [68, "ivy.container.container.Container.static_type_promote_arrays"]], "static_unset_array_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_unset_array_mode"], [67, "ivy.container.container.Container.static_unset_array_mode"], [68, "ivy.container.container.Container.static_unset_array_mode"]], "static_unset_default_complex_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_unset_default_complex_dtype"], [67, "ivy.container.container.Container.static_unset_default_complex_dtype"], [68, "ivy.container.container.Container.static_unset_default_complex_dtype"]], "static_unset_default_device() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_unset_default_device"], [67, "ivy.container.container.Container.static_unset_default_device"], [68, "ivy.container.container.Container.static_unset_default_device"]], "static_unset_default_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_unset_default_dtype"], [67, "ivy.container.container.Container.static_unset_default_dtype"], [68, "ivy.container.container.Container.static_unset_default_dtype"]], "static_unset_default_float_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_unset_default_float_dtype"], [67, "ivy.container.container.Container.static_unset_default_float_dtype"], [68, "ivy.container.container.Container.static_unset_default_float_dtype"]], "static_unset_default_int_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_unset_default_int_dtype"], [67, "ivy.container.container.Container.static_unset_default_int_dtype"], [68, "ivy.container.container.Container.static_unset_default_int_dtype"]], "static_unset_default_uint_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_unset_default_uint_dtype"], [67, "ivy.container.container.Container.static_unset_default_uint_dtype"], [68, "ivy.container.container.Container.static_unset_default_uint_dtype"]], "static_unset_exception_trace_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_unset_exception_trace_mode"], [67, "ivy.container.container.Container.static_unset_exception_trace_mode"], [68, "ivy.container.container.Container.static_unset_exception_trace_mode"]], "static_unset_nestable_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_unset_nestable_mode"], [67, "ivy.container.container.Container.static_unset_nestable_mode"], [68, "ivy.container.container.Container.static_unset_nestable_mode"]], "static_unset_queue_timeout() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_unset_queue_timeout"], [67, "ivy.container.container.Container.static_unset_queue_timeout"], [68, "ivy.container.container.Container.static_unset_queue_timeout"]], "static_unset_shape_array_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_unset_shape_array_mode"], [67, "ivy.container.container.Container.static_unset_shape_array_mode"], [68, "ivy.container.container.Container.static_unset_shape_array_mode"]], "static_unset_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_unset_show_func_wrapper_trace_mode"], [67, "ivy.container.container.Container.static_unset_show_func_wrapper_trace_mode"], [68, "ivy.container.container.Container.static_unset_show_func_wrapper_trace_mode"]], "static_unset_with_grads() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_unset_with_grads"], [67, "ivy.container.container.Container.static_unset_with_grads"], [68, "ivy.container.container.Container.static_unset_with_grads"]], "static_used_mem_on_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_used_mem_on_dev"], [67, "ivy.container.container.Container.static_used_mem_on_dev"], [68, "ivy.container.container.Container.static_used_mem_on_dev"]], "static_valid_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_valid_dtype"], [67, "ivy.container.container.Container.static_valid_dtype"], [68, "ivy.container.container.Container.static_valid_dtype"]], "static_value_and_grad() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_value_and_grad"], [67, "ivy.container.container.Container.static_value_and_grad"], [68, "ivy.container.container.Container.static_value_and_grad"]], "static_vmap() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_vmap"], [67, "ivy.container.container.Container.static_vmap"], [68, "ivy.container.container.Container.static_vmap"]], "static_with_grads() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_with_grads"], [67, "ivy.container.container.Container.static_with_grads"], [68, "ivy.container.container.Container.static_with_grads"]], "static_wraps() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.static_wraps"], [67, "ivy.container.container.Container.static_wraps"], [68, "ivy.container.container.Container.static_wraps"]], "to_ivy_shape() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.to_ivy_shape"], [67, "ivy.container.container.Container.to_ivy_shape"], [68, "ivy.container.container.Container.to_ivy_shape"]], "to_native_arrays_and_back() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.to_native_arrays_and_back"], [67, "ivy.container.container.Container.to_native_arrays_and_back"], [68, "ivy.container.container.Container.to_native_arrays_and_back"]], "to_native_shape() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.to_native_shape"], [67, "ivy.container.container.Container.to_native_shape"], [68, "ivy.container.container.Container.to_native_shape"]], "total_mem_on_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.total_mem_on_dev"], [67, "ivy.container.container.Container.total_mem_on_dev"], [68, "ivy.container.container.Container.total_mem_on_dev"]], "tpu_is_available() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.tpu_is_available"], [67, "ivy.container.container.Container.tpu_is_available"], [68, "ivy.container.container.Container.tpu_is_available"]], "try_else_none() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.try_else_none"], [67, "ivy.container.container.Container.try_else_none"], [68, "ivy.container.container.Container.try_else_none"]], "type_promote_arrays() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.type_promote_arrays"], [67, "ivy.container.container.Container.type_promote_arrays"], [68, "ivy.container.container.Container.type_promote_arrays"]], "unset_array_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.unset_array_mode"], [67, "ivy.container.container.Container.unset_array_mode"], [68, "ivy.container.container.Container.unset_array_mode"]], "unset_default_complex_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.unset_default_complex_dtype"], [67, "ivy.container.container.Container.unset_default_complex_dtype"], [68, "ivy.container.container.Container.unset_default_complex_dtype"]], "unset_default_device() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.unset_default_device"], [67, "ivy.container.container.Container.unset_default_device"], [68, "ivy.container.container.Container.unset_default_device"]], "unset_default_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.unset_default_dtype"], [67, "ivy.container.container.Container.unset_default_dtype"], [68, "ivy.container.container.Container.unset_default_dtype"]], "unset_default_float_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.unset_default_float_dtype"], [67, "ivy.container.container.Container.unset_default_float_dtype"], [68, "ivy.container.container.Container.unset_default_float_dtype"]], "unset_default_int_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.unset_default_int_dtype"], [67, "ivy.container.container.Container.unset_default_int_dtype"], [68, "ivy.container.container.Container.unset_default_int_dtype"]], "unset_default_uint_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.unset_default_uint_dtype"], [67, "ivy.container.container.Container.unset_default_uint_dtype"], [68, "ivy.container.container.Container.unset_default_uint_dtype"]], "unset_exception_trace_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.unset_exception_trace_mode"], [67, "ivy.container.container.Container.unset_exception_trace_mode"], [68, "ivy.container.container.Container.unset_exception_trace_mode"]], "unset_nestable_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.unset_nestable_mode"], [67, "ivy.container.container.Container.unset_nestable_mode"], [68, "ivy.container.container.Container.unset_nestable_mode"]], "unset_queue_timeout() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.unset_queue_timeout"], [67, "ivy.container.container.Container.unset_queue_timeout"], [68, "ivy.container.container.Container.unset_queue_timeout"]], "unset_shape_array_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.unset_shape_array_mode"], [67, "ivy.container.container.Container.unset_shape_array_mode"], [68, "ivy.container.container.Container.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.unset_show_func_wrapper_trace_mode"], [67, "ivy.container.container.Container.unset_show_func_wrapper_trace_mode"], [68, "ivy.container.container.Container.unset_show_func_wrapper_trace_mode"]], "unset_with_grads() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.unset_with_grads"], [67, "ivy.container.container.Container.unset_with_grads"], [68, "ivy.container.container.Container.unset_with_grads"]], "used_mem_on_dev() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.used_mem_on_dev"], [67, "ivy.container.container.Container.used_mem_on_dev"], [68, "ivy.container.container.Container.used_mem_on_dev"]], "valid_dtype() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.valid_dtype"], [67, "ivy.container.container.Container.valid_dtype"], [68, "ivy.container.container.Container.valid_dtype"]], "value_and_grad() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.value_and_grad"], [67, "ivy.container.container.Container.value_and_grad"], [68, "ivy.container.container.Container.value_and_grad"]], "vmap() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.vmap"], [67, "ivy.container.container.Container.vmap"], [68, "ivy.container.container.Container.vmap"]], "with_grads() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.with_grads"], [67, "ivy.container.container.Container.with_grads"], [68, "ivy.container.container.Container.with_grads"]], "wraps() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.wraps"], [67, "ivy.container.container.Container.wraps"], [68, "ivy.container.container.Container.wraps"]], "zeros() (ivy.container.container.container method)": [[62, "ivy.container.container.Container.zeros"], [67, "ivy.container.container.Container.zeros"], [68, "ivy.container.container.Container.zeros"]], "containerwithactivations (class in ivy.container.activations)": [[63, "ivy.container.activations.ContainerWithActivations"], [64, "ivy.container.activations.ContainerWithActivations"]], "gelu() (ivy.container.activations.containerwithactivations method)": [[63, "ivy.container.activations.ContainerWithActivations.gelu"], [64, "ivy.container.activations.ContainerWithActivations.gelu"]], "ivy.container.activations": [[63, "module-ivy.container.activations"]], "leaky_relu() (ivy.container.activations.containerwithactivations method)": [[63, "ivy.container.activations.ContainerWithActivations.leaky_relu"], [64, "ivy.container.activations.ContainerWithActivations.leaky_relu"]], "log_softmax() (ivy.container.activations.containerwithactivations method)": [[63, "ivy.container.activations.ContainerWithActivations.log_softmax"], [64, "ivy.container.activations.ContainerWithActivations.log_softmax"]], "mish() (ivy.container.activations.containerwithactivations method)": [[63, "ivy.container.activations.ContainerWithActivations.mish"], [64, "ivy.container.activations.ContainerWithActivations.mish"]], "relu() (ivy.container.activations.containerwithactivations method)": [[63, "ivy.container.activations.ContainerWithActivations.relu"], [64, "ivy.container.activations.ContainerWithActivations.relu"]], "sigmoid() (ivy.container.activations.containerwithactivations method)": [[63, "ivy.container.activations.ContainerWithActivations.sigmoid"], [64, "ivy.container.activations.ContainerWithActivations.sigmoid"]], "softmax() (ivy.container.activations.containerwithactivations method)": [[63, "ivy.container.activations.ContainerWithActivations.softmax"], [64, "ivy.container.activations.ContainerWithActivations.softmax"]], "softplus() (ivy.container.activations.containerwithactivations method)": [[63, "ivy.container.activations.ContainerWithActivations.softplus"], [64, "ivy.container.activations.ContainerWithActivations.softplus"]], "static_gelu() (ivy.container.activations.containerwithactivations static method)": [[63, "ivy.container.activations.ContainerWithActivations.static_gelu"], [64, "ivy.container.activations.ContainerWithActivations.static_gelu"]], "static_leaky_relu() (ivy.container.activations.containerwithactivations static method)": [[63, "ivy.container.activations.ContainerWithActivations.static_leaky_relu"], [64, "ivy.container.activations.ContainerWithActivations.static_leaky_relu"]], "static_log_softmax() (ivy.container.activations.containerwithactivations static method)": [[63, "ivy.container.activations.ContainerWithActivations.static_log_softmax"], [64, "ivy.container.activations.ContainerWithActivations.static_log_softmax"]], "static_mish() (ivy.container.activations.containerwithactivations static method)": [[63, "ivy.container.activations.ContainerWithActivations.static_mish"], [64, "ivy.container.activations.ContainerWithActivations.static_mish"]], "static_relu() (ivy.container.activations.containerwithactivations static method)": [[63, "ivy.container.activations.ContainerWithActivations.static_relu"], [64, "ivy.container.activations.ContainerWithActivations.static_relu"]], "static_sigmoid() (ivy.container.activations.containerwithactivations static method)": [[63, "ivy.container.activations.ContainerWithActivations.static_sigmoid"], [64, "ivy.container.activations.ContainerWithActivations.static_sigmoid"]], "static_softmax() (ivy.container.activations.containerwithactivations static method)": [[63, "ivy.container.activations.ContainerWithActivations.static_softmax"], [64, "ivy.container.activations.ContainerWithActivations.static_softmax"]], "static_softplus() (ivy.container.activations.containerwithactivations static method)": [[63, "ivy.container.activations.ContainerWithActivations.static_softplus"], [64, "ivy.container.activations.ContainerWithActivations.static_softplus"]], "containerbase (class in ivy.container.base)": [[65, "ivy.container.base.ContainerBase"], [66, "ivy.container.base.ContainerBase"]], "__getitem__() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.__getitem__"], [66, "ivy.container.base.ContainerBase.__getitem__"]], "__init__() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.__init__"], [66, "ivy.container.base.ContainerBase.__init__"]], "__setitem__() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.__setitem__"], [66, "ivy.container.base.ContainerBase.__setitem__"]], "cont_all_false() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_all_false"], [66, "ivy.container.base.ContainerBase.cont_all_false"]], "cont_all_key_chains() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_all_key_chains"], [66, "ivy.container.base.ContainerBase.cont_all_key_chains"]], "cont_all_true() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_all_true"], [66, "ivy.container.base.ContainerBase.cont_all_true"]], "cont_as_bools() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_as_bools"], [66, "ivy.container.base.ContainerBase.cont_as_bools"]], "cont_assert_contains_sub_container() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_assert_contains_sub_container"], [66, "ivy.container.base.ContainerBase.cont_assert_contains_sub_container"]], "cont_assert_contains_sub_structure() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_assert_contains_sub_structure"], [66, "ivy.container.base.ContainerBase.cont_assert_contains_sub_structure"]], "cont_assert_identical() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_assert_identical"], [66, "ivy.container.base.ContainerBase.cont_assert_identical"]], "cont_assert_identical_structure() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_assert_identical_structure"], [66, "ivy.container.base.ContainerBase.cont_assert_identical_structure"]], "cont_at_key_chain() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_at_key_chain"], [66, "ivy.container.base.ContainerBase.cont_at_key_chain"]], "cont_at_key_chains() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_at_key_chains"], [66, "ivy.container.base.ContainerBase.cont_at_key_chains"]], "cont_at_keys() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_at_keys"], [66, "ivy.container.base.ContainerBase.cont_at_keys"]], "cont_combine() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_combine"], [66, "ivy.container.base.ContainerBase.cont_combine"]], "cont_common_key_chains() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_common_key_chains"], [66, "ivy.container.base.ContainerBase.cont_common_key_chains"]], "cont_config (ivy.container.base.containerbase property)": [[65, "ivy.container.base.ContainerBase.cont_config"], [66, "ivy.container.base.ContainerBase.cont_config"]], "cont_contains_sub_container() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_contains_sub_container"], [66, "ivy.container.base.ContainerBase.cont_contains_sub_container"]], "cont_contains_sub_structure() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_contains_sub_structure"], [66, "ivy.container.base.ContainerBase.cont_contains_sub_structure"]], "cont_copy() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_copy"], [66, "ivy.container.base.ContainerBase.cont_copy"]], "cont_create_if_absent() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_create_if_absent"], [66, "ivy.container.base.ContainerBase.cont_create_if_absent"]], "cont_cutoff_at_depth() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_cutoff_at_depth"], [66, "ivy.container.base.ContainerBase.cont_cutoff_at_depth"]], "cont_cutoff_at_height() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_cutoff_at_height"], [66, "ivy.container.base.ContainerBase.cont_cutoff_at_height"]], "cont_deep_copy() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_deep_copy"], [66, "ivy.container.base.ContainerBase.cont_deep_copy"]], "cont_dev (ivy.container.base.containerbase property)": [[65, "ivy.container.base.ContainerBase.cont_dev"], [66, "ivy.container.base.ContainerBase.cont_dev"]], "cont_dev_str (ivy.container.base.containerbase property)": [[65, "ivy.container.base.ContainerBase.cont_dev_str"], [66, "ivy.container.base.ContainerBase.cont_dev_str"]], "cont_diff() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_diff"], [66, "ivy.container.base.ContainerBase.cont_diff"]], "cont_duplicate_array_keychains() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_duplicate_array_keychains"], [66, "ivy.container.base.ContainerBase.cont_duplicate_array_keychains"]], "cont_find_sub_container() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_find_sub_container"], [66, "ivy.container.base.ContainerBase.cont_find_sub_container"]], "cont_find_sub_structure() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_find_sub_structure"], [66, "ivy.container.base.ContainerBase.cont_find_sub_structure"]], "cont_flatten_key_chain() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_flatten_key_chain"], [66, "ivy.container.base.ContainerBase.cont_flatten_key_chain"]], "cont_flatten_key_chains() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_flatten_key_chains"], [66, "ivy.container.base.ContainerBase.cont_flatten_key_chains"]], "cont_format_key_chains() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_format_key_chains"], [66, "ivy.container.base.ContainerBase.cont_format_key_chains"]], "cont_from_disk_as_hdf5() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_from_disk_as_hdf5"], [66, "ivy.container.base.ContainerBase.cont_from_disk_as_hdf5"]], "cont_from_disk_as_json() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_from_disk_as_json"], [66, "ivy.container.base.ContainerBase.cont_from_disk_as_json"]], "cont_from_disk_as_pickled() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_from_disk_as_pickled"], [66, "ivy.container.base.ContainerBase.cont_from_disk_as_pickled"]], "cont_from_flat_list() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_from_flat_list"], [66, "ivy.container.base.ContainerBase.cont_from_flat_list"]], "cont_handle_inplace() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_handle_inplace"], [66, "ivy.container.base.ContainerBase.cont_handle_inplace"]], "cont_has_key() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_has_key"], [66, "ivy.container.base.ContainerBase.cont_has_key"]], "cont_has_key_chain() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_has_key_chain"], [66, "ivy.container.base.ContainerBase.cont_has_key_chain"]], "cont_identical() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_identical"], [66, "ivy.container.base.ContainerBase.cont_identical"]], "cont_identical_array_shapes() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_identical_array_shapes"], [66, "ivy.container.base.ContainerBase.cont_identical_array_shapes"]], "cont_identical_configs() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_identical_configs"], [66, "ivy.container.base.ContainerBase.cont_identical_configs"]], "cont_identical_structure() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_identical_structure"], [66, "ivy.container.base.ContainerBase.cont_identical_structure"]], "cont_if_exists() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_if_exists"], [66, "ivy.container.base.ContainerBase.cont_if_exists"]], "cont_inplace_update() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_inplace_update"], [66, "ivy.container.base.ContainerBase.cont_inplace_update"]], "cont_ivy (ivy.container.base.containerbase property)": [[65, "ivy.container.base.ContainerBase.cont_ivy"], [66, "ivy.container.base.ContainerBase.cont_ivy"]], "cont_key_chains_containing() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_key_chains_containing"], [66, "ivy.container.base.ContainerBase.cont_key_chains_containing"]], "cont_list_join() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_list_join"], [66, "ivy.container.base.ContainerBase.cont_list_join"]], "cont_list_stack() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_list_stack"], [66, "ivy.container.base.ContainerBase.cont_list_stack"]], "cont_map() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_map"], [66, "ivy.container.base.ContainerBase.cont_map"]], "cont_map_sub_conts() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_map_sub_conts"], [66, "ivy.container.base.ContainerBase.cont_map_sub_conts"]], "cont_max_depth (ivy.container.base.containerbase property)": [[65, "ivy.container.base.ContainerBase.cont_max_depth"], [66, "ivy.container.base.ContainerBase.cont_max_depth"]], "cont_multi_map() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_multi_map"], [66, "ivy.container.base.ContainerBase.cont_multi_map"]], "cont_multi_map_in_function() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_multi_map_in_function"], [66, "ivy.container.base.ContainerBase.cont_multi_map_in_function"]], "cont_num_arrays() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_num_arrays"], [66, "ivy.container.base.ContainerBase.cont_num_arrays"]], "cont_overwrite_at_key_chain() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chain"], [66, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chain"]], "cont_overwrite_at_key_chains() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chains"], [66, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chains"]], "cont_prune_empty() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_prune_empty"], [66, "ivy.container.base.ContainerBase.cont_prune_empty"]], "cont_prune_key_chain() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_prune_key_chain"], [66, "ivy.container.base.ContainerBase.cont_prune_key_chain"]], "cont_prune_key_chains() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_prune_key_chains"], [66, "ivy.container.base.ContainerBase.cont_prune_key_chains"]], "cont_prune_key_from_key_chains() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_prune_key_from_key_chains"], [66, "ivy.container.base.ContainerBase.cont_prune_key_from_key_chains"]], "cont_prune_keys() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_prune_keys"], [66, "ivy.container.base.ContainerBase.cont_prune_keys"]], "cont_prune_keys_from_key_chains() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_prune_keys_from_key_chains"], [66, "ivy.container.base.ContainerBase.cont_prune_keys_from_key_chains"]], "cont_reduce() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_reduce"], [66, "ivy.container.base.ContainerBase.cont_reduce"]], "cont_remove_key_length_limit() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_remove_key_length_limit"], [66, "ivy.container.base.ContainerBase.cont_remove_key_length_limit"]], "cont_remove_print_limit() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_remove_print_limit"], [66, "ivy.container.base.ContainerBase.cont_remove_print_limit"]], "cont_reshape_like() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_reshape_like"], [66, "ivy.container.base.ContainerBase.cont_reshape_like"]], "cont_restructure() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_restructure"], [66, "ivy.container.base.ContainerBase.cont_restructure"]], "cont_restructure_key_chains() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_restructure_key_chains"], [66, "ivy.container.base.ContainerBase.cont_restructure_key_chains"]], "cont_set_at_key_chain() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_set_at_key_chain"], [66, "ivy.container.base.ContainerBase.cont_set_at_key_chain"]], "cont_set_at_key_chains() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_set_at_key_chains"], [66, "ivy.container.base.ContainerBase.cont_set_at_key_chains"]], "cont_set_at_keys() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_set_at_keys"], [66, "ivy.container.base.ContainerBase.cont_set_at_keys"]], "cont_shape (ivy.container.base.containerbase property)": [[65, "ivy.container.base.ContainerBase.cont_shape"], [66, "ivy.container.base.ContainerBase.cont_shape"]], "cont_shapes (ivy.container.base.containerbase property)": [[65, "ivy.container.base.ContainerBase.cont_shapes"], [66, "ivy.container.base.ContainerBase.cont_shapes"]], "cont_show() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_show"], [66, "ivy.container.base.ContainerBase.cont_show"]], "cont_show_sub_container() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_show_sub_container"], [66, "ivy.container.base.ContainerBase.cont_show_sub_container"]], "cont_size_ordered_arrays() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_size_ordered_arrays"], [66, "ivy.container.base.ContainerBase.cont_size_ordered_arrays"]], "cont_slice_keys() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_slice_keys"], [66, "ivy.container.base.ContainerBase.cont_slice_keys"]], "cont_slice_via_key() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_slice_via_key"], [66, "ivy.container.base.ContainerBase.cont_slice_via_key"]], "cont_sort_by_key() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_sort_by_key"], [66, "ivy.container.base.ContainerBase.cont_sort_by_key"]], "cont_structural_diff() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_structural_diff"], [66, "ivy.container.base.ContainerBase.cont_structural_diff"]], "cont_to_dict() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_to_dict"], [66, "ivy.container.base.ContainerBase.cont_to_dict"]], "cont_to_disk_as_hdf5() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_to_disk_as_hdf5"], [66, "ivy.container.base.ContainerBase.cont_to_disk_as_hdf5"]], "cont_to_disk_as_json() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_to_disk_as_json"], [66, "ivy.container.base.ContainerBase.cont_to_disk_as_json"]], "cont_to_disk_as_pickled() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_to_disk_as_pickled"], [66, "ivy.container.base.ContainerBase.cont_to_disk_as_pickled"]], "cont_to_flat_list() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_to_flat_list"], [66, "ivy.container.base.ContainerBase.cont_to_flat_list"]], "cont_to_iterator() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_to_iterator"], [66, "ivy.container.base.ContainerBase.cont_to_iterator"]], "cont_to_iterator_keys() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_to_iterator_keys"], [66, "ivy.container.base.ContainerBase.cont_to_iterator_keys"]], "cont_to_iterator_values() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_to_iterator_values"], [66, "ivy.container.base.ContainerBase.cont_to_iterator_values"]], "cont_to_jsonable() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_to_jsonable"], [66, "ivy.container.base.ContainerBase.cont_to_jsonable"]], "cont_to_nested_list() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_to_nested_list"], [66, "ivy.container.base.ContainerBase.cont_to_nested_list"]], "cont_to_raw() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_to_raw"], [66, "ivy.container.base.ContainerBase.cont_to_raw"]], "cont_trim_key() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_trim_key"], [66, "ivy.container.base.ContainerBase.cont_trim_key"]], "cont_try_kc() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_try_kc"], [66, "ivy.container.base.ContainerBase.cont_try_kc"]], "cont_unify() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.cont_unify"], [66, "ivy.container.base.ContainerBase.cont_unify"]], "cont_unstack_conts() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_unstack_conts"], [66, "ivy.container.base.ContainerBase.cont_unstack_conts"]], "cont_update_config() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_update_config"], [66, "ivy.container.base.ContainerBase.cont_update_config"]], "cont_with_default_key_color() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_with_default_key_color"], [66, "ivy.container.base.ContainerBase.cont_with_default_key_color"]], "cont_with_entries_as_lists() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_with_entries_as_lists"], [66, "ivy.container.base.ContainerBase.cont_with_entries_as_lists"]], "cont_with_ivy_backend() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_with_ivy_backend"], [66, "ivy.container.base.ContainerBase.cont_with_ivy_backend"]], "cont_with_key_length_limit() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_with_key_length_limit"], [66, "ivy.container.base.ContainerBase.cont_with_key_length_limit"]], "cont_with_print_indent() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_with_print_indent"], [66, "ivy.container.base.ContainerBase.cont_with_print_indent"]], "cont_with_print_limit() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_with_print_limit"], [66, "ivy.container.base.ContainerBase.cont_with_print_limit"]], "cont_with_print_line_spacing() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.cont_with_print_line_spacing"], [66, "ivy.container.base.ContainerBase.cont_with_print_line_spacing"]], "dynamic_backend (ivy.container.base.containerbase property)": [[65, "ivy.container.base.ContainerBase.dynamic_backend"], [66, "ivy.container.base.ContainerBase.dynamic_backend"]], "h5_file_size() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.h5_file_size"], [66, "ivy.container.base.ContainerBase.h5_file_size"]], "ivy.container.base": [[65, "module-ivy.container.base"]], "shuffle_h5_file() (ivy.container.base.containerbase static method)": [[65, "ivy.container.base.ContainerBase.shuffle_h5_file"], [66, "ivy.container.base.ContainerBase.shuffle_h5_file"]], "split_conts() (ivy.container.base.containerbase method)": [[65, "ivy.container.base.ContainerBase.split_conts"], [66, "ivy.container.base.ContainerBase.split_conts"]], "containerwithconversions (class in ivy.container.conversions)": [[69, "ivy.container.conversions.ContainerWithConversions"], [70, "ivy.container.conversions.ContainerWithConversions"]], "ivy.container.conversions": [[69, "module-ivy.container.conversions"]], "static_to_ivy() (ivy.container.conversions.containerwithconversions static method)": [[69, "ivy.container.conversions.ContainerWithConversions.static_to_ivy"], [70, "ivy.container.conversions.ContainerWithConversions.static_to_ivy"]], "static_to_native() (ivy.container.conversions.containerwithconversions static method)": [[69, "ivy.container.conversions.ContainerWithConversions.static_to_native"], [70, "ivy.container.conversions.ContainerWithConversions.static_to_native"]], "to_ivy() (ivy.container.conversions.containerwithconversions method)": [[69, "ivy.container.conversions.ContainerWithConversions.to_ivy"], [70, "ivy.container.conversions.ContainerWithConversions.to_ivy"]], "to_native() (ivy.container.conversions.containerwithconversions method)": [[69, "ivy.container.conversions.ContainerWithConversions.to_native"], [70, "ivy.container.conversions.ContainerWithConversions.to_native"]], "containerwithcreation (class in ivy.container.creation)": [[71, "ivy.container.creation.ContainerWithCreation"], [72, "ivy.container.creation.ContainerWithCreation"]], "empty_like() (ivy.container.creation.containerwithcreation method)": [[71, "ivy.container.creation.ContainerWithCreation.empty_like"], [72, "ivy.container.creation.ContainerWithCreation.empty_like"]], "from_dlpack() (ivy.container.creation.containerwithcreation method)": [[71, "ivy.container.creation.ContainerWithCreation.from_dlpack"], [72, "ivy.container.creation.ContainerWithCreation.from_dlpack"]], "full_like() (ivy.container.creation.containerwithcreation method)": [[71, "ivy.container.creation.ContainerWithCreation.full_like"], [72, "ivy.container.creation.ContainerWithCreation.full_like"]], "ivy.container.creation": [[71, "module-ivy.container.creation"]], "linspace() (ivy.container.creation.containerwithcreation method)": [[71, "ivy.container.creation.ContainerWithCreation.linspace"], [72, "ivy.container.creation.ContainerWithCreation.linspace"]], "logspace() (ivy.container.creation.containerwithcreation method)": [[71, "ivy.container.creation.ContainerWithCreation.logspace"], [72, "ivy.container.creation.ContainerWithCreation.logspace"]], "meshgrid() (ivy.container.creation.containerwithcreation method)": [[71, "ivy.container.creation.ContainerWithCreation.meshgrid"], [72, "ivy.container.creation.ContainerWithCreation.meshgrid"]], "native_array() (ivy.container.creation.containerwithcreation method)": [[71, "ivy.container.creation.ContainerWithCreation.native_array"], [72, "ivy.container.creation.ContainerWithCreation.native_array"]], "one_hot() (ivy.container.creation.containerwithcreation method)": [[71, "ivy.container.creation.ContainerWithCreation.one_hot"], [72, "ivy.container.creation.ContainerWithCreation.one_hot"]], "ones_like() (ivy.container.creation.containerwithcreation method)": [[71, "ivy.container.creation.ContainerWithCreation.ones_like"], [72, "ivy.container.creation.ContainerWithCreation.ones_like"]], "static_arange() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_arange"], [72, "ivy.container.creation.ContainerWithCreation.static_arange"]], "static_asarray() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_asarray"], [72, "ivy.container.creation.ContainerWithCreation.static_asarray"]], "static_empty_like() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_empty_like"], [72, "ivy.container.creation.ContainerWithCreation.static_empty_like"]], "static_eye() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_eye"], [72, "ivy.container.creation.ContainerWithCreation.static_eye"]], "static_from_dlpack() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_from_dlpack"], [72, "ivy.container.creation.ContainerWithCreation.static_from_dlpack"]], "static_full_like() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_full_like"], [72, "ivy.container.creation.ContainerWithCreation.static_full_like"]], "static_linspace() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_linspace"], [72, "ivy.container.creation.ContainerWithCreation.static_linspace"]], "static_logspace() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_logspace"], [72, "ivy.container.creation.ContainerWithCreation.static_logspace"]], "static_meshgrid() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_meshgrid"], [72, "ivy.container.creation.ContainerWithCreation.static_meshgrid"]], "static_native_array() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_native_array"], [72, "ivy.container.creation.ContainerWithCreation.static_native_array"]], "static_one_hot() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_one_hot"], [72, "ivy.container.creation.ContainerWithCreation.static_one_hot"]], "static_ones() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_ones"], [72, "ivy.container.creation.ContainerWithCreation.static_ones"]], "static_ones_like() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_ones_like"], [72, "ivy.container.creation.ContainerWithCreation.static_ones_like"]], "static_tril() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_tril"], [72, "ivy.container.creation.ContainerWithCreation.static_tril"]], "static_triu() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_triu"], [72, "ivy.container.creation.ContainerWithCreation.static_triu"]], "static_zeros() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_zeros"], [72, "ivy.container.creation.ContainerWithCreation.static_zeros"]], "static_zeros_like() (ivy.container.creation.containerwithcreation static method)": [[71, "ivy.container.creation.ContainerWithCreation.static_zeros_like"], [72, "ivy.container.creation.ContainerWithCreation.static_zeros_like"]], "tril() (ivy.container.creation.containerwithcreation method)": [[71, "ivy.container.creation.ContainerWithCreation.tril"], [72, "ivy.container.creation.ContainerWithCreation.tril"]], "triu() (ivy.container.creation.containerwithcreation method)": [[71, "ivy.container.creation.ContainerWithCreation.triu"], [72, "ivy.container.creation.ContainerWithCreation.triu"]], "zeros_like() (ivy.container.creation.containerwithcreation method)": [[71, "ivy.container.creation.ContainerWithCreation.zeros_like"], [72, "ivy.container.creation.ContainerWithCreation.zeros_like"]], "containerwithdatatypes (class in ivy.container.data_type)": [[73, "ivy.container.data_type.ContainerWithDataTypes"], [74, "ivy.container.data_type.ContainerWithDataTypes"]], "astype() (ivy.container.data_type.containerwithdatatypes method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.astype"], [74, "ivy.container.data_type.ContainerWithDataTypes.astype"]], "broadcast_arrays() (ivy.container.data_type.containerwithdatatypes method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.broadcast_arrays"], [74, "ivy.container.data_type.ContainerWithDataTypes.broadcast_arrays"]], "broadcast_to() (ivy.container.data_type.containerwithdatatypes method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.broadcast_to"], [74, "ivy.container.data_type.ContainerWithDataTypes.broadcast_to"]], "can_cast() (ivy.container.data_type.containerwithdatatypes method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.can_cast"], [74, "ivy.container.data_type.ContainerWithDataTypes.can_cast"]], "dtype() (ivy.container.data_type.containerwithdatatypes method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.dtype"], [74, "ivy.container.data_type.ContainerWithDataTypes.dtype"]], "finfo() (ivy.container.data_type.containerwithdatatypes method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.finfo"], [74, "ivy.container.data_type.ContainerWithDataTypes.finfo"]], "iinfo() (ivy.container.data_type.containerwithdatatypes method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.iinfo"], [74, "ivy.container.data_type.ContainerWithDataTypes.iinfo"]], "is_bool_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.is_bool_dtype"], [74, "ivy.container.data_type.ContainerWithDataTypes.is_bool_dtype"]], "is_complex_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.is_complex_dtype"], [74, "ivy.container.data_type.ContainerWithDataTypes.is_complex_dtype"]], "is_float_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.is_float_dtype"], [74, "ivy.container.data_type.ContainerWithDataTypes.is_float_dtype"]], "is_int_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.is_int_dtype"], [74, "ivy.container.data_type.ContainerWithDataTypes.is_int_dtype"]], "is_uint_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.is_uint_dtype"], [74, "ivy.container.data_type.ContainerWithDataTypes.is_uint_dtype"]], "ivy.container.data_type": [[73, "module-ivy.container.data_type"]], "result_type() (ivy.container.data_type.containerwithdatatypes method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.result_type"], [74, "ivy.container.data_type.ContainerWithDataTypes.result_type"]], "static_astype() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_astype"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_astype"]], "static_broadcast_arrays() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_arrays"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_arrays"]], "static_broadcast_to() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_to"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_to"]], "static_can_cast() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_can_cast"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_can_cast"]], "static_default_complex_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_default_complex_dtype"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_default_complex_dtype"]], "static_default_float_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_default_float_dtype"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_default_float_dtype"]], "static_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_dtype"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_dtype"]], "static_finfo() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_finfo"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_finfo"]], "static_function_supported_dtypes() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_function_supported_dtypes"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_function_supported_dtypes"]], "static_function_unsupported_dtypes() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_function_unsupported_dtypes"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_function_unsupported_dtypes"]], "static_iinfo() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_iinfo"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_iinfo"]], "static_is_bool_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_is_bool_dtype"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_is_bool_dtype"]], "static_is_complex_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_is_complex_dtype"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_is_complex_dtype"]], "static_is_float_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_is_float_dtype"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_is_float_dtype"]], "static_is_int_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_is_int_dtype"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_is_int_dtype"]], "static_is_uint_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_is_uint_dtype"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_is_uint_dtype"]], "static_result_type() (ivy.container.data_type.containerwithdatatypes static method)": [[73, "ivy.container.data_type.ContainerWithDataTypes.static_result_type"], [74, "ivy.container.data_type.ContainerWithDataTypes.static_result_type"]], "containerwithdevice (class in ivy.container.device)": [[75, "ivy.container.device.ContainerWithDevice"], [76, "ivy.container.device.ContainerWithDevice"]], "dev() (ivy.container.device.containerwithdevice method)": [[75, "ivy.container.device.ContainerWithDevice.dev"], [76, "ivy.container.device.ContainerWithDevice.dev"]], "ivy.container.device": [[75, "module-ivy.container.device"]], "static_dev() (ivy.container.device.containerwithdevice static method)": [[75, "ivy.container.device.ContainerWithDevice.static_dev"], [76, "ivy.container.device.ContainerWithDevice.static_dev"]], "static_to_device() (ivy.container.device.containerwithdevice static method)": [[75, "ivy.container.device.ContainerWithDevice.static_to_device"], [76, "ivy.container.device.ContainerWithDevice.static_to_device"]], "to_device() (ivy.container.device.containerwithdevice method)": [[75, "ivy.container.device.ContainerWithDevice.to_device"], [76, "ivy.container.device.ContainerWithDevice.to_device"]], "containerwithelementwise (class in ivy.container.elementwise)": [[77, "ivy.container.elementwise.ContainerWithElementwise"], [78, "ivy.container.elementwise.ContainerWithElementwise"]], "abs() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.abs"], [78, "ivy.container.elementwise.ContainerWithElementwise.abs"]], "acos() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.acos"], [78, "ivy.container.elementwise.ContainerWithElementwise.acos"]], "acosh() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.acosh"], [78, "ivy.container.elementwise.ContainerWithElementwise.acosh"]], "add() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.add"], [78, "ivy.container.elementwise.ContainerWithElementwise.add"]], "asin() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.asin"], [78, "ivy.container.elementwise.ContainerWithElementwise.asin"]], "asinh() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.asinh"], [78, "ivy.container.elementwise.ContainerWithElementwise.asinh"]], "atan() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.atan"], [78, "ivy.container.elementwise.ContainerWithElementwise.atan"]], "atan2() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.atan2"], [78, "ivy.container.elementwise.ContainerWithElementwise.atan2"]], "atanh() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.atanh"], [78, "ivy.container.elementwise.ContainerWithElementwise.atanh"]], "bitwise_and() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.bitwise_and"], [78, "ivy.container.elementwise.ContainerWithElementwise.bitwise_and"]], "bitwise_invert() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.bitwise_invert"], [78, "ivy.container.elementwise.ContainerWithElementwise.bitwise_invert"]], "bitwise_left_shift() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.bitwise_left_shift"], [78, "ivy.container.elementwise.ContainerWithElementwise.bitwise_left_shift"]], "bitwise_or() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.bitwise_or"], [78, "ivy.container.elementwise.ContainerWithElementwise.bitwise_or"]], "bitwise_right_shift() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.bitwise_right_shift"], [78, "ivy.container.elementwise.ContainerWithElementwise.bitwise_right_shift"]], "bitwise_xor() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.bitwise_xor"], [78, "ivy.container.elementwise.ContainerWithElementwise.bitwise_xor"]], "ceil() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.ceil"], [78, "ivy.container.elementwise.ContainerWithElementwise.ceil"]], "cos() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.cos"], [78, "ivy.container.elementwise.ContainerWithElementwise.cos"]], "cosh() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.cosh"], [78, "ivy.container.elementwise.ContainerWithElementwise.cosh"]], "deg2rad() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.deg2rad"], [78, "ivy.container.elementwise.ContainerWithElementwise.deg2rad"]], "divide() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.divide"], [78, "ivy.container.elementwise.ContainerWithElementwise.divide"]], "equal() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.equal"], [78, "ivy.container.elementwise.ContainerWithElementwise.equal"]], "erf() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.erf"], [78, "ivy.container.elementwise.ContainerWithElementwise.erf"]], "exp() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.exp"], [78, "ivy.container.elementwise.ContainerWithElementwise.exp"]], "expm1() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.expm1"], [78, "ivy.container.elementwise.ContainerWithElementwise.expm1"]], "floor() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.floor"], [78, "ivy.container.elementwise.ContainerWithElementwise.floor"]], "floor_divide() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.floor_divide"], [78, "ivy.container.elementwise.ContainerWithElementwise.floor_divide"]], "greater() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.greater"], [78, "ivy.container.elementwise.ContainerWithElementwise.greater"]], "greater_equal() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.greater_equal"], [78, "ivy.container.elementwise.ContainerWithElementwise.greater_equal"]], "isfinite() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.isfinite"], [78, "ivy.container.elementwise.ContainerWithElementwise.isfinite"]], "isinf() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.isinf"], [78, "ivy.container.elementwise.ContainerWithElementwise.isinf"]], "isnan() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.isnan"], [78, "ivy.container.elementwise.ContainerWithElementwise.isnan"]], "isreal() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.isreal"], [78, "ivy.container.elementwise.ContainerWithElementwise.isreal"]], "ivy.container.elementwise": [[77, "module-ivy.container.elementwise"]], "less() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.less"], [78, "ivy.container.elementwise.ContainerWithElementwise.less"]], "less_equal() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.less_equal"], [78, "ivy.container.elementwise.ContainerWithElementwise.less_equal"]], "log() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.log"], [78, "ivy.container.elementwise.ContainerWithElementwise.log"]], "log10() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.log10"], [78, "ivy.container.elementwise.ContainerWithElementwise.log10"]], "log1p() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.log1p"], [78, "ivy.container.elementwise.ContainerWithElementwise.log1p"]], "log2() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.log2"], [78, "ivy.container.elementwise.ContainerWithElementwise.log2"]], "logaddexp() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.logaddexp"], [78, "ivy.container.elementwise.ContainerWithElementwise.logaddexp"]], "logical_and() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.logical_and"], [78, "ivy.container.elementwise.ContainerWithElementwise.logical_and"]], "logical_not() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.logical_not"], [78, "ivy.container.elementwise.ContainerWithElementwise.logical_not"]], "logical_or() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.logical_or"], [78, "ivy.container.elementwise.ContainerWithElementwise.logical_or"]], "logical_xor() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.logical_xor"], [78, "ivy.container.elementwise.ContainerWithElementwise.logical_xor"]], "maximum() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.maximum"], [78, "ivy.container.elementwise.ContainerWithElementwise.maximum"]], "minimum() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.minimum"], [78, "ivy.container.elementwise.ContainerWithElementwise.minimum"]], "multiply() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.multiply"], [78, "ivy.container.elementwise.ContainerWithElementwise.multiply"]], "negative() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.negative"], [78, "ivy.container.elementwise.ContainerWithElementwise.negative"]], "not_equal() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.not_equal"], [78, "ivy.container.elementwise.ContainerWithElementwise.not_equal"]], "positive() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.positive"], [78, "ivy.container.elementwise.ContainerWithElementwise.positive"]], "pow() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.pow"], [78, "ivy.container.elementwise.ContainerWithElementwise.pow"]], "rad2deg() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.rad2deg"], [78, "ivy.container.elementwise.ContainerWithElementwise.rad2deg"]], "reciprocal() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.reciprocal"], [78, "ivy.container.elementwise.ContainerWithElementwise.reciprocal"]], "remainder() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.remainder"], [78, "ivy.container.elementwise.ContainerWithElementwise.remainder"]], "round() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.round"], [78, "ivy.container.elementwise.ContainerWithElementwise.round"]], "sign() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.sign"], [78, "ivy.container.elementwise.ContainerWithElementwise.sign"]], "sin() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.sin"], [78, "ivy.container.elementwise.ContainerWithElementwise.sin"]], "sinh() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.sinh"], [78, "ivy.container.elementwise.ContainerWithElementwise.sinh"]], "sqrt() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.sqrt"], [78, "ivy.container.elementwise.ContainerWithElementwise.sqrt"]], "square() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.square"], [78, "ivy.container.elementwise.ContainerWithElementwise.square"]], "static_abs() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_abs"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_abs"]], "static_acos() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_acos"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_acos"]], "static_acosh() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_acosh"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_acosh"]], "static_add() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_add"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_add"]], "static_asin() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_asin"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_asin"]], "static_asinh() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_asinh"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_asinh"]], "static_atan() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_atan"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_atan"]], "static_atan2() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_atan2"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_atan2"]], "static_atanh() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_atanh"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_atanh"]], "static_bitwise_and() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_and"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_and"]], "static_bitwise_invert() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_invert"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_invert"]], "static_bitwise_left_shift() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_left_shift"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_left_shift"]], "static_bitwise_or() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_or"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_or"]], "static_bitwise_right_shift() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_right_shift"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_right_shift"]], "static_bitwise_xor() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_xor"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_xor"]], "static_ceil() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_ceil"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_ceil"]], "static_cos() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_cos"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_cos"]], "static_cosh() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_cosh"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_cosh"]], "static_deg2rad() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_deg2rad"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_deg2rad"]], "static_divide() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_divide"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_divide"]], "static_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_equal"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_equal"]], "static_erf() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_erf"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_erf"]], "static_exp() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_exp"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_exp"]], "static_expm1() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_expm1"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_expm1"]], "static_floor() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_floor"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_floor"]], "static_floor_divide() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_floor_divide"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_floor_divide"]], "static_greater() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_greater"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_greater"]], "static_greater_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_greater_equal"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_greater_equal"]], "static_isfinite() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_isfinite"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_isfinite"]], "static_isinf() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_isinf"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_isinf"]], "static_isnan() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_isnan"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_isnan"]], "static_isreal() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_isreal"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_isreal"]], "static_less() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_less"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_less"]], "static_less_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_less_equal"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_less_equal"]], "static_log() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_log"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_log"]], "static_log10() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_log10"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_log10"]], "static_log1p() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_log1p"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_log1p"]], "static_log2() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_log2"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_log2"]], "static_logaddexp() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_logaddexp"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_logaddexp"]], "static_logical_and() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_logical_and"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_logical_and"]], "static_logical_not() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_logical_not"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_logical_not"]], "static_logical_or() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_logical_or"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_logical_or"]], "static_logical_xor() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_logical_xor"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_logical_xor"]], "static_maximum() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_maximum"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_maximum"]], "static_minimum() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_minimum"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_minimum"]], "static_multiply() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_multiply"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_multiply"]], "static_negative() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_negative"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_negative"]], "static_not_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_not_equal"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_not_equal"]], "static_positive() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_positive"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_positive"]], "static_pow() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_pow"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_pow"]], "static_rad2deg() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_rad2deg"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_rad2deg"]], "static_reciprocal() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_reciprocal"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_reciprocal"]], "static_remainder() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_remainder"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_remainder"]], "static_round() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_round"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_round"]], "static_sign() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_sign"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_sign"]], "static_sin() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_sin"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_sin"]], "static_sinh() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_sinh"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_sinh"]], "static_sqrt() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_sqrt"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_sqrt"]], "static_square() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_square"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_square"]], "static_subtract() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_subtract"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_subtract"]], "static_tan() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_tan"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_tan"]], "static_tanh() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_tanh"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_tanh"]], "static_trapz() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_trapz"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_trapz"]], "static_trunc() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_trunc"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_trunc"]], "static_trunc_divide() (ivy.container.elementwise.containerwithelementwise static method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.static_trunc_divide"], [78, "ivy.container.elementwise.ContainerWithElementwise.static_trunc_divide"]], "subtract() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.subtract"], [78, "ivy.container.elementwise.ContainerWithElementwise.subtract"]], "tan() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.tan"], [78, "ivy.container.elementwise.ContainerWithElementwise.tan"]], "tanh() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.tanh"], [78, "ivy.container.elementwise.ContainerWithElementwise.tanh"]], "trapz() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.trapz"], [78, "ivy.container.elementwise.ContainerWithElementwise.trapz"]], "trunc() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.trunc"], [78, "ivy.container.elementwise.ContainerWithElementwise.trunc"]], "trunc_divide() (ivy.container.elementwise.containerwithelementwise method)": [[77, "ivy.container.elementwise.ContainerWithElementwise.trunc_divide"], [78, "ivy.container.elementwise.ContainerWithElementwise.trunc_divide"]], "containerwithactivationexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithActivationExperimental"]], "containerwithconversionexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithConversionExperimental"]], "containerwithcreationexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental"]], "containerwithdata_typeexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithData_typeExperimental"]], "containerwithdeviceexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithDeviceExperimental"]], "containerwithelementwiseexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental"]], "containerwithgeneralexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithGeneralExperimental"]], "containerwithgradientsexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithGradientsExperimental"]], "containerwithimageexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithImageExperimental"]], "containerwithlayersexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental"]], "containerwithlinearalgebraexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental"]], "containerwithlossesexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithLossesExperimental"]], "containerwithmanipulationexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental"]], "containerwithnormsexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithNormsExperimental"]], "containerwithrandomexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithRandomExperimental"]], "containerwithsearchingexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithSearchingExperimental"]], "containerwithsetexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithSetExperimental"]], "containerwithsortingexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithSortingExperimental"]], "containerwithstatisticalexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental"]], "containerwithutilityexperimental (class in ivy.container.experimental)": [[79, "ivy.container.experimental.ContainerWithUtilityExperimental"]], "adjoint() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.adjoint"]], "allclose() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.allclose"]], "angle() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.angle"]], "atleast_1d() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.atleast_1d"]], "atleast_2d() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.atleast_2d"]], "atleast_3d() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.atleast_3d"]], "avg_pool1d() (ivy.container.experimental.containerwithlayersexperimental method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.avg_pool1d"]], "avg_pool2d() (ivy.container.experimental.containerwithlayersexperimental method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.avg_pool2d"]], "avg_pool3d() (ivy.container.experimental.containerwithlayersexperimental method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.avg_pool3d"]], "bernoulli() (ivy.container.experimental.containerwithrandomexperimental method)": [[79, "ivy.container.experimental.ContainerWithRandomExperimental.bernoulli"]], "beta() (ivy.container.experimental.containerwithrandomexperimental method)": [[79, "ivy.container.experimental.ContainerWithRandomExperimental.beta"]], "binarizer() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.binarizer"]], "binary_cross_entropy_with_logits() (ivy.container.experimental.containerwithlossesexperimental method)": [[79, "ivy.container.experimental.ContainerWithLossesExperimental.binary_cross_entropy_with_logits"]], "bincount() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental.bincount"]], "broadcast_shapes() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.broadcast_shapes"]], "conj() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.conj"]], "copysign() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.copysign"]], "corrcoef() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental.corrcoef"]], "count_nonzero() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.count_nonzero"]], "dct() (ivy.container.experimental.containerwithlayersexperimental method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.dct"]], "dft() (ivy.container.experimental.containerwithlayersexperimental method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.dft"]], "diagflat() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.diagflat"]], "diff() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.diff"]], "dirichlet() (ivy.container.experimental.containerwithrandomexperimental method)": [[79, "ivy.container.experimental.ContainerWithRandomExperimental.dirichlet"]], "dsplit() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.dsplit"]], "dstack() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.dstack"]], "eig() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.eig"]], "eigh_tridiagonal() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.eigh_tridiagonal"]], "eigvals() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.eigvals"]], "embedding() (ivy.container.experimental.containerwithlayersexperimental method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.embedding"]], "exp2() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.exp2"]], "expand() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.expand"]], "eye_like() (ivy.container.experimental.containerwithcreationexperimental method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.eye_like"]], "fft() (ivy.container.experimental.containerwithlayersexperimental method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.fft"]], "fix() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.fix"]], "flatten() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.flatten"]], "fliplr() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.fliplr"]], "flipud() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.flipud"]], "float_power() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.float_power"]], "fmax() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.fmax"]], "fmin() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.fmin"]], "fmod() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.fmod"]], "gcd() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.gcd"]], "gradient() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.gradient"]], "hamming_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.hamming_window"]], "hann_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.hann_window"]], "heaviside() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.heaviside"]], "hsplit() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.hsplit"]], "hstack() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.hstack"]], "hypot() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.hypot"]], "i0() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.i0"]], "ifft() (ivy.container.experimental.containerwithlayersexperimental method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.ifft"]], "imag() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.imag"]], "instance_norm() (ivy.container.experimental.containerwithnormsexperimental method)": [[79, "ivy.container.experimental.ContainerWithNormsExperimental.instance_norm"]], "interpolate() (ivy.container.experimental.containerwithlayersexperimental method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.interpolate"]], "isclose() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.isclose"]], "isin() (ivy.container.experimental.containerwithgeneralexperimental method)": [[79, "ivy.container.experimental.ContainerWithGeneralExperimental.isin"]], "kaiser_bessel_derived_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.kaiser_bessel_derived_window"]], "kaiser_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.kaiser_window"]], "kron() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.kron"]], "l2_normalize() (ivy.container.experimental.containerwithnormsexperimental method)": [[79, "ivy.container.experimental.ContainerWithNormsExperimental.l2_normalize"]], "lcm() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.lcm"]], "ldexp() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.ldexp"]], "lexsort() (ivy.container.experimental.containerwithsortingexperimental method)": [[79, "ivy.container.experimental.ContainerWithSortingExperimental.lexsort"]], "logaddexp2() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.logaddexp2"]], "logit() (ivy.container.experimental.containerwithactivationexperimental method)": [[79, "ivy.container.experimental.ContainerWithActivationExperimental.logit"]], "lp_normalize() (ivy.container.experimental.containerwithnormsexperimental method)": [[79, "ivy.container.experimental.ContainerWithNormsExperimental.lp_normalize"]], "matrix_exp() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.matrix_exp"]], "max_pool1d() (ivy.container.experimental.containerwithlayersexperimental method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.max_pool1d"]], "max_pool2d() (ivy.container.experimental.containerwithlayersexperimental method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.max_pool2d"]], "max_pool3d() (ivy.container.experimental.containerwithlayersexperimental method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.max_pool3d"]], "median() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental.median"]], "moveaxis() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.moveaxis"]], "msort() (ivy.container.experimental.containerwithsortingexperimental method)": [[79, "ivy.container.experimental.ContainerWithSortingExperimental.msort"]], "nan_to_num() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.nan_to_num"]], "nanmean() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental.nanmean"]], "nanmedian() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental.nanmedian"]], "nansum() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.nansum"]], "nextafter() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.nextafter"]], "pad() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.pad"]], "poisson() (ivy.container.experimental.containerwithrandomexperimental method)": [[79, "ivy.container.experimental.ContainerWithRandomExperimental.poisson"]], "prelu() (ivy.container.experimental.containerwithactivationexperimental method)": [[79, "ivy.container.experimental.ContainerWithActivationExperimental.prelu"]], "quantile() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental.quantile"]], "real() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.real"]], "relu6() (ivy.container.experimental.containerwithactivationexperimental method)": [[79, "ivy.container.experimental.ContainerWithActivationExperimental.relu6"]], "rot90() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.rot90"]], "signbit() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.signbit"]], "sinc() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.sinc"]], "static_adjoint() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_adjoint"]], "static_allclose() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_allclose"]], "static_angle() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_angle"]], "static_atleast_1d() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_atleast_1d"]], "static_atleast_2d() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_atleast_2d"]], "static_atleast_3d() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_atleast_3d"]], "static_avg_pool1d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.static_avg_pool1d"]], "static_avg_pool2d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.static_avg_pool2d"]], "static_avg_pool3d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.static_avg_pool3d"]], "static_bernoulli() (ivy.container.experimental.containerwithrandomexperimental static method)": [[79, "ivy.container.experimental.ContainerWithRandomExperimental.static_bernoulli"]], "static_beta() (ivy.container.experimental.containerwithrandomexperimental static method)": [[79, "ivy.container.experimental.ContainerWithRandomExperimental.static_beta"]], "static_binarizer() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_binarizer"]], "static_binary_cross_entropy_with_logits() (ivy.container.experimental.containerwithlossesexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLossesExperimental.static_binary_cross_entropy_with_logits"]], "static_bincount() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_bincount"]], "static_broadcast_shapes() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_broadcast_shapes"]], "static_conj() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_conj"]], "static_copysign() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_copysign"]], "static_corrcoef() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_corrcoef"]], "static_count_nonzero() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_count_nonzero"]], "static_dct() (ivy.container.experimental.containerwithlayersexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.static_dct"]], "static_dft() (ivy.container.experimental.containerwithlayersexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.static_dft"]], "static_diagflat() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_diagflat"]], "static_diff() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_diff"]], "static_dirichlet() (ivy.container.experimental.containerwithrandomexperimental static method)": [[79, "ivy.container.experimental.ContainerWithRandomExperimental.static_dirichlet"]], "static_dsplit() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_dsplit"]], "static_dstack() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_dstack"]], "static_eig() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_eig"]], "static_eigh_tridiagonal() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_eigh_tridiagonal"]], "static_eigvals() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_eigvals"]], "static_embedding() (ivy.container.experimental.containerwithlayersexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.static_embedding"]], "static_exp2() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_exp2"]], "static_expand() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_expand"]], "static_eye_like() (ivy.container.experimental.containerwithcreationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.static_eye_like"]], "static_fft() (ivy.container.experimental.containerwithlayersexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.static_fft"]], "static_fix() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fix"]], "static_flatten() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_flatten"]], "static_fliplr() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_fliplr"]], "static_flipud() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_flipud"]], "static_float_power() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_float_power"]], "static_fmax() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fmax"]], "static_fmin() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fmin"]], "static_fmod() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fmod"]], "static_gcd() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_gcd"]], "static_gradient() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_gradient"]], "static_hamming_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.static_hamming_window"]], "static_hann_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.static_hann_window"]], "static_heaviside() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_heaviside"]], "static_hsplit() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_hsplit"]], "static_hstack() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_hstack"]], "static_hypot() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_hypot"]], "static_i0() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_i0"]], "static_ifft() (ivy.container.experimental.containerwithlayersexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.static_ifft"]], "static_imag() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_imag"]], "static_instance_norm() (ivy.container.experimental.containerwithnormsexperimental static method)": [[79, "ivy.container.experimental.ContainerWithNormsExperimental.static_instance_norm"]], "static_interpolate() (ivy.container.experimental.containerwithlayersexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.static_interpolate"]], "static_isclose() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_isclose"]], "static_isin() (ivy.container.experimental.containerwithgeneralexperimental static method)": [[79, "ivy.container.experimental.ContainerWithGeneralExperimental.static_isin"]], "static_kaiser_bessel_derived_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.static_kaiser_bessel_derived_window"]], "static_kaiser_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.static_kaiser_window"]], "static_kron() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_kron"]], "static_l2_normalize() (ivy.container.experimental.containerwithnormsexperimental static method)": [[79, "ivy.container.experimental.ContainerWithNormsExperimental.static_l2_normalize"]], "static_lcm() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_lcm"]], "static_ldexp() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_ldexp"]], "static_lexsort() (ivy.container.experimental.containerwithsortingexperimental static method)": [[79, "ivy.container.experimental.ContainerWithSortingExperimental.static_lexsort"]], "static_logaddexp2() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_logaddexp2"]], "static_logit() (ivy.container.experimental.containerwithactivationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithActivationExperimental.static_logit"]], "static_lp_normalize() (ivy.container.experimental.containerwithnormsexperimental static method)": [[79, "ivy.container.experimental.ContainerWithNormsExperimental.static_lp_normalize"]], "static_matrix_exp() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_matrix_exp"]], "static_max_pool1d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.static_max_pool1d"]], "static_max_pool2d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.static_max_pool2d"]], "static_max_pool3d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[79, "ivy.container.experimental.ContainerWithLayersExperimental.static_max_pool3d"]], "static_median() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_median"]], "static_moveaxis() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_moveaxis"]], "static_msort() (ivy.container.experimental.containerwithsortingexperimental static method)": [[79, "ivy.container.experimental.ContainerWithSortingExperimental.static_msort"]], "static_nan_to_num() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_nan_to_num"]], "static_nanmean() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_nanmean"]], "static_nanmedian() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_nanmedian"]], "static_nansum() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_nansum"]], "static_nextafter() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_nextafter"]], "static_pad() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_pad"]], "static_poisson() (ivy.container.experimental.containerwithrandomexperimental static method)": [[79, "ivy.container.experimental.ContainerWithRandomExperimental.static_poisson"]], "static_prelu() (ivy.container.experimental.containerwithactivationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithActivationExperimental.static_prelu"]], "static_quantile() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_quantile"]], "static_real() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_real"]], "static_relu6() (ivy.container.experimental.containerwithactivationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithActivationExperimental.static_relu6"]], "static_rot90() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_rot90"]], "static_signbit() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_signbit"]], "static_sinc() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_sinc"]], "static_take_along_axis() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_take_along_axis"]], "static_thresholded_relu() (ivy.container.experimental.containerwithactivationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithActivationExperimental.static_thresholded_relu"]], "static_top_k() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_top_k"]], "static_tril_indices() (ivy.container.experimental.containerwithcreationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.static_tril_indices"]], "static_triu_indices() (ivy.container.experimental.containerwithcreationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.static_triu_indices"]], "static_unravel_index() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_unravel_index"]], "static_vorbis_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.static_vorbis_window"]], "static_vsplit() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_vsplit"]], "static_vstack() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.static_vstack"]], "static_xlogy() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_xlogy"]], "static_zeta() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_zeta"]], "take_along_axis() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.take_along_axis"]], "thresholded_relu() (ivy.container.experimental.containerwithactivationexperimental method)": [[79, "ivy.container.experimental.ContainerWithActivationExperimental.thresholded_relu"]], "top_k() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.top_k"]], "tril_indices() (ivy.container.experimental.containerwithcreationexperimental method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.tril_indices"]], "triu_indices() (ivy.container.experimental.containerwithcreationexperimental method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.triu_indices"]], "unravel_index() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[79, "ivy.container.experimental.ContainerWithStatisticalExperimental.unravel_index"]], "vorbis_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[79, "ivy.container.experimental.ContainerWithCreationExperimental.vorbis_window"]], "vsplit() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.vsplit"]], "vstack() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[79, "ivy.container.experimental.ContainerWithManipulationExperimental.vstack"]], "xlogy() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.xlogy"]], "zeta() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[79, "ivy.container.experimental.ContainerWithElementWiseExperimental.zeta"]], "containerwithgeneral (class in ivy.container.general)": [[80, "ivy.container.general.ContainerWithGeneral"], [81, "ivy.container.general.ContainerWithGeneral"]], "all_equal() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.all_equal"], [81, "ivy.container.general.ContainerWithGeneral.all_equal"]], "array_equal() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.array_equal"], [81, "ivy.container.general.ContainerWithGeneral.array_equal"]], "assert_supports_inplace() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.assert_supports_inplace"], [81, "ivy.container.general.ContainerWithGeneral.assert_supports_inplace"]], "clip_matrix_norm() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.clip_matrix_norm"], [81, "ivy.container.general.ContainerWithGeneral.clip_matrix_norm"]], "clip_vector_norm() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.clip_vector_norm"], [81, "ivy.container.general.ContainerWithGeneral.clip_vector_norm"]], "einops_rearrange() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.einops_rearrange"], [81, "ivy.container.general.ContainerWithGeneral.einops_rearrange"]], "einops_reduce() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.einops_reduce"], [81, "ivy.container.general.ContainerWithGeneral.einops_reduce"]], "einops_repeat() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.einops_repeat"], [81, "ivy.container.general.ContainerWithGeneral.einops_repeat"]], "fourier_encode() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.fourier_encode"], [81, "ivy.container.general.ContainerWithGeneral.fourier_encode"]], "gather() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.gather"], [81, "ivy.container.general.ContainerWithGeneral.gather"]], "gather_nd() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.gather_nd"], [81, "ivy.container.general.ContainerWithGeneral.gather_nd"]], "get_num_dims() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.get_num_dims"], [81, "ivy.container.general.ContainerWithGeneral.get_num_dims"]], "has_nans() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.has_nans"], [81, "ivy.container.general.ContainerWithGeneral.has_nans"]], "inplace_decrement() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.inplace_decrement"], [81, "ivy.container.general.ContainerWithGeneral.inplace_decrement"]], "inplace_increment() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.inplace_increment"], [81, "ivy.container.general.ContainerWithGeneral.inplace_increment"]], "inplace_update() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.inplace_update"], [81, "ivy.container.general.ContainerWithGeneral.inplace_update"]], "is_array() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.is_array"], [81, "ivy.container.general.ContainerWithGeneral.is_array"]], "is_ivy_array() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.is_ivy_array"], [81, "ivy.container.general.ContainerWithGeneral.is_ivy_array"]], "is_native_array() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.is_native_array"], [81, "ivy.container.general.ContainerWithGeneral.is_native_array"]], "ivy.container.general": [[80, "module-ivy.container.general"]], "scatter_flat() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.scatter_flat"], [81, "ivy.container.general.ContainerWithGeneral.scatter_flat"]], "scatter_nd() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.scatter_nd"], [81, "ivy.container.general.ContainerWithGeneral.scatter_nd"]], "stable_divide() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.stable_divide"], [81, "ivy.container.general.ContainerWithGeneral.stable_divide"]], "stable_pow() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.stable_pow"], [81, "ivy.container.general.ContainerWithGeneral.stable_pow"]], "static_all_equal() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_all_equal"], [81, "ivy.container.general.ContainerWithGeneral.static_all_equal"]], "static_array_equal() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_array_equal"], [81, "ivy.container.general.ContainerWithGeneral.static_array_equal"]], "static_assert_supports_inplace() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_assert_supports_inplace"], [81, "ivy.container.general.ContainerWithGeneral.static_assert_supports_inplace"]], "static_clip_matrix_norm() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_clip_matrix_norm"], [81, "ivy.container.general.ContainerWithGeneral.static_clip_matrix_norm"]], "static_clip_vector_norm() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_clip_vector_norm"], [81, "ivy.container.general.ContainerWithGeneral.static_clip_vector_norm"]], "static_einops_rearrange() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_einops_rearrange"], [81, "ivy.container.general.ContainerWithGeneral.static_einops_rearrange"]], "static_einops_reduce() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_einops_reduce"], [81, "ivy.container.general.ContainerWithGeneral.static_einops_reduce"]], "static_einops_repeat() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_einops_repeat"], [81, "ivy.container.general.ContainerWithGeneral.static_einops_repeat"]], "static_fourier_encode() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_fourier_encode"], [81, "ivy.container.general.ContainerWithGeneral.static_fourier_encode"]], "static_gather() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_gather"], [81, "ivy.container.general.ContainerWithGeneral.static_gather"]], "static_gather_nd() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_gather_nd"], [81, "ivy.container.general.ContainerWithGeneral.static_gather_nd"]], "static_get_num_dims() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_get_num_dims"], [81, "ivy.container.general.ContainerWithGeneral.static_get_num_dims"]], "static_has_nans() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_has_nans"], [81, "ivy.container.general.ContainerWithGeneral.static_has_nans"]], "static_inplace_decrement() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_inplace_decrement"], [81, "ivy.container.general.ContainerWithGeneral.static_inplace_decrement"]], "static_inplace_increment() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_inplace_increment"], [81, "ivy.container.general.ContainerWithGeneral.static_inplace_increment"]], "static_inplace_update() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_inplace_update"], [81, "ivy.container.general.ContainerWithGeneral.static_inplace_update"]], "static_is_array() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_is_array"], [81, "ivy.container.general.ContainerWithGeneral.static_is_array"]], "static_is_ivy_array() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_is_ivy_array"], [81, "ivy.container.general.ContainerWithGeneral.static_is_ivy_array"]], "static_is_native_array() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_is_native_array"], [81, "ivy.container.general.ContainerWithGeneral.static_is_native_array"]], "static_scatter_flat() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_scatter_flat"], [81, "ivy.container.general.ContainerWithGeneral.static_scatter_flat"]], "static_scatter_nd() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_scatter_nd"], [81, "ivy.container.general.ContainerWithGeneral.static_scatter_nd"]], "static_stable_divide() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_stable_divide"], [81, "ivy.container.general.ContainerWithGeneral.static_stable_divide"]], "static_stable_pow() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_stable_pow"], [81, "ivy.container.general.ContainerWithGeneral.static_stable_pow"]], "static_supports_inplace_updates() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_supports_inplace_updates"], [81, "ivy.container.general.ContainerWithGeneral.static_supports_inplace_updates"]], "static_to_list() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_to_list"], [81, "ivy.container.general.ContainerWithGeneral.static_to_list"]], "static_to_numpy() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_to_numpy"], [81, "ivy.container.general.ContainerWithGeneral.static_to_numpy"]], "static_to_scalar() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_to_scalar"], [81, "ivy.container.general.ContainerWithGeneral.static_to_scalar"]], "static_value_is_nan() (ivy.container.general.containerwithgeneral static method)": [[80, "ivy.container.general.ContainerWithGeneral.static_value_is_nan"], [81, "ivy.container.general.ContainerWithGeneral.static_value_is_nan"]], "supports_inplace_updates() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.supports_inplace_updates"], [81, "ivy.container.general.ContainerWithGeneral.supports_inplace_updates"]], "to_list() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.to_list"], [81, "ivy.container.general.ContainerWithGeneral.to_list"]], "to_numpy() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.to_numpy"], [81, "ivy.container.general.ContainerWithGeneral.to_numpy"]], "to_scalar() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.to_scalar"], [81, "ivy.container.general.ContainerWithGeneral.to_scalar"]], "value_is_nan() (ivy.container.general.containerwithgeneral method)": [[80, "ivy.container.general.ContainerWithGeneral.value_is_nan"], [81, "ivy.container.general.ContainerWithGeneral.value_is_nan"]], "containerwithgradients (class in ivy.container.gradients)": [[82, "ivy.container.gradients.ContainerWithGradients"], [83, "ivy.container.gradients.ContainerWithGradients"]], "adam_step() (ivy.container.gradients.containerwithgradients method)": [[82, "ivy.container.gradients.ContainerWithGradients.adam_step"], [83, "ivy.container.gradients.ContainerWithGradients.adam_step"]], "adam_update() (ivy.container.gradients.containerwithgradients method)": [[82, "ivy.container.gradients.ContainerWithGradients.adam_update"], [83, "ivy.container.gradients.ContainerWithGradients.adam_update"]], "gradient_descent_update() (ivy.container.gradients.containerwithgradients method)": [[82, "ivy.container.gradients.ContainerWithGradients.gradient_descent_update"], [83, "ivy.container.gradients.ContainerWithGradients.gradient_descent_update"]], "ivy.container.gradients": [[82, "module-ivy.container.gradients"]], "lamb_update() (ivy.container.gradients.containerwithgradients method)": [[82, "ivy.container.gradients.ContainerWithGradients.lamb_update"], [83, "ivy.container.gradients.ContainerWithGradients.lamb_update"]], "lars_update() (ivy.container.gradients.containerwithgradients method)": [[82, "ivy.container.gradients.ContainerWithGradients.lars_update"], [83, "ivy.container.gradients.ContainerWithGradients.lars_update"]], "optimizer_update() (ivy.container.gradients.containerwithgradients method)": [[82, "ivy.container.gradients.ContainerWithGradients.optimizer_update"], [83, "ivy.container.gradients.ContainerWithGradients.optimizer_update"]], "static_stop_gradient() (ivy.container.gradients.containerwithgradients static method)": [[82, "ivy.container.gradients.ContainerWithGradients.static_stop_gradient"], [83, "ivy.container.gradients.ContainerWithGradients.static_stop_gradient"]], "stop_gradient() (ivy.container.gradients.containerwithgradients method)": [[82, "ivy.container.gradients.ContainerWithGradients.stop_gradient"], [83, "ivy.container.gradients.ContainerWithGradients.stop_gradient"]], "containerwithimage (class in ivy.container.image)": [[84, "ivy.container.image.ContainerWithImage"], [85, "ivy.container.image.ContainerWithImage"]], "ivy.container.image": [[84, "module-ivy.container.image"]], "containerwithlayers (class in ivy.container.layers)": [[86, "ivy.container.layers.ContainerWithLayers"], [87, "ivy.container.layers.ContainerWithLayers"]], "conv1d() (ivy.container.layers.containerwithlayers method)": [[86, "ivy.container.layers.ContainerWithLayers.conv1d"], [87, "ivy.container.layers.ContainerWithLayers.conv1d"]], "conv1d_transpose() (ivy.container.layers.containerwithlayers method)": [[86, "ivy.container.layers.ContainerWithLayers.conv1d_transpose"], [87, "ivy.container.layers.ContainerWithLayers.conv1d_transpose"]], "conv2d() (ivy.container.layers.containerwithlayers method)": [[86, "ivy.container.layers.ContainerWithLayers.conv2d"], [87, "ivy.container.layers.ContainerWithLayers.conv2d"]], "conv2d_transpose() (ivy.container.layers.containerwithlayers method)": [[86, "ivy.container.layers.ContainerWithLayers.conv2d_transpose"], [87, "ivy.container.layers.ContainerWithLayers.conv2d_transpose"]], "conv3d() (ivy.container.layers.containerwithlayers method)": [[86, "ivy.container.layers.ContainerWithLayers.conv3d"], [87, "ivy.container.layers.ContainerWithLayers.conv3d"]], "conv3d_transpose() (ivy.container.layers.containerwithlayers method)": [[86, "ivy.container.layers.ContainerWithLayers.conv3d_transpose"], [87, "ivy.container.layers.ContainerWithLayers.conv3d_transpose"]], "depthwise_conv2d() (ivy.container.layers.containerwithlayers method)": [[86, "ivy.container.layers.ContainerWithLayers.depthwise_conv2d"], [87, "ivy.container.layers.ContainerWithLayers.depthwise_conv2d"]], "dropout() (ivy.container.layers.containerwithlayers method)": [[86, "ivy.container.layers.ContainerWithLayers.dropout"], [87, "ivy.container.layers.ContainerWithLayers.dropout"]], "dropout1d() (ivy.container.layers.containerwithlayers method)": [[86, "ivy.container.layers.ContainerWithLayers.dropout1d"], [87, "ivy.container.layers.ContainerWithLayers.dropout1d"]], "dropout3d() (ivy.container.layers.containerwithlayers method)": [[86, "ivy.container.layers.ContainerWithLayers.dropout3d"], [87, "ivy.container.layers.ContainerWithLayers.dropout3d"]], "ivy.container.layers": [[86, "module-ivy.container.layers"]], "linear() (ivy.container.layers.containerwithlayers method)": [[86, "ivy.container.layers.ContainerWithLayers.linear"], [87, "ivy.container.layers.ContainerWithLayers.linear"]], "lstm_update() (ivy.container.layers.containerwithlayers method)": [[86, "ivy.container.layers.ContainerWithLayers.lstm_update"], [87, "ivy.container.layers.ContainerWithLayers.lstm_update"]], "multi_head_attention() (ivy.container.layers.containerwithlayers method)": [[86, "ivy.container.layers.ContainerWithLayers.multi_head_attention"], [87, "ivy.container.layers.ContainerWithLayers.multi_head_attention"]], "scaled_dot_product_attention() (ivy.container.layers.containerwithlayers method)": [[86, "ivy.container.layers.ContainerWithLayers.scaled_dot_product_attention"], [87, "ivy.container.layers.ContainerWithLayers.scaled_dot_product_attention"]], "static_conv1d() (ivy.container.layers.containerwithlayers static method)": [[86, "ivy.container.layers.ContainerWithLayers.static_conv1d"], [87, "ivy.container.layers.ContainerWithLayers.static_conv1d"]], "static_conv1d_transpose() (ivy.container.layers.containerwithlayers static method)": [[86, "ivy.container.layers.ContainerWithLayers.static_conv1d_transpose"], [87, "ivy.container.layers.ContainerWithLayers.static_conv1d_transpose"]], "static_conv2d() (ivy.container.layers.containerwithlayers static method)": [[86, "ivy.container.layers.ContainerWithLayers.static_conv2d"], [87, "ivy.container.layers.ContainerWithLayers.static_conv2d"]], "static_conv2d_transpose() (ivy.container.layers.containerwithlayers static method)": [[86, "ivy.container.layers.ContainerWithLayers.static_conv2d_transpose"], [87, "ivy.container.layers.ContainerWithLayers.static_conv2d_transpose"]], "static_conv3d() (ivy.container.layers.containerwithlayers static method)": [[86, "ivy.container.layers.ContainerWithLayers.static_conv3d"], [87, "ivy.container.layers.ContainerWithLayers.static_conv3d"]], "static_conv3d_transpose() (ivy.container.layers.containerwithlayers static method)": [[86, "ivy.container.layers.ContainerWithLayers.static_conv3d_transpose"], [87, "ivy.container.layers.ContainerWithLayers.static_conv3d_transpose"]], "static_depthwise_conv2d() (ivy.container.layers.containerwithlayers static method)": [[86, "ivy.container.layers.ContainerWithLayers.static_depthwise_conv2d"], [87, "ivy.container.layers.ContainerWithLayers.static_depthwise_conv2d"]], "static_dropout() (ivy.container.layers.containerwithlayers static method)": [[86, "ivy.container.layers.ContainerWithLayers.static_dropout"], [87, "ivy.container.layers.ContainerWithLayers.static_dropout"]], "static_dropout1d() (ivy.container.layers.containerwithlayers static method)": [[86, "ivy.container.layers.ContainerWithLayers.static_dropout1d"], [87, "ivy.container.layers.ContainerWithLayers.static_dropout1d"]], "static_dropout3d() (ivy.container.layers.containerwithlayers static method)": [[86, "ivy.container.layers.ContainerWithLayers.static_dropout3d"], [87, "ivy.container.layers.ContainerWithLayers.static_dropout3d"]], "static_linear() (ivy.container.layers.containerwithlayers static method)": [[86, "ivy.container.layers.ContainerWithLayers.static_linear"], [87, "ivy.container.layers.ContainerWithLayers.static_linear"]], "static_lstm_update() (ivy.container.layers.containerwithlayers static method)": [[86, "ivy.container.layers.ContainerWithLayers.static_lstm_update"], [87, "ivy.container.layers.ContainerWithLayers.static_lstm_update"]], "static_multi_head_attention() (ivy.container.layers.containerwithlayers static method)": [[86, "ivy.container.layers.ContainerWithLayers.static_multi_head_attention"], [87, "ivy.container.layers.ContainerWithLayers.static_multi_head_attention"]], "static_scaled_dot_product_attention() (ivy.container.layers.containerwithlayers static method)": [[86, "ivy.container.layers.ContainerWithLayers.static_scaled_dot_product_attention"], [87, "ivy.container.layers.ContainerWithLayers.static_scaled_dot_product_attention"]], "containerwithlinearalgebra (class in ivy.container.linear_algebra)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra"]], "cholesky() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cholesky"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cholesky"]], "cross() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cross"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cross"]], "det() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.det"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.det"]], "diag() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diag"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diag"]], "diagonal() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diagonal"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diagonal"]], "eigh() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigh"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigh"]], "eigvalsh() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigvalsh"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigvalsh"]], "inner() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inner"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inner"]], "inv() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inv"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inv"]], "ivy.container.linear_algebra": [[88, "module-ivy.container.linear_algebra"]], "matmul() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matmul"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matmul"]], "matrix_norm() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_norm"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_norm"]], "matrix_power() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_power"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_power"]], "matrix_rank() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_rank"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_rank"]], "matrix_transpose() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_transpose"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_transpose"]], "outer() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.outer"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.outer"]], "pinv() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.pinv"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.pinv"]], "qr() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.qr"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.qr"]], "slogdet() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.slogdet"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.slogdet"]], "solve() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.solve"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.solve"]], "static_cholesky() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cholesky"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cholesky"]], "static_cross() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cross"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cross"]], "static_det() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_det"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_det"]], "static_diag() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diag"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diag"]], "static_diagonal() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diagonal"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diagonal"]], "static_eigh() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigh"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigh"]], "static_eigvalsh() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigvalsh"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigvalsh"]], "static_inner() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inner"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inner"]], "static_inv() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inv"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inv"]], "static_matmul() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matmul"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matmul"]], "static_matrix_norm() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_norm"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_norm"]], "static_matrix_power() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_power"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_power"]], "static_matrix_rank() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_rank"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_rank"]], "static_matrix_transpose() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_transpose"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_transpose"]], "static_outer() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_outer"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_outer"]], "static_pinv() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_pinv"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_pinv"]], "static_qr() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_qr"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_qr"]], "static_slogdet() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_slogdet"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_slogdet"]], "static_solve() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_solve"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_solve"]], "static_svd() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svd"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svd"]], "static_svdvals() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svdvals"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svdvals"]], "static_tensordot() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_tensordot"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_tensordot"]], "static_trace() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_trace"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_trace"]], "static_vander() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vander"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vander"]], "static_vecdot() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vecdot"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vecdot"]], "static_vector_norm() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_norm"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_norm"]], "static_vector_to_skew_symmetric_matrix() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_to_skew_symmetric_matrix"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_to_skew_symmetric_matrix"]], "svd() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svd"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svd"]], "svdvals() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svdvals"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svdvals"]], "tensordot() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensordot"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensordot"]], "tensorsolve() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensorsolve"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensorsolve"]], "trace() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.trace"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.trace"]], "vander() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vander"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vander"]], "vecdot() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vecdot"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vecdot"]], "vector_norm() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_norm"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[88, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_to_skew_symmetric_matrix"], [89, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_to_skew_symmetric_matrix"]], "containerwithlosses (class in ivy.container.losses)": [[90, "ivy.container.losses.ContainerWithLosses"], [91, "ivy.container.losses.ContainerWithLosses"]], "binary_cross_entropy() (ivy.container.losses.containerwithlosses method)": [[90, "ivy.container.losses.ContainerWithLosses.binary_cross_entropy"], [91, "ivy.container.losses.ContainerWithLosses.binary_cross_entropy"]], "cross_entropy() (ivy.container.losses.containerwithlosses method)": [[90, "ivy.container.losses.ContainerWithLosses.cross_entropy"], [91, "ivy.container.losses.ContainerWithLosses.cross_entropy"]], "ivy.container.losses": [[90, "module-ivy.container.losses"]], "sparse_cross_entropy() (ivy.container.losses.containerwithlosses method)": [[90, "ivy.container.losses.ContainerWithLosses.sparse_cross_entropy"], [91, "ivy.container.losses.ContainerWithLosses.sparse_cross_entropy"]], "static_binary_cross_entropy() (ivy.container.losses.containerwithlosses static method)": [[90, "ivy.container.losses.ContainerWithLosses.static_binary_cross_entropy"], [91, "ivy.container.losses.ContainerWithLosses.static_binary_cross_entropy"]], "static_cross_entropy() (ivy.container.losses.containerwithlosses static method)": [[90, "ivy.container.losses.ContainerWithLosses.static_cross_entropy"], [91, "ivy.container.losses.ContainerWithLosses.static_cross_entropy"]], "static_sparse_cross_entropy() (ivy.container.losses.containerwithlosses static method)": [[90, "ivy.container.losses.ContainerWithLosses.static_sparse_cross_entropy"], [91, "ivy.container.losses.ContainerWithLosses.static_sparse_cross_entropy"]], "containerwithmanipulation (class in ivy.container.manipulation)": [[92, "ivy.container.manipulation.ContainerWithManipulation"], [93, "ivy.container.manipulation.ContainerWithManipulation"]], "clip() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.clip"], [93, "ivy.container.manipulation.ContainerWithManipulation.clip"]], "concat() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.concat"], [93, "ivy.container.manipulation.ContainerWithManipulation.concat"]], "constant_pad() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.constant_pad"], [93, "ivy.container.manipulation.ContainerWithManipulation.constant_pad"]], "expand_dims() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.expand_dims"], [93, "ivy.container.manipulation.ContainerWithManipulation.expand_dims"]], "flip() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.flip"], [93, "ivy.container.manipulation.ContainerWithManipulation.flip"]], "ivy.container.manipulation": [[92, "module-ivy.container.manipulation"]], "permute_dims() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.permute_dims"], [93, "ivy.container.manipulation.ContainerWithManipulation.permute_dims"]], "repeat() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.repeat"], [93, "ivy.container.manipulation.ContainerWithManipulation.repeat"]], "reshape() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.reshape"], [93, "ivy.container.manipulation.ContainerWithManipulation.reshape"]], "roll() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.roll"], [93, "ivy.container.manipulation.ContainerWithManipulation.roll"]], "split() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.split"], [93, "ivy.container.manipulation.ContainerWithManipulation.split"]], "squeeze() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.squeeze"], [93, "ivy.container.manipulation.ContainerWithManipulation.squeeze"]], "stack() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.stack"], [93, "ivy.container.manipulation.ContainerWithManipulation.stack"]], "static_clip() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_clip"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_clip"]], "static_concat() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_concat"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_concat"]], "static_constant_pad() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_constant_pad"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_constant_pad"]], "static_expand_dims() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_expand_dims"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_expand_dims"]], "static_flip() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_flip"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_flip"]], "static_permute_dims() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_permute_dims"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_permute_dims"]], "static_repeat() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_repeat"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_repeat"]], "static_reshape() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_reshape"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_reshape"]], "static_roll() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_roll"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_roll"]], "static_split() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_split"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_split"]], "static_squeeze() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_squeeze"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_squeeze"]], "static_stack() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_stack"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_stack"]], "static_swapaxes() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_swapaxes"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_swapaxes"]], "static_tile() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_tile"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_tile"]], "static_unstack() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_unstack"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_unstack"]], "static_zero_pad() (ivy.container.manipulation.containerwithmanipulation static method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.static_zero_pad"], [93, "ivy.container.manipulation.ContainerWithManipulation.static_zero_pad"]], "swapaxes() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.swapaxes"], [93, "ivy.container.manipulation.ContainerWithManipulation.swapaxes"]], "tile() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.tile"], [93, "ivy.container.manipulation.ContainerWithManipulation.tile"]], "unstack() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.unstack"], [93, "ivy.container.manipulation.ContainerWithManipulation.unstack"]], "zero_pad() (ivy.container.manipulation.containerwithmanipulation method)": [[92, "ivy.container.manipulation.ContainerWithManipulation.zero_pad"], [93, "ivy.container.manipulation.ContainerWithManipulation.zero_pad"]], "containerwithnorms (class in ivy.container.norms)": [[94, "ivy.container.norms.ContainerWithNorms"], [95, "ivy.container.norms.ContainerWithNorms"]], "ivy.container.norms": [[94, "module-ivy.container.norms"]], "layer_norm() (ivy.container.norms.containerwithnorms method)": [[94, "ivy.container.norms.ContainerWithNorms.layer_norm"], [95, "ivy.container.norms.ContainerWithNorms.layer_norm"]], "containerwithrandom (class in ivy.container.random)": [[96, "ivy.container.random.ContainerWithRandom"], [97, "ivy.container.random.ContainerWithRandom"]], "ivy.container.random": [[96, "module-ivy.container.random"]], "multinomial() (ivy.container.random.containerwithrandom method)": [[96, "ivy.container.random.ContainerWithRandom.multinomial"], [97, "ivy.container.random.ContainerWithRandom.multinomial"]], "randint() (ivy.container.random.containerwithrandom method)": [[96, "ivy.container.random.ContainerWithRandom.randint"], [97, "ivy.container.random.ContainerWithRandom.randint"]], "random_normal() (ivy.container.random.containerwithrandom method)": [[96, "ivy.container.random.ContainerWithRandom.random_normal"], [97, "ivy.container.random.ContainerWithRandom.random_normal"]], "random_uniform() (ivy.container.random.containerwithrandom method)": [[96, "ivy.container.random.ContainerWithRandom.random_uniform"], [97, "ivy.container.random.ContainerWithRandom.random_uniform"]], "shuffle() (ivy.container.random.containerwithrandom method)": [[96, "ivy.container.random.ContainerWithRandom.shuffle"], [97, "ivy.container.random.ContainerWithRandom.shuffle"]], "static_multinomial() (ivy.container.random.containerwithrandom static method)": [[96, "ivy.container.random.ContainerWithRandom.static_multinomial"], [97, "ivy.container.random.ContainerWithRandom.static_multinomial"]], "static_randint() (ivy.container.random.containerwithrandom static method)": [[96, "ivy.container.random.ContainerWithRandom.static_randint"], [97, "ivy.container.random.ContainerWithRandom.static_randint"]], "static_random_normal() (ivy.container.random.containerwithrandom static method)": [[96, "ivy.container.random.ContainerWithRandom.static_random_normal"], [97, "ivy.container.random.ContainerWithRandom.static_random_normal"]], "static_random_uniform() (ivy.container.random.containerwithrandom static method)": [[96, "ivy.container.random.ContainerWithRandom.static_random_uniform"], [97, "ivy.container.random.ContainerWithRandom.static_random_uniform"]], "static_shuffle() (ivy.container.random.containerwithrandom static method)": [[96, "ivy.container.random.ContainerWithRandom.static_shuffle"], [97, "ivy.container.random.ContainerWithRandom.static_shuffle"]], "containerwithsearching (class in ivy.container.searching)": [[98, "ivy.container.searching.ContainerWithSearching"], [99, "ivy.container.searching.ContainerWithSearching"]], "argmax() (ivy.container.searching.containerwithsearching method)": [[98, "ivy.container.searching.ContainerWithSearching.argmax"], [99, "ivy.container.searching.ContainerWithSearching.argmax"]], "argmin() (ivy.container.searching.containerwithsearching method)": [[98, "ivy.container.searching.ContainerWithSearching.argmin"], [99, "ivy.container.searching.ContainerWithSearching.argmin"]], "argwhere() (ivy.container.searching.containerwithsearching method)": [[98, "ivy.container.searching.ContainerWithSearching.argwhere"], [99, "ivy.container.searching.ContainerWithSearching.argwhere"]], "ivy.container.searching": [[98, "module-ivy.container.searching"]], "nonzero() (ivy.container.searching.containerwithsearching method)": [[98, "ivy.container.searching.ContainerWithSearching.nonzero"], [99, "ivy.container.searching.ContainerWithSearching.nonzero"]], "static_argmax() (ivy.container.searching.containerwithsearching static method)": [[98, "ivy.container.searching.ContainerWithSearching.static_argmax"], [99, "ivy.container.searching.ContainerWithSearching.static_argmax"]], "static_argmin() (ivy.container.searching.containerwithsearching static method)": [[98, "ivy.container.searching.ContainerWithSearching.static_argmin"], [99, "ivy.container.searching.ContainerWithSearching.static_argmin"]], "static_argwhere() (ivy.container.searching.containerwithsearching static method)": [[98, "ivy.container.searching.ContainerWithSearching.static_argwhere"], [99, "ivy.container.searching.ContainerWithSearching.static_argwhere"]], "static_nonzero() (ivy.container.searching.containerwithsearching static method)": [[98, "ivy.container.searching.ContainerWithSearching.static_nonzero"], [99, "ivy.container.searching.ContainerWithSearching.static_nonzero"]], "static_where() (ivy.container.searching.containerwithsearching static method)": [[98, "ivy.container.searching.ContainerWithSearching.static_where"], [99, "ivy.container.searching.ContainerWithSearching.static_where"]], "where() (ivy.container.searching.containerwithsearching method)": [[98, "ivy.container.searching.ContainerWithSearching.where"], [99, "ivy.container.searching.ContainerWithSearching.where"]], "containerwithset (class in ivy.container.set)": [[100, "ivy.container.set.ContainerWithSet"], [101, "ivy.container.set.ContainerWithSet"]], "ivy.container.set": [[100, "module-ivy.container.set"]], "static_unique_all() (ivy.container.set.containerwithset static method)": [[100, "ivy.container.set.ContainerWithSet.static_unique_all"], [101, "ivy.container.set.ContainerWithSet.static_unique_all"]], "static_unique_counts() (ivy.container.set.containerwithset static method)": [[100, "ivy.container.set.ContainerWithSet.static_unique_counts"], [101, "ivy.container.set.ContainerWithSet.static_unique_counts"]], "static_unique_inverse() (ivy.container.set.containerwithset static method)": [[100, "ivy.container.set.ContainerWithSet.static_unique_inverse"], [101, "ivy.container.set.ContainerWithSet.static_unique_inverse"]], "static_unique_values() (ivy.container.set.containerwithset static method)": [[100, "ivy.container.set.ContainerWithSet.static_unique_values"], [101, "ivy.container.set.ContainerWithSet.static_unique_values"]], "unique_all() (ivy.container.set.containerwithset method)": [[100, "ivy.container.set.ContainerWithSet.unique_all"], [101, "ivy.container.set.ContainerWithSet.unique_all"]], "unique_counts() (ivy.container.set.containerwithset method)": [[100, "ivy.container.set.ContainerWithSet.unique_counts"], [101, "ivy.container.set.ContainerWithSet.unique_counts"]], "unique_inverse() (ivy.container.set.containerwithset method)": [[100, "ivy.container.set.ContainerWithSet.unique_inverse"], [101, "ivy.container.set.ContainerWithSet.unique_inverse"]], "unique_values() (ivy.container.set.containerwithset method)": [[100, "ivy.container.set.ContainerWithSet.unique_values"], [101, "ivy.container.set.ContainerWithSet.unique_values"]], "containerwithsorting (class in ivy.container.sorting)": [[102, "ivy.container.sorting.ContainerWithSorting"], [103, "ivy.container.sorting.ContainerWithSorting"]], "argsort() (ivy.container.sorting.containerwithsorting method)": [[102, "ivy.container.sorting.ContainerWithSorting.argsort"], [103, "ivy.container.sorting.ContainerWithSorting.argsort"]], "ivy.container.sorting": [[102, "module-ivy.container.sorting"]], "searchsorted() (ivy.container.sorting.containerwithsorting method)": [[102, "ivy.container.sorting.ContainerWithSorting.searchsorted"], [103, "ivy.container.sorting.ContainerWithSorting.searchsorted"]], "sort() (ivy.container.sorting.containerwithsorting method)": [[102, "ivy.container.sorting.ContainerWithSorting.sort"], [103, "ivy.container.sorting.ContainerWithSorting.sort"]], "static_argsort() (ivy.container.sorting.containerwithsorting static method)": [[102, "ivy.container.sorting.ContainerWithSorting.static_argsort"], [103, "ivy.container.sorting.ContainerWithSorting.static_argsort"]], "static_searchsorted() (ivy.container.sorting.containerwithsorting static method)": [[102, "ivy.container.sorting.ContainerWithSorting.static_searchsorted"], [103, "ivy.container.sorting.ContainerWithSorting.static_searchsorted"]], "static_sort() (ivy.container.sorting.containerwithsorting static method)": [[102, "ivy.container.sorting.ContainerWithSorting.static_sort"], [103, "ivy.container.sorting.ContainerWithSorting.static_sort"]], "containerwithstatistical (class in ivy.container.statistical)": [[104, "ivy.container.statistical.ContainerWithStatistical"], [105, "ivy.container.statistical.ContainerWithStatistical"]], "cumprod() (ivy.container.statistical.containerwithstatistical method)": [[104, "ivy.container.statistical.ContainerWithStatistical.cumprod"], [105, "ivy.container.statistical.ContainerWithStatistical.cumprod"]], "cumsum() (ivy.container.statistical.containerwithstatistical method)": [[104, "ivy.container.statistical.ContainerWithStatistical.cumsum"], [105, "ivy.container.statistical.ContainerWithStatistical.cumsum"]], "einsum() (ivy.container.statistical.containerwithstatistical method)": [[104, "ivy.container.statistical.ContainerWithStatistical.einsum"], [105, "ivy.container.statistical.ContainerWithStatistical.einsum"]], "ivy.container.statistical": [[104, "module-ivy.container.statistical"]], "max() (ivy.container.statistical.containerwithstatistical method)": [[104, "ivy.container.statistical.ContainerWithStatistical.max"], [105, "ivy.container.statistical.ContainerWithStatistical.max"]], "mean() (ivy.container.statistical.containerwithstatistical method)": [[104, "ivy.container.statistical.ContainerWithStatistical.mean"], [105, "ivy.container.statistical.ContainerWithStatistical.mean"]], "min() (ivy.container.statistical.containerwithstatistical method)": [[104, "ivy.container.statistical.ContainerWithStatistical.min"], [105, "ivy.container.statistical.ContainerWithStatistical.min"]], "prod() (ivy.container.statistical.containerwithstatistical method)": [[104, "ivy.container.statistical.ContainerWithStatistical.prod"], [105, "ivy.container.statistical.ContainerWithStatistical.prod"]], "static_cumprod() (ivy.container.statistical.containerwithstatistical static method)": [[104, "ivy.container.statistical.ContainerWithStatistical.static_cumprod"], [105, "ivy.container.statistical.ContainerWithStatistical.static_cumprod"]], "static_cumsum() (ivy.container.statistical.containerwithstatistical static method)": [[104, "ivy.container.statistical.ContainerWithStatistical.static_cumsum"], [105, "ivy.container.statistical.ContainerWithStatistical.static_cumsum"]], "static_prod() (ivy.container.statistical.containerwithstatistical static method)": [[104, "ivy.container.statistical.ContainerWithStatistical.static_prod"], [105, "ivy.container.statistical.ContainerWithStatistical.static_prod"]], "static_sum() (ivy.container.statistical.containerwithstatistical static method)": [[104, "ivy.container.statistical.ContainerWithStatistical.static_sum"], [105, "ivy.container.statistical.ContainerWithStatistical.static_sum"]], "static_var() (ivy.container.statistical.containerwithstatistical static method)": [[104, "ivy.container.statistical.ContainerWithStatistical.static_var"], [105, "ivy.container.statistical.ContainerWithStatistical.static_var"]], "std() (ivy.container.statistical.containerwithstatistical method)": [[104, "ivy.container.statistical.ContainerWithStatistical.std"], [105, "ivy.container.statistical.ContainerWithStatistical.std"]], "sum() (ivy.container.statistical.containerwithstatistical method)": [[104, "ivy.container.statistical.ContainerWithStatistical.sum"], [105, "ivy.container.statistical.ContainerWithStatistical.sum"]], "var() (ivy.container.statistical.containerwithstatistical method)": [[104, "ivy.container.statistical.ContainerWithStatistical.var"], [105, "ivy.container.statistical.ContainerWithStatistical.var"]], "containerwithutility (class in ivy.container.utility)": [[106, "ivy.container.utility.ContainerWithUtility"], [107, "ivy.container.utility.ContainerWithUtility"]], "all() (ivy.container.utility.containerwithutility method)": [[106, "ivy.container.utility.ContainerWithUtility.all"], [107, "ivy.container.utility.ContainerWithUtility.all"]], "any() (ivy.container.utility.containerwithutility method)": [[106, "ivy.container.utility.ContainerWithUtility.any"], [107, "ivy.container.utility.ContainerWithUtility.any"]], "ivy.container.utility": [[106, "module-ivy.container.utility"]], "static_all() (ivy.container.utility.containerwithutility static method)": [[106, "ivy.container.utility.ContainerWithUtility.static_all"], [107, "ivy.container.utility.ContainerWithUtility.static_all"]], "static_any() (ivy.container.utility.containerwithutility static method)": [[106, "ivy.container.utility.ContainerWithUtility.static_any"], [107, "ivy.container.utility.ContainerWithUtility.static_any"]], "add_ivy_container_instance_methods() (in module ivy.container.wrapping)": [[108, "ivy.container.wrapping.add_ivy_container_instance_methods"], [109, "ivy.container.wrapping.add_ivy_container_instance_methods"]], "ivy.container.wrapping": [[108, "module-ivy.container.wrapping"]], "handle_array_function() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.handle_array_function"], [151, "ivy.func_wrapper.handle_array_function"]], "handle_array_like_without_promotion() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.handle_array_like_without_promotion"], [152, "ivy.func_wrapper.handle_array_like_without_promotion"]], "handle_nans() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.handle_nans"], [153, "ivy.func_wrapper.handle_nans"]], "handle_nestable() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.handle_nestable"], [154, "ivy.func_wrapper.handle_nestable"]], "handle_out_argument() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.handle_out_argument"], [155, "ivy.func_wrapper.handle_out_argument"]], "handle_view() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.handle_view"], [156, "ivy.func_wrapper.handle_view"]], "handle_view_indexing() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.handle_view_indexing"], [157, "ivy.func_wrapper.handle_view_indexing"]], "infer_device() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.infer_device"], [158, "ivy.func_wrapper.infer_device"]], "infer_dtype() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.infer_dtype"], [159, "ivy.func_wrapper.infer_dtype"]], "inputs_to_ivy_arrays() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.inputs_to_ivy_arrays"], [160, "ivy.func_wrapper.inputs_to_ivy_arrays"]], "inputs_to_native_arrays() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.inputs_to_native_arrays"], [161, "ivy.func_wrapper.inputs_to_native_arrays"]], "integer_arrays_to_float() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.integer_arrays_to_float"], [162, "ivy.func_wrapper.integer_arrays_to_float"]], "ivy.func_wrapper": [[150, "module-ivy.func_wrapper"]], "output_to_native_arrays() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.output_to_native_arrays"], [163, "ivy.func_wrapper.output_to_native_arrays"]], "outputs_to_ivy_arrays() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.outputs_to_ivy_arrays"], [164, "ivy.func_wrapper.outputs_to_ivy_arrays"]], "to_ivy_arrays_and_back() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.to_ivy_arrays_and_back"], [165, "ivy.func_wrapper.to_ivy_arrays_and_back"]], "to_native_arrays_and_back() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.to_native_arrays_and_back"], [166, "ivy.func_wrapper.to_native_arrays_and_back"]], "try_array_function_override() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.try_array_function_override"], [167, "ivy.func_wrapper.try_array_function_override"]], "with_supported_device_and_dtypes() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.with_supported_device_and_dtypes"]], "with_supported_devices() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.with_supported_devices"]], "with_supported_dtypes() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.with_supported_dtypes"]], "with_unsupported_device_and_dtypes() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.with_unsupported_device_and_dtypes"]], "with_unsupported_devices() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.with_unsupported_devices"]], "with_unsupported_dtypes() (in module ivy.func_wrapper)": [[150, "ivy.func_wrapper.with_unsupported_dtypes"]], "deserialize() (in module ivy.functional.ivy.activations)": [[169, "ivy.functional.ivy.activations.deserialize"], [170, "ivy.functional.ivy.activations.deserialize"]], "gelu() (in module ivy.functional.ivy.activations)": [[169, "ivy.functional.ivy.activations.gelu"], [171, "ivy.functional.ivy.activations.gelu"], [174, "ivy.functional.ivy.activations.gelu"]], "get() (in module ivy.functional.ivy.activations)": [[169, "ivy.functional.ivy.activations.get"], [176, "ivy.functional.ivy.activations.get"]], "ivy.functional.ivy.activations": [[169, "module-ivy.functional.ivy.activations"]], "leaky_relu() (in module ivy.functional.ivy.activations)": [[169, "ivy.functional.ivy.activations.leaky_relu"], [177, "ivy.functional.ivy.activations.leaky_relu"], [180, "ivy.functional.ivy.activations.leaky_relu"]], "log_softmax() (in module ivy.functional.ivy.activations)": [[169, "ivy.functional.ivy.activations.log_softmax"], [182, "ivy.functional.ivy.activations.log_softmax"], [185, "ivy.functional.ivy.activations.log_softmax"]], "mish() (in module ivy.functional.ivy.activations)": [[169, "ivy.functional.ivy.activations.mish"], [187, "ivy.functional.ivy.activations.mish"], [190, "ivy.functional.ivy.activations.mish"]], "relu() (in module ivy.functional.ivy.activations)": [[169, "ivy.functional.ivy.activations.relu"], [192, "ivy.functional.ivy.activations.relu"], [195, "ivy.functional.ivy.activations.relu"]], "sigmoid() (in module ivy.functional.ivy.activations)": [[169, "ivy.functional.ivy.activations.sigmoid"], [197, "ivy.functional.ivy.activations.sigmoid"], [200, "ivy.functional.ivy.activations.sigmoid"]], "softmax() (in module ivy.functional.ivy.activations)": [[169, "ivy.functional.ivy.activations.softmax"], [202, "ivy.functional.ivy.activations.softmax"], [205, "ivy.functional.ivy.activations.softmax"]], "softplus() (in module ivy.functional.ivy.activations)": [[169, "ivy.functional.ivy.activations.softplus"], [207, "ivy.functional.ivy.activations.softplus"], [210, "ivy.functional.ivy.activations.softplus"]], "gelu() (in module ivy.array.array_methods)": [[171, "ivy.array.array_methods.gelu"], [172, "ivy.array.array_methods.gelu"]], "gelu() (in module ivy.container.container_methods)": [[171, "ivy.container.container_methods.gelu"], [173, "ivy.container.container_methods.gelu"]], "static_gelu() (in module ivy.container.container_methods)": [[171, "ivy.container.container_methods.static_gelu"], [175, "ivy.container.container_methods.static_gelu"]], "leaky_relu() (in module ivy.array.array_methods)": [[177, "ivy.array.array_methods.leaky_relu"], [178, "ivy.array.array_methods.leaky_relu"]], "leaky_relu() (in module ivy.container.container_methods)": [[177, "ivy.container.container_methods.leaky_relu"], [179, "ivy.container.container_methods.leaky_relu"]], "static_leaky_relu() (in module ivy.container.container_methods)": [[177, "ivy.container.container_methods.static_leaky_relu"], [181, "ivy.container.container_methods.static_leaky_relu"]], "log_softmax() (in module ivy.array.array_methods)": [[182, "ivy.array.array_methods.log_softmax"], [183, "ivy.array.array_methods.log_softmax"]], "log_softmax() (in module ivy.container.container_methods)": [[182, "ivy.container.container_methods.log_softmax"], [184, "ivy.container.container_methods.log_softmax"]], "static_log_softmax() (in module ivy.container.container_methods)": [[182, "ivy.container.container_methods.static_log_softmax"], [186, "ivy.container.container_methods.static_log_softmax"]], "mish() (in module ivy.array.array_methods)": [[187, "ivy.array.array_methods.mish"], [188, "ivy.array.array_methods.mish"]], "mish() (in module ivy.container.container_methods)": [[187, "ivy.container.container_methods.mish"], [189, "ivy.container.container_methods.mish"]], "static_mish() (in module ivy.container.container_methods)": [[187, "ivy.container.container_methods.static_mish"], [191, "ivy.container.container_methods.static_mish"]], "relu() (in module ivy.array.array_methods)": [[192, "ivy.array.array_methods.relu"], [193, "ivy.array.array_methods.relu"]], "relu() (in module ivy.container.container_methods)": [[192, "ivy.container.container_methods.relu"], [194, "ivy.container.container_methods.relu"]], "static_relu() (in module ivy.container.container_methods)": [[192, "ivy.container.container_methods.static_relu"], [196, "ivy.container.container_methods.static_relu"]], "sigmoid() (in module ivy.array.array_methods)": [[197, "ivy.array.array_methods.sigmoid"], [198, "ivy.array.array_methods.sigmoid"]], "sigmoid() (in module ivy.container.container_methods)": [[197, "ivy.container.container_methods.sigmoid"], [199, "ivy.container.container_methods.sigmoid"]], "static_sigmoid() (in module ivy.container.container_methods)": [[197, "ivy.container.container_methods.static_sigmoid"], [201, "ivy.container.container_methods.static_sigmoid"]], "softmax() (in module ivy.array.array_methods)": [[202, "ivy.array.array_methods.softmax"], [203, "ivy.array.array_methods.softmax"]], "softmax() (in module ivy.container.container_methods)": [[202, "ivy.container.container_methods.softmax"], [204, "ivy.container.container_methods.softmax"]], "static_softmax() (in module ivy.container.container_methods)": [[202, "ivy.container.container_methods.static_softmax"], [206, "ivy.container.container_methods.static_softmax"]], "softplus() (in module ivy.array.array_methods)": [[207, "ivy.array.array_methods.softplus"], [208, "ivy.array.array_methods.softplus"]], "softplus() (in module ivy.container.container_methods)": [[207, "ivy.container.container_methods.softplus"], [209, "ivy.container.container_methods.softplus"]], "static_softplus() (in module ivy.container.container_methods)": [[207, "ivy.container.container_methods.static_softplus"], [211, "ivy.container.container_methods.static_softplus"]], "e (in module ivy.functional.ivy.constants)": [[213, "ivy.functional.ivy.constants.e"]], "inf (in module ivy.functional.ivy.constants)": [[213, "ivy.functional.ivy.constants.inf"]], "ivy.functional.ivy.constants": [[213, "module-ivy.functional.ivy.constants"]], "nan (in module ivy.functional.ivy.constants)": [[213, "ivy.functional.ivy.constants.nan"]], "newaxis (in module ivy.functional.ivy.constants)": [[213, "ivy.functional.ivy.constants.newaxis"]], "pi (in module ivy.functional.ivy.constants)": [[213, "ivy.functional.ivy.constants.pi"]], "ifelse() (in module ivy.functional.ivy.control_flow_ops)": [[214, "ivy.functional.ivy.control_flow_ops.IfElse"], [215, "ivy.functional.ivy.control_flow_ops.IfElse"]], "whileloop() (in module ivy.functional.ivy.control_flow_ops)": [[214, "ivy.functional.ivy.control_flow_ops.WhileLoop"], [216, "ivy.functional.ivy.control_flow_ops.WhileLoop"]], "if_else() (in module ivy.functional.ivy.control_flow_ops)": [[214, "ivy.functional.ivy.control_flow_ops.if_else"], [217, "ivy.functional.ivy.control_flow_ops.if_else"]], "ivy.functional.ivy.control_flow_ops": [[214, "module-ivy.functional.ivy.control_flow_ops"]], "while_loop() (in module ivy.functional.ivy.control_flow_ops)": [[214, "ivy.functional.ivy.control_flow_ops.while_loop"], [218, "ivy.functional.ivy.control_flow_ops.while_loop"]], "nestedsequence (class in ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.NestedSequence"], [220, "ivy.functional.ivy.creation.NestedSequence"]], "__init__() (ivy.functional.ivy.creation.nestedsequence method)": [[219, "ivy.functional.ivy.creation.NestedSequence.__init__"], [220, "ivy.functional.ivy.creation.NestedSequence.__init__"]], "arange() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.arange"], [221, "ivy.functional.ivy.creation.arange"], [222, "ivy.functional.ivy.creation.arange"]], "array() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.array"]], "asarray() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.asarray"], [224, "ivy.functional.ivy.creation.asarray"], [226, "ivy.functional.ivy.creation.asarray"]], "asarray_handle_nestable() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.asarray_handle_nestable"], [228, "ivy.functional.ivy.creation.asarray_handle_nestable"]], "asarray_infer_device() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.asarray_infer_device"], [229, "ivy.functional.ivy.creation.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.asarray_to_native_arrays_and_back"], [230, "ivy.functional.ivy.creation.asarray_to_native_arrays_and_back"]], "copy_array() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.copy_array"], [231, "ivy.functional.ivy.creation.copy_array"], [233, "ivy.functional.ivy.creation.copy_array"]], "empty() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.empty"], [234, "ivy.functional.ivy.creation.empty"]], "empty_like() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.empty_like"], [235, "ivy.functional.ivy.creation.empty_like"], [238, "ivy.functional.ivy.creation.empty_like"]], "eye() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.eye"], [240, "ivy.functional.ivy.creation.eye"], [241, "ivy.functional.ivy.creation.eye"]], "from_dlpack() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.from_dlpack"], [243, "ivy.functional.ivy.creation.from_dlpack"], [246, "ivy.functional.ivy.creation.from_dlpack"]], "full() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.full"], [248, "ivy.functional.ivy.creation.full"]], "full_like() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.full_like"], [249, "ivy.functional.ivy.creation.full_like"], [252, "ivy.functional.ivy.creation.full_like"]], "ivy.functional.ivy.creation": [[219, "module-ivy.functional.ivy.creation"]], "linspace() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.linspace"], [254, "ivy.functional.ivy.creation.linspace"], [257, "ivy.functional.ivy.creation.linspace"]], "logspace() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.logspace"], [259, "ivy.functional.ivy.creation.logspace"], [262, "ivy.functional.ivy.creation.logspace"]], "meshgrid() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.meshgrid"], [264, "ivy.functional.ivy.creation.meshgrid"], [267, "ivy.functional.ivy.creation.meshgrid"]], "native_array() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.native_array"], [269, "ivy.functional.ivy.creation.native_array"], [272, "ivy.functional.ivy.creation.native_array"]], "one_hot() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.one_hot"], [274, "ivy.functional.ivy.creation.one_hot"], [277, "ivy.functional.ivy.creation.one_hot"]], "ones() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.ones"], [279, "ivy.functional.ivy.creation.ones"], [280, "ivy.functional.ivy.creation.ones"]], "ones_like() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.ones_like"], [282, "ivy.functional.ivy.creation.ones_like"], [285, "ivy.functional.ivy.creation.ones_like"]], "tril() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.tril"], [287, "ivy.functional.ivy.creation.tril"], [291, "ivy.functional.ivy.creation.tril"]], "triu() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.triu"], [292, "ivy.functional.ivy.creation.triu"], [296, "ivy.functional.ivy.creation.triu"]], "zeros() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.zeros"], [297, "ivy.functional.ivy.creation.zeros"], [299, "ivy.functional.ivy.creation.zeros"]], "zeros_like() (in module ivy.functional.ivy.creation)": [[219, "ivy.functional.ivy.creation.zeros_like"], [300, "ivy.functional.ivy.creation.zeros_like"], [304, "ivy.functional.ivy.creation.zeros_like"]], "static_arange() (in module ivy.container.container_methods)": [[221, "ivy.container.container_methods.static_arange"], [223, "ivy.container.container_methods.static_arange"]], "asarray() (in module ivy.array.array_methods)": [[224, "ivy.array.array_methods.asarray"], [225, "ivy.array.array_methods.asarray"]], "static_asarray() (in module ivy.container.container_methods)": [[224, "ivy.container.container_methods.static_asarray"], [227, "ivy.container.container_methods.static_asarray"]], "copy_array() (in module ivy.array.array_methods)": [[231, "ivy.array.array_methods.copy_array"], [232, "ivy.array.array_methods.copy_array"]], "empty_like() (in module ivy.array.array_methods)": [[235, "ivy.array.array_methods.empty_like"], [236, "ivy.array.array_methods.empty_like"]], "empty_like() (in module ivy.container.container_methods)": [[235, "ivy.container.container_methods.empty_like"], [237, "ivy.container.container_methods.empty_like"]], "static_empty_like() (in module ivy.container.container_methods)": [[235, "ivy.container.container_methods.static_empty_like"], [239, "ivy.container.container_methods.static_empty_like"]], "static_eye() (in module ivy.container.container_methods)": [[240, "ivy.container.container_methods.static_eye"], [242, "ivy.container.container_methods.static_eye"]], "from_dlpack() (in module ivy.array.array_methods)": [[243, "ivy.array.array_methods.from_dlpack"], [244, "ivy.array.array_methods.from_dlpack"]], "from_dlpack() (in module ivy.container.container_methods)": [[243, "ivy.container.container_methods.from_dlpack"], [245, "ivy.container.container_methods.from_dlpack"]], "static_from_dlpack() (in module ivy.container.container_methods)": [[243, "ivy.container.container_methods.static_from_dlpack"], [247, "ivy.container.container_methods.static_from_dlpack"]], "full_like() (in module ivy.array.array_methods)": [[249, "ivy.array.array_methods.full_like"], [250, "ivy.array.array_methods.full_like"]], "full_like() (in module ivy.container.container_methods)": [[249, "ivy.container.container_methods.full_like"], [251, "ivy.container.container_methods.full_like"]], "static_full_like() (in module ivy.container.container_methods)": [[249, "ivy.container.container_methods.static_full_like"], [253, "ivy.container.container_methods.static_full_like"]], "linspace() (in module ivy.array.array_methods)": [[254, "ivy.array.array_methods.linspace"], [255, "ivy.array.array_methods.linspace"]], "linspace() (in module ivy.container.container_methods)": [[254, "ivy.container.container_methods.linspace"], [256, "ivy.container.container_methods.linspace"]], "static_linspace() (in module ivy.container.container_methods)": [[254, "ivy.container.container_methods.static_linspace"], [258, "ivy.container.container_methods.static_linspace"]], "logspace() (in module ivy.array.array_methods)": [[259, "ivy.array.array_methods.logspace"], [260, "ivy.array.array_methods.logspace"]], "logspace() (in module ivy.container.container_methods)": [[259, "ivy.container.container_methods.logspace"], [261, "ivy.container.container_methods.logspace"]], "static_logspace() (in module ivy.container.container_methods)": [[259, "ivy.container.container_methods.static_logspace"], [263, "ivy.container.container_methods.static_logspace"]], "meshgrid() (in module ivy.array.array_methods)": [[264, "ivy.array.array_methods.meshgrid"], [265, "ivy.array.array_methods.meshgrid"]], "meshgrid() (in module ivy.container.container_methods)": [[264, "ivy.container.container_methods.meshgrid"], [266, "ivy.container.container_methods.meshgrid"]], "static_meshgrid() (in module ivy.container.container_methods)": [[264, "ivy.container.container_methods.static_meshgrid"], [268, "ivy.container.container_methods.static_meshgrid"]], "native_array() (in module ivy.array.array_methods)": [[269, "ivy.array.array_methods.native_array"], [270, "ivy.array.array_methods.native_array"]], "native_array() (in module ivy.container.container_methods)": [[269, "ivy.container.container_methods.native_array"], [271, "ivy.container.container_methods.native_array"]], "static_native_array() (in module ivy.container.container_methods)": [[269, "ivy.container.container_methods.static_native_array"], [273, "ivy.container.container_methods.static_native_array"]], "one_hot() (in module ivy.array.array_methods)": [[274, "ivy.array.array_methods.one_hot"], [275, "ivy.array.array_methods.one_hot"]], "one_hot() (in module ivy.container.container_methods)": [[274, "ivy.container.container_methods.one_hot"], [276, "ivy.container.container_methods.one_hot"]], "static_one_hot() (in module ivy.container.container_methods)": [[274, "ivy.container.container_methods.static_one_hot"], [278, "ivy.container.container_methods.static_one_hot"]], "static_ones() (in module ivy.container.container_methods)": [[279, "ivy.container.container_methods.static_ones"], [281, "ivy.container.container_methods.static_ones"]], "ones_like() (in module ivy.array.array_methods)": [[282, "ivy.array.array_methods.ones_like"], [283, "ivy.array.array_methods.ones_like"]], "ones_like() (in module ivy.container.container_methods)": [[282, "ivy.container.container_methods.ones_like"], [284, "ivy.container.container_methods.ones_like"]], "static_ones_like() (in module ivy.container.container_methods)": [[282, "ivy.container.container_methods.static_ones_like"], [286, "ivy.container.container_methods.static_ones_like"]], "static_tril() (in module ivy.container.container_methods)": [[287, "ivy.container.container_methods.static_tril"], [288, "ivy.container.container_methods.static_tril"]], "tril() (in module ivy.array.array_methods)": [[287, "ivy.array.array_methods.tril"], [289, "ivy.array.array_methods.tril"]], "tril() (in module ivy.container.container_methods)": [[287, "ivy.container.container_methods.tril"], [290, "ivy.container.container_methods.tril"]], "static_triu() (in module ivy.container.container_methods)": [[292, "ivy.container.container_methods.static_triu"], [293, "ivy.container.container_methods.static_triu"]], "triu() (in module ivy.array.array_methods)": [[292, "ivy.array.array_methods.triu"], [294, "ivy.array.array_methods.triu"]], "triu() (in module ivy.container.container_methods)": [[292, "ivy.container.container_methods.triu"], [295, "ivy.container.container_methods.triu"]], "static_zeros() (in module ivy.container.container_methods)": [[297, "ivy.container.container_methods.static_zeros"], [298, "ivy.container.container_methods.static_zeros"]], "static_zeros_like() (in module ivy.container.container_methods)": [[300, "ivy.container.container_methods.static_zeros_like"], [301, "ivy.container.container_methods.static_zeros_like"]], "zeros_like() (in module ivy.array.array_methods)": [[300, "ivy.array.array_methods.zeros_like"], [302, "ivy.array.array_methods.zeros_like"]], "zeros_like() (in module ivy.container.container_methods)": [[300, "ivy.container.container_methods.zeros_like"], [303, "ivy.container.container_methods.zeros_like"]], "defaultcomplexdtype (class in ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.DefaultComplexDtype"], [306, "ivy.functional.ivy.data_type.DefaultComplexDtype"]], "defaultdtype (class in ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.DefaultDtype"], [307, "ivy.functional.ivy.data_type.DefaultDtype"]], "defaultfloatdtype (class in ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.DefaultFloatDtype"], [308, "ivy.functional.ivy.data_type.DefaultFloatDtype"]], "defaultintdtype (class in ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.DefaultIntDtype"], [309, "ivy.functional.ivy.data_type.DefaultIntDtype"]], "defaultuintdtype (class in ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.DefaultUintDtype"], [310, "ivy.functional.ivy.data_type.DefaultUintDtype"]], "__init__() (ivy.functional.ivy.data_type.defaultcomplexdtype method)": [[305, "ivy.functional.ivy.data_type.DefaultComplexDtype.__init__"], [306, "ivy.functional.ivy.data_type.DefaultComplexDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultdtype method)": [[305, "ivy.functional.ivy.data_type.DefaultDtype.__init__"], [307, "ivy.functional.ivy.data_type.DefaultDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultfloatdtype method)": [[305, "ivy.functional.ivy.data_type.DefaultFloatDtype.__init__"], [308, "ivy.functional.ivy.data_type.DefaultFloatDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultintdtype method)": [[305, "ivy.functional.ivy.data_type.DefaultIntDtype.__init__"], [309, "ivy.functional.ivy.data_type.DefaultIntDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultuintdtype method)": [[305, "ivy.functional.ivy.data_type.DefaultUintDtype.__init__"], [310, "ivy.functional.ivy.data_type.DefaultUintDtype.__init__"]], "as_ivy_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.as_ivy_dtype"], [311, "ivy.functional.ivy.data_type.as_ivy_dtype"]], "as_native_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.as_native_dtype"], [312, "ivy.functional.ivy.data_type.as_native_dtype"]], "astype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.astype"], [313, "ivy.functional.ivy.data_type.astype"], [316, "ivy.functional.ivy.data_type.astype"]], "broadcast_arrays() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.broadcast_arrays"], [318, "ivy.functional.ivy.data_type.broadcast_arrays"], [321, "ivy.functional.ivy.data_type.broadcast_arrays"]], "broadcast_to() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.broadcast_to"], [323, "ivy.functional.ivy.data_type.broadcast_to"], [326, "ivy.functional.ivy.data_type.broadcast_to"]], "can_cast() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.can_cast"], [328, "ivy.functional.ivy.data_type.can_cast"], [331, "ivy.functional.ivy.data_type.can_cast"]], "check_float() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.check_float"], [333, "ivy.functional.ivy.data_type.check_float"]], "closest_valid_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.closest_valid_dtype"], [334, "ivy.functional.ivy.data_type.closest_valid_dtype"]], "default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.default_complex_dtype"], [335, "ivy.functional.ivy.data_type.default_complex_dtype"], [336, "ivy.functional.ivy.data_type.default_complex_dtype"]], "default_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.default_dtype"], [338, "ivy.functional.ivy.data_type.default_dtype"]], "default_float_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.default_float_dtype"], [339, "ivy.functional.ivy.data_type.default_float_dtype"], [340, "ivy.functional.ivy.data_type.default_float_dtype"]], "default_int_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.default_int_dtype"], [342, "ivy.functional.ivy.data_type.default_int_dtype"]], "default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.default_uint_dtype"], [343, "ivy.functional.ivy.data_type.default_uint_dtype"]], "dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.dtype"], [344, "ivy.functional.ivy.data_type.dtype"], [346, "ivy.functional.ivy.data_type.dtype"]], "dtype_bits() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.dtype_bits"], [348, "ivy.functional.ivy.data_type.dtype_bits"]], "finfo() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.finfo"], [349, "ivy.functional.ivy.data_type.finfo"], [352, "ivy.functional.ivy.data_type.finfo"]], "function_supported_dtypes() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.function_supported_dtypes"], [354, "ivy.functional.ivy.data_type.function_supported_dtypes"], [355, "ivy.functional.ivy.data_type.function_supported_dtypes"]], "function_unsupported_dtypes() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.function_unsupported_dtypes"], [357, "ivy.functional.ivy.data_type.function_unsupported_dtypes"], [358, "ivy.functional.ivy.data_type.function_unsupported_dtypes"]], "iinfo() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.iinfo"], [360, "ivy.functional.ivy.data_type.iinfo"], [363, "ivy.functional.ivy.data_type.iinfo"]], "infer_default_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.infer_default_dtype"], [365, "ivy.functional.ivy.data_type.infer_default_dtype"]], "invalid_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.invalid_dtype"], [366, "ivy.functional.ivy.data_type.invalid_dtype"]], "is_bool_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.is_bool_dtype"], [367, "ivy.functional.ivy.data_type.is_bool_dtype"], [370, "ivy.functional.ivy.data_type.is_bool_dtype"]], "is_complex_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.is_complex_dtype"], [372, "ivy.functional.ivy.data_type.is_complex_dtype"], [374, "ivy.functional.ivy.data_type.is_complex_dtype"]], "is_float_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.is_float_dtype"], [376, "ivy.functional.ivy.data_type.is_float_dtype"], [379, "ivy.functional.ivy.data_type.is_float_dtype"]], "is_int_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.is_int_dtype"], [381, "ivy.functional.ivy.data_type.is_int_dtype"], [384, "ivy.functional.ivy.data_type.is_int_dtype"]], "is_uint_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.is_uint_dtype"], [386, "ivy.functional.ivy.data_type.is_uint_dtype"], [389, "ivy.functional.ivy.data_type.is_uint_dtype"]], "ivy.functional.ivy.data_type": [[305, "module-ivy.functional.ivy.data_type"]], "promote_types() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.promote_types"], [391, "ivy.functional.ivy.data_type.promote_types"]], "promote_types_of_inputs() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.promote_types_of_inputs"], [392, "ivy.functional.ivy.data_type.promote_types_of_inputs"]], "result_type() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.result_type"], [393, "ivy.functional.ivy.data_type.result_type"], [396, "ivy.functional.ivy.data_type.result_type"]], "set_default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.set_default_complex_dtype"], [398, "ivy.functional.ivy.data_type.set_default_complex_dtype"]], "set_default_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.set_default_dtype"], [399, "ivy.functional.ivy.data_type.set_default_dtype"]], "set_default_float_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.set_default_float_dtype"], [400, "ivy.functional.ivy.data_type.set_default_float_dtype"]], "set_default_int_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.set_default_int_dtype"], [401, "ivy.functional.ivy.data_type.set_default_int_dtype"]], "set_default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.set_default_uint_dtype"], [402, "ivy.functional.ivy.data_type.set_default_uint_dtype"]], "type_promote_arrays() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.type_promote_arrays"], [403, "ivy.functional.ivy.data_type.type_promote_arrays"]], "unset_default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.unset_default_complex_dtype"], [404, "ivy.functional.ivy.data_type.unset_default_complex_dtype"]], "unset_default_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.unset_default_dtype"], [405, "ivy.functional.ivy.data_type.unset_default_dtype"]], "unset_default_float_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.unset_default_float_dtype"], [406, "ivy.functional.ivy.data_type.unset_default_float_dtype"]], "unset_default_int_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.unset_default_int_dtype"], [407, "ivy.functional.ivy.data_type.unset_default_int_dtype"]], "unset_default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.unset_default_uint_dtype"], [408, "ivy.functional.ivy.data_type.unset_default_uint_dtype"]], "valid_dtype() (in module ivy.functional.ivy.data_type)": [[305, "ivy.functional.ivy.data_type.valid_dtype"], [409, "ivy.functional.ivy.data_type.valid_dtype"]], "astype() (in module ivy.array.array_methods)": [[313, "ivy.array.array_methods.astype"], [314, "ivy.array.array_methods.astype"]], "astype() (in module ivy.container.container_methods)": [[313, "ivy.container.container_methods.astype"], [315, "ivy.container.container_methods.astype"]], "static_astype() (in module ivy.container.container_methods)": [[313, "ivy.container.container_methods.static_astype"], [317, "ivy.container.container_methods.static_astype"]], "broadcast_arrays() (in module ivy.array.array_methods)": [[318, "ivy.array.array_methods.broadcast_arrays"], [319, "ivy.array.array_methods.broadcast_arrays"]], "broadcast_arrays() (in module ivy.container.container_methods)": [[318, "ivy.container.container_methods.broadcast_arrays"], [320, "ivy.container.container_methods.broadcast_arrays"]], "static_broadcast_arrays() (in module ivy.container.container_methods)": [[318, "ivy.container.container_methods.static_broadcast_arrays"], [322, "ivy.container.container_methods.static_broadcast_arrays"]], "broadcast_to() (in module ivy.array.array_methods)": [[323, "ivy.array.array_methods.broadcast_to"], [324, "ivy.array.array_methods.broadcast_to"]], "broadcast_to() (in module ivy.container.container_methods)": [[323, "ivy.container.container_methods.broadcast_to"], [325, "ivy.container.container_methods.broadcast_to"]], "static_broadcast_to() (in module ivy.container.container_methods)": [[323, "ivy.container.container_methods.static_broadcast_to"], [327, "ivy.container.container_methods.static_broadcast_to"]], "can_cast() (in module ivy.array.array_methods)": [[328, "ivy.array.array_methods.can_cast"], [329, "ivy.array.array_methods.can_cast"]], "can_cast() (in module ivy.container.container_methods)": [[328, "ivy.container.container_methods.can_cast"], [330, "ivy.container.container_methods.can_cast"]], "static_can_cast() (in module ivy.container.container_methods)": [[328, "ivy.container.container_methods.static_can_cast"], [332, "ivy.container.container_methods.static_can_cast"]], "static_default_complex_dtype() (in module ivy.container.container_methods)": [[335, "ivy.container.container_methods.static_default_complex_dtype"], [337, "ivy.container.container_methods.static_default_complex_dtype"]], "static_default_float_dtype() (in module ivy.container.container_methods)": [[339, "ivy.container.container_methods.static_default_float_dtype"], [341, "ivy.container.container_methods.static_default_float_dtype"]], "dtype() (in module ivy.container.container_methods)": [[344, "ivy.container.container_methods.dtype"], [345, "ivy.container.container_methods.dtype"]], "static_dtype() (in module ivy.container.container_methods)": [[344, "ivy.container.container_methods.static_dtype"], [347, "ivy.container.container_methods.static_dtype"]], "finfo() (in module ivy.array.array_methods)": [[349, "ivy.array.array_methods.finfo"], [350, "ivy.array.array_methods.finfo"]], "finfo() (in module ivy.container.container_methods)": [[349, "ivy.container.container_methods.finfo"], [351, "ivy.container.container_methods.finfo"]], "static_finfo() (in module ivy.container.container_methods)": [[349, "ivy.container.container_methods.static_finfo"], [353, "ivy.container.container_methods.static_finfo"]], "static_function_supported_dtypes() (in module ivy.container.container_methods)": [[354, "ivy.container.container_methods.static_function_supported_dtypes"], [356, "ivy.container.container_methods.static_function_supported_dtypes"]], "static_function_unsupported_dtypes() (in module ivy.container.container_methods)": [[357, "ivy.container.container_methods.static_function_unsupported_dtypes"], [359, "ivy.container.container_methods.static_function_unsupported_dtypes"]], "iinfo() (in module ivy.array.array_methods)": [[360, "ivy.array.array_methods.iinfo"], [361, "ivy.array.array_methods.iinfo"]], "iinfo() (in module ivy.container.container_methods)": [[360, "ivy.container.container_methods.iinfo"], [362, "ivy.container.container_methods.iinfo"]], "static_iinfo() (in module ivy.container.container_methods)": [[360, "ivy.container.container_methods.static_iinfo"], [364, "ivy.container.container_methods.static_iinfo"]], "is_bool_dtype() (in module ivy.array.array_methods)": [[367, "ivy.array.array_methods.is_bool_dtype"], [368, "ivy.array.array_methods.is_bool_dtype"]], "is_bool_dtype() (in module ivy.container.container_methods)": [[367, "ivy.container.container_methods.is_bool_dtype"], [369, "ivy.container.container_methods.is_bool_dtype"]], "static_is_bool_dtype() (in module ivy.container.container_methods)": [[367, "ivy.container.container_methods.static_is_bool_dtype"], [371, "ivy.container.container_methods.static_is_bool_dtype"]], "is_complex_dtype() (in module ivy.container.container_methods)": [[372, "ivy.container.container_methods.is_complex_dtype"], [373, "ivy.container.container_methods.is_complex_dtype"]], "static_is_complex_dtype() (in module ivy.container.container_methods)": [[372, "ivy.container.container_methods.static_is_complex_dtype"], [375, "ivy.container.container_methods.static_is_complex_dtype"]], "is_float_dtype() (in module ivy.array.array_methods)": [[376, "ivy.array.array_methods.is_float_dtype"], [377, "ivy.array.array_methods.is_float_dtype"]], "is_float_dtype() (in module ivy.container.container_methods)": [[376, "ivy.container.container_methods.is_float_dtype"], [378, "ivy.container.container_methods.is_float_dtype"]], "static_is_float_dtype() (in module ivy.container.container_methods)": [[376, "ivy.container.container_methods.static_is_float_dtype"], [380, "ivy.container.container_methods.static_is_float_dtype"]], "is_int_dtype() (in module ivy.array.array_methods)": [[381, "ivy.array.array_methods.is_int_dtype"], [382, "ivy.array.array_methods.is_int_dtype"]], "is_int_dtype() (in module ivy.container.container_methods)": [[381, "ivy.container.container_methods.is_int_dtype"], [383, "ivy.container.container_methods.is_int_dtype"]], "static_is_int_dtype() (in module ivy.container.container_methods)": [[381, "ivy.container.container_methods.static_is_int_dtype"], [385, "ivy.container.container_methods.static_is_int_dtype"]], "is_uint_dtype() (in module ivy.array.array_methods)": [[386, "ivy.array.array_methods.is_uint_dtype"], [387, "ivy.array.array_methods.is_uint_dtype"]], "is_uint_dtype() (in module ivy.container.container_methods)": [[386, "ivy.container.container_methods.is_uint_dtype"], [388, "ivy.container.container_methods.is_uint_dtype"]], "static_is_uint_dtype() (in module ivy.container.container_methods)": [[386, "ivy.container.container_methods.static_is_uint_dtype"], [390, "ivy.container.container_methods.static_is_uint_dtype"]], "result_type() (in module ivy.array.array_methods)": [[393, "ivy.array.array_methods.result_type"], [394, "ivy.array.array_methods.result_type"]], "result_type() (in module ivy.container.container_methods)": [[393, "ivy.container.container_methods.result_type"], [395, "ivy.container.container_methods.result_type"]], "static_result_type() (in module ivy.container.container_methods)": [[393, "ivy.container.container_methods.static_result_type"], [397, "ivy.container.container_methods.static_result_type"]], "defaultdevice (class in ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.DefaultDevice"], [411, "ivy.functional.ivy.device.DefaultDevice"]], "profiler (class in ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.Profiler"], [412, "ivy.functional.ivy.device.Profiler"]], "__enter__() (ivy.functional.ivy.device.defaultdevice method)": [[410, "ivy.functional.ivy.device.DefaultDevice.__enter__"], [411, "ivy.functional.ivy.device.DefaultDevice.__enter__"]], "__exit__() (ivy.functional.ivy.device.defaultdevice method)": [[410, "ivy.functional.ivy.device.DefaultDevice.__exit__"], [411, "ivy.functional.ivy.device.DefaultDevice.__exit__"]], "__init__() (ivy.functional.ivy.device.defaultdevice method)": [[410, "ivy.functional.ivy.device.DefaultDevice.__init__"], [411, "ivy.functional.ivy.device.DefaultDevice.__init__"]], "__init__() (ivy.functional.ivy.device.profiler method)": [[410, "ivy.functional.ivy.device.Profiler.__init__"], [412, "ivy.functional.ivy.device.Profiler.__init__"]], "as_ivy_dev() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.as_ivy_dev"], [413, "ivy.functional.ivy.device.as_ivy_dev"]], "as_native_dev() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.as_native_dev"], [414, "ivy.functional.ivy.device.as_native_dev"]], "clear_mem_on_dev() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.clear_mem_on_dev"], [415, "ivy.functional.ivy.device.clear_mem_on_dev"]], "default_device() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.default_device"], [416, "ivy.functional.ivy.device.default_device"]], "dev() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.dev"], [417, "ivy.functional.ivy.device.dev"], [420, "ivy.functional.ivy.device.dev"]], "dev_util() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.dev_util"], [422, "ivy.functional.ivy.device.dev_util"]], "function_supported_devices() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.function_supported_devices"], [423, "ivy.functional.ivy.device.function_supported_devices"]], "function_unsupported_devices() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.function_unsupported_devices"], [424, "ivy.functional.ivy.device.function_unsupported_devices"]], "get_all_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.get_all_ivy_arrays_on_dev"], [425, "ivy.functional.ivy.device.get_all_ivy_arrays_on_dev"]], "gpu_is_available() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.gpu_is_available"], [426, "ivy.functional.ivy.device.gpu_is_available"]], "ivy.functional.ivy.device": [[410, "module-ivy.functional.ivy.device"]], "num_cpu_cores() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.num_cpu_cores"], [427, "ivy.functional.ivy.device.num_cpu_cores"]], "num_gpus() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.num_gpus"], [428, "ivy.functional.ivy.device.num_gpus"]], "num_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.num_ivy_arrays_on_dev"], [429, "ivy.functional.ivy.device.num_ivy_arrays_on_dev"]], "percent_used_mem_on_dev() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.percent_used_mem_on_dev"], [430, "ivy.functional.ivy.device.percent_used_mem_on_dev"]], "print_all_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.print_all_ivy_arrays_on_dev"], [431, "ivy.functional.ivy.device.print_all_ivy_arrays_on_dev"]], "set_default_device() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.set_default_device"], [432, "ivy.functional.ivy.device.set_default_device"]], "set_split_factor() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.set_split_factor"], [433, "ivy.functional.ivy.device.set_split_factor"]], "split_factor() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.split_factor"], [434, "ivy.functional.ivy.device.split_factor"]], "split_func_call() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.split_func_call"], [435, "ivy.functional.ivy.device.split_func_call"]], "start() (ivy.functional.ivy.device.profiler method)": [[410, "ivy.functional.ivy.device.Profiler.start"], [412, "ivy.functional.ivy.device.Profiler.start"]], "stop() (ivy.functional.ivy.device.profiler method)": [[410, "ivy.functional.ivy.device.Profiler.stop"], [412, "ivy.functional.ivy.device.Profiler.stop"]], "to_device() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.to_device"], [436, "ivy.functional.ivy.device.to_device"], [440, "ivy.functional.ivy.device.to_device"]], "total_mem_on_dev() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.total_mem_on_dev"], [441, "ivy.functional.ivy.device.total_mem_on_dev"]], "tpu_is_available() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.tpu_is_available"], [442, "ivy.functional.ivy.device.tpu_is_available"]], "unset_default_device() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.unset_default_device"], [443, "ivy.functional.ivy.device.unset_default_device"]], "used_mem_on_dev() (in module ivy.functional.ivy.device)": [[410, "ivy.functional.ivy.device.used_mem_on_dev"], [444, "ivy.functional.ivy.device.used_mem_on_dev"]], "dev() (in module ivy.array.array_methods)": [[417, "ivy.array.array_methods.dev"], [418, "ivy.array.array_methods.dev"]], "dev() (in module ivy.container.container_methods)": [[417, "ivy.container.container_methods.dev"], [419, "ivy.container.container_methods.dev"]], "static_dev() (in module ivy.container.container_methods)": [[417, "ivy.container.container_methods.static_dev"], [421, "ivy.container.container_methods.static_dev"]], "static_to_device() (in module ivy.container.container_methods)": [[436, "ivy.container.container_methods.static_to_device"], [437, "ivy.container.container_methods.static_to_device"]], "to_device() (in module ivy.array.array_methods)": [[436, "ivy.array.array_methods.to_device"], [438, "ivy.array.array_methods.to_device"]], "to_device() (in module ivy.container.container_methods)": [[436, "ivy.container.container_methods.to_device"], [439, "ivy.container.container_methods.to_device"]], "abs() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.abs"], [446, "ivy.functional.ivy.elementwise.abs"], [449, "ivy.functional.ivy.elementwise.abs"]], "acos() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.acos"], [451, "ivy.functional.ivy.elementwise.acos"], [454, "ivy.functional.ivy.elementwise.acos"]], "acosh() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.acosh"], [456, "ivy.functional.ivy.elementwise.acosh"], [459, "ivy.functional.ivy.elementwise.acosh"]], "add() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.add"], [461, "ivy.functional.ivy.elementwise.add"], [464, "ivy.functional.ivy.elementwise.add"]], "asin() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.asin"], [466, "ivy.functional.ivy.elementwise.asin"], [469, "ivy.functional.ivy.elementwise.asin"]], "asinh() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.asinh"], [471, "ivy.functional.ivy.elementwise.asinh"], [474, "ivy.functional.ivy.elementwise.asinh"]], "atan() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.atan"], [476, "ivy.functional.ivy.elementwise.atan"], [479, "ivy.functional.ivy.elementwise.atan"]], "atan2() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.atan2"], [481, "ivy.functional.ivy.elementwise.atan2"], [484, "ivy.functional.ivy.elementwise.atan2"]], "atanh() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.atanh"], [486, "ivy.functional.ivy.elementwise.atanh"], [489, "ivy.functional.ivy.elementwise.atanh"]], "bitwise_and() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.bitwise_and"], [491, "ivy.functional.ivy.elementwise.bitwise_and"], [494, "ivy.functional.ivy.elementwise.bitwise_and"]], "bitwise_invert() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.bitwise_invert"], [496, "ivy.functional.ivy.elementwise.bitwise_invert"], [499, "ivy.functional.ivy.elementwise.bitwise_invert"]], "bitwise_left_shift() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.bitwise_left_shift"], [501, "ivy.functional.ivy.elementwise.bitwise_left_shift"], [504, "ivy.functional.ivy.elementwise.bitwise_left_shift"]], "bitwise_or() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.bitwise_or"], [506, "ivy.functional.ivy.elementwise.bitwise_or"], [509, "ivy.functional.ivy.elementwise.bitwise_or"]], "bitwise_right_shift() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.bitwise_right_shift"], [511, "ivy.functional.ivy.elementwise.bitwise_right_shift"], [514, "ivy.functional.ivy.elementwise.bitwise_right_shift"]], "bitwise_xor() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.bitwise_xor"], [516, "ivy.functional.ivy.elementwise.bitwise_xor"], [519, "ivy.functional.ivy.elementwise.bitwise_xor"]], "ceil() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.ceil"], [521, "ivy.functional.ivy.elementwise.ceil"], [524, "ivy.functional.ivy.elementwise.ceil"]], "cos() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.cos"], [526, "ivy.functional.ivy.elementwise.cos"], [529, "ivy.functional.ivy.elementwise.cos"]], "cosh() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.cosh"], [531, "ivy.functional.ivy.elementwise.cosh"], [534, "ivy.functional.ivy.elementwise.cosh"]], "deg2rad() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.deg2rad"], [536, "ivy.functional.ivy.elementwise.deg2rad"], [539, "ivy.functional.ivy.elementwise.deg2rad"]], "divide() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.divide"], [541, "ivy.functional.ivy.elementwise.divide"], [544, "ivy.functional.ivy.elementwise.divide"]], "equal() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.equal"], [546, "ivy.functional.ivy.elementwise.equal"], [549, "ivy.functional.ivy.elementwise.equal"]], "erf() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.erf"], [551, "ivy.functional.ivy.elementwise.erf"], [554, "ivy.functional.ivy.elementwise.erf"]], "exp() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.exp"], [556, "ivy.functional.ivy.elementwise.exp"], [559, "ivy.functional.ivy.elementwise.exp"]], "expm1() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.expm1"], [561, "ivy.functional.ivy.elementwise.expm1"], [564, "ivy.functional.ivy.elementwise.expm1"]], "floor() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.floor"], [566, "ivy.functional.ivy.elementwise.floor"], [569, "ivy.functional.ivy.elementwise.floor"]], "floor_divide() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.floor_divide"], [571, "ivy.functional.ivy.elementwise.floor_divide"], [574, "ivy.functional.ivy.elementwise.floor_divide"]], "greater() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.greater"], [576, "ivy.functional.ivy.elementwise.greater"], [579, "ivy.functional.ivy.elementwise.greater"]], "greater_equal() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.greater_equal"], [581, "ivy.functional.ivy.elementwise.greater_equal"], [584, "ivy.functional.ivy.elementwise.greater_equal"]], "isfinite() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.isfinite"], [586, "ivy.functional.ivy.elementwise.isfinite"], [589, "ivy.functional.ivy.elementwise.isfinite"]], "isinf() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.isinf"], [591, "ivy.functional.ivy.elementwise.isinf"], [594, "ivy.functional.ivy.elementwise.isinf"]], "isnan() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.isnan"], [596, "ivy.functional.ivy.elementwise.isnan"], [599, "ivy.functional.ivy.elementwise.isnan"]], "isreal() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.isreal"], [601, "ivy.functional.ivy.elementwise.isreal"], [604, "ivy.functional.ivy.elementwise.isreal"]], "ivy.functional.ivy.elementwise": [[445, "module-ivy.functional.ivy.elementwise"]], "less() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.less"], [606, "ivy.functional.ivy.elementwise.less"], [609, "ivy.functional.ivy.elementwise.less"]], "less_equal() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.less_equal"], [611, "ivy.functional.ivy.elementwise.less_equal"], [614, "ivy.functional.ivy.elementwise.less_equal"]], "log() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.log"], [616, "ivy.functional.ivy.elementwise.log"], [619, "ivy.functional.ivy.elementwise.log"]], "log10() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.log10"], [621, "ivy.functional.ivy.elementwise.log10"], [624, "ivy.functional.ivy.elementwise.log10"]], "log1p() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.log1p"], [626, "ivy.functional.ivy.elementwise.log1p"], [629, "ivy.functional.ivy.elementwise.log1p"]], "log2() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.log2"], [631, "ivy.functional.ivy.elementwise.log2"], [634, "ivy.functional.ivy.elementwise.log2"]], "logaddexp() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.logaddexp"], [636, "ivy.functional.ivy.elementwise.logaddexp"], [639, "ivy.functional.ivy.elementwise.logaddexp"]], "logical_and() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.logical_and"], [641, "ivy.functional.ivy.elementwise.logical_and"], [644, "ivy.functional.ivy.elementwise.logical_and"]], "logical_not() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.logical_not"], [646, "ivy.functional.ivy.elementwise.logical_not"], [649, "ivy.functional.ivy.elementwise.logical_not"]], "logical_or() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.logical_or"], [651, "ivy.functional.ivy.elementwise.logical_or"], [654, "ivy.functional.ivy.elementwise.logical_or"]], "logical_xor() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.logical_xor"], [656, "ivy.functional.ivy.elementwise.logical_xor"], [659, "ivy.functional.ivy.elementwise.logical_xor"]], "maximum() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.maximum"], [661, "ivy.functional.ivy.elementwise.maximum"], [664, "ivy.functional.ivy.elementwise.maximum"]], "minimum() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.minimum"], [666, "ivy.functional.ivy.elementwise.minimum"], [669, "ivy.functional.ivy.elementwise.minimum"]], "multiply() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.multiply"], [671, "ivy.functional.ivy.elementwise.multiply"], [674, "ivy.functional.ivy.elementwise.multiply"]], "negative() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.negative"], [676, "ivy.functional.ivy.elementwise.negative"], [679, "ivy.functional.ivy.elementwise.negative"]], "not_equal() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.not_equal"], [681, "ivy.functional.ivy.elementwise.not_equal"], [684, "ivy.functional.ivy.elementwise.not_equal"]], "positive() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.positive"], [686, "ivy.functional.ivy.elementwise.positive"], [689, "ivy.functional.ivy.elementwise.positive"]], "pow() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.pow"], [691, "ivy.functional.ivy.elementwise.pow"], [694, "ivy.functional.ivy.elementwise.pow"]], "rad2deg() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.rad2deg"], [696, "ivy.functional.ivy.elementwise.rad2deg"], [699, "ivy.functional.ivy.elementwise.rad2deg"]], "reciprocal() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.reciprocal"], [701, "ivy.functional.ivy.elementwise.reciprocal"], [704, "ivy.functional.ivy.elementwise.reciprocal"]], "remainder() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.remainder"], [706, "ivy.functional.ivy.elementwise.remainder"], [709, "ivy.functional.ivy.elementwise.remainder"]], "round() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.round"], [711, "ivy.functional.ivy.elementwise.round"], [714, "ivy.functional.ivy.elementwise.round"]], "sign() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.sign"], [716, "ivy.functional.ivy.elementwise.sign"], [719, "ivy.functional.ivy.elementwise.sign"]], "sin() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.sin"], [721, "ivy.functional.ivy.elementwise.sin"], [724, "ivy.functional.ivy.elementwise.sin"]], "sinh() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.sinh"], [726, "ivy.functional.ivy.elementwise.sinh"], [729, "ivy.functional.ivy.elementwise.sinh"]], "sqrt() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.sqrt"], [731, "ivy.functional.ivy.elementwise.sqrt"], [734, "ivy.functional.ivy.elementwise.sqrt"]], "square() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.square"], [736, "ivy.functional.ivy.elementwise.square"], [739, "ivy.functional.ivy.elementwise.square"]], "subtract() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.subtract"], [741, "ivy.functional.ivy.elementwise.subtract"], [745, "ivy.functional.ivy.elementwise.subtract"]], "tan() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.tan"], [746, "ivy.functional.ivy.elementwise.tan"], [750, "ivy.functional.ivy.elementwise.tan"]], "tanh() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.tanh"], [751, "ivy.functional.ivy.elementwise.tanh"], [755, "ivy.functional.ivy.elementwise.tanh"]], "trunc() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.trunc"], [756, "ivy.functional.ivy.elementwise.trunc"], [760, "ivy.functional.ivy.elementwise.trunc"]], "trunc_divide() (in module ivy.functional.ivy.elementwise)": [[445, "ivy.functional.ivy.elementwise.trunc_divide"], [761, "ivy.functional.ivy.elementwise.trunc_divide"], [765, "ivy.functional.ivy.elementwise.trunc_divide"]], "abs() (in module ivy.array.array_methods)": [[446, "ivy.array.array_methods.abs"], [447, "ivy.array.array_methods.abs"]], "abs() (in module ivy.container.container_methods)": [[446, "ivy.container.container_methods.abs"], [448, "ivy.container.container_methods.abs"]], "static_abs() (in module ivy.container.container_methods)": [[446, "ivy.container.container_methods.static_abs"], [450, "ivy.container.container_methods.static_abs"]], "acos() (in module ivy.array.array_methods)": [[451, "ivy.array.array_methods.acos"], [452, "ivy.array.array_methods.acos"]], "acos() (in module ivy.container.container_methods)": [[451, "ivy.container.container_methods.acos"], [453, "ivy.container.container_methods.acos"]], "static_acos() (in module ivy.container.container_methods)": [[451, "ivy.container.container_methods.static_acos"], [455, "ivy.container.container_methods.static_acos"]], "acosh() (in module ivy.array.array_methods)": [[456, "ivy.array.array_methods.acosh"], [457, "ivy.array.array_methods.acosh"]], "acosh() (in module ivy.container.container_methods)": [[456, "ivy.container.container_methods.acosh"], [458, "ivy.container.container_methods.acosh"]], "static_acosh() (in module ivy.container.container_methods)": [[456, "ivy.container.container_methods.static_acosh"], [460, "ivy.container.container_methods.static_acosh"]], "add() (in module ivy.array.array_methods)": [[461, "ivy.array.array_methods.add"], [462, "ivy.array.array_methods.add"]], "add() (in module ivy.container.container_methods)": [[461, "ivy.container.container_methods.add"], [463, "ivy.container.container_methods.add"]], "static_add() (in module ivy.container.container_methods)": [[461, "ivy.container.container_methods.static_add"], [465, "ivy.container.container_methods.static_add"]], "asin() (in module ivy.array.array_methods)": [[466, "ivy.array.array_methods.asin"], [467, "ivy.array.array_methods.asin"]], "asin() (in module ivy.container.container_methods)": [[466, "ivy.container.container_methods.asin"], [468, "ivy.container.container_methods.asin"]], "static_asin() (in module ivy.container.container_methods)": [[466, "ivy.container.container_methods.static_asin"], [470, "ivy.container.container_methods.static_asin"]], "asinh() (in module ivy.array.array_methods)": [[471, "ivy.array.array_methods.asinh"], [472, "ivy.array.array_methods.asinh"]], "asinh() (in module ivy.container.container_methods)": [[471, "ivy.container.container_methods.asinh"], [473, "ivy.container.container_methods.asinh"]], "static_asinh() (in module ivy.container.container_methods)": [[471, "ivy.container.container_methods.static_asinh"], [475, "ivy.container.container_methods.static_asinh"]], "atan() (in module ivy.array.array_methods)": [[476, "ivy.array.array_methods.atan"], [477, "ivy.array.array_methods.atan"]], "atan() (in module ivy.container.container_methods)": [[476, "ivy.container.container_methods.atan"], [478, "ivy.container.container_methods.atan"]], "static_atan() (in module ivy.container.container_methods)": [[476, "ivy.container.container_methods.static_atan"], [480, "ivy.container.container_methods.static_atan"]], "atan2() (in module ivy.array.array_methods)": [[481, "ivy.array.array_methods.atan2"], [482, "ivy.array.array_methods.atan2"]], "atan2() (in module ivy.container.container_methods)": [[481, "ivy.container.container_methods.atan2"], [483, "ivy.container.container_methods.atan2"]], "static_atan2() (in module ivy.container.container_methods)": [[481, "ivy.container.container_methods.static_atan2"], [485, "ivy.container.container_methods.static_atan2"]], "atanh() (in module ivy.array.array_methods)": [[486, "ivy.array.array_methods.atanh"], [487, "ivy.array.array_methods.atanh"]], "atanh() (in module ivy.container.container_methods)": [[486, "ivy.container.container_methods.atanh"], [488, "ivy.container.container_methods.atanh"]], "static_atanh() (in module ivy.container.container_methods)": [[486, "ivy.container.container_methods.static_atanh"], [490, "ivy.container.container_methods.static_atanh"]], "bitwise_and() (in module ivy.array.array_methods)": [[491, "ivy.array.array_methods.bitwise_and"], [492, "ivy.array.array_methods.bitwise_and"]], "bitwise_and() (in module ivy.container.container_methods)": [[491, "ivy.container.container_methods.bitwise_and"], [493, "ivy.container.container_methods.bitwise_and"]], "static_bitwise_and() (in module ivy.container.container_methods)": [[491, "ivy.container.container_methods.static_bitwise_and"], [495, "ivy.container.container_methods.static_bitwise_and"]], "bitwise_invert() (in module ivy.array.array_methods)": [[496, "ivy.array.array_methods.bitwise_invert"], [497, "ivy.array.array_methods.bitwise_invert"]], "bitwise_invert() (in module ivy.container.container_methods)": [[496, "ivy.container.container_methods.bitwise_invert"], [498, "ivy.container.container_methods.bitwise_invert"]], "static_bitwise_invert() (in module ivy.container.container_methods)": [[496, "ivy.container.container_methods.static_bitwise_invert"], [500, "ivy.container.container_methods.static_bitwise_invert"]], "bitwise_left_shift() (in module ivy.array.array_methods)": [[501, "ivy.array.array_methods.bitwise_left_shift"], [502, "ivy.array.array_methods.bitwise_left_shift"]], "bitwise_left_shift() (in module ivy.container.container_methods)": [[501, "ivy.container.container_methods.bitwise_left_shift"], [503, "ivy.container.container_methods.bitwise_left_shift"]], "static_bitwise_left_shift() (in module ivy.container.container_methods)": [[501, "ivy.container.container_methods.static_bitwise_left_shift"], [505, "ivy.container.container_methods.static_bitwise_left_shift"]], "bitwise_or() (in module ivy.array.array_methods)": [[506, "ivy.array.array_methods.bitwise_or"], [507, "ivy.array.array_methods.bitwise_or"]], "bitwise_or() (in module ivy.container.container_methods)": [[506, "ivy.container.container_methods.bitwise_or"], [508, "ivy.container.container_methods.bitwise_or"]], "static_bitwise_or() (in module ivy.container.container_methods)": [[506, "ivy.container.container_methods.static_bitwise_or"], [510, "ivy.container.container_methods.static_bitwise_or"]], "bitwise_right_shift() (in module ivy.array.array_methods)": [[511, "ivy.array.array_methods.bitwise_right_shift"], [512, "ivy.array.array_methods.bitwise_right_shift"]], "bitwise_right_shift() (in module ivy.container.container_methods)": [[511, "ivy.container.container_methods.bitwise_right_shift"], [513, "ivy.container.container_methods.bitwise_right_shift"]], "static_bitwise_right_shift() (in module ivy.container.container_methods)": [[511, "ivy.container.container_methods.static_bitwise_right_shift"], [515, "ivy.container.container_methods.static_bitwise_right_shift"]], "bitwise_xor() (in module ivy.array.array_methods)": [[516, "ivy.array.array_methods.bitwise_xor"], [517, "ivy.array.array_methods.bitwise_xor"]], "bitwise_xor() (in module ivy.container.container_methods)": [[516, "ivy.container.container_methods.bitwise_xor"], [518, "ivy.container.container_methods.bitwise_xor"]], "static_bitwise_xor() (in module ivy.container.container_methods)": [[516, "ivy.container.container_methods.static_bitwise_xor"], [520, "ivy.container.container_methods.static_bitwise_xor"]], "ceil() (in module ivy.array.array_methods)": [[521, "ivy.array.array_methods.ceil"], [522, "ivy.array.array_methods.ceil"]], "ceil() (in module ivy.container.container_methods)": [[521, "ivy.container.container_methods.ceil"], [523, "ivy.container.container_methods.ceil"]], "static_ceil() (in module ivy.container.container_methods)": [[521, "ivy.container.container_methods.static_ceil"], [525, "ivy.container.container_methods.static_ceil"]], "cos() (in module ivy.array.array_methods)": [[526, "ivy.array.array_methods.cos"], [527, "ivy.array.array_methods.cos"]], "cos() (in module ivy.container.container_methods)": [[526, "ivy.container.container_methods.cos"], [528, "ivy.container.container_methods.cos"]], "static_cos() (in module ivy.container.container_methods)": [[526, "ivy.container.container_methods.static_cos"], [530, "ivy.container.container_methods.static_cos"]], "cosh() (in module ivy.array.array_methods)": [[531, "ivy.array.array_methods.cosh"], [532, "ivy.array.array_methods.cosh"]], "cosh() (in module ivy.container.container_methods)": [[531, "ivy.container.container_methods.cosh"], [533, "ivy.container.container_methods.cosh"]], "static_cosh() (in module ivy.container.container_methods)": [[531, "ivy.container.container_methods.static_cosh"], [535, "ivy.container.container_methods.static_cosh"]], "deg2rad() (in module ivy.array.array_methods)": [[536, "ivy.array.array_methods.deg2rad"], [537, "ivy.array.array_methods.deg2rad"]], "deg2rad() (in module ivy.container.container_methods)": [[536, "ivy.container.container_methods.deg2rad"], [538, "ivy.container.container_methods.deg2rad"]], "static_deg2rad() (in module ivy.container.container_methods)": [[536, "ivy.container.container_methods.static_deg2rad"], [540, "ivy.container.container_methods.static_deg2rad"]], "divide() (in module ivy.array.array_methods)": [[541, "ivy.array.array_methods.divide"], [542, "ivy.array.array_methods.divide"]], "divide() (in module ivy.container.container_methods)": [[541, "ivy.container.container_methods.divide"], [543, "ivy.container.container_methods.divide"]], "static_divide() (in module ivy.container.container_methods)": [[541, "ivy.container.container_methods.static_divide"], [545, "ivy.container.container_methods.static_divide"]], "equal() (in module ivy.array.array_methods)": [[546, "ivy.array.array_methods.equal"], [547, "ivy.array.array_methods.equal"]], "equal() (in module ivy.container.container_methods)": [[546, "ivy.container.container_methods.equal"], [548, "ivy.container.container_methods.equal"]], "static_equal() (in module ivy.container.container_methods)": [[546, "ivy.container.container_methods.static_equal"], [550, "ivy.container.container_methods.static_equal"]], "erf() (in module ivy.array.array_methods)": [[551, "ivy.array.array_methods.erf"], [552, "ivy.array.array_methods.erf"]], "erf() (in module ivy.container.container_methods)": [[551, "ivy.container.container_methods.erf"], [553, "ivy.container.container_methods.erf"]], "static_erf() (in module ivy.container.container_methods)": [[551, "ivy.container.container_methods.static_erf"], [555, "ivy.container.container_methods.static_erf"]], "exp() (in module ivy.array.array_methods)": [[556, "ivy.array.array_methods.exp"], [557, "ivy.array.array_methods.exp"]], "exp() (in module ivy.container.container_methods)": [[556, "ivy.container.container_methods.exp"], [558, "ivy.container.container_methods.exp"]], "static_exp() (in module ivy.container.container_methods)": [[556, "ivy.container.container_methods.static_exp"], [560, "ivy.container.container_methods.static_exp"]], "expm1() (in module ivy.array.array_methods)": [[561, "ivy.array.array_methods.expm1"], [562, "ivy.array.array_methods.expm1"]], "expm1() (in module ivy.container.container_methods)": [[561, "ivy.container.container_methods.expm1"], [563, "ivy.container.container_methods.expm1"]], "static_expm1() (in module ivy.container.container_methods)": [[561, "ivy.container.container_methods.static_expm1"], [565, "ivy.container.container_methods.static_expm1"]], "floor() (in module ivy.array.array_methods)": [[566, "ivy.array.array_methods.floor"], [567, "ivy.array.array_methods.floor"]], "floor() (in module ivy.container.container_methods)": [[566, "ivy.container.container_methods.floor"], [568, "ivy.container.container_methods.floor"]], "static_floor() (in module ivy.container.container_methods)": [[566, "ivy.container.container_methods.static_floor"], [570, "ivy.container.container_methods.static_floor"]], "floor_divide() (in module ivy.array.array_methods)": [[571, "ivy.array.array_methods.floor_divide"], [572, "ivy.array.array_methods.floor_divide"]], "floor_divide() (in module ivy.container.container_methods)": [[571, "ivy.container.container_methods.floor_divide"], [573, "ivy.container.container_methods.floor_divide"]], "static_floor_divide() (in module ivy.container.container_methods)": [[571, "ivy.container.container_methods.static_floor_divide"], [575, "ivy.container.container_methods.static_floor_divide"]], "greater() (in module ivy.array.array_methods)": [[576, "ivy.array.array_methods.greater"], [577, "ivy.array.array_methods.greater"]], "greater() (in module ivy.container.container_methods)": [[576, "ivy.container.container_methods.greater"], [578, "ivy.container.container_methods.greater"]], "static_greater() (in module ivy.container.container_methods)": [[576, "ivy.container.container_methods.static_greater"], [580, "ivy.container.container_methods.static_greater"]], "greater_equal() (in module ivy.array.array_methods)": [[581, "ivy.array.array_methods.greater_equal"], [582, "ivy.array.array_methods.greater_equal"]], "greater_equal() (in module ivy.container.container_methods)": [[581, "ivy.container.container_methods.greater_equal"], [583, "ivy.container.container_methods.greater_equal"]], "static_greater_equal() (in module ivy.container.container_methods)": [[581, "ivy.container.container_methods.static_greater_equal"], [585, "ivy.container.container_methods.static_greater_equal"]], "isfinite() (in module ivy.array.array_methods)": [[586, "ivy.array.array_methods.isfinite"], [587, "ivy.array.array_methods.isfinite"]], "isfinite() (in module ivy.container.container_methods)": [[586, "ivy.container.container_methods.isfinite"], [588, "ivy.container.container_methods.isfinite"]], "static_isfinite() (in module ivy.container.container_methods)": [[586, "ivy.container.container_methods.static_isfinite"], [590, "ivy.container.container_methods.static_isfinite"]], "isinf() (in module ivy.array.array_methods)": [[591, "ivy.array.array_methods.isinf"], [592, "ivy.array.array_methods.isinf"]], "isinf() (in module ivy.container.container_methods)": [[591, "ivy.container.container_methods.isinf"], [593, "ivy.container.container_methods.isinf"]], "static_isinf() (in module ivy.container.container_methods)": [[591, "ivy.container.container_methods.static_isinf"], [595, "ivy.container.container_methods.static_isinf"]], "isnan() (in module ivy.array.array_methods)": [[596, "ivy.array.array_methods.isnan"], [597, "ivy.array.array_methods.isnan"]], "isnan() (in module ivy.container.container_methods)": [[596, "ivy.container.container_methods.isnan"], [598, "ivy.container.container_methods.isnan"]], "static_isnan() (in module ivy.container.container_methods)": [[596, "ivy.container.container_methods.static_isnan"], [600, "ivy.container.container_methods.static_isnan"]], "isreal() (in module ivy.array.array_methods)": [[601, "ivy.array.array_methods.isreal"], [602, "ivy.array.array_methods.isreal"]], "isreal() (in module ivy.container.container_methods)": [[601, "ivy.container.container_methods.isreal"], [603, "ivy.container.container_methods.isreal"]], "static_isreal() (in module ivy.container.container_methods)": [[601, "ivy.container.container_methods.static_isreal"], [605, "ivy.container.container_methods.static_isreal"]], "less() (in module ivy.array.array_methods)": [[606, "ivy.array.array_methods.less"], [607, "ivy.array.array_methods.less"]], "less() (in module ivy.container.container_methods)": [[606, "ivy.container.container_methods.less"], [608, "ivy.container.container_methods.less"]], "static_less() (in module ivy.container.container_methods)": [[606, "ivy.container.container_methods.static_less"], [610, "ivy.container.container_methods.static_less"]], "less_equal() (in module ivy.array.array_methods)": [[611, "ivy.array.array_methods.less_equal"], [612, "ivy.array.array_methods.less_equal"]], "less_equal() (in module ivy.container.container_methods)": [[611, "ivy.container.container_methods.less_equal"], [613, "ivy.container.container_methods.less_equal"]], "static_less_equal() (in module ivy.container.container_methods)": [[611, "ivy.container.container_methods.static_less_equal"], [615, "ivy.container.container_methods.static_less_equal"]], "log() (in module ivy.array.array_methods)": [[616, "ivy.array.array_methods.log"], [617, "ivy.array.array_methods.log"]], "log() (in module ivy.container.container_methods)": [[616, "ivy.container.container_methods.log"], [618, "ivy.container.container_methods.log"]], "static_log() (in module ivy.container.container_methods)": [[616, "ivy.container.container_methods.static_log"], [620, "ivy.container.container_methods.static_log"]], "log10() (in module ivy.array.array_methods)": [[621, "ivy.array.array_methods.log10"], [622, "ivy.array.array_methods.log10"]], "log10() (in module ivy.container.container_methods)": [[621, "ivy.container.container_methods.log10"], [623, "ivy.container.container_methods.log10"]], "static_log10() (in module ivy.container.container_methods)": [[621, "ivy.container.container_methods.static_log10"], [625, "ivy.container.container_methods.static_log10"]], "log1p() (in module ivy.array.array_methods)": [[626, "ivy.array.array_methods.log1p"], [627, "ivy.array.array_methods.log1p"]], "log1p() (in module ivy.container.container_methods)": [[626, "ivy.container.container_methods.log1p"], [628, "ivy.container.container_methods.log1p"]], "static_log1p() (in module ivy.container.container_methods)": [[626, "ivy.container.container_methods.static_log1p"], [630, "ivy.container.container_methods.static_log1p"]], "log2() (in module ivy.array.array_methods)": [[631, "ivy.array.array_methods.log2"], [632, "ivy.array.array_methods.log2"]], "log2() (in module ivy.container.container_methods)": [[631, "ivy.container.container_methods.log2"], [633, "ivy.container.container_methods.log2"]], "static_log2() (in module ivy.container.container_methods)": [[631, "ivy.container.container_methods.static_log2"], [635, "ivy.container.container_methods.static_log2"]], "logaddexp() (in module ivy.array.array_methods)": [[636, "ivy.array.array_methods.logaddexp"], [637, "ivy.array.array_methods.logaddexp"]], "logaddexp() (in module ivy.container.container_methods)": [[636, "ivy.container.container_methods.logaddexp"], [638, "ivy.container.container_methods.logaddexp"]], "static_logaddexp() (in module ivy.container.container_methods)": [[636, "ivy.container.container_methods.static_logaddexp"], [640, "ivy.container.container_methods.static_logaddexp"]], "logical_and() (in module ivy.array.array_methods)": [[641, "ivy.array.array_methods.logical_and"], [642, "ivy.array.array_methods.logical_and"]], "logical_and() (in module ivy.container.container_methods)": [[641, "ivy.container.container_methods.logical_and"], [643, "ivy.container.container_methods.logical_and"]], "static_logical_and() (in module ivy.container.container_methods)": [[641, "ivy.container.container_methods.static_logical_and"], [645, "ivy.container.container_methods.static_logical_and"]], "logical_not() (in module ivy.array.array_methods)": [[646, "ivy.array.array_methods.logical_not"], [647, "ivy.array.array_methods.logical_not"]], "logical_not() (in module ivy.container.container_methods)": [[646, "ivy.container.container_methods.logical_not"], [648, "ivy.container.container_methods.logical_not"]], "static_logical_not() (in module ivy.container.container_methods)": [[646, "ivy.container.container_methods.static_logical_not"], [650, "ivy.container.container_methods.static_logical_not"]], "logical_or() (in module ivy.array.array_methods)": [[651, "ivy.array.array_methods.logical_or"], [652, "ivy.array.array_methods.logical_or"]], "logical_or() (in module ivy.container.container_methods)": [[651, "ivy.container.container_methods.logical_or"], [653, "ivy.container.container_methods.logical_or"]], "static_logical_or() (in module ivy.container.container_methods)": [[651, "ivy.container.container_methods.static_logical_or"], [655, "ivy.container.container_methods.static_logical_or"]], "logical_xor() (in module ivy.array.array_methods)": [[656, "ivy.array.array_methods.logical_xor"], [657, "ivy.array.array_methods.logical_xor"]], "logical_xor() (in module ivy.container.container_methods)": [[656, "ivy.container.container_methods.logical_xor"], [658, "ivy.container.container_methods.logical_xor"]], "static_logical_xor() (in module ivy.container.container_methods)": [[656, "ivy.container.container_methods.static_logical_xor"], [660, "ivy.container.container_methods.static_logical_xor"]], "maximum() (in module ivy.array.array_methods)": [[661, "ivy.array.array_methods.maximum"], [662, "ivy.array.array_methods.maximum"]], "maximum() (in module ivy.container.container_methods)": [[661, "ivy.container.container_methods.maximum"], [663, "ivy.container.container_methods.maximum"]], "static_maximum() (in module ivy.container.container_methods)": [[661, "ivy.container.container_methods.static_maximum"], [665, "ivy.container.container_methods.static_maximum"]], "minimum() (in module ivy.array.array_methods)": [[666, "ivy.array.array_methods.minimum"], [667, "ivy.array.array_methods.minimum"]], "minimum() (in module ivy.container.container_methods)": [[666, "ivy.container.container_methods.minimum"], [668, "ivy.container.container_methods.minimum"]], "static_minimum() (in module ivy.container.container_methods)": [[666, "ivy.container.container_methods.static_minimum"], [670, "ivy.container.container_methods.static_minimum"]], "multiply() (in module ivy.array.array_methods)": [[671, "ivy.array.array_methods.multiply"], [672, "ivy.array.array_methods.multiply"]], "multiply() (in module ivy.container.container_methods)": [[671, "ivy.container.container_methods.multiply"], [673, "ivy.container.container_methods.multiply"]], "static_multiply() (in module ivy.container.container_methods)": [[671, "ivy.container.container_methods.static_multiply"], [675, "ivy.container.container_methods.static_multiply"]], "negative() (in module ivy.array.array_methods)": [[676, "ivy.array.array_methods.negative"], [677, "ivy.array.array_methods.negative"]], "negative() (in module ivy.container.container_methods)": [[676, "ivy.container.container_methods.negative"], [678, "ivy.container.container_methods.negative"]], "static_negative() (in module ivy.container.container_methods)": [[676, "ivy.container.container_methods.static_negative"], [680, "ivy.container.container_methods.static_negative"]], "not_equal() (in module ivy.array.array_methods)": [[681, "ivy.array.array_methods.not_equal"], [682, "ivy.array.array_methods.not_equal"]], "not_equal() (in module ivy.container.container_methods)": [[681, "ivy.container.container_methods.not_equal"], [683, "ivy.container.container_methods.not_equal"]], "static_not_equal() (in module ivy.container.container_methods)": [[681, "ivy.container.container_methods.static_not_equal"], [685, "ivy.container.container_methods.static_not_equal"]], "positive() (in module ivy.array.array_methods)": [[686, "ivy.array.array_methods.positive"], [687, "ivy.array.array_methods.positive"]], "positive() (in module ivy.container.container_methods)": [[686, "ivy.container.container_methods.positive"], [688, "ivy.container.container_methods.positive"]], "static_positive() (in module ivy.container.container_methods)": [[686, "ivy.container.container_methods.static_positive"], [690, "ivy.container.container_methods.static_positive"]], "pow() (in module ivy.array.array_methods)": [[691, "ivy.array.array_methods.pow"], [692, "ivy.array.array_methods.pow"]], "pow() (in module ivy.container.container_methods)": [[691, "ivy.container.container_methods.pow"], [693, "ivy.container.container_methods.pow"]], "static_pow() (in module ivy.container.container_methods)": [[691, "ivy.container.container_methods.static_pow"], [695, "ivy.container.container_methods.static_pow"]], "rad2deg() (in module ivy.array.array_methods)": [[696, "ivy.array.array_methods.rad2deg"], [697, "ivy.array.array_methods.rad2deg"]], "rad2deg() (in module ivy.container.container_methods)": [[696, "ivy.container.container_methods.rad2deg"], [698, "ivy.container.container_methods.rad2deg"]], "static_rad2deg() (in module ivy.container.container_methods)": [[696, "ivy.container.container_methods.static_rad2deg"], [700, "ivy.container.container_methods.static_rad2deg"]], "reciprocal() (in module ivy.array.array_methods)": [[701, "ivy.array.array_methods.reciprocal"], [702, "ivy.array.array_methods.reciprocal"]], "reciprocal() (in module ivy.container.container_methods)": [[701, "ivy.container.container_methods.reciprocal"], [703, "ivy.container.container_methods.reciprocal"]], "static_reciprocal() (in module ivy.container.container_methods)": [[701, "ivy.container.container_methods.static_reciprocal"], [705, "ivy.container.container_methods.static_reciprocal"]], "remainder() (in module ivy.array.array_methods)": [[706, "ivy.array.array_methods.remainder"], [707, "ivy.array.array_methods.remainder"]], "remainder() (in module ivy.container.container_methods)": [[706, "ivy.container.container_methods.remainder"], [708, "ivy.container.container_methods.remainder"]], "static_remainder() (in module ivy.container.container_methods)": [[706, "ivy.container.container_methods.static_remainder"], [710, "ivy.container.container_methods.static_remainder"]], "round() (in module ivy.array.array_methods)": [[711, "ivy.array.array_methods.round"], [712, "ivy.array.array_methods.round"]], "round() (in module ivy.container.container_methods)": [[711, "ivy.container.container_methods.round"], [713, "ivy.container.container_methods.round"]], "static_round() (in module ivy.container.container_methods)": [[711, "ivy.container.container_methods.static_round"], [715, "ivy.container.container_methods.static_round"]], "sign() (in module ivy.array.array_methods)": [[716, "ivy.array.array_methods.sign"], [717, "ivy.array.array_methods.sign"]], "sign() (in module ivy.container.container_methods)": [[716, "ivy.container.container_methods.sign"], [718, "ivy.container.container_methods.sign"]], "static_sign() (in module ivy.container.container_methods)": [[716, "ivy.container.container_methods.static_sign"], [720, "ivy.container.container_methods.static_sign"]], "sin() (in module ivy.array.array_methods)": [[721, "ivy.array.array_methods.sin"], [722, "ivy.array.array_methods.sin"]], "sin() (in module ivy.container.container_methods)": [[721, "ivy.container.container_methods.sin"], [723, "ivy.container.container_methods.sin"]], "static_sin() (in module ivy.container.container_methods)": [[721, "ivy.container.container_methods.static_sin"], [725, "ivy.container.container_methods.static_sin"]], "sinh() (in module ivy.array.array_methods)": [[726, "ivy.array.array_methods.sinh"], [727, "ivy.array.array_methods.sinh"]], "sinh() (in module ivy.container.container_methods)": [[726, "ivy.container.container_methods.sinh"], [728, "ivy.container.container_methods.sinh"]], "static_sinh() (in module ivy.container.container_methods)": [[726, "ivy.container.container_methods.static_sinh"], [730, "ivy.container.container_methods.static_sinh"]], "sqrt() (in module ivy.array.array_methods)": [[731, "ivy.array.array_methods.sqrt"], [732, "ivy.array.array_methods.sqrt"]], "sqrt() (in module ivy.container.container_methods)": [[731, "ivy.container.container_methods.sqrt"], [733, "ivy.container.container_methods.sqrt"]], "static_sqrt() (in module ivy.container.container_methods)": [[731, "ivy.container.container_methods.static_sqrt"], [735, "ivy.container.container_methods.static_sqrt"]], "square() (in module ivy.array.array_methods)": [[736, "ivy.array.array_methods.square"], [737, "ivy.array.array_methods.square"]], "square() (in module ivy.container.container_methods)": [[736, "ivy.container.container_methods.square"], [738, "ivy.container.container_methods.square"]], "static_square() (in module ivy.container.container_methods)": [[736, "ivy.container.container_methods.static_square"], [740, "ivy.container.container_methods.static_square"]], "static_subtract() (in module ivy.container.container_methods)": [[741, "ivy.container.container_methods.static_subtract"], [742, "ivy.container.container_methods.static_subtract"]], "subtract() (in module ivy.array.array_methods)": [[741, "ivy.array.array_methods.subtract"], [743, "ivy.array.array_methods.subtract"]], "subtract() (in module ivy.container.container_methods)": [[741, "ivy.container.container_methods.subtract"], [744, "ivy.container.container_methods.subtract"]], "static_tan() (in module ivy.container.container_methods)": [[746, "ivy.container.container_methods.static_tan"], [747, "ivy.container.container_methods.static_tan"]], "tan() (in module ivy.array.array_methods)": [[746, "ivy.array.array_methods.tan"], [748, "ivy.array.array_methods.tan"]], "tan() (in module ivy.container.container_methods)": [[746, "ivy.container.container_methods.tan"], [749, "ivy.container.container_methods.tan"]], "static_tanh() (in module ivy.container.container_methods)": [[751, "ivy.container.container_methods.static_tanh"], [752, "ivy.container.container_methods.static_tanh"]], "tanh() (in module ivy.array.array_methods)": [[751, "ivy.array.array_methods.tanh"], [753, "ivy.array.array_methods.tanh"]], "tanh() (in module ivy.container.container_methods)": [[751, "ivy.container.container_methods.tanh"], [754, "ivy.container.container_methods.tanh"]], "static_trunc() (in module ivy.container.container_methods)": [[756, "ivy.container.container_methods.static_trunc"], [757, "ivy.container.container_methods.static_trunc"]], "trunc() (in module ivy.array.array_methods)": [[756, "ivy.array.array_methods.trunc"], [758, "ivy.array.array_methods.trunc"]], "trunc() (in module ivy.container.container_methods)": [[756, "ivy.container.container_methods.trunc"], [759, "ivy.container.container_methods.trunc"]], "static_trunc_divide() (in module ivy.container.container_methods)": [[761, "ivy.container.container_methods.static_trunc_divide"], [762, "ivy.container.container_methods.static_trunc_divide"]], "trunc_divide() (in module ivy.array.array_methods)": [[761, "ivy.array.array_methods.trunc_divide"], [763, "ivy.array.array_methods.trunc_divide"]], "trunc_divide() (in module ivy.container.container_methods)": [[761, "ivy.container.container_methods.trunc_divide"], [764, "ivy.container.container_methods.trunc_divide"]], "ivy.functional.ivy.experimental": [[766, "module-ivy.functional.ivy.experimental"]], "nativesparsearray (class in ivy.functional.ivy.experimental)": [[767, "ivy.functional.ivy.experimental.NativeSparseArray"]], "sparsearray (class in ivy.functional.ivy.experimental)": [[768, "ivy.functional.ivy.experimental.SparseArray"]], "__init__() (ivy.functional.ivy.experimental.sparsearray method)": [[768, "ivy.functional.ivy.experimental.SparseArray.__init__"]], "ccol_indices (ivy.functional.ivy.experimental.sparsearray property)": [[768, "ivy.functional.ivy.experimental.SparseArray.ccol_indices"]], "col_indices (ivy.functional.ivy.experimental.sparsearray property)": [[768, "ivy.functional.ivy.experimental.SparseArray.col_indices"]], "coo_indices (ivy.functional.ivy.experimental.sparsearray property)": [[768, "ivy.functional.ivy.experimental.SparseArray.coo_indices"]], "crow_indices (ivy.functional.ivy.experimental.sparsearray property)": [[768, "ivy.functional.ivy.experimental.SparseArray.crow_indices"]], "data (ivy.functional.ivy.experimental.sparsearray property)": [[768, "ivy.functional.ivy.experimental.SparseArray.data"]], "dense_shape (ivy.functional.ivy.experimental.sparsearray property)": [[768, "ivy.functional.ivy.experimental.SparseArray.dense_shape"]], "row_indices (ivy.functional.ivy.experimental.sparsearray property)": [[768, "ivy.functional.ivy.experimental.SparseArray.row_indices"]], "to_dense_array() (ivy.functional.ivy.experimental.sparsearray method)": [[768, "ivy.functional.ivy.experimental.SparseArray.to_dense_array"]], "values (ivy.functional.ivy.experimental.sparsearray property)": [[768, "ivy.functional.ivy.experimental.SparseArray.values"]], "ivy.functional.ivy.experimental.activations": [[769, "module-ivy.functional.ivy.experimental.activations"]], "logit() (in module ivy.functional.ivy.experimental.activations)": [[769, "ivy.functional.ivy.experimental.activations.logit"], [770, "ivy.functional.ivy.experimental.activations.logit"]], "prelu() (in module ivy.functional.ivy.experimental.activations)": [[769, "ivy.functional.ivy.experimental.activations.prelu"], [771, "ivy.functional.ivy.experimental.activations.prelu"]], "relu6() (in module ivy.functional.ivy.experimental.activations)": [[769, "ivy.functional.ivy.experimental.activations.relu6"], [772, "ivy.functional.ivy.experimental.activations.relu6"]], "thresholded_relu() (in module ivy.functional.ivy.experimental.activations)": [[769, "ivy.functional.ivy.experimental.activations.thresholded_relu"], [773, "ivy.functional.ivy.experimental.activations.thresholded_relu"]], "adjoint() (in module ivy.array.array_methods)": [[774, "ivy.array.array_methods.adjoint"], [775, "ivy.array.array_methods.adjoint"]], "adjoint() (in module ivy.container.container_methods)": [[774, "ivy.container.container_methods.adjoint"], [776, "ivy.container.container_methods.adjoint"]], "adjoint() (in module ivy.functional.ivy.experimental)": [[774, "ivy.functional.ivy.experimental.adjoint"], [777, "ivy.functional.ivy.experimental.adjoint"]], "static_adjoint() (in module ivy.container.container_methods)": [[774, "ivy.container.container_methods.static_adjoint"], [778, "ivy.container.container_methods.static_adjoint"]], "allclose() (in module ivy.array.array_methods)": [[779, "ivy.array.array_methods.allclose"], [780, "ivy.array.array_methods.allclose"]], "allclose() (in module ivy.container.container_methods)": [[779, "ivy.container.container_methods.allclose"], [781, "ivy.container.container_methods.allclose"]], "allclose() (in module ivy.functional.ivy.experimental)": [[779, "ivy.functional.ivy.experimental.allclose"], [782, "ivy.functional.ivy.experimental.allclose"]], "static_allclose() (in module ivy.container.container_methods)": [[779, "ivy.container.container_methods.static_allclose"], [783, "ivy.container.container_methods.static_allclose"]], "angle() (in module ivy.array.array_methods)": [[784, "ivy.array.array_methods.angle"], [785, "ivy.array.array_methods.angle"]], "angle() (in module ivy.container.container_methods)": [[784, "ivy.container.container_methods.angle"], [786, "ivy.container.container_methods.angle"]], "angle() (in module ivy.functional.ivy.experimental)": [[784, "ivy.functional.ivy.experimental.angle"], [787, "ivy.functional.ivy.experimental.angle"]], "static_angle() (in module ivy.container.container_methods)": [[784, "ivy.container.container_methods.static_angle"], [788, "ivy.container.container_methods.static_angle"]], "atleast_1d() (in module ivy.array.array_methods)": [[789, "ivy.array.array_methods.atleast_1d"], [790, "ivy.array.array_methods.atleast_1d"]], "atleast_1d() (in module ivy.container.container_methods)": [[789, "ivy.container.container_methods.atleast_1d"], [791, "ivy.container.container_methods.atleast_1d"]], "atleast_1d() (in module ivy.functional.ivy.experimental)": [[789, "ivy.functional.ivy.experimental.atleast_1d"], [792, "ivy.functional.ivy.experimental.atleast_1d"]], "static_atleast_1d() (in module ivy.container.container_methods)": [[789, "ivy.container.container_methods.static_atleast_1d"], [793, "ivy.container.container_methods.static_atleast_1d"]], "atleast_2d() (in module ivy.array.array_methods)": [[794, "ivy.array.array_methods.atleast_2d"], [795, "ivy.array.array_methods.atleast_2d"]], "atleast_2d() (in module ivy.container.container_methods)": [[794, "ivy.container.container_methods.atleast_2d"], [796, "ivy.container.container_methods.atleast_2d"]], "atleast_2d() (in module ivy.functional.ivy.experimental)": [[794, "ivy.functional.ivy.experimental.atleast_2d"], [797, "ivy.functional.ivy.experimental.atleast_2d"]], "static_atleast_2d() (in module ivy.container.container_methods)": [[794, "ivy.container.container_methods.static_atleast_2d"], [798, "ivy.container.container_methods.static_atleast_2d"]], "atleast_3d() (in module ivy.array.array_methods)": [[799, "ivy.array.array_methods.atleast_3d"], [800, "ivy.array.array_methods.atleast_3d"]], "atleast_3d() (in module ivy.container.container_methods)": [[799, "ivy.container.container_methods.atleast_3d"], [801, "ivy.container.container_methods.atleast_3d"]], "atleast_3d() (in module ivy.functional.ivy.experimental)": [[799, "ivy.functional.ivy.experimental.atleast_3d"], [802, "ivy.functional.ivy.experimental.atleast_3d"]], "static_atleast_3d() (in module ivy.container.container_methods)": [[799, "ivy.container.container_methods.static_atleast_3d"], [803, "ivy.container.container_methods.static_atleast_3d"]], "avg_pool1d() (in module ivy.array.array_methods)": [[804, "ivy.array.array_methods.avg_pool1d"], [805, "ivy.array.array_methods.avg_pool1d"]], "avg_pool1d() (in module ivy.container.container_methods)": [[804, "ivy.container.container_methods.avg_pool1d"], [806, "ivy.container.container_methods.avg_pool1d"]], "avg_pool1d() (in module ivy.functional.ivy.experimental)": [[804, "ivy.functional.ivy.experimental.avg_pool1d"], [807, "ivy.functional.ivy.experimental.avg_pool1d"]], "static_avg_pool1d() (in module ivy.container.container_methods)": [[804, "ivy.container.container_methods.static_avg_pool1d"], [808, "ivy.container.container_methods.static_avg_pool1d"]], "avg_pool2d() (in module ivy.array.array_methods)": [[809, "ivy.array.array_methods.avg_pool2d"], [810, "ivy.array.array_methods.avg_pool2d"]], "avg_pool2d() (in module ivy.container.container_methods)": [[809, "ivy.container.container_methods.avg_pool2d"], [811, "ivy.container.container_methods.avg_pool2d"]], "avg_pool2d() (in module ivy.functional.ivy.experimental)": [[809, "ivy.functional.ivy.experimental.avg_pool2d"], [812, "ivy.functional.ivy.experimental.avg_pool2d"]], "static_avg_pool2d() (in module ivy.container.container_methods)": [[809, "ivy.container.container_methods.static_avg_pool2d"], [813, "ivy.container.container_methods.static_avg_pool2d"]], "avg_pool3d() (in module ivy.array.array_methods)": [[814, "ivy.array.array_methods.avg_pool3d"], [815, "ivy.array.array_methods.avg_pool3d"]], "avg_pool3d() (in module ivy.container.container_methods)": [[814, "ivy.container.container_methods.avg_pool3d"], [816, "ivy.container.container_methods.avg_pool3d"]], "avg_pool3d() (in module ivy.functional.ivy.experimental)": [[814, "ivy.functional.ivy.experimental.avg_pool3d"], [817, "ivy.functional.ivy.experimental.avg_pool3d"]], "static_avg_pool3d() (in module ivy.container.container_methods)": [[814, "ivy.container.container_methods.static_avg_pool3d"], [818, "ivy.container.container_methods.static_avg_pool3d"]], "bernoulli() (in module ivy.array.array_methods)": [[819, "ivy.array.array_methods.bernoulli"], [820, "ivy.array.array_methods.bernoulli"]], "bernoulli() (in module ivy.container.container_methods)": [[819, "ivy.container.container_methods.bernoulli"], [821, "ivy.container.container_methods.bernoulli"]], "bernoulli() (in module ivy.functional.ivy.experimental)": [[819, "ivy.functional.ivy.experimental.bernoulli"], [822, "ivy.functional.ivy.experimental.bernoulli"]], "static_bernoulli() (in module ivy.container.container_methods)": [[819, "ivy.container.container_methods.static_bernoulli"], [823, "ivy.container.container_methods.static_bernoulli"]], "beta() (in module ivy.array.array_methods)": [[824, "ivy.array.array_methods.beta"], [825, "ivy.array.array_methods.beta"]], "beta() (in module ivy.container.container_methods)": [[824, "ivy.container.container_methods.beta"], [826, "ivy.container.container_methods.beta"]], "beta() (in module ivy.functional.ivy.experimental)": [[824, "ivy.functional.ivy.experimental.beta"], [827, "ivy.functional.ivy.experimental.beta"]], "static_beta() (in module ivy.container.container_methods)": [[824, "ivy.container.container_methods.static_beta"], [828, "ivy.container.container_methods.static_beta"]], "binarizer() (in module ivy.array.array_methods)": [[829, "ivy.array.array_methods.binarizer"], [830, "ivy.array.array_methods.binarizer"]], "binarizer() (in module ivy.container.container_methods)": [[829, "ivy.container.container_methods.binarizer"], [831, "ivy.container.container_methods.binarizer"]], "binarizer() (in module ivy.functional.ivy.experimental)": [[829, "ivy.functional.ivy.experimental.binarizer"], [832, "ivy.functional.ivy.experimental.binarizer"]], "static_binarizer() (in module ivy.container.container_methods)": [[829, "ivy.container.container_methods.static_binarizer"], [833, "ivy.container.container_methods.static_binarizer"]], "binary_cross_entropy_with_logits() (in module ivy.container.container_methods)": [[834, "ivy.container.container_methods.binary_cross_entropy_with_logits"], [835, "ivy.container.container_methods.binary_cross_entropy_with_logits"]], "binary_cross_entropy_with_logits() (in module ivy.functional.ivy.experimental)": [[834, "ivy.functional.ivy.experimental.binary_cross_entropy_with_logits"], [836, "ivy.functional.ivy.experimental.binary_cross_entropy_with_logits"]], "static_binary_cross_entropy_with_logits() (in module ivy.container.container_methods)": [[834, "ivy.container.container_methods.static_binary_cross_entropy_with_logits"], [837, "ivy.container.container_methods.static_binary_cross_entropy_with_logits"]], "bincount() (in module ivy.array.array_methods)": [[838, "ivy.array.array_methods.bincount"], [839, "ivy.array.array_methods.bincount"]], "bincount() (in module ivy.container.container_methods)": [[838, "ivy.container.container_methods.bincount"], [840, "ivy.container.container_methods.bincount"]], "bincount() (in module ivy.functional.ivy.experimental)": [[838, "ivy.functional.ivy.experimental.bincount"], [841, "ivy.functional.ivy.experimental.bincount"]], "static_bincount() (in module ivy.container.container_methods)": [[838, "ivy.container.container_methods.static_bincount"], [842, "ivy.container.container_methods.static_bincount"]], "bind_custom_gradient_function() (in module ivy.functional.ivy.experimental)": [[843, "ivy.functional.ivy.experimental.bind_custom_gradient_function"]], "broadcast_shapes() (in module ivy.container.container_methods)": [[844, "ivy.container.container_methods.broadcast_shapes"], [845, "ivy.container.container_methods.broadcast_shapes"]], "broadcast_shapes() (in module ivy.functional.ivy.experimental)": [[844, "ivy.functional.ivy.experimental.broadcast_shapes"], [846, "ivy.functional.ivy.experimental.broadcast_shapes"]], "static_broadcast_shapes() (in module ivy.container.container_methods)": [[844, "ivy.container.container_methods.static_broadcast_shapes"], [847, "ivy.container.container_methods.static_broadcast_shapes"]], "compute_weight_mat() (in module ivy.functional.ivy.experimental)": [[848, "ivy.functional.ivy.experimental.compute_weight_mat"]], "conj() (in module ivy.array.array_methods)": [[849, "ivy.array.array_methods.conj"], [850, "ivy.array.array_methods.conj"]], "conj() (in module ivy.container.container_methods)": [[849, "ivy.container.container_methods.conj"], [851, "ivy.container.container_methods.conj"]], "conj() (in module ivy.functional.ivy.experimental)": [[849, "ivy.functional.ivy.experimental.conj"], [852, "ivy.functional.ivy.experimental.conj"]], "static_conj() (in module ivy.container.container_methods)": [[849, "ivy.container.container_methods.static_conj"], [853, "ivy.container.container_methods.static_conj"]], "ivy.functional.ivy.experimental.constants": [[854, "module-ivy.functional.ivy.experimental.constants"]], "copysign() (in module ivy.array.array_methods)": [[855, "ivy.array.array_methods.copysign"], [856, "ivy.array.array_methods.copysign"]], "copysign() (in module ivy.container.container_methods)": [[855, "ivy.container.container_methods.copysign"], [857, "ivy.container.container_methods.copysign"]], "copysign() (in module ivy.functional.ivy.experimental)": [[855, "ivy.functional.ivy.experimental.copysign"], [858, "ivy.functional.ivy.experimental.copysign"]], "static_copysign() (in module ivy.container.container_methods)": [[855, "ivy.container.container_methods.static_copysign"], [859, "ivy.container.container_methods.static_copysign"]], "corrcoef() (in module ivy.array.array_methods)": [[860, "ivy.array.array_methods.corrcoef"], [861, "ivy.array.array_methods.corrcoef"]], "corrcoef() (in module ivy.container.container_methods)": [[860, "ivy.container.container_methods.corrcoef"], [862, "ivy.container.container_methods.corrcoef"]], "corrcoef() (in module ivy.functional.ivy.experimental)": [[860, "ivy.functional.ivy.experimental.corrcoef"], [863, "ivy.functional.ivy.experimental.corrcoef"]], "static_corrcoef() (in module ivy.container.container_methods)": [[860, "ivy.container.container_methods.static_corrcoef"], [864, "ivy.container.container_methods.static_corrcoef"]], "count_nonzero() (in module ivy.array.array_methods)": [[865, "ivy.array.array_methods.count_nonzero"], [866, "ivy.array.array_methods.count_nonzero"]], "count_nonzero() (in module ivy.container.container_methods)": [[865, "ivy.container.container_methods.count_nonzero"], [867, "ivy.container.container_methods.count_nonzero"]], "count_nonzero() (in module ivy.functional.ivy.experimental)": [[865, "ivy.functional.ivy.experimental.count_nonzero"], [868, "ivy.functional.ivy.experimental.count_nonzero"]], "static_count_nonzero() (in module ivy.container.container_methods)": [[865, "ivy.container.container_methods.static_count_nonzero"], [869, "ivy.container.container_methods.static_count_nonzero"]], "eye_like() (in module ivy.functional.ivy.experimental.creation)": [[870, "ivy.functional.ivy.experimental.creation.eye_like"], [871, "ivy.functional.ivy.experimental.creation.eye_like"]], "hamming_window() (in module ivy.functional.ivy.experimental.creation)": [[870, "ivy.functional.ivy.experimental.creation.hamming_window"], [872, "ivy.functional.ivy.experimental.creation.hamming_window"]], "hann_window() (in module ivy.functional.ivy.experimental.creation)": [[870, "ivy.functional.ivy.experimental.creation.hann_window"], [873, "ivy.functional.ivy.experimental.creation.hann_window"]], "ivy.functional.ivy.experimental.creation": [[870, "module-ivy.functional.ivy.experimental.creation"]], "kaiser_bessel_derived_window() (in module ivy.functional.ivy.experimental.creation)": [[870, "ivy.functional.ivy.experimental.creation.kaiser_bessel_derived_window"], [874, "ivy.functional.ivy.experimental.creation.kaiser_bessel_derived_window"]], "kaiser_window() (in module ivy.functional.ivy.experimental.creation)": [[870, "ivy.functional.ivy.experimental.creation.kaiser_window"], [875, "ivy.functional.ivy.experimental.creation.kaiser_window"]], "tril_indices() (in module ivy.functional.ivy.experimental.creation)": [[870, "ivy.functional.ivy.experimental.creation.tril_indices"], [876, "ivy.functional.ivy.experimental.creation.tril_indices"]], "triu_indices() (in module ivy.functional.ivy.experimental.creation)": [[870, "ivy.functional.ivy.experimental.creation.triu_indices"], [877, "ivy.functional.ivy.experimental.creation.triu_indices"]], "vorbis_window() (in module ivy.functional.ivy.experimental.creation)": [[870, "ivy.functional.ivy.experimental.creation.vorbis_window"], [878, "ivy.functional.ivy.experimental.creation.vorbis_window"]], "is_native_dtype() (in module ivy.functional.ivy.experimental.data_type)": [[879, "ivy.functional.ivy.experimental.data_type.is_native_dtype"], [880, "ivy.functional.ivy.experimental.data_type.is_native_dtype"]], "ivy.functional.ivy.experimental.data_type": [[879, "module-ivy.functional.ivy.experimental.data_type"]], "dct() (in module ivy.array.array_methods)": [[881, "ivy.array.array_methods.dct"], [882, "ivy.array.array_methods.dct"]], "dct() (in module ivy.container.container_methods)": [[881, "ivy.container.container_methods.dct"], [883, "ivy.container.container_methods.dct"]], "dct() (in module ivy.functional.ivy.experimental)": [[881, "ivy.functional.ivy.experimental.dct"], [884, "ivy.functional.ivy.experimental.dct"]], "static_dct() (in module ivy.container.container_methods)": [[881, "ivy.container.container_methods.static_dct"], [885, "ivy.container.container_methods.static_dct"]], "ivy.functional.ivy.experimental.device": [[886, "module-ivy.functional.ivy.experimental.device"]], "dft() (in module ivy.container.container_methods)": [[887, "ivy.container.container_methods.dft"], [888, "ivy.container.container_methods.dft"]], "dft() (in module ivy.functional.ivy.experimental)": [[887, "ivy.functional.ivy.experimental.dft"], [889, "ivy.functional.ivy.experimental.dft"]], "static_dft() (in module ivy.container.container_methods)": [[887, "ivy.container.container_methods.static_dft"], [890, "ivy.container.container_methods.static_dft"]], "diagflat() (in module ivy.array.array_methods)": [[891, "ivy.array.array_methods.diagflat"], [892, "ivy.array.array_methods.diagflat"]], "diagflat() (in module ivy.container.container_methods)": [[891, "ivy.container.container_methods.diagflat"], [893, "ivy.container.container_methods.diagflat"]], "diagflat() (in module ivy.functional.ivy.experimental)": [[891, "ivy.functional.ivy.experimental.diagflat"], [894, "ivy.functional.ivy.experimental.diagflat"]], "static_diagflat() (in module ivy.container.container_methods)": [[891, "ivy.container.container_methods.static_diagflat"], [895, "ivy.container.container_methods.static_diagflat"]], "diff() (in module ivy.array.array_methods)": [[896, "ivy.array.array_methods.diff"], [897, "ivy.array.array_methods.diff"]], "diff() (in module ivy.container.container_methods)": [[896, "ivy.container.container_methods.diff"], [898, "ivy.container.container_methods.diff"]], "diff() (in module ivy.functional.ivy.experimental)": [[896, "ivy.functional.ivy.experimental.diff"], [899, "ivy.functional.ivy.experimental.diff"]], "static_diff() (in module ivy.container.container_methods)": [[896, "ivy.container.container_methods.static_diff"], [900, "ivy.container.container_methods.static_diff"]], "dirichlet() (in module ivy.array.array_methods)": [[901, "ivy.array.array_methods.dirichlet"], [902, "ivy.array.array_methods.dirichlet"]], "dirichlet() (in module ivy.container.container_methods)": [[901, "ivy.container.container_methods.dirichlet"], [903, "ivy.container.container_methods.dirichlet"]], "dirichlet() (in module ivy.functional.ivy.experimental)": [[901, "ivy.functional.ivy.experimental.dirichlet"], [904, "ivy.functional.ivy.experimental.dirichlet"]], "static_dirichlet() (in module ivy.container.container_methods)": [[901, "ivy.container.container_methods.static_dirichlet"], [905, "ivy.container.container_methods.static_dirichlet"]], "dropout1d() (in module ivy.functional.ivy.experimental)": [[906, "ivy.functional.ivy.experimental.dropout1d"]], "dropout3d() (in module ivy.functional.ivy.experimental)": [[907, "ivy.functional.ivy.experimental.dropout3d"]], "dsplit() (in module ivy.array.array_methods)": [[908, "ivy.array.array_methods.dsplit"], [909, "ivy.array.array_methods.dsplit"]], "dsplit() (in module ivy.container.container_methods)": [[908, "ivy.container.container_methods.dsplit"], [910, "ivy.container.container_methods.dsplit"]], "dsplit() (in module ivy.functional.ivy.experimental)": [[908, "ivy.functional.ivy.experimental.dsplit"], [911, "ivy.functional.ivy.experimental.dsplit"]], "static_dsplit() (in module ivy.container.container_methods)": [[908, "ivy.container.container_methods.static_dsplit"], [912, "ivy.container.container_methods.static_dsplit"]], "dstack() (in module ivy.array.array_methods)": [[913, "ivy.array.array_methods.dstack"], [914, "ivy.array.array_methods.dstack"]], "dstack() (in module ivy.container.container_methods)": [[913, "ivy.container.container_methods.dstack"], [915, "ivy.container.container_methods.dstack"]], "dstack() (in module ivy.functional.ivy.experimental)": [[913, "ivy.functional.ivy.experimental.dstack"], [916, "ivy.functional.ivy.experimental.dstack"]], "static_dstack() (in module ivy.container.container_methods)": [[913, "ivy.container.container_methods.static_dstack"], [917, "ivy.container.container_methods.static_dstack"]], "eig() (in module ivy.array.array_methods)": [[918, "ivy.array.array_methods.eig"], [919, "ivy.array.array_methods.eig"]], "eig() (in module ivy.container.container_methods)": [[918, "ivy.container.container_methods.eig"], [920, "ivy.container.container_methods.eig"]], "eig() (in module ivy.functional.ivy.experimental)": [[918, "ivy.functional.ivy.experimental.eig"], [921, "ivy.functional.ivy.experimental.eig"]], "static_eig() (in module ivy.container.container_methods)": [[918, "ivy.container.container_methods.static_eig"], [922, "ivy.container.container_methods.static_eig"]], "eigh_tridiagonal() (in module ivy.array.array_methods)": [[923, "ivy.array.array_methods.eigh_tridiagonal"], [924, "ivy.array.array_methods.eigh_tridiagonal"]], "eigh_tridiagonal() (in module ivy.container.container_methods)": [[923, "ivy.container.container_methods.eigh_tridiagonal"], [925, "ivy.container.container_methods.eigh_tridiagonal"]], "eigh_tridiagonal() (in module ivy.functional.ivy.experimental)": [[923, "ivy.functional.ivy.experimental.eigh_tridiagonal"], [926, "ivy.functional.ivy.experimental.eigh_tridiagonal"]], "static_eigh_tridiagonal() (in module ivy.container.container_methods)": [[923, "ivy.container.container_methods.static_eigh_tridiagonal"], [927, "ivy.container.container_methods.static_eigh_tridiagonal"]], "eigvals() (in module ivy.array.array_methods)": [[928, "ivy.array.array_methods.eigvals"], [929, "ivy.array.array_methods.eigvals"]], "eigvals() (in module ivy.container.container_methods)": [[928, "ivy.container.container_methods.eigvals"], [930, "ivy.container.container_methods.eigvals"]], "eigvals() (in module ivy.functional.ivy.experimental)": [[928, "ivy.functional.ivy.experimental.eigvals"], [931, "ivy.functional.ivy.experimental.eigvals"]], "static_eigvals() (in module ivy.container.container_methods)": [[928, "ivy.container.container_methods.static_eigvals"], [932, "ivy.container.container_methods.static_eigvals"]], "allclose() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.allclose"], [934, "ivy.functional.ivy.experimental.elementwise.allclose"]], "angle() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.angle"], [935, "ivy.functional.ivy.experimental.elementwise.angle"]], "binarizer() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.binarizer"], [936, "ivy.functional.ivy.experimental.elementwise.binarizer"]], "conj() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.conj"], [937, "ivy.functional.ivy.experimental.elementwise.conj"]], "copysign() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.copysign"], [938, "ivy.functional.ivy.experimental.elementwise.copysign"]], "count_nonzero() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.count_nonzero"], [939, "ivy.functional.ivy.experimental.elementwise.count_nonzero"]], "diff() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.diff"], [940, "ivy.functional.ivy.experimental.elementwise.diff"]], "exp2() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.exp2"], [941, "ivy.functional.ivy.experimental.elementwise.exp2"]], "fix() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.fix"], [942, "ivy.functional.ivy.experimental.elementwise.fix"]], "float_power() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.float_power"], [943, "ivy.functional.ivy.experimental.elementwise.float_power"]], "fmax() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.fmax"], [944, "ivy.functional.ivy.experimental.elementwise.fmax"]], "fmin() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.fmin"], [945, "ivy.functional.ivy.experimental.elementwise.fmin"]], "fmod() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.fmod"], [946, "ivy.functional.ivy.experimental.elementwise.fmod"]], "gcd() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.gcd"], [947, "ivy.functional.ivy.experimental.elementwise.gcd"]], "gradient() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.gradient"], [948, "ivy.functional.ivy.experimental.elementwise.gradient"]], "hypot() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.hypot"], [949, "ivy.functional.ivy.experimental.elementwise.hypot"]], "imag() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.imag"], [950, "ivy.functional.ivy.experimental.elementwise.imag"]], "isclose() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.isclose"], [951, "ivy.functional.ivy.experimental.elementwise.isclose"]], "ivy.functional.ivy.experimental.elementwise": [[933, "module-ivy.functional.ivy.experimental.elementwise"]], "lcm() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.lcm"], [952, "ivy.functional.ivy.experimental.elementwise.lcm"]], "ldexp() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.ldexp"], [953, "ivy.functional.ivy.experimental.elementwise.ldexp"]], "logaddexp2() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.logaddexp2"], [954, "ivy.functional.ivy.experimental.elementwise.logaddexp2"]], "nan_to_num() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.nan_to_num"], [955, "ivy.functional.ivy.experimental.elementwise.nan_to_num"]], "nansum() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.nansum"], [956, "ivy.functional.ivy.experimental.elementwise.nansum"]], "nextafter() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.nextafter"], [957, "ivy.functional.ivy.experimental.elementwise.nextafter"]], "real() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.real"], [958, "ivy.functional.ivy.experimental.elementwise.real"]], "signbit() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.signbit"], [959, "ivy.functional.ivy.experimental.elementwise.signbit"]], "sinc() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.sinc"], [960, "ivy.functional.ivy.experimental.elementwise.sinc"]], "trapz() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.trapz"], [961, "ivy.functional.ivy.experimental.elementwise.trapz"]], "xlogy() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.xlogy"], [962, "ivy.functional.ivy.experimental.elementwise.xlogy"]], "zeta() (in module ivy.functional.ivy.experimental.elementwise)": [[933, "ivy.functional.ivy.experimental.elementwise.zeta"], [963, "ivy.functional.ivy.experimental.elementwise.zeta"]], "embedding() (in module ivy.array.array_methods)": [[964, "ivy.array.array_methods.embedding"], [965, "ivy.array.array_methods.embedding"]], "embedding() (in module ivy.container.container_methods)": [[964, "ivy.container.container_methods.embedding"], [966, "ivy.container.container_methods.embedding"]], "embedding() (in module ivy.functional.ivy.experimental)": [[964, "ivy.functional.ivy.experimental.embedding"], [967, "ivy.functional.ivy.experimental.embedding"]], "static_embedding() (in module ivy.container.container_methods)": [[964, "ivy.container.container_methods.static_embedding"], [968, "ivy.container.container_methods.static_embedding"]], "exp2() (in module ivy.array.array_methods)": [[969, "ivy.array.array_methods.exp2"], [970, "ivy.array.array_methods.exp2"]], "exp2() (in module ivy.container.container_methods)": [[969, "ivy.container.container_methods.exp2"], [971, "ivy.container.container_methods.exp2"]], "exp2() (in module ivy.functional.ivy.experimental)": [[969, "ivy.functional.ivy.experimental.exp2"], [972, "ivy.functional.ivy.experimental.exp2"]], "static_exp2() (in module ivy.container.container_methods)": [[969, "ivy.container.container_methods.static_exp2"], [973, "ivy.container.container_methods.static_exp2"]], "expand() (in module ivy.array.array_methods)": [[974, "ivy.array.array_methods.expand"], [975, "ivy.array.array_methods.expand"]], "expand() (in module ivy.container.container_methods)": [[974, "ivy.container.container_methods.expand"], [976, "ivy.container.container_methods.expand"]], "expand() (in module ivy.functional.ivy.experimental)": [[974, "ivy.functional.ivy.experimental.expand"], [977, "ivy.functional.ivy.experimental.expand"]], "static_expand() (in module ivy.container.container_methods)": [[974, "ivy.container.container_methods.static_expand"], [978, "ivy.container.container_methods.static_expand"]], "eye_like() (in module ivy.array.array_methods)": [[979, "ivy.array.array_methods.eye_like"], [980, "ivy.array.array_methods.eye_like"]], "eye_like() (in module ivy.container.container_methods)": [[979, "ivy.container.container_methods.eye_like"], [981, "ivy.container.container_methods.eye_like"]], "eye_like() (in module ivy.functional.ivy.experimental)": [[979, "ivy.functional.ivy.experimental.eye_like"], [982, "ivy.functional.ivy.experimental.eye_like"]], "static_eye_like() (in module ivy.container.container_methods)": [[979, "ivy.container.container_methods.static_eye_like"], [983, "ivy.container.container_methods.static_eye_like"]], "fft() (in module ivy.array.array_methods)": [[984, "ivy.array.array_methods.fft"], [985, "ivy.array.array_methods.fft"]], "fft() (in module ivy.container.container_methods)": [[984, "ivy.container.container_methods.fft"], [986, "ivy.container.container_methods.fft"]], "fft() (in module ivy.functional.ivy.experimental)": [[984, "ivy.functional.ivy.experimental.fft"], [987, "ivy.functional.ivy.experimental.fft"]], "static_fft() (in module ivy.container.container_methods)": [[984, "ivy.container.container_methods.static_fft"], [988, "ivy.container.container_methods.static_fft"]], "fix() (in module ivy.array.array_methods)": [[989, "ivy.array.array_methods.fix"], [990, "ivy.array.array_methods.fix"]], "fix() (in module ivy.container.container_methods)": [[989, "ivy.container.container_methods.fix"], [991, "ivy.container.container_methods.fix"]], "fix() (in module ivy.functional.ivy.experimental)": [[989, "ivy.functional.ivy.experimental.fix"], [992, "ivy.functional.ivy.experimental.fix"]], "static_fix() (in module ivy.container.container_methods)": [[989, "ivy.container.container_methods.static_fix"], [993, "ivy.container.container_methods.static_fix"]], "flatten() (in module ivy.array.array_methods)": [[994, "ivy.array.array_methods.flatten"], [995, "ivy.array.array_methods.flatten"]], "flatten() (in module ivy.container.container_methods)": [[994, "ivy.container.container_methods.flatten"], [996, "ivy.container.container_methods.flatten"]], "flatten() (in module ivy.functional.ivy.experimental)": [[994, "ivy.functional.ivy.experimental.flatten"], [997, "ivy.functional.ivy.experimental.flatten"]], "static_flatten() (in module ivy.container.container_methods)": [[994, "ivy.container.container_methods.static_flatten"], [998, "ivy.container.container_methods.static_flatten"]], "fliplr() (in module ivy.array.array_methods)": [[999, "ivy.array.array_methods.fliplr"], [1000, "ivy.array.array_methods.fliplr"]], "fliplr() (in module ivy.container.container_methods)": [[999, "ivy.container.container_methods.fliplr"], [1001, "ivy.container.container_methods.fliplr"]], "fliplr() (in module ivy.functional.ivy.experimental)": [[999, "ivy.functional.ivy.experimental.fliplr"], [1002, "ivy.functional.ivy.experimental.fliplr"]], "static_fliplr() (in module ivy.container.container_methods)": [[999, "ivy.container.container_methods.static_fliplr"], [1003, "ivy.container.container_methods.static_fliplr"]], "flipud() (in module ivy.array.array_methods)": [[1004, "ivy.array.array_methods.flipud"], [1005, "ivy.array.array_methods.flipud"]], "flipud() (in module ivy.container.container_methods)": [[1004, "ivy.container.container_methods.flipud"], [1006, "ivy.container.container_methods.flipud"]], "flipud() (in module ivy.functional.ivy.experimental)": [[1004, "ivy.functional.ivy.experimental.flipud"], [1007, "ivy.functional.ivy.experimental.flipud"]], "static_flipud() (in module ivy.container.container_methods)": [[1004, "ivy.container.container_methods.static_flipud"], [1008, "ivy.container.container_methods.static_flipud"]], "float_power() (in module ivy.array.array_methods)": [[1009, "ivy.array.array_methods.float_power"], [1010, "ivy.array.array_methods.float_power"]], "float_power() (in module ivy.container.container_methods)": [[1009, "ivy.container.container_methods.float_power"], [1011, "ivy.container.container_methods.float_power"]], "float_power() (in module ivy.functional.ivy.experimental)": [[1009, "ivy.functional.ivy.experimental.float_power"], [1012, "ivy.functional.ivy.experimental.float_power"]], "static_float_power() (in module ivy.container.container_methods)": [[1009, "ivy.container.container_methods.static_float_power"], [1013, "ivy.container.container_methods.static_float_power"]], "fmax() (in module ivy.array.array_methods)": [[1014, "ivy.array.array_methods.fmax"], [1015, "ivy.array.array_methods.fmax"]], "fmax() (in module ivy.container.container_methods)": [[1014, "ivy.container.container_methods.fmax"], [1016, "ivy.container.container_methods.fmax"]], "fmax() (in module ivy.functional.ivy.experimental)": [[1014, "ivy.functional.ivy.experimental.fmax"], [1017, "ivy.functional.ivy.experimental.fmax"]], "static_fmax() (in module ivy.container.container_methods)": [[1014, "ivy.container.container_methods.static_fmax"], [1018, "ivy.container.container_methods.static_fmax"]], "fmin() (in module ivy.array.array_methods)": [[1019, "ivy.array.array_methods.fmin"], [1020, "ivy.array.array_methods.fmin"]], "fmin() (in module ivy.container.container_methods)": [[1019, "ivy.container.container_methods.fmin"], [1021, "ivy.container.container_methods.fmin"]], "fmin() (in module ivy.functional.ivy.experimental)": [[1019, "ivy.functional.ivy.experimental.fmin"], [1022, "ivy.functional.ivy.experimental.fmin"]], "static_fmin() (in module ivy.container.container_methods)": [[1019, "ivy.container.container_methods.static_fmin"], [1023, "ivy.container.container_methods.static_fmin"]], "fmod() (in module ivy.array.array_methods)": [[1024, "ivy.array.array_methods.fmod"], [1025, "ivy.array.array_methods.fmod"]], "fmod() (in module ivy.container.container_methods)": [[1024, "ivy.container.container_methods.fmod"], [1026, "ivy.container.container_methods.fmod"]], "fmod() (in module ivy.functional.ivy.experimental)": [[1024, "ivy.functional.ivy.experimental.fmod"], [1027, "ivy.functional.ivy.experimental.fmod"]], "static_fmod() (in module ivy.container.container_methods)": [[1024, "ivy.container.container_methods.static_fmod"], [1028, "ivy.container.container_methods.static_fmod"]], "gamma() (in module ivy.array.array_methods)": [[1029, "ivy.array.array_methods.gamma"], [1030, "ivy.array.array_methods.gamma"]], "gamma() (in module ivy.functional.ivy.experimental)": [[1029, "ivy.functional.ivy.experimental.gamma"], [1031, "ivy.functional.ivy.experimental.gamma"]], "gcd() (in module ivy.array.array_methods)": [[1032, "ivy.array.array_methods.gcd"], [1033, "ivy.array.array_methods.gcd"]], "gcd() (in module ivy.container.container_methods)": [[1032, "ivy.container.container_methods.gcd"], [1034, "ivy.container.container_methods.gcd"]], "gcd() (in module ivy.functional.ivy.experimental)": [[1032, "ivy.functional.ivy.experimental.gcd"], [1035, "ivy.functional.ivy.experimental.gcd"]], "static_gcd() (in module ivy.container.container_methods)": [[1032, "ivy.container.container_methods.static_gcd"], [1036, "ivy.container.container_methods.static_gcd"]], "isin() (in module ivy.functional.ivy.experimental.general)": [[1037, "ivy.functional.ivy.experimental.general.isin"], [1038, "ivy.functional.ivy.experimental.general.isin"]], "ivy.functional.ivy.experimental.general": [[1037, "module-ivy.functional.ivy.experimental.general"]], "gradient() (in module ivy.array.array_methods)": [[1039, "ivy.array.array_methods.gradient"], [1040, "ivy.array.array_methods.gradient"]], "gradient() (in module ivy.container.container_methods)": [[1039, "ivy.container.container_methods.gradient"], [1041, "ivy.container.container_methods.gradient"]], "gradient() (in module ivy.functional.ivy.experimental)": [[1039, "ivy.functional.ivy.experimental.gradient"], [1042, "ivy.functional.ivy.experimental.gradient"]], "static_gradient() (in module ivy.container.container_methods)": [[1039, "ivy.container.container_methods.static_gradient"], [1043, "ivy.container.container_methods.static_gradient"]], "bind_custom_gradient_function() (in module ivy.functional.ivy.experimental.gradients)": [[1044, "ivy.functional.ivy.experimental.gradients.bind_custom_gradient_function"], [1045, "ivy.functional.ivy.experimental.gradients.bind_custom_gradient_function"]], "ivy.functional.ivy.experimental.gradients": [[1044, "module-ivy.functional.ivy.experimental.gradients"]], "hamming_window() (in module ivy.container.container_methods)": [[1046, "ivy.container.container_methods.hamming_window"], [1047, "ivy.container.container_methods.hamming_window"]], "hamming_window() (in module ivy.functional.ivy.experimental)": [[1046, "ivy.functional.ivy.experimental.hamming_window"], [1048, "ivy.functional.ivy.experimental.hamming_window"]], "static_hamming_window() (in module ivy.container.container_methods)": [[1046, "ivy.container.container_methods.static_hamming_window"], [1049, "ivy.container.container_methods.static_hamming_window"]], "hann_window() (in module ivy.container.container_methods)": [[1050, "ivy.container.container_methods.hann_window"], [1051, "ivy.container.container_methods.hann_window"]], "hann_window() (in module ivy.functional.ivy.experimental)": [[1050, "ivy.functional.ivy.experimental.hann_window"], [1052, "ivy.functional.ivy.experimental.hann_window"]], "static_hann_window() (in module ivy.container.container_methods)": [[1050, "ivy.container.container_methods.static_hann_window"], [1053, "ivy.container.container_methods.static_hann_window"]], "heaviside() (in module ivy.array.array_methods)": [[1054, "ivy.array.array_methods.heaviside"], [1055, "ivy.array.array_methods.heaviside"]], "heaviside() (in module ivy.container.container_methods)": [[1054, "ivy.container.container_methods.heaviside"], [1056, "ivy.container.container_methods.heaviside"]], "heaviside() (in module ivy.functional.ivy.experimental)": [[1054, "ivy.functional.ivy.experimental.heaviside"], [1057, "ivy.functional.ivy.experimental.heaviside"]], "static_heaviside() (in module ivy.container.container_methods)": [[1054, "ivy.container.container_methods.static_heaviside"], [1058, "ivy.container.container_methods.static_heaviside"]], "hsplit() (in module ivy.array.array_methods)": [[1059, "ivy.array.array_methods.hsplit"], [1060, "ivy.array.array_methods.hsplit"]], "hsplit() (in module ivy.container.container_methods)": [[1059, "ivy.container.container_methods.hsplit"], [1061, "ivy.container.container_methods.hsplit"]], "hsplit() (in module ivy.functional.ivy.experimental)": [[1059, "ivy.functional.ivy.experimental.hsplit"], [1062, "ivy.functional.ivy.experimental.hsplit"]], "static_hsplit() (in module ivy.container.container_methods)": [[1059, "ivy.container.container_methods.static_hsplit"], [1063, "ivy.container.container_methods.static_hsplit"]], "hstack() (in module ivy.array.array_methods)": [[1064, "ivy.array.array_methods.hstack"], [1065, "ivy.array.array_methods.hstack"]], "hstack() (in module ivy.container.container_methods)": [[1064, "ivy.container.container_methods.hstack"], [1066, "ivy.container.container_methods.hstack"]], "hstack() (in module ivy.functional.ivy.experimental)": [[1064, "ivy.functional.ivy.experimental.hstack"], [1067, "ivy.functional.ivy.experimental.hstack"]], "static_hstack() (in module ivy.container.container_methods)": [[1064, "ivy.container.container_methods.static_hstack"], [1068, "ivy.container.container_methods.static_hstack"]], "hypot() (in module ivy.array.array_methods)": [[1069, "ivy.array.array_methods.hypot"], [1070, "ivy.array.array_methods.hypot"]], "hypot() (in module ivy.container.container_methods)": [[1069, "ivy.container.container_methods.hypot"], [1071, "ivy.container.container_methods.hypot"]], "hypot() (in module ivy.functional.ivy.experimental)": [[1069, "ivy.functional.ivy.experimental.hypot"], [1072, "ivy.functional.ivy.experimental.hypot"]], "static_hypot() (in module ivy.container.container_methods)": [[1069, "ivy.container.container_methods.static_hypot"], [1073, "ivy.container.container_methods.static_hypot"]], "i0() (in module ivy.array.array_methods)": [[1074, "ivy.array.array_methods.i0"], [1075, "ivy.array.array_methods.i0"]], "i0() (in module ivy.container.container_methods)": [[1074, "ivy.container.container_methods.i0"], [1076, "ivy.container.container_methods.i0"]], "i0() (in module ivy.functional.ivy.experimental)": [[1074, "ivy.functional.ivy.experimental.i0"], [1077, "ivy.functional.ivy.experimental.i0"]], "static_i0() (in module ivy.container.container_methods)": [[1074, "ivy.container.container_methods.static_i0"], [1078, "ivy.container.container_methods.static_i0"]], "ifft() (in module ivy.array.array_methods)": [[1079, "ivy.array.array_methods.ifft"], [1080, "ivy.array.array_methods.ifft"]], "ifft() (in module ivy.container.container_methods)": [[1079, "ivy.container.container_methods.ifft"], [1081, "ivy.container.container_methods.ifft"]], "ifft() (in module ivy.functional.ivy.experimental)": [[1079, "ivy.functional.ivy.experimental.ifft"], [1082, "ivy.functional.ivy.experimental.ifft"]], "static_ifft() (in module ivy.container.container_methods)": [[1079, "ivy.container.container_methods.static_ifft"], [1083, "ivy.container.container_methods.static_ifft"]], "imag() (in module ivy.array.array_methods)": [[1084, "ivy.array.array_methods.imag"], [1085, "ivy.array.array_methods.imag"]], "imag() (in module ivy.container.container_methods)": [[1084, "ivy.container.container_methods.imag"], [1086, "ivy.container.container_methods.imag"]], "imag() (in module ivy.functional.ivy.experimental)": [[1084, "ivy.functional.ivy.experimental.imag"], [1087, "ivy.functional.ivy.experimental.imag"]], "static_imag() (in module ivy.container.container_methods)": [[1084, "ivy.container.container_methods.static_imag"], [1088, "ivy.container.container_methods.static_imag"]], "instance_norm() (in module ivy.array.array_methods)": [[1089, "ivy.array.array_methods.instance_norm"], [1090, "ivy.array.array_methods.instance_norm"]], "instance_norm() (in module ivy.container.container_methods)": [[1089, "ivy.container.container_methods.instance_norm"], [1091, "ivy.container.container_methods.instance_norm"]], "instance_norm() (in module ivy.functional.ivy.experimental)": [[1089, "ivy.functional.ivy.experimental.instance_norm"], [1092, "ivy.functional.ivy.experimental.instance_norm"]], "static_instance_norm() (in module ivy.container.container_methods)": [[1089, "ivy.container.container_methods.static_instance_norm"], [1093, "ivy.container.container_methods.static_instance_norm"]], "interp() (in module ivy.functional.ivy.experimental)": [[1094, "ivy.functional.ivy.experimental.interp"]], "interpolate() (in module ivy.array.array_methods)": [[1095, "ivy.array.array_methods.interpolate"], [1096, "ivy.array.array_methods.interpolate"]], "interpolate() (in module ivy.container.container_methods)": [[1095, "ivy.container.container_methods.interpolate"], [1097, "ivy.container.container_methods.interpolate"]], "interpolate() (in module ivy.functional.ivy.experimental)": [[1095, "ivy.functional.ivy.experimental.interpolate"], [1098, "ivy.functional.ivy.experimental.interpolate"]], "static_interpolate() (in module ivy.container.container_methods)": [[1095, "ivy.container.container_methods.static_interpolate"], [1099, "ivy.container.container_methods.static_interpolate"]], "is_ivy_sparse_array() (in module ivy.functional.ivy.experimental)": [[1100, "ivy.functional.ivy.experimental.is_ivy_sparse_array"]], "is_native_dtype() (in module ivy.functional.ivy.experimental)": [[1101, "ivy.functional.ivy.experimental.is_native_dtype"]], "is_native_sparse_array() (in module ivy.functional.ivy.experimental)": [[1102, "ivy.functional.ivy.experimental.is_native_sparse_array"]], "isclose() (in module ivy.array.array_methods)": [[1103, "ivy.array.array_methods.isclose"], [1104, "ivy.array.array_methods.isclose"]], "isclose() (in module ivy.container.container_methods)": [[1103, "ivy.container.container_methods.isclose"], [1105, "ivy.container.container_methods.isclose"]], "isclose() (in module ivy.functional.ivy.experimental)": [[1103, "ivy.functional.ivy.experimental.isclose"], [1106, "ivy.functional.ivy.experimental.isclose"]], "static_isclose() (in module ivy.container.container_methods)": [[1103, "ivy.container.container_methods.static_isclose"], [1107, "ivy.container.container_methods.static_isclose"]], "isin() (in module ivy.array.array_methods)": [[1108, "ivy.array.array_methods.isin"], [1109, "ivy.array.array_methods.isin"]], "isin() (in module ivy.container.container_methods)": [[1108, "ivy.container.container_methods.isin"], [1110, "ivy.container.container_methods.isin"]], "isin() (in module ivy.functional.ivy.experimental)": [[1108, "ivy.functional.ivy.experimental.isin"], [1111, "ivy.functional.ivy.experimental.isin"]], "static_isin() (in module ivy.container.container_methods)": [[1108, "ivy.container.container_methods.static_isin"], [1112, "ivy.container.container_methods.static_isin"]], "kaiser_bessel_derived_window() (in module ivy.container.container_methods)": [[1113, "ivy.container.container_methods.kaiser_bessel_derived_window"], [1114, "ivy.container.container_methods.kaiser_bessel_derived_window"]], "kaiser_bessel_derived_window() (in module ivy.functional.ivy.experimental)": [[1113, "ivy.functional.ivy.experimental.kaiser_bessel_derived_window"], [1115, "ivy.functional.ivy.experimental.kaiser_bessel_derived_window"]], "static_kaiser_bessel_derived_window() (in module ivy.container.container_methods)": [[1113, "ivy.container.container_methods.static_kaiser_bessel_derived_window"], [1116, "ivy.container.container_methods.static_kaiser_bessel_derived_window"]], "kaiser_window() (in module ivy.container.container_methods)": [[1117, "ivy.container.container_methods.kaiser_window"], [1118, "ivy.container.container_methods.kaiser_window"]], "kaiser_window() (in module ivy.functional.ivy.experimental)": [[1117, "ivy.functional.ivy.experimental.kaiser_window"], [1119, "ivy.functional.ivy.experimental.kaiser_window"]], "static_kaiser_window() (in module ivy.container.container_methods)": [[1117, "ivy.container.container_methods.static_kaiser_window"], [1120, "ivy.container.container_methods.static_kaiser_window"]], "kron() (in module ivy.array.array_methods)": [[1121, "ivy.array.array_methods.kron"], [1122, "ivy.array.array_methods.kron"]], "kron() (in module ivy.container.container_methods)": [[1121, "ivy.container.container_methods.kron"], [1123, "ivy.container.container_methods.kron"]], "kron() (in module ivy.functional.ivy.experimental)": [[1121, "ivy.functional.ivy.experimental.kron"], [1124, "ivy.functional.ivy.experimental.kron"]], "static_kron() (in module ivy.container.container_methods)": [[1121, "ivy.container.container_methods.static_kron"], [1125, "ivy.container.container_methods.static_kron"]], "l2_normalize() (in module ivy.array.array_methods)": [[1126, "ivy.array.array_methods.l2_normalize"], [1127, "ivy.array.array_methods.l2_normalize"]], "l2_normalize() (in module ivy.container.container_methods)": [[1126, "ivy.container.container_methods.l2_normalize"], [1128, "ivy.container.container_methods.l2_normalize"]], "l2_normalize() (in module ivy.functional.ivy.experimental)": [[1126, "ivy.functional.ivy.experimental.l2_normalize"], [1129, "ivy.functional.ivy.experimental.l2_normalize"]], "static_l2_normalize() (in module ivy.container.container_methods)": [[1126, "ivy.container.container_methods.static_l2_normalize"], [1130, "ivy.container.container_methods.static_l2_normalize"]], "avg_pool1d() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.avg_pool1d"], [1132, "ivy.functional.ivy.experimental.layers.avg_pool1d"]], "avg_pool2d() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.avg_pool2d"], [1133, "ivy.functional.ivy.experimental.layers.avg_pool2d"]], "avg_pool3d() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.avg_pool3d"], [1134, "ivy.functional.ivy.experimental.layers.avg_pool3d"]], "compute_weight_mat() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.compute_weight_mat"], [1135, "ivy.functional.ivy.experimental.layers.compute_weight_mat"]], "dct() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.dct"], [1136, "ivy.functional.ivy.experimental.layers.dct"]], "dft() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.dft"], [1137, "ivy.functional.ivy.experimental.layers.dft"]], "dropout1d() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.dropout1d"], [1138, "ivy.functional.ivy.experimental.layers.dropout1d"]], "dropout3d() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.dropout3d"], [1139, "ivy.functional.ivy.experimental.layers.dropout3d"]], "embedding() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.embedding"], [1140, "ivy.functional.ivy.experimental.layers.embedding"]], "fft() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.fft"], [1141, "ivy.functional.ivy.experimental.layers.fft"]], "ifft() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.ifft"], [1142, "ivy.functional.ivy.experimental.layers.ifft"]], "interp() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.interp"], [1143, "ivy.functional.ivy.experimental.layers.interp"]], "interpolate() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.interpolate"], [1144, "ivy.functional.ivy.experimental.layers.interpolate"]], "ivy.functional.ivy.experimental.layers": [[1131, "module-ivy.functional.ivy.experimental.layers"]], "max_pool1d() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.max_pool1d"], [1145, "ivy.functional.ivy.experimental.layers.max_pool1d"]], "max_pool2d() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.max_pool2d"], [1146, "ivy.functional.ivy.experimental.layers.max_pool2d"]], "max_pool3d() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.max_pool3d"], [1147, "ivy.functional.ivy.experimental.layers.max_pool3d"]], "padding_ceil_mode() (in module ivy.functional.ivy.experimental.layers)": [[1131, "ivy.functional.ivy.experimental.layers.padding_ceil_mode"], [1148, "ivy.functional.ivy.experimental.layers.padding_ceil_mode"]], "lcm() (in module ivy.array.array_methods)": [[1149, "ivy.array.array_methods.lcm"], [1150, "ivy.array.array_methods.lcm"]], "lcm() (in module ivy.container.container_methods)": [[1149, "ivy.container.container_methods.lcm"], [1151, "ivy.container.container_methods.lcm"]], "lcm() (in module ivy.functional.ivy.experimental)": [[1149, "ivy.functional.ivy.experimental.lcm"], [1152, "ivy.functional.ivy.experimental.lcm"]], "static_lcm() (in module ivy.container.container_methods)": [[1149, "ivy.container.container_methods.static_lcm"], [1153, "ivy.container.container_methods.static_lcm"]], "ldexp() (in module ivy.array.array_methods)": [[1154, "ivy.array.array_methods.ldexp"], [1155, "ivy.array.array_methods.ldexp"]], "ldexp() (in module ivy.container.container_methods)": [[1154, "ivy.container.container_methods.ldexp"], [1156, "ivy.container.container_methods.ldexp"]], "ldexp() (in module ivy.functional.ivy.experimental)": [[1154, "ivy.functional.ivy.experimental.ldexp"], [1157, "ivy.functional.ivy.experimental.ldexp"]], "static_ldexp() (in module ivy.container.container_methods)": [[1154, "ivy.container.container_methods.static_ldexp"], [1158, "ivy.container.container_methods.static_ldexp"]], "lexsort() (in module ivy.array.array_methods)": [[1159, "ivy.array.array_methods.lexsort"], [1160, "ivy.array.array_methods.lexsort"]], "lexsort() (in module ivy.container.container_methods)": [[1159, "ivy.container.container_methods.lexsort"], [1161, "ivy.container.container_methods.lexsort"]], "lexsort() (in module ivy.functional.ivy.experimental)": [[1159, "ivy.functional.ivy.experimental.lexsort"], [1162, "ivy.functional.ivy.experimental.lexsort"]], "static_lexsort() (in module ivy.container.container_methods)": [[1159, "ivy.container.container_methods.static_lexsort"], [1163, "ivy.container.container_methods.static_lexsort"]], "adjoint() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1164, "ivy.functional.ivy.experimental.linear_algebra.adjoint"], [1165, "ivy.functional.ivy.experimental.linear_algebra.adjoint"]], "diagflat() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1164, "ivy.functional.ivy.experimental.linear_algebra.diagflat"], [1166, "ivy.functional.ivy.experimental.linear_algebra.diagflat"]], "eig() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1164, "ivy.functional.ivy.experimental.linear_algebra.eig"], [1167, "ivy.functional.ivy.experimental.linear_algebra.eig"]], "eigh_tridiagonal() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1164, "ivy.functional.ivy.experimental.linear_algebra.eigh_tridiagonal"], [1168, "ivy.functional.ivy.experimental.linear_algebra.eigh_tridiagonal"]], "eigvals() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1164, "ivy.functional.ivy.experimental.linear_algebra.eigvals"], [1169, "ivy.functional.ivy.experimental.linear_algebra.eigvals"]], "ivy.functional.ivy.experimental.linear_algebra": [[1164, "module-ivy.functional.ivy.experimental.linear_algebra"]], "kron() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1164, "ivy.functional.ivy.experimental.linear_algebra.kron"], [1170, "ivy.functional.ivy.experimental.linear_algebra.kron"]], "matrix_exp() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1164, "ivy.functional.ivy.experimental.linear_algebra.matrix_exp"], [1171, "ivy.functional.ivy.experimental.linear_algebra.matrix_exp"]], "multi_dot() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1164, "ivy.functional.ivy.experimental.linear_algebra.multi_dot"], [1172, "ivy.functional.ivy.experimental.linear_algebra.multi_dot"]], "logaddexp2() (in module ivy.array.array_methods)": [[1173, "ivy.array.array_methods.logaddexp2"], [1174, "ivy.array.array_methods.logaddexp2"]], "logaddexp2() (in module ivy.container.container_methods)": [[1173, "ivy.container.container_methods.logaddexp2"], [1175, "ivy.container.container_methods.logaddexp2"]], "logaddexp2() (in module ivy.functional.ivy.experimental)": [[1173, "ivy.functional.ivy.experimental.logaddexp2"], [1176, "ivy.functional.ivy.experimental.logaddexp2"]], "static_logaddexp2() (in module ivy.container.container_methods)": [[1173, "ivy.container.container_methods.static_logaddexp2"], [1177, "ivy.container.container_methods.static_logaddexp2"]], "logit() (in module ivy.array.array_methods)": [[1178, "ivy.array.array_methods.logit"], [1179, "ivy.array.array_methods.logit"]], "logit() (in module ivy.container.container_methods)": [[1178, "ivy.container.container_methods.logit"], [1180, "ivy.container.container_methods.logit"]], "logit() (in module ivy.functional.ivy.experimental)": [[1178, "ivy.functional.ivy.experimental.logit"], [1181, "ivy.functional.ivy.experimental.logit"]], "static_logit() (in module ivy.container.container_methods)": [[1178, "ivy.container.container_methods.static_logit"], [1182, "ivy.container.container_methods.static_logit"]], "binary_cross_entropy_with_logits() (in module ivy.functional.ivy.experimental.losses)": [[1183, "ivy.functional.ivy.experimental.losses.binary_cross_entropy_with_logits"], [1184, "ivy.functional.ivy.experimental.losses.binary_cross_entropy_with_logits"]], "ivy.functional.ivy.experimental.losses": [[1183, "module-ivy.functional.ivy.experimental.losses"]], "lp_normalize() (in module ivy.array.array_methods)": [[1185, "ivy.array.array_methods.lp_normalize"], [1186, "ivy.array.array_methods.lp_normalize"]], "lp_normalize() (in module ivy.container.container_methods)": [[1185, "ivy.container.container_methods.lp_normalize"], [1187, "ivy.container.container_methods.lp_normalize"]], "lp_normalize() (in module ivy.functional.ivy.experimental)": [[1185, "ivy.functional.ivy.experimental.lp_normalize"], [1188, "ivy.functional.ivy.experimental.lp_normalize"]], "static_lp_normalize() (in module ivy.container.container_methods)": [[1185, "ivy.container.container_methods.static_lp_normalize"], [1189, "ivy.container.container_methods.static_lp_normalize"]], "atleast_1d() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.atleast_1d"], [1191, "ivy.functional.ivy.experimental.manipulation.atleast_1d"]], "atleast_2d() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.atleast_2d"], [1192, "ivy.functional.ivy.experimental.manipulation.atleast_2d"]], "atleast_3d() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.atleast_3d"], [1193, "ivy.functional.ivy.experimental.manipulation.atleast_3d"]], "broadcast_shapes() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.broadcast_shapes"], [1194, "ivy.functional.ivy.experimental.manipulation.broadcast_shapes"]], "dsplit() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.dsplit"], [1195, "ivy.functional.ivy.experimental.manipulation.dsplit"]], "dstack() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.dstack"], [1196, "ivy.functional.ivy.experimental.manipulation.dstack"]], "expand() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.expand"], [1197, "ivy.functional.ivy.experimental.manipulation.expand"]], "flatten() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.flatten"], [1198, "ivy.functional.ivy.experimental.manipulation.flatten"]], "fliplr() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.fliplr"], [1199, "ivy.functional.ivy.experimental.manipulation.fliplr"]], "flipud() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.flipud"], [1200, "ivy.functional.ivy.experimental.manipulation.flipud"]], "heaviside() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.heaviside"], [1201, "ivy.functional.ivy.experimental.manipulation.heaviside"]], "hsplit() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.hsplit"], [1202, "ivy.functional.ivy.experimental.manipulation.hsplit"]], "hstack() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.hstack"], [1203, "ivy.functional.ivy.experimental.manipulation.hstack"]], "i0() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.i0"], [1204, "ivy.functional.ivy.experimental.manipulation.i0"]], "ivy.functional.ivy.experimental.manipulation": [[1190, "module-ivy.functional.ivy.experimental.manipulation"]], "moveaxis() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.moveaxis"], [1205, "ivy.functional.ivy.experimental.manipulation.moveaxis"]], "ndenumerate() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.ndenumerate"], [1206, "ivy.functional.ivy.experimental.manipulation.ndenumerate"]], "ndindex() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.ndindex"], [1207, "ivy.functional.ivy.experimental.manipulation.ndindex"]], "pad() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.pad"], [1208, "ivy.functional.ivy.experimental.manipulation.pad"]], "rot90() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.rot90"], [1209, "ivy.functional.ivy.experimental.manipulation.rot90"]], "take_along_axis() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.take_along_axis"], [1210, "ivy.functional.ivy.experimental.manipulation.take_along_axis"]], "top_k() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.top_k"], [1211, "ivy.functional.ivy.experimental.manipulation.top_k"]], "vsplit() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.vsplit"], [1212, "ivy.functional.ivy.experimental.manipulation.vsplit"]], "vstack() (in module ivy.functional.ivy.experimental.manipulation)": [[1190, "ivy.functional.ivy.experimental.manipulation.vstack"], [1213, "ivy.functional.ivy.experimental.manipulation.vstack"]], "matrix_exp() (in module ivy.array.array_methods)": [[1214, "ivy.array.array_methods.matrix_exp"], [1215, "ivy.array.array_methods.matrix_exp"]], "matrix_exp() (in module ivy.container.container_methods)": [[1214, "ivy.container.container_methods.matrix_exp"], [1216, "ivy.container.container_methods.matrix_exp"]], "matrix_exp() (in module ivy.functional.ivy.experimental)": [[1214, "ivy.functional.ivy.experimental.matrix_exp"], [1217, "ivy.functional.ivy.experimental.matrix_exp"]], "static_matrix_exp() (in module ivy.container.container_methods)": [[1214, "ivy.container.container_methods.static_matrix_exp"], [1218, "ivy.container.container_methods.static_matrix_exp"]], "max_pool1d() (in module ivy.array.array_methods)": [[1219, "ivy.array.array_methods.max_pool1d"], [1220, "ivy.array.array_methods.max_pool1d"]], "max_pool1d() (in module ivy.container.container_methods)": [[1219, "ivy.container.container_methods.max_pool1d"], [1221, "ivy.container.container_methods.max_pool1d"]], "max_pool1d() (in module ivy.functional.ivy.experimental)": [[1219, "ivy.functional.ivy.experimental.max_pool1d"], [1222, "ivy.functional.ivy.experimental.max_pool1d"]], "static_max_pool1d() (in module ivy.container.container_methods)": [[1219, "ivy.container.container_methods.static_max_pool1d"], [1223, "ivy.container.container_methods.static_max_pool1d"]], "max_pool2d() (in module ivy.array.array_methods)": [[1224, "ivy.array.array_methods.max_pool2d"], [1225, "ivy.array.array_methods.max_pool2d"]], "max_pool2d() (in module ivy.container.container_methods)": [[1224, "ivy.container.container_methods.max_pool2d"], [1226, "ivy.container.container_methods.max_pool2d"]], "max_pool2d() (in module ivy.functional.ivy.experimental)": [[1224, "ivy.functional.ivy.experimental.max_pool2d"], [1227, "ivy.functional.ivy.experimental.max_pool2d"]], "static_max_pool2d() (in module ivy.container.container_methods)": [[1224, "ivy.container.container_methods.static_max_pool2d"], [1228, "ivy.container.container_methods.static_max_pool2d"]], "max_pool3d() (in module ivy.array.array_methods)": [[1229, "ivy.array.array_methods.max_pool3d"], [1230, "ivy.array.array_methods.max_pool3d"]], "max_pool3d() (in module ivy.container.container_methods)": [[1229, "ivy.container.container_methods.max_pool3d"], [1231, "ivy.container.container_methods.max_pool3d"]], "max_pool3d() (in module ivy.functional.ivy.experimental)": [[1229, "ivy.functional.ivy.experimental.max_pool3d"], [1232, "ivy.functional.ivy.experimental.max_pool3d"]], "static_max_pool3d() (in module ivy.container.container_methods)": [[1229, "ivy.container.container_methods.static_max_pool3d"], [1233, "ivy.container.container_methods.static_max_pool3d"]], "median() (in module ivy.array.array_methods)": [[1234, "ivy.array.array_methods.median"], [1235, "ivy.array.array_methods.median"]], "median() (in module ivy.container.container_methods)": [[1234, "ivy.container.container_methods.median"], [1236, "ivy.container.container_methods.median"]], "median() (in module ivy.functional.ivy.experimental)": [[1234, "ivy.functional.ivy.experimental.median"], [1237, "ivy.functional.ivy.experimental.median"]], "static_median() (in module ivy.container.container_methods)": [[1234, "ivy.container.container_methods.static_median"], [1238, "ivy.container.container_methods.static_median"]], "ivy.functional.ivy.experimental.meta": [[1239, "module-ivy.functional.ivy.experimental.meta"]], "moveaxis() (in module ivy.array.array_methods)": [[1240, "ivy.array.array_methods.moveaxis"], [1241, "ivy.array.array_methods.moveaxis"]], "moveaxis() (in module ivy.container.container_methods)": [[1240, "ivy.container.container_methods.moveaxis"], [1242, "ivy.container.container_methods.moveaxis"]], "moveaxis() (in module ivy.functional.ivy.experimental)": [[1240, "ivy.functional.ivy.experimental.moveaxis"], [1243, "ivy.functional.ivy.experimental.moveaxis"]], "static_moveaxis() (in module ivy.container.container_methods)": [[1240, "ivy.container.container_methods.static_moveaxis"], [1244, "ivy.container.container_methods.static_moveaxis"]], "msort() (in module ivy.array.array_methods)": [[1245, "ivy.array.array_methods.msort"], [1246, "ivy.array.array_methods.msort"]], "msort() (in module ivy.container.container_methods)": [[1245, "ivy.container.container_methods.msort"], [1247, "ivy.container.container_methods.msort"]], "msort() (in module ivy.functional.ivy.experimental)": [[1245, "ivy.functional.ivy.experimental.msort"], [1248, "ivy.functional.ivy.experimental.msort"]], "static_msort() (in module ivy.container.container_methods)": [[1245, "ivy.container.container_methods.static_msort"], [1249, "ivy.container.container_methods.static_msort"]], "multi_dot() (in module ivy.functional.ivy.experimental)": [[1250, "ivy.functional.ivy.experimental.multi_dot"]], "nan_to_num() (in module ivy.array.array_methods)": [[1251, "ivy.array.array_methods.nan_to_num"], [1252, "ivy.array.array_methods.nan_to_num"]], "nan_to_num() (in module ivy.container.container_methods)": [[1251, "ivy.container.container_methods.nan_to_num"], [1253, "ivy.container.container_methods.nan_to_num"]], "nan_to_num() (in module ivy.functional.ivy.experimental)": [[1251, "ivy.functional.ivy.experimental.nan_to_num"], [1254, "ivy.functional.ivy.experimental.nan_to_num"]], "static_nan_to_num() (in module ivy.container.container_methods)": [[1251, "ivy.container.container_methods.static_nan_to_num"], [1255, "ivy.container.container_methods.static_nan_to_num"]], "nanmean() (in module ivy.array.array_methods)": [[1256, "ivy.array.array_methods.nanmean"], [1257, "ivy.array.array_methods.nanmean"]], "nanmean() (in module ivy.container.container_methods)": [[1256, "ivy.container.container_methods.nanmean"], [1258, "ivy.container.container_methods.nanmean"]], "nanmean() (in module ivy.functional.ivy.experimental)": [[1256, "ivy.functional.ivy.experimental.nanmean"], [1259, "ivy.functional.ivy.experimental.nanmean"]], "static_nanmean() (in module ivy.container.container_methods)": [[1256, "ivy.container.container_methods.static_nanmean"], [1260, "ivy.container.container_methods.static_nanmean"]], "nanmedian() (in module ivy.array.array_methods)": [[1261, "ivy.array.array_methods.nanmedian"], [1262, "ivy.array.array_methods.nanmedian"]], "nanmedian() (in module ivy.container.container_methods)": [[1261, "ivy.container.container_methods.nanmedian"], [1263, "ivy.container.container_methods.nanmedian"]], "nanmedian() (in module ivy.functional.ivy.experimental)": [[1261, "ivy.functional.ivy.experimental.nanmedian"], [1264, "ivy.functional.ivy.experimental.nanmedian"]], "static_nanmedian() (in module ivy.container.container_methods)": [[1261, "ivy.container.container_methods.static_nanmedian"], [1265, "ivy.container.container_methods.static_nanmedian"]], "nansum() (in module ivy.array.array_methods)": [[1266, "ivy.array.array_methods.nansum"], [1267, "ivy.array.array_methods.nansum"]], "nansum() (in module ivy.container.container_methods)": [[1266, "ivy.container.container_methods.nansum"], [1268, "ivy.container.container_methods.nansum"]], "nansum() (in module ivy.functional.ivy.experimental)": [[1266, "ivy.functional.ivy.experimental.nansum"], [1269, "ivy.functional.ivy.experimental.nansum"]], "static_nansum() (in module ivy.container.container_methods)": [[1266, "ivy.container.container_methods.static_nansum"], [1270, "ivy.container.container_methods.static_nansum"]], "native_sparse_array() (in module ivy.functional.ivy.experimental)": [[1271, "ivy.functional.ivy.experimental.native_sparse_array"]], "native_sparse_array_to_indices_values_and_shape() (in module ivy.functional.ivy.experimental)": [[1272, "ivy.functional.ivy.experimental.native_sparse_array_to_indices_values_and_shape"]], "ndenumerate() (in module ivy.functional.ivy.experimental)": [[1273, "ivy.functional.ivy.experimental.ndenumerate"]], "ndindex() (in module ivy.functional.ivy.experimental)": [[1274, "ivy.functional.ivy.experimental.ndindex"]], "ivy.functional.ivy.experimental.nest": [[1275, "module-ivy.functional.ivy.experimental.nest"]], "nextafter() (in module ivy.array.array_methods)": [[1276, "ivy.array.array_methods.nextafter"], [1277, "ivy.array.array_methods.nextafter"]], "nextafter() (in module ivy.container.container_methods)": [[1276, "ivy.container.container_methods.nextafter"], [1278, "ivy.container.container_methods.nextafter"]], "nextafter() (in module ivy.functional.ivy.experimental)": [[1276, "ivy.functional.ivy.experimental.nextafter"], [1279, "ivy.functional.ivy.experimental.nextafter"]], "static_nextafter() (in module ivy.container.container_methods)": [[1276, "ivy.container.container_methods.static_nextafter"], [1280, "ivy.container.container_methods.static_nextafter"]], "instance_norm() (in module ivy.functional.ivy.experimental.norms)": [[1281, "ivy.functional.ivy.experimental.norms.instance_norm"], [1282, "ivy.functional.ivy.experimental.norms.instance_norm"]], "ivy.functional.ivy.experimental.norms": [[1281, "module-ivy.functional.ivy.experimental.norms"]], "l2_normalize() (in module ivy.functional.ivy.experimental.norms)": [[1281, "ivy.functional.ivy.experimental.norms.l2_normalize"], [1283, "ivy.functional.ivy.experimental.norms.l2_normalize"]], "lp_normalize() (in module ivy.functional.ivy.experimental.norms)": [[1281, "ivy.functional.ivy.experimental.norms.lp_normalize"], [1284, "ivy.functional.ivy.experimental.norms.lp_normalize"]], "pad() (in module ivy.array.array_methods)": [[1285, "ivy.array.array_methods.pad"], [1286, "ivy.array.array_methods.pad"]], "pad() (in module ivy.container.container_methods)": [[1285, "ivy.container.container_methods.pad"], [1287, "ivy.container.container_methods.pad"]], "pad() (in module ivy.functional.ivy.experimental)": [[1285, "ivy.functional.ivy.experimental.pad"], [1288, "ivy.functional.ivy.experimental.pad"]], "static_pad() (in module ivy.container.container_methods)": [[1285, "ivy.container.container_methods.static_pad"], [1289, "ivy.container.container_methods.static_pad"]], "padding_ceil_mode() (in module ivy.functional.ivy.experimental)": [[1290, "ivy.functional.ivy.experimental.padding_ceil_mode"]], "poisson() (in module ivy.array.array_methods)": [[1291, "ivy.array.array_methods.poisson"], [1292, "ivy.array.array_methods.poisson"]], "poisson() (in module ivy.container.container_methods)": [[1291, "ivy.container.container_methods.poisson"], [1293, "ivy.container.container_methods.poisson"]], "poisson() (in module ivy.functional.ivy.experimental)": [[1291, "ivy.functional.ivy.experimental.poisson"], [1294, "ivy.functional.ivy.experimental.poisson"]], "static_poisson() (in module ivy.container.container_methods)": [[1291, "ivy.container.container_methods.static_poisson"], [1295, "ivy.container.container_methods.static_poisson"]], "prelu() (in module ivy.array.array_methods)": [[1296, "ivy.array.array_methods.prelu"], [1297, "ivy.array.array_methods.prelu"]], "prelu() (in module ivy.container.container_methods)": [[1296, "ivy.container.container_methods.prelu"], [1298, "ivy.container.container_methods.prelu"]], "prelu() (in module ivy.functional.ivy.experimental)": [[1296, "ivy.functional.ivy.experimental.prelu"], [1299, "ivy.functional.ivy.experimental.prelu"]], "static_prelu() (in module ivy.container.container_methods)": [[1296, "ivy.container.container_methods.static_prelu"], [1300, "ivy.container.container_methods.static_prelu"]], "quantile() (in module ivy.array.array_methods)": [[1301, "ivy.array.array_methods.quantile"], [1302, "ivy.array.array_methods.quantile"]], "quantile() (in module ivy.container.container_methods)": [[1301, "ivy.container.container_methods.quantile"], [1303, "ivy.container.container_methods.quantile"]], "quantile() (in module ivy.functional.ivy.experimental)": [[1301, "ivy.functional.ivy.experimental.quantile"], [1304, "ivy.functional.ivy.experimental.quantile"]], "static_quantile() (in module ivy.container.container_methods)": [[1301, "ivy.container.container_methods.static_quantile"], [1305, "ivy.container.container_methods.static_quantile"]], "bernoulli() (in module ivy.functional.ivy.experimental.random)": [[1306, "ivy.functional.ivy.experimental.random.bernoulli"], [1307, "ivy.functional.ivy.experimental.random.bernoulli"]], "beta() (in module ivy.functional.ivy.experimental.random)": [[1306, "ivy.functional.ivy.experimental.random.beta"], [1308, "ivy.functional.ivy.experimental.random.beta"]], "dirichlet() (in module ivy.functional.ivy.experimental.random)": [[1306, "ivy.functional.ivy.experimental.random.dirichlet"], [1309, "ivy.functional.ivy.experimental.random.dirichlet"]], "gamma() (in module ivy.functional.ivy.experimental.random)": [[1306, "ivy.functional.ivy.experimental.random.gamma"], [1310, "ivy.functional.ivy.experimental.random.gamma"]], "ivy.functional.ivy.experimental.random": [[1306, "module-ivy.functional.ivy.experimental.random"]], "poisson() (in module ivy.functional.ivy.experimental.random)": [[1306, "ivy.functional.ivy.experimental.random.poisson"], [1311, "ivy.functional.ivy.experimental.random.poisson"]], "real() (in module ivy.array.array_methods)": [[1312, "ivy.array.array_methods.real"], [1313, "ivy.array.array_methods.real"]], "real() (in module ivy.container.container_methods)": [[1312, "ivy.container.container_methods.real"], [1314, "ivy.container.container_methods.real"]], "real() (in module ivy.functional.ivy.experimental)": [[1312, "ivy.functional.ivy.experimental.real"], [1315, "ivy.functional.ivy.experimental.real"]], "static_real() (in module ivy.container.container_methods)": [[1312, "ivy.container.container_methods.static_real"], [1316, "ivy.container.container_methods.static_real"]], "relu6() (in module ivy.array.array_methods)": [[1317, "ivy.array.array_methods.relu6"], [1318, "ivy.array.array_methods.relu6"]], "relu6() (in module ivy.container.container_methods)": [[1317, "ivy.container.container_methods.relu6"], [1319, "ivy.container.container_methods.relu6"]], "relu6() (in module ivy.functional.ivy.experimental)": [[1317, "ivy.functional.ivy.experimental.relu6"], [1320, "ivy.functional.ivy.experimental.relu6"]], "static_relu6() (in module ivy.container.container_methods)": [[1317, "ivy.container.container_methods.static_relu6"], [1321, "ivy.container.container_methods.static_relu6"]], "rot90() (in module ivy.array.array_methods)": [[1322, "ivy.array.array_methods.rot90"], [1323, "ivy.array.array_methods.rot90"]], "rot90() (in module ivy.container.container_methods)": [[1322, "ivy.container.container_methods.rot90"], [1324, "ivy.container.container_methods.rot90"]], "rot90() (in module ivy.functional.ivy.experimental)": [[1322, "ivy.functional.ivy.experimental.rot90"], [1325, "ivy.functional.ivy.experimental.rot90"]], "static_rot90() (in module ivy.container.container_methods)": [[1322, "ivy.container.container_methods.static_rot90"], [1326, "ivy.container.container_methods.static_rot90"]], "ivy.functional.ivy.experimental.searching": [[1327, "module-ivy.functional.ivy.experimental.searching"]], "ivy.functional.ivy.experimental.set": [[1328, "module-ivy.functional.ivy.experimental.set"]], "signbit() (in module ivy.array.array_methods)": [[1329, "ivy.array.array_methods.signbit"], [1330, "ivy.array.array_methods.signbit"]], "signbit() (in module ivy.container.container_methods)": [[1329, "ivy.container.container_methods.signbit"], [1331, "ivy.container.container_methods.signbit"]], "signbit() (in module ivy.functional.ivy.experimental)": [[1329, "ivy.functional.ivy.experimental.signbit"], [1332, "ivy.functional.ivy.experimental.signbit"]], "static_signbit() (in module ivy.container.container_methods)": [[1329, "ivy.container.container_methods.static_signbit"], [1333, "ivy.container.container_methods.static_signbit"]], "sinc() (in module ivy.array.array_methods)": [[1334, "ivy.array.array_methods.sinc"], [1335, "ivy.array.array_methods.sinc"]], "sinc() (in module ivy.container.container_methods)": [[1334, "ivy.container.container_methods.sinc"], [1336, "ivy.container.container_methods.sinc"]], "sinc() (in module ivy.functional.ivy.experimental)": [[1334, "ivy.functional.ivy.experimental.sinc"], [1337, "ivy.functional.ivy.experimental.sinc"]], "static_sinc() (in module ivy.container.container_methods)": [[1334, "ivy.container.container_methods.static_sinc"], [1338, "ivy.container.container_methods.static_sinc"]], "ivy.functional.ivy.experimental.sorting": [[1339, "module-ivy.functional.ivy.experimental.sorting"]], "lexsort() (in module ivy.functional.ivy.experimental.sorting)": [[1339, "ivy.functional.ivy.experimental.sorting.lexsort"], [1340, "ivy.functional.ivy.experimental.sorting.lexsort"]], "msort() (in module ivy.functional.ivy.experimental.sorting)": [[1339, "ivy.functional.ivy.experimental.sorting.msort"], [1341, "ivy.functional.ivy.experimental.sorting.msort"]], "nativesparsearray (class in ivy.functional.ivy.experimental.sparse_array)": [[1342, "ivy.functional.ivy.experimental.sparse_array.NativeSparseArray"], [1343, "ivy.functional.ivy.experimental.sparse_array.NativeSparseArray"]], "sparsearray (class in ivy.functional.ivy.experimental.sparse_array)": [[1342, "ivy.functional.ivy.experimental.sparse_array.SparseArray"], [1344, "ivy.functional.ivy.experimental.sparse_array.SparseArray"]], "__init__() (ivy.functional.ivy.experimental.sparse_array.sparsearray method)": [[1342, "ivy.functional.ivy.experimental.sparse_array.SparseArray.__init__"], [1344, "ivy.functional.ivy.experimental.sparse_array.SparseArray.__init__"]], "ccol_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1342, "ivy.functional.ivy.experimental.sparse_array.SparseArray.ccol_indices"], [1344, "ivy.functional.ivy.experimental.sparse_array.SparseArray.ccol_indices"]], "col_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1342, "ivy.functional.ivy.experimental.sparse_array.SparseArray.col_indices"], [1344, "ivy.functional.ivy.experimental.sparse_array.SparseArray.col_indices"]], "coo_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1342, "ivy.functional.ivy.experimental.sparse_array.SparseArray.coo_indices"], [1344, "ivy.functional.ivy.experimental.sparse_array.SparseArray.coo_indices"]], "crow_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1342, "ivy.functional.ivy.experimental.sparse_array.SparseArray.crow_indices"], [1344, "ivy.functional.ivy.experimental.sparse_array.SparseArray.crow_indices"]], "data (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1342, "ivy.functional.ivy.experimental.sparse_array.SparseArray.data"], [1344, "ivy.functional.ivy.experimental.sparse_array.SparseArray.data"]], "dense_shape (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1342, "ivy.functional.ivy.experimental.sparse_array.SparseArray.dense_shape"], [1344, "ivy.functional.ivy.experimental.sparse_array.SparseArray.dense_shape"]], "is_ivy_sparse_array() (in module ivy.functional.ivy.experimental.sparse_array)": [[1342, "ivy.functional.ivy.experimental.sparse_array.is_ivy_sparse_array"], [1345, "ivy.functional.ivy.experimental.sparse_array.is_ivy_sparse_array"]], "is_native_sparse_array() (in module ivy.functional.ivy.experimental.sparse_array)": [[1342, "ivy.functional.ivy.experimental.sparse_array.is_native_sparse_array"], [1346, "ivy.functional.ivy.experimental.sparse_array.is_native_sparse_array"]], "ivy.functional.ivy.experimental.sparse_array": [[1342, "module-ivy.functional.ivy.experimental.sparse_array"]], "native_sparse_array() (in module ivy.functional.ivy.experimental.sparse_array)": [[1342, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array"], [1347, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array"]], "native_sparse_array_to_indices_values_and_shape() (in module ivy.functional.ivy.experimental.sparse_array)": [[1342, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array_to_indices_values_and_shape"], [1348, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array_to_indices_values_and_shape"]], "row_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1342, "ivy.functional.ivy.experimental.sparse_array.SparseArray.row_indices"], [1344, "ivy.functional.ivy.experimental.sparse_array.SparseArray.row_indices"]], "to_dense_array() (ivy.functional.ivy.experimental.sparse_array.sparsearray method)": [[1342, "ivy.functional.ivy.experimental.sparse_array.SparseArray.to_dense_array"], [1344, "ivy.functional.ivy.experimental.sparse_array.SparseArray.to_dense_array"]], "values (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1342, "ivy.functional.ivy.experimental.sparse_array.SparseArray.values"], [1344, "ivy.functional.ivy.experimental.sparse_array.SparseArray.values"]], "bincount() (in module ivy.functional.ivy.experimental.statistical)": [[1349, "ivy.functional.ivy.experimental.statistical.bincount"], [1350, "ivy.functional.ivy.experimental.statistical.bincount"]], "corrcoef() (in module ivy.functional.ivy.experimental.statistical)": [[1349, "ivy.functional.ivy.experimental.statistical.corrcoef"], [1351, "ivy.functional.ivy.experimental.statistical.corrcoef"]], "ivy.functional.ivy.experimental.statistical": [[1349, "module-ivy.functional.ivy.experimental.statistical"]], "median() (in module ivy.functional.ivy.experimental.statistical)": [[1349, "ivy.functional.ivy.experimental.statistical.median"], [1352, "ivy.functional.ivy.experimental.statistical.median"]], "nanmean() (in module ivy.functional.ivy.experimental.statistical)": [[1349, "ivy.functional.ivy.experimental.statistical.nanmean"], [1353, "ivy.functional.ivy.experimental.statistical.nanmean"]], "nanmedian() (in module ivy.functional.ivy.experimental.statistical)": [[1349, "ivy.functional.ivy.experimental.statistical.nanmedian"], [1354, "ivy.functional.ivy.experimental.statistical.nanmedian"]], "quantile() (in module ivy.functional.ivy.experimental.statistical)": [[1349, "ivy.functional.ivy.experimental.statistical.quantile"], [1355, "ivy.functional.ivy.experimental.statistical.quantile"]], "unravel_index() (in module ivy.functional.ivy.experimental.statistical)": [[1349, "ivy.functional.ivy.experimental.statistical.unravel_index"], [1356, "ivy.functional.ivy.experimental.statistical.unravel_index"]], "static_take_along_axis() (in module ivy.container.container_methods)": [[1357, "ivy.container.container_methods.static_take_along_axis"], [1358, "ivy.container.container_methods.static_take_along_axis"]], "take_along_axis() (in module ivy.array.array_methods)": [[1357, "ivy.array.array_methods.take_along_axis"], [1359, "ivy.array.array_methods.take_along_axis"]], "take_along_axis() (in module ivy.container.container_methods)": [[1357, "ivy.container.container_methods.take_along_axis"], [1360, "ivy.container.container_methods.take_along_axis"]], "take_along_axis() (in module ivy.functional.ivy.experimental)": [[1357, "ivy.functional.ivy.experimental.take_along_axis"], [1361, "ivy.functional.ivy.experimental.take_along_axis"]], "static_thresholded_relu() (in module ivy.container.container_methods)": [[1362, "ivy.container.container_methods.static_thresholded_relu"], [1363, "ivy.container.container_methods.static_thresholded_relu"]], "thresholded_relu() (in module ivy.array.array_methods)": [[1362, "ivy.array.array_methods.thresholded_relu"], [1364, "ivy.array.array_methods.thresholded_relu"]], "thresholded_relu() (in module ivy.container.container_methods)": [[1362, "ivy.container.container_methods.thresholded_relu"], [1365, "ivy.container.container_methods.thresholded_relu"]], "thresholded_relu() (in module ivy.functional.ivy.experimental)": [[1362, "ivy.functional.ivy.experimental.thresholded_relu"], [1366, "ivy.functional.ivy.experimental.thresholded_relu"]], "static_top_k() (in module ivy.container.container_methods)": [[1367, "ivy.container.container_methods.static_top_k"], [1368, "ivy.container.container_methods.static_top_k"]], "top_k() (in module ivy.array.array_methods)": [[1367, "ivy.array.array_methods.top_k"], [1369, "ivy.array.array_methods.top_k"]], "top_k() (in module ivy.container.container_methods)": [[1367, "ivy.container.container_methods.top_k"], [1370, "ivy.container.container_methods.top_k"]], "top_k() (in module ivy.functional.ivy.experimental)": [[1367, "ivy.functional.ivy.experimental.top_k"], [1371, "ivy.functional.ivy.experimental.top_k"]], "trapz() (in module ivy.array.array_methods)": [[1372, "ivy.array.array_methods.trapz"], [1373, "ivy.array.array_methods.trapz"]], "trapz() (in module ivy.functional.ivy.experimental)": [[1372, "ivy.functional.ivy.experimental.trapz"], [1374, "ivy.functional.ivy.experimental.trapz"]], "static_tril_indices() (in module ivy.container.container_methods)": [[1375, "ivy.container.container_methods.static_tril_indices"], [1376, "ivy.container.container_methods.static_tril_indices"]], "tril_indices() (in module ivy.container.container_methods)": [[1375, "ivy.container.container_methods.tril_indices"], [1377, "ivy.container.container_methods.tril_indices"]], "tril_indices() (in module ivy.functional.ivy.experimental)": [[1375, "ivy.functional.ivy.experimental.tril_indices"], [1378, "ivy.functional.ivy.experimental.tril_indices"]], "static_triu_indices() (in module ivy.container.container_methods)": [[1379, "ivy.container.container_methods.static_triu_indices"], [1380, "ivy.container.container_methods.static_triu_indices"]], "triu_indices() (in module ivy.container.container_methods)": [[1379, "ivy.container.container_methods.triu_indices"], [1381, "ivy.container.container_methods.triu_indices"]], "triu_indices() (in module ivy.functional.ivy.experimental)": [[1379, "ivy.functional.ivy.experimental.triu_indices"], [1382, "ivy.functional.ivy.experimental.triu_indices"]], "static_unravel_index() (in module ivy.container.container_methods)": [[1383, "ivy.container.container_methods.static_unravel_index"], [1384, "ivy.container.container_methods.static_unravel_index"]], "unravel_index() (in module ivy.array.array_methods)": [[1383, "ivy.array.array_methods.unravel_index"], [1385, "ivy.array.array_methods.unravel_index"]], "unravel_index() (in module ivy.container.container_methods)": [[1383, "ivy.container.container_methods.unravel_index"], [1386, "ivy.container.container_methods.unravel_index"]], "unravel_index() (in module ivy.functional.ivy.experimental)": [[1383, "ivy.functional.ivy.experimental.unravel_index"], [1387, "ivy.functional.ivy.experimental.unravel_index"]], "ivy.functional.ivy.experimental.utility": [[1388, "module-ivy.functional.ivy.experimental.utility"]], "static_vorbis_window() (in module ivy.container.container_methods)": [[1389, "ivy.container.container_methods.static_vorbis_window"], [1390, "ivy.container.container_methods.static_vorbis_window"]], "vorbis_window() (in module ivy.container.container_methods)": [[1389, "ivy.container.container_methods.vorbis_window"], [1391, "ivy.container.container_methods.vorbis_window"]], "vorbis_window() (in module ivy.functional.ivy.experimental)": [[1389, "ivy.functional.ivy.experimental.vorbis_window"], [1392, "ivy.functional.ivy.experimental.vorbis_window"]], "static_vsplit() (in module ivy.container.container_methods)": [[1393, "ivy.container.container_methods.static_vsplit"], [1394, "ivy.container.container_methods.static_vsplit"]], "vsplit() (in module ivy.array.array_methods)": [[1393, "ivy.array.array_methods.vsplit"], [1395, "ivy.array.array_methods.vsplit"]], "vsplit() (in module ivy.container.container_methods)": [[1393, "ivy.container.container_methods.vsplit"], [1396, "ivy.container.container_methods.vsplit"]], "vsplit() (in module ivy.functional.ivy.experimental)": [[1393, "ivy.functional.ivy.experimental.vsplit"], [1397, "ivy.functional.ivy.experimental.vsplit"]], "static_vstack() (in module ivy.container.container_methods)": [[1398, "ivy.container.container_methods.static_vstack"], [1399, "ivy.container.container_methods.static_vstack"]], "vstack() (in module ivy.array.array_methods)": [[1398, "ivy.array.array_methods.vstack"], [1400, "ivy.array.array_methods.vstack"]], "vstack() (in module ivy.container.container_methods)": [[1398, "ivy.container.container_methods.vstack"], [1401, "ivy.container.container_methods.vstack"]], "vstack() (in module ivy.functional.ivy.experimental)": [[1398, "ivy.functional.ivy.experimental.vstack"], [1402, "ivy.functional.ivy.experimental.vstack"]], "static_xlogy() (in module ivy.container.container_methods)": [[1403, "ivy.container.container_methods.static_xlogy"], [1404, "ivy.container.container_methods.static_xlogy"]], "xlogy() (in module ivy.array.array_methods)": [[1403, "ivy.array.array_methods.xlogy"], [1405, "ivy.array.array_methods.xlogy"]], "xlogy() (in module ivy.container.container_methods)": [[1403, "ivy.container.container_methods.xlogy"], [1406, "ivy.container.container_methods.xlogy"]], "xlogy() (in module ivy.functional.ivy.experimental)": [[1403, "ivy.functional.ivy.experimental.xlogy"], [1407, "ivy.functional.ivy.experimental.xlogy"]], "static_zeta() (in module ivy.container.container_methods)": [[1408, "ivy.container.container_methods.static_zeta"], [1409, "ivy.container.container_methods.static_zeta"]], "zeta() (in module ivy.array.array_methods)": [[1408, "ivy.array.array_methods.zeta"], [1410, "ivy.array.array_methods.zeta"]], "zeta() (in module ivy.container.container_methods)": [[1408, "ivy.container.container_methods.zeta"], [1411, "ivy.container.container_methods.zeta"]], "zeta() (in module ivy.functional.ivy.experimental)": [[1408, "ivy.functional.ivy.experimental.zeta"], [1412, "ivy.functional.ivy.experimental.zeta"]], "all_equal() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.all_equal"], [1415, "ivy.functional.ivy.general.all_equal"], [1418, "ivy.functional.ivy.general.all_equal"]], "arg_info() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.arg_info"], [1420, "ivy.functional.ivy.general.arg_info"]], "arg_names() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.arg_names"], [1421, "ivy.functional.ivy.general.arg_names"]], "array_equal() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.array_equal"], [1422, "ivy.functional.ivy.general.array_equal"], [1425, "ivy.functional.ivy.general.array_equal"]], "assert_supports_inplace() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.assert_supports_inplace"], [1427, "ivy.functional.ivy.general.assert_supports_inplace"], [1430, "ivy.functional.ivy.general.assert_supports_inplace"]], "cache_fn() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.cache_fn"], [1432, "ivy.functional.ivy.general.cache_fn"]], "clip_matrix_norm() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.clip_matrix_norm"], [1433, "ivy.functional.ivy.general.clip_matrix_norm"], [1436, "ivy.functional.ivy.general.clip_matrix_norm"]], "clip_vector_norm() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.clip_vector_norm"], [1438, "ivy.functional.ivy.general.clip_vector_norm"], [1441, "ivy.functional.ivy.general.clip_vector_norm"]], "container_types() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.container_types"], [1443, "ivy.functional.ivy.general.container_types"]], "current_backend_str() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.current_backend_str"], [1444, "ivy.functional.ivy.general.current_backend_str"]], "default() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.default"], [1445, "ivy.functional.ivy.general.default"], [1447, "ivy.functional.ivy.general.default"]], "einops_rearrange() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.einops_rearrange"], [1448, "ivy.functional.ivy.general.einops_rearrange"], [1451, "ivy.functional.ivy.general.einops_rearrange"]], "einops_reduce() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.einops_reduce"], [1453, "ivy.functional.ivy.general.einops_reduce"], [1456, "ivy.functional.ivy.general.einops_reduce"]], "einops_repeat() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.einops_repeat"], [1458, "ivy.functional.ivy.general.einops_repeat"], [1461, "ivy.functional.ivy.general.einops_repeat"]], "exists() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.exists"], [1463, "ivy.functional.ivy.general.exists"], [1465, "ivy.functional.ivy.general.exists"]], "fourier_encode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.fourier_encode"], [1466, "ivy.functional.ivy.general.fourier_encode"], [1469, "ivy.functional.ivy.general.fourier_encode"]], "function_supported_devices_and_dtypes() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.function_supported_devices_and_dtypes"], [1471, "ivy.functional.ivy.general.function_supported_devices_and_dtypes"]], "function_unsupported_devices_and_dtypes() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.function_unsupported_devices_and_dtypes"], [1472, "ivy.functional.ivy.general.function_unsupported_devices_and_dtypes"]], "gather() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.gather"], [1473, "ivy.functional.ivy.general.gather"], [1476, "ivy.functional.ivy.general.gather"]], "gather_nd() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.gather_nd"], [1478, "ivy.functional.ivy.general.gather_nd"], [1481, "ivy.functional.ivy.general.gather_nd"]], "get_all_arrays_in_memory() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.get_all_arrays_in_memory"], [1483, "ivy.functional.ivy.general.get_all_arrays_in_memory"]], "get_array_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.get_array_mode"], [1484, "ivy.functional.ivy.general.get_array_mode"]], "get_exception_trace_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.get_exception_trace_mode"], [1485, "ivy.functional.ivy.general.get_exception_trace_mode"]], "get_item() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.get_item"], [1486, "ivy.functional.ivy.general.get_item"]], "get_min_base() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.get_min_base"], [1487, "ivy.functional.ivy.general.get_min_base"]], "get_min_denominator() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.get_min_denominator"], [1488, "ivy.functional.ivy.general.get_min_denominator"]], "get_nestable_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.get_nestable_mode"], [1489, "ivy.functional.ivy.general.get_nestable_mode"]], "get_num_dims() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.get_num_dims"], [1490, "ivy.functional.ivy.general.get_num_dims"], [1493, "ivy.functional.ivy.general.get_num_dims"]], "get_queue_timeout() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.get_queue_timeout"], [1495, "ivy.functional.ivy.general.get_queue_timeout"]], "get_referrers_recursive() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.get_referrers_recursive"], [1496, "ivy.functional.ivy.general.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.get_show_func_wrapper_trace_mode"], [1497, "ivy.functional.ivy.general.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.get_tmp_dir"], [1498, "ivy.functional.ivy.general.get_tmp_dir"]], "has_nans() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.has_nans"], [1499, "ivy.functional.ivy.general.has_nans"], [1502, "ivy.functional.ivy.general.has_nans"]], "inplace_arrays_supported() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.inplace_arrays_supported"], [1504, "ivy.functional.ivy.general.inplace_arrays_supported"]], "inplace_decrement() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.inplace_decrement"], [1505, "ivy.functional.ivy.general.inplace_decrement"], [1508, "ivy.functional.ivy.general.inplace_decrement"]], "inplace_increment() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.inplace_increment"], [1510, "ivy.functional.ivy.general.inplace_increment"], [1513, "ivy.functional.ivy.general.inplace_increment"]], "inplace_update() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.inplace_update"], [1515, "ivy.functional.ivy.general.inplace_update"], [1518, "ivy.functional.ivy.general.inplace_update"]], "inplace_variables_supported() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.inplace_variables_supported"], [1520, "ivy.functional.ivy.general.inplace_variables_supported"]], "is_array() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.is_array"], [1521, "ivy.functional.ivy.general.is_array"], [1524, "ivy.functional.ivy.general.is_array"]], "is_ivy_array() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.is_ivy_array"], [1526, "ivy.functional.ivy.general.is_ivy_array"], [1529, "ivy.functional.ivy.general.is_ivy_array"]], "is_ivy_container() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.is_ivy_container"], [1531, "ivy.functional.ivy.general.is_ivy_container"], [1533, "ivy.functional.ivy.general.is_ivy_container"]], "is_native_array() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.is_native_array"], [1534, "ivy.functional.ivy.general.is_native_array"], [1537, "ivy.functional.ivy.general.is_native_array"]], "isscalar() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.isscalar"], [1539, "ivy.functional.ivy.general.isscalar"]], "ivy.functional.ivy.general": [[1414, "module-ivy.functional.ivy.general"]], "match_kwargs() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.match_kwargs"], [1540, "ivy.functional.ivy.general.match_kwargs"]], "multiprocessing() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.multiprocessing"], [1541, "ivy.functional.ivy.general.multiprocessing"]], "num_arrays_in_memory() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.num_arrays_in_memory"], [1542, "ivy.functional.ivy.general.num_arrays_in_memory"]], "print_all_arrays_in_memory() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.print_all_arrays_in_memory"], [1543, "ivy.functional.ivy.general.print_all_arrays_in_memory"]], "scatter_flat() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.scatter_flat"], [1544, "ivy.functional.ivy.general.scatter_flat"], [1547, "ivy.functional.ivy.general.scatter_flat"]], "scatter_nd() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.scatter_nd"], [1549, "ivy.functional.ivy.general.scatter_nd"], [1552, "ivy.functional.ivy.general.scatter_nd"]], "set_array_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.set_array_mode"], [1554, "ivy.functional.ivy.general.set_array_mode"]], "set_exception_trace_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.set_exception_trace_mode"], [1555, "ivy.functional.ivy.general.set_exception_trace_mode"]], "set_min_base() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.set_min_base"], [1556, "ivy.functional.ivy.general.set_min_base"]], "set_min_denominator() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.set_min_denominator"], [1557, "ivy.functional.ivy.general.set_min_denominator"]], "set_nestable_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.set_nestable_mode"], [1558, "ivy.functional.ivy.general.set_nestable_mode"]], "set_queue_timeout() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.set_queue_timeout"], [1559, "ivy.functional.ivy.general.set_queue_timeout"]], "set_shape_array_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.set_shape_array_mode"], [1560, "ivy.functional.ivy.general.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.set_show_func_wrapper_trace_mode"], [1561, "ivy.functional.ivy.general.set_show_func_wrapper_trace_mode"]], "set_tmp_dir() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.set_tmp_dir"], [1562, "ivy.functional.ivy.general.set_tmp_dir"]], "shape() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.shape"], [1563, "ivy.functional.ivy.general.shape"]], "shape_array_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.shape_array_mode"], [1564, "ivy.functional.ivy.general.shape_array_mode"]], "stable_divide() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.stable_divide"], [1565, "ivy.functional.ivy.general.stable_divide"], [1568, "ivy.functional.ivy.general.stable_divide"]], "stable_pow() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.stable_pow"], [1570, "ivy.functional.ivy.general.stable_pow"], [1573, "ivy.functional.ivy.general.stable_pow"]], "supports_inplace_updates() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.supports_inplace_updates"], [1575, "ivy.functional.ivy.general.supports_inplace_updates"], [1579, "ivy.functional.ivy.general.supports_inplace_updates"]], "to_ivy_shape() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.to_ivy_shape"], [1580, "ivy.functional.ivy.general.to_ivy_shape"]], "to_list() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.to_list"], [1581, "ivy.functional.ivy.general.to_list"], [1584, "ivy.functional.ivy.general.to_list"]], "to_native_shape() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.to_native_shape"], [1585, "ivy.functional.ivy.general.to_native_shape"]], "to_numpy() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.to_numpy"], [1586, "ivy.functional.ivy.general.to_numpy"], [1590, "ivy.functional.ivy.general.to_numpy"]], "to_scalar() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.to_scalar"], [1591, "ivy.functional.ivy.general.to_scalar"], [1595, "ivy.functional.ivy.general.to_scalar"]], "try_else_none() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.try_else_none"], [1596, "ivy.functional.ivy.general.try_else_none"]], "unset_array_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.unset_array_mode"], [1597, "ivy.functional.ivy.general.unset_array_mode"]], "unset_exception_trace_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.unset_exception_trace_mode"], [1598, "ivy.functional.ivy.general.unset_exception_trace_mode"]], "unset_nestable_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.unset_nestable_mode"], [1599, "ivy.functional.ivy.general.unset_nestable_mode"]], "unset_queue_timeout() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.unset_queue_timeout"], [1600, "ivy.functional.ivy.general.unset_queue_timeout"]], "unset_shape_array_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.unset_shape_array_mode"], [1601, "ivy.functional.ivy.general.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.unset_show_func_wrapper_trace_mode"], [1602, "ivy.functional.ivy.general.unset_show_func_wrapper_trace_mode"]], "value_is_nan() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.value_is_nan"], [1603, "ivy.functional.ivy.general.value_is_nan"], [1607, "ivy.functional.ivy.general.value_is_nan"]], "vmap() (in module ivy.functional.ivy.general)": [[1414, "ivy.functional.ivy.general.vmap"], [1608, "ivy.functional.ivy.general.vmap"]], "all_equal() (in module ivy.array.array_methods)": [[1415, "ivy.array.array_methods.all_equal"], [1416, "ivy.array.array_methods.all_equal"]], "all_equal() (in module ivy.container.container_methods)": [[1415, "ivy.container.container_methods.all_equal"], [1417, "ivy.container.container_methods.all_equal"]], "static_all_equal() (in module ivy.container.container_methods)": [[1415, "ivy.container.container_methods.static_all_equal"], [1419, "ivy.container.container_methods.static_all_equal"]], "array_equal() (in module ivy.array.array_methods)": [[1422, "ivy.array.array_methods.array_equal"], [1423, "ivy.array.array_methods.array_equal"]], "array_equal() (in module ivy.container.container_methods)": [[1422, "ivy.container.container_methods.array_equal"], [1424, "ivy.container.container_methods.array_equal"]], "static_array_equal() (in module ivy.container.container_methods)": [[1422, "ivy.container.container_methods.static_array_equal"], [1426, "ivy.container.container_methods.static_array_equal"]], "assert_supports_inplace() (in module ivy.array.array_methods)": [[1427, "ivy.array.array_methods.assert_supports_inplace"], [1428, "ivy.array.array_methods.assert_supports_inplace"]], "assert_supports_inplace() (in module ivy.container.container_methods)": [[1427, "ivy.container.container_methods.assert_supports_inplace"], [1429, "ivy.container.container_methods.assert_supports_inplace"]], "static_assert_supports_inplace() (in module ivy.container.container_methods)": [[1427, "ivy.container.container_methods.static_assert_supports_inplace"], [1431, "ivy.container.container_methods.static_assert_supports_inplace"]], "clip_matrix_norm() (in module ivy.array.array_methods)": [[1433, "ivy.array.array_methods.clip_matrix_norm"], [1434, "ivy.array.array_methods.clip_matrix_norm"]], "clip_matrix_norm() (in module ivy.container.container_methods)": [[1433, "ivy.container.container_methods.clip_matrix_norm"], [1435, "ivy.container.container_methods.clip_matrix_norm"]], "static_clip_matrix_norm() (in module ivy.container.container_methods)": [[1433, "ivy.container.container_methods.static_clip_matrix_norm"], [1437, "ivy.container.container_methods.static_clip_matrix_norm"]], "clip_vector_norm() (in module ivy.array.array_methods)": [[1438, "ivy.array.array_methods.clip_vector_norm"], [1439, "ivy.array.array_methods.clip_vector_norm"]], "clip_vector_norm() (in module ivy.container.container_methods)": [[1438, "ivy.container.container_methods.clip_vector_norm"], [1440, "ivy.container.container_methods.clip_vector_norm"]], "static_clip_vector_norm() (in module ivy.container.container_methods)": [[1438, "ivy.container.container_methods.static_clip_vector_norm"], [1442, "ivy.container.container_methods.static_clip_vector_norm"]], "default() (in module ivy.array.array_methods)": [[1445, "ivy.array.array_methods.default"], [1446, "ivy.array.array_methods.default"]], "einops_rearrange() (in module ivy.array.array_methods)": [[1448, "ivy.array.array_methods.einops_rearrange"], [1449, "ivy.array.array_methods.einops_rearrange"]], "einops_rearrange() (in module ivy.container.container_methods)": [[1448, "ivy.container.container_methods.einops_rearrange"], [1450, "ivy.container.container_methods.einops_rearrange"]], "static_einops_rearrange() (in module ivy.container.container_methods)": [[1448, "ivy.container.container_methods.static_einops_rearrange"], [1452, "ivy.container.container_methods.static_einops_rearrange"]], "einops_reduce() (in module ivy.array.array_methods)": [[1453, "ivy.array.array_methods.einops_reduce"], [1454, "ivy.array.array_methods.einops_reduce"]], "einops_reduce() (in module ivy.container.container_methods)": [[1453, "ivy.container.container_methods.einops_reduce"], [1455, "ivy.container.container_methods.einops_reduce"]], "static_einops_reduce() (in module ivy.container.container_methods)": [[1453, "ivy.container.container_methods.static_einops_reduce"], [1457, "ivy.container.container_methods.static_einops_reduce"]], "einops_repeat() (in module ivy.array.array_methods)": [[1458, "ivy.array.array_methods.einops_repeat"], [1459, "ivy.array.array_methods.einops_repeat"]], "einops_repeat() (in module ivy.container.container_methods)": [[1458, "ivy.container.container_methods.einops_repeat"], [1460, "ivy.container.container_methods.einops_repeat"]], "static_einops_repeat() (in module ivy.container.container_methods)": [[1458, "ivy.container.container_methods.static_einops_repeat"], [1462, "ivy.container.container_methods.static_einops_repeat"]], "exists() (in module ivy.array.array_methods)": [[1463, "ivy.array.array_methods.exists"], [1464, "ivy.array.array_methods.exists"]], "fourier_encode() (in module ivy.array.array_methods)": [[1466, "ivy.array.array_methods.fourier_encode"], [1467, "ivy.array.array_methods.fourier_encode"]], "fourier_encode() (in module ivy.container.container_methods)": [[1466, "ivy.container.container_methods.fourier_encode"], [1468, "ivy.container.container_methods.fourier_encode"]], "static_fourier_encode() (in module ivy.container.container_methods)": [[1466, "ivy.container.container_methods.static_fourier_encode"], [1470, "ivy.container.container_methods.static_fourier_encode"]], "gather() (in module ivy.array.array_methods)": [[1473, "ivy.array.array_methods.gather"], [1474, "ivy.array.array_methods.gather"]], "gather() (in module ivy.container.container_methods)": [[1473, "ivy.container.container_methods.gather"], [1475, "ivy.container.container_methods.gather"]], "static_gather() (in module ivy.container.container_methods)": [[1473, "ivy.container.container_methods.static_gather"], [1477, "ivy.container.container_methods.static_gather"]], "gather_nd() (in module ivy.array.array_methods)": [[1478, "ivy.array.array_methods.gather_nd"], [1479, "ivy.array.array_methods.gather_nd"]], "gather_nd() (in module ivy.container.container_methods)": [[1478, "ivy.container.container_methods.gather_nd"], [1480, "ivy.container.container_methods.gather_nd"]], "static_gather_nd() (in module ivy.container.container_methods)": [[1478, "ivy.container.container_methods.static_gather_nd"], [1482, "ivy.container.container_methods.static_gather_nd"]], "get_num_dims() (in module ivy.array.array_methods)": [[1490, "ivy.array.array_methods.get_num_dims"], [1491, "ivy.array.array_methods.get_num_dims"]], "get_num_dims() (in module ivy.container.container_methods)": [[1490, "ivy.container.container_methods.get_num_dims"], [1492, "ivy.container.container_methods.get_num_dims"]], "static_get_num_dims() (in module ivy.container.container_methods)": [[1490, "ivy.container.container_methods.static_get_num_dims"], [1494, "ivy.container.container_methods.static_get_num_dims"]], "has_nans() (in module ivy.array.array_methods)": [[1499, "ivy.array.array_methods.has_nans"], [1500, "ivy.array.array_methods.has_nans"]], "has_nans() (in module ivy.container.container_methods)": [[1499, "ivy.container.container_methods.has_nans"], [1501, "ivy.container.container_methods.has_nans"]], "static_has_nans() (in module ivy.container.container_methods)": [[1499, "ivy.container.container_methods.static_has_nans"], [1503, "ivy.container.container_methods.static_has_nans"]], "inplace_decrement() (in module ivy.array.array_methods)": [[1505, "ivy.array.array_methods.inplace_decrement"], [1506, "ivy.array.array_methods.inplace_decrement"]], "inplace_decrement() (in module ivy.container.container_methods)": [[1505, "ivy.container.container_methods.inplace_decrement"], [1507, "ivy.container.container_methods.inplace_decrement"]], "static_inplace_decrement() (in module ivy.container.container_methods)": [[1505, "ivy.container.container_methods.static_inplace_decrement"], [1509, "ivy.container.container_methods.static_inplace_decrement"]], "inplace_increment() (in module ivy.array.array_methods)": [[1510, "ivy.array.array_methods.inplace_increment"], [1511, "ivy.array.array_methods.inplace_increment"]], "inplace_increment() (in module ivy.container.container_methods)": [[1510, "ivy.container.container_methods.inplace_increment"], [1512, "ivy.container.container_methods.inplace_increment"]], "static_inplace_increment() (in module ivy.container.container_methods)": [[1510, "ivy.container.container_methods.static_inplace_increment"], [1514, "ivy.container.container_methods.static_inplace_increment"]], "inplace_update() (in module ivy.array.array_methods)": [[1515, "ivy.array.array_methods.inplace_update"], [1516, "ivy.array.array_methods.inplace_update"]], "inplace_update() (in module ivy.container.container_methods)": [[1515, "ivy.container.container_methods.inplace_update"], [1517, "ivy.container.container_methods.inplace_update"]], "static_inplace_update() (in module ivy.container.container_methods)": [[1515, "ivy.container.container_methods.static_inplace_update"], [1519, "ivy.container.container_methods.static_inplace_update"]], "is_array() (in module ivy.array.array_methods)": [[1521, "ivy.array.array_methods.is_array"], [1522, "ivy.array.array_methods.is_array"]], "is_array() (in module ivy.container.container_methods)": [[1521, "ivy.container.container_methods.is_array"], [1523, "ivy.container.container_methods.is_array"]], "static_is_array() (in module ivy.container.container_methods)": [[1521, "ivy.container.container_methods.static_is_array"], [1525, "ivy.container.container_methods.static_is_array"]], "is_ivy_array() (in module ivy.array.array_methods)": [[1526, "ivy.array.array_methods.is_ivy_array"], [1527, "ivy.array.array_methods.is_ivy_array"]], "is_ivy_array() (in module ivy.container.container_methods)": [[1526, "ivy.container.container_methods.is_ivy_array"], [1528, "ivy.container.container_methods.is_ivy_array"]], "static_is_ivy_array() (in module ivy.container.container_methods)": [[1526, "ivy.container.container_methods.static_is_ivy_array"], [1530, "ivy.container.container_methods.static_is_ivy_array"]], "is_ivy_container() (in module ivy.array.array_methods)": [[1531, "ivy.array.array_methods.is_ivy_container"], [1532, "ivy.array.array_methods.is_ivy_container"]], "is_native_array() (in module ivy.array.array_methods)": [[1534, "ivy.array.array_methods.is_native_array"], [1535, "ivy.array.array_methods.is_native_array"]], "is_native_array() (in module ivy.container.container_methods)": [[1534, "ivy.container.container_methods.is_native_array"], [1536, "ivy.container.container_methods.is_native_array"]], "static_is_native_array() (in module ivy.container.container_methods)": [[1534, "ivy.container.container_methods.static_is_native_array"], [1538, "ivy.container.container_methods.static_is_native_array"]], "scatter_flat() (in module ivy.array.array_methods)": [[1544, "ivy.array.array_methods.scatter_flat"], [1545, "ivy.array.array_methods.scatter_flat"]], "scatter_flat() (in module ivy.container.container_methods)": [[1544, "ivy.container.container_methods.scatter_flat"], [1546, "ivy.container.container_methods.scatter_flat"]], "static_scatter_flat() (in module ivy.container.container_methods)": [[1544, "ivy.container.container_methods.static_scatter_flat"], [1548, "ivy.container.container_methods.static_scatter_flat"]], "scatter_nd() (in module ivy.array.array_methods)": [[1549, "ivy.array.array_methods.scatter_nd"], [1550, "ivy.array.array_methods.scatter_nd"]], "scatter_nd() (in module ivy.container.container_methods)": [[1549, "ivy.container.container_methods.scatter_nd"], [1551, "ivy.container.container_methods.scatter_nd"]], "static_scatter_nd() (in module ivy.container.container_methods)": [[1549, "ivy.container.container_methods.static_scatter_nd"], [1553, "ivy.container.container_methods.static_scatter_nd"]], "stable_divide() (in module ivy.array.array_methods)": [[1565, "ivy.array.array_methods.stable_divide"], [1566, "ivy.array.array_methods.stable_divide"]], "stable_divide() (in module ivy.container.container_methods)": [[1565, "ivy.container.container_methods.stable_divide"], [1567, "ivy.container.container_methods.stable_divide"]], "static_stable_divide() (in module ivy.container.container_methods)": [[1565, "ivy.container.container_methods.static_stable_divide"], [1569, "ivy.container.container_methods.static_stable_divide"]], "stable_pow() (in module ivy.array.array_methods)": [[1570, "ivy.array.array_methods.stable_pow"], [1571, "ivy.array.array_methods.stable_pow"]], "stable_pow() (in module ivy.container.container_methods)": [[1570, "ivy.container.container_methods.stable_pow"], [1572, "ivy.container.container_methods.stable_pow"]], "static_stable_pow() (in module ivy.container.container_methods)": [[1570, "ivy.container.container_methods.static_stable_pow"], [1574, "ivy.container.container_methods.static_stable_pow"]], "static_supports_inplace_updates() (in module ivy.container.container_methods)": [[1575, "ivy.container.container_methods.static_supports_inplace_updates"], [1576, "ivy.container.container_methods.static_supports_inplace_updates"]], "supports_inplace_updates() (in module ivy.array.array_methods)": [[1575, "ivy.array.array_methods.supports_inplace_updates"], [1577, "ivy.array.array_methods.supports_inplace_updates"]], "supports_inplace_updates() (in module ivy.container.container_methods)": [[1575, "ivy.container.container_methods.supports_inplace_updates"], [1578, "ivy.container.container_methods.supports_inplace_updates"]], "static_to_list() (in module ivy.container.container_methods)": [[1581, "ivy.container.container_methods.static_to_list"], [1582, "ivy.container.container_methods.static_to_list"]], "to_list() (in module ivy.array.array_methods)": [[1581, "ivy.array.array_methods.to_list"], [1583, "ivy.array.array_methods.to_list"]], "static_to_numpy() (in module ivy.container.container_methods)": [[1586, "ivy.container.container_methods.static_to_numpy"], [1587, "ivy.container.container_methods.static_to_numpy"]], "to_numpy() (in module ivy.array.array_methods)": [[1586, "ivy.array.array_methods.to_numpy"], [1588, "ivy.array.array_methods.to_numpy"]], "to_numpy() (in module ivy.container.container_methods)": [[1586, "ivy.container.container_methods.to_numpy"], [1589, "ivy.container.container_methods.to_numpy"]], "static_to_scalar() (in module ivy.container.container_methods)": [[1591, "ivy.container.container_methods.static_to_scalar"], [1592, "ivy.container.container_methods.static_to_scalar"]], "to_scalar() (in module ivy.array.array_methods)": [[1591, "ivy.array.array_methods.to_scalar"], [1593, "ivy.array.array_methods.to_scalar"]], "to_scalar() (in module ivy.container.container_methods)": [[1591, "ivy.container.container_methods.to_scalar"], [1594, "ivy.container.container_methods.to_scalar"]], "static_value_is_nan() (in module ivy.container.container_methods)": [[1603, "ivy.container.container_methods.static_value_is_nan"], [1604, "ivy.container.container_methods.static_value_is_nan"]], "value_is_nan() (in module ivy.array.array_methods)": [[1603, "ivy.array.array_methods.value_is_nan"], [1605, "ivy.array.array_methods.value_is_nan"]], "value_is_nan() (in module ivy.container.container_methods)": [[1603, "ivy.container.container_methods.value_is_nan"], [1606, "ivy.container.container_methods.value_is_nan"]], "gradienttracking (class in ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.GradientTracking"], [1610, "ivy.functional.ivy.gradients.GradientTracking"]], "__init__() (ivy.functional.ivy.gradients.gradienttracking method)": [[1609, "ivy.functional.ivy.gradients.GradientTracking.__init__"], [1610, "ivy.functional.ivy.gradients.GradientTracking.__init__"]], "adam_step() (in module ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.adam_step"], [1611, "ivy.functional.ivy.gradients.adam_step"], [1614, "ivy.functional.ivy.gradients.adam_step"]], "adam_update() (in module ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.adam_update"], [1615, "ivy.functional.ivy.gradients.adam_update"], [1618, "ivy.functional.ivy.gradients.adam_update"]], "execute_with_gradients() (in module ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.execute_with_gradients"], [1619, "ivy.functional.ivy.gradients.execute_with_gradients"]], "grad() (in module ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.grad"], [1620, "ivy.functional.ivy.gradients.grad"]], "gradient_descent_update() (in module ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.gradient_descent_update"], [1621, "ivy.functional.ivy.gradients.gradient_descent_update"], [1624, "ivy.functional.ivy.gradients.gradient_descent_update"]], "ivy.functional.ivy.gradients": [[1609, "module-ivy.functional.ivy.gradients"]], "jac() (in module ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.jac"], [1625, "ivy.functional.ivy.gradients.jac"]], "lamb_update() (in module ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.lamb_update"], [1626, "ivy.functional.ivy.gradients.lamb_update"], [1629, "ivy.functional.ivy.gradients.lamb_update"]], "lars_update() (in module ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.lars_update"], [1630, "ivy.functional.ivy.gradients.lars_update"], [1633, "ivy.functional.ivy.gradients.lars_update"]], "optimizer_update() (in module ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.optimizer_update"], [1634, "ivy.functional.ivy.gradients.optimizer_update"], [1637, "ivy.functional.ivy.gradients.optimizer_update"]], "set_with_grads() (in module ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.set_with_grads"], [1638, "ivy.functional.ivy.gradients.set_with_grads"]], "stop_gradient() (in module ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.stop_gradient"], [1639, "ivy.functional.ivy.gradients.stop_gradient"], [1643, "ivy.functional.ivy.gradients.stop_gradient"]], "unset_with_grads() (in module ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.unset_with_grads"], [1644, "ivy.functional.ivy.gradients.unset_with_grads"]], "value_and_grad() (in module ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.value_and_grad"], [1645, "ivy.functional.ivy.gradients.value_and_grad"]], "with_grads() (in module ivy.functional.ivy.gradients)": [[1609, "ivy.functional.ivy.gradients.with_grads"], [1646, "ivy.functional.ivy.gradients.with_grads"]], "adam_step() (in module ivy.array.array_methods)": [[1611, "ivy.array.array_methods.adam_step"], [1612, "ivy.array.array_methods.adam_step"]], "adam_step() (in module ivy.container.container_methods)": [[1611, "ivy.container.container_methods.adam_step"], [1613, "ivy.container.container_methods.adam_step"]], "adam_update() (in module ivy.array.array_methods)": [[1615, "ivy.array.array_methods.adam_update"], [1616, "ivy.array.array_methods.adam_update"]], "adam_update() (in module ivy.container.container_methods)": [[1615, "ivy.container.container_methods.adam_update"], [1617, "ivy.container.container_methods.adam_update"]], "gradient_descent_update() (in module ivy.array.array_methods)": [[1621, "ivy.array.array_methods.gradient_descent_update"], [1622, "ivy.array.array_methods.gradient_descent_update"]], "gradient_descent_update() (in module ivy.container.container_methods)": [[1621, "ivy.container.container_methods.gradient_descent_update"], [1623, "ivy.container.container_methods.gradient_descent_update"]], "lamb_update() (in module ivy.array.array_methods)": [[1626, "ivy.array.array_methods.lamb_update"], [1627, "ivy.array.array_methods.lamb_update"]], "lamb_update() (in module ivy.container.container_methods)": [[1626, "ivy.container.container_methods.lamb_update"], [1628, "ivy.container.container_methods.lamb_update"]], "lars_update() (in module ivy.array.array_methods)": [[1630, "ivy.array.array_methods.lars_update"], [1631, "ivy.array.array_methods.lars_update"]], "lars_update() (in module ivy.container.container_methods)": [[1630, "ivy.container.container_methods.lars_update"], [1632, "ivy.container.container_methods.lars_update"]], "optimizer_update() (in module ivy.array.array_methods)": [[1634, "ivy.array.array_methods.optimizer_update"], [1635, "ivy.array.array_methods.optimizer_update"]], "optimizer_update() (in module ivy.container.container_methods)": [[1634, "ivy.container.container_methods.optimizer_update"], [1636, "ivy.container.container_methods.optimizer_update"]], "static_stop_gradient() (in module ivy.container.container_methods)": [[1639, "ivy.container.container_methods.static_stop_gradient"], [1640, "ivy.container.container_methods.static_stop_gradient"]], "stop_gradient() (in module ivy.array.array_methods)": [[1639, "ivy.array.array_methods.stop_gradient"], [1641, "ivy.array.array_methods.stop_gradient"]], "stop_gradient() (in module ivy.container.container_methods)": [[1639, "ivy.container.container_methods.stop_gradient"], [1642, "ivy.container.container_methods.stop_gradient"]], "conv() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.conv"], [1648, "ivy.functional.ivy.layers.conv"]], "conv1d() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.conv1d"], [1649, "ivy.functional.ivy.layers.conv1d"], [1652, "ivy.functional.ivy.layers.conv1d"]], "conv1d_transpose() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.conv1d_transpose"], [1654, "ivy.functional.ivy.layers.conv1d_transpose"], [1657, "ivy.functional.ivy.layers.conv1d_transpose"]], "conv2d() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.conv2d"], [1659, "ivy.functional.ivy.layers.conv2d"], [1662, "ivy.functional.ivy.layers.conv2d"]], "conv2d_transpose() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.conv2d_transpose"], [1664, "ivy.functional.ivy.layers.conv2d_transpose"], [1667, "ivy.functional.ivy.layers.conv2d_transpose"]], "conv3d() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.conv3d"], [1669, "ivy.functional.ivy.layers.conv3d"], [1672, "ivy.functional.ivy.layers.conv3d"]], "conv3d_transpose() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.conv3d_transpose"], [1674, "ivy.functional.ivy.layers.conv3d_transpose"], [1677, "ivy.functional.ivy.layers.conv3d_transpose"]], "conv_general_dilated() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.conv_general_dilated"], [1679, "ivy.functional.ivy.layers.conv_general_dilated"]], "conv_general_transpose() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.conv_general_transpose"], [1680, "ivy.functional.ivy.layers.conv_general_transpose"]], "depthwise_conv2d() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.depthwise_conv2d"], [1681, "ivy.functional.ivy.layers.depthwise_conv2d"], [1684, "ivy.functional.ivy.layers.depthwise_conv2d"]], "dropout() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.dropout"], [1686, "ivy.functional.ivy.layers.dropout"], [1689, "ivy.functional.ivy.layers.dropout"]], "ivy.functional.ivy.layers": [[1647, "module-ivy.functional.ivy.layers"]], "linear() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.linear"], [1691, "ivy.functional.ivy.layers.linear"], [1694, "ivy.functional.ivy.layers.linear"]], "lstm_update() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.lstm_update"], [1696, "ivy.functional.ivy.layers.lstm_update"], [1699, "ivy.functional.ivy.layers.lstm_update"]], "multi_head_attention() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.multi_head_attention"], [1701, "ivy.functional.ivy.layers.multi_head_attention"], [1704, "ivy.functional.ivy.layers.multi_head_attention"]], "scaled_dot_product_attention() (in module ivy.functional.ivy.layers)": [[1647, "ivy.functional.ivy.layers.scaled_dot_product_attention"], [1706, "ivy.functional.ivy.layers.scaled_dot_product_attention"], [1709, "ivy.functional.ivy.layers.scaled_dot_product_attention"]], "conv1d() (in module ivy.array.array_methods)": [[1649, "ivy.array.array_methods.conv1d"], [1650, "ivy.array.array_methods.conv1d"]], "conv1d() (in module ivy.container.container_methods)": [[1649, "ivy.container.container_methods.conv1d"], [1651, "ivy.container.container_methods.conv1d"]], "static_conv1d() (in module ivy.container.container_methods)": [[1649, "ivy.container.container_methods.static_conv1d"], [1653, "ivy.container.container_methods.static_conv1d"]], "conv1d_transpose() (in module ivy.array.array_methods)": [[1654, "ivy.array.array_methods.conv1d_transpose"], [1655, "ivy.array.array_methods.conv1d_transpose"]], "conv1d_transpose() (in module ivy.container.container_methods)": [[1654, "ivy.container.container_methods.conv1d_transpose"], [1656, "ivy.container.container_methods.conv1d_transpose"]], "static_conv1d_transpose() (in module ivy.container.container_methods)": [[1654, "ivy.container.container_methods.static_conv1d_transpose"], [1658, "ivy.container.container_methods.static_conv1d_transpose"]], "conv2d() (in module ivy.array.array_methods)": [[1659, "ivy.array.array_methods.conv2d"], [1660, "ivy.array.array_methods.conv2d"]], "conv2d() (in module ivy.container.container_methods)": [[1659, "ivy.container.container_methods.conv2d"], [1661, "ivy.container.container_methods.conv2d"]], "static_conv2d() (in module ivy.container.container_methods)": [[1659, "ivy.container.container_methods.static_conv2d"], [1663, "ivy.container.container_methods.static_conv2d"]], "conv2d_transpose() (in module ivy.array.array_methods)": [[1664, "ivy.array.array_methods.conv2d_transpose"], [1665, "ivy.array.array_methods.conv2d_transpose"]], "conv2d_transpose() (in module ivy.container.container_methods)": [[1664, "ivy.container.container_methods.conv2d_transpose"], [1666, "ivy.container.container_methods.conv2d_transpose"]], "static_conv2d_transpose() (in module ivy.container.container_methods)": [[1664, "ivy.container.container_methods.static_conv2d_transpose"], [1668, "ivy.container.container_methods.static_conv2d_transpose"]], "conv3d() (in module ivy.array.array_methods)": [[1669, "ivy.array.array_methods.conv3d"], [1670, "ivy.array.array_methods.conv3d"]], "conv3d() (in module ivy.container.container_methods)": [[1669, "ivy.container.container_methods.conv3d"], [1671, "ivy.container.container_methods.conv3d"]], "static_conv3d() (in module ivy.container.container_methods)": [[1669, "ivy.container.container_methods.static_conv3d"], [1673, "ivy.container.container_methods.static_conv3d"]], "conv3d_transpose() (in module ivy.array.array_methods)": [[1674, "ivy.array.array_methods.conv3d_transpose"], [1675, "ivy.array.array_methods.conv3d_transpose"]], "conv3d_transpose() (in module ivy.container.container_methods)": [[1674, "ivy.container.container_methods.conv3d_transpose"], [1676, "ivy.container.container_methods.conv3d_transpose"]], "static_conv3d_transpose() (in module ivy.container.container_methods)": [[1674, "ivy.container.container_methods.static_conv3d_transpose"], [1678, "ivy.container.container_methods.static_conv3d_transpose"]], "depthwise_conv2d() (in module ivy.array.array_methods)": [[1681, "ivy.array.array_methods.depthwise_conv2d"], [1682, "ivy.array.array_methods.depthwise_conv2d"]], "depthwise_conv2d() (in module ivy.container.container_methods)": [[1681, "ivy.container.container_methods.depthwise_conv2d"], [1683, "ivy.container.container_methods.depthwise_conv2d"]], "static_depthwise_conv2d() (in module ivy.container.container_methods)": [[1681, "ivy.container.container_methods.static_depthwise_conv2d"], [1685, "ivy.container.container_methods.static_depthwise_conv2d"]], "dropout() (in module ivy.array.array_methods)": [[1686, "ivy.array.array_methods.dropout"], [1687, "ivy.array.array_methods.dropout"]], "dropout() (in module ivy.container.container_methods)": [[1686, "ivy.container.container_methods.dropout"], [1688, "ivy.container.container_methods.dropout"]], "static_dropout() (in module ivy.container.container_methods)": [[1686, "ivy.container.container_methods.static_dropout"], [1690, "ivy.container.container_methods.static_dropout"]], "linear() (in module ivy.array.array_methods)": [[1691, "ivy.array.array_methods.linear"], [1692, "ivy.array.array_methods.linear"]], "linear() (in module ivy.container.container_methods)": [[1691, "ivy.container.container_methods.linear"], [1693, "ivy.container.container_methods.linear"]], "static_linear() (in module ivy.container.container_methods)": [[1691, "ivy.container.container_methods.static_linear"], [1695, "ivy.container.container_methods.static_linear"]], "lstm_update() (in module ivy.array.array_methods)": [[1696, "ivy.array.array_methods.lstm_update"], [1697, "ivy.array.array_methods.lstm_update"]], "lstm_update() (in module ivy.container.container_methods)": [[1696, "ivy.container.container_methods.lstm_update"], [1698, "ivy.container.container_methods.lstm_update"]], "static_lstm_update() (in module ivy.container.container_methods)": [[1696, "ivy.container.container_methods.static_lstm_update"], [1700, "ivy.container.container_methods.static_lstm_update"]], "multi_head_attention() (in module ivy.array.array_methods)": [[1701, "ivy.array.array_methods.multi_head_attention"], [1702, "ivy.array.array_methods.multi_head_attention"]], "multi_head_attention() (in module ivy.container.container_methods)": [[1701, "ivy.container.container_methods.multi_head_attention"], [1703, "ivy.container.container_methods.multi_head_attention"]], "static_multi_head_attention() (in module ivy.container.container_methods)": [[1701, "ivy.container.container_methods.static_multi_head_attention"], [1705, "ivy.container.container_methods.static_multi_head_attention"]], "scaled_dot_product_attention() (in module ivy.array.array_methods)": [[1706, "ivy.array.array_methods.scaled_dot_product_attention"], [1707, "ivy.array.array_methods.scaled_dot_product_attention"]], "scaled_dot_product_attention() (in module ivy.container.container_methods)": [[1706, "ivy.container.container_methods.scaled_dot_product_attention"], [1708, "ivy.container.container_methods.scaled_dot_product_attention"]], "static_scaled_dot_product_attention() (in module ivy.container.container_methods)": [[1706, "ivy.container.container_methods.static_scaled_dot_product_attention"], [1710, "ivy.container.container_methods.static_scaled_dot_product_attention"]], "cholesky() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.cholesky"], [1712, "ivy.functional.ivy.linear_algebra.cholesky"], [1715, "ivy.functional.ivy.linear_algebra.cholesky"]], "cross() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.cross"], [1717, "ivy.functional.ivy.linear_algebra.cross"], [1720, "ivy.functional.ivy.linear_algebra.cross"]], "det() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.det"], [1722, "ivy.functional.ivy.linear_algebra.det"], [1725, "ivy.functional.ivy.linear_algebra.det"]], "diag() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.diag"], [1727, "ivy.functional.ivy.linear_algebra.diag"], [1730, "ivy.functional.ivy.linear_algebra.diag"]], "diagonal() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.diagonal"], [1732, "ivy.functional.ivy.linear_algebra.diagonal"], [1735, "ivy.functional.ivy.linear_algebra.diagonal"]], "eig() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.eig"], [1737, "ivy.functional.ivy.linear_algebra.eig"]], "eigh() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.eigh"], [1738, "ivy.functional.ivy.linear_algebra.eigh"], [1741, "ivy.functional.ivy.linear_algebra.eigh"]], "eigvalsh() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.eigvalsh"], [1743, "ivy.functional.ivy.linear_algebra.eigvalsh"], [1746, "ivy.functional.ivy.linear_algebra.eigvalsh"]], "inner() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.inner"], [1748, "ivy.functional.ivy.linear_algebra.inner"], [1751, "ivy.functional.ivy.linear_algebra.inner"]], "inv() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.inv"], [1753, "ivy.functional.ivy.linear_algebra.inv"], [1756, "ivy.functional.ivy.linear_algebra.inv"]], "ivy.functional.ivy.linear_algebra": [[1711, "module-ivy.functional.ivy.linear_algebra"]], "lu_factor() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.lu_factor"], [1758, "ivy.functional.ivy.linear_algebra.lu_factor"]], "matmul() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.matmul"], [1759, "ivy.functional.ivy.linear_algebra.matmul"], [1762, "ivy.functional.ivy.linear_algebra.matmul"]], "matrix_norm() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.matrix_norm"], [1764, "ivy.functional.ivy.linear_algebra.matrix_norm"], [1767, "ivy.functional.ivy.linear_algebra.matrix_norm"]], "matrix_power() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.matrix_power"], [1769, "ivy.functional.ivy.linear_algebra.matrix_power"], [1772, "ivy.functional.ivy.linear_algebra.matrix_power"]], "matrix_rank() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.matrix_rank"], [1774, "ivy.functional.ivy.linear_algebra.matrix_rank"], [1777, "ivy.functional.ivy.linear_algebra.matrix_rank"]], "matrix_transpose() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.matrix_transpose"], [1779, "ivy.functional.ivy.linear_algebra.matrix_transpose"], [1782, "ivy.functional.ivy.linear_algebra.matrix_transpose"]], "outer() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.outer"], [1784, "ivy.functional.ivy.linear_algebra.outer"], [1787, "ivy.functional.ivy.linear_algebra.outer"]], "pinv() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.pinv"], [1789, "ivy.functional.ivy.linear_algebra.pinv"], [1792, "ivy.functional.ivy.linear_algebra.pinv"]], "qr() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.qr"], [1794, "ivy.functional.ivy.linear_algebra.qr"], [1797, "ivy.functional.ivy.linear_algebra.qr"]], "slogdet() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.slogdet"], [1799, "ivy.functional.ivy.linear_algebra.slogdet"], [1802, "ivy.functional.ivy.linear_algebra.slogdet"]], "solve() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.solve"], [1804, "ivy.functional.ivy.linear_algebra.solve"], [1807, "ivy.functional.ivy.linear_algebra.solve"]], "svd() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.svd"], [1809, "ivy.functional.ivy.linear_algebra.svd"], [1813, "ivy.functional.ivy.linear_algebra.svd"]], "svdvals() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.svdvals"], [1814, "ivy.functional.ivy.linear_algebra.svdvals"], [1818, "ivy.functional.ivy.linear_algebra.svdvals"]], "tensordot() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.tensordot"], [1819, "ivy.functional.ivy.linear_algebra.tensordot"], [1822, "ivy.functional.ivy.linear_algebra.tensordot"]], "tensorsolve() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.tensorsolve"], [1823, "ivy.functional.ivy.linear_algebra.tensorsolve"], [1826, "ivy.functional.ivy.linear_algebra.tensorsolve"]], "trace() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.trace"], [1827, "ivy.functional.ivy.linear_algebra.trace"], [1831, "ivy.functional.ivy.linear_algebra.trace"]], "vander() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.vander"], [1832, "ivy.functional.ivy.linear_algebra.vander"], [1836, "ivy.functional.ivy.linear_algebra.vander"]], "vecdot() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.vecdot"], [1837, "ivy.functional.ivy.linear_algebra.vecdot"], [1841, "ivy.functional.ivy.linear_algebra.vecdot"]], "vector_norm() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.vector_norm"], [1842, "ivy.functional.ivy.linear_algebra.vector_norm"], [1846, "ivy.functional.ivy.linear_algebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (in module ivy.functional.ivy.linear_algebra)": [[1711, "ivy.functional.ivy.linear_algebra.vector_to_skew_symmetric_matrix"], [1847, "ivy.functional.ivy.linear_algebra.vector_to_skew_symmetric_matrix"], [1851, "ivy.functional.ivy.linear_algebra.vector_to_skew_symmetric_matrix"]], "cholesky() (in module ivy.array.array_methods)": [[1712, "ivy.array.array_methods.cholesky"], [1713, "ivy.array.array_methods.cholesky"]], "cholesky() (in module ivy.container.container_methods)": [[1712, "ivy.container.container_methods.cholesky"], [1714, "ivy.container.container_methods.cholesky"]], "static_cholesky() (in module ivy.container.container_methods)": [[1712, "ivy.container.container_methods.static_cholesky"], [1716, "ivy.container.container_methods.static_cholesky"]], "cross() (in module ivy.array.array_methods)": [[1717, "ivy.array.array_methods.cross"], [1718, "ivy.array.array_methods.cross"]], "cross() (in module ivy.container.container_methods)": [[1717, "ivy.container.container_methods.cross"], [1719, "ivy.container.container_methods.cross"]], "static_cross() (in module ivy.container.container_methods)": [[1717, "ivy.container.container_methods.static_cross"], [1721, "ivy.container.container_methods.static_cross"]], "det() (in module ivy.array.array_methods)": [[1722, "ivy.array.array_methods.det"], [1723, "ivy.array.array_methods.det"]], "det() (in module ivy.container.container_methods)": [[1722, "ivy.container.container_methods.det"], [1724, "ivy.container.container_methods.det"]], "static_det() (in module ivy.container.container_methods)": [[1722, "ivy.container.container_methods.static_det"], [1726, "ivy.container.container_methods.static_det"]], "diag() (in module ivy.array.array_methods)": [[1727, "ivy.array.array_methods.diag"], [1728, "ivy.array.array_methods.diag"]], "diag() (in module ivy.container.container_methods)": [[1727, "ivy.container.container_methods.diag"], [1729, "ivy.container.container_methods.diag"]], "static_diag() (in module ivy.container.container_methods)": [[1727, "ivy.container.container_methods.static_diag"], [1731, "ivy.container.container_methods.static_diag"]], "diagonal() (in module ivy.array.array_methods)": [[1732, "ivy.array.array_methods.diagonal"], [1733, "ivy.array.array_methods.diagonal"]], "diagonal() (in module ivy.container.container_methods)": [[1732, "ivy.container.container_methods.diagonal"], [1734, "ivy.container.container_methods.diagonal"]], "static_diagonal() (in module ivy.container.container_methods)": [[1732, "ivy.container.container_methods.static_diagonal"], [1736, "ivy.container.container_methods.static_diagonal"]], "eigh() (in module ivy.array.array_methods)": [[1738, "ivy.array.array_methods.eigh"], [1739, "ivy.array.array_methods.eigh"]], "eigh() (in module ivy.container.container_methods)": [[1738, "ivy.container.container_methods.eigh"], [1740, "ivy.container.container_methods.eigh"]], "static_eigh() (in module ivy.container.container_methods)": [[1738, "ivy.container.container_methods.static_eigh"], [1742, "ivy.container.container_methods.static_eigh"]], "eigvalsh() (in module ivy.array.array_methods)": [[1743, "ivy.array.array_methods.eigvalsh"], [1744, "ivy.array.array_methods.eigvalsh"]], "eigvalsh() (in module ivy.container.container_methods)": [[1743, "ivy.container.container_methods.eigvalsh"], [1745, "ivy.container.container_methods.eigvalsh"]], "static_eigvalsh() (in module ivy.container.container_methods)": [[1743, "ivy.container.container_methods.static_eigvalsh"], [1747, "ivy.container.container_methods.static_eigvalsh"]], "inner() (in module ivy.array.array_methods)": [[1748, "ivy.array.array_methods.inner"], [1749, "ivy.array.array_methods.inner"]], "inner() (in module ivy.container.container_methods)": [[1748, "ivy.container.container_methods.inner"], [1750, "ivy.container.container_methods.inner"]], "static_inner() (in module ivy.container.container_methods)": [[1748, "ivy.container.container_methods.static_inner"], [1752, "ivy.container.container_methods.static_inner"]], "inv() (in module ivy.array.array_methods)": [[1753, "ivy.array.array_methods.inv"], [1754, "ivy.array.array_methods.inv"]], "inv() (in module ivy.container.container_methods)": [[1753, "ivy.container.container_methods.inv"], [1755, "ivy.container.container_methods.inv"]], "static_inv() (in module ivy.container.container_methods)": [[1753, "ivy.container.container_methods.static_inv"], [1757, "ivy.container.container_methods.static_inv"]], "matmul() (in module ivy.array.array_methods)": [[1759, "ivy.array.array_methods.matmul"], [1760, "ivy.array.array_methods.matmul"]], "matmul() (in module ivy.container.container_methods)": [[1759, "ivy.container.container_methods.matmul"], [1761, "ivy.container.container_methods.matmul"]], "static_matmul() (in module ivy.container.container_methods)": [[1759, "ivy.container.container_methods.static_matmul"], [1763, "ivy.container.container_methods.static_matmul"]], "matrix_norm() (in module ivy.array.array_methods)": [[1764, "ivy.array.array_methods.matrix_norm"], [1765, "ivy.array.array_methods.matrix_norm"]], "matrix_norm() (in module ivy.container.container_methods)": [[1764, "ivy.container.container_methods.matrix_norm"], [1766, "ivy.container.container_methods.matrix_norm"]], "static_matrix_norm() (in module ivy.container.container_methods)": [[1764, "ivy.container.container_methods.static_matrix_norm"], [1768, "ivy.container.container_methods.static_matrix_norm"]], "matrix_power() (in module ivy.array.array_methods)": [[1769, "ivy.array.array_methods.matrix_power"], [1770, "ivy.array.array_methods.matrix_power"]], "matrix_power() (in module ivy.container.container_methods)": [[1769, "ivy.container.container_methods.matrix_power"], [1771, "ivy.container.container_methods.matrix_power"]], "static_matrix_power() (in module ivy.container.container_methods)": [[1769, "ivy.container.container_methods.static_matrix_power"], [1773, "ivy.container.container_methods.static_matrix_power"]], "matrix_rank() (in module ivy.array.array_methods)": [[1774, "ivy.array.array_methods.matrix_rank"], [1775, "ivy.array.array_methods.matrix_rank"]], "matrix_rank() (in module ivy.container.container_methods)": [[1774, "ivy.container.container_methods.matrix_rank"], [1776, "ivy.container.container_methods.matrix_rank"]], "static_matrix_rank() (in module ivy.container.container_methods)": [[1774, "ivy.container.container_methods.static_matrix_rank"], [1778, "ivy.container.container_methods.static_matrix_rank"]], "matrix_transpose() (in module ivy.array.array_methods)": [[1779, "ivy.array.array_methods.matrix_transpose"], [1780, "ivy.array.array_methods.matrix_transpose"]], "matrix_transpose() (in module ivy.container.container_methods)": [[1779, "ivy.container.container_methods.matrix_transpose"], [1781, "ivy.container.container_methods.matrix_transpose"]], "static_matrix_transpose() (in module ivy.container.container_methods)": [[1779, "ivy.container.container_methods.static_matrix_transpose"], [1783, "ivy.container.container_methods.static_matrix_transpose"]], "outer() (in module ivy.array.array_methods)": [[1784, "ivy.array.array_methods.outer"], [1785, "ivy.array.array_methods.outer"]], "outer() (in module ivy.container.container_methods)": [[1784, "ivy.container.container_methods.outer"], [1786, "ivy.container.container_methods.outer"]], "static_outer() (in module ivy.container.container_methods)": [[1784, "ivy.container.container_methods.static_outer"], [1788, "ivy.container.container_methods.static_outer"]], "pinv() (in module ivy.array.array_methods)": [[1789, "ivy.array.array_methods.pinv"], [1790, "ivy.array.array_methods.pinv"]], "pinv() (in module ivy.container.container_methods)": [[1789, "ivy.container.container_methods.pinv"], [1791, "ivy.container.container_methods.pinv"]], "static_pinv() (in module ivy.container.container_methods)": [[1789, "ivy.container.container_methods.static_pinv"], [1793, "ivy.container.container_methods.static_pinv"]], "qr() (in module ivy.array.array_methods)": [[1794, "ivy.array.array_methods.qr"], [1795, "ivy.array.array_methods.qr"]], "qr() (in module ivy.container.container_methods)": [[1794, "ivy.container.container_methods.qr"], [1796, "ivy.container.container_methods.qr"]], "static_qr() (in module ivy.container.container_methods)": [[1794, "ivy.container.container_methods.static_qr"], [1798, "ivy.container.container_methods.static_qr"]], "slogdet() (in module ivy.array.array_methods)": [[1799, "ivy.array.array_methods.slogdet"], [1800, "ivy.array.array_methods.slogdet"]], "slogdet() (in module ivy.container.container_methods)": [[1799, "ivy.container.container_methods.slogdet"], [1801, "ivy.container.container_methods.slogdet"]], "static_slogdet() (in module ivy.container.container_methods)": [[1799, "ivy.container.container_methods.static_slogdet"], [1803, "ivy.container.container_methods.static_slogdet"]], "solve() (in module ivy.array.array_methods)": [[1804, "ivy.array.array_methods.solve"], [1805, "ivy.array.array_methods.solve"]], "solve() (in module ivy.container.container_methods)": [[1804, "ivy.container.container_methods.solve"], [1806, "ivy.container.container_methods.solve"]], "static_solve() (in module ivy.container.container_methods)": [[1804, "ivy.container.container_methods.static_solve"], [1808, "ivy.container.container_methods.static_solve"]], "static_svd() (in module ivy.container.container_methods)": [[1809, "ivy.container.container_methods.static_svd"], [1810, "ivy.container.container_methods.static_svd"]], "svd() (in module ivy.array.array_methods)": [[1809, "ivy.array.array_methods.svd"], [1811, "ivy.array.array_methods.svd"]], "svd() (in module ivy.container.container_methods)": [[1809, "ivy.container.container_methods.svd"], [1812, "ivy.container.container_methods.svd"]], "static_svdvals() (in module ivy.container.container_methods)": [[1814, "ivy.container.container_methods.static_svdvals"], [1815, "ivy.container.container_methods.static_svdvals"]], "svdvals() (in module ivy.array.array_methods)": [[1814, "ivy.array.array_methods.svdvals"], [1816, "ivy.array.array_methods.svdvals"]], "svdvals() (in module ivy.container.container_methods)": [[1814, "ivy.container.container_methods.svdvals"], [1817, "ivy.container.container_methods.svdvals"]], "static_tensordot() (in module ivy.container.container_methods)": [[1819, "ivy.container.container_methods.static_tensordot"], [1820, "ivy.container.container_methods.static_tensordot"]], "tensordot() (in module ivy.container.container_methods)": [[1819, "ivy.container.container_methods.tensordot"], [1821, "ivy.container.container_methods.tensordot"]], "tensorsolve() (in module ivy.array.array_methods)": [[1823, "ivy.array.array_methods.tensorsolve"], [1824, "ivy.array.array_methods.tensorsolve"]], "tensorsolve() (in module ivy.container.container_methods)": [[1823, "ivy.container.container_methods.tensorsolve"], [1825, "ivy.container.container_methods.tensorsolve"]], "static_trace() (in module ivy.container.container_methods)": [[1827, "ivy.container.container_methods.static_trace"], [1828, "ivy.container.container_methods.static_trace"]], "trace() (in module ivy.array.array_methods)": [[1827, "ivy.array.array_methods.trace"], [1829, "ivy.array.array_methods.trace"]], "trace() (in module ivy.container.container_methods)": [[1827, "ivy.container.container_methods.trace"], [1830, "ivy.container.container_methods.trace"]], "static_vander() (in module ivy.container.container_methods)": [[1832, "ivy.container.container_methods.static_vander"], [1833, "ivy.container.container_methods.static_vander"]], "vander() (in module ivy.array.array_methods)": [[1832, "ivy.array.array_methods.vander"], [1834, "ivy.array.array_methods.vander"]], "vander() (in module ivy.container.container_methods)": [[1832, "ivy.container.container_methods.vander"], [1835, "ivy.container.container_methods.vander"]], "static_vecdot() (in module ivy.container.container_methods)": [[1837, "ivy.container.container_methods.static_vecdot"], [1838, "ivy.container.container_methods.static_vecdot"]], "vecdot() (in module ivy.array.array_methods)": [[1837, "ivy.array.array_methods.vecdot"], [1839, "ivy.array.array_methods.vecdot"]], "vecdot() (in module ivy.container.container_methods)": [[1837, "ivy.container.container_methods.vecdot"], [1840, "ivy.container.container_methods.vecdot"]], "static_vector_norm() (in module ivy.container.container_methods)": [[1842, "ivy.container.container_methods.static_vector_norm"], [1843, "ivy.container.container_methods.static_vector_norm"]], "vector_norm() (in module ivy.array.array_methods)": [[1842, "ivy.array.array_methods.vector_norm"], [1844, "ivy.array.array_methods.vector_norm"]], "vector_norm() (in module ivy.container.container_methods)": [[1842, "ivy.container.container_methods.vector_norm"], [1845, "ivy.container.container_methods.vector_norm"]], "static_vector_to_skew_symmetric_matrix() (in module ivy.container.container_methods)": [[1847, "ivy.container.container_methods.static_vector_to_skew_symmetric_matrix"], [1848, "ivy.container.container_methods.static_vector_to_skew_symmetric_matrix"]], "vector_to_skew_symmetric_matrix() (in module ivy.array.array_methods)": [[1847, "ivy.array.array_methods.vector_to_skew_symmetric_matrix"], [1849, "ivy.array.array_methods.vector_to_skew_symmetric_matrix"]], "vector_to_skew_symmetric_matrix() (in module ivy.container.container_methods)": [[1847, "ivy.container.container_methods.vector_to_skew_symmetric_matrix"], [1850, "ivy.container.container_methods.vector_to_skew_symmetric_matrix"]], "binary_cross_entropy() (in module ivy.functional.ivy.losses)": [[1852, "ivy.functional.ivy.losses.binary_cross_entropy"], [1853, "ivy.functional.ivy.losses.binary_cross_entropy"], [1856, "ivy.functional.ivy.losses.binary_cross_entropy"]], "cross_entropy() (in module ivy.functional.ivy.losses)": [[1852, "ivy.functional.ivy.losses.cross_entropy"], [1858, "ivy.functional.ivy.losses.cross_entropy"], [1861, "ivy.functional.ivy.losses.cross_entropy"]], "ivy.functional.ivy.losses": [[1852, "module-ivy.functional.ivy.losses"]], "sparse_cross_entropy() (in module ivy.functional.ivy.losses)": [[1852, "ivy.functional.ivy.losses.sparse_cross_entropy"], [1863, "ivy.functional.ivy.losses.sparse_cross_entropy"], [1866, "ivy.functional.ivy.losses.sparse_cross_entropy"]], "binary_cross_entropy() (in module ivy.array.array_methods)": [[1853, "ivy.array.array_methods.binary_cross_entropy"], [1854, "ivy.array.array_methods.binary_cross_entropy"]], "binary_cross_entropy() (in module ivy.container.container_methods)": [[1853, "ivy.container.container_methods.binary_cross_entropy"], [1855, "ivy.container.container_methods.binary_cross_entropy"]], "static_binary_cross_entropy() (in module ivy.container.container_methods)": [[1853, "ivy.container.container_methods.static_binary_cross_entropy"], [1857, "ivy.container.container_methods.static_binary_cross_entropy"]], "cross_entropy() (in module ivy.array.array_methods)": [[1858, "ivy.array.array_methods.cross_entropy"], [1859, "ivy.array.array_methods.cross_entropy"]], "cross_entropy() (in module ivy.container.container_methods)": [[1858, "ivy.container.container_methods.cross_entropy"], [1860, "ivy.container.container_methods.cross_entropy"]], "static_cross_entropy() (in module ivy.container.container_methods)": [[1858, "ivy.container.container_methods.static_cross_entropy"], [1862, "ivy.container.container_methods.static_cross_entropy"]], "sparse_cross_entropy() (in module ivy.array.array_methods)": [[1863, "ivy.array.array_methods.sparse_cross_entropy"], [1864, "ivy.array.array_methods.sparse_cross_entropy"]], "sparse_cross_entropy() (in module ivy.container.container_methods)": [[1863, "ivy.container.container_methods.sparse_cross_entropy"], [1865, "ivy.container.container_methods.sparse_cross_entropy"]], "static_sparse_cross_entropy() (in module ivy.container.container_methods)": [[1863, "ivy.container.container_methods.static_sparse_cross_entropy"], [1867, "ivy.container.container_methods.static_sparse_cross_entropy"]], "clip() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.clip"], [1869, "ivy.functional.ivy.manipulation.clip"], [1872, "ivy.functional.ivy.manipulation.clip"]], "concat() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.concat"], [1874, "ivy.functional.ivy.manipulation.concat"], [1877, "ivy.functional.ivy.manipulation.concat"]], "constant_pad() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.constant_pad"], [1879, "ivy.functional.ivy.manipulation.constant_pad"], [1882, "ivy.functional.ivy.manipulation.constant_pad"]], "expand_dims() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.expand_dims"], [1884, "ivy.functional.ivy.manipulation.expand_dims"], [1887, "ivy.functional.ivy.manipulation.expand_dims"]], "flip() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.flip"], [1889, "ivy.functional.ivy.manipulation.flip"], [1892, "ivy.functional.ivy.manipulation.flip"]], "ivy.functional.ivy.manipulation": [[1868, "module-ivy.functional.ivy.manipulation"]], "permute_dims() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.permute_dims"], [1894, "ivy.functional.ivy.manipulation.permute_dims"], [1897, "ivy.functional.ivy.manipulation.permute_dims"]], "repeat() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.repeat"], [1899, "ivy.functional.ivy.manipulation.repeat"], [1902, "ivy.functional.ivy.manipulation.repeat"]], "reshape() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.reshape"], [1904, "ivy.functional.ivy.manipulation.reshape"], [1907, "ivy.functional.ivy.manipulation.reshape"]], "roll() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.roll"], [1909, "ivy.functional.ivy.manipulation.roll"], [1912, "ivy.functional.ivy.manipulation.roll"]], "split() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.split"], [1914, "ivy.functional.ivy.manipulation.split"], [1917, "ivy.functional.ivy.manipulation.split"]], "squeeze() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.squeeze"], [1919, "ivy.functional.ivy.manipulation.squeeze"], [1922, "ivy.functional.ivy.manipulation.squeeze"]], "stack() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.stack"], [1924, "ivy.functional.ivy.manipulation.stack"], [1927, "ivy.functional.ivy.manipulation.stack"]], "swapaxes() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.swapaxes"], [1929, "ivy.functional.ivy.manipulation.swapaxes"], [1933, "ivy.functional.ivy.manipulation.swapaxes"]], "tile() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.tile"], [1934, "ivy.functional.ivy.manipulation.tile"], [1938, "ivy.functional.ivy.manipulation.tile"]], "unstack() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.unstack"], [1939, "ivy.functional.ivy.manipulation.unstack"], [1943, "ivy.functional.ivy.manipulation.unstack"]], "zero_pad() (in module ivy.functional.ivy.manipulation)": [[1868, "ivy.functional.ivy.manipulation.zero_pad"], [1944, "ivy.functional.ivy.manipulation.zero_pad"], [1948, "ivy.functional.ivy.manipulation.zero_pad"]], "clip() (in module ivy.array.array_methods)": [[1869, "ivy.array.array_methods.clip"], [1870, "ivy.array.array_methods.clip"]], "clip() (in module ivy.container.container_methods)": [[1869, "ivy.container.container_methods.clip"], [1871, "ivy.container.container_methods.clip"]], "static_clip() (in module ivy.container.container_methods)": [[1869, "ivy.container.container_methods.static_clip"], [1873, "ivy.container.container_methods.static_clip"]], "concat() (in module ivy.array.array_methods)": [[1874, "ivy.array.array_methods.concat"], [1875, "ivy.array.array_methods.concat"]], "concat() (in module ivy.container.container_methods)": [[1874, "ivy.container.container_methods.concat"], [1876, "ivy.container.container_methods.concat"]], "static_concat() (in module ivy.container.container_methods)": [[1874, "ivy.container.container_methods.static_concat"], [1878, "ivy.container.container_methods.static_concat"]], "constant_pad() (in module ivy.array.array_methods)": [[1879, "ivy.array.array_methods.constant_pad"], [1880, "ivy.array.array_methods.constant_pad"]], "constant_pad() (in module ivy.container.container_methods)": [[1879, "ivy.container.container_methods.constant_pad"], [1881, "ivy.container.container_methods.constant_pad"]], "static_constant_pad() (in module ivy.container.container_methods)": [[1879, "ivy.container.container_methods.static_constant_pad"], [1883, "ivy.container.container_methods.static_constant_pad"]], "expand_dims() (in module ivy.array.array_methods)": [[1884, "ivy.array.array_methods.expand_dims"], [1885, "ivy.array.array_methods.expand_dims"]], "expand_dims() (in module ivy.container.container_methods)": [[1884, "ivy.container.container_methods.expand_dims"], [1886, "ivy.container.container_methods.expand_dims"]], "static_expand_dims() (in module ivy.container.container_methods)": [[1884, "ivy.container.container_methods.static_expand_dims"], [1888, "ivy.container.container_methods.static_expand_dims"]], "flip() (in module ivy.array.array_methods)": [[1889, "ivy.array.array_methods.flip"], [1890, "ivy.array.array_methods.flip"]], "flip() (in module ivy.container.container_methods)": [[1889, "ivy.container.container_methods.flip"], [1891, "ivy.container.container_methods.flip"]], "static_flip() (in module ivy.container.container_methods)": [[1889, "ivy.container.container_methods.static_flip"], [1893, "ivy.container.container_methods.static_flip"]], "permute_dims() (in module ivy.array.array_methods)": [[1894, "ivy.array.array_methods.permute_dims"], [1895, "ivy.array.array_methods.permute_dims"]], "permute_dims() (in module ivy.container.container_methods)": [[1894, "ivy.container.container_methods.permute_dims"], [1896, "ivy.container.container_methods.permute_dims"]], "static_permute_dims() (in module ivy.container.container_methods)": [[1894, "ivy.container.container_methods.static_permute_dims"], [1898, "ivy.container.container_methods.static_permute_dims"]], "repeat() (in module ivy.array.array_methods)": [[1899, "ivy.array.array_methods.repeat"], [1900, "ivy.array.array_methods.repeat"]], "repeat() (in module ivy.container.container_methods)": [[1899, "ivy.container.container_methods.repeat"], [1901, "ivy.container.container_methods.repeat"]], "static_repeat() (in module ivy.container.container_methods)": [[1899, "ivy.container.container_methods.static_repeat"], [1903, "ivy.container.container_methods.static_repeat"]], "reshape() (in module ivy.array.array_methods)": [[1904, "ivy.array.array_methods.reshape"], [1905, "ivy.array.array_methods.reshape"]], "reshape() (in module ivy.container.container_methods)": [[1904, "ivy.container.container_methods.reshape"], [1906, "ivy.container.container_methods.reshape"]], "static_reshape() (in module ivy.container.container_methods)": [[1904, "ivy.container.container_methods.static_reshape"], [1908, "ivy.container.container_methods.static_reshape"]], "roll() (in module ivy.array.array_methods)": [[1909, "ivy.array.array_methods.roll"], [1910, "ivy.array.array_methods.roll"]], "roll() (in module ivy.container.container_methods)": [[1909, "ivy.container.container_methods.roll"], [1911, "ivy.container.container_methods.roll"]], "static_roll() (in module ivy.container.container_methods)": [[1909, "ivy.container.container_methods.static_roll"], [1913, "ivy.container.container_methods.static_roll"]], "split() (in module ivy.array.array_methods)": [[1914, "ivy.array.array_methods.split"], [1915, "ivy.array.array_methods.split"]], "split() (in module ivy.container.container_methods)": [[1914, "ivy.container.container_methods.split"], [1916, "ivy.container.container_methods.split"]], "static_split() (in module ivy.container.container_methods)": [[1914, "ivy.container.container_methods.static_split"], [1918, "ivy.container.container_methods.static_split"]], "squeeze() (in module ivy.array.array_methods)": [[1919, "ivy.array.array_methods.squeeze"], [1920, "ivy.array.array_methods.squeeze"]], "squeeze() (in module ivy.container.container_methods)": [[1919, "ivy.container.container_methods.squeeze"], [1921, "ivy.container.container_methods.squeeze"]], "static_squeeze() (in module ivy.container.container_methods)": [[1919, "ivy.container.container_methods.static_squeeze"], [1923, "ivy.container.container_methods.static_squeeze"]], "stack() (in module ivy.array.array_methods)": [[1924, "ivy.array.array_methods.stack"], [1925, "ivy.array.array_methods.stack"]], "stack() (in module ivy.container.container_methods)": [[1924, "ivy.container.container_methods.stack"], [1926, "ivy.container.container_methods.stack"]], "static_stack() (in module ivy.container.container_methods)": [[1924, "ivy.container.container_methods.static_stack"], [1928, "ivy.container.container_methods.static_stack"]], "static_swapaxes() (in module ivy.container.container_methods)": [[1929, "ivy.container.container_methods.static_swapaxes"], [1930, "ivy.container.container_methods.static_swapaxes"]], "swapaxes() (in module ivy.array.array_methods)": [[1929, "ivy.array.array_methods.swapaxes"], [1931, "ivy.array.array_methods.swapaxes"]], "swapaxes() (in module ivy.container.container_methods)": [[1929, "ivy.container.container_methods.swapaxes"], [1932, "ivy.container.container_methods.swapaxes"]], "static_tile() (in module ivy.container.container_methods)": [[1934, "ivy.container.container_methods.static_tile"], [1935, "ivy.container.container_methods.static_tile"]], "tile() (in module ivy.array.array_methods)": [[1934, "ivy.array.array_methods.tile"], [1936, "ivy.array.array_methods.tile"]], "tile() (in module ivy.container.container_methods)": [[1934, "ivy.container.container_methods.tile"], [1937, "ivy.container.container_methods.tile"]], "static_unstack() (in module ivy.container.container_methods)": [[1939, "ivy.container.container_methods.static_unstack"], [1940, "ivy.container.container_methods.static_unstack"]], "unstack() (in module ivy.array.array_methods)": [[1939, "ivy.array.array_methods.unstack"], [1941, "ivy.array.array_methods.unstack"]], "unstack() (in module ivy.container.container_methods)": [[1939, "ivy.container.container_methods.unstack"], [1942, "ivy.container.container_methods.unstack"]], "static_zero_pad() (in module ivy.container.container_methods)": [[1944, "ivy.container.container_methods.static_zero_pad"], [1945, "ivy.container.container_methods.static_zero_pad"]], "zero_pad() (in module ivy.array.array_methods)": [[1944, "ivy.array.array_methods.zero_pad"], [1946, "ivy.array.array_methods.zero_pad"]], "zero_pad() (in module ivy.container.container_methods)": [[1944, "ivy.container.container_methods.zero_pad"], [1947, "ivy.container.container_methods.zero_pad"]], "fomaml_step() (in module ivy.functional.ivy.meta)": [[1949, "ivy.functional.ivy.meta.fomaml_step"], [1950, "ivy.functional.ivy.meta.fomaml_step"]], "ivy.functional.ivy.meta": [[1949, "module-ivy.functional.ivy.meta"]], "maml_step() (in module ivy.functional.ivy.meta)": [[1949, "ivy.functional.ivy.meta.maml_step"], [1951, "ivy.functional.ivy.meta.maml_step"]], "reptile_step() (in module ivy.functional.ivy.meta)": [[1949, "ivy.functional.ivy.meta.reptile_step"], [1952, "ivy.functional.ivy.meta.reptile_step"]], "all_nested_indices() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.all_nested_indices"], [1954, "ivy.functional.ivy.nest.all_nested_indices"]], "copy_nest() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.copy_nest"], [1955, "ivy.functional.ivy.nest.copy_nest"]], "duplicate_array_index_chains() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.duplicate_array_index_chains"], [1956, "ivy.functional.ivy.nest.duplicate_array_index_chains"]], "index_nest() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.index_nest"], [1957, "ivy.functional.ivy.nest.index_nest"]], "insert_into_nest_at_index() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.insert_into_nest_at_index"], [1958, "ivy.functional.ivy.nest.insert_into_nest_at_index"]], "insert_into_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.insert_into_nest_at_indices"], [1959, "ivy.functional.ivy.nest.insert_into_nest_at_indices"]], "ivy.functional.ivy.nest": [[1953, "module-ivy.functional.ivy.nest"]], "map() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.map"], [1960, "ivy.functional.ivy.nest.map"]], "map_nest_at_index() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.map_nest_at_index"], [1961, "ivy.functional.ivy.nest.map_nest_at_index"]], "map_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.map_nest_at_indices"], [1962, "ivy.functional.ivy.nest.map_nest_at_indices"]], "multi_index_nest() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.multi_index_nest"], [1963, "ivy.functional.ivy.nest.multi_index_nest"]], "nested_any() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.nested_any"], [1964, "ivy.functional.ivy.nest.nested_any"]], "nested_argwhere() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.nested_argwhere"], [1965, "ivy.functional.ivy.nest.nested_argwhere"]], "nested_map() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.nested_map"], [1966, "ivy.functional.ivy.nest.nested_map"]], "nested_multi_map() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.nested_multi_map"], [1967, "ivy.functional.ivy.nest.nested_multi_map"]], "prune_empty() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.prune_empty"], [1968, "ivy.functional.ivy.nest.prune_empty"]], "prune_nest_at_index() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.prune_nest_at_index"], [1969, "ivy.functional.ivy.nest.prune_nest_at_index"]], "prune_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.prune_nest_at_indices"], [1970, "ivy.functional.ivy.nest.prune_nest_at_indices"]], "set_nest_at_index() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.set_nest_at_index"], [1971, "ivy.functional.ivy.nest.set_nest_at_index"]], "set_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1953, "ivy.functional.ivy.nest.set_nest_at_indices"], [1972, "ivy.functional.ivy.nest.set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1973, "module-ivy.functional.ivy.norms"]], "layer_norm() (in module ivy.functional.ivy.norms)": [[1973, "ivy.functional.ivy.norms.layer_norm"], [1974, "ivy.functional.ivy.norms.layer_norm"], [1977, "ivy.functional.ivy.norms.layer_norm"]], "layer_norm() (in module ivy.array.array_methods)": [[1974, "ivy.array.array_methods.layer_norm"], [1975, "ivy.array.array_methods.layer_norm"]], "layer_norm() (in module ivy.container.container_methods)": [[1974, "ivy.container.container_methods.layer_norm"], [1976, "ivy.container.container_methods.layer_norm"]], "ivy.functional.ivy.random": [[1978, "module-ivy.functional.ivy.random"]], "multinomial() (in module ivy.functional.ivy.random)": [[1978, "ivy.functional.ivy.random.multinomial"], [1979, "ivy.functional.ivy.random.multinomial"], [1982, "ivy.functional.ivy.random.multinomial"]], "randint() (in module ivy.functional.ivy.random)": [[1978, "ivy.functional.ivy.random.randint"], [1984, "ivy.functional.ivy.random.randint"], [1987, "ivy.functional.ivy.random.randint"]], "random_normal() (in module ivy.functional.ivy.random)": [[1978, "ivy.functional.ivy.random.random_normal"], [1989, "ivy.functional.ivy.random.random_normal"], [1992, "ivy.functional.ivy.random.random_normal"]], "random_uniform() (in module ivy.functional.ivy.random)": [[1978, "ivy.functional.ivy.random.random_uniform"], [1994, "ivy.functional.ivy.random.random_uniform"], [1997, "ivy.functional.ivy.random.random_uniform"]], "seed() (in module ivy.functional.ivy.random)": [[1978, "ivy.functional.ivy.random.seed"], [1999, "ivy.functional.ivy.random.seed"]], "shuffle() (in module ivy.functional.ivy.random)": [[1978, "ivy.functional.ivy.random.shuffle"], [2000, "ivy.functional.ivy.random.shuffle"], [2003, "ivy.functional.ivy.random.shuffle"]], "multinomial() (in module ivy.array.array_methods)": [[1979, "ivy.array.array_methods.multinomial"], [1980, "ivy.array.array_methods.multinomial"]], "multinomial() (in module ivy.container.container_methods)": [[1979, "ivy.container.container_methods.multinomial"], [1981, "ivy.container.container_methods.multinomial"]], "static_multinomial() (in module ivy.container.container_methods)": [[1979, "ivy.container.container_methods.static_multinomial"], [1983, "ivy.container.container_methods.static_multinomial"]], "randint() (in module ivy.array.array_methods)": [[1984, "ivy.array.array_methods.randint"], [1985, "ivy.array.array_methods.randint"]], "randint() (in module ivy.container.container_methods)": [[1984, "ivy.container.container_methods.randint"], [1986, "ivy.container.container_methods.randint"]], "static_randint() (in module ivy.container.container_methods)": [[1984, "ivy.container.container_methods.static_randint"], [1988, "ivy.container.container_methods.static_randint"]], "random_normal() (in module ivy.array.array_methods)": [[1989, "ivy.array.array_methods.random_normal"], [1990, "ivy.array.array_methods.random_normal"]], "random_normal() (in module ivy.container.container_methods)": [[1989, "ivy.container.container_methods.random_normal"], [1991, "ivy.container.container_methods.random_normal"]], "static_random_normal() (in module ivy.container.container_methods)": [[1989, "ivy.container.container_methods.static_random_normal"], [1993, "ivy.container.container_methods.static_random_normal"]], "random_uniform() (in module ivy.array.array_methods)": [[1994, "ivy.array.array_methods.random_uniform"], [1995, "ivy.array.array_methods.random_uniform"]], "random_uniform() (in module ivy.container.container_methods)": [[1994, "ivy.container.container_methods.random_uniform"], [1996, "ivy.container.container_methods.random_uniform"]], "static_random_uniform() (in module ivy.container.container_methods)": [[1994, "ivy.container.container_methods.static_random_uniform"], [1998, "ivy.container.container_methods.static_random_uniform"]], "shuffle() (in module ivy.array.array_methods)": [[2000, "ivy.array.array_methods.shuffle"], [2001, "ivy.array.array_methods.shuffle"]], "shuffle() (in module ivy.container.container_methods)": [[2000, "ivy.container.container_methods.shuffle"], [2002, "ivy.container.container_methods.shuffle"]], "static_shuffle() (in module ivy.container.container_methods)": [[2000, "ivy.container.container_methods.static_shuffle"], [2004, "ivy.container.container_methods.static_shuffle"]], "argmax() (in module ivy.functional.ivy.searching)": [[2005, "ivy.functional.ivy.searching.argmax"], [2006, "ivy.functional.ivy.searching.argmax"], [2009, "ivy.functional.ivy.searching.argmax"]], "argmin() (in module ivy.functional.ivy.searching)": [[2005, "ivy.functional.ivy.searching.argmin"], [2011, "ivy.functional.ivy.searching.argmin"], [2014, "ivy.functional.ivy.searching.argmin"]], "argwhere() (in module ivy.functional.ivy.searching)": [[2005, "ivy.functional.ivy.searching.argwhere"], [2016, "ivy.functional.ivy.searching.argwhere"], [2019, "ivy.functional.ivy.searching.argwhere"]], "ivy.functional.ivy.searching": [[2005, "module-ivy.functional.ivy.searching"]], "nonzero() (in module ivy.functional.ivy.searching)": [[2005, "ivy.functional.ivy.searching.nonzero"], [2021, "ivy.functional.ivy.searching.nonzero"], [2024, "ivy.functional.ivy.searching.nonzero"]], "where() (in module ivy.functional.ivy.searching)": [[2005, "ivy.functional.ivy.searching.where"], [2026, "ivy.functional.ivy.searching.where"], [2030, "ivy.functional.ivy.searching.where"]], "argmax() (in module ivy.array.array_methods)": [[2006, "ivy.array.array_methods.argmax"], [2007, "ivy.array.array_methods.argmax"]], "argmax() (in module ivy.container.container_methods)": [[2006, "ivy.container.container_methods.argmax"], [2008, "ivy.container.container_methods.argmax"]], "static_argmax() (in module ivy.container.container_methods)": [[2006, "ivy.container.container_methods.static_argmax"], [2010, "ivy.container.container_methods.static_argmax"]], "argmin() (in module ivy.array.array_methods)": [[2011, "ivy.array.array_methods.argmin"], [2012, "ivy.array.array_methods.argmin"]], "argmin() (in module ivy.container.container_methods)": [[2011, "ivy.container.container_methods.argmin"], [2013, "ivy.container.container_methods.argmin"]], "static_argmin() (in module ivy.container.container_methods)": [[2011, "ivy.container.container_methods.static_argmin"], [2015, "ivy.container.container_methods.static_argmin"]], "argwhere() (in module ivy.array.array_methods)": [[2016, "ivy.array.array_methods.argwhere"], [2017, "ivy.array.array_methods.argwhere"]], "argwhere() (in module ivy.container.container_methods)": [[2016, "ivy.container.container_methods.argwhere"], [2018, "ivy.container.container_methods.argwhere"]], "static_argwhere() (in module ivy.container.container_methods)": [[2016, "ivy.container.container_methods.static_argwhere"], [2020, "ivy.container.container_methods.static_argwhere"]], "nonzero() (in module ivy.array.array_methods)": [[2021, "ivy.array.array_methods.nonzero"], [2022, "ivy.array.array_methods.nonzero"]], "nonzero() (in module ivy.container.container_methods)": [[2021, "ivy.container.container_methods.nonzero"], [2023, "ivy.container.container_methods.nonzero"]], "static_nonzero() (in module ivy.container.container_methods)": [[2021, "ivy.container.container_methods.static_nonzero"], [2025, "ivy.container.container_methods.static_nonzero"]], "static_where() (in module ivy.container.container_methods)": [[2026, "ivy.container.container_methods.static_where"], [2027, "ivy.container.container_methods.static_where"]], "where() (in module ivy.array.array_methods)": [[2026, "ivy.array.array_methods.where"], [2028, "ivy.array.array_methods.where"]], "where() (in module ivy.container.container_methods)": [[2026, "ivy.container.container_methods.where"], [2029, "ivy.container.container_methods.where"]], "ivy.functional.ivy.set": [[2031, "module-ivy.functional.ivy.set"]], "unique_all() (in module ivy.functional.ivy.set)": [[2031, "ivy.functional.ivy.set.unique_all"], [2032, "ivy.functional.ivy.set.unique_all"], [2036, "ivy.functional.ivy.set.unique_all"]], "unique_counts() (in module ivy.functional.ivy.set)": [[2031, "ivy.functional.ivy.set.unique_counts"], [2037, "ivy.functional.ivy.set.unique_counts"], [2041, "ivy.functional.ivy.set.unique_counts"]], "unique_inverse() (in module ivy.functional.ivy.set)": [[2031, "ivy.functional.ivy.set.unique_inverse"], [2042, "ivy.functional.ivy.set.unique_inverse"], [2046, "ivy.functional.ivy.set.unique_inverse"]], "unique_values() (in module ivy.functional.ivy.set)": [[2031, "ivy.functional.ivy.set.unique_values"], [2047, "ivy.functional.ivy.set.unique_values"], [2051, "ivy.functional.ivy.set.unique_values"]], "static_unique_all() (in module ivy.container.container_methods)": [[2032, "ivy.container.container_methods.static_unique_all"], [2033, "ivy.container.container_methods.static_unique_all"]], "unique_all() (in module ivy.array.array_methods)": [[2032, "ivy.array.array_methods.unique_all"], [2034, "ivy.array.array_methods.unique_all"]], "unique_all() (in module ivy.container.container_methods)": [[2032, "ivy.container.container_methods.unique_all"], [2035, "ivy.container.container_methods.unique_all"]], "static_unique_counts() (in module ivy.container.container_methods)": [[2037, "ivy.container.container_methods.static_unique_counts"], [2038, "ivy.container.container_methods.static_unique_counts"]], "unique_counts() (in module ivy.array.array_methods)": [[2037, "ivy.array.array_methods.unique_counts"], [2039, "ivy.array.array_methods.unique_counts"]], "unique_counts() (in module ivy.container.container_methods)": [[2037, "ivy.container.container_methods.unique_counts"], [2040, "ivy.container.container_methods.unique_counts"]], "static_unique_inverse() (in module ivy.container.container_methods)": [[2042, "ivy.container.container_methods.static_unique_inverse"], [2043, "ivy.container.container_methods.static_unique_inverse"]], "unique_inverse() (in module ivy.array.array_methods)": [[2042, "ivy.array.array_methods.unique_inverse"], [2044, "ivy.array.array_methods.unique_inverse"]], "unique_inverse() (in module ivy.container.container_methods)": [[2042, "ivy.container.container_methods.unique_inverse"], [2045, "ivy.container.container_methods.unique_inverse"]], "static_unique_values() (in module ivy.container.container_methods)": [[2047, "ivy.container.container_methods.static_unique_values"], [2048, "ivy.container.container_methods.static_unique_values"]], "unique_values() (in module ivy.array.array_methods)": [[2047, "ivy.array.array_methods.unique_values"], [2049, "ivy.array.array_methods.unique_values"]], "unique_values() (in module ivy.container.container_methods)": [[2047, "ivy.container.container_methods.unique_values"], [2050, "ivy.container.container_methods.unique_values"]], "argsort() (in module ivy.functional.ivy.sorting)": [[2052, "ivy.functional.ivy.sorting.argsort"], [2053, "ivy.functional.ivy.sorting.argsort"], [2056, "ivy.functional.ivy.sorting.argsort"]], "ivy.functional.ivy.sorting": [[2052, "module-ivy.functional.ivy.sorting"]], "searchsorted() (in module ivy.functional.ivy.sorting)": [[2052, "ivy.functional.ivy.sorting.searchsorted"], [2058, "ivy.functional.ivy.sorting.searchsorted"], [2061, "ivy.functional.ivy.sorting.searchsorted"]], "sort() (in module ivy.functional.ivy.sorting)": [[2052, "ivy.functional.ivy.sorting.sort"], [2063, "ivy.functional.ivy.sorting.sort"], [2066, "ivy.functional.ivy.sorting.sort"]], "argsort() (in module ivy.array.array_methods)": [[2053, "ivy.array.array_methods.argsort"], [2054, "ivy.array.array_methods.argsort"]], "argsort() (in module ivy.container.container_methods)": [[2053, "ivy.container.container_methods.argsort"], [2055, "ivy.container.container_methods.argsort"]], "static_argsort() (in module ivy.container.container_methods)": [[2053, "ivy.container.container_methods.static_argsort"], [2057, "ivy.container.container_methods.static_argsort"]], "searchsorted() (in module ivy.array.array_methods)": [[2058, "ivy.array.array_methods.searchsorted"], [2059, "ivy.array.array_methods.searchsorted"]], "searchsorted() (in module ivy.container.container_methods)": [[2058, "ivy.container.container_methods.searchsorted"], [2060, "ivy.container.container_methods.searchsorted"]], "static_searchsorted() (in module ivy.container.container_methods)": [[2058, "ivy.container.container_methods.static_searchsorted"], [2062, "ivy.container.container_methods.static_searchsorted"]], "sort() (in module ivy.array.array_methods)": [[2063, "ivy.array.array_methods.sort"], [2064, "ivy.array.array_methods.sort"]], "sort() (in module ivy.container.container_methods)": [[2063, "ivy.container.container_methods.sort"], [2065, "ivy.container.container_methods.sort"]], "static_sort() (in module ivy.container.container_methods)": [[2063, "ivy.container.container_methods.static_sort"], [2067, "ivy.container.container_methods.static_sort"]], "cumprod() (in module ivy.functional.ivy.statistical)": [[2068, "ivy.functional.ivy.statistical.cumprod"], [2069, "ivy.functional.ivy.statistical.cumprod"], [2072, "ivy.functional.ivy.statistical.cumprod"]], "cumsum() (in module ivy.functional.ivy.statistical)": [[2068, "ivy.functional.ivy.statistical.cumsum"], [2074, "ivy.functional.ivy.statistical.cumsum"], [2077, "ivy.functional.ivy.statistical.cumsum"]], "einsum() (in module ivy.functional.ivy.statistical)": [[2068, "ivy.functional.ivy.statistical.einsum"], [2079, "ivy.functional.ivy.statistical.einsum"], [2082, "ivy.functional.ivy.statistical.einsum"]], "ivy.functional.ivy.statistical": [[2068, "module-ivy.functional.ivy.statistical"]], "max() (in module ivy.functional.ivy.statistical)": [[2068, "ivy.functional.ivy.statistical.max"], [2083, "ivy.functional.ivy.statistical.max"], [2086, "ivy.functional.ivy.statistical.max"]], "mean() (in module ivy.functional.ivy.statistical)": [[2068, "ivy.functional.ivy.statistical.mean"], [2087, "ivy.functional.ivy.statistical.mean"], [2090, "ivy.functional.ivy.statistical.mean"]], "min() (in module ivy.functional.ivy.statistical)": [[2068, "ivy.functional.ivy.statistical.min"], [2091, "ivy.functional.ivy.statistical.min"], [2094, "ivy.functional.ivy.statistical.min"]], "prod() (in module ivy.functional.ivy.statistical)": [[2068, "ivy.functional.ivy.statistical.prod"], [2095, "ivy.functional.ivy.statistical.prod"], [2098, "ivy.functional.ivy.statistical.prod"]], "std() (in module ivy.functional.ivy.statistical)": [[2068, "ivy.functional.ivy.statistical.std"], [2100, "ivy.functional.ivy.statistical.std"], [2103, "ivy.functional.ivy.statistical.std"]], "sum() (in module ivy.functional.ivy.statistical)": [[2068, "ivy.functional.ivy.statistical.sum"], [2104, "ivy.functional.ivy.statistical.sum"], [2108, "ivy.functional.ivy.statistical.sum"]], "var() (in module ivy.functional.ivy.statistical)": [[2068, "ivy.functional.ivy.statistical.var"], [2109, "ivy.functional.ivy.statistical.var"], [2113, "ivy.functional.ivy.statistical.var"]], "cumprod() (in module ivy.array.array_methods)": [[2069, "ivy.array.array_methods.cumprod"], [2070, "ivy.array.array_methods.cumprod"]], "cumprod() (in module ivy.container.container_methods)": [[2069, "ivy.container.container_methods.cumprod"], [2071, "ivy.container.container_methods.cumprod"]], "static_cumprod() (in module ivy.container.container_methods)": [[2069, "ivy.container.container_methods.static_cumprod"], [2073, "ivy.container.container_methods.static_cumprod"]], "cumsum() (in module ivy.array.array_methods)": [[2074, "ivy.array.array_methods.cumsum"], [2075, "ivy.array.array_methods.cumsum"]], "cumsum() (in module ivy.container.container_methods)": [[2074, "ivy.container.container_methods.cumsum"], [2076, "ivy.container.container_methods.cumsum"]], "static_cumsum() (in module ivy.container.container_methods)": [[2074, "ivy.container.container_methods.static_cumsum"], [2078, "ivy.container.container_methods.static_cumsum"]], "einsum() (in module ivy.array.array_methods)": [[2079, "ivy.array.array_methods.einsum"], [2080, "ivy.array.array_methods.einsum"]], "einsum() (in module ivy.container.container_methods)": [[2079, "ivy.container.container_methods.einsum"], [2081, "ivy.container.container_methods.einsum"]], "max() (in module ivy.array.array_methods)": [[2083, "ivy.array.array_methods.max"], [2084, "ivy.array.array_methods.max"]], "max() (in module ivy.container.container_methods)": [[2083, "ivy.container.container_methods.max"], [2085, "ivy.container.container_methods.max"]], "mean() (in module ivy.array.array_methods)": [[2087, "ivy.array.array_methods.mean"], [2088, "ivy.array.array_methods.mean"]], "mean() (in module ivy.container.container_methods)": [[2087, "ivy.container.container_methods.mean"], [2089, "ivy.container.container_methods.mean"]], "min() (in module ivy.array.array_methods)": [[2091, "ivy.array.array_methods.min"], [2092, "ivy.array.array_methods.min"]], "min() (in module ivy.container.container_methods)": [[2091, "ivy.container.container_methods.min"], [2093, "ivy.container.container_methods.min"]], "prod() (in module ivy.array.array_methods)": [[2095, "ivy.array.array_methods.prod"], [2096, "ivy.array.array_methods.prod"]], "prod() (in module ivy.container.container_methods)": [[2095, "ivy.container.container_methods.prod"], [2097, "ivy.container.container_methods.prod"]], "static_prod() (in module ivy.container.container_methods)": [[2095, "ivy.container.container_methods.static_prod"], [2099, "ivy.container.container_methods.static_prod"]], "std() (in module ivy.array.array_methods)": [[2100, "ivy.array.array_methods.std"], [2101, "ivy.array.array_methods.std"]], "std() (in module ivy.container.container_methods)": [[2100, "ivy.container.container_methods.std"], [2102, "ivy.container.container_methods.std"]], "static_sum() (in module ivy.container.container_methods)": [[2104, "ivy.container.container_methods.static_sum"], [2105, "ivy.container.container_methods.static_sum"]], "sum() (in module ivy.array.array_methods)": [[2104, "ivy.array.array_methods.sum"], [2106, "ivy.array.array_methods.sum"]], "sum() (in module ivy.container.container_methods)": [[2104, "ivy.container.container_methods.sum"], [2107, "ivy.container.container_methods.sum"]], "static_var() (in module ivy.container.container_methods)": [[2109, "ivy.container.container_methods.static_var"], [2110, "ivy.container.container_methods.static_var"]], "var() (in module ivy.array.array_methods)": [[2109, "ivy.array.array_methods.var"], [2111, "ivy.array.array_methods.var"]], "var() (in module ivy.container.container_methods)": [[2109, "ivy.container.container_methods.var"], [2112, "ivy.container.container_methods.var"]], "all() (in module ivy.functional.ivy.utility)": [[2114, "ivy.functional.ivy.utility.all"], [2115, "ivy.functional.ivy.utility.all"], [2118, "ivy.functional.ivy.utility.all"]], "any() (in module ivy.functional.ivy.utility)": [[2114, "ivy.functional.ivy.utility.any"], [2120, "ivy.functional.ivy.utility.any"], [2123, "ivy.functional.ivy.utility.any"]], "ivy.functional.ivy.utility": [[2114, "module-ivy.functional.ivy.utility"]], "all() (in module ivy.array.array_methods)": [[2115, "ivy.array.array_methods.all"], [2116, "ivy.array.array_methods.all"]], "all() (in module ivy.container.container_methods)": [[2115, "ivy.container.container_methods.all"], [2117, "ivy.container.container_methods.all"]], "static_all() (in module ivy.container.container_methods)": [[2115, "ivy.container.container_methods.static_all"], [2119, "ivy.container.container_methods.static_all"]], "any() (in module ivy.array.array_methods)": [[2120, "ivy.array.array_methods.any"], [2121, "ivy.array.array_methods.any"]], "any() (in module ivy.container.container_methods)": [[2120, "ivy.container.container_methods.any"], [2122, "ivy.container.container_methods.any"]], "static_any() (in module ivy.container.container_methods)": [[2120, "ivy.container.container_methods.static_any"], [2124, "ivy.container.container_methods.static_any"]], "applied libraries": [[2125, "term-Applied-Libraries"]], "automatic code conversions": [[2125, "term-Automatic-Code-Conversions"]], "backend handler": [[2125, "term-Backend-Handler"]], "compositional functions": [[2125, "term-Compositional-Functions"]], "convenience functions": [[2125, "term-Convenience-Functions"]], "framework": [[2125, "term-Framework"]], "framework handler": [[2125, "term-Framework-Handler"]], "graph compiler": [[2125, "term-Graph-Compiler"]], "ivy array": [[2125, "term-Ivy-Array"]], "ivy backends": [[2125, "term-Ivy-Backends"]], "ivy builder": [[2125, "term-Ivy-Builder"]], "ivy compiler": [[2125, "term-Ivy-Compiler"]], "ivy container": [[2125, "term-Ivy-Container"]], "ivy frontends": [[2125, "term-Ivy-Frontends"]], "ivy functional api": [[2125, "term-Ivy-Functional-API"]], "ivy graph compiler": [[2125, "term-Ivy-Graph-Compiler"]], "ivy transpiler": [[2125, "term-Ivy-Transpiler"]], "mixed functions": [[2125, "term-Mixed-Functions"]], "native array": [[2125, "term-Native-Array"]], "nestable functions": [[2125, "term-Nestable-Functions"]], "pipeline": [[2125, "term-Pipeline"]], "primary functions": [[2125, "term-Primary-Functions"]], "standalone functions": [[2125, "term-Standalone-Functions"]], "submodule helper functions": [[2125, "term-Submodule-Helper-Functions"]], "nestedarray (class in ivy.nested_array.nested_array)": [[2128, "ivy.nested_array.nested_array.NestedArray"], [2129, "ivy.nested_array.nested_array.NestedArray"]], "__init__() (ivy.nested_array.nested_array.nestedarray method)": [[2128, "ivy.nested_array.nested_array.NestedArray.__init__"], [2129, "ivy.nested_array.nested_array.NestedArray.__init__"]], "data (ivy.nested_array.nested_array.nestedarray property)": [[2128, "ivy.nested_array.nested_array.NestedArray.data"], [2129, "ivy.nested_array.nested_array.NestedArray.data"]], "device (ivy.nested_array.nested_array.nestedarray property)": [[2128, "ivy.nested_array.nested_array.NestedArray.device"], [2129, "ivy.nested_array.nested_array.NestedArray.device"]], "dtype (ivy.nested_array.nested_array.nestedarray property)": [[2128, "ivy.nested_array.nested_array.NestedArray.dtype"], [2129, "ivy.nested_array.nested_array.NestedArray.dtype"]], "from_row_lengths() (ivy.nested_array.nested_array.nestedarray class method)": [[2128, "ivy.nested_array.nested_array.NestedArray.from_row_lengths"], [2129, "ivy.nested_array.nested_array.NestedArray.from_row_lengths"]], "from_row_split() (ivy.nested_array.nested_array.nestedarray class method)": [[2128, "ivy.nested_array.nested_array.NestedArray.from_row_split"], [2129, "ivy.nested_array.nested_array.NestedArray.from_row_split"]], "ivy.nested_array.nested_array": [[2128, "module-ivy.nested_array.nested_array"]], "ndim (ivy.nested_array.nested_array.nestedarray property)": [[2128, "ivy.nested_array.nested_array.NestedArray.ndim"], [2129, "ivy.nested_array.nested_array.NestedArray.ndim"]], "nested_array() (ivy.nested_array.nested_array.nestedarray class method)": [[2128, "ivy.nested_array.nested_array.NestedArray.nested_array"], [2129, "ivy.nested_array.nested_array.NestedArray.nested_array"]], "reshape() (ivy.nested_array.nested_array.nestedarray method)": [[2128, "ivy.nested_array.nested_array.NestedArray.reshape"], [2129, "ivy.nested_array.nested_array.NestedArray.reshape"]], "shape (ivy.nested_array.nested_array.nestedarray property)": [[2128, "ivy.nested_array.nested_array.NestedArray.shape"], [2129, "ivy.nested_array.nested_array.NestedArray.shape"]], "unbind() (ivy.nested_array.nested_array.nestedarray method)": [[2128, "ivy.nested_array.nested_array.NestedArray.unbind"], [2129, "ivy.nested_array.nested_array.NestedArray.unbind"]], "ivy.stateful": [[2142, "module-ivy.stateful"]], "geglu (class in ivy.stateful.activations)": [[2143, "ivy.stateful.activations.GEGLU"], [2144, "ivy.stateful.activations.GEGLU"]], "gelu (class in ivy.stateful.activations)": [[2143, "ivy.stateful.activations.GELU"], [2145, "ivy.stateful.activations.GELU"]], "__init__() (ivy.stateful.activations.geglu method)": [[2143, "ivy.stateful.activations.GEGLU.__init__"], [2144, "ivy.stateful.activations.GEGLU.__init__"]], "__init__() (ivy.stateful.activations.gelu method)": [[2143, "ivy.stateful.activations.GELU.__init__"], [2145, "ivy.stateful.activations.GELU.__init__"]], "ivy.stateful.activations": [[2143, "module-ivy.stateful.activations"]], "moduleconverters (class in ivy.stateful.converters)": [[2146, "ivy.stateful.converters.ModuleConverters"], [2147, "ivy.stateful.converters.ModuleConverters"]], "from_haiku_module() (ivy.stateful.converters.moduleconverters static method)": [[2146, "ivy.stateful.converters.ModuleConverters.from_haiku_module"], [2147, "ivy.stateful.converters.ModuleConverters.from_haiku_module"]], "from_keras_module() (ivy.stateful.converters.moduleconverters static method)": [[2146, "ivy.stateful.converters.ModuleConverters.from_keras_module"], [2147, "ivy.stateful.converters.ModuleConverters.from_keras_module"]], "from_torch_module() (ivy.stateful.converters.moduleconverters static method)": [[2146, "ivy.stateful.converters.ModuleConverters.from_torch_module"], [2147, "ivy.stateful.converters.ModuleConverters.from_torch_module"]], "ivy.stateful.converters": [[2146, "module-ivy.stateful.converters"]], "to_ivy_module() (in module ivy.stateful.converters)": [[2146, "ivy.stateful.converters.to_ivy_module"], [2148, "ivy.stateful.converters.to_ivy_module"]], "modulehelpers (class in ivy.stateful.helpers)": [[2149, "ivy.stateful.helpers.ModuleHelpers"], [2150, "ivy.stateful.helpers.ModuleHelpers"]], "check_submod_rets() (ivy.stateful.helpers.modulehelpers method)": [[2149, "ivy.stateful.helpers.ModuleHelpers.check_submod_rets"], [2150, "ivy.stateful.helpers.ModuleHelpers.check_submod_rets"]], "get_mod_key() (ivy.stateful.helpers.modulehelpers method)": [[2149, "ivy.stateful.helpers.ModuleHelpers.get_mod_key"], [2150, "ivy.stateful.helpers.ModuleHelpers.get_mod_key"]], "ivy.stateful.helpers": [[2149, "module-ivy.stateful.helpers"]], "mod_depth() (ivy.stateful.helpers.modulehelpers method)": [[2149, "ivy.stateful.helpers.ModuleHelpers.mod_depth"], [2150, "ivy.stateful.helpers.ModuleHelpers.mod_depth"]], "mod_height() (ivy.stateful.helpers.modulehelpers method)": [[2149, "ivy.stateful.helpers.ModuleHelpers.mod_height"], [2150, "ivy.stateful.helpers.ModuleHelpers.mod_height"]], "mod_with_top_mod_key_chain() (ivy.stateful.helpers.modulehelpers method)": [[2149, "ivy.stateful.helpers.ModuleHelpers.mod_with_top_mod_key_chain"], [2150, "ivy.stateful.helpers.ModuleHelpers.mod_with_top_mod_key_chain"]], "show_mod_in_top_mod() (ivy.stateful.helpers.modulehelpers method)": [[2149, "ivy.stateful.helpers.ModuleHelpers.show_mod_in_top_mod"], [2150, "ivy.stateful.helpers.ModuleHelpers.show_mod_in_top_mod"]], "show_structure() (ivy.stateful.helpers.modulehelpers method)": [[2149, "ivy.stateful.helpers.ModuleHelpers.show_structure"], [2150, "ivy.stateful.helpers.ModuleHelpers.show_structure"]], "show_v_in_top_v() (ivy.stateful.helpers.modulehelpers method)": [[2149, "ivy.stateful.helpers.ModuleHelpers.show_v_in_top_v"], [2150, "ivy.stateful.helpers.ModuleHelpers.show_v_in_top_v"]], "sub_mods() (ivy.stateful.helpers.modulehelpers method)": [[2149, "ivy.stateful.helpers.ModuleHelpers.sub_mods"], [2150, "ivy.stateful.helpers.ModuleHelpers.sub_mods"]], "track_submod_call_order() (ivy.stateful.helpers.modulehelpers method)": [[2149, "ivy.stateful.helpers.ModuleHelpers.track_submod_call_order"], [2150, "ivy.stateful.helpers.ModuleHelpers.track_submod_call_order"]], "track_submod_rets() (ivy.stateful.helpers.modulehelpers method)": [[2149, "ivy.stateful.helpers.ModuleHelpers.track_submod_rets"], [2150, "ivy.stateful.helpers.ModuleHelpers.track_submod_rets"]], "v_with_top_v_key_chains() (ivy.stateful.helpers.modulehelpers method)": [[2149, "ivy.stateful.helpers.ModuleHelpers.v_with_top_v_key_chains"], [2150, "ivy.stateful.helpers.ModuleHelpers.v_with_top_v_key_chains"]], "constant (class in ivy.stateful.initializers)": [[2151, "ivy.stateful.initializers.Constant"], [2152, "ivy.stateful.initializers.Constant"]], "firstlayersiren (class in ivy.stateful.initializers)": [[2151, "ivy.stateful.initializers.FirstLayerSiren"], [2153, "ivy.stateful.initializers.FirstLayerSiren"]], "glorotuniform (class in ivy.stateful.initializers)": [[2151, "ivy.stateful.initializers.GlorotUniform"], [2154, "ivy.stateful.initializers.GlorotUniform"]], "initializer (class in ivy.stateful.initializers)": [[2151, "ivy.stateful.initializers.Initializer"], [2155, "ivy.stateful.initializers.Initializer"]], "kaimingnormal (class in ivy.stateful.initializers)": [[2151, "ivy.stateful.initializers.KaimingNormal"], [2156, "ivy.stateful.initializers.KaimingNormal"]], "ones (class in ivy.stateful.initializers)": [[2151, "ivy.stateful.initializers.Ones"], [2157, "ivy.stateful.initializers.Ones"]], "siren (class in ivy.stateful.initializers)": [[2151, "ivy.stateful.initializers.Siren"], [2158, "ivy.stateful.initializers.Siren"]], "uniform (class in ivy.stateful.initializers)": [[2151, "ivy.stateful.initializers.Uniform"], [2159, "ivy.stateful.initializers.Uniform"]], "zeros (class in ivy.stateful.initializers)": [[2151, "ivy.stateful.initializers.Zeros"], [2160, "ivy.stateful.initializers.Zeros"]], "__init__() (ivy.stateful.initializers.constant method)": [[2151, "ivy.stateful.initializers.Constant.__init__"], [2152, "ivy.stateful.initializers.Constant.__init__"]], "__init__() (ivy.stateful.initializers.firstlayersiren method)": [[2151, "ivy.stateful.initializers.FirstLayerSiren.__init__"], [2153, "ivy.stateful.initializers.FirstLayerSiren.__init__"]], "__init__() (ivy.stateful.initializers.glorotuniform method)": [[2151, "ivy.stateful.initializers.GlorotUniform.__init__"], [2154, "ivy.stateful.initializers.GlorotUniform.__init__"]], "__init__() (ivy.stateful.initializers.kaimingnormal method)": [[2151, "ivy.stateful.initializers.KaimingNormal.__init__"], [2156, "ivy.stateful.initializers.KaimingNormal.__init__"]], "__init__() (ivy.stateful.initializers.ones method)": [[2151, "ivy.stateful.initializers.Ones.__init__"], [2157, "ivy.stateful.initializers.Ones.__init__"]], "__init__() (ivy.stateful.initializers.siren method)": [[2151, "ivy.stateful.initializers.Siren.__init__"], [2158, "ivy.stateful.initializers.Siren.__init__"]], "__init__() (ivy.stateful.initializers.uniform method)": [[2151, "ivy.stateful.initializers.Uniform.__init__"], [2159, "ivy.stateful.initializers.Uniform.__init__"]], "__init__() (ivy.stateful.initializers.zeros method)": [[2151, "ivy.stateful.initializers.Zeros.__init__"], [2160, "ivy.stateful.initializers.Zeros.__init__"]], "create_variables() (ivy.stateful.initializers.constant method)": [[2151, "ivy.stateful.initializers.Constant.create_variables"], [2152, "ivy.stateful.initializers.Constant.create_variables"]], "create_variables() (ivy.stateful.initializers.initializer method)": [[2151, "ivy.stateful.initializers.Initializer.create_variables"], [2155, "ivy.stateful.initializers.Initializer.create_variables"]], "create_variables() (ivy.stateful.initializers.kaimingnormal method)": [[2151, "ivy.stateful.initializers.KaimingNormal.create_variables"], [2156, "ivy.stateful.initializers.KaimingNormal.create_variables"]], "create_variables() (ivy.stateful.initializers.uniform method)": [[2151, "ivy.stateful.initializers.Uniform.create_variables"], [2159, "ivy.stateful.initializers.Uniform.create_variables"]], "ivy.stateful.initializers": [[2151, "module-ivy.stateful.initializers"]], "conv1d (class in ivy.stateful.layers)": [[2161, "ivy.stateful.layers.Conv1D"], [2162, "ivy.stateful.layers.Conv1D"]], "conv1dtranspose (class in ivy.stateful.layers)": [[2161, "ivy.stateful.layers.Conv1DTranspose"], [2163, "ivy.stateful.layers.Conv1DTranspose"]], "conv2d (class in ivy.stateful.layers)": [[2161, "ivy.stateful.layers.Conv2D"], [2164, "ivy.stateful.layers.Conv2D"]], "conv2dtranspose (class in ivy.stateful.layers)": [[2161, "ivy.stateful.layers.Conv2DTranspose"], [2165, "ivy.stateful.layers.Conv2DTranspose"]], "conv3d (class in ivy.stateful.layers)": [[2161, "ivy.stateful.layers.Conv3D"], [2166, "ivy.stateful.layers.Conv3D"]], "conv3dtranspose (class in ivy.stateful.layers)": [[2161, "ivy.stateful.layers.Conv3DTranspose"], [2167, "ivy.stateful.layers.Conv3DTranspose"]], "depthwiseconv2d (class in ivy.stateful.layers)": [[2161, "ivy.stateful.layers.DepthwiseConv2D"], [2168, "ivy.stateful.layers.DepthwiseConv2D"]], "dropout (class in ivy.stateful.layers)": [[2161, "ivy.stateful.layers.Dropout"], [2169, "ivy.stateful.layers.Dropout"]], "lstm (class in ivy.stateful.layers)": [[2161, "ivy.stateful.layers.LSTM"], [2170, "ivy.stateful.layers.LSTM"]], "linear (class in ivy.stateful.layers)": [[2161, "ivy.stateful.layers.Linear"], [2171, "ivy.stateful.layers.Linear"]], "multiheadattention (class in ivy.stateful.layers)": [[2161, "ivy.stateful.layers.MultiHeadAttention"], [2172, "ivy.stateful.layers.MultiHeadAttention"]], "__init__() (ivy.stateful.layers.conv1d method)": [[2161, "ivy.stateful.layers.Conv1D.__init__"], [2162, "ivy.stateful.layers.Conv1D.__init__"]], "__init__() (ivy.stateful.layers.conv1dtranspose method)": [[2161, "ivy.stateful.layers.Conv1DTranspose.__init__"], [2163, "ivy.stateful.layers.Conv1DTranspose.__init__"]], "__init__() (ivy.stateful.layers.conv2d method)": [[2161, "ivy.stateful.layers.Conv2D.__init__"], [2164, "ivy.stateful.layers.Conv2D.__init__"]], "__init__() (ivy.stateful.layers.conv2dtranspose method)": [[2161, "ivy.stateful.layers.Conv2DTranspose.__init__"], [2165, "ivy.stateful.layers.Conv2DTranspose.__init__"]], "__init__() (ivy.stateful.layers.conv3d method)": [[2161, "ivy.stateful.layers.Conv3D.__init__"], [2166, "ivy.stateful.layers.Conv3D.__init__"]], "__init__() (ivy.stateful.layers.conv3dtranspose method)": [[2161, "ivy.stateful.layers.Conv3DTranspose.__init__"], [2167, "ivy.stateful.layers.Conv3DTranspose.__init__"]], "__init__() (ivy.stateful.layers.depthwiseconv2d method)": [[2161, "ivy.stateful.layers.DepthwiseConv2D.__init__"], [2168, "ivy.stateful.layers.DepthwiseConv2D.__init__"]], "__init__() (ivy.stateful.layers.dropout method)": [[2161, "ivy.stateful.layers.Dropout.__init__"], [2169, "ivy.stateful.layers.Dropout.__init__"]], "__init__() (ivy.stateful.layers.lstm method)": [[2161, "ivy.stateful.layers.LSTM.__init__"], [2170, "ivy.stateful.layers.LSTM.__init__"]], "__init__() (ivy.stateful.layers.linear method)": [[2161, "ivy.stateful.layers.Linear.__init__"], [2171, "ivy.stateful.layers.Linear.__init__"]], "__init__() (ivy.stateful.layers.multiheadattention method)": [[2161, "ivy.stateful.layers.MultiHeadAttention.__init__"], [2172, "ivy.stateful.layers.MultiHeadAttention.__init__"]], "get_initial_state() (ivy.stateful.layers.lstm method)": [[2161, "ivy.stateful.layers.LSTM.get_initial_state"], [2170, "ivy.stateful.layers.LSTM.get_initial_state"]], "ivy.stateful.layers": [[2161, "module-ivy.stateful.layers"]], "module (class in ivy.stateful.module)": [[2173, "ivy.stateful.module.Module"], [2174, "ivy.stateful.module.Module"]], "__call__() (ivy.stateful.module.module method)": [[2173, "ivy.stateful.module.Module.__call__"], [2174, "ivy.stateful.module.Module.__call__"]], "__init__() (ivy.stateful.module.module method)": [[2173, "ivy.stateful.module.Module.__init__"], [2174, "ivy.stateful.module.Module.__init__"]], "build() (ivy.stateful.module.module method)": [[2173, "ivy.stateful.module.Module.build"], [2174, "ivy.stateful.module.Module.build"]], "build_mode (ivy.stateful.module.module property)": [[2173, "ivy.stateful.module.Module.build_mode"], [2174, "ivy.stateful.module.Module.build_mode"]], "built_ (ivy.stateful.module.module property)": [[2173, "ivy.stateful.module.Module.built_"], [2174, "ivy.stateful.module.Module.built_"]], "compile() (ivy.stateful.module.module method)": [[2173, "ivy.stateful.module.Module.compile"], [2174, "ivy.stateful.module.Module.compile"]], "ivy.stateful.module": [[2173, "module-ivy.stateful.module"]], "save_weights() (ivy.stateful.module.module method)": [[2173, "ivy.stateful.module.Module.save_weights"], [2174, "ivy.stateful.module.Module.save_weights"]], "show_graph() (ivy.stateful.module.module method)": [[2173, "ivy.stateful.module.Module.show_graph"], [2174, "ivy.stateful.module.Module.show_graph"]], "layernorm (class in ivy.stateful.norms)": [[2175, "ivy.stateful.norms.LayerNorm"], [2176, "ivy.stateful.norms.LayerNorm"]], "__init__() (ivy.stateful.norms.layernorm method)": [[2175, "ivy.stateful.norms.LayerNorm.__init__"], [2176, "ivy.stateful.norms.LayerNorm.__init__"]], "ivy.stateful.norms": [[2175, "module-ivy.stateful.norms"]], "adam (class in ivy.stateful.optimizers)": [[2177, "ivy.stateful.optimizers.Adam"], [2178, "ivy.stateful.optimizers.Adam"]], "lamb (class in ivy.stateful.optimizers)": [[2177, "ivy.stateful.optimizers.LAMB"], [2179, "ivy.stateful.optimizers.LAMB"]], "lars (class in ivy.stateful.optimizers)": [[2177, "ivy.stateful.optimizers.LARS"], [2180, "ivy.stateful.optimizers.LARS"]], "optimizer (class in ivy.stateful.optimizers)": [[2177, "ivy.stateful.optimizers.Optimizer"], [2181, "ivy.stateful.optimizers.Optimizer"]], "sgd (class in ivy.stateful.optimizers)": [[2177, "ivy.stateful.optimizers.SGD"], [2182, "ivy.stateful.optimizers.SGD"]], "__init__() (ivy.stateful.optimizers.adam method)": [[2177, "ivy.stateful.optimizers.Adam.__init__"], [2178, "ivy.stateful.optimizers.Adam.__init__"]], "__init__() (ivy.stateful.optimizers.lamb method)": [[2177, "ivy.stateful.optimizers.LAMB.__init__"], [2179, "ivy.stateful.optimizers.LAMB.__init__"]], "__init__() (ivy.stateful.optimizers.lars method)": [[2177, "ivy.stateful.optimizers.LARS.__init__"], [2180, "ivy.stateful.optimizers.LARS.__init__"]], "__init__() (ivy.stateful.optimizers.optimizer method)": [[2177, "ivy.stateful.optimizers.Optimizer.__init__"], [2181, "ivy.stateful.optimizers.Optimizer.__init__"]], "__init__() (ivy.stateful.optimizers.sgd method)": [[2177, "ivy.stateful.optimizers.SGD.__init__"], [2182, "ivy.stateful.optimizers.SGD.__init__"]], "ivy.stateful.optimizers": [[2177, "module-ivy.stateful.optimizers"]], "set_state() (ivy.stateful.optimizers.adam method)": [[2177, "ivy.stateful.optimizers.Adam.set_state"], [2178, "ivy.stateful.optimizers.Adam.set_state"]], "set_state() (ivy.stateful.optimizers.lamb method)": [[2177, "ivy.stateful.optimizers.LAMB.set_state"], [2179, "ivy.stateful.optimizers.LAMB.set_state"]], "set_state() (ivy.stateful.optimizers.lars method)": [[2177, "ivy.stateful.optimizers.LARS.set_state"], [2180, "ivy.stateful.optimizers.LARS.set_state"]], "set_state() (ivy.stateful.optimizers.optimizer method)": [[2177, "ivy.stateful.optimizers.Optimizer.set_state"], [2181, "ivy.stateful.optimizers.Optimizer.set_state"]], "set_state() (ivy.stateful.optimizers.sgd method)": [[2177, "ivy.stateful.optimizers.SGD.set_state"], [2182, "ivy.stateful.optimizers.SGD.set_state"]], "state (ivy.stateful.optimizers.adam property)": [[2177, "ivy.stateful.optimizers.Adam.state"], [2178, "ivy.stateful.optimizers.Adam.state"]], "state (ivy.stateful.optimizers.lamb property)": [[2177, "ivy.stateful.optimizers.LAMB.state"], [2179, "ivy.stateful.optimizers.LAMB.state"]], "state (ivy.stateful.optimizers.lars property)": [[2177, "ivy.stateful.optimizers.LARS.state"], [2180, "ivy.stateful.optimizers.LARS.state"]], "state (ivy.stateful.optimizers.sgd property)": [[2177, "ivy.stateful.optimizers.SGD.state"], [2182, "ivy.stateful.optimizers.SGD.state"]], "step() (ivy.stateful.optimizers.optimizer method)": [[2177, "ivy.stateful.optimizers.Optimizer.step"], [2181, "ivy.stateful.optimizers.Optimizer.step"]], "sequential (class in ivy.stateful.sequential)": [[2183, "ivy.stateful.sequential.Sequential"], [2184, "ivy.stateful.sequential.Sequential"]], "__init__() (ivy.stateful.sequential.sequential method)": [[2183, "ivy.stateful.sequential.Sequential.__init__"], [2184, "ivy.stateful.sequential.Sequential.__init__"]], "ivy.stateful.sequential": [[2183, "module-ivy.stateful.sequential"]], "assert_all_close() (in module ivy_tests.test_ivy.helpers.assertions)": [[2186, "ivy_tests.test_ivy.helpers.assertions.assert_all_close"], [2187, "ivy_tests.test_ivy.helpers.assertions.assert_all_close"]], "assert_same_type_and_shape() (in module ivy_tests.test_ivy.helpers.assertions)": [[2186, "ivy_tests.test_ivy.helpers.assertions.assert_same_type_and_shape"], [2188, "ivy_tests.test_ivy.helpers.assertions.assert_same_type_and_shape"]], "check_unsupported_device() (in module ivy_tests.test_ivy.helpers.assertions)": [[2186, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device"], [2189, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device"]], "check_unsupported_device_and_dtype() (in module ivy_tests.test_ivy.helpers.assertions)": [[2186, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device_and_dtype"], [2190, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device_and_dtype"]], "check_unsupported_dtype() (in module ivy_tests.test_ivy.helpers.assertions)": [[2186, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_dtype"], [2191, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_dtype"]], "ivy_tests.test_ivy.helpers.assertions": [[2186, "module-ivy_tests.test_ivy.helpers.assertions"]], "test_unsupported_function() (in module ivy_tests.test_ivy.helpers.assertions)": [[2186, "ivy_tests.test_ivy.helpers.assertions.test_unsupported_function"], [2192, "ivy_tests.test_ivy.helpers.assertions.test_unsupported_function"]], "value_test() (in module ivy_tests.test_ivy.helpers.assertions)": [[2186, "ivy_tests.test_ivy.helpers.assertions.value_test"], [2193, "ivy_tests.test_ivy.helpers.assertions.value_test"]], "available_frameworks() (in module ivy_tests.test_ivy.helpers.available_frameworks)": [[2194, "ivy_tests.test_ivy.helpers.available_frameworks.available_frameworks"], [2195, "ivy_tests.test_ivy.helpers.available_frameworks.available_frameworks"]], "ground_truth() (in module ivy_tests.test_ivy.helpers.available_frameworks)": [[2194, "ivy_tests.test_ivy.helpers.available_frameworks.ground_truth"], [2196, "ivy_tests.test_ivy.helpers.available_frameworks.ground_truth"]], "ivy_tests.test_ivy.helpers.available_frameworks": [[2194, "module-ivy_tests.test_ivy.helpers.available_frameworks"]], "args_to_container() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.args_to_container"], [2198, "ivy_tests.test_ivy.helpers.function_testing.args_to_container"]], "as_cont() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.as_cont"], [2199, "ivy_tests.test_ivy.helpers.function_testing.as_cont"]], "as_lists() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.as_lists"], [2200, "ivy_tests.test_ivy.helpers.function_testing.as_lists"]], "convtrue() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.convtrue"], [2201, "ivy_tests.test_ivy.helpers.function_testing.convtrue"]], "create_args_kwargs() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.create_args_kwargs"], [2202, "ivy_tests.test_ivy.helpers.function_testing.create_args_kwargs"]], "create_frontend_args_kwargs() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.create_frontend_args_kwargs"], [2203, "ivy_tests.test_ivy.helpers.function_testing.create_frontend_args_kwargs"]], "empty_func() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.empty_func"], [2204, "ivy_tests.test_ivy.helpers.function_testing.empty_func"]], "flatten() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.flatten"], [2205, "ivy_tests.test_ivy.helpers.function_testing.flatten"]], "flatten_and_to_np() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.flatten_and_to_np"], [2206, "ivy_tests.test_ivy.helpers.function_testing.flatten_and_to_np"]], "flatten_fw_and_to_np() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.flatten_fw_and_to_np"], [2207, "ivy_tests.test_ivy.helpers.function_testing.flatten_fw_and_to_np"]], "framework_comparator() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.framework_comparator"], [2208, "ivy_tests.test_ivy.helpers.function_testing.framework_comparator"]], "get_frontend_ret() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.get_frontend_ret"], [2209, "ivy_tests.test_ivy.helpers.function_testing.get_frontend_ret"]], "get_ret_and_flattened_np_array() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.get_ret_and_flattened_np_array"], [2210, "ivy_tests.test_ivy.helpers.function_testing.get_ret_and_flattened_np_array"]], "gradient_incompatible_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.gradient_incompatible_function"], [2211, "ivy_tests.test_ivy.helpers.function_testing.gradient_incompatible_function"]], "gradient_test() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.gradient_test"], [2212, "ivy_tests.test_ivy.helpers.function_testing.gradient_test"]], "gradient_unsupported_dtypes() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.gradient_unsupported_dtypes"], [2213, "ivy_tests.test_ivy.helpers.function_testing.gradient_unsupported_dtypes"]], "ivy_tests.test_ivy.helpers.function_testing": [[2197, "module-ivy_tests.test_ivy.helpers.function_testing"]], "kwargs_to_args_n_kwargs() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.kwargs_to_args_n_kwargs"], [2214, "ivy_tests.test_ivy.helpers.function_testing.kwargs_to_args_n_kwargs"]], "make_json_pickable() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.make_json_pickable"], [2215, "ivy_tests.test_ivy.helpers.function_testing.make_json_pickable"]], "test_frontend_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_function"], [2216, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_function"]], "test_frontend_method() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_method"], [2217, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_method"]], "test_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.test_function"], [2218, "ivy_tests.test_ivy.helpers.function_testing.test_function"]], "test_method() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.test_method"], [2219, "ivy_tests.test_ivy.helpers.function_testing.test_method"]], "var_fn() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2197, "ivy_tests.test_ivy.helpers.function_testing.var_fn"], [2220, "ivy_tests.test_ivy.helpers.function_testing.var_fn"]], "interruptedtest": [[2221, "ivy_tests.test_ivy.helpers.globals.InterruptedTest"]], "testdata (class in ivy_tests.test_ivy.helpers.globals)": [[2221, "ivy_tests.test_ivy.helpers.globals.TestData"], [2223, "ivy_tests.test_ivy.helpers.globals.TestData"]], "__init__() (ivy_tests.test_ivy.helpers.globals.interruptedtest method)": [[2221, "ivy_tests.test_ivy.helpers.globals.InterruptedTest.__init__"], [2222, "ivy_tests.test_ivy.helpers.globals.InterruptedTest.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.globals.testdata method)": [[2221, "ivy_tests.test_ivy.helpers.globals.TestData.__init__"], [2223, "ivy_tests.test_ivy.helpers.globals.TestData.__init__"]], "fn_name (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2221, "ivy_tests.test_ivy.helpers.globals.TestData.fn_name"], [2223, "ivy_tests.test_ivy.helpers.globals.TestData.fn_name"]], "fn_tree (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2221, "ivy_tests.test_ivy.helpers.globals.TestData.fn_tree"], [2223, "ivy_tests.test_ivy.helpers.globals.TestData.fn_tree"]], "is_method (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2221, "ivy_tests.test_ivy.helpers.globals.TestData.is_method"], [2223, "ivy_tests.test_ivy.helpers.globals.TestData.is_method"]], "ivy_tests.test_ivy.helpers.globals": [[2221, "module-ivy_tests.test_ivy.helpers.globals"]], "remove_all_current_framework() (in module ivy_tests.test_ivy.helpers.globals)": [[2221, "ivy_tests.test_ivy.helpers.globals.remove_all_current_framework"], [2224, "ivy_tests.test_ivy.helpers.globals.remove_all_current_framework"]], "setup_api_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2221, "ivy_tests.test_ivy.helpers.globals.setup_api_test"], [2225, "ivy_tests.test_ivy.helpers.globals.setup_api_test"]], "setup_frontend_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2221, "ivy_tests.test_ivy.helpers.globals.setup_frontend_test"], [2226, "ivy_tests.test_ivy.helpers.globals.setup_frontend_test"]], "supported_device_dtypes (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2221, "ivy_tests.test_ivy.helpers.globals.TestData.supported_device_dtypes"], [2223, "ivy_tests.test_ivy.helpers.globals.TestData.supported_device_dtypes"]], "teardown_api_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2221, "ivy_tests.test_ivy.helpers.globals.teardown_api_test"], [2227, "ivy_tests.test_ivy.helpers.globals.teardown_api_test"]], "teardown_frontend_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2221, "ivy_tests.test_ivy.helpers.globals.teardown_frontend_test"], [2228, "ivy_tests.test_ivy.helpers.globals.teardown_frontend_test"]], "test_fn (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2221, "ivy_tests.test_ivy.helpers.globals.TestData.test_fn"], [2223, "ivy_tests.test_ivy.helpers.globals.TestData.test_fn"]], "interruptedtest (class in ivy_tests.test_ivy.helpers.globals)": [[2222, "ivy_tests.test_ivy.helpers.globals.InterruptedTest"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers": [[2229, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"]], "array_and_broadcastable_shape() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2230, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_and_broadcastable_shape"], [2231, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_and_broadcastable_shape"]], "array_bools() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2230, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_bools"], [2232, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_bools"]], "array_indices_axis() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2230, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_indices_axis"], [2233, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_indices_axis"]], "array_values() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2230, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_values"], [2234, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_values"]], "arrays_and_axes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2230, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_and_axes"], [2235, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_and_axes"]], "arrays_for_pooling() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2230, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_for_pooling"], [2236, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_for_pooling"]], "broadcast_shapes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2230, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.broadcast_shapes"], [2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.broadcast_shapes"]], "dtype_and_values() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2230, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_and_values"], [2238, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_and_values"]], "dtype_values_axis() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2230, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_values_axis"], [2239, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_values_axis"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers": [[2230, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers"]], "list_of_size() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2230, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.list_of_size"], [2240, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.list_of_size"]], "lists() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2230, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.lists"], [2241, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.lists"]], "mutually_broadcastable_shapes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2230, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.mutually_broadcastable_shapes"], [2242, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.mutually_broadcastable_shapes"]], "prod() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2230, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.prod"], [2243, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.prod"]], "array_dtypes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers)": [[2244, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.array_dtypes"], [2245, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.array_dtypes"]], "get_castable_dtype() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers)": [[2244, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_castable_dtype"], [2246, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_castable_dtype"]], "get_dtypes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers)": [[2244, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_dtypes"], [2247, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_dtypes"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers": [[2244, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers"]], "make_json_pickable() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers)": [[2244, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.make_json_pickable"], [2248, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.make_json_pickable"]], "apply_safety_factor() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2249, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.apply_safety_factor"], [2250, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.apply_safety_factor"]], "embedding_helper() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2249, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.embedding_helper"], [2251, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.embedding_helper"]], "get_axis() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2249, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_axis"], [2252, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_axis"]], "get_bounds() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2249, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_bounds"], [2253, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_bounds"]], "get_mean_std() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2249, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_mean_std"], [2254, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_mean_std"]], "get_shape() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2249, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_shape"], [2255, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_shape"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers": [[2249, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers"]], "matrix_is_stable() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2249, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.matrix_is_stable"], [2256, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.matrix_is_stable"]], "reshape_shapes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2249, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.reshape_shapes"], [2257, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.reshape_shapes"]], "subsets() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2249, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.subsets"], [2258, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.subsets"]], "x_and_filters() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2249, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.x_and_filters"], [2259, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.x_and_filters"]], "floats() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers)": [[2260, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.floats"], [2261, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.floats"]], "ints() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers)": [[2260, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.ints"], [2262, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.ints"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers": [[2260, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers"]], "number() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers)": [[2260, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.number"], [2263, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.number"]], "frontendmethoddata (class in ivy_tests.test_ivy.helpers.structs)": [[2264, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData"], [2265, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData"]], "__init__() (ivy_tests.test_ivy.helpers.structs.frontendmethoddata method)": [[2264, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.__init__"], [2265, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.__init__"]], "framework_init_module (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2264, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.framework_init_module"], [2265, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.framework_init_module"]], "init_name (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2264, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.init_name"], [2265, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.init_name"]], "ivy_init_module (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2264, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.ivy_init_module"], [2265, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.ivy_init_module"]], "ivy_tests.test_ivy.helpers.structs": [[2264, "module-ivy_tests.test_ivy.helpers.structs"]], "method_name (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2264, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.method_name"], [2265, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.method_name"]], "frontendfunctiontestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags"], [2267, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags"]], "frontendmethodtestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags"], [2268, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags"]], "functiontestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags"], [2269, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags"]], "methodtestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags"], [2270, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.frontendfunctiontestflags method)": [[2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags.__init__"], [2267, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.frontendmethodtestflags method)": [[2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags.__init__"], [2268, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.functiontestflags method)": [[2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags.__init__"], [2269, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.methodtestflags method)": [[2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags.__init__"], [2270, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags.__init__"]], "build_flag() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.build_flag"], [2271, "ivy_tests.test_ivy.helpers.test_parameter_flags.build_flag"]], "frontend_function_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_function_flags"], [2272, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_function_flags"]], "frontend_method_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_method_flags"], [2273, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_method_flags"]], "function_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.function_flags"], [2274, "ivy_tests.test_ivy.helpers.test_parameter_flags.function_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags": [[2266, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"]], "method_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.method_flags"], [2275, "ivy_tests.test_ivy.helpers.test_parameter_flags.method_flags"]], "handle_frontend_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2276, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_method"], [2277, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_method"]], "handle_frontend_test() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2276, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_test"], [2278, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_test"]], "handle_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2276, "ivy_tests.test_ivy.helpers.testing_helpers.handle_method"], [2279, "ivy_tests.test_ivy.helpers.testing_helpers.handle_method"]], "handle_test() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2276, "ivy_tests.test_ivy.helpers.testing_helpers.handle_test"], [2280, "ivy_tests.test_ivy.helpers.testing_helpers.handle_test"]], "ivy_tests.test_ivy.helpers.testing_helpers": [[2276, "module-ivy_tests.test_ivy.helpers.testing_helpers"]], "num_positional_args() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2276, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args"], [2281, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args"]], "num_positional_args_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2276, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args_method"], [2282, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args_method"]], "seed() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2276, "ivy_tests.test_ivy.helpers.testing_helpers.seed"], [2283, "ivy_tests.test_ivy.helpers.testing_helpers.seed"]], "ivy.utils._importlib": [[2284, "module-ivy.utils._importlib"]], "check_all() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_all"], [2286, "ivy.utils.assertions.check_all"]], "check_all_or_any_fn() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_all_or_any_fn"], [2287, "ivy.utils.assertions.check_all_or_any_fn"]], "check_any() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_any"], [2288, "ivy.utils.assertions.check_any"]], "check_dimensions() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_dimensions"], [2289, "ivy.utils.assertions.check_dimensions"]], "check_elem_in_list() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_elem_in_list"], [2290, "ivy.utils.assertions.check_elem_in_list"]], "check_equal() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_equal"], [2291, "ivy.utils.assertions.check_equal"]], "check_exists() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_exists"], [2292, "ivy.utils.assertions.check_exists"]], "check_false() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_false"], [2293, "ivy.utils.assertions.check_false"]], "check_fill_value_and_dtype_are_compatible() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_fill_value_and_dtype_are_compatible"], [2294, "ivy.utils.assertions.check_fill_value_and_dtype_are_compatible"]], "check_gather_input_valid() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_gather_input_valid"], [2295, "ivy.utils.assertions.check_gather_input_valid"]], "check_gather_nd_input_valid() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_gather_nd_input_valid"], [2296, "ivy.utils.assertions.check_gather_nd_input_valid"]], "check_greater() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_greater"], [2297, "ivy.utils.assertions.check_greater"]], "check_inplace_sizes_valid() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_inplace_sizes_valid"], [2298, "ivy.utils.assertions.check_inplace_sizes_valid"]], "check_isinstance() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_isinstance"], [2299, "ivy.utils.assertions.check_isinstance"]], "check_kernel_padding_size() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_kernel_padding_size"], [2300, "ivy.utils.assertions.check_kernel_padding_size"]], "check_less() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_less"], [2301, "ivy.utils.assertions.check_less"]], "check_one_way_broadcastable() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_one_way_broadcastable"], [2302, "ivy.utils.assertions.check_one_way_broadcastable"]], "check_same_dtype() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_same_dtype"], [2303, "ivy.utils.assertions.check_same_dtype"]], "check_shape() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_shape"], [2304, "ivy.utils.assertions.check_shape"]], "check_shapes_broadcastable() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_shapes_broadcastable"], [2305, "ivy.utils.assertions.check_shapes_broadcastable"]], "check_true() (in module ivy.utils.assertions)": [[2285, "ivy.utils.assertions.check_true"], [2306, "ivy.utils.assertions.check_true"]], "ivy.utils.assertions": [[2285, "module-ivy.utils.assertions"]], "ivy.utils.backend": [[2307, "module-ivy.utils.backend"]], "importtransformer (class in ivy.utils.backend.ast_helpers)": [[2308, "ivy.utils.backend.ast_helpers.ImportTransformer"], [2309, "ivy.utils.backend.ast_helpers.ImportTransformer"]], "ivyloader (class in ivy.utils.backend.ast_helpers)": [[2308, "ivy.utils.backend.ast_helpers.IvyLoader"], [2310, "ivy.utils.backend.ast_helpers.IvyLoader"]], "ivypathfinder (class in ivy.utils.backend.ast_helpers)": [[2308, "ivy.utils.backend.ast_helpers.IvyPathFinder"], [2311, "ivy.utils.backend.ast_helpers.IvyPathFinder"]], "__init__() (ivy.utils.backend.ast_helpers.importtransformer method)": [[2308, "ivy.utils.backend.ast_helpers.ImportTransformer.__init__"], [2309, "ivy.utils.backend.ast_helpers.ImportTransformer.__init__"]], "__init__() (ivy.utils.backend.ast_helpers.ivyloader method)": [[2308, "ivy.utils.backend.ast_helpers.IvyLoader.__init__"], [2310, "ivy.utils.backend.ast_helpers.IvyLoader.__init__"]], "exec_module() (ivy.utils.backend.ast_helpers.ivyloader method)": [[2308, "ivy.utils.backend.ast_helpers.IvyLoader.exec_module"], [2310, "ivy.utils.backend.ast_helpers.IvyLoader.exec_module"]], "find_spec() (ivy.utils.backend.ast_helpers.ivypathfinder method)": [[2308, "ivy.utils.backend.ast_helpers.IvyPathFinder.find_spec"], [2311, "ivy.utils.backend.ast_helpers.IvyPathFinder.find_spec"]], "impersonate_import() (ivy.utils.backend.ast_helpers.importtransformer method)": [[2308, "ivy.utils.backend.ast_helpers.ImportTransformer.impersonate_import"], [2309, "ivy.utils.backend.ast_helpers.ImportTransformer.impersonate_import"]], "ivy.utils.backend.ast_helpers": [[2308, "module-ivy.utils.backend.ast_helpers"]], "visit_import() (ivy.utils.backend.ast_helpers.importtransformer method)": [[2308, "ivy.utils.backend.ast_helpers.ImportTransformer.visit_Import"], [2309, "ivy.utils.backend.ast_helpers.ImportTransformer.visit_Import"]], "visit_importfrom() (ivy.utils.backend.ast_helpers.importtransformer method)": [[2308, "ivy.utils.backend.ast_helpers.ImportTransformer.visit_ImportFrom"], [2309, "ivy.utils.backend.ast_helpers.ImportTransformer.visit_ImportFrom"]], "contextmanager (class in ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.ContextManager"], [2313, "ivy.utils.backend.handler.ContextManager"]], "__init__() (ivy.utils.backend.handler.contextmanager method)": [[2312, "ivy.utils.backend.handler.ContextManager.__init__"], [2313, "ivy.utils.backend.handler.ContextManager.__init__"]], "choose_random_backend() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.choose_random_backend"], [2314, "ivy.utils.backend.handler.choose_random_backend"]], "clear_backend_stack() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.clear_backend_stack"], [2315, "ivy.utils.backend.handler.clear_backend_stack"]], "convert_from_numpy_to_target_backend() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.convert_from_numpy_to_target_backend"], [2316, "ivy.utils.backend.handler.convert_from_numpy_to_target_backend"]], "convert_from_source_backend_to_numpy() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.convert_from_source_backend_to_numpy"], [2317, "ivy.utils.backend.handler.convert_from_source_backend_to_numpy"]], "current_backend() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.current_backend"], [2318, "ivy.utils.backend.handler.current_backend"]], "fn_name_from_version_specific_fn_name() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.fn_name_from_version_specific_fn_name"], [2319, "ivy.utils.backend.handler.fn_name_from_version_specific_fn_name"]], "get_backend() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.get_backend"], [2320, "ivy.utils.backend.handler.get_backend"]], "ivy.utils.backend.handler": [[2312, "module-ivy.utils.backend.handler"]], "prevent_access_locally() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.prevent_access_locally"], [2321, "ivy.utils.backend.handler.prevent_access_locally"]], "set_backend() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.set_backend"], [2322, "ivy.utils.backend.handler.set_backend"]], "set_backend_to_specific_version() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.set_backend_to_specific_version"], [2323, "ivy.utils.backend.handler.set_backend_to_specific_version"]], "set_jax_backend() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.set_jax_backend"], [2324, "ivy.utils.backend.handler.set_jax_backend"]], "set_numpy_backend() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.set_numpy_backend"], [2325, "ivy.utils.backend.handler.set_numpy_backend"]], "set_tensorflow_backend() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.set_tensorflow_backend"], [2326, "ivy.utils.backend.handler.set_tensorflow_backend"]], "set_torch_backend() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.set_torch_backend"], [2327, "ivy.utils.backend.handler.set_torch_backend"]], "unset_backend() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.unset_backend"], [2328, "ivy.utils.backend.handler.unset_backend"]], "with_backend() (in module ivy.utils.backend.handler)": [[2312, "ivy.utils.backend.handler.with_backend"], [2329, "ivy.utils.backend.handler.with_backend"]], "import_module() (in module ivy.utils.dynamic_import)": [[2330, "ivy.utils.dynamic_import.import_module"], [2331, "ivy.utils.dynamic_import.import_module"]], "ivy.utils.dynamic_import": [[2330, "module-ivy.utils.dynamic_import"]], "add_array_specs() (in module ivy.utils.inspection)": [[2332, "ivy.utils.inspection.add_array_specs"], [2333, "ivy.utils.inspection.add_array_specs"]], "fn_array_spec() (in module ivy.utils.inspection)": [[2332, "ivy.utils.inspection.fn_array_spec"], [2334, "ivy.utils.inspection.fn_array_spec"]], "ivy.utils.inspection": [[2332, "module-ivy.utils.inspection"]], "cprint() (in module ivy.utils.verbosity)": [[2335, "ivy.utils.verbosity.cprint"], [2336, "ivy.utils.verbosity.cprint"]], "ivy.utils.verbosity": [[2335, "module-ivy.utils.verbosity"]]}})