Search.setIndex({"docnames": ["_version", "assertions", "assertions/check_all", "assertions/check_all_or_any_fn", "assertions/check_any", "assertions/check_elem_in_list", "assertions/check_equal", "assertions/check_exists", "assertions/check_false", "assertions/check_fill_value_and_dtype_are_compatible", "assertions/check_gather_input_valid", "assertions/check_gather_nd_input_valid", "assertions/check_greater", "assertions/check_inplace_sizes_valid", "assertions/check_isinstance", "assertions/check_less", "assertions/check_one_way_broadcastable", "assertions/check_shape", "assertions/check_true", "backend_handler", "backend_handler/ContextManager", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/fn_name_from_version_specific_fn_name", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/set_backend_to_specific_version", "backend_handler/set_jax_backend", "backend_handler/set_numpy_backend", "backend_handler/set_tensorflow_backend", "backend_handler/set_torch_backend", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/applied_libraries", "contributing/building_the_docs", "contributing/helpful_resources", "contributing/open_tasks", "contributing/setting_up", "contributing/the_basics", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/experimental", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/experimental", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/array_api_tests", "deep_dive/arrays", "deep_dive/backend_setting", "deep_dive/containers", "deep_dive/continuous_integration", "deep_dive/data_types", "deep_dive/devices", "deep_dive/docstring_examples", "deep_dive/docstrings", "deep_dive/exception_handling", "deep_dive/formatting", "deep_dive/function_arguments", "deep_dive/function_types", "deep_dive/function_wrapping", "deep_dive/inplace_updates", "deep_dive/ivy_frontends", "deep_dive/ivy_frontends_tests", "deep_dive/ivy_tests", "deep_dive/navigating_the_code", "deep_dive/superset_behaviour", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/custom_handle_nestable", "func_wrapper/handle_array_like", "func_wrapper/handle_nans", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/deserialize", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/get", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_array", "functional/ivy/creation/linspace/linspace_container", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_array", "functional/ivy/creation/logspace/logspace_container", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype", "functional/ivy/data_type/DefaultFloatDtype", "functional/ivy/data_type/DefaultIntDtype", "functional/ivy/data_type/DefaultUintDtype", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/experimental", "functional/ivy/experimental/NativeSparseArray", "functional/ivy/experimental/SparseArray", "functional/ivy/experimental/activations", "functional/ivy/experimental/activations/logit", "functional/ivy/experimental/allclose", "functional/ivy/experimental/allclose/allclose_array", "functional/ivy/experimental/allclose/allclose_container", "functional/ivy/experimental/allclose/allclose_functional", "functional/ivy/experimental/allclose/static_allclose_container", "functional/ivy/experimental/angle", "functional/ivy/experimental/angle/angle_array", "functional/ivy/experimental/angle/angle_container", "functional/ivy/experimental/angle/angle_functional", "functional/ivy/experimental/angle/static_angle_container", "functional/ivy/experimental/atleast_1d", "functional/ivy/experimental/atleast_1d/atleast_1d_array", "functional/ivy/experimental/atleast_1d/atleast_1d_container", "functional/ivy/experimental/atleast_1d/atleast_1d_functional", "functional/ivy/experimental/atleast_1d/static_atleast_1d_container", "functional/ivy/experimental/atleast_2d", "functional/ivy/experimental/atleast_2d/atleast_2d_array", "functional/ivy/experimental/atleast_2d/atleast_2d_container", "functional/ivy/experimental/atleast_2d/atleast_2d_functional", "functional/ivy/experimental/atleast_2d/static_atleast_2d_container", "functional/ivy/experimental/atleast_3d", "functional/ivy/experimental/atleast_3d/atleast_3d_array", "functional/ivy/experimental/atleast_3d/atleast_3d_container", "functional/ivy/experimental/atleast_3d/atleast_3d_functional", "functional/ivy/experimental/atleast_3d/static_atleast_3d_container", "functional/ivy/experimental/avg_pool1d", "functional/ivy/experimental/avg_pool1d/avg_pool1d_array", "functional/ivy/experimental/avg_pool1d/avg_pool1d_container", "functional/ivy/experimental/avg_pool1d/avg_pool1d_functional", "functional/ivy/experimental/avg_pool1d/static_avg_pool1d_container", "functional/ivy/experimental/avg_pool2d", "functional/ivy/experimental/avg_pool2d/avg_pool2d_array", "functional/ivy/experimental/avg_pool2d/avg_pool2d_container", "functional/ivy/experimental/avg_pool2d/avg_pool2d_functional", "functional/ivy/experimental/avg_pool2d/static_avg_pool2d_container", "functional/ivy/experimental/avg_pool3d", "functional/ivy/experimental/avg_pool3d/avg_pool3d_array", "functional/ivy/experimental/avg_pool3d/avg_pool3d_container", "functional/ivy/experimental/avg_pool3d/avg_pool3d_functional", "functional/ivy/experimental/avg_pool3d/static_avg_pool3d_container", "functional/ivy/experimental/beta", "functional/ivy/experimental/beta/beta_array", "functional/ivy/experimental/beta/beta_container", "functional/ivy/experimental/beta/beta_functional", "functional/ivy/experimental/beta/static_beta_container", "functional/ivy/experimental/binary_cross_entropy_with_logits", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_container", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_functional", "functional/ivy/experimental/binary_cross_entropy_with_logits/static_binary_cross_entropy_with_logits_container", "functional/ivy/experimental/broadcast_shapes", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_container", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_functional", "functional/ivy/experimental/broadcast_shapes/static_broadcast_shapes_container", "functional/ivy/experimental/compilation", "functional/ivy/experimental/constants", "functional/ivy/experimental/copysign", "functional/ivy/experimental/copysign/copysign_array", "functional/ivy/experimental/copysign/copysign_container", "functional/ivy/experimental/copysign/copysign_functional", "functional/ivy/experimental/copysign/static_copysign_container", "functional/ivy/experimental/count_nonzero", "functional/ivy/experimental/count_nonzero/count_nonzero_array", "functional/ivy/experimental/count_nonzero/count_nonzero_container", "functional/ivy/experimental/count_nonzero/count_nonzero_functional", "functional/ivy/experimental/count_nonzero/static_count_nonzero_container", "functional/ivy/experimental/creation", "functional/ivy/experimental/creation/hamming_window", "functional/ivy/experimental/creation/hann_window", "functional/ivy/experimental/creation/kaiser_bessel_derived_window", "functional/ivy/experimental/creation/kaiser_window", "functional/ivy/experimental/creation/tril_indices", "functional/ivy/experimental/creation/triu_indices", "functional/ivy/experimental/creation/vorbis_window", "functional/ivy/experimental/data_type", "functional/ivy/experimental/data_type/is_native_dtype", "functional/ivy/experimental/dct", "functional/ivy/experimental/dct/dct_array", "functional/ivy/experimental/dct/dct_container", "functional/ivy/experimental/dct/dct_functional", "functional/ivy/experimental/dct/static_dct_container", "functional/ivy/experimental/device", "functional/ivy/experimental/diagflat", "functional/ivy/experimental/diagflat/diagflat_array", "functional/ivy/experimental/diagflat/diagflat_container", "functional/ivy/experimental/diagflat/diagflat_functional", "functional/ivy/experimental/diagflat/static_diagflat_container", "functional/ivy/experimental/diff", "functional/ivy/experimental/diff/diff_array", "functional/ivy/experimental/diff/diff_container", "functional/ivy/experimental/diff/diff_functional", "functional/ivy/experimental/diff/static_diff_container", "functional/ivy/experimental/dirichlet", "functional/ivy/experimental/dirichlet/dirichlet_array", "functional/ivy/experimental/dirichlet/dirichlet_container", "functional/ivy/experimental/dirichlet/dirichlet_functional", "functional/ivy/experimental/dirichlet/static_dirichlet_container", "functional/ivy/experimental/dropout1d", "functional/ivy/experimental/dsplit", "functional/ivy/experimental/dsplit/dsplit_array", "functional/ivy/experimental/dsplit/dsplit_container", "functional/ivy/experimental/dsplit/dsplit_functional", "functional/ivy/experimental/dsplit/static_dsplit_container", "functional/ivy/experimental/dstack", "functional/ivy/experimental/dstack/dstack_array", "functional/ivy/experimental/dstack/dstack_container", "functional/ivy/experimental/dstack/dstack_functional", "functional/ivy/experimental/dstack/static_dstack_container", "functional/ivy/experimental/eig", "functional/ivy/experimental/eig/eig_array", "functional/ivy/experimental/eig/eig_container", "functional/ivy/experimental/eig/eig_functional", "functional/ivy/experimental/eig/static_eig_container", "functional/ivy/experimental/elementwise", "functional/ivy/experimental/elementwise/allclose", "functional/ivy/experimental/elementwise/angle", "functional/ivy/experimental/elementwise/copysign", "functional/ivy/experimental/elementwise/count_nonzero", "functional/ivy/experimental/elementwise/diff", "functional/ivy/experimental/elementwise/exp2", "functional/ivy/experimental/elementwise/fix", "functional/ivy/experimental/elementwise/float_power", "functional/ivy/experimental/elementwise/fmax", "functional/ivy/experimental/elementwise/fmod", "functional/ivy/experimental/elementwise/gcd", "functional/ivy/experimental/elementwise/gradient", "functional/ivy/experimental/elementwise/isclose", "functional/ivy/experimental/elementwise/isneginf", "functional/ivy/experimental/elementwise/isposinf", "functional/ivy/experimental/elementwise/lcm", "functional/ivy/experimental/elementwise/logaddexp2", "functional/ivy/experimental/elementwise/nan_to_num", "functional/ivy/experimental/elementwise/nansum", "functional/ivy/experimental/elementwise/nextafter", "functional/ivy/experimental/elementwise/signbit", "functional/ivy/experimental/elementwise/sinc", "functional/ivy/experimental/elementwise/trapz", "functional/ivy/experimental/elementwise/xlogy", "functional/ivy/experimental/elementwise/zeta", "functional/ivy/experimental/exp2", "functional/ivy/experimental/exp2/exp2_array", "functional/ivy/experimental/exp2/exp2_container", "functional/ivy/experimental/exp2/exp2_functional", "functional/ivy/experimental/exp2/static_exp2_container", "functional/ivy/experimental/fft", "functional/ivy/experimental/fix", "functional/ivy/experimental/fix/fix_array", "functional/ivy/experimental/fix/fix_container", "functional/ivy/experimental/fix/fix_functional", "functional/ivy/experimental/fix/static_fix_container", "functional/ivy/experimental/flatten", "functional/ivy/experimental/flatten/flatten_array", "functional/ivy/experimental/flatten/flatten_container", "functional/ivy/experimental/flatten/flatten_functional", "functional/ivy/experimental/flatten/static_flatten_container", "functional/ivy/experimental/fliplr", "functional/ivy/experimental/fliplr/fliplr_array", "functional/ivy/experimental/fliplr/fliplr_container", "functional/ivy/experimental/fliplr/fliplr_functional", "functional/ivy/experimental/fliplr/static_fliplr_container", "functional/ivy/experimental/flipud", "functional/ivy/experimental/flipud/flipud_array", "functional/ivy/experimental/flipud/flipud_container", "functional/ivy/experimental/flipud/flipud_functional", "functional/ivy/experimental/flipud/static_flipud_container", "functional/ivy/experimental/float_power", "functional/ivy/experimental/float_power/float_power_array", "functional/ivy/experimental/float_power/float_power_container", "functional/ivy/experimental/float_power/float_power_functional", "functional/ivy/experimental/float_power/static_float_power_container", "functional/ivy/experimental/fmax", "functional/ivy/experimental/fmax/fmax_array", "functional/ivy/experimental/fmax/fmax_container", "functional/ivy/experimental/fmax/fmax_functional", "functional/ivy/experimental/fmax/static_fmax_container", "functional/ivy/experimental/fmod", "functional/ivy/experimental/fmod/fmod_array", "functional/ivy/experimental/fmod/fmod_container", "functional/ivy/experimental/fmod/fmod_functional", "functional/ivy/experimental/fmod/static_fmod_container", "functional/ivy/experimental/gamma", "functional/ivy/experimental/gamma/gamma_array", "functional/ivy/experimental/gamma/gamma_functional", "functional/ivy/experimental/gcd", "functional/ivy/experimental/gcd/gcd_array", "functional/ivy/experimental/gcd/gcd_container", "functional/ivy/experimental/gcd/gcd_functional", "functional/ivy/experimental/gcd/static_gcd_container", "functional/ivy/experimental/general", "functional/ivy/experimental/general/isin", "functional/ivy/experimental/gradient", "functional/ivy/experimental/gradient/gradient_array", "functional/ivy/experimental/gradient/gradient_container", "functional/ivy/experimental/gradient/gradient_functional", "functional/ivy/experimental/gradient/static_gradient_container", "functional/ivy/experimental/gradients", "functional/ivy/experimental/hamming_window", "functional/ivy/experimental/hamming_window/hamming_window_container", "functional/ivy/experimental/hamming_window/hamming_window_functional", "functional/ivy/experimental/hamming_window/static_hamming_window_container", "functional/ivy/experimental/hann_window", "functional/ivy/experimental/hann_window/hann_window_container", "functional/ivy/experimental/hann_window/hann_window_functional", "functional/ivy/experimental/hann_window/static_hann_window_container", "functional/ivy/experimental/heaviside", "functional/ivy/experimental/heaviside/heaviside_array", "functional/ivy/experimental/heaviside/heaviside_container", "functional/ivy/experimental/heaviside/heaviside_functional", "functional/ivy/experimental/heaviside/static_heaviside_container", "functional/ivy/experimental/hsplit", "functional/ivy/experimental/hsplit/hsplit_array", "functional/ivy/experimental/hsplit/hsplit_container", "functional/ivy/experimental/hsplit/hsplit_functional", "functional/ivy/experimental/hsplit/static_hsplit_container", "functional/ivy/experimental/hstack", "functional/ivy/experimental/hstack/hstack_array", "functional/ivy/experimental/hstack/hstack_container", "functional/ivy/experimental/hstack/hstack_functional", "functional/ivy/experimental/hstack/static_hstack_container", "functional/ivy/experimental/i0", "functional/ivy/experimental/i0/i0_array", "functional/ivy/experimental/i0/i0_container", "functional/ivy/experimental/i0/i0_functional", "functional/ivy/experimental/i0/static_i0_container", "functional/ivy/experimental/is_ivy_sparse_array", "functional/ivy/experimental/is_native_dtype", "functional/ivy/experimental/is_native_sparse_array", "functional/ivy/experimental/isclose", "functional/ivy/experimental/isclose/isclose_array", "functional/ivy/experimental/isclose/isclose_container", "functional/ivy/experimental/isclose/isclose_functional", "functional/ivy/experimental/isclose/static_isclose_container", "functional/ivy/experimental/isin", "functional/ivy/experimental/isin/isin_array", "functional/ivy/experimental/isin/isin_container", "functional/ivy/experimental/isin/isin_functional", "functional/ivy/experimental/isin/static_isin_container", "functional/ivy/experimental/isneginf", "functional/ivy/experimental/isneginf/isneginf_array", "functional/ivy/experimental/isneginf/isneginf_container", "functional/ivy/experimental/isneginf/isneginf_functional", "functional/ivy/experimental/isneginf/static_isneginf_container", "functional/ivy/experimental/isposinf", "functional/ivy/experimental/isposinf/isposinf_array", "functional/ivy/experimental/isposinf/isposinf_container", "functional/ivy/experimental/isposinf/isposinf_functional", "functional/ivy/experimental/isposinf/static_isposinf_container", "functional/ivy/experimental/kaiser_bessel_derived_window", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_container", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_functional", "functional/ivy/experimental/kaiser_bessel_derived_window/static_kaiser_bessel_derived_window_container", "functional/ivy/experimental/kaiser_window", "functional/ivy/experimental/kaiser_window/kaiser_window_container", "functional/ivy/experimental/kaiser_window/kaiser_window_functional", "functional/ivy/experimental/kaiser_window/static_kaiser_window_container", "functional/ivy/experimental/kron", "functional/ivy/experimental/kron/kron_array", "functional/ivy/experimental/kron/kron_container", "functional/ivy/experimental/kron/kron_functional", "functional/ivy/experimental/kron/static_kron_container", "functional/ivy/experimental/layers", "functional/ivy/experimental/layers/avg_pool1d", "functional/ivy/experimental/layers/avg_pool2d", "functional/ivy/experimental/layers/avg_pool3d", "functional/ivy/experimental/layers/dct", "functional/ivy/experimental/layers/dropout1d", "functional/ivy/experimental/layers/fft", "functional/ivy/experimental/layers/max_pool1d", "functional/ivy/experimental/layers/max_pool2d", "functional/ivy/experimental/layers/max_pool3d", "functional/ivy/experimental/lcm", "functional/ivy/experimental/lcm/lcm_array", "functional/ivy/experimental/lcm/lcm_container", "functional/ivy/experimental/lcm/lcm_functional", "functional/ivy/experimental/lcm/static_lcm_container", "functional/ivy/experimental/linear_algebra", "functional/ivy/experimental/linear_algebra/diagflat", "functional/ivy/experimental/linear_algebra/eig", "functional/ivy/experimental/linear_algebra/kron", "functional/ivy/experimental/linear_algebra/matrix_exp", "functional/ivy/experimental/linear_algebra/multi_dot", "functional/ivy/experimental/logaddexp2", "functional/ivy/experimental/logaddexp2/logaddexp2_array", "functional/ivy/experimental/logaddexp2/logaddexp2_container", "functional/ivy/experimental/logaddexp2/logaddexp2_functional", "functional/ivy/experimental/logaddexp2/static_logaddexp2_container", "functional/ivy/experimental/logit", "functional/ivy/experimental/logit/logit_array", "functional/ivy/experimental/logit/logit_container", "functional/ivy/experimental/logit/logit_functional", "functional/ivy/experimental/logit/static_logit_container", "functional/ivy/experimental/losses", "functional/ivy/experimental/losses/binary_cross_entropy_with_logits", "functional/ivy/experimental/manipulation", "functional/ivy/experimental/manipulation/atleast_1d", "functional/ivy/experimental/manipulation/atleast_2d", "functional/ivy/experimental/manipulation/atleast_3d", "functional/ivy/experimental/manipulation/broadcast_shapes", "functional/ivy/experimental/manipulation/dsplit", "functional/ivy/experimental/manipulation/dstack", "functional/ivy/experimental/manipulation/flatten", "functional/ivy/experimental/manipulation/fliplr", "functional/ivy/experimental/manipulation/flipud", "functional/ivy/experimental/manipulation/heaviside", "functional/ivy/experimental/manipulation/hsplit", "functional/ivy/experimental/manipulation/hstack", "functional/ivy/experimental/manipulation/i0", "functional/ivy/experimental/manipulation/moveaxis", "functional/ivy/experimental/manipulation/ndenumerate", "functional/ivy/experimental/manipulation/ndindex", "functional/ivy/experimental/manipulation/pad", "functional/ivy/experimental/manipulation/rot90", "functional/ivy/experimental/manipulation/take_along_axis", "functional/ivy/experimental/manipulation/top_k", "functional/ivy/experimental/manipulation/vsplit", "functional/ivy/experimental/manipulation/vstack", "functional/ivy/experimental/matrix_exp", "functional/ivy/experimental/matrix_exp/matrix_exp_array", "functional/ivy/experimental/matrix_exp/matrix_exp_container", "functional/ivy/experimental/matrix_exp/matrix_exp_functional", "functional/ivy/experimental/matrix_exp/static_matrix_exp_container", "functional/ivy/experimental/max_pool1d", "functional/ivy/experimental/max_pool1d/max_pool1d_array", "functional/ivy/experimental/max_pool1d/max_pool1d_container", "functional/ivy/experimental/max_pool1d/max_pool1d_functional", "functional/ivy/experimental/max_pool1d/static_max_pool1d_container", "functional/ivy/experimental/max_pool2d", "functional/ivy/experimental/max_pool2d/max_pool2d_array", "functional/ivy/experimental/max_pool2d/max_pool2d_container", "functional/ivy/experimental/max_pool2d/max_pool2d_functional", "functional/ivy/experimental/max_pool2d/static_max_pool2d_container", "functional/ivy/experimental/max_pool3d", "functional/ivy/experimental/max_pool3d/max_pool3d_array", "functional/ivy/experimental/max_pool3d/max_pool3d_container", "functional/ivy/experimental/max_pool3d/max_pool3d_functional", "functional/ivy/experimental/max_pool3d/static_max_pool3d_container", "functional/ivy/experimental/median", "functional/ivy/experimental/median/median_array", "functional/ivy/experimental/median/median_container", "functional/ivy/experimental/median/median_functional", "functional/ivy/experimental/median/static_median_container", "functional/ivy/experimental/meta", "functional/ivy/experimental/moveaxis", "functional/ivy/experimental/moveaxis/moveaxis_array", "functional/ivy/experimental/moveaxis/moveaxis_container", "functional/ivy/experimental/moveaxis/moveaxis_functional", "functional/ivy/experimental/moveaxis/static_moveaxis_container", "functional/ivy/experimental/msort", "functional/ivy/experimental/msort/msort_array", "functional/ivy/experimental/msort/msort_container", "functional/ivy/experimental/msort/msort_functional", "functional/ivy/experimental/msort/static_msort_container", "functional/ivy/experimental/multi_dot", "functional/ivy/experimental/multi_dot/multi_dot_array", "functional/ivy/experimental/multi_dot/multi_dot_container", "functional/ivy/experimental/multi_dot/multi_dot_functional", "functional/ivy/experimental/multi_dot/static_multi_dot_container", "functional/ivy/experimental/nan_to_num", "functional/ivy/experimental/nan_to_num/nan_to_num_array", "functional/ivy/experimental/nan_to_num/nan_to_num_container", "functional/ivy/experimental/nan_to_num/nan_to_num_functional", "functional/ivy/experimental/nan_to_num/static_nan_to_num_container", "functional/ivy/experimental/nanmean", "functional/ivy/experimental/nanmean/nanmean_array", "functional/ivy/experimental/nanmean/nanmean_container", "functional/ivy/experimental/nanmean/nanmean_functional", "functional/ivy/experimental/nanmean/static_nanmean_container", "functional/ivy/experimental/nansum", "functional/ivy/experimental/nansum/nansum_array", "functional/ivy/experimental/nansum/nansum_container", "functional/ivy/experimental/nansum/nansum_functional", "functional/ivy/experimental/nansum/static_nansum_container", "functional/ivy/experimental/native_sparse_array", "functional/ivy/experimental/native_sparse_array_to_indices_values_and_shape", "functional/ivy/experimental/ndenumerate", "functional/ivy/experimental/ndindex", "functional/ivy/experimental/nest", "functional/ivy/experimental/nextafter", "functional/ivy/experimental/nextafter/nextafter_array", "functional/ivy/experimental/nextafter/nextafter_container", "functional/ivy/experimental/nextafter/nextafter_functional", "functional/ivy/experimental/nextafter/static_nextafter_container", "functional/ivy/experimental/norms", "functional/ivy/experimental/pad", "functional/ivy/experimental/pad/pad_array", "functional/ivy/experimental/pad/pad_container", "functional/ivy/experimental/pad/pad_functional", "functional/ivy/experimental/pad/static_pad_container", "functional/ivy/experimental/quantile", "functional/ivy/experimental/quantile/quantile_array", "functional/ivy/experimental/quantile/quantile_container", "functional/ivy/experimental/quantile/quantile_functional", "functional/ivy/experimental/quantile/static_quantile_container", "functional/ivy/experimental/random", "functional/ivy/experimental/random/beta", "functional/ivy/experimental/random/dirichlet", "functional/ivy/experimental/random/gamma", "functional/ivy/experimental/rot90", "functional/ivy/experimental/rot90/rot90_array", "functional/ivy/experimental/rot90/rot90_container", "functional/ivy/experimental/rot90/rot90_functional", "functional/ivy/experimental/rot90/static_rot90_container", "functional/ivy/experimental/searching", "functional/ivy/experimental/set", "functional/ivy/experimental/signbit", "functional/ivy/experimental/signbit/signbit_array", "functional/ivy/experimental/signbit/signbit_container", "functional/ivy/experimental/signbit/signbit_functional", "functional/ivy/experimental/signbit/static_signbit_container", "functional/ivy/experimental/sinc", "functional/ivy/experimental/sinc/sinc_array", "functional/ivy/experimental/sinc/sinc_container", "functional/ivy/experimental/sinc/sinc_functional", "functional/ivy/experimental/sinc/static_sinc_container", "functional/ivy/experimental/sorting", "functional/ivy/experimental/sorting/msort", "functional/ivy/experimental/sparse_array", "functional/ivy/experimental/sparse_array/NativeSparseArray", "functional/ivy/experimental/sparse_array/SparseArray", "functional/ivy/experimental/sparse_array/is_ivy_sparse_array", "functional/ivy/experimental/sparse_array/is_native_sparse_array", "functional/ivy/experimental/sparse_array/native_sparse_array", "functional/ivy/experimental/sparse_array/native_sparse_array_to_indices_values_and_shape", "functional/ivy/experimental/statistical", "functional/ivy/experimental/statistical/median", "functional/ivy/experimental/statistical/nanmean", "functional/ivy/experimental/statistical/quantile", "functional/ivy/experimental/statistical/unravel_index", "functional/ivy/experimental/take_along_axis", "functional/ivy/experimental/take_along_axis/static_take_along_axis_container", "functional/ivy/experimental/take_along_axis/take_along_axis_array", "functional/ivy/experimental/take_along_axis/take_along_axis_container", "functional/ivy/experimental/take_along_axis/take_along_axis_functional", "functional/ivy/experimental/top_k", "functional/ivy/experimental/top_k/static_top_k_container", "functional/ivy/experimental/top_k/top_k_array", "functional/ivy/experimental/top_k/top_k_container", "functional/ivy/experimental/top_k/top_k_functional", "functional/ivy/experimental/trapz", "functional/ivy/experimental/trapz/trapz_array", "functional/ivy/experimental/trapz/trapz_functional", "functional/ivy/experimental/tril_indices", "functional/ivy/experimental/tril_indices/static_tril_indices_container", "functional/ivy/experimental/tril_indices/tril_indices_container", "functional/ivy/experimental/tril_indices/tril_indices_functional", "functional/ivy/experimental/triu_indices", "functional/ivy/experimental/triu_indices/static_triu_indices_container", "functional/ivy/experimental/triu_indices/triu_indices_container", "functional/ivy/experimental/triu_indices/triu_indices_functional", "functional/ivy/experimental/unravel_index", "functional/ivy/experimental/unravel_index/static_unravel_index_container", "functional/ivy/experimental/unravel_index/unravel_index_array", "functional/ivy/experimental/unravel_index/unravel_index_container", "functional/ivy/experimental/unravel_index/unravel_index_functional", "functional/ivy/experimental/utility", "functional/ivy/experimental/vorbis_window", "functional/ivy/experimental/vorbis_window/static_vorbis_window_container", "functional/ivy/experimental/vorbis_window/vorbis_window_container", "functional/ivy/experimental/vorbis_window/vorbis_window_functional", "functional/ivy/experimental/vsplit", "functional/ivy/experimental/vsplit/static_vsplit_container", "functional/ivy/experimental/vsplit/vsplit_array", "functional/ivy/experimental/vsplit/vsplit_container", "functional/ivy/experimental/vsplit/vsplit_functional", "functional/ivy/experimental/vstack", "functional/ivy/experimental/vstack/static_vstack_container", "functional/ivy/experimental/vstack/vstack_array", "functional/ivy/experimental/vstack/vstack_container", "functional/ivy/experimental/vstack/vstack_functional", "functional/ivy/experimental/xlogy", "functional/ivy/experimental/xlogy/static_xlogy_container", "functional/ivy/experimental/xlogy/xlogy_array", "functional/ivy/experimental/xlogy/xlogy_container", "functional/ivy/experimental/xlogy/xlogy_functional", "functional/ivy/experimental/zeta", "functional/ivy/experimental/zeta/static_zeta_container", "functional/ivy/experimental/zeta/zeta_array", "functional/ivy/experimental/zeta/zeta_container", "functional/ivy/experimental/zeta/zeta_functional", "functional/ivy/extensions", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_show_func_wrapper_trace_mode", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_show_func_wrapper_trace_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unset_show_func_wrapper_trace_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/deconv_length", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/get_x_data_format", "functional/ivy/layers/handle_padding", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diag", "functional/ivy/linear_algebra/diag/diag_array", "functional/ivy/linear_algebra/diag/diag_container", "functional/ivy/linear_algebra/diag/diag_functional", "functional/ivy/linear_algebra/diag/static_diag_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eig", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigh/static_eigh_container", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_container", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/eigvalsh/static_eigvalsh_container", "functional/ivy/linear_algebra/inner", "functional/ivy/linear_algebra/inner/inner_array", "functional/ivy/linear_algebra/inner/inner_container", "functional/ivy/linear_algebra/inner/inner_functional", "functional/ivy/linear_algebra/inner/static_inner_container", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matmul/static_matmul_container", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_array", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_container", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/pinv/static_pinv_container", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_array", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/tensorsolve", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_array", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_container", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vander", "functional/ivy/linear_algebra/vander/static_vander_container", "functional/ivy/linear_algebra/vander/vander_array", "functional/ivy/linear_algebra/vander/vander_container", "functional/ivy/linear_algebra/vander/vander_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/duplicate_array_index_chains", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_empty", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/prod/static_prod_container", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "nested_array/nested_array", "nested_array/nested_array/NestedArray", "related_work", "related_work/api_standards", "related_work/compiler_infrastructure", "related_work/exchange_formats", "related_work/frameworks", "related_work/graph_tracers", "related_work/ml_unifying_companies", "related_work/multi_vendor_compiler_frameworks", "related_work/vendor_specific_apis", "related_work/vendor_specific_compilers", "related_work/what_does_ivy_add", "related_work/wrapper_frameworks", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/helpers", "stateful/helpers/ModuleHelpers", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/module/MyTFModule", "stateful/module/MyTorchModule", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "testing/assertions", "testing/assertions/assert_all_close", "testing/assertions/assert_same_type_and_shape", "testing/assertions/check_unsupported_device", "testing/assertions/check_unsupported_device_and_dtype", "testing/assertions/check_unsupported_dtype", "testing/assertions/test_unsupported_function", "testing/assertions/value_test", "testing/available_frameworks", "testing/function_testing", "testing/function_testing/args_to_container", "testing/function_testing/as_cont", "testing/function_testing/as_lists", "testing/function_testing/convtrue", "testing/function_testing/create_args_kwargs", "testing/function_testing/empty_func", "testing/function_testing/flatten", "testing/function_testing/flatten_and_to_np", "testing/function_testing/flatten_fw_and_to_np", "testing/function_testing/get_frontend_ret", "testing/function_testing/get_ret_and_flattened_np_array", "testing/function_testing/gradient_incompatible_function", "testing/function_testing/gradient_test", "testing/function_testing/gradient_unsupported_dtypes", "testing/function_testing/kwargs_to_args_n_kwargs", "testing/function_testing/test_frontend_function", "testing/function_testing/test_frontend_method", "testing/function_testing/test_function", "testing/function_testing/test_method", "testing/function_testing/var_fn", "testing/globals", "testing/globals/InterruptedTest", "testing/globals/TestData", "testing/globals/setup_api_test", "testing/globals/setup_frontend_test", "testing/globals/teardown_api_test", "testing/globals/teardown_frontend_test", "testing/hypothesis_helpers", "testing/hypothesis_helpers/array_helpers", "testing/hypothesis_helpers/array_helpers/array_and_broadcastable_shape", "testing/hypothesis_helpers/array_helpers/array_bools", "testing/hypothesis_helpers/array_helpers/array_indices_axis", "testing/hypothesis_helpers/array_helpers/array_values", "testing/hypothesis_helpers/array_helpers/arrays_and_axes", "testing/hypothesis_helpers/array_helpers/arrays_for_pooling", "testing/hypothesis_helpers/array_helpers/broadcast_shapes", "testing/hypothesis_helpers/array_helpers/dtype_and_values", "testing/hypothesis_helpers/array_helpers/dtype_values_axis", "testing/hypothesis_helpers/array_helpers/list_of_length", "testing/hypothesis_helpers/array_helpers/lists", "testing/hypothesis_helpers/array_helpers/mutually_broadcastable_shapes", "testing/hypothesis_helpers/array_helpers/prod", "testing/hypothesis_helpers/dtype_helpers", "testing/hypothesis_helpers/dtype_helpers/array_dtypes", "testing/hypothesis_helpers/dtype_helpers/get_castable_dtype", "testing/hypothesis_helpers/dtype_helpers/get_dtypes", "testing/hypothesis_helpers/general_helpers", "testing/hypothesis_helpers/general_helpers/apply_safety_factor", "testing/hypothesis_helpers/general_helpers/get_axis", "testing/hypothesis_helpers/general_helpers/get_bounds", "testing/hypothesis_helpers/general_helpers/get_mean_std", "testing/hypothesis_helpers/general_helpers/get_shape", "testing/hypothesis_helpers/general_helpers/matrix_is_stable", "testing/hypothesis_helpers/general_helpers/reshape_shapes", "testing/hypothesis_helpers/general_helpers/subsets", "testing/hypothesis_helpers/general_helpers/x_and_filters", "testing/hypothesis_helpers/number_helpers", "testing/hypothesis_helpers/number_helpers/floats", "testing/hypothesis_helpers/number_helpers/ints", "testing/hypothesis_helpers/number_helpers/number", "testing/structs", "testing/structs/FrontendMethodData", "testing/test_parameter_flags", "testing/test_parameter_flags/AsVariableFlags", "testing/test_parameter_flags/ContainerFlags", "testing/test_parameter_flags/FunctionTestFlags", "testing/test_parameter_flags/NativeArrayFlags", "testing/test_parameter_flags/NumPositionalArg", "testing/test_parameter_flags/NumPositionalArgFn", "testing/test_parameter_flags/NumPositionalArgMethod", "testing/test_parameter_flags/build_flag", "testing/test_parameter_flags/function_flags", "testing/testing_helpers", "testing/testing_helpers/handle_frontend_method", "testing/testing_helpers/handle_frontend_test", "testing/testing_helpers/handle_method", "testing/testing_helpers/handle_test", "testing/testing_helpers/num_positional_args", "testing/testing_helpers/num_positional_args_method", "testing/testing_helpers/seed", "verbosity", "verbosity/cprint"], "filenames": ["_version.rst", "assertions.rst", "assertions/check_all.rst", "assertions/check_all_or_any_fn.rst", "assertions/check_any.rst", "assertions/check_elem_in_list.rst", "assertions/check_equal.rst", "assertions/check_exists.rst", "assertions/check_false.rst", "assertions/check_fill_value_and_dtype_are_compatible.rst", "assertions/check_gather_input_valid.rst", "assertions/check_gather_nd_input_valid.rst", "assertions/check_greater.rst", "assertions/check_inplace_sizes_valid.rst", "assertions/check_isinstance.rst", "assertions/check_less.rst", "assertions/check_one_way_broadcastable.rst", "assertions/check_shape.rst", "assertions/check_true.rst", "backend_handler.rst", "backend_handler/ContextManager.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/fn_name_from_version_specific_fn_name.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/set_backend_to_specific_version.rst", "backend_handler/set_jax_backend.rst", "backend_handler/set_numpy_backend.rst", "backend_handler/set_tensorflow_backend.rst", "backend_handler/set_torch_backend.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/applied_libraries.rst", "contributing/building_the_docs.rst", "contributing/helpful_resources.rst", "contributing/open_tasks.rst", "contributing/setting_up.rst", "contributing/the_basics.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/experimental.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/experimental.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/array_api_tests.rst", "deep_dive/arrays.rst", "deep_dive/backend_setting.rst", "deep_dive/containers.rst", "deep_dive/continuous_integration.rst", "deep_dive/data_types.rst", "deep_dive/devices.rst", "deep_dive/docstring_examples.rst", "deep_dive/docstrings.rst", "deep_dive/exception_handling.rst", "deep_dive/formatting.rst", "deep_dive/function_arguments.rst", "deep_dive/function_types.rst", "deep_dive/function_wrapping.rst", "deep_dive/inplace_updates.rst", "deep_dive/ivy_frontends.rst", "deep_dive/ivy_frontends_tests.rst", "deep_dive/ivy_tests.rst", "deep_dive/navigating_the_code.rst", "deep_dive/superset_behaviour.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/custom_handle_nestable.rst", "func_wrapper/handle_array_like.rst", "func_wrapper/handle_nans.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/deserialize.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/get.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_array.rst", "functional/ivy/creation/linspace/linspace_container.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_array.rst", "functional/ivy/creation/logspace/logspace_container.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype.rst", "functional/ivy/data_type/DefaultFloatDtype.rst", "functional/ivy/data_type/DefaultIntDtype.rst", "functional/ivy/data_type/DefaultUintDtype.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/experimental.rst", "functional/ivy/experimental/NativeSparseArray.rst", "functional/ivy/experimental/SparseArray.rst", "functional/ivy/experimental/activations.rst", "functional/ivy/experimental/activations/logit.rst", "functional/ivy/experimental/allclose.rst", "functional/ivy/experimental/allclose/allclose_array.rst", "functional/ivy/experimental/allclose/allclose_container.rst", "functional/ivy/experimental/allclose/allclose_functional.rst", "functional/ivy/experimental/allclose/static_allclose_container.rst", "functional/ivy/experimental/angle.rst", "functional/ivy/experimental/angle/angle_array.rst", "functional/ivy/experimental/angle/angle_container.rst", "functional/ivy/experimental/angle/angle_functional.rst", "functional/ivy/experimental/angle/static_angle_container.rst", "functional/ivy/experimental/atleast_1d.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_array.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_container.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_functional.rst", "functional/ivy/experimental/atleast_1d/static_atleast_1d_container.rst", "functional/ivy/experimental/atleast_2d.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_array.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_container.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_functional.rst", "functional/ivy/experimental/atleast_2d/static_atleast_2d_container.rst", "functional/ivy/experimental/atleast_3d.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_array.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_container.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_functional.rst", "functional/ivy/experimental/atleast_3d/static_atleast_3d_container.rst", "functional/ivy/experimental/avg_pool1d.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_array.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_container.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_functional.rst", "functional/ivy/experimental/avg_pool1d/static_avg_pool1d_container.rst", "functional/ivy/experimental/avg_pool2d.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_array.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_container.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_functional.rst", "functional/ivy/experimental/avg_pool2d/static_avg_pool2d_container.rst", "functional/ivy/experimental/avg_pool3d.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_array.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_container.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_functional.rst", "functional/ivy/experimental/avg_pool3d/static_avg_pool3d_container.rst", "functional/ivy/experimental/beta.rst", "functional/ivy/experimental/beta/beta_array.rst", "functional/ivy/experimental/beta/beta_container.rst", "functional/ivy/experimental/beta/beta_functional.rst", "functional/ivy/experimental/beta/static_beta_container.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_container.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_functional.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/static_binary_cross_entropy_with_logits_container.rst", "functional/ivy/experimental/broadcast_shapes.rst", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_container.rst", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_functional.rst", "functional/ivy/experimental/broadcast_shapes/static_broadcast_shapes_container.rst", "functional/ivy/experimental/compilation.rst", "functional/ivy/experimental/constants.rst", "functional/ivy/experimental/copysign.rst", "functional/ivy/experimental/copysign/copysign_array.rst", "functional/ivy/experimental/copysign/copysign_container.rst", "functional/ivy/experimental/copysign/copysign_functional.rst", "functional/ivy/experimental/copysign/static_copysign_container.rst", "functional/ivy/experimental/count_nonzero.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_array.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_container.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_functional.rst", "functional/ivy/experimental/count_nonzero/static_count_nonzero_container.rst", "functional/ivy/experimental/creation.rst", "functional/ivy/experimental/creation/hamming_window.rst", "functional/ivy/experimental/creation/hann_window.rst", "functional/ivy/experimental/creation/kaiser_bessel_derived_window.rst", "functional/ivy/experimental/creation/kaiser_window.rst", "functional/ivy/experimental/creation/tril_indices.rst", "functional/ivy/experimental/creation/triu_indices.rst", "functional/ivy/experimental/creation/vorbis_window.rst", "functional/ivy/experimental/data_type.rst", "functional/ivy/experimental/data_type/is_native_dtype.rst", "functional/ivy/experimental/dct.rst", "functional/ivy/experimental/dct/dct_array.rst", "functional/ivy/experimental/dct/dct_container.rst", "functional/ivy/experimental/dct/dct_functional.rst", "functional/ivy/experimental/dct/static_dct_container.rst", "functional/ivy/experimental/device.rst", "functional/ivy/experimental/diagflat.rst", "functional/ivy/experimental/diagflat/diagflat_array.rst", "functional/ivy/experimental/diagflat/diagflat_container.rst", "functional/ivy/experimental/diagflat/diagflat_functional.rst", "functional/ivy/experimental/diagflat/static_diagflat_container.rst", "functional/ivy/experimental/diff.rst", "functional/ivy/experimental/diff/diff_array.rst", "functional/ivy/experimental/diff/diff_container.rst", "functional/ivy/experimental/diff/diff_functional.rst", "functional/ivy/experimental/diff/static_diff_container.rst", "functional/ivy/experimental/dirichlet.rst", "functional/ivy/experimental/dirichlet/dirichlet_array.rst", "functional/ivy/experimental/dirichlet/dirichlet_container.rst", "functional/ivy/experimental/dirichlet/dirichlet_functional.rst", "functional/ivy/experimental/dirichlet/static_dirichlet_container.rst", "functional/ivy/experimental/dropout1d.rst", "functional/ivy/experimental/dsplit.rst", "functional/ivy/experimental/dsplit/dsplit_array.rst", "functional/ivy/experimental/dsplit/dsplit_container.rst", "functional/ivy/experimental/dsplit/dsplit_functional.rst", "functional/ivy/experimental/dsplit/static_dsplit_container.rst", "functional/ivy/experimental/dstack.rst", "functional/ivy/experimental/dstack/dstack_array.rst", "functional/ivy/experimental/dstack/dstack_container.rst", "functional/ivy/experimental/dstack/dstack_functional.rst", "functional/ivy/experimental/dstack/static_dstack_container.rst", "functional/ivy/experimental/eig.rst", "functional/ivy/experimental/eig/eig_array.rst", "functional/ivy/experimental/eig/eig_container.rst", "functional/ivy/experimental/eig/eig_functional.rst", "functional/ivy/experimental/eig/static_eig_container.rst", "functional/ivy/experimental/elementwise.rst", "functional/ivy/experimental/elementwise/allclose.rst", "functional/ivy/experimental/elementwise/angle.rst", "functional/ivy/experimental/elementwise/copysign.rst", "functional/ivy/experimental/elementwise/count_nonzero.rst", "functional/ivy/experimental/elementwise/diff.rst", "functional/ivy/experimental/elementwise/exp2.rst", "functional/ivy/experimental/elementwise/fix.rst", "functional/ivy/experimental/elementwise/float_power.rst", "functional/ivy/experimental/elementwise/fmax.rst", "functional/ivy/experimental/elementwise/fmod.rst", "functional/ivy/experimental/elementwise/gcd.rst", "functional/ivy/experimental/elementwise/gradient.rst", "functional/ivy/experimental/elementwise/isclose.rst", "functional/ivy/experimental/elementwise/isneginf.rst", "functional/ivy/experimental/elementwise/isposinf.rst", "functional/ivy/experimental/elementwise/lcm.rst", "functional/ivy/experimental/elementwise/logaddexp2.rst", "functional/ivy/experimental/elementwise/nan_to_num.rst", "functional/ivy/experimental/elementwise/nansum.rst", "functional/ivy/experimental/elementwise/nextafter.rst", "functional/ivy/experimental/elementwise/signbit.rst", "functional/ivy/experimental/elementwise/sinc.rst", "functional/ivy/experimental/elementwise/trapz.rst", "functional/ivy/experimental/elementwise/xlogy.rst", "functional/ivy/experimental/elementwise/zeta.rst", "functional/ivy/experimental/exp2.rst", "functional/ivy/experimental/exp2/exp2_array.rst", "functional/ivy/experimental/exp2/exp2_container.rst", "functional/ivy/experimental/exp2/exp2_functional.rst", "functional/ivy/experimental/exp2/static_exp2_container.rst", "functional/ivy/experimental/fft.rst", "functional/ivy/experimental/fix.rst", "functional/ivy/experimental/fix/fix_array.rst", "functional/ivy/experimental/fix/fix_container.rst", "functional/ivy/experimental/fix/fix_functional.rst", "functional/ivy/experimental/fix/static_fix_container.rst", "functional/ivy/experimental/flatten.rst", "functional/ivy/experimental/flatten/flatten_array.rst", "functional/ivy/experimental/flatten/flatten_container.rst", "functional/ivy/experimental/flatten/flatten_functional.rst", "functional/ivy/experimental/flatten/static_flatten_container.rst", "functional/ivy/experimental/fliplr.rst", "functional/ivy/experimental/fliplr/fliplr_array.rst", "functional/ivy/experimental/fliplr/fliplr_container.rst", "functional/ivy/experimental/fliplr/fliplr_functional.rst", "functional/ivy/experimental/fliplr/static_fliplr_container.rst", "functional/ivy/experimental/flipud.rst", "functional/ivy/experimental/flipud/flipud_array.rst", "functional/ivy/experimental/flipud/flipud_container.rst", "functional/ivy/experimental/flipud/flipud_functional.rst", "functional/ivy/experimental/flipud/static_flipud_container.rst", "functional/ivy/experimental/float_power.rst", "functional/ivy/experimental/float_power/float_power_array.rst", "functional/ivy/experimental/float_power/float_power_container.rst", "functional/ivy/experimental/float_power/float_power_functional.rst", "functional/ivy/experimental/float_power/static_float_power_container.rst", "functional/ivy/experimental/fmax.rst", "functional/ivy/experimental/fmax/fmax_array.rst", "functional/ivy/experimental/fmax/fmax_container.rst", "functional/ivy/experimental/fmax/fmax_functional.rst", "functional/ivy/experimental/fmax/static_fmax_container.rst", "functional/ivy/experimental/fmod.rst", "functional/ivy/experimental/fmod/fmod_array.rst", "functional/ivy/experimental/fmod/fmod_container.rst", "functional/ivy/experimental/fmod/fmod_functional.rst", "functional/ivy/experimental/fmod/static_fmod_container.rst", "functional/ivy/experimental/gamma.rst", "functional/ivy/experimental/gamma/gamma_array.rst", "functional/ivy/experimental/gamma/gamma_functional.rst", "functional/ivy/experimental/gcd.rst", "functional/ivy/experimental/gcd/gcd_array.rst", "functional/ivy/experimental/gcd/gcd_container.rst", "functional/ivy/experimental/gcd/gcd_functional.rst", "functional/ivy/experimental/gcd/static_gcd_container.rst", "functional/ivy/experimental/general.rst", "functional/ivy/experimental/general/isin.rst", "functional/ivy/experimental/gradient.rst", "functional/ivy/experimental/gradient/gradient_array.rst", "functional/ivy/experimental/gradient/gradient_container.rst", "functional/ivy/experimental/gradient/gradient_functional.rst", "functional/ivy/experimental/gradient/static_gradient_container.rst", "functional/ivy/experimental/gradients.rst", "functional/ivy/experimental/hamming_window.rst", "functional/ivy/experimental/hamming_window/hamming_window_container.rst", "functional/ivy/experimental/hamming_window/hamming_window_functional.rst", "functional/ivy/experimental/hamming_window/static_hamming_window_container.rst", "functional/ivy/experimental/hann_window.rst", "functional/ivy/experimental/hann_window/hann_window_container.rst", "functional/ivy/experimental/hann_window/hann_window_functional.rst", "functional/ivy/experimental/hann_window/static_hann_window_container.rst", "functional/ivy/experimental/heaviside.rst", "functional/ivy/experimental/heaviside/heaviside_array.rst", "functional/ivy/experimental/heaviside/heaviside_container.rst", "functional/ivy/experimental/heaviside/heaviside_functional.rst", "functional/ivy/experimental/heaviside/static_heaviside_container.rst", "functional/ivy/experimental/hsplit.rst", "functional/ivy/experimental/hsplit/hsplit_array.rst", "functional/ivy/experimental/hsplit/hsplit_container.rst", "functional/ivy/experimental/hsplit/hsplit_functional.rst", "functional/ivy/experimental/hsplit/static_hsplit_container.rst", "functional/ivy/experimental/hstack.rst", "functional/ivy/experimental/hstack/hstack_array.rst", "functional/ivy/experimental/hstack/hstack_container.rst", "functional/ivy/experimental/hstack/hstack_functional.rst", "functional/ivy/experimental/hstack/static_hstack_container.rst", "functional/ivy/experimental/i0.rst", "functional/ivy/experimental/i0/i0_array.rst", "functional/ivy/experimental/i0/i0_container.rst", "functional/ivy/experimental/i0/i0_functional.rst", "functional/ivy/experimental/i0/static_i0_container.rst", "functional/ivy/experimental/is_ivy_sparse_array.rst", "functional/ivy/experimental/is_native_dtype.rst", "functional/ivy/experimental/is_native_sparse_array.rst", "functional/ivy/experimental/isclose.rst", "functional/ivy/experimental/isclose/isclose_array.rst", "functional/ivy/experimental/isclose/isclose_container.rst", "functional/ivy/experimental/isclose/isclose_functional.rst", "functional/ivy/experimental/isclose/static_isclose_container.rst", "functional/ivy/experimental/isin.rst", "functional/ivy/experimental/isin/isin_array.rst", "functional/ivy/experimental/isin/isin_container.rst", "functional/ivy/experimental/isin/isin_functional.rst", "functional/ivy/experimental/isin/static_isin_container.rst", "functional/ivy/experimental/isneginf.rst", "functional/ivy/experimental/isneginf/isneginf_array.rst", "functional/ivy/experimental/isneginf/isneginf_container.rst", "functional/ivy/experimental/isneginf/isneginf_functional.rst", "functional/ivy/experimental/isneginf/static_isneginf_container.rst", "functional/ivy/experimental/isposinf.rst", "functional/ivy/experimental/isposinf/isposinf_array.rst", "functional/ivy/experimental/isposinf/isposinf_container.rst", "functional/ivy/experimental/isposinf/isposinf_functional.rst", "functional/ivy/experimental/isposinf/static_isposinf_container.rst", "functional/ivy/experimental/kaiser_bessel_derived_window.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_container.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_functional.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/static_kaiser_bessel_derived_window_container.rst", "functional/ivy/experimental/kaiser_window.rst", "functional/ivy/experimental/kaiser_window/kaiser_window_container.rst", "functional/ivy/experimental/kaiser_window/kaiser_window_functional.rst", "functional/ivy/experimental/kaiser_window/static_kaiser_window_container.rst", "functional/ivy/experimental/kron.rst", "functional/ivy/experimental/kron/kron_array.rst", "functional/ivy/experimental/kron/kron_container.rst", "functional/ivy/experimental/kron/kron_functional.rst", "functional/ivy/experimental/kron/static_kron_container.rst", "functional/ivy/experimental/layers.rst", "functional/ivy/experimental/layers/avg_pool1d.rst", "functional/ivy/experimental/layers/avg_pool2d.rst", "functional/ivy/experimental/layers/avg_pool3d.rst", "functional/ivy/experimental/layers/dct.rst", "functional/ivy/experimental/layers/dropout1d.rst", "functional/ivy/experimental/layers/fft.rst", "functional/ivy/experimental/layers/max_pool1d.rst", "functional/ivy/experimental/layers/max_pool2d.rst", "functional/ivy/experimental/layers/max_pool3d.rst", "functional/ivy/experimental/lcm.rst", "functional/ivy/experimental/lcm/lcm_array.rst", "functional/ivy/experimental/lcm/lcm_container.rst", "functional/ivy/experimental/lcm/lcm_functional.rst", "functional/ivy/experimental/lcm/static_lcm_container.rst", "functional/ivy/experimental/linear_algebra.rst", "functional/ivy/experimental/linear_algebra/diagflat.rst", "functional/ivy/experimental/linear_algebra/eig.rst", "functional/ivy/experimental/linear_algebra/kron.rst", "functional/ivy/experimental/linear_algebra/matrix_exp.rst", "functional/ivy/experimental/linear_algebra/multi_dot.rst", "functional/ivy/experimental/logaddexp2.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_array.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_container.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_functional.rst", "functional/ivy/experimental/logaddexp2/static_logaddexp2_container.rst", "functional/ivy/experimental/logit.rst", "functional/ivy/experimental/logit/logit_array.rst", "functional/ivy/experimental/logit/logit_container.rst", "functional/ivy/experimental/logit/logit_functional.rst", "functional/ivy/experimental/logit/static_logit_container.rst", "functional/ivy/experimental/losses.rst", "functional/ivy/experimental/losses/binary_cross_entropy_with_logits.rst", "functional/ivy/experimental/manipulation.rst", "functional/ivy/experimental/manipulation/atleast_1d.rst", "functional/ivy/experimental/manipulation/atleast_2d.rst", "functional/ivy/experimental/manipulation/atleast_3d.rst", "functional/ivy/experimental/manipulation/broadcast_shapes.rst", "functional/ivy/experimental/manipulation/dsplit.rst", "functional/ivy/experimental/manipulation/dstack.rst", "functional/ivy/experimental/manipulation/flatten.rst", "functional/ivy/experimental/manipulation/fliplr.rst", "functional/ivy/experimental/manipulation/flipud.rst", "functional/ivy/experimental/manipulation/heaviside.rst", "functional/ivy/experimental/manipulation/hsplit.rst", "functional/ivy/experimental/manipulation/hstack.rst", "functional/ivy/experimental/manipulation/i0.rst", "functional/ivy/experimental/manipulation/moveaxis.rst", "functional/ivy/experimental/manipulation/ndenumerate.rst", "functional/ivy/experimental/manipulation/ndindex.rst", "functional/ivy/experimental/manipulation/pad.rst", "functional/ivy/experimental/manipulation/rot90.rst", "functional/ivy/experimental/manipulation/take_along_axis.rst", "functional/ivy/experimental/manipulation/top_k.rst", "functional/ivy/experimental/manipulation/vsplit.rst", "functional/ivy/experimental/manipulation/vstack.rst", "functional/ivy/experimental/matrix_exp.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_array.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_container.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_functional.rst", "functional/ivy/experimental/matrix_exp/static_matrix_exp_container.rst", "functional/ivy/experimental/max_pool1d.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_array.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_container.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_functional.rst", "functional/ivy/experimental/max_pool1d/static_max_pool1d_container.rst", "functional/ivy/experimental/max_pool2d.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_array.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_container.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_functional.rst", "functional/ivy/experimental/max_pool2d/static_max_pool2d_container.rst", "functional/ivy/experimental/max_pool3d.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_array.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_container.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_functional.rst", "functional/ivy/experimental/max_pool3d/static_max_pool3d_container.rst", "functional/ivy/experimental/median.rst", "functional/ivy/experimental/median/median_array.rst", "functional/ivy/experimental/median/median_container.rst", "functional/ivy/experimental/median/median_functional.rst", "functional/ivy/experimental/median/static_median_container.rst", "functional/ivy/experimental/meta.rst", "functional/ivy/experimental/moveaxis.rst", "functional/ivy/experimental/moveaxis/moveaxis_array.rst", "functional/ivy/experimental/moveaxis/moveaxis_container.rst", "functional/ivy/experimental/moveaxis/moveaxis_functional.rst", "functional/ivy/experimental/moveaxis/static_moveaxis_container.rst", "functional/ivy/experimental/msort.rst", "functional/ivy/experimental/msort/msort_array.rst", "functional/ivy/experimental/msort/msort_container.rst", "functional/ivy/experimental/msort/msort_functional.rst", "functional/ivy/experimental/msort/static_msort_container.rst", "functional/ivy/experimental/multi_dot.rst", "functional/ivy/experimental/multi_dot/multi_dot_array.rst", "functional/ivy/experimental/multi_dot/multi_dot_container.rst", "functional/ivy/experimental/multi_dot/multi_dot_functional.rst", "functional/ivy/experimental/multi_dot/static_multi_dot_container.rst", "functional/ivy/experimental/nan_to_num.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_array.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_container.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_functional.rst", "functional/ivy/experimental/nan_to_num/static_nan_to_num_container.rst", "functional/ivy/experimental/nanmean.rst", "functional/ivy/experimental/nanmean/nanmean_array.rst", "functional/ivy/experimental/nanmean/nanmean_container.rst", "functional/ivy/experimental/nanmean/nanmean_functional.rst", "functional/ivy/experimental/nanmean/static_nanmean_container.rst", "functional/ivy/experimental/nansum.rst", "functional/ivy/experimental/nansum/nansum_array.rst", "functional/ivy/experimental/nansum/nansum_container.rst", "functional/ivy/experimental/nansum/nansum_functional.rst", "functional/ivy/experimental/nansum/static_nansum_container.rst", "functional/ivy/experimental/native_sparse_array.rst", "functional/ivy/experimental/native_sparse_array_to_indices_values_and_shape.rst", "functional/ivy/experimental/ndenumerate.rst", "functional/ivy/experimental/ndindex.rst", "functional/ivy/experimental/nest.rst", "functional/ivy/experimental/nextafter.rst", "functional/ivy/experimental/nextafter/nextafter_array.rst", "functional/ivy/experimental/nextafter/nextafter_container.rst", "functional/ivy/experimental/nextafter/nextafter_functional.rst", "functional/ivy/experimental/nextafter/static_nextafter_container.rst", "functional/ivy/experimental/norms.rst", "functional/ivy/experimental/pad.rst", "functional/ivy/experimental/pad/pad_array.rst", "functional/ivy/experimental/pad/pad_container.rst", "functional/ivy/experimental/pad/pad_functional.rst", "functional/ivy/experimental/pad/static_pad_container.rst", "functional/ivy/experimental/quantile.rst", "functional/ivy/experimental/quantile/quantile_array.rst", "functional/ivy/experimental/quantile/quantile_container.rst", "functional/ivy/experimental/quantile/quantile_functional.rst", "functional/ivy/experimental/quantile/static_quantile_container.rst", "functional/ivy/experimental/random.rst", "functional/ivy/experimental/random/beta.rst", "functional/ivy/experimental/random/dirichlet.rst", "functional/ivy/experimental/random/gamma.rst", "functional/ivy/experimental/rot90.rst", "functional/ivy/experimental/rot90/rot90_array.rst", "functional/ivy/experimental/rot90/rot90_container.rst", "functional/ivy/experimental/rot90/rot90_functional.rst", "functional/ivy/experimental/rot90/static_rot90_container.rst", "functional/ivy/experimental/searching.rst", "functional/ivy/experimental/set.rst", "functional/ivy/experimental/signbit.rst", "functional/ivy/experimental/signbit/signbit_array.rst", "functional/ivy/experimental/signbit/signbit_container.rst", "functional/ivy/experimental/signbit/signbit_functional.rst", "functional/ivy/experimental/signbit/static_signbit_container.rst", "functional/ivy/experimental/sinc.rst", "functional/ivy/experimental/sinc/sinc_array.rst", "functional/ivy/experimental/sinc/sinc_container.rst", "functional/ivy/experimental/sinc/sinc_functional.rst", "functional/ivy/experimental/sinc/static_sinc_container.rst", "functional/ivy/experimental/sorting.rst", "functional/ivy/experimental/sorting/msort.rst", "functional/ivy/experimental/sparse_array.rst", "functional/ivy/experimental/sparse_array/NativeSparseArray.rst", "functional/ivy/experimental/sparse_array/SparseArray.rst", "functional/ivy/experimental/sparse_array/is_ivy_sparse_array.rst", "functional/ivy/experimental/sparse_array/is_native_sparse_array.rst", "functional/ivy/experimental/sparse_array/native_sparse_array.rst", "functional/ivy/experimental/sparse_array/native_sparse_array_to_indices_values_and_shape.rst", "functional/ivy/experimental/statistical.rst", "functional/ivy/experimental/statistical/median.rst", "functional/ivy/experimental/statistical/nanmean.rst", "functional/ivy/experimental/statistical/quantile.rst", "functional/ivy/experimental/statistical/unravel_index.rst", "functional/ivy/experimental/take_along_axis.rst", "functional/ivy/experimental/take_along_axis/static_take_along_axis_container.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_array.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_container.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_functional.rst", "functional/ivy/experimental/top_k.rst", "functional/ivy/experimental/top_k/static_top_k_container.rst", "functional/ivy/experimental/top_k/top_k_array.rst", "functional/ivy/experimental/top_k/top_k_container.rst", "functional/ivy/experimental/top_k/top_k_functional.rst", "functional/ivy/experimental/trapz.rst", "functional/ivy/experimental/trapz/trapz_array.rst", "functional/ivy/experimental/trapz/trapz_functional.rst", "functional/ivy/experimental/tril_indices.rst", "functional/ivy/experimental/tril_indices/static_tril_indices_container.rst", "functional/ivy/experimental/tril_indices/tril_indices_container.rst", "functional/ivy/experimental/tril_indices/tril_indices_functional.rst", "functional/ivy/experimental/triu_indices.rst", "functional/ivy/experimental/triu_indices/static_triu_indices_container.rst", "functional/ivy/experimental/triu_indices/triu_indices_container.rst", "functional/ivy/experimental/triu_indices/triu_indices_functional.rst", "functional/ivy/experimental/unravel_index.rst", "functional/ivy/experimental/unravel_index/static_unravel_index_container.rst", "functional/ivy/experimental/unravel_index/unravel_index_array.rst", "functional/ivy/experimental/unravel_index/unravel_index_container.rst", "functional/ivy/experimental/unravel_index/unravel_index_functional.rst", "functional/ivy/experimental/utility.rst", "functional/ivy/experimental/vorbis_window.rst", "functional/ivy/experimental/vorbis_window/static_vorbis_window_container.rst", "functional/ivy/experimental/vorbis_window/vorbis_window_container.rst", "functional/ivy/experimental/vorbis_window/vorbis_window_functional.rst", "functional/ivy/experimental/vsplit.rst", "functional/ivy/experimental/vsplit/static_vsplit_container.rst", "functional/ivy/experimental/vsplit/vsplit_array.rst", "functional/ivy/experimental/vsplit/vsplit_container.rst", "functional/ivy/experimental/vsplit/vsplit_functional.rst", "functional/ivy/experimental/vstack.rst", "functional/ivy/experimental/vstack/static_vstack_container.rst", "functional/ivy/experimental/vstack/vstack_array.rst", "functional/ivy/experimental/vstack/vstack_container.rst", "functional/ivy/experimental/vstack/vstack_functional.rst", "functional/ivy/experimental/xlogy.rst", "functional/ivy/experimental/xlogy/static_xlogy_container.rst", "functional/ivy/experimental/xlogy/xlogy_array.rst", "functional/ivy/experimental/xlogy/xlogy_container.rst", "functional/ivy/experimental/xlogy/xlogy_functional.rst", "functional/ivy/experimental/zeta.rst", "functional/ivy/experimental/zeta/static_zeta_container.rst", "functional/ivy/experimental/zeta/zeta_array.rst", "functional/ivy/experimental/zeta/zeta_container.rst", "functional/ivy/experimental/zeta/zeta_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_show_func_wrapper_trace_mode.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_show_func_wrapper_trace_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unset_show_func_wrapper_trace_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/deconv_length.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/get_x_data_format.rst", "functional/ivy/layers/handle_padding.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diag.rst", "functional/ivy/linear_algebra/diag/diag_array.rst", "functional/ivy/linear_algebra/diag/diag_container.rst", "functional/ivy/linear_algebra/diag/diag_functional.rst", "functional/ivy/linear_algebra/diag/static_diag_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eig.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigh/static_eigh_container.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_container.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/eigvalsh/static_eigvalsh_container.rst", "functional/ivy/linear_algebra/inner.rst", "functional/ivy/linear_algebra/inner/inner_array.rst", "functional/ivy/linear_algebra/inner/inner_container.rst", "functional/ivy/linear_algebra/inner/inner_functional.rst", "functional/ivy/linear_algebra/inner/static_inner_container.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matmul/static_matmul_container.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_array.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_container.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/pinv/static_pinv_container.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_array.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/tensorsolve.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_array.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_container.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vander.rst", "functional/ivy/linear_algebra/vander/static_vander_container.rst", "functional/ivy/linear_algebra/vander/vander_array.rst", "functional/ivy/linear_algebra/vander/vander_container.rst", "functional/ivy/linear_algebra/vander/vander_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/duplicate_array_index_chains.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_empty.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/prod/static_prod_container.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "nested_array/nested_array.rst", "nested_array/nested_array/NestedArray.rst", "related_work.rst", "related_work/api_standards.rst", "related_work/compiler_infrastructure.rst", "related_work/exchange_formats.rst", "related_work/frameworks.rst", "related_work/graph_tracers.rst", "related_work/ml_unifying_companies.rst", "related_work/multi_vendor_compiler_frameworks.rst", "related_work/vendor_specific_apis.rst", "related_work/vendor_specific_compilers.rst", "related_work/what_does_ivy_add.rst", "related_work/wrapper_frameworks.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/helpers.rst", "stateful/helpers/ModuleHelpers.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/module/MyTFModule.rst", "stateful/module/MyTorchModule.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "testing/assertions.rst", "testing/assertions/assert_all_close.rst", "testing/assertions/assert_same_type_and_shape.rst", "testing/assertions/check_unsupported_device.rst", "testing/assertions/check_unsupported_device_and_dtype.rst", "testing/assertions/check_unsupported_dtype.rst", "testing/assertions/test_unsupported_function.rst", "testing/assertions/value_test.rst", "testing/available_frameworks.rst", "testing/function_testing.rst", "testing/function_testing/args_to_container.rst", "testing/function_testing/as_cont.rst", "testing/function_testing/as_lists.rst", "testing/function_testing/convtrue.rst", "testing/function_testing/create_args_kwargs.rst", "testing/function_testing/empty_func.rst", "testing/function_testing/flatten.rst", "testing/function_testing/flatten_and_to_np.rst", "testing/function_testing/flatten_fw_and_to_np.rst", "testing/function_testing/get_frontend_ret.rst", "testing/function_testing/get_ret_and_flattened_np_array.rst", "testing/function_testing/gradient_incompatible_function.rst", "testing/function_testing/gradient_test.rst", "testing/function_testing/gradient_unsupported_dtypes.rst", "testing/function_testing/kwargs_to_args_n_kwargs.rst", "testing/function_testing/test_frontend_function.rst", "testing/function_testing/test_frontend_method.rst", "testing/function_testing/test_function.rst", "testing/function_testing/test_method.rst", "testing/function_testing/var_fn.rst", "testing/globals.rst", "testing/globals/InterruptedTest.rst", "testing/globals/TestData.rst", "testing/globals/setup_api_test.rst", "testing/globals/setup_frontend_test.rst", "testing/globals/teardown_api_test.rst", "testing/globals/teardown_frontend_test.rst", "testing/hypothesis_helpers.rst", "testing/hypothesis_helpers/array_helpers.rst", "testing/hypothesis_helpers/array_helpers/array_and_broadcastable_shape.rst", "testing/hypothesis_helpers/array_helpers/array_bools.rst", "testing/hypothesis_helpers/array_helpers/array_indices_axis.rst", "testing/hypothesis_helpers/array_helpers/array_values.rst", "testing/hypothesis_helpers/array_helpers/arrays_and_axes.rst", "testing/hypothesis_helpers/array_helpers/arrays_for_pooling.rst", "testing/hypothesis_helpers/array_helpers/broadcast_shapes.rst", "testing/hypothesis_helpers/array_helpers/dtype_and_values.rst", "testing/hypothesis_helpers/array_helpers/dtype_values_axis.rst", "testing/hypothesis_helpers/array_helpers/list_of_length.rst", "testing/hypothesis_helpers/array_helpers/lists.rst", "testing/hypothesis_helpers/array_helpers/mutually_broadcastable_shapes.rst", "testing/hypothesis_helpers/array_helpers/prod.rst", "testing/hypothesis_helpers/dtype_helpers.rst", "testing/hypothesis_helpers/dtype_helpers/array_dtypes.rst", "testing/hypothesis_helpers/dtype_helpers/get_castable_dtype.rst", "testing/hypothesis_helpers/dtype_helpers/get_dtypes.rst", "testing/hypothesis_helpers/general_helpers.rst", "testing/hypothesis_helpers/general_helpers/apply_safety_factor.rst", "testing/hypothesis_helpers/general_helpers/get_axis.rst", "testing/hypothesis_helpers/general_helpers/get_bounds.rst", "testing/hypothesis_helpers/general_helpers/get_mean_std.rst", "testing/hypothesis_helpers/general_helpers/get_shape.rst", "testing/hypothesis_helpers/general_helpers/matrix_is_stable.rst", "testing/hypothesis_helpers/general_helpers/reshape_shapes.rst", "testing/hypothesis_helpers/general_helpers/subsets.rst", "testing/hypothesis_helpers/general_helpers/x_and_filters.rst", "testing/hypothesis_helpers/number_helpers.rst", "testing/hypothesis_helpers/number_helpers/floats.rst", "testing/hypothesis_helpers/number_helpers/ints.rst", "testing/hypothesis_helpers/number_helpers/number.rst", "testing/structs.rst", "testing/structs/FrontendMethodData.rst", "testing/test_parameter_flags.rst", "testing/test_parameter_flags/AsVariableFlags.rst", "testing/test_parameter_flags/ContainerFlags.rst", "testing/test_parameter_flags/FunctionTestFlags.rst", "testing/test_parameter_flags/NativeArrayFlags.rst", "testing/test_parameter_flags/NumPositionalArg.rst", "testing/test_parameter_flags/NumPositionalArgFn.rst", "testing/test_parameter_flags/NumPositionalArgMethod.rst", "testing/test_parameter_flags/build_flag.rst", "testing/test_parameter_flags/function_flags.rst", "testing/testing_helpers.rst", "testing/testing_helpers/handle_frontend_method.rst", "testing/testing_helpers/handle_frontend_test.rst", "testing/testing_helpers/handle_method.rst", "testing/testing_helpers/handle_test.rst", "testing/testing_helpers/num_positional_args.rst", "testing/testing_helpers/num_positional_args_method.rst", "testing/testing_helpers/seed.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_inplace_sizes_valid", "check_isinstance", "check_less", "check_one_way_broadcastable", "check_shape", "check_true", "Backend handler", "ContextManager", "choose_random_backend", "clear_backend_stack", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "set_backend", "set_backend_to_specific_version", "set_jax_backend", "set_numpy_backend", "set_tensorflow_backend", "set_torch_backend", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Experimental", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Experimental", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "custom_handle_nestable", "handle_array_like", "handle_nans", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "deserialize", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "get", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "Compilation", "compile", "Constants", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.Array.linspace", "ivy.Container.linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.Array.logspace", "ivy.Container.logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "DefaultDtype", "DefaultFloatDtype", "DefaultIntDtype", "DefaultUintDtype", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "DefaultDevice", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "Experimental", "NativeSparseArray", "SparseArray", "Activations", "logit", "allclose", "ivy.Array.allclose", "ivy.Container.allclose", "ivy.allclose", "ivy.Container.static_allclose", "angle", "ivy.Array.angle", "ivy.Container.angle", "ivy.angle", "ivy.Container.static_angle", "atleast_1d", "ivy.Array.atleast_1d", "ivy.Container.atleast_1d", "ivy.atleast_1d", "ivy.Container.static_atleast_1d", "atleast_2d", "ivy.Array.atleast_2d", "ivy.Container.atleast_2d", "ivy.atleast_2d", "ivy.Container.static_atleast_2d", "atleast_3d", "ivy.Array.atleast_3d", "ivy.Container.atleast_3d", "ivy.atleast_3d", "ivy.Container.static_atleast_3d", "avg_pool1d", "ivy.Array.avg_pool1d", "ivy.Container.avg_pool1d", "ivy.avg_pool1d", "ivy.Container.static_avg_pool1d", "avg_pool2d", "ivy.Array.avg_pool2d", "ivy.Container.avg_pool2d", "ivy.avg_pool2d", "ivy.Container.static_avg_pool2d", "avg_pool3d", "ivy.Array.avg_pool3d", "ivy.Container.avg_pool3d", "ivy.avg_pool3d", "ivy.Container.static_avg_pool3d", "beta", "ivy.Array.beta", "ivy.Container.beta", "ivy.beta", "ivy.Container.static_beta", "binary_cross_entropy_with_logits", "ivy.Container.binary_cross_entropy_with_logits", "ivy.binary_cross_entropy_with_logits", "ivy.Container.static_binary_cross_entropy_with_logits", "broadcast_shapes", "ivy.Container.broadcast_shapes", "ivy.broadcast_shapes", "ivy.Container.static_broadcast_shapes", "Compilation", "Constants", "copysign", "ivy.Array.copysign", "ivy.Container.copysign", "ivy.copysign", "ivy.Container.static_copysign", "count_nonzero", "ivy.Array.count_nonzero", "ivy.Container.count_nonzero", "ivy.count_nonzero", "ivy.Container.static_count_nonzero", "Creation", "hamming_window", "hann_window", "kaiser_bessel_derived_window", "kaiser_window", "tril_indices", "triu_indices", "vorbis_window", "Data type", "is_native_dtype", "dct", "ivy.Array.dct", "ivy.Container.dct", "ivy.dct", "ivy.Container.static_dct", "Device", "diagflat", "ivy.Array.diagflat", "ivy.Container.diagflat", "ivy.diagflat", "ivy.Container.static_diagflat", "diff", "ivy.Array.diff", "ivy.Container.diff", "ivy.diff", "ivy.Container.static_diff", "dirichlet", "ivy.Array.dirichlet", "ivy.Container.dirichlet", "ivy.dirichlet", "ivy.Container.static_dirichlet", "dropout1d", "dsplit", "ivy.Array.dsplit", "ivy.Container.dsplit", "ivy.dsplit", "ivy.Container.static_dsplit", "dstack", "ivy.Array.dstack", "ivy.Container.dstack", "ivy.dstack", "ivy.Container.static_dstack", "eig", "ivy.Array.eig", "ivy.Container.eig", "ivy.eig", "ivy.Container.static_eig", "Elementwise", "allclose", "angle", "copysign", "count_nonzero", "diff", "exp2", "fix", "float_power", "fmax", "fmod", "gcd", "gradient", "isclose", "isneginf", "isposinf", "lcm", "logaddexp2", "nan_to_num", "nansum", "nextafter", "signbit", "sinc", "trapz", "xlogy", "zeta", "exp2", "ivy.Array.exp2", "ivy.Container.exp2", "ivy.exp2", "ivy.Container.static_exp2", "fft", "fix", "ivy.Array.fix", "ivy.Container.fix", "ivy.fix", "ivy.Container.static_fix", "flatten", "ivy.Array.flatten", "ivy.Container.flatten", "ivy.flatten", "ivy.Container.static_flatten", "fliplr", "ivy.Array.fliplr", "ivy.Container.fliplr", "ivy.fliplr", "ivy.Container.static_fliplr", "flipud", "ivy.Array.flipud", "ivy.Container.flipud", "ivy.flipud", "ivy.Container.static_flipud", "float_power", "ivy.Array.float_power", "ivy.Container.float_power", "ivy.float_power", "ivy.Container.static_float_power", "fmax", "ivy.Array.fmax", "ivy.Container.fmax", "ivy.fmax", "ivy.Container.static_fmax", "fmod", "ivy.Array.fmod", "ivy.Container.fmod", "ivy.fmod", "ivy.Container.static_fmod", "gamma", "ivy.Array.gamma", "ivy.gamma", "gcd", "ivy.Array.gcd", "ivy.Container.gcd", "ivy.gcd", "ivy.Container.static_gcd", "General", "isin", "gradient", "ivy.Array.gradient", "ivy.Container.gradient", "ivy.gradient", "ivy.Container.static_gradient", "Gradients", "hamming_window", "ivy.Container.hamming_window", "ivy.hamming_window", "ivy.Container.static_hamming_window", "hann_window", "ivy.Container.hann_window", "ivy.hann_window", "ivy.Container.static_hann_window", "heaviside", "ivy.Array.heaviside", "ivy.Container.heaviside", "ivy.heaviside", "ivy.Container.static_heaviside", "hsplit", "ivy.Array.hsplit", "ivy.Container.hsplit", "ivy.hsplit", "ivy.Container.static_hsplit", "hstack", "ivy.Array.hstack", "ivy.Container.hstack", "ivy.hstack", "ivy.Container.static_hstack", "i0", "ivy.Array.i0", "ivy.Container.i0", "ivy.i0", "ivy.Container.static_i0", "is_ivy_sparse_array", "is_native_dtype", "is_native_sparse_array", "isclose", "ivy.Array.isclose", "ivy.Container.isclose", "ivy.isclose", "ivy.Container.static_isclose", "isin", "ivy.Array.isin", "ivy.Container.isin", "ivy.isin", "ivy.Container.static_isin", "isneginf", "ivy.Array.isneginf", "ivy.Container.isneginf", "ivy.isneginf", "ivy.Container.static_isneginf", "isposinf", "ivy.Array.isposinf", "ivy.Container.isposinf", "ivy.isposinf", "ivy.Container.static_isposinf", "kaiser_bessel_derived_window", "ivy.Container.kaiser_bessel_derived_window", "ivy.kaiser_bessel_derived_window", "ivy.Container.static_kaiser_bessel_derived_window", "kaiser_window", "ivy.Container.kaiser_window", "ivy.kaiser_window", "ivy.Container.static_kaiser_window", "kron", "ivy.Array.kron", "ivy.Container.kron", "ivy.kron", "ivy.Container.static_kron", "Layers", "avg_pool1d", "avg_pool2d", "avg_pool3d", "dct", "dropout1d", "fft", "max_pool1d", "max_pool2d", "max_pool3d", "lcm", "ivy.Array.lcm", "ivy.Container.lcm", "ivy.lcm", "ivy.Container.static_lcm", "Linear algebra", "diagflat", "eig", "kron", "matrix_exp", "multi_dot", "logaddexp2", "ivy.Array.logaddexp2", "ivy.Container.logaddexp2", "ivy.logaddexp2", "ivy.Container.static_logaddexp2", "logit", "ivy.Array.logit", "ivy.Container.logit", "ivy.logit", "ivy.Container.static_logit", "Losses", "binary_cross_entropy_with_logits", "Manipulation", "atleast_1d", "atleast_2d", "atleast_3d", "broadcast_shapes", "dsplit", "dstack", "flatten", "fliplr", "flipud", "heaviside", "hsplit", "hstack", "i0", "moveaxis", "ndenumerate", "ndindex", "pad", "rot90", "take_along_axis", "top_k", "vsplit", "vstack", "matrix_exp", "ivy.Array.matrix_exp", "ivy.Container.matrix_exp", "ivy.matrix_exp", "ivy.Container.static_matrix_exp", "max_pool1d", "ivy.Array.max_pool1d", "ivy.Container.max_pool1d", "ivy.max_pool1d", "ivy.Container.static_max_pool1d", "max_pool2d", "ivy.Array.max_pool2d", "ivy.Container.max_pool2d", "ivy.max_pool2d", "ivy.Container.static_max_pool2d", "max_pool3d", "ivy.Array.max_pool3d", "ivy.Container.max_pool3d", "ivy.max_pool3d", "ivy.Container.static_max_pool3d", "median", "ivy.Array.median", "ivy.Container.median", "ivy.median", "ivy.Container.static_median", "Meta", "moveaxis", "ivy.Array.moveaxis", "ivy.Container.moveaxis", "ivy.moveaxis", "ivy.Container.static_moveaxis", "msort", "ivy.Array.msort", "ivy.Container.msort", "ivy.msort", "ivy.Container.static_msort", "multi_dot", "ivy.Array.multi_dot", "ivy.Container.multi_dot", "ivy.multi_dot", "ivy.Container.static_multi_dot", "nan_to_num", "ivy.Array.nan_to_num", "ivy.Container.nan_to_num", "ivy.nan_to_num", "ivy.Container.static_nan_to_num", "nanmean", "ivy.Array.nanmean", "ivy.Container.nanmean", "ivy.nanmean", "ivy.Container.static_nanmean", "nansum", "ivy.Array.nansum", "ivy.Container.nansum", "ivy.nansum", "ivy.Container.static_nansum", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "ndenumerate", "ndindex", "Nest", "nextafter", "ivy.Array.nextafter", "ivy.Container.nextafter", "ivy.nextafter", "ivy.Container.static_nextafter", "Norms", "pad", "ivy.Array.pad", "ivy.Container.pad", "ivy.pad", "ivy.Container.static_pad", "quantile", "ivy.Array.quantile", "ivy.Container.quantile", "ivy.quantile", "ivy.Container.static_quantile", "Random", "beta", "dirichlet", "gamma", "rot90", "ivy.Array.rot90", "ivy.Container.rot90", "ivy.rot90", "ivy.Container.static_rot90", "Searching", "Set", "signbit", "ivy.Array.signbit", "ivy.Container.signbit", "ivy.signbit", "ivy.Container.static_signbit", "sinc", "ivy.Array.sinc", "ivy.Container.sinc", "ivy.sinc", "ivy.Container.static_sinc", "Sorting", "msort", "Sparse array", "NativeSparseArray", "SparseArray", "is_ivy_sparse_array", "is_native_sparse_array", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "Statistical", "median", "nanmean", "quantile", "unravel_index", "take_along_axis", "ivy.Container.static_take_along_axis", "ivy.Array.take_along_axis", "ivy.Container.take_along_axis", "ivy.take_along_axis", "top_k", "ivy.Container.static_top_k", "ivy.Array.top_k", "ivy.Container.top_k", "ivy.top_k", "trapz", "ivy.Array.trapz", "ivy.trapz", "tril_indices", "ivy.Container.static_tril_indices", "ivy.Container.tril_indices", "ivy.tril_indices", "triu_indices", "ivy.Container.static_triu_indices", "ivy.Container.triu_indices", "ivy.triu_indices", "unravel_index", "ivy.Container.static_unravel_index", "ivy.Array.unravel_index", "ivy.Container.unravel_index", "ivy.unravel_index", "Utility", "vorbis_window", "ivy.Container.static_vorbis_window", "ivy.Container.vorbis_window", "ivy.vorbis_window", "vsplit", "ivy.Container.static_vsplit", "ivy.Array.vsplit", "ivy.Container.vsplit", "ivy.vsplit", "vstack", "ivy.Container.static_vstack", "ivy.Array.vstack", "ivy.Container.vstack", "ivy.vstack", "xlogy", "ivy.Container.static_xlogy", "ivy.Array.xlogy", "ivy.Container.xlogy", "ivy.xlogy", "zeta", "ivy.Container.static_zeta", "ivy.Array.zeta", "ivy.Container.zeta", "ivy.zeta", "&lt;no title&gt;", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.array_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_show_func_wrapper_trace_mode", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_show_func_wrapper_trace_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "unset_show_func_wrapper_trace_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "GradientTracking", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "deconv_length", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "get_x_data_format", "handle_padding", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "ivy.Array.diag", "ivy.Container.diag", "ivy.diag", "ivy.Container.static_diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eig", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "ivy.Container.static_eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.Container.eigvalsh", "ivy.eigvalsh", "ivy.Container.static_eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Array.matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Container.tensordot", "ivy.tensordot", "tensorsolve", "ivy.Array.tensorsolve", "ivy.Container.tensorsolve", "ivy.tensorsolve", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "duplicate_array_index_chains", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_empty", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "ivy.Container.static_prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Nested array", "NestedArray", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Helpers", "ModuleHelpers", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "MyTFModule", "MyTorchModule", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Assertions", "assert_all_close", "assert_same_type_and_shape", "check_unsupported_device", "check_unsupported_device_and_dtype", "check_unsupported_dtype", "test_unsupported_function", "value_test", "Available frameworks", "Function testing", "args_to_container", "as_cont", "as_lists", "convtrue", "create_args_kwargs", "empty_func", "flatten", "flatten_and_to_np", "flatten_fw_and_to_np", "get_frontend_ret", "get_ret_and_flattened_np_array", "gradient_incompatible_function", "gradient_test", "gradient_unsupported_dtypes", "kwargs_to_args_n_kwargs", "test_frontend_function", "test_frontend_method", "test_function", "test_method", "var_fn", "Globals", "InterruptedTest", "TestData", "setup_api_test", "setup_frontend_test", "teardown_api_test", "teardown_frontend_test", "Hypothesis helpers", "Array helpers", "array_and_broadcastable_shape", "array_bools", "array_indices_axis", "array_values", "arrays_and_axes", "arrays_for_pooling", "broadcast_shapes", "dtype_and_values", "dtype_values_axis", "list_of_length", "lists", "mutually_broadcastable_shapes", "prod", "Dtype helpers", "array_dtypes", "get_castable_dtype", "get_dtypes", "General helpers", "apply_safety_factor", "get_axis", "get_bounds", "get_mean_std", "get_shape", "matrix_is_stable", "reshape_shapes", "subsets", "x_and_filters", "Number helpers", "floats", "ints", "number", "Structs", "FrontendMethodData", "Test parameter flags", "AsVariableFlags", "ContainerFlags", "FunctionTestFlags", "NativeArrayFlags", "NumPositionalArg", "NumPositionalArgFn", "NumPositionalArgMethod", "build_flag", "function_flags", "Testing helpers", "handle_frontend_method", "handle_frontend_test", "handle_method", "handle_test", "num_positional_args", "num_positional_args_method", "seed", "Verbosity", "cprint"], "terms": {"version": [0, 19, 24, 27, 34, 35, 36, 42, 43, 63, 111, 147, 148, 151, 159, 164, 182, 839, 840, 841, 842, 843, 891, 895, 1114, 1115, 1116, 1117, 1118, 1166, 1167, 1168, 1169, 1170, 1201, 1202, 1204, 1258, 1450, 1555, 1582, 1585, 1587, 1590, 1969, 1987, 1988, 2043, 2050, 2052, 2054], "ivi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 153, 154, 155, 156, 157, 162, 163, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 203, 204, 209, 214, 219, 224, 229, 234, 235, 236, 237, 238, 239, 242, 246, 247, 248, 249, 252, 253, 258, 261, 266, 267, 272, 277, 282, 287, 292, 297, 300, 305, 310, 315, 318, 323, 324, 325, 326, 327, 328, 329, 330, 335, 340, 345, 350, 351, 352, 353, 356, 357, 358, 362, 363, 368, 371, 374, 379, 380, 381, 386, 391, 396, 401, 402, 403, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 449, 450, 451, 452, 453, 454, 459, 464, 469, 474, 479, 484, 489, 494, 499, 504, 509, 514, 519, 524, 529, 534, 539, 544, 549, 554, 559, 564, 569, 574, 579, 584, 589, 594, 599, 604, 609, 614, 619, 624, 629, 634, 639, 644, 649, 654, 659, 664, 669, 674, 679, 684, 689, 694, 699, 704, 709, 714, 719, 724, 729, 734, 739, 744, 749, 754, 759, 764, 769, 775, 776, 777, 778, 779, 784, 789, 794, 799, 804, 809, 814, 819, 824, 828, 834, 839, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 860, 865, 870, 875, 876, 881, 886, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 922, 923, 928, 933, 938, 943, 948, 953, 958, 961, 966, 967, 968, 974, 978, 982, 987, 992, 997, 1002, 1003, 1004, 1005, 1010, 1015, 1020, 1025, 1029, 1033, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1099, 1104, 1109, 1114, 1120, 1125, 1130, 1135, 1140, 1145, 1150, 1151, 1152, 1153, 1155, 1161, 1166, 1171, 1172, 1173, 1174, 1175, 1182, 1187, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1211, 1216, 1219, 1223, 1227, 1233, 1237, 1242, 1247, 1252, 1258, 1259, 1264, 1265, 1266, 1269, 1274, 1275, 1280, 1285, 1286, 1287, 1290, 1295, 1300, 1305, 1308, 1313, 1314, 1315, 1320, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1337, 1338, 1339, 1340, 1341, 1346, 1347, 1352, 1357, 1362, 1363, 1368, 1373, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1391, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1412, 1417, 1422, 1423, 1427, 1428, 1433, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1450, 1451, 1452, 1453, 1457, 1461, 1462, 1463, 1467, 1468, 1472, 1476, 1480, 1481, 1486, 1487, 1488, 1489, 1490, 1491, 1496, 1501, 1506, 1510, 1515, 1520, 1521, 1522, 1523, 1528, 1533, 1534, 1535, 1540, 1545, 1550, 1555, 1556, 1561, 1566, 1571, 1576, 1581, 1582, 1587, 1592, 1597, 1602, 1607, 1612, 1617, 1622, 1627, 1632, 1637, 1642, 1647, 1652, 1657, 1662, 1666, 1670, 1675, 1680, 1685, 1690, 1695, 1696, 1701, 1706, 1711, 1712, 1717, 1722, 1727, 1732, 1737, 1742, 1747, 1752, 1757, 1762, 1767, 1772, 1777, 1782, 1787, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1821, 1822, 1827, 1832, 1837, 1842, 1843, 1848, 1849, 1854, 1859, 1864, 1869, 1874, 1875, 1880, 1885, 1890, 1895, 1896, 1901, 1906, 1911, 1912, 1917, 1922, 1926, 1930, 1934, 1938, 1943, 1947, 1952, 1957, 1958, 1963, 1968, 1969, 1972, 1973, 1974, 1975, 1976, 1977, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2034, 2035, 2043, 2045, 2048, 2059, 2060, 2062, 2063, 2124, 2125], "check_al": 1, "result": [1, 2, 4, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 143, 144, 146, 147, 148, 150, 151, 154, 156, 157, 158, 159, 160, 161, 164, 167, 181, 196, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 340, 343, 402, 403, 404, 405, 406, 407, 418, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 854, 855, 856, 857, 858, 860, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1069, 1070, 1071, 1076, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1089, 1091, 1092, 1094, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1156, 1157, 1158, 1159, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1290, 1291, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1357, 1359, 1361, 1363, 1367, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1451, 1453, 1454, 1455, 1457, 1458, 1459, 1461, 1463, 1465, 1466, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1787, 1791, 1796, 1800, 1803, 1804, 1806, 1810, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1882, 1884, 1885, 1887, 1889, 1890, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1913, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1982, 1984, 2043, 2054, 2059, 2060, 2061, 2062, 2090, 2091, 2095, 2096], "messag": [1, 2, 3, 4, 5, 6, 7, 8, 12, 14, 15, 17, 18, 35, 43, 147, 150, 152, 153, 158, 164, 166, 2124, 2125], "one": [1, 2, 19, 25, 27, 35, 36, 41, 42, 43, 55, 56, 63, 64, 65, 72, 73, 76, 77, 82, 83, 84, 85, 88, 89, 97, 98, 103, 104, 109, 110, 111, 112, 113, 114, 115, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 143, 144, 145, 146, 148, 150, 153, 154, 155, 156, 157, 158, 160, 162, 163, 166, 167, 169, 181, 237, 239, 240, 249, 251, 282, 283, 285, 292, 293, 294, 295, 296, 323, 335, 338, 345, 348, 418, 443, 453, 469, 473, 499, 503, 514, 518, 519, 522, 523, 644, 647, 664, 668, 669, 671, 672, 673, 674, 677, 779, 782, 789, 791, 792, 793, 794, 796, 798, 799, 801, 803, 839, 840, 841, 842, 843, 854, 857, 858, 881, 885, 891, 892, 895, 900, 904, 910, 922, 928, 930, 931, 932, 933, 935, 937, 938, 940, 942, 948, 951, 978, 979, 981, 992, 996, 997, 999, 1001, 1005, 1007, 1008, 1009, 1038, 1042, 1044, 1071, 1072, 1078, 1114, 1115, 1116, 1117, 1118, 1120, 1122, 1124, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1166, 1167, 1168, 1169, 1170, 1201, 1202, 1203, 1204, 1227, 1228, 1230, 1242, 1243, 1258, 1259, 1261, 1262, 1263, 1382, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1447, 1451, 1453, 1455, 1456, 1463, 1465, 1466, 1468, 1470, 1471, 1476, 1478, 1479, 1481, 1482, 1484, 1485, 1489, 1501, 1504, 1510, 1513, 1555, 1556, 1560, 1561, 1565, 1592, 1595, 1602, 1605, 1607, 1608, 1609, 1610, 1611, 1627, 1630, 1637, 1640, 1680, 1684, 1685, 1686, 1688, 1689, 1711, 1712, 1716, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1740, 1747, 1751, 1752, 1755, 1756, 1762, 1765, 1782, 1783, 1785, 1816, 1817, 1819, 1820, 1848, 1849, 1850, 1851, 1852, 1853, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1906, 1910, 1911, 1912, 1914, 1916, 1922, 1923, 1925, 1969, 1981, 1982, 1984, 1987, 2019, 2021, 2022, 2072, 2081, 2090, 2092], "arg": [1, 2, 3, 4, 19, 23, 39, 45, 48, 49, 50, 51, 52, 88, 89, 97, 98, 152, 158, 164, 168, 237, 238, 418, 443, 1258, 1438, 1922, 1923, 1993, 1994, 2019, 2020, 2021, 2022, 2034, 2040, 2043, 2046, 2049, 2053, 2054, 2058, 2072, 2083], "i": [1, 2, 19, 23, 24, 25, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 180, 181, 196, 198, 200, 201, 202, 204, 206, 208, 209, 211, 212, 213, 214, 216, 218, 219, 221, 223, 224, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 252, 253, 254, 256, 258, 259, 261, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 337, 339, 340, 343, 345, 347, 348, 349, 350, 352, 353, 354, 356, 357, 358, 360, 363, 366, 368, 369, 371, 372, 374, 377, 380, 381, 384, 386, 387, 388, 389, 390, 391, 394, 396, 399, 403, 405, 406, 407, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 431, 432, 434, 435, 438, 442, 443, 444, 445, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 701, 702, 703, 704, 706, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 750, 752, 753, 754, 755, 757, 758, 759, 760, 762, 763, 764, 765, 767, 768, 769, 770, 772, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 807, 808, 809, 812, 814, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 849, 850, 852, 853, 854, 855, 856, 857, 858, 860, 863, 865, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 886, 889, 891, 892, 893, 894, 895, 896, 897, 899, 900, 903, 904, 905, 906, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 928, 929, 930, 931, 932, 933, 937, 943, 944, 946, 948, 951, 958, 959, 960, 966, 967, 968, 969, 970, 971, 978, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1053, 1054, 1055, 1058, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1076, 1078, 1081, 1082, 1085, 1088, 1089, 1091, 1092, 1099, 1101, 1102, 1103, 1104, 1107, 1109, 1112, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1123, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1185, 1187, 1189, 1190, 1191, 1201, 1202, 1203, 1204, 1206, 1207, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1237, 1238, 1239, 1240, 1241, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1268, 1269, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1324, 1331, 1332, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1347, 1349, 1350, 1351, 1352, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1386, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1401, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1428, 1429, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1491, 1492, 1501, 1504, 1510, 1513, 1523, 1526, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1625, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1725, 1727, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1845, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1857, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1929, 1930, 1931, 1932, 1933, 1934, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2004, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2043, 2048, 2059, 2060, 2061, 2062, 2064, 2065, 2072, 2074, 2075, 2076, 2080, 2081, 2083, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2100, 2101, 2102, 2103, 2116, 2121], "fals": [1, 2, 4, 6, 7, 8, 12, 15, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 76, 77, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 148, 150, 152, 157, 158, 159, 160, 164, 167, 168, 169, 196, 198, 199, 200, 201, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 237, 239, 241, 242, 245, 253, 255, 257, 258, 260, 261, 263, 265, 266, 267, 269, 271, 272, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 302, 304, 305, 306, 308, 310, 311, 313, 315, 316, 318, 319, 321, 323, 330, 331, 332, 333, 334, 335, 337, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 367, 368, 370, 371, 373, 374, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 407, 418, 424, 425, 426, 427, 428, 429, 434, 435, 438, 439, 443, 444, 445, 447, 450, 452, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 686, 688, 689, 690, 691, 692, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 776, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 821, 823, 824, 825, 827, 828, 831, 834, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 852, 853, 854, 858, 860, 862, 864, 865, 869, 870, 874, 876, 880, 881, 883, 885, 886, 888, 890, 891, 892, 893, 895, 904, 905, 906, 909, 910, 912, 917, 921, 923, 927, 928, 932, 933, 937, 938, 942, 943, 947, 948, 952, 953, 957, 961, 965, 966, 967, 968, 972, 974, 975, 976, 977, 978, 979, 980, 981, 982, 986, 987, 991, 992, 994, 996, 997, 1001, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1037, 1048, 1050, 1052, 1059, 1063, 1071, 1091, 1099, 1101, 1103, 1104, 1106, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1124, 1125, 1127, 1129, 1130, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1157, 1159, 1161, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1175, 1177, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1191, 1194, 1196, 1201, 1202, 1203, 1204, 1206, 1207, 1209, 1211, 1212, 1213, 1214, 1215, 1219, 1220, 1221, 1223, 1224, 1225, 1227, 1228, 1233, 1234, 1235, 1237, 1238, 1242, 1243, 1245, 1247, 1248, 1250, 1252, 1253, 1255, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1268, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1287, 1288, 1289, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1326, 1328, 1331, 1332, 1333, 1334, 1335, 1336, 1339, 1341, 1342, 1343, 1344, 1345, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1376, 1377, 1378, 1379, 1380, 1382, 1386, 1388, 1390, 1391, 1393, 1395, 1396, 1400, 1402, 1403, 1405, 1406, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1439, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1461, 1463, 1464, 1465, 1476, 1478, 1479, 1480, 1481, 1482, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1493, 1495, 1496, 1498, 1500, 1501, 1503, 1505, 1506, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1523, 1525, 1527, 1528, 1530, 1531, 1532, 1535, 1537, 1539, 1540, 1542, 1544, 1545, 1547, 1549, 1550, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1565, 1566, 1568, 1570, 1571, 1573, 1575, 1576, 1578, 1580, 1582, 1584, 1586, 1587, 1589, 1591, 1592, 1594, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1616, 1617, 1619, 1621, 1622, 1624, 1626, 1627, 1629, 1631, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1653, 1655, 1656, 1657, 1658, 1660, 1662, 1663, 1664, 1670, 1671, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1711, 1712, 1714, 1716, 1717, 1719, 1721, 1722, 1724, 1726, 1727, 1729, 1731, 1732, 1734, 1736, 1737, 1739, 1741, 1742, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1772, 1773, 1775, 1777, 1778, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1803, 1807, 1808, 1809, 1810, 1821, 1822, 1824, 1825, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1924, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1975, 1976, 1990, 1992, 1993, 1994, 1995, 1996, 2019, 2020, 2025, 2026, 2027, 2028, 2029, 2030, 2034, 2037, 2038, 2039, 2043, 2059, 2061, 2062, 2072, 2075, 2076, 2077, 2080, 2081, 2086, 2087, 2089, 2090, 2092, 2095, 2096, 2099, 2100, 2101], "sourccheck_all_or_any_fn": 1, "fn": [1, 3, 97, 98, 105, 106, 152, 158, 164, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 237, 246, 247, 248, 323, 368, 369, 370, 371, 372, 373, 418, 431, 432, 1258, 1264, 1313, 1314, 1438, 1796, 1803, 1804, 1805, 1807, 1808, 1809, 1972, 1974, 2034, 2037, 2038, 2039, 2040, 2043, 2053, 2054, 2055, 2056, 2057], "typeall": [1, 3, 4, 34, 35, 36, 37, 38, 39, 41, 42, 43, 50, 51, 52, 53, 54, 55, 56, 64, 65, 72, 73, 76, 77, 80, 81, 90, 91, 92, 93, 97, 98, 101, 102, 109, 110, 112, 113, 120, 121, 124, 125, 128, 129, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 180, 181, 182, 194, 234, 235, 237, 239, 240, 292, 295, 305, 307, 309, 310, 312, 314, 418, 433, 439, 674, 676, 678, 844, 849, 850, 865, 868, 891, 896, 897, 917, 920, 1071, 1088, 1140, 1143, 1161, 1164, 1201, 1203, 1219, 1222, 1223, 1226, 1258, 1259, 1262, 1266, 1268, 1320, 1324, 1325, 1385, 1407, 1409, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1450, 1451, 1461, 1489, 1540, 1543, 1555, 1617, 1618, 1620, 1642, 1645, 1647, 1650, 1662, 1665, 1685, 1686, 1688, 1689, 1711, 1732, 1733, 1734, 1735, 1736, 1752, 1753, 1754, 1755, 1756, 1762, 1765, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1808, 1809, 1810, 1811, 1821, 1822, 1823, 1824, 1825, 1826, 1837, 1838, 1839, 1840, 1841, 1848, 1859, 1862, 1957, 1962, 1968, 1969, 1972, 1974, 1977, 1978, 1979, 1980, 1981, 1982, 1984, 1987, 1988, 1995, 1996, 1997, 1998, 2005, 2019, 2021, 2022, 2034, 2037, 2038, 2039, 2043, 2045, 2059, 2061, 2062, 2072, 2076, 2080, 2081, 2086, 2087, 2090, 2092, 2100, 2101, 2102, 2103], "limit": [1, 3, 42, 43, 94, 97, 98, 99, 100, 147, 150, 152, 153, 158, 160, 162, 167, 181, 323, 363, 366, 374, 377, 1258, 1275, 1278, 1280, 1283, 1711, 1712, 1715, 1980, 1981, 1982, 1997, 1999, 2000, 2004, 2072, 2076, 2080, 2081, 2090, 2096, 2100, 2101, 2102, 2103], "0": [1, 3, 19, 23, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 145, 146, 147, 148, 150, 151, 152, 157, 158, 159, 160, 161, 164, 166, 167, 168, 169, 181, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 239, 240, 249, 251, 258, 259, 260, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 292, 293, 294, 295, 296, 300, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 347, 348, 349, 358, 360, 363, 366, 374, 377, 379, 386, 388, 390, 391, 394, 403, 404, 407, 418, 421, 424, 430, 433, 437, 438, 439, 440, 441, 442, 443, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 509, 512, 519, 520, 521, 522, 523, 524, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 587, 589, 592, 594, 595, 596, 597, 598, 599, 600, 602, 604, 605, 607, 609, 611, 613, 614, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 679, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 777, 778, 779, 780, 782, 784, 785, 787, 804, 805, 807, 809, 813, 814, 816, 818, 819, 822, 824, 825, 826, 827, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 881, 883, 885, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 900, 901, 903, 904, 909, 910, 911, 913, 914, 915, 916, 922, 923, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 966, 967, 968, 969, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 995, 996, 997, 998, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1038, 1039, 1042, 1044, 1045, 1053, 1054, 1055, 1057, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1187, 1188, 1189, 1190, 1191, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1261, 1262, 1263, 1266, 1268, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1295, 1297, 1298, 1299, 1305, 1307, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1328, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1341, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1355, 1356, 1368, 1371, 1376, 1379, 1382, 1391, 1392, 1393, 1394, 1395, 1401, 1405, 1407, 1408, 1409, 1410, 1411, 1417, 1418, 1420, 1421, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1436, 1437, 1442, 1445, 1446, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1481, 1482, 1484, 1485, 1487, 1489, 1491, 1492, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1510, 1512, 1513, 1514, 1515, 1518, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1587, 1588, 1590, 1591, 1597, 1598, 1599, 1600, 1602, 1605, 1607, 1608, 1610, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1632, 1633, 1634, 1635, 1636, 1642, 1643, 1644, 1645, 1646, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1679, 1685, 1686, 1688, 1689, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1796, 1798, 1800, 1803, 1804, 1805, 1806, 1808, 1809, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1995, 1996, 1997, 1998, 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2043, 2060, 2061, 2062, 2072, 2076, 2077, 2080, 2081, 2083, 2086, 2089, 2090, 2095, 2100, 2101, 2103], "must": [1, 3, 8, 18, 34, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 147, 148, 149, 150, 151, 152, 154, 155, 158, 159, 160, 161, 162, 164, 168, 169, 196, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 283, 285, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 418, 443, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 804, 805, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 834, 837, 844, 846, 854, 855, 856, 857, 858, 860, 863, 865, 868, 875, 891, 894, 896, 899, 907, 913, 922, 933, 934, 935, 936, 937, 943, 944, 946, 958, 959, 960, 978, 979, 980, 981, 1033, 1036, 1038, 1041, 1042, 1043, 1044, 1047, 1048, 1051, 1053, 1054, 1056, 1057, 1058, 1069, 1070, 1071, 1079, 1085, 1089, 1091, 1094, 1097, 1099, 1100, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1120, 1121, 1122, 1123, 1124, 1130, 1133, 1134, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1187, 1188, 1189, 1190, 1191, 1201, 1204, 1206, 1207, 1209, 1211, 1212, 1213, 1214, 1215, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1290, 1291, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1357, 1359, 1361, 1363, 1367, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1787, 1791, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1864, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1915, 1917, 1920, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1982, 1988, 1997, 2001, 2025, 2029, 2043, 2059, 2060, 2062], "exist": [1, 3, 34, 35, 39, 41, 42, 64, 65, 76, 77, 94, 97, 98, 99, 100, 124, 125, 143, 145, 150, 151, 155, 156, 157, 158, 160, 162, 164, 181, 1258, 1287, 1288, 1289, 1711, 1717, 1720, 1747, 1748, 1749, 1750, 1751, 1968, 1979, 1981, 1984, 1987, 2025, 2029], "accord": [1, 3, 39, 41, 42, 57, 58, 64, 65, 88, 89, 105, 106, 136, 137, 143, 148, 155, 158, 160, 323, 345, 346, 347, 348, 349, 363, 366, 453, 469, 472, 519, 522, 1071, 1088, 1161, 1164, 1258, 1315, 1318, 1328, 1386, 1389, 1391, 1392, 1394, 1555, 1680, 1684, 1711, 1722, 1725, 1787, 1791, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 2090, 2096], "given": [1, 3, 35, 36, 39, 41, 42, 43, 45, 63, 64, 65, 74, 75, 76, 77, 80, 81, 94, 97, 98, 111, 112, 113, 114, 115, 122, 123, 124, 125, 128, 129, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 180, 196, 197, 203, 234, 236, 237, 239, 240, 252, 272, 275, 277, 280, 323, 352, 353, 354, 356, 357, 402, 418, 430, 438, 440, 441, 442, 443, 449, 452, 453, 779, 780, 782, 804, 807, 809, 812, 814, 815, 817, 819, 822, 824, 825, 826, 827, 839, 840, 841, 842, 843, 854, 857, 865, 866, 867, 868, 869, 870, 871, 873, 881, 884, 891, 892, 895, 896, 903, 904, 910, 914, 922, 968, 969, 970, 971, 992, 995, 1005, 1008, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1069, 1070, 1071, 1077, 1083, 1091, 1093, 1099, 1102, 1104, 1107, 1109, 1110, 1112, 1145, 1148, 1171, 1172, 1173, 1211, 1215, 1216, 1218, 1242, 1246, 1257, 1258, 1320, 1321, 1322, 1323, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1402, 1451, 1453, 1456, 1457, 1459, 1460, 1463, 1466, 1468, 1470, 1471, 1472, 1474, 1475, 1476, 1478, 1479, 1489, 1491, 1494, 1496, 1499, 1501, 1504, 1506, 1508, 1510, 1513, 1515, 1518, 1520, 1521, 1523, 1526, 1555, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1715, 1727, 1728, 1729, 1730, 1731, 1732, 1735, 1737, 1739, 1741, 1742, 1745, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1777, 1781, 1782, 1786, 1792, 1796, 1804, 1805, 1814, 1815, 1816, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1846, 1848, 1895, 1901, 1904, 1906, 1909, 1911, 1912, 1915, 1917, 1920, 1957, 1978, 1983, 1984, 1987, 1988, 1990, 1993, 1994, 1997, 2007, 2019, 2020, 2023, 2025, 2031, 2034, 2037, 2038, 2039, 2043, 2052, 2063, 2072, 2074, 2075, 2076, 2080, 2081, 2082, 2083, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2097, 2098, 2100, 2101, 2102, 2103, 2116, 2121], "check_ani": 1, "ar": [1, 4, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 55, 56, 61, 62, 63, 64, 65, 72, 73, 76, 77, 80, 81, 82, 83, 94, 97, 98, 99, 100, 103, 104, 109, 110, 111, 112, 113, 120, 121, 124, 125, 128, 129, 130, 131, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 194, 237, 239, 240, 267, 269, 271, 277, 278, 279, 280, 281, 292, 294, 296, 418, 433, 437, 439, 443, 453, 534, 535, 536, 537, 538, 544, 547, 654, 657, 659, 662, 704, 707, 719, 722, 729, 730, 731, 732, 733, 754, 755, 756, 757, 758, 779, 780, 782, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 819, 822, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 849, 850, 865, 868, 870, 871, 873, 875, 891, 892, 894, 895, 896, 898, 899, 904, 910, 914, 923, 926, 928, 931, 933, 936, 938, 941, 943, 944, 946, 982, 983, 985, 1005, 1008, 1038, 1043, 1071, 1072, 1073, 1074, 1078, 1079, 1080, 1081, 1088, 1114, 1115, 1116, 1117, 1118, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1187, 1188, 1189, 1191, 1201, 1202, 1203, 1204, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1268, 1269, 1271, 1272, 1274, 1325, 1331, 1339, 1346, 1362, 1384, 1385, 1400, 1417, 1420, 1421, 1441, 1451, 1461, 1480, 1486, 1488, 1489, 1528, 1531, 1535, 1538, 1555, 1561, 1564, 1581, 1582, 1585, 1587, 1590, 1602, 1605, 1607, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1652, 1656, 1657, 1661, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1689, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1732, 1733, 1734, 1735, 1736, 1752, 1753, 1754, 1755, 1756, 1762, 1765, 1796, 1798, 1803, 1808, 1809, 1810, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1879, 1885, 1889, 1968, 1969, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1995, 1996, 1997, 2000, 2001, 2019, 2020, 2021, 2031, 2032, 2034, 2035, 2043, 2060, 2061, 2062, 2072, 2075, 2076, 2080, 2081, 2086, 2087, 2088, 2089, 2090, 2092, 2100, 2101, 2102, 2103], "check_elem_in_list": [1, 158], "elem": [1, 5], "list": [1, 5, 39, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 70, 71, 76, 77, 78, 79, 92, 93, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 152, 153, 154, 158, 159, 160, 161, 164, 167, 168, 169, 181, 196, 197, 198, 200, 202, 203, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 237, 239, 240, 242, 243, 244, 267, 269, 271, 282, 283, 285, 287, 290, 292, 294, 296, 300, 302, 304, 318, 319, 321, 323, 335, 336, 337, 338, 339, 345, 347, 349, 386, 388, 390, 403, 405, 407, 418, 424, 443, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 823, 828, 830, 831, 839, 841, 843, 865, 866, 868, 869, 891, 896, 897, 898, 899, 902, 903, 905, 906, 908, 912, 917, 918, 920, 921, 923, 926, 933, 937, 943, 944, 946, 947, 961, 962, 964, 965, 968, 969, 970, 971, 1005, 1007, 1009, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1059, 1060, 1062, 1063, 1071, 1072, 1073, 1074, 1075, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1125, 1128, 1129, 1155, 1157, 1159, 1175, 1177, 1179, 1182, 1183, 1185, 1186, 1187, 1189, 1191, 1192, 1193, 1206, 1207, 1209, 1211, 1212, 1214, 1247, 1248, 1250, 1252, 1253, 1255, 1258, 1259, 1261, 1263, 1265, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1382, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1425, 1426, 1428, 1429, 1431, 1433, 1434, 1436, 1438, 1445, 1446, 1448, 1450, 1451, 1463, 1465, 1480, 1481, 1482, 1484, 1486, 1488, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1530, 1532, 1535, 1537, 1539, 1550, 1552, 1554, 1555, 1556, 1558, 1560, 1561, 1563, 1565, 1587, 1589, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1609, 1611, 1617, 1619, 1621, 1642, 1644, 1646, 1662, 1665, 1670, 1671, 1673, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1711, 1712, 1714, 1716, 1717, 1720, 1727, 1731, 1732, 1734, 1736, 1747, 1749, 1751, 1752, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1782, 1783, 1784, 1785, 1786, 1796, 1797, 1798, 1799, 1800, 1803, 1804, 1805, 1806, 1808, 1809, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1848, 1859, 1861, 1863, 1864, 1867, 1874, 1875, 1876, 1878, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1896, 1898, 1900, 1912, 1914, 1916, 1917, 1919, 1921, 1930, 1932, 1938, 1940, 1942, 1943, 1945, 1952, 1953, 1955, 1958, 1960, 1962, 1963, 1965, 1967, 1969, 1975, 1976, 1981, 1982, 1987, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2019, 2020, 2021, 2034, 2041, 2043, 2046, 2048, 2059, 2060, 2061, 2062, 2072, 2074, 2075, 2076, 2080, 2081, 2082, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2097, 2098, 2100, 2101, 2102, 2103, 2116, 2120, 2121], "check_equ": [1, 158], "x1": [1, 6, 12, 15, 16, 17, 45, 48, 49, 57, 58, 61, 62, 63, 72, 73, 82, 83, 94, 99, 100, 105, 106, 109, 110, 111, 112, 113, 120, 121, 130, 131, 134, 135, 143, 148, 150, 152, 154, 157, 158, 237, 258, 259, 300, 303, 318, 322, 323, 335, 336, 337, 338, 339, 358, 360, 402, 412, 418, 437, 453, 469, 472, 473, 489, 492, 493, 499, 502, 503, 509, 512, 513, 514, 517, 518, 519, 522, 523, 524, 527, 528, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 592, 593, 614, 615, 617, 618, 619, 620, 621, 622, 623, 644, 647, 648, 649, 652, 653, 659, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 689, 690, 691, 692, 693, 699, 702, 703, 714, 715, 716, 717, 718, 749, 750, 753, 769, 770, 771, 772, 773, 779, 780, 781, 782, 783, 834, 835, 836, 837, 838, 891, 892, 894, 899, 900, 901, 902, 907, 908, 911, 915, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 961, 962, 963, 964, 965, 982, 983, 984, 985, 986, 1048, 1049, 1050, 1051, 1052, 1059, 1060, 1061, 1062, 1063, 1071, 1081, 1155, 1156, 1157, 1158, 1159, 1247, 1249, 1251, 1252, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1268, 1555, 1561, 1562, 1563, 1564, 1565, 1592, 1595, 1596, 1602, 1605, 1606, 1627, 1630, 1631, 1647, 1650, 1651, 1662, 1663, 1665, 1666, 1669, 1680, 1681, 1684, 1848, 1869, 1870, 1871, 1872, 1873, 1895, 1901, 1904, 1905, 2043, 2061], "x2": [1, 6, 12, 15, 16, 17, 45, 48, 49, 57, 58, 61, 62, 63, 64, 65, 72, 73, 82, 83, 94, 99, 100, 105, 106, 109, 110, 111, 112, 113, 120, 121, 130, 131, 143, 148, 150, 152, 154, 157, 158, 237, 300, 303, 318, 322, 323, 335, 336, 337, 338, 339, 402, 412, 418, 437, 453, 469, 470, 471, 472, 473, 489, 490, 491, 492, 493, 499, 500, 501, 502, 503, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 689, 690, 691, 692, 693, 699, 700, 701, 702, 703, 714, 715, 716, 717, 718, 749, 750, 751, 752, 753, 769, 770, 771, 772, 773, 779, 780, 781, 782, 783, 834, 835, 836, 837, 838, 891, 892, 894, 899, 900, 901, 902, 907, 908, 911, 915, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 961, 962, 963, 964, 965, 982, 983, 984, 985, 986, 1048, 1049, 1050, 1051, 1052, 1059, 1060, 1061, 1062, 1063, 1071, 1081, 1155, 1156, 1157, 1158, 1159, 1182, 1183, 1247, 1249, 1251, 1252, 1253, 1254, 1258, 1259, 1260, 1261, 1262, 1263, 1555, 1561, 1562, 1563, 1564, 1565, 1592, 1593, 1594, 1595, 1596, 1602, 1603, 1604, 1605, 1606, 1627, 1628, 1629, 1630, 1631, 1647, 1648, 1649, 1650, 1651, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1680, 1681, 1682, 1683, 1684, 1848, 1869, 1870, 1871, 1872, 1873, 2043, 2061], "invers": [1, 6, 7, 61, 62, 109, 110, 120, 121, 148, 180, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 1555, 1597, 1599, 1600, 1612, 1615, 1632, 1634, 1635, 1636], "check_exist": 1, "xcheck_fals": 1, "express": [1, 8, 18, 61, 62, 63, 109, 110, 111, 151, 153, 158, 164, 169, 453, 459, 462, 474, 477, 484, 487, 489, 492, 534, 535, 536, 537, 538, 544, 547, 704, 707, 729, 730, 731, 732, 733, 754, 755, 756, 757, 758, 891, 913, 1187, 1188, 1189, 1190, 1191, 1981, 1982], "check_fill_value_and_dtype_are_compat": 1, "fill_valu": [1, 9, 55, 56, 82, 83, 103, 104, 130, 131, 148, 159, 161, 237, 266, 267, 268, 269, 270, 271, 453, 589, 592, 619, 622, 1848, 1864, 1865, 1866, 1867, 1868], "dtype": [1, 9, 45, 48, 49, 55, 56, 57, 58, 63, 70, 71, 72, 73, 80, 81, 82, 83, 88, 89, 103, 104, 105, 106, 111, 112, 113, 118, 119, 120, 121, 128, 129, 130, 131, 136, 137, 143, 145, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 164, 166, 237, 239, 240, 241, 242, 243, 244, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 346, 347, 348, 349, 351, 352, 353, 354, 356, 357, 362, 363, 366, 368, 369, 371, 372, 374, 375, 376, 377, 379, 380, 381, 384, 386, 387, 388, 389, 390, 391, 394, 396, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 439, 819, 820, 821, 822, 823, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 852, 853, 854, 857, 870, 871, 872, 873, 874, 891, 895, 910, 958, 959, 960, 974, 975, 976, 977, 978, 979, 980, 981, 1003, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1038, 1042, 1135, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1201, 1203, 1204, 1233, 1234, 1235, 1236, 1258, 1308, 1310, 1313, 1314, 1320, 1323, 1417, 1418, 1428, 1429, 1431, 1432, 1489, 1501, 1503, 1504, 1528, 1529, 1530, 1531, 1532, 1555, 1607, 1608, 1609, 1610, 1611, 1685, 1686, 1687, 1688, 1689, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1862, 1895, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1938, 1939, 1940, 1941, 1942, 1947, 1948, 1949, 1950, 1951, 1957, 1958, 1961, 1963, 1966, 1969, 1975, 1976, 1997, 1998, 2001, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2031, 2032, 2034, 2037, 2038, 2039, 2043, 2059, 2060, 2061, 2062, 2063, 2072, 2073, 2075, 2076, 2080, 2081, 2088, 2089, 2090, 2091, 2093, 2094, 2100, 2101], "check_gather_input_valid": 1, "param": [1, 10, 11, 94, 97, 98, 99, 100, 111, 112, 113, 169, 453, 679, 682, 1258, 1264, 1315, 1318, 1319, 1320, 1323, 1324, 1685, 1688], "indic": [1, 10, 11, 39, 55, 56, 63, 64, 65, 70, 71, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 97, 98, 103, 104, 105, 106, 111, 112, 113, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 147, 153, 154, 158, 169, 237, 242, 243, 244, 292, 293, 294, 295, 296, 386, 388, 390, 453, 724, 727, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 844, 849, 850, 876, 877, 878, 879, 880, 891, 903, 922, 968, 969, 970, 971, 987, 988, 989, 990, 991, 1038, 1039, 1040, 1041, 1044, 1045, 1046, 1047, 1071, 1076, 1082, 1090, 1091, 1092, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1201, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1237, 1238, 1239, 1240, 1241, 1258, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1328, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1450, 1451, 1461, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1555, 1685, 1686, 1688, 1689, 1711, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1796, 1797, 1800, 1802, 1804, 1805, 1806, 1808, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1825, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1876, 1877, 1878, 1879, 1885, 1886, 1887, 1888, 1889, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1969, 1972, 1974, 1995, 1996, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2019, 2020, 2021, 2043, 2060, 2061, 2062, 2064, 2065, 2072, 2075], "axi": [1, 10, 46, 47, 55, 56, 63, 64, 65, 72, 73, 74, 75, 76, 77, 82, 83, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 103, 104, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 130, 131, 134, 135, 136, 137, 138, 139, 146, 148, 150, 152, 154, 155, 157, 158, 160, 162, 164, 166, 169, 180, 196, 209, 210, 211, 212, 213, 224, 225, 226, 227, 228, 237, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 292, 293, 294, 295, 296, 418, 443, 839, 840, 841, 842, 843, 854, 855, 856, 857, 858, 865, 866, 867, 868, 869, 876, 877, 878, 879, 880, 881, 884, 891, 895, 896, 903, 910, 914, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 968, 969, 970, 971, 972, 987, 990, 1038, 1042, 1071, 1076, 1077, 1078, 1079, 1080, 1082, 1088, 1089, 1090, 1091, 1092, 1114, 1115, 1116, 1117, 1118, 1125, 1128, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1175, 1178, 1192, 1193, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1237, 1239, 1241, 1258, 1315, 1316, 1317, 1318, 1319, 1450, 1489, 1523, 1526, 1545, 1548, 1555, 1561, 1562, 1563, 1564, 1565, 1576, 1579, 1607, 1608, 1609, 1610, 1611, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1695, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1821, 1843, 1846, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 2072, 2075, 2081, 2090, 2092], "batch_dim": [1, 10, 11, 64, 65, 112, 113, 1258, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324], "check_gather_nd_input_valid": 1, "check_great": 1, "allow_equ": [1, 12, 15, 152], "check_inplace_sizes_valid": 1, "var": [1, 13, 88, 89, 136, 137, 140, 141, 150, 164, 1792, 1793, 1794, 1911, 1953], "data": [1, 13, 33, 35, 42, 45, 48, 49, 55, 56, 58, 61, 62, 63, 64, 65, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 97, 98, 99, 100, 103, 104, 106, 109, 110, 111, 112, 113, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 146, 149, 151, 154, 155, 156, 157, 159, 161, 162, 164, 166, 237, 239, 240, 242, 243, 244, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 290, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 328, 329, 330, 331, 332, 333, 334, 340, 343, 345, 346, 347, 348, 349, 351, 358, 360, 362, 363, 366, 368, 369, 371, 372, 374, 377, 379, 380, 381, 384, 386, 389, 391, 394, 396, 399, 401, 408, 409, 410, 412, 417, 418, 420, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 776, 777, 778, 819, 820, 821, 822, 823, 844, 845, 846, 847, 848, 851, 853, 860, 863, 870, 871, 872, 873, 874, 875, 886, 889, 891, 913, 928, 931, 958, 959, 960, 974, 975, 976, 977, 978, 979, 980, 981, 1003, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1038, 1043, 1053, 1054, 1055, 1064, 1067, 1071, 1078, 1090, 1140, 1141, 1142, 1143, 1144, 1150, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1187, 1188, 1189, 1190, 1191, 1194, 1196, 1199, 1201, 1203, 1204, 1206, 1210, 1233, 1234, 1235, 1236, 1258, 1308, 1310, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1376, 1377, 1378, 1379, 1380, 1417, 1419, 1420, 1421, 1489, 1528, 1529, 1530, 1531, 1532, 1535, 1538, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1685, 1686, 1688, 1689, 1711, 1717, 1720, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1747, 1748, 1749, 1750, 1752, 1753, 1754, 1755, 1756, 1762, 1765, 1767, 1770, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1881, 1882, 1883, 1886, 1887, 1888, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1975, 1976, 1981, 1982, 1983, 1985, 1986, 1987, 1997, 1998, 2001, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2034, 2038, 2039, 2043, 2048, 2059, 2060, 2061, 2062, 2064, 2072, 2074, 2075, 2076, 2080, 2081, 2083, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2097, 2098, 2100, 2101, 2102, 2103, 2116, 2121], "check_isinst": 1, "allowed_typ": [1, 14], "check_less": [1, 152], "check_one_way_broadcast": 1, "check_shap": [1, 97, 98], "check_tru": 1, "true": [1, 18, 45, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 150, 152, 153, 154, 155, 157, 158, 159, 160, 162, 164, 167, 168, 169, 196, 198, 200, 201, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 234, 235, 237, 239, 241, 242, 245, 253, 255, 257, 258, 260, 261, 263, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 302, 304, 305, 306, 308, 310, 311, 313, 315, 316, 318, 319, 321, 323, 330, 331, 332, 333, 334, 335, 337, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 353, 355, 358, 359, 361, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 381, 383, 384, 385, 386, 388, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 403, 405, 407, 417, 418, 424, 425, 426, 427, 428, 429, 431, 432, 435, 438, 439, 440, 444, 445, 447, 452, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 686, 688, 689, 690, 691, 692, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 821, 823, 824, 825, 826, 827, 828, 831, 834, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 852, 853, 854, 858, 860, 862, 864, 865, 869, 870, 874, 875, 876, 880, 881, 883, 885, 886, 888, 890, 891, 892, 893, 895, 904, 905, 906, 909, 910, 912, 917, 921, 923, 927, 928, 932, 933, 937, 938, 942, 943, 947, 948, 952, 953, 957, 961, 965, 966, 967, 968, 972, 974, 975, 976, 977, 978, 979, 980, 981, 982, 986, 987, 991, 992, 994, 996, 997, 1001, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1037, 1038, 1043, 1048, 1050, 1052, 1059, 1063, 1069, 1070, 1071, 1091, 1094, 1096, 1098, 1099, 1101, 1103, 1104, 1106, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1124, 1125, 1127, 1129, 1130, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1157, 1159, 1161, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1175, 1177, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1191, 1201, 1202, 1203, 1204, 1206, 1207, 1209, 1211, 1212, 1213, 1214, 1215, 1219, 1220, 1221, 1223, 1224, 1225, 1227, 1228, 1233, 1234, 1235, 1237, 1238, 1242, 1243, 1245, 1247, 1248, 1250, 1252, 1253, 1255, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1287, 1289, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1319, 1320, 1322, 1324, 1326, 1328, 1331, 1332, 1333, 1334, 1335, 1336, 1339, 1341, 1342, 1343, 1344, 1345, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1371, 1372, 1376, 1378, 1379, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1396, 1400, 1402, 1403, 1405, 1406, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1439, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1491, 1493, 1495, 1496, 1498, 1500, 1501, 1503, 1505, 1506, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1523, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1537, 1539, 1540, 1542, 1544, 1545, 1547, 1549, 1550, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1565, 1566, 1568, 1570, 1571, 1573, 1575, 1576, 1578, 1580, 1582, 1584, 1586, 1587, 1589, 1591, 1592, 1594, 1596, 1597, 1599, 1601, 1602, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1616, 1617, 1619, 1621, 1622, 1624, 1626, 1627, 1629, 1631, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1662, 1663, 1664, 1670, 1671, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1685, 1686, 1688, 1689, 1690, 1691, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1716, 1717, 1719, 1721, 1722, 1724, 1726, 1727, 1729, 1731, 1732, 1734, 1736, 1737, 1739, 1741, 1742, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1756, 1757, 1759, 1760, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1772, 1773, 1775, 1777, 1778, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1814, 1815, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1924, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1995, 1996, 2007, 2015, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2034, 2037, 2038, 2039, 2043, 2047, 2048, 2059, 2060, 2061, 2062, 2072, 2075, 2076, 2080, 2081, 2086, 2087, 2089, 2090, 2092, 2095, 2096, 2100, 2101], "assert": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 97, 98, 142, 143, 153, 158, 160, 161, 166, 167, 1258, 1269, 1272, 2035, 2036, 2037, 2038, 2039, 2040, 2041], "supportframeworkclass": [19, 20, 26, 32, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 148, 149, 150, 151, 154, 159, 160, 162, 164, 165, 167, 168, 169, 179, 180, 181, 237, 238, 267, 268, 300, 303, 318, 322, 323, 324, 325, 326, 327, 335, 336, 337, 339, 374, 377, 409, 410, 418, 419, 420, 499, 503, 549, 550, 554, 555, 579, 580, 581, 583, 689, 690, 691, 714, 715, 716, 718, 775, 776, 809, 811, 813, 824, 825, 826, 827, 886, 888, 890, 1069, 1070, 1104, 1106, 1108, 1140, 1141, 1142, 1143, 1144, 1194, 1195, 1196, 1201, 1203, 1258, 1259, 1261, 1265, 1315, 1319, 1357, 1360, 1382, 1417, 1418, 1421, 1445, 1446, 1451, 1452, 1489, 1550, 1553, 1555, 1607, 1610, 1696, 1700, 1701, 1705, 1706, 1710, 1796, 1798, 1809, 1827, 1831, 1832, 1836, 1837, 1841, 1848, 1864, 1867, 1874, 1885, 1889, 1896, 1900, 1938, 1939, 1943, 1944, 1968, 1969, 1975, 1976, 1979, 1981, 1982, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2043, 2060, 2062, 2064, 2065, 2066, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113], "backend_handl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 145, 164, 1969], "contextmanag": 19, "modul": [19, 20, 23, 25, 27, 36, 39, 42, 92, 93, 94, 97, 98, 99, 100, 140, 141, 144, 145, 152, 153, 155, 157, 158, 160, 164, 165, 167, 169, 180, 181, 1258, 1383, 1969, 1981, 1982, 1984, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2021, 2022, 2023, 2024, 2031, 2032, 2043, 2062], "base": [19, 20, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 146, 148, 152, 154, 156, 159, 160, 161, 164, 180, 237, 238, 277, 278, 279, 280, 281, 323, 324, 325, 326, 327, 402, 418, 419, 420, 453, 564, 567, 624, 627, 629, 630, 631, 632, 633, 634, 637, 639, 640, 641, 642, 643, 699, 700, 702, 775, 776, 839, 841, 843, 844, 849, 850, 891, 899, 917, 919, 921, 943, 944, 945, 946, 947, 1015, 1017, 1019, 1020, 1022, 1024, 1194, 1195, 1196, 1219, 1222, 1223, 1226, 1258, 1329, 1398, 1412, 1413, 1414, 1415, 1416, 1451, 1452, 1711, 1727, 1730, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1911, 1922, 1925, 1975, 1976, 1981, 1986, 1988, 1990, 1991, 1992, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2064, 2065, 2066, 2086, 2088, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113], "object": [19, 20, 59, 60, 80, 81, 94, 97, 98, 99, 100, 101, 102, 107, 108, 109, 110, 111, 112, 113, 128, 129, 146, 156, 158, 159, 160, 166, 169, 196, 197, 203, 237, 261, 264, 297, 298, 323, 324, 325, 326, 327, 350, 363, 366, 402, 418, 419, 444, 445, 446, 447, 448, 674, 676, 678, 775, 776, 819, 821, 823, 852, 853, 1003, 1194, 1195, 1196, 1320, 1324, 1451, 1452, 1796, 1800, 1802, 1804, 1805, 1806, 1812, 1813, 1814, 1815, 1821, 1843, 1844, 1845, 1846, 1847, 1975, 1976, 1981, 1987, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2017, 2019, 2020, 2043, 2061, 2064, 2066, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113], "__init__": [19, 20, 23, 25, 41, 45, 48, 49, 94, 97, 98, 99, 100, 145, 148, 152, 158, 161, 164, 166, 167, 168, 169, 237, 238, 323, 324, 325, 326, 327, 418, 419, 420, 776, 1194, 1196, 1451, 1452, 1969, 1975, 1976, 1990, 1991, 1992, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2064, 2065, 2066, 2104, 2105, 2106, 2109], "choose_random_backend": 19, "exclud": [19, 21, 88, 89, 136, 137, 150, 164, 237, 239, 240, 844, 849, 850, 1219, 1222, 1223, 1226, 1821, 1837, 1840, 1912, 1913, 1914, 1916, 2072, 2076, 2080, 2081, 2100, 2101], "noneclear_backend_stack": 19, "current_backend": [19, 45, 48, 49, 94, 99, 100, 152, 155, 158, 161, 164], "kwarg": [19, 23, 45, 48, 49, 50, 51, 52, 63, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 152, 158, 164, 168, 237, 238, 1071, 1088, 1161, 1162, 1163, 1164, 1165, 1258, 1382, 1438, 1993, 1994, 2019, 2020, 2021, 2022, 2034, 2040, 2043, 2049, 2053, 2054, 2058], "return": [19, 23, 24, 25, 32, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 412, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1398, 1399, 1402, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1972, 1974, 1975, 1976, 1982, 1993, 1994, 1995, 1996, 1997, 1998, 2001, 2007, 2016, 2017, 2019, 2020, 2021, 2025, 2029, 2034, 2035, 2037, 2038, 2039, 2041, 2043, 2045, 2048, 2050, 2052, 2054, 2059, 2060, 2061, 2062, 2063, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2106, 2115, 2116, 2121, 2122, 2123], "current": [19, 23, 24, 25, 32, 36, 39, 41, 42, 43, 45, 48, 49, 64, 65, 94, 97, 98, 99, 100, 143, 145, 146, 148, 149, 152, 155, 156, 158, 159, 160, 162, 164, 169, 180, 181, 323, 368, 369, 371, 372, 380, 413, 414, 415, 416, 417, 418, 430, 431, 432, 433, 437, 439, 452, 1071, 1088, 1161, 1164, 1258, 1313, 1314, 1325, 1326, 1327, 1331, 1339, 1346, 1362, 1384, 1385, 1406, 1417, 1419, 1421, 1451, 1480, 1488, 1555, 1581, 1796, 1797, 1807, 1808, 1969, 1981, 1987, 1988, 1995, 1996, 2019, 2020, 2043, 2059, 2060, 2061, 2062, 2086, 2088], "prioriti": [19, 23, 43, 97, 98, 157], "global_backend": [19, 23], "argument": [19, 23, 25, 34, 41, 50, 51, 52, 53, 54, 55, 56, 61, 62, 64, 65, 72, 73, 94, 97, 98, 99, 100, 101, 102, 109, 110, 112, 113, 142, 143, 144, 145, 146, 150, 151, 153, 155, 156, 159, 160, 161, 162, 164, 166, 167, 234, 235, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 282, 285, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 381, 384, 391, 394, 403, 406, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 804, 807, 809, 812, 814, 817, 844, 849, 850, 854, 857, 860, 863, 886, 889, 922, 928, 931, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1053, 1054, 1055, 1071, 1078, 1088, 1099, 1102, 1104, 1107, 1109, 1112, 1161, 1164, 1219, 1222, 1223, 1226, 1258, 1264, 1265, 1274, 1287, 1288, 1289, 1315, 1318, 1332, 1335, 1341, 1344, 1347, 1350, 1382, 1391, 1392, 1393, 1394, 1395, 1417, 1419, 1421, 1433, 1437, 1438, 1450, 1451, 1481, 1485, 1489, 1501, 1504, 1510, 1513, 1523, 1526, 1535, 1538, 1545, 1548, 1550, 1553, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1689, 1690, 1694, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1740, 1742, 1745, 1747, 1750, 1752, 1755, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1796, 1803, 1816, 1817, 1820, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966, 1968, 1972, 1974, 1981, 1993, 1994, 1995, 1996, 2019, 2020, 2034, 2037, 2038, 2039, 2040, 2043, 2047, 2048, 2059, 2060, 2061, 2062, 2072, 2075, 2116, 2121], "": [19, 23, 25, 26, 32, 35, 36, 37, 38, 39, 41, 42, 43, 55, 56, 63, 64, 65, 66, 67, 72, 73, 88, 89, 111, 112, 113, 114, 115, 120, 121, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 180, 181, 236, 237, 282, 283, 285, 305, 307, 309, 310, 312, 314, 323, 368, 369, 371, 372, 418, 424, 431, 432, 442, 453, 714, 717, 779, 780, 781, 782, 783, 891, 892, 903, 904, 933, 935, 937, 938, 940, 942, 968, 969, 970, 971, 1005, 1006, 1007, 1008, 1009, 1071, 1088, 1155, 1157, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1247, 1248, 1250, 1258, 1313, 1314, 1417, 1418, 1419, 1421, 1451, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1476, 1477, 1478, 1479, 1555, 1571, 1574, 1617, 1618, 1619, 1620, 1621, 1652, 1656, 1657, 1661, 1685, 1686, 1688, 1689, 1796, 1809, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 1968, 1969, 1977, 1980, 1981, 1982, 1984, 1985, 1986, 1987, 1997, 1998, 2001, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2029, 2031, 2032, 2086, 2089], "parametfrom": [19, 23, 25, 26, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 181, 237, 239, 240, 242, 243, 253, 254, 256, 261, 264, 266, 267, 268, 269, 270, 271, 282, 285, 287, 288, 290, 300, 301, 302, 303, 304, 318, 319, 320, 321, 322, 323, 345, 346, 347, 348, 349, 386, 387, 402, 403, 404, 405, 406, 407, 418, 424, 433, 437, 442, 443, 453, 544, 545, 546, 547, 548, 704, 705, 706, 707, 708, 739, 742, 819, 820, 821, 822, 823, 834, 835, 836, 837, 838, 844, 849, 850, 870, 873, 875, 891, 894, 899, 900, 903, 916, 943, 946, 948, 951, 958, 959, 960, 968, 969, 970, 971, 1038, 1043, 1071, 1088, 1089, 1090, 1161, 1164, 1171, 1172, 1173, 1174, 1175, 1178, 1206, 1210, 1219, 1222, 1223, 1226, 1252, 1254, 1256, 1258, 1274, 1287, 1288, 1289, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1328, 1385, 1401, 1423, 1426, 1450, 1451, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1486, 1489, 1491, 1493, 1495, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1545, 1548, 1555, 1576, 1579, 1652, 1656, 1670, 1671, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1711, 1717, 1718, 1720, 1732, 1733, 1734, 1735, 1736, 1747, 1748, 1749, 1750, 1751, 1762, 1765, 1792, 1793, 1794, 1795, 1796, 1798, 1809, 1810, 1811, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1848, 1854, 1855, 1856, 1857, 1858, 1869, 1871, 1873, 1874, 1875, 1879, 1885, 1889, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1977, 1979, 1980, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2001, 2004, 2005, 2007, 2015, 2018, 2019, 2020, 2021, 2025, 2029, 2034, 2035, 2041, 2043, 2059, 2060, 2061, 2062, 2072, 2074, 2075, 2076, 2080, 2081, 2082, 2083, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2097, 2098, 2100, 2101, 2102, 2103, 2116, 2121], "which": [19, 23, 24, 25, 27, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 180, 181, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 225, 226, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 252, 253, 254, 256, 258, 259, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 335, 337, 339, 345, 346, 347, 348, 349, 351, 358, 360, 363, 366, 374, 377, 380, 386, 387, 403, 404, 405, 407, 417, 418, 425, 426, 427, 428, 433, 437, 439, 441, 442, 443, 444, 445, 447, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 717, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 780, 781, 782, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 849, 850, 860, 863, 865, 868, 870, 871, 873, 891, 892, 894, 895, 896, 899, 904, 910, 911, 914, 915, 916, 922, 933, 937, 943, 944, 946, 958, 959, 960, 966, 967, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1020, 1021, 1038, 1044, 1053, 1054, 1071, 1090, 1091, 1114, 1115, 1116, 1117, 1118, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1156, 1157, 1158, 1159, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1179, 1187, 1189, 1191, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1261, 1263, 1264, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1287, 1289, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1328, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1384, 1385, 1386, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1450, 1451, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1487, 1489, 1528, 1530, 1532, 1535, 1537, 1539, 1545, 1548, 1550, 1552, 1554, 1555, 1556, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1571, 1574, 1576, 1579, 1587, 1589, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1617, 1619, 1621, 1642, 1644, 1646, 1647, 1650, 1652, 1656, 1670, 1671, 1673, 1680, 1684, 1685, 1686, 1688, 1689, 1695, 1696, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1716, 1717, 1718, 1720, 1727, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1742, 1745, 1747, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1782, 1783, 1784, 1785, 1786, 1796, 1802, 1803, 1804, 1805, 1810, 1812, 1813, 1814, 1815, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1845, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1867, 1869, 1871, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1972, 1974, 1977, 1978, 1979, 1980, 1981, 1982, 1984, 1986, 1987, 1988, 1993, 1994, 1995, 1996, 1997, 1998, 2001, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2029, 2031, 2032, 2043, 2061, 2062, 2072, 2075, 2086, 2088, 2090, 2092, 2096], "try": [19, 23, 33, 35, 36, 39, 41, 42, 43, 97, 98, 143, 144, 146, 147, 148, 152, 153, 157, 164, 166, 181, 1258, 1438, 1969, 1997, 2005], "infer": [19, 23, 24, 55, 56, 64, 65, 70, 71, 76, 77, 103, 104, 112, 113, 118, 119, 124, 125, 142, 145, 148, 149, 156, 160, 164, 169, 234, 235, 237, 239, 240, 242, 243, 253, 254, 256, 266, 267, 268, 269, 270, 271, 287, 288, 290, 300, 301, 302, 303, 304, 318, 319, 320, 321, 322, 323, 352, 353, 354, 356, 357, 870, 873, 1171, 1173, 1258, 1332, 1333, 1334, 1335, 1336, 1405, 1489, 1528, 1529, 1530, 1531, 1532, 1711, 1747, 1748, 1749, 1750, 1751, 1979, 1980, 1983, 1985, 2019, 2021], "when": [19, 23, 34, 35, 37, 38, 40, 41, 42, 43, 55, 56, 57, 58, 63, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 94, 97, 98, 99, 100, 103, 104, 105, 106, 109, 110, 111, 120, 121, 122, 123, 128, 129, 130, 131, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 169, 181, 237, 292, 293, 294, 295, 296, 323, 330, 331, 332, 333, 334, 386, 390, 453, 469, 472, 569, 572, 634, 637, 699, 702, 777, 778, 819, 822, 824, 825, 826, 827, 891, 914, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1201, 1204, 1216, 1217, 1218, 1258, 1357, 1360, 1401, 1412, 1415, 1555, 1617, 1618, 1619, 1620, 1621, 1642, 1645, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1796, 1797, 1798, 1807, 1808, 1809, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1848, 1849, 1852, 1854, 1857, 1864, 1865, 1866, 1867, 1868, 1869, 1871, 1873, 1911, 1926, 1929, 1934, 1937, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 1979, 1981, 1984, 1985, 1986, 1987, 1997, 2002, 2005, 2019, 2020, 2021, 2072, 2075, 2076, 2080, 2081, 2100, 2101, 2102, 2103], "global": [19, 23, 25, 26, 28, 29, 30, 31, 32, 42, 64, 65, 78, 79, 94, 97, 98, 99, 100, 112, 113, 126, 127, 145, 148, 149, 152, 155, 158, 164, 323, 352, 353, 354, 356, 357, 418, 441, 442, 443, 1258, 1329, 1330, 1337, 1398, 1399, 1401, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1442, 1451, 1480, 1486, 1488, 1816, 1817, 1818, 1819, 1820, 1981, 2023, 2024, 2065, 2066, 2067, 2068, 2069, 2070], "set": [19, 23, 25, 26, 28, 29, 30, 31, 32, 34, 37, 39, 43, 50, 53, 54, 63, 64, 65, 66, 67, 72, 73, 82, 83, 85, 86, 87, 88, 89, 97, 98, 111, 112, 113, 120, 121, 130, 131, 133, 134, 135, 136, 137, 142, 143, 144, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 323, 408, 409, 410, 411, 418, 424, 440, 441, 442, 443, 453, 489, 492, 839, 840, 841, 842, 843, 844, 849, 850, 860, 863, 886, 889, 891, 895, 910, 912, 928, 929, 930, 931, 932, 1053, 1054, 1055, 1071, 1078, 1088, 1091, 1114, 1115, 1116, 1117, 1118, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1182, 1185, 1201, 1202, 1203, 1204, 1211, 1212, 1213, 1214, 1215, 1219, 1222, 1223, 1226, 1258, 1259, 1260, 1261, 1262, 1263, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1417, 1418, 1419, 1420, 1421, 1440, 1463, 1464, 1489, 1528, 1531, 1555, 1561, 1562, 1563, 1564, 1565, 1607, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1647, 1650, 1652, 1656, 1796, 1797, 1804, 1807, 1808, 1809, 1814, 1815, 1821, 1842, 1848, 1849, 1850, 1851, 1852, 1853, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 1979, 1980, 1981, 1982, 1983, 1985, 1988, 1995, 1996, 1997, 2002, 2005, 2007, 2016, 2025, 2026, 2027, 2028, 2029, 2030, 2043, 2062, 2072, 2074, 2075, 2076, 2080, 2081, 2083, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2097, 2098, 2100, 2101, 2102, 2103, 2116, 2121], "ret": [19, 23, 25, 32, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 151, 152, 157, 158, 161, 164, 169, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 358, 360, 362, 363, 366, 368, 369, 371, 372, 374, 377, 380, 381, 384, 386, 387, 388, 389, 390, 391, 394, 396, 399, 401, 403, 404, 405, 406, 407, 417, 418, 419, 421, 422, 424, 425, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 884, 886, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 995, 997, 998, 999, 1000, 1001, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1972, 1974, 1993, 1994, 1995, 1996, 2019, 2020, 2025, 2029, 2043, 2050, 2051, 2052, 2059, 2060, 2061, 2062, 2086, 2088, 2089, 2100, 2101, 2102, 2103], "exampl": [19, 23, 25, 26, 32, 36, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 160, 161, 164, 166, 167, 168, 169, 180, 181, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 249, 251, 258, 259, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 285, 297, 298, 300, 303, 315, 317, 318, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 356, 357, 358, 359, 360, 362, 363, 366, 368, 369, 371, 372, 374, 375, 376, 377, 379, 380, 386, 387, 388, 389, 390, 391, 394, 396, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 824, 825, 826, 827, 828, 829, 830, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1261, 1262, 1263, 1265, 1266, 1268, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1289, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1368, 1371, 1376, 1379, 1382, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1571, 1572, 1573, 1574, 1576, 1579, 1587, 1588, 1589, 1590, 1591, 1597, 1598, 1599, 1600, 1602, 1603, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1633, 1634, 1635, 1636, 1642, 1643, 1644, 1645, 1646, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1796, 1798, 1800, 1803, 1804, 1805, 1806, 1808, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1825, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1978, 1979, 1982, 1984, 1987, 1988, 2043, 2061, 2072, 2075, 2116, 2121], "If": [19, 23, 25, 26, 34, 37, 38, 39, 41, 42, 43, 45, 50, 53, 54, 55, 56, 57, 58, 61, 62, 63, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 181, 196, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 234, 236, 237, 239, 240, 242, 244, 252, 253, 254, 256, 258, 259, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 283, 285, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 337, 339, 340, 343, 345, 347, 349, 403, 405, 406, 407, 418, 424, 442, 444, 445, 447, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 612, 613, 614, 616, 618, 619, 621, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 702, 703, 704, 706, 708, 709, 711, 713, 714, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 758, 759, 760, 762, 763, 764, 765, 767, 768, 769, 770, 772, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 820, 821, 822, 823, 824, 825, 826, 827, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 854, 855, 856, 857, 858, 865, 868, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 891, 892, 893, 896, 899, 904, 909, 910, 913, 914, 928, 929, 930, 931, 932, 933, 937, 943, 944, 946, 958, 959, 960, 966, 967, 974, 975, 976, 977, 978, 979, 980, 981, 987, 988, 989, 990, 991, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1038, 1042, 1069, 1070, 1071, 1076, 1078, 1082, 1091, 1092, 1114, 1115, 1116, 1117, 1118, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1157, 1159, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1179, 1187, 1189, 1190, 1191, 1201, 1202, 1203, 1204, 1206, 1207, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1237, 1238, 1239, 1240, 1241, 1247, 1248, 1250, 1252, 1253, 1255, 1257, 1258, 1259, 1261, 1263, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1360, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1421, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1450, 1451, 1461, 1463, 1464, 1465, 1480, 1481, 1482, 1484, 1488, 1489, 1528, 1529, 1530, 1531, 1532, 1535, 1537, 1539, 1550, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1571, 1574, 1587, 1589, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1632, 1635, 1637, 1640, 1642, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1670, 1671, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1716, 1717, 1718, 1720, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1782, 1783, 1785, 1792, 1793, 1794, 1796, 1809, 1810, 1816, 1821, 1822, 1824, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1845, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1993, 1995, 1996, 1997, 1998, 2001, 2002, 2005, 2007, 2019, 2020, 2023, 2025, 2031, 2043, 2060, 2061, 2062, 2072, 2076, 2080, 2081, 2090, 2092], "import": [19, 23, 24, 35, 38, 40, 41, 42, 43, 92, 93, 103, 104, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 153, 157, 158, 159, 160, 161, 164, 166, 167, 169, 181, 277, 281, 418, 422, 423, 431, 432, 440, 441, 1969, 1977, 1979, 1981, 1984, 1985, 1987], "numpi": [19, 23, 25, 26, 29, 34, 35, 40, 41, 42, 43, 63, 64, 65, 88, 89, 111, 112, 113, 143, 145, 147, 148, 149, 152, 154, 157, 159, 160, 161, 162, 164, 166, 169, 418, 422, 784, 785, 786, 787, 788, 844, 849, 850, 852, 853, 891, 893, 1003, 1219, 1222, 1223, 1226, 1258, 1407, 1408, 1409, 1417, 1418, 1420, 1421, 1428, 1429, 1430, 1431, 1432, 1911, 1922, 1923, 1925, 1968, 1969, 1983, 1988, 2034, 2035, 2037, 2038, 2039, 2041, 2043, 2048, 2050, 2052, 2059, 2060, 2061, 2062], "np": [19, 23, 41, 109, 110, 112, 113, 144, 148, 149, 154, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 453, 609, 611, 612, 852, 853, 922, 1003, 1038, 1044, 1258, 1407, 1410, 1411, 1796, 1803, 1968, 1969, 2043, 2061], "arraiprint": [19, 23, 25, 26, 32, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 150, 160, 164, 166, 167, 168, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 249, 251, 258, 259, 266, 267, 268, 269, 270, 271, 272, 275, 277, 280, 282, 285, 297, 298, 300, 303, 315, 317, 318, 322, 323, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 358, 359, 360, 362, 368, 369, 371, 372, 380, 386, 388, 389, 390, 391, 394, 403, 404, 405, 406, 407, 417, 418, 419, 421, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 567, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 607, 608, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 777, 778, 779, 780, 781, 782, 783, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 824, 825, 826, 827, 828, 829, 830, 831, 844, 849, 850, 854, 857, 891, 892, 913, 992, 993, 995, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1047, 1053, 1058, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1075, 1083, 1086, 1087, 1088, 1090, 1091, 1093, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1130, 1133, 1135, 1137, 1152, 1153, 1161, 1164, 1166, 1168, 1170, 1187, 1188, 1189, 1190, 1191, 1206, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1219, 1222, 1223, 1226, 1242, 1244, 1246, 1258, 1259, 1261, 1262, 1263, 1265, 1266, 1268, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1289, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1328, 1329, 1330, 1332, 1333, 1335, 1337, 1341, 1342, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1382, 1385, 1391, 1392, 1393, 1394, 1395, 1398, 1399, 1401, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1576, 1579, 1587, 1588, 1589, 1590, 1591, 1597, 1598, 1599, 1600, 1602, 1603, 1605, 1607, 1608, 1609, 1610, 1611, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1633, 1634, 1635, 1636, 1642, 1643, 1644, 1645, 1646, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1771, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1796, 1798, 1800, 1803, 1804, 1805, 1806, 1808, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1825, 1827, 1830, 1843, 1844, 1846, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1995, 1996], "functionpy": [19, 23, 25, 41, 42, 43, 143, 145, 147, 148, 149, 151, 152, 153, 154, 155, 158, 159, 160, 161, 164, 166, 168, 169], "noqa": [19, 23, 25, 61, 62, 72, 73, 109, 110, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 282, 285, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 363, 366, 374, 377, 403, 406, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 599, 602, 604, 607, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 860, 863, 928, 931, 1053, 1054, 1071, 1078, 1258, 1450, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1686, 1688, 1689, 1711, 1717, 1720, 1727, 1730, 1732, 1735, 1737, 1740, 1747, 1750, 1752, 1755, 1762, 1765, 1767, 1770, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966], "The": [19, 23, 25, 33, 34, 36, 37, 38, 39, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 167, 168, 169, 180, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 218, 219, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 239, 240, 261, 264, 267, 269, 271, 277, 278, 279, 280, 281, 292, 293, 294, 295, 296, 300, 302, 304, 305, 307, 309, 310, 312, 314, 318, 319, 321, 323, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 345, 347, 349, 351, 352, 353, 354, 356, 357, 362, 368, 369, 371, 372, 380, 386, 388, 389, 390, 396, 399, 401, 403, 405, 407, 409, 410, 411, 412, 417, 418, 419, 420, 421, 422, 423, 424, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 706, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 779, 780, 781, 782, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 825, 826, 827, 828, 830, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 854, 855, 856, 857, 858, 860, 863, 865, 868, 870, 871, 873, 881, 884, 891, 892, 896, 898, 899, 904, 909, 910, 911, 913, 914, 915, 916, 922, 923, 926, 928, 931, 933, 934, 936, 937, 938, 939, 941, 943, 944, 946, 958, 959, 974, 975, 976, 977, 978, 979, 980, 981, 992, 995, 1005, 1006, 1007, 1008, 1009, 1015, 1016, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1053, 1054, 1069, 1070, 1071, 1075, 1077, 1078, 1079, 1080, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1093, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1153, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1175, 1176, 1177, 1178, 1179, 1187, 1188, 1189, 1190, 1191, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1242, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1261, 1263, 1264, 1266, 1268, 1269, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1284, 1286, 1287, 1288, 1289, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1332, 1334, 1336, 1337, 1340, 1341, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1383, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1398, 1399, 1401, 1404, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1427, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1449, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1604, 1606, 1607, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1716, 1717, 1718, 1720, 1722, 1725, 1727, 1731, 1732, 1734, 1735, 1736, 1737, 1738, 1740, 1742, 1745, 1747, 1748, 1749, 1751, 1752, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1777, 1781, 1782, 1783, 1785, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1848, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1861, 1863, 1864, 1867, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1975, 1976, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2004, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2027, 2028, 2029, 2034, 2037, 2038, 2039, 2043, 2061, 2062, 2072, 2075, 2076, 2080, 2081, 2090, 2096, 2100, 2101, 2102, 2103], "set_backend": [19, 23, 25, 28, 29, 30, 31, 32, 63, 111, 143, 145, 148, 155, 156, 164, 166, 169, 323, 371, 372, 418, 422, 423, 440, 441, 784, 785, 786, 787, 788, 852, 853, 891, 893, 1003, 1969], "ha": [19, 23, 25, 34, 35, 36, 41, 43, 55, 56, 63, 72, 73, 76, 77, 84, 85, 88, 89, 97, 98, 105, 106, 112, 113, 120, 121, 124, 125, 132, 133, 136, 137, 143, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 180, 181, 237, 282, 283, 285, 386, 390, 418, 424, 453, 454, 457, 609, 612, 699, 702, 719, 722, 1071, 1090, 1206, 1208, 1210, 1341, 1343, 1345, 1451, 1480, 1488, 1555, 1602, 1605, 1647, 1650, 1652, 1656, 1670, 1671, 1672, 1673, 1674, 1711, 1727, 1728, 1729, 1730, 1731, 1762, 1765, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1911, 1912, 1915, 1917, 1920, 1930, 1933, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1977, 1980, 1981, 1983, 1984, 1987, 1995, 1996, 2072, 2076, 2080, 2081, 2100, 2103], "over": [19, 23, 34, 36, 42, 43, 63, 72, 73, 88, 89, 90, 91, 92, 93, 105, 106, 111, 120, 121, 136, 137, 138, 139, 140, 141, 145, 150, 151, 157, 164, 166, 181, 386, 390, 809, 811, 813, 891, 903, 910, 928, 929, 931, 968, 969, 970, 971, 1071, 1078, 1086, 1087, 1090, 1104, 1106, 1108, 1145, 1148, 1152, 1153, 1206, 1207, 1208, 1209, 1210, 1258, 1450, 1555, 1607, 1608, 1609, 1610, 1611, 1662, 1665, 1680, 1684, 1685, 1686, 1688, 1689, 1816, 1817, 1820, 1821, 1837, 1840, 1911, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1979, 1981, 2023, 2024], "ani": [19, 23, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 55, 56, 59, 60, 61, 62, 63, 64, 65, 72, 73, 90, 91, 92, 93, 94, 99, 100, 107, 108, 109, 110, 111, 112, 113, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 181, 196, 234, 235, 236, 237, 239, 240, 242, 243, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 282, 285, 287, 290, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 350, 381, 384, 391, 394, 402, 418, 444, 445, 446, 447, 448, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 555, 556, 557, 558, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 690, 691, 692, 693, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 804, 807, 809, 812, 814, 817, 844, 849, 850, 854, 857, 860, 863, 886, 889, 928, 931, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1047, 1053, 1054, 1055, 1071, 1078, 1088, 1099, 1102, 1104, 1107, 1109, 1112, 1140, 1141, 1142, 1143, 1144, 1161, 1164, 1201, 1203, 1219, 1222, 1223, 1226, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1315, 1318, 1332, 1335, 1341, 1343, 1344, 1345, 1347, 1350, 1363, 1366, 1373, 1375, 1412, 1415, 1433, 1437, 1438, 1450, 1451, 1481, 1485, 1489, 1501, 1504, 1510, 1513, 1523, 1526, 1535, 1538, 1545, 1548, 1550, 1553, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1689, 1690, 1694, 1695, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1740, 1742, 1745, 1747, 1750, 1752, 1755, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1792, 1793, 1794, 1795, 1796, 1800, 1803, 1804, 1806, 1807, 1814, 1816, 1817, 1820, 1821, 1837, 1840, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1967, 1968, 1969, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1993, 1997, 2007, 2019, 2023, 2025, 2031, 2034, 2038, 2064, 2090, 2096], "pass": [19, 23, 41, 43, 63, 92, 93, 94, 97, 98, 99, 100, 111, 140, 141, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 181, 323, 351, 402, 418, 419, 422, 443, 453, 489, 492, 891, 909, 928, 931, 1071, 1078, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1201, 1203, 1258, 1357, 1360, 1792, 1793, 1794, 1979, 1993, 1994, 1995, 1996, 2019, 2020, 2022, 2025, 2029, 2031, 2032, 2034, 2035, 2041, 2043, 2059, 2060, 2062], "jax": [19, 23, 25, 26, 28, 35, 36, 40, 41, 42, 43, 63, 143, 145, 147, 148, 149, 154, 157, 158, 159, 160, 161, 162, 164, 166, 169, 181, 891, 903, 968, 969, 971, 1258, 1450, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1969, 1982, 1984, 1987, 1988], "fn_name_from_version_specific_fn_nam": 19, "name": [19, 24, 27, 39, 41, 42, 43, 45, 48, 49, 63, 84, 85, 132, 133, 145, 146, 150, 151, 153, 154, 158, 159, 160, 161, 162, 164, 167, 169, 196, 197, 203, 234, 235, 1071, 1091, 1211, 1213, 1215, 1258, 1264, 1265, 1555, 1581, 1582, 1585, 1637, 1640, 1642, 1645, 1652, 1656, 1675, 1679, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1981, 2043, 2061, 2062, 2116, 2121], "specif": [19, 24, 27, 34, 41, 42, 43, 59, 60, 64, 65, 107, 108, 112, 113, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 180, 181, 323, 403, 406, 418, 441, 444, 445, 446, 447, 448, 453, 654, 657, 659, 662, 1258, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1383, 1555, 1582, 1585, 1587, 1590, 1662, 1665, 1711, 1767, 1770, 1792, 1793, 1794, 1795, 1821, 1822, 1825, 1895, 1901, 1904, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1943, 1946, 1968, 1972, 1974, 1977, 1979, 1980, 1982, 1983, 1984, 1988, 2019, 2020], "provid": [19, 24, 27, 34, 42, 43, 55, 56, 64, 65, 66, 67, 76, 77, 82, 83, 88, 89, 90, 91, 97, 98, 103, 104, 112, 113, 124, 125, 130, 131, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 162, 166, 168, 180, 181, 196, 197, 203, 234, 235, 237, 282, 283, 285, 292, 293, 294, 295, 296, 323, 352, 353, 354, 356, 357, 380, 403, 406, 417, 418, 424, 891, 914, 1216, 1218, 1258, 1274, 1287, 1289, 1391, 1392, 1393, 1394, 1395, 1463, 1464, 1555, 1612, 1615, 1680, 1684, 1711, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1767, 1770, 1848, 1849, 1850, 1851, 1852, 1853, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1988, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2025, 2026, 2027, 2028, 2029, 2030], "origin": [19, 24, 27, 36, 41, 43, 45, 48, 49, 63, 72, 73, 76, 77, 88, 89, 94, 97, 98, 99, 100, 111, 120, 121, 124, 125, 136, 137, 145, 148, 156, 157, 158, 159, 164, 453, 489, 492, 1071, 1085, 1120, 1121, 1122, 1123, 1124, 1140, 1141, 1142, 1143, 1144, 1166, 1167, 1168, 1169, 1170, 1201, 1203, 1204, 1555, 1607, 1608, 1609, 1610, 1611, 1711, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1911, 1917, 1918, 1919, 1920, 1921, 1981, 1982, 2043, 2061, 2062, 2090, 2096], "point": [19, 24, 27, 36, 41, 42, 43, 57, 58, 61, 62, 63, 72, 73, 80, 81, 88, 89, 105, 106, 109, 110, 111, 120, 121, 128, 129, 136, 137, 143, 144, 147, 150, 151, 154, 157, 158, 160, 161, 162, 164, 166, 167, 180, 236, 237, 239, 240, 242, 244, 252, 258, 259, 266, 297, 298, 315, 317, 323, 330, 331, 332, 333, 334, 363, 366, 379, 386, 389, 403, 406, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 524, 527, 529, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 552, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 577, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 699, 702, 714, 717, 719, 722, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 768, 769, 773, 819, 822, 844, 846, 870, 871, 872, 873, 874, 875, 891, 911, 913, 914, 958, 960, 978, 979, 980, 981, 1038, 1043, 1155, 1158, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1187, 1188, 1189, 1190, 1191, 1201, 1204, 1216, 1217, 1218, 1555, 1556, 1557, 1558, 1559, 1560, 1566, 1569, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1597, 1599, 1600, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1670, 1671, 1672, 1673, 1685, 1686, 1688, 1689, 1821, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1901, 1904, 1911, 1912, 1915, 1917, 1920, 1926, 1929, 1930, 1931, 1932, 1933, 1934, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1987], "get_backend": [19, 145, 155], "specifi": [19, 25, 43, 55, 56, 57, 58, 63, 64, 65, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 95, 96, 97, 98, 105, 106, 111, 112, 113, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 136, 137, 138, 139, 142, 148, 149, 154, 155, 157, 158, 159, 160, 162, 164, 167, 168, 204, 206, 208, 237, 239, 240, 252, 266, 272, 275, 297, 298, 305, 307, 309, 310, 312, 314, 315, 317, 323, 330, 331, 332, 333, 334, 340, 343, 418, 419, 433, 437, 439, 442, 443, 444, 448, 453, 714, 717, 779, 781, 783, 819, 822, 824, 825, 826, 827, 891, 910, 928, 929, 931, 1005, 1006, 1007, 1009, 1069, 1070, 1071, 1078, 1089, 1114, 1117, 1140, 1143, 1145, 1146, 1147, 1148, 1149, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1175, 1178, 1201, 1202, 1203, 1204, 1258, 1264, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1328, 1341, 1343, 1344, 1345, 1450, 1489, 1545, 1548, 1555, 1571, 1574, 1576, 1579, 1587, 1590, 1607, 1608, 1609, 1610, 1611, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1715, 1717, 1718, 1720, 1722, 1725, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1752, 1753, 1754, 1755, 1756, 1762, 1765, 1767, 1768, 1770, 1782, 1783, 1784, 1786, 1787, 1791, 1796, 1802, 1804, 1805, 1812, 1813, 1814, 1815, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1848, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1877, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1925, 1938, 1941, 1947, 1951, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1987, 2100, 2102], "isn": [19, 25, 43, 112, 113, 156, 167, 181, 1258, 1417, 1418, 1421, 1983], "t": [19, 25, 35, 36, 38, 39, 41, 42, 43, 45, 48, 49, 63, 92, 93, 111, 112, 113, 140, 141, 142, 145, 146, 147, 148, 150, 156, 157, 159, 160, 162, 164, 166, 167, 168, 169, 181, 891, 903, 968, 969, 970, 971, 1258, 1417, 1418, 1421, 1451, 1461, 1489, 1535, 1538, 1540, 1543, 1796, 1805, 1979, 1981, 1983], "associ": [19, 25, 43, 72, 73, 120, 121, 148, 155, 156, 158, 159, 160, 181, 453, 469, 472, 1555, 1617, 1618, 1619, 1620, 1621, 1632, 1635, 1690, 1694, 2043, 2059], "option": [19, 25, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 169, 181, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 347, 349, 351, 352, 353, 354, 356, 357, 380, 386, 390, 403, 405, 407, 417, 418, 424, 439, 441, 442, 443, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 854, 855, 856, 857, 858, 860, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1076, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1094, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1261, 1263, 1264, 1269, 1271, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1308, 1310, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1369, 1370, 1371, 1372, 1376, 1378, 1380, 1383, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1438, 1445, 1446, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1488, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1642, 1644, 1646, 1647, 1650, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1782, 1783, 1785, 1787, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1803, 1804, 1807, 1808, 1809, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1981, 1987, 1997, 1998, 2001, 2019, 2020, 2025, 2026, 2027, 2029, 2031, 2032, 2043, 2059, 2060, 2061, 2062, 2086, 2088, 2116, 2121], "str": [19, 25, 50, 51, 52, 55, 56, 63, 64, 65, 70, 71, 76, 77, 88, 89, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 148, 149, 152, 153, 158, 161, 164, 169, 196, 197, 198, 200, 202, 203, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 234, 235, 237, 267, 269, 271, 282, 283, 285, 292, 294, 296, 300, 302, 304, 318, 319, 321, 323, 328, 335, 337, 339, 345, 347, 349, 351, 352, 353, 354, 362, 363, 366, 374, 377, 379, 380, 381, 384, 386, 388, 389, 390, 391, 394, 396, 399, 403, 405, 407, 408, 409, 410, 411, 417, 418, 419, 420, 421, 443, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 823, 839, 841, 843, 875, 922, 928, 929, 930, 931, 932, 933, 937, 1005, 1007, 1009, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1071, 1078, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1155, 1157, 1159, 1166, 1167, 1168, 1169, 1170, 1175, 1177, 1179, 1187, 1189, 1191, 1201, 1204, 1206, 1207, 1209, 1211, 1212, 1214, 1247, 1248, 1250, 1252, 1253, 1255, 1258, 1259, 1261, 1263, 1264, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1286, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1327, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1383, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1404, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1481, 1482, 1484, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1530, 1532, 1535, 1537, 1539, 1550, 1552, 1554, 1555, 1556, 1558, 1560, 1561, 1563, 1565, 1587, 1589, 1590, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1609, 1611, 1617, 1619, 1621, 1637, 1640, 1642, 1644, 1646, 1670, 1671, 1673, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1711, 1712, 1714, 1716, 1727, 1731, 1732, 1734, 1736, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1782, 1783, 1785, 1792, 1793, 1794, 1795, 1796, 1803, 1804, 1814, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1859, 1861, 1863, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1896, 1898, 1900, 1911, 1912, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1930, 1932, 1938, 1940, 1942, 1943, 1945, 1952, 1953, 1955, 1958, 1960, 1962, 1963, 1965, 1967, 2043, 2059, 2060, 2061, 2062, 2064, 2066, 2086, 2088, 2104, 2105, 2116, 2121], "we": [19, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 63, 92, 93, 111, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 180, 181, 1071, 1091, 1211, 1212, 1213, 1214, 1215, 1258, 1417, 1421, 1451, 1461, 1462, 1467, 1487, 1968, 1969, 1977, 1981, 1982, 1986, 1987, 1995, 1996, 2019, 2020], "want": [19, 25, 35, 37, 41, 42, 43, 92, 93, 140, 141, 147, 152, 156, 157, 159, 160, 162, 167, 168, 169, 181, 1995, 1996, 2019, 2020], "retriev": [19, 25, 43, 158, 1258, 1264], "e": [19, 25, 35, 36, 37, 38, 39, 41, 42, 43, 45, 48, 49, 55, 56, 63, 66, 67, 72, 73, 80, 81, 86, 87, 88, 89, 111, 120, 121, 128, 129, 134, 135, 136, 137, 142, 143, 146, 152, 158, 160, 164, 167, 181, 236, 237, 277, 278, 280, 282, 283, 285, 323, 329, 403, 406, 418, 421, 453, 454, 457, 489, 492, 509, 512, 519, 522, 529, 532, 564, 567, 574, 577, 579, 582, 594, 597, 624, 627, 634, 637, 669, 672, 674, 677, 699, 702, 714, 717, 777, 778, 804, 806, 807, 808, 809, 812, 819, 822, 844, 849, 850, 870, 871, 873, 1038, 1039, 1040, 1045, 1046, 1053, 1058, 1064, 1067, 1099, 1101, 1102, 1103, 1104, 1107, 1130, 1133, 1134, 1135, 1137, 1171, 1172, 1173, 1219, 1222, 1223, 1226, 1463, 1464, 1555, 1561, 1564, 1587, 1591, 1602, 1605, 1607, 1610, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1647, 1650, 1652, 1656, 1685, 1686, 1688, 1689, 1711, 1727, 1730, 1767, 1770, 1796, 1800, 1804, 1805, 1806, 1814, 1815, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1911, 1912, 1915, 1917, 1920, 1926, 1929, 1930, 1931, 1933, 1934, 1937, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1968, 1977, 2019, 2021], "default": [19, 25, 41, 42, 43, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 148, 149, 150, 151, 152, 154, 155, 156, 158, 160, 162, 164, 168, 196, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 347, 349, 352, 353, 354, 356, 357, 358, 360, 368, 369, 371, 372, 379, 386, 388, 390, 401, 403, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 424, 425, 426, 427, 428, 431, 432, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 854, 855, 856, 857, 858, 860, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1076, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1094, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1269, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1401, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1420, 1421, 1423, 1424, 1428, 1429, 1431, 1432, 1433, 1434, 1436, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1644, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1981, 1993, 1994, 1995, 1996, 1997, 1998, 2001, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2043, 2059, 2060, 2061, 2062, 2072, 2076, 2080, 2081, 2086, 2088, 2100, 2101, 2102, 2103, 2116, 2121], "torch": [19, 25, 31, 32, 42, 43, 143, 144, 145, 147, 148, 149, 152, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 181, 234, 235, 323, 371, 372, 418, 422, 423, 440, 441, 453, 719, 722, 1258, 1417, 1421, 1555, 1652, 1656, 1968, 1969, 1987, 2019, 2020, 2043, 2061], "tensorflow": [19, 25, 30, 32, 35, 36, 40, 41, 42, 43, 63, 64, 65, 111, 112, 113, 143, 147, 148, 149, 154, 157, 158, 159, 160, 161, 162, 164, 169, 181, 418, 422, 784, 785, 786, 787, 788, 844, 849, 850, 891, 893, 1219, 1222, 1223, 1226, 1417, 1418, 1419, 1420, 1968, 1969, 1979, 1982, 1984, 1985, 1987, 1988, 2019, 2021, 2034, 2035, 2041, 2116, 2119, 2120], "either": [19, 25, 32, 39, 41, 42, 43, 61, 62, 63, 64, 65, 97, 98, 109, 110, 111, 112, 113, 145, 146, 148, 149, 150, 151, 152, 155, 157, 158, 159, 160, 162, 164, 167, 181, 237, 261, 264, 453, 469, 472, 489, 492, 599, 600, 601, 602, 603, 624, 627, 629, 632, 639, 642, 644, 647, 714, 717, 724, 727, 729, 732, 754, 758, 854, 855, 856, 857, 858, 891, 913, 1038, 1042, 1187, 1190, 1258, 1287, 1288, 1289, 1341, 1345, 1363, 1366, 1382, 1383, 1438, 1555, 1602, 1605, 1642, 1645, 1792, 1793, 1794, 1795, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951, 1981, 1995, 1996, 2007, 2018, 2019, 2020, 2021, 2090, 2096], "doesn": [19, 25, 39, 42, 145, 146, 147, 148, 150, 160, 162, 164, 181, 1979], "matter": [19, 25, 34, 150], "been": [19, 25, 41, 43, 64, 65, 80, 81, 112, 113, 128, 129, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 160, 164, 166, 180, 181, 418, 424, 453, 719, 722, 1258, 1290, 1291, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1821, 1822, 1823, 1824, 1825, 1826, 1968, 1981, 1988], "ivy_np": [19, 25, 160], "us": [19, 25, 32, 36, 37, 38, 40, 41, 43, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 180, 181, 198, 200, 202, 236, 237, 277, 278, 279, 280, 281, 292, 293, 323, 330, 331, 332, 333, 362, 363, 366, 368, 369, 371, 372, 386, 390, 401, 402, 418, 420, 431, 432, 434, 438, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 474, 475, 514, 516, 624, 625, 626, 628, 629, 630, 631, 633, 644, 646, 648, 649, 650, 651, 653, 654, 656, 658, 659, 660, 661, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 719, 720, 739, 740, 819, 820, 821, 822, 823, 844, 845, 846, 847, 848, 870, 871, 872, 873, 874, 875, 891, 903, 909, 910, 914, 928, 929, 930, 931, 932, 958, 959, 960, 968, 969, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1038, 1043, 1071, 1078, 1081, 1088, 1135, 1136, 1137, 1138, 1139, 1145, 1146, 1147, 1148, 1149, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1201, 1204, 1205, 1216, 1218, 1227, 1228, 1229, 1230, 1231, 1258, 1274, 1313, 1314, 1329, 1330, 1347, 1349, 1352, 1354, 1382, 1398, 1399, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1451, 1453, 1456, 1457, 1459, 1460, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1489, 1515, 1518, 1535, 1538, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1576, 1579, 1657, 1661, 1685, 1686, 1688, 1689, 1695, 1696, 1699, 1711, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1772, 1776, 1792, 1793, 1794, 1795, 1796, 1797, 1799, 1800, 1806, 1807, 1808, 1810, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1854, 1855, 1856, 1859, 1860, 1861, 1863, 1864, 1867, 1874, 1875, 1879, 1885, 1889, 1911, 1922, 1923, 1925, 1968, 1969, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1997, 2002, 2005, 2007, 2015, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2027, 2028, 2064, 2065, 2072, 2075, 2076, 2080, 2081, 2086, 2087, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2116, 2121], "ivy_jax": [19, 25], "subsequ": [19, 26, 42, 144, 147, 148, 150, 154, 155, 157, 160, 162, 168, 1982], "call": [19, 26, 32, 35, 39, 43, 94, 99, 100, 105, 106, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 181, 386, 388, 418, 419, 420, 443, 1053, 1058, 1130, 1133, 1258, 1337, 1401, 1438, 1451, 1461, 1462, 1467, 1555, 1642, 1645, 1796, 1797, 1803, 1807, 1808, 1981, 1982, 1985, 1995, 1996, 2007, 2018, 2019, 2020, 2021, 2022, 2025, 2029, 2043, 2048, 2062], "nativ": [19, 26, 45, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 64, 65, 101, 102, 107, 108, 112, 113, 148, 152, 156, 157, 158, 159, 160, 164, 166, 167, 237, 287, 288, 290, 323, 328, 329, 351, 352, 353, 354, 356, 357, 402, 418, 422, 423, 424, 425, 426, 427, 428, 438, 449, 452, 776, 852, 853, 1003, 1194, 1196, 1258, 1357, 1358, 1360, 1363, 1366, 1376, 1377, 1378, 1379, 1380, 1385, 1427, 1968, 1975, 1976, 1979, 1988, 1993, 1994, 2019, 2020, 2043, 2048, 2059, 2060, 2062], "native_arrai": [19, 26, 32, 55, 56, 57, 58, 61, 62, 103, 104, 107, 108, 109, 110, 112, 113, 134, 135, 156, 159, 160, 196, 198, 201, 209, 212, 237, 267, 270, 282, 285, 300, 303, 318, 322, 323, 330, 333, 335, 336, 338, 340, 343, 345, 348, 358, 360, 363, 366, 374, 377, 391, 394, 418, 425, 427, 428, 429, 437, 444, 445, 447, 453, 499, 500, 519, 522, 524, 527, 544, 546, 547, 548, 549, 550, 552, 554, 555, 557, 579, 580, 582, 584, 587, 589, 592, 614, 617, 619, 620, 654, 656, 657, 679, 680, 682, 689, 690, 692, 704, 706, 707, 708, 714, 715, 716, 717, 718, 739, 741, 743, 824, 826, 1069, 1070, 1071, 1088, 1089, 1091, 1161, 1164, 1175, 1178, 1211, 1215, 1258, 1259, 1261, 1263, 1368, 1371, 1376, 1379, 1428, 1429, 1431, 1489, 1491, 1494, 1515, 1518, 1523, 1526, 1545, 1548, 1550, 1553, 1555, 1566, 1569, 1576, 1579, 1587, 1590, 1602, 1605, 1612, 1615, 1617, 1620, 1622, 1625, 1657, 1661, 1662, 1665, 1670, 1674, 1695, 1696, 1699, 1706, 1709, 1711, 1712, 1715, 1742, 1745, 1747, 1750, 1757, 1760, 1772, 1776, 1777, 1781, 1821, 1822, 1825, 1848, 1864, 1867, 1896, 1900, 1906, 1908, 1911, 1934, 1937, 1947, 1951, 1957, 1958, 1961, 2043, 2061, 2106, 2109, 2115], "1": [19, 26, 32, 35, 36, 39, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 145, 146, 147, 148, 150, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 181, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 239, 240, 241, 249, 251, 258, 259, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 285, 292, 293, 294, 295, 296, 297, 298, 300, 303, 318, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 358, 359, 360, 362, 363, 366, 386, 387, 388, 389, 390, 391, 394, 403, 404, 407, 418, 424, 425, 426, 427, 428, 429, 433, 436, 437, 439, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 502, 503, 504, 505, 506, 507, 508, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 644, 646, 647, 648, 654, 655, 656, 657, 658, 659, 661, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 717, 718, 719, 720, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 818, 819, 822, 824, 825, 826, 827, 828, 829, 830, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 851, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 974, 975, 976, 977, 978, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1029, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1258, 1259, 1261, 1262, 1263, 1266, 1268, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1289, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1307, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1328, 1332, 1333, 1334, 1335, 1336, 1341, 1342, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1368, 1371, 1376, 1379, 1382, 1391, 1392, 1393, 1394, 1395, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1450, 1451, 1453, 1454, 1455, 1456, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1487, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1568, 1569, 1571, 1572, 1573, 1574, 1576, 1577, 1578, 1579, 1580, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1598, 1599, 1600, 1602, 1603, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1633, 1634, 1635, 1636, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1796, 1798, 1800, 1803, 1804, 1805, 1806, 1808, 1809, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1845, 1846, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1995, 1996, 1997, 1998, 2001, 2002, 2003, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2029, 2031, 2032, 2043, 2061, 2072, 2074, 2075, 2076, 2077, 2080, 2081, 2083, 2084, 2086, 2087, 2090, 2091, 2092, 2095, 2096, 2100, 2101, 2102, 2103, 2116, 2120], "ndarrai": [19, 26, 41, 55, 56, 63, 64, 65, 111, 144, 148, 149, 154, 157, 158, 159, 161, 162, 164, 166, 169, 237, 242, 243, 244, 287, 290, 1140, 1141, 1142, 1143, 1144, 1201, 1203, 1258, 1428, 1430, 1432, 1968], "Or": [19, 26, 167], "jaxlib": [19, 26, 42, 144, 148, 149, 154, 161, 164, 166], "xla_extens": [19, 26, 144, 148, 149, 154, 161, 164, 166], "devicearrai": [19, 26, 144, 159, 164, 166], "set_backend_to_specific_vers": 19, "updat": [19, 27, 39, 41, 42, 43, 50, 52, 54, 64, 65, 66, 67, 97, 98, 112, 113, 114, 115, 142, 143, 144, 146, 147, 148, 150, 154, 156, 158, 159, 160, 162, 164, 166, 167, 169, 181, 1258, 1357, 1358, 1359, 1360, 1361, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1489, 1528, 1531, 1540, 1543, 1792, 1793, 1794, 1796, 1804, 1805, 1809, 1814, 1815, 1993, 1994, 2019, 2020, 2025, 2026, 2027, 2028, 2029, 2030, 2043, 2059], "dict": [19, 27, 32, 50, 51, 52, 53, 54, 64, 65, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 146, 153, 167, 168, 196, 197, 198, 200, 202, 203, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 267, 269, 271, 292, 294, 296, 300, 302, 304, 318, 319, 321, 335, 337, 339, 345, 347, 349, 386, 388, 390, 403, 405, 407, 418, 424, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 821, 823, 839, 841, 843, 933, 937, 1005, 1007, 1009, 1071, 1088, 1155, 1157, 1159, 1161, 1164, 1175, 1177, 1179, 1187, 1189, 1191, 1206, 1207, 1209, 1211, 1212, 1214, 1247, 1248, 1250, 1252, 1253, 1255, 1258, 1259, 1261, 1263, 1264, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1308, 1310, 1312, 1313, 1314, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1382, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1481, 1482, 1484, 1528, 1530, 1532, 1535, 1537, 1539, 1550, 1552, 1554, 1556, 1558, 1560, 1561, 1563, 1565, 1587, 1589, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1609, 1611, 1617, 1619, 1621, 1642, 1644, 1646, 1670, 1671, 1673, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1727, 1731, 1732, 1734, 1736, 1747, 1749, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1782, 1783, 1785, 1796, 1798, 1800, 1803, 1804, 1805, 1806, 1808, 1809, 1810, 1814, 1815, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1859, 1861, 1863, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1896, 1898, 1900, 1912, 1914, 1916, 1917, 1919, 1921, 1930, 1932, 1938, 1940, 1942, 1943, 1945, 1952, 1953, 1955, 1958, 1960, 1962, 1963, 1965, 1967, 1968, 2019, 2020, 2021, 2043, 2060, 2062, 2064, 2066], "make": [19, 27, 35, 36, 41, 42, 43, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 1979, 1981, 1982, 1983, 1984, 1987, 1988], "set_jax_backend": 19, "equival": [19, 28, 29, 30, 31, 72, 73, 120, 121, 157, 158, 162, 167, 169, 237, 239, 240, 453, 519, 522, 654, 657, 659, 662, 714, 717, 1555, 1617, 1618, 1619, 1620, 1621, 1632, 1635, 1647, 1650, 1685, 1686, 1688, 1689], "set_numpy_backend": 19, "set_tensorflow_backend": 19, "set_torch_backend": 19, "unset_backend": [19, 145], "unset": [19, 32, 145, 164], "adjust": [19, 32, 88, 89, 136, 137, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956], "previous": [19, 32, 39, 42, 155, 160, 164, 1258, 1440], "otherwis": [19, 32, 43, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 72, 73, 76, 77, 82, 83, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 147, 148, 149, 150, 160, 164, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 237, 239, 240, 267, 269, 271, 272, 275, 277, 278, 279, 280, 281, 292, 294, 296, 300, 302, 304, 318, 319, 321, 323, 330, 331, 332, 333, 334, 335, 337, 339, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 357, 381, 384, 391, 394, 402, 403, 405, 407, 418, 424, 444, 445, 447, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 777, 778, 779, 780, 781, 782, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 821, 823, 839, 840, 841, 842, 843, 865, 868, 891, 892, 895, 896, 933, 937, 966, 967, 1005, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1064, 1065, 1066, 1067, 1068, 1155, 1157, 1159, 1175, 1177, 1179, 1187, 1189, 1191, 1206, 1207, 1209, 1211, 1212, 1214, 1247, 1248, 1250, 1252, 1253, 1255, 1258, 1259, 1261, 1263, 1269, 1270, 1271, 1272, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1438, 1445, 1446, 1448, 1463, 1465, 1481, 1482, 1484, 1528, 1530, 1532, 1535, 1537, 1539, 1550, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1565, 1566, 1569, 1587, 1589, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1609, 1611, 1617, 1619, 1621, 1642, 1644, 1646, 1652, 1656, 1670, 1671, 1673, 1680, 1684, 1685, 1686, 1688, 1689, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1711, 1712, 1714, 1716, 1727, 1731, 1732, 1734, 1736, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1782, 1783, 1785, 1792, 1793, 1794, 1796, 1810, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1848, 1849, 1850, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1863, 1869, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1895, 1896, 1898, 1900, 1901, 1904, 1911, 1912, 1914, 1916, 1917, 1919, 1921, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 2019, 2020, 2034, 2037, 2038, 2039, 2086, 2089], "implement": [19, 32, 41, 57, 58, 59, 60, 63, 84, 85, 86, 87, 105, 106, 107, 108, 111, 134, 135, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 180, 181, 323, 330, 331, 332, 333, 334, 403, 406, 418, 444, 445, 446, 447, 448, 453, 454, 457, 459, 462, 464, 467, 474, 477, 479, 482, 484, 487, 489, 492, 534, 537, 539, 542, 564, 567, 569, 572, 624, 627, 629, 632, 634, 637, 639, 642, 699, 702, 714, 717, 729, 732, 734, 737, 754, 758, 759, 763, 891, 913, 1140, 1141, 1142, 1143, 1144, 1187, 1190, 1201, 1203, 1555, 1581, 1582, 1585, 1587, 1590, 1874, 1875, 1877, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1943, 1946, 1968, 1969, 1978, 1979, 1980, 1981, 1984, 1987, 1988], "wa": [19, 32, 35, 43, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 147, 150, 158, 164, 166, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 267, 269, 271, 292, 294, 296, 300, 302, 304, 318, 319, 321, 335, 337, 339, 345, 347, 349, 403, 405, 407, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 821, 823, 839, 841, 843, 891, 912, 933, 937, 1005, 1007, 1009, 1155, 1157, 1159, 1175, 1177, 1179, 1182, 1185, 1187, 1189, 1191, 1206, 1207, 1209, 1211, 1212, 1214, 1247, 1248, 1250, 1252, 1253, 1255, 1258, 1259, 1261, 1263, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1438, 1445, 1446, 1448, 1463, 1465, 1481, 1482, 1484, 1528, 1530, 1532, 1535, 1537, 1539, 1550, 1552, 1554, 1556, 1558, 1560, 1561, 1563, 1565, 1587, 1589, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1609, 1611, 1617, 1619, 1621, 1642, 1644, 1646, 1670, 1671, 1673, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1727, 1731, 1732, 1734, 1736, 1747, 1749, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1782, 1783, 1785, 1796, 1810, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1859, 1861, 1863, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1896, 1898, 1900, 1911, 1912, 1914, 1916, 1917, 1919, 1921, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1980, 1981, 1983], "last": [19, 32, 36, 43, 45, 48, 49, 55, 56, 63, 72, 73, 74, 75, 76, 77, 86, 87, 88, 89, 90, 91, 97, 98, 103, 104, 111, 120, 121, 122, 123, 124, 125, 134, 135, 136, 137, 138, 139, 143, 145, 148, 150, 153, 157, 159, 160, 162, 164, 181, 237, 272, 275, 277, 278, 279, 280, 281, 292, 293, 418, 424, 865, 868, 891, 896, 928, 929, 930, 931, 932, 1071, 1078, 1088, 1161, 1164, 1451, 1480, 1486, 1488, 1489, 1540, 1543, 1555, 1561, 1562, 1563, 1564, 1565, 1576, 1579, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1695, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1717, 1720, 1732, 1733, 1734, 1735, 1736, 1747, 1748, 1749, 1750, 1751, 1752, 1755, 1757, 1758, 1759, 1760, 1761, 1767, 1770, 1848, 1849, 1852, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1981, 2007, 2017], "henc": [19, 32, 42, 146, 147, 160, 1711, 1727, 1730, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894], "first": [19, 32, 34, 35, 38, 39, 40, 41, 42, 43, 45, 48, 49, 55, 56, 61, 62, 63, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 94, 99, 100, 103, 104, 109, 110, 111, 120, 121, 124, 125, 128, 129, 132, 133, 136, 137, 143, 144, 146, 150, 154, 155, 156, 157, 158, 160, 162, 164, 166, 167, 169, 234, 235, 237, 272, 275, 277, 278, 279, 280, 281, 323, 401, 412, 418, 424, 453, 469, 470, 471, 472, 473, 489, 490, 491, 493, 499, 500, 501, 502, 503, 509, 510, 511, 512, 513, 514, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 554, 555, 557, 579, 582, 584, 585, 589, 590, 592, 614, 615, 617, 619, 620, 622, 644, 645, 647, 649, 650, 652, 659, 660, 662, 664, 665, 667, 679, 680, 681, 682, 689, 690, 692, 699, 700, 702, 749, 750, 751, 752, 753, 779, 780, 781, 782, 783, 819, 820, 844, 849, 850, 876, 877, 878, 879, 880, 886, 889, 891, 892, 900, 901, 902, 904, 907, 908, 911, 915, 916, 928, 929, 930, 931, 932, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 961, 962, 963, 964, 965, 987, 988, 989, 990, 991, 997, 998, 1005, 1006, 1007, 1008, 1009, 1033, 1036, 1037, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1071, 1076, 1078, 1082, 1088, 1089, 1092, 1125, 1128, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1175, 1178, 1192, 1193, 1201, 1204, 1219, 1222, 1223, 1226, 1237, 1238, 1239, 1240, 1241, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1266, 1268, 1555, 1561, 1562, 1563, 1564, 1565, 1576, 1579, 1581, 1582, 1585, 1592, 1595, 1602, 1604, 1605, 1606, 1627, 1630, 1637, 1640, 1642, 1645, 1652, 1656, 1662, 1665, 1680, 1684, 1711, 1747, 1748, 1749, 1750, 1751, 1752, 1755, 1767, 1770, 1772, 1776, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1807, 1808, 1810, 1821, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1854, 1855, 1857, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1895, 1901, 1904, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1979, 1981, 1982, 1986, 1997, 1999, 2004, 2007, 2018, 2019, 2020, 2025, 2029, 2043, 2058], "howev": [19, 32, 35, 41, 42, 43, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 157, 158, 159, 160, 162, 164, 166, 167, 168, 169, 181, 1555, 1642, 1645, 1652, 1656, 1980, 1981, 1987], "seen": [19, 32, 34, 35, 147, 150, 152, 158, 160, 164, 166, 167, 870, 873, 1171, 1173, 1987], "after": [19, 32, 38, 39, 41, 42, 43, 66, 67, 70, 71, 78, 79, 97, 98, 111, 114, 115, 118, 119, 126, 127, 143, 147, 148, 150, 152, 154, 158, 160, 163, 323, 412, 418, 419, 420, 453, 739, 742, 891, 911, 1053, 1058, 1071, 1088, 1130, 1133, 1134, 1155, 1158, 1161, 1164, 1451, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1489, 1528, 1529, 1530, 1531, 1532, 1796, 1808, 1816, 1817, 1818, 1819, 1820, 1981, 2025, 2026, 2027, 2028, 2029, 2030], "befor": [19, 32, 41, 42, 43, 70, 71, 76, 77, 97, 98, 118, 119, 120, 121, 143, 144, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 164, 167, 181, 418, 420, 443, 922, 933, 936, 938, 941, 1038, 1044, 1071, 1079, 1080, 1088, 1161, 1164, 1489, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1685, 1686, 1688, 1689, 1711, 1717, 1718, 1720, 1792, 1793, 1794, 1796, 1809, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951, 1981, 1995, 1996], "becom": [19, 32, 34, 36, 43, 63, 111, 146, 150, 158, 181, 799, 800, 801, 802, 803, 891, 899, 943, 944, 946, 1071, 1074, 1711, 1712, 1715], "swap": [19, 32, 1711, 1772, 1776], "tensor": [19, 32, 34, 55, 56, 61, 62, 63, 64, 65, 76, 77, 80, 81, 97, 98, 103, 104, 109, 110, 111, 112, 113, 124, 125, 128, 129, 144, 145, 148, 149, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 181, 237, 272, 275, 277, 278, 279, 280, 281, 292, 293, 294, 295, 296, 323, 358, 360, 402, 453, 669, 670, 671, 672, 673, 674, 675, 677, 804, 805, 809, 810, 844, 849, 850, 928, 931, 1071, 1078, 1099, 1100, 1104, 1105, 1140, 1141, 1142, 1143, 1144, 1201, 1203, 1219, 1222, 1223, 1226, 1258, 1386, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1489, 1528, 1531, 1540, 1543, 1555, 1662, 1665, 1711, 1757, 1758, 1759, 1760, 1761, 1821, 1822, 1823, 1824, 1825, 1826, 1968, 1969, 1978, 1979, 1982, 1984, 1985, 1988, 2007, 2015, 2017, 2019, 2021], "python": [19, 32, 33, 34, 35, 39, 40, 42, 43, 63, 80, 81, 111, 128, 129, 143, 146, 147, 152, 153, 158, 160, 162, 164, 166, 167, 181, 237, 239, 240, 418, 438, 452, 453, 714, 717, 819, 820, 821, 822, 823, 870, 871, 872, 873, 874, 958, 959, 960, 1171, 1172, 1173, 1174, 1258, 1450, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1968, 1969, 1978, 1981, 1982, 1983, 1987, 1988], "op": [19, 32, 161, 164, 181, 2019, 2021], "eagertensor": [19, 32, 159], "backend": [23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 40, 41, 42, 43, 50, 52, 54, 64, 65, 66, 67, 97, 98, 112, 113, 142, 143, 144, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 169, 323, 368, 369, 371, 372, 380, 417, 418, 431, 432, 434, 436, 450, 1258, 1313, 1314, 1346, 1357, 1358, 1360, 1362, 1383, 1417, 1418, 1419, 1420, 1421, 1427, 1463, 1464, 1555, 1652, 1656, 1968, 1969, 1981, 1984, 1987, 1988, 1993, 1994, 2019, 2020, 2025, 2026, 2027, 2028, 2029, 2030, 2034, 2035, 2037, 2038, 2041, 2043, 2059, 2060, 2061, 2062, 2064, 2067, 2068, 2086, 2088, 2089], "ml": [33, 35, 36, 37, 40, 158, 163, 164, 165, 167, 168, 169, 180, 1969, 1977, 1978, 1979, 1980, 1981, 1984, 1986, 1988], "explos": [33, 35, 1969], "A": [33, 34, 35, 36, 39, 40, 41, 42, 55, 56, 57, 58, 63, 64, 65, 76, 77, 80, 81, 88, 89, 90, 91, 94, 97, 98, 99, 100, 105, 106, 111, 112, 113, 124, 125, 128, 129, 132, 133, 138, 139, 142, 146, 147, 148, 149, 152, 154, 155, 158, 159, 160, 164, 167, 181, 237, 258, 259, 287, 288, 290, 323, 335, 336, 337, 338, 339, 418, 419, 422, 443, 453, 684, 687, 694, 697, 709, 712, 779, 781, 783, 819, 820, 821, 822, 823, 844, 849, 850, 870, 871, 872, 873, 874, 891, 910, 958, 959, 960, 1005, 1006, 1007, 1009, 1053, 1058, 1071, 1089, 1091, 1130, 1131, 1133, 1145, 1146, 1147, 1148, 1149, 1166, 1167, 1169, 1171, 1172, 1173, 1174, 1175, 1178, 1201, 1204, 1211, 1213, 1215, 1219, 1222, 1223, 1226, 1258, 1330, 1347, 1349, 1352, 1354, 1407, 1409, 1411, 1412, 1414, 1416, 1423, 1424, 1425, 1426, 1451, 1487, 1555, 1627, 1630, 1647, 1650, 1652, 1656, 1711, 1712, 1714, 1716, 1727, 1729, 1731, 1737, 1739, 1741, 1757, 1758, 1759, 1760, 1761, 1767, 1770, 1796, 1797, 1800, 1802, 1804, 1805, 1806, 1807, 1808, 1812, 1813, 1814, 1815, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1875, 1876, 1878, 1911, 1922, 1923, 1925, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1981, 1982, 1995, 1996, 1997, 2001, 2002, 2003, 2005, 2006, 2019, 2021, 2031, 2032, 2034, 2041, 2043, 2048, 2064, 2072, 2074, 2075, 2076, 2080, 2081, 2083, 2086, 2087, 2088, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2100, 2101, 2102, 2103, 2116, 2121], "huge": [33, 35, 147, 167, 1969, 1981, 1987], "number": [33, 34, 42, 43, 45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 97, 98, 99, 100, 103, 104, 105, 106, 109, 110, 111, 112, 113, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 146, 147, 148, 149, 150, 157, 160, 162, 164, 167, 234, 235, 236, 237, 239, 240, 258, 259, 267, 270, 272, 275, 277, 278, 279, 280, 281, 282, 283, 285, 287, 290, 292, 293, 294, 295, 296, 323, 335, 336, 337, 338, 339, 352, 353, 354, 356, 357, 362, 363, 366, 374, 377, 381, 384, 386, 389, 391, 394, 396, 399, 403, 404, 405, 406, 407, 418, 435, 436, 437, 453, 469, 472, 489, 492, 529, 532, 549, 551, 574, 577, 579, 582, 609, 610, 611, 612, 613, 669, 672, 674, 676, 678, 699, 702, 714, 717, 719, 722, 724, 727, 764, 768, 779, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 799, 800, 801, 802, 824, 825, 826, 827, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 849, 850, 865, 868, 891, 892, 893, 894, 895, 896, 904, 909, 910, 1005, 1008, 1069, 1070, 1071, 1072, 1074, 1088, 1089, 1091, 1135, 1136, 1137, 1138, 1139, 1145, 1148, 1161, 1164, 1175, 1176, 1177, 1178, 1179, 1211, 1212, 1213, 1214, 1215, 1219, 1222, 1223, 1226, 1258, 1308, 1309, 1310, 1311, 1312, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1384, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1433, 1435, 1437, 1445, 1449, 1450, 1489, 1520, 1545, 1548, 1555, 1576, 1579, 1581, 1582, 1585, 1587, 1590, 1617, 1618, 1619, 1620, 1621, 1642, 1643, 1644, 1645, 1646, 1652, 1656, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1725, 1727, 1730, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1767, 1770, 1777, 1781, 1787, 1791, 1792, 1793, 1794, 1795, 1821, 1822, 1823, 1824, 1825, 1826, 1842, 1848, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1911, 1912, 1915, 1917, 1920, 1926, 1929, 1930, 1931, 1933, 1934, 1937, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1975, 1976, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2004, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2017, 2018, 2043, 2048, 2059, 2060, 2062, 2072, 2075, 2076, 2080, 2081, 2086, 2087, 2090, 2092, 2096, 2097, 2101, 2116, 2121], "tool": [33, 36, 43, 150, 165, 169, 180, 181, 1969, 1979, 1980, 1981, 1982, 1984, 1987, 1988], "have": [33, 34, 35, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 181, 196, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 283, 285, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 363, 366, 418, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 794, 797, 799, 802, 804, 805, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 860, 863, 875, 876, 877, 878, 879, 880, 891, 913, 922, 958, 959, 960, 987, 988, 989, 990, 991, 1033, 1036, 1038, 1041, 1043, 1044, 1047, 1053, 1054, 1056, 1057, 1058, 1069, 1070, 1071, 1073, 1074, 1076, 1082, 1089, 1091, 1092, 1094, 1097, 1099, 1100, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1130, 1133, 1134, 1171, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1187, 1188, 1189, 1190, 1191, 1201, 1205, 1211, 1212, 1213, 1214, 1215, 1227, 1228, 1229, 1230, 1231, 1237, 1238, 1239, 1240, 1241, 1257, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1357, 1359, 1361, 1363, 1367, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1787, 1791, 1792, 1796, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1911, 1912, 1915, 1917, 1920, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1993, 1997, 2005, 2007, 2019, 2023, 2025, 2031, 2072, 2075], "explod": [33, 34, 1969, 1997, 2001], "onto": [33, 34, 1796, 1803, 1809, 1969, 1981], "scene": [33, 34, 66, 67, 142, 163, 165, 1463, 1464, 1969, 1981], "b": [33, 36, 37, 45, 48, 49, 61, 62, 63, 64, 65, 70, 71, 88, 89, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 150, 155, 163, 164, 165, 167, 168, 169, 179, 196, 198, 201, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 223, 224, 226, 228, 229, 233, 237, 249, 251, 258, 259, 266, 267, 269, 270, 271, 277, 279, 281, 300, 303, 318, 322, 323, 330, 332, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 358, 359, 360, 386, 388, 390, 391, 394, 403, 405, 407, 425, 427, 429, 444, 445, 447, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 563, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 671, 672, 673, 674, 676, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 714, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 750, 752, 754, 755, 757, 758, 759, 760, 762, 763, 764, 765, 767, 768, 769, 770, 772, 779, 780, 781, 782, 783, 784, 786, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 822, 824, 825, 826, 827, 828, 829, 831, 834, 836, 838, 839, 841, 843, 854, 856, 857, 858, 865, 866, 867, 869, 870, 872, 874, 876, 878, 880, 881, 883, 885, 891, 892, 904, 913, 917, 919, 921, 923, 925, 927, 928, 930, 932, 933, 935, 937, 938, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 957, 961, 963, 965, 968, 970, 974, 975, 977, 978, 979, 981, 982, 984, 986, 987, 989, 991, 992, 994, 997, 999, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1012, 1014, 1015, 1017, 1019, 1020, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1042, 1048, 1050, 1052, 1053, 1056, 1058, 1059, 1061, 1063, 1064, 1066, 1068, 1069, 1070, 1071, 1088, 1091, 1099, 1101, 1103, 1104, 1106, 1108, 1109, 1111, 1113, 1114, 1116, 1118, 1120, 1122, 1124, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1139, 1145, 1147, 1149, 1155, 1157, 1159, 1161, 1164, 1166, 1168, 1170, 1171, 1172, 1175, 1177, 1179, 1182, 1184, 1186, 1187, 1189, 1190, 1191, 1206, 1207, 1209, 1211, 1212, 1214, 1215, 1227, 1228, 1230, 1233, 1234, 1235, 1237, 1238, 1240, 1242, 1243, 1245, 1247, 1248, 1250, 1252, 1253, 1255, 1258, 1259, 1261, 1262, 1263, 1266, 1268, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1287, 1289, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1315, 1317, 1318, 1319, 1320, 1322, 1323, 1324, 1332, 1333, 1334, 1335, 1336, 1341, 1344, 1347, 1349, 1350, 1351, 1352, 1354, 1355, 1356, 1391, 1393, 1394, 1395, 1407, 1409, 1410, 1411, 1417, 1418, 1420, 1421, 1428, 1429, 1431, 1432, 1433, 1434, 1436, 1437, 1445, 1446, 1448, 1451, 1453, 1455, 1456, 1463, 1465, 1466, 1468, 1470, 1471, 1476, 1478, 1479, 1481, 1482, 1484, 1485, 1489, 1491, 1493, 1494, 1495, 1501, 1503, 1504, 1505, 1510, 1512, 1513, 1514, 1515, 1518, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1566, 1568, 1569, 1576, 1579, 1587, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1605, 1607, 1609, 1610, 1611, 1612, 1615, 1617, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1630, 1642, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1695, 1696, 1698, 1699, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1711, 1712, 1714, 1715, 1716, 1722, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1734, 1736, 1737, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1752, 1754, 1755, 1756, 1762, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1776, 1777, 1778, 1780, 1781, 1782, 1783, 1785, 1786, 1796, 1800, 1803, 1804, 1805, 1806, 1808, 1814, 1815, 1816, 1817, 1819, 1820, 1821, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1846, 1847, 1848, 1849, 1851, 1853, 1854, 1856, 1857, 1858, 1859, 1861, 1862, 1863, 1864, 1867, 1869, 1870, 1872, 1873, 1874, 1875, 1876, 1878, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1895, 1896, 1898, 1899, 1900, 1906, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1932, 1933, 1934, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1951, 1952, 1953, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1969, 1977], "why": [33, 35, 43, 157, 166, 1969], "unifi": [33, 35, 97, 98, 142, 143, 144, 148, 152, 158, 162, 164, 181, 418, 443, 1969, 1977, 1978, 1979, 1981, 1985, 1988], "should": [33, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 88, 89, 94, 95, 96, 97, 98, 99, 100, 103, 104, 109, 110, 111, 114, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 196, 209, 211, 213, 224, 225, 226, 228, 234, 235, 236, 237, 282, 283, 285, 292, 293, 294, 295, 296, 305, 307, 309, 310, 312, 314, 323, 340, 343, 402, 418, 420, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 550, 551, 552, 553, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 819, 821, 823, 875, 891, 913, 914, 922, 1038, 1043, 1044, 1071, 1085, 1088, 1120, 1121, 1122, 1123, 1124, 1161, 1164, 1187, 1188, 1189, 1190, 1191, 1216, 1217, 1218, 1257, 1258, 1274, 1357, 1358, 1360, 1450, 1451, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1489, 1520, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1576, 1579, 1587, 1589, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1685, 1686, 1688, 1689, 1695, 1711, 1747, 1748, 1749, 1751, 1792, 1796, 1816, 1821, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1898, 1900, 1911, 1912, 1915, 1917, 1920, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1969, 1977, 1978, 1981, 1983, 1988, 1990, 1993, 1997, 2002, 2007, 2019, 2021, 2022, 2023, 2025, 2031, 2043, 2059, 2060, 2062, 2064, 2090, 2096], "them": [33, 34, 35, 36, 39, 41, 43, 143, 144, 145, 146, 152, 156, 157, 158, 159, 160, 164, 166, 167, 168, 181, 1258, 1274, 1385, 1968, 1969, 1978, 1979, 1981, 1983, 1987, 2019, 2022, 2072, 2083], "c": [33, 35, 36, 37, 42, 63, 64, 65, 66, 67, 70, 71, 76, 77, 88, 89, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 120, 121, 124, 125, 136, 137, 142, 146, 150, 155, 162, 163, 164, 165, 167, 181, 277, 279, 323, 330, 334, 363, 366, 374, 376, 377, 453, 519, 522, 624, 626, 627, 628, 629, 631, 632, 633, 689, 692, 724, 726, 727, 789, 791, 793, 794, 796, 798, 799, 801, 803, 828, 829, 831, 881, 885, 886, 888, 890, 928, 929, 930, 931, 932, 992, 996, 1053, 1058, 1071, 1078, 1130, 1131, 1132, 1133, 1134, 1242, 1243, 1258, 1266, 1268, 1295, 1296, 1297, 1300, 1301, 1303, 1332, 1334, 1336, 1347, 1349, 1352, 1354, 1433, 1436, 1437, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1489, 1491, 1492, 1501, 1504, 1510, 1513, 1515, 1518, 1555, 1587, 1590, 1591, 1597, 1600, 1711, 1727, 1731, 1747, 1748, 1749, 1750, 1751, 1767, 1770, 1796, 1800, 1804, 1805, 1806, 1808, 1814, 1815, 1848, 1864, 1867, 1911, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 1968, 1969, 1977, 1981, 1985, 1986, 1988], "standard": [33, 61, 62, 72, 73, 78, 79, 80, 81, 88, 89, 109, 110, 126, 127, 128, 129, 136, 137, 142, 143, 144, 146, 148, 151, 154, 157, 160, 161, 181, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 282, 285, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 363, 366, 374, 377, 403, 406, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 860, 863, 886, 889, 928, 931, 1053, 1054, 1055, 1071, 1078, 1258, 1450, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1689, 1711, 1717, 1720, 1727, 1730, 1732, 1735, 1737, 1740, 1747, 1750, 1752, 1755, 1762, 1765, 1767, 1770, 1816, 1817, 1818, 1819, 1820, 1821, 1832, 1833, 1834, 1835, 1836, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1961, 1963, 1966, 1969, 1977, 1979, 1980, 1983, 1984, 1986, 1997, 2002, 2023, 2024, 2090, 2094], "re": [33, 34, 35, 37, 41, 42, 43, 64, 65, 82, 83, 130, 131, 142, 143, 148, 157, 158, 161, 162, 166, 169, 181, 418, 443, 1258, 1274, 1290, 1291, 1293, 1555, 1662, 1665, 1711, 1752, 1755, 1848, 1859, 1860, 1861, 1862, 1863, 1869, 1870, 1871, 1872, 1873, 1969, 1981], "collabor": [33, 34, 35, 1969], "consortium": [33, 35, 1969], "api": [33, 34, 42, 61, 62, 72, 73, 109, 110, 142, 144, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 167, 181, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 282, 285, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 363, 366, 374, 377, 401, 403, 406, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 860, 863, 886, 889, 928, 931, 1053, 1054, 1055, 1071, 1078, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1689, 1711, 1717, 1720, 1727, 1730, 1732, 1735, 1737, 1740, 1747, 1750, 1752, 1755, 1762, 1765, 1767, 1770, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966, 1968, 1969, 1977, 1979, 1981, 1983, 1986, 1988], "open": [34, 35, 36, 37, 39, 42, 43, 80, 81, 128, 129, 148, 151, 158, 159, 162, 180, 237, 239, 240, 1821, 1827, 1828, 1829, 1830, 1831, 1837, 1840, 1969, 1979, 1980, 1981, 1983, 1984], "project": [34, 35, 36, 39, 42, 43, 145, 160, 168, 180, 181, 1977, 1979, 1981, 1984, 1988], "grown": 34, "consider": [34, 150, 154, 162, 1978, 1979], "recent": [34, 35, 42, 43, 160], "year": [34, 36, 143, 181, 1969, 1981], "especi": [34, 42, 162, 1981], "deep": [34, 37, 40, 41, 43, 97, 98, 143, 146, 148, 159, 163, 166, 167, 1969, 1979, 1981, 1984, 1985, 1987, 1988], "learn": [34, 35, 37, 40, 41, 42, 66, 67, 114, 115, 142, 143, 155, 163, 180, 1451, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1792, 1793, 1794, 1795, 1968, 1969, 1979, 1983, 1984, 1985, 1986, 1987, 1988, 2025, 2026, 2027, 2028, 2029, 2030], "can": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 55, 56, 57, 58, 63, 72, 73, 76, 77, 80, 81, 84, 85, 105, 106, 111, 120, 121, 124, 125, 128, 129, 132, 133, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 237, 242, 243, 244, 277, 278, 280, 287, 290, 323, 345, 346, 347, 348, 349, 418, 422, 441, 442, 443, 819, 822, 870, 873, 966, 967, 1010, 1011, 1012, 1013, 1014, 1171, 1172, 1173, 1258, 1450, 1451, 1461, 1555, 1652, 1656, 1670, 1671, 1672, 1673, 1711, 1747, 1748, 1749, 1750, 1751, 1767, 1768, 1769, 1771, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1875, 1876, 1877, 1878, 1968, 1969, 1978, 1979, 1980, 1981, 1982, 1984, 1985, 1987, 1988, 2019, 2021, 2043, 2060, 2062, 2072, 2073, 2075, 2076, 2080, 2081, 2086, 2087, 2090, 2092, 2093, 2094, 2100, 2101, 2102, 2103, 2116, 2121], "rapidli": 34, "increas": [34, 72, 73, 120, 121, 148, 152, 161, 162, 1071, 1088, 1161, 1164, 1555, 1675, 1676, 1677, 1678, 1679, 1711, 1722, 1725, 1787, 1791, 1796, 1809, 1981, 2090, 2092, 2096], "github": [34, 38, 40, 41, 43, 143, 147, 148, 150, 151, 160], "repo": [34, 38, 39, 40, 42, 43, 143, 148, 158, 159, 160, 161], "contain": [34, 38, 39, 41, 42, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 88, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 150, 151, 154, 155, 156, 157, 160, 163, 164, 165, 168, 181, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 229, 232, 237, 239, 240, 242, 244, 249, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 270, 272, 275, 277, 278, 280, 282, 285, 287, 292, 293, 297, 298, 300, 303, 305, 307, 309, 310, 312, 314, 315, 317, 318, 322, 323, 330, 333, 335, 336, 338, 340, 343, 345, 348, 353, 358, 360, 363, 366, 368, 371, 374, 377, 381, 384, 386, 391, 394, 396, 403, 406, 418, 425, 431, 432, 433, 437, 444, 453, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 564, 565, 567, 569, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 672, 674, 675, 677, 679, 680, 682, 684, 685, 687, 689, 690, 692, 694, 695, 697, 699, 700, 702, 704, 705, 707, 709, 710, 714, 715, 717, 719, 720, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 739, 740, 742, 744, 745, 747, 749, 751, 753, 754, 756, 758, 759, 761, 763, 764, 766, 768, 769, 771, 773, 777, 778, 779, 780, 784, 789, 794, 799, 804, 807, 809, 812, 814, 817, 819, 824, 826, 828, 834, 839, 844, 845, 846, 847, 848, 849, 850, 851, 854, 855, 857, 860, 863, 865, 866, 870, 876, 881, 886, 889, 891, 913, 917, 923, 928, 929, 931, 933, 938, 943, 948, 953, 961, 966, 967, 968, 974, 976, 978, 980, 982, 987, 992, 997, 1005, 1006, 1010, 1011, 1013, 1015, 1016, 1020, 1021, 1025, 1027, 1029, 1031, 1033, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1047, 1048, 1053, 1054, 1055, 1059, 1064, 1065, 1067, 1069, 1070, 1071, 1078, 1088, 1089, 1091, 1094, 1099, 1102, 1104, 1107, 1109, 1112, 1114, 1120, 1125, 1130, 1135, 1140, 1145, 1146, 1155, 1156, 1161, 1164, 1166, 1175, 1178, 1182, 1187, 1188, 1190, 1206, 1211, 1215, 1219, 1222, 1223, 1226, 1227, 1233, 1236, 1237, 1242, 1247, 1249, 1252, 1254, 1258, 1259, 1262, 1264, 1265, 1269, 1275, 1278, 1280, 1283, 1290, 1295, 1298, 1300, 1303, 1305, 1307, 1308, 1315, 1318, 1320, 1323, 1331, 1332, 1335, 1341, 1342, 1344, 1347, 1350, 1352, 1355, 1357, 1363, 1368, 1373, 1374, 1375, 1376, 1386, 1387, 1391, 1394, 1400, 1401, 1407, 1408, 1410, 1412, 1417, 1421, 1423, 1426, 1428, 1432, 1433, 1437, 1441, 1445, 1450, 1451, 1453, 1456, 1457, 1463, 1466, 1468, 1471, 1472, 1476, 1479, 1481, 1485, 1489, 1491, 1494, 1496, 1501, 1504, 1506, 1510, 1513, 1515, 1518, 1523, 1526, 1528, 1531, 1535, 1538, 1540, 1545, 1548, 1550, 1553, 1555, 1556, 1557, 1559, 1561, 1562, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1592, 1595, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1618, 1620, 1622, 1623, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1643, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1666, 1670, 1672, 1674, 1675, 1677, 1680, 1684, 1685, 1689, 1690, 1694, 1695, 1696, 1697, 1699, 1701, 1702, 1704, 1706, 1707, 1709, 1711, 1712, 1713, 1715, 1717, 1718, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1740, 1742, 1745, 1747, 1750, 1752, 1755, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1792, 1793, 1794, 1795, 1796, 1800, 1804, 1805, 1806, 1810, 1814, 1815, 1816, 1817, 1820, 1821, 1822, 1825, 1827, 1832, 1837, 1843, 1846, 1848, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1862, 1864, 1865, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1882, 1884, 1885, 1887, 1889, 1890, 1894, 1895, 1896, 1899, 1901, 1906, 1909, 1911, 1912, 1915, 1917, 1918, 1920, 1922, 1925, 1926, 1927, 1929, 1930, 1931, 1933, 1934, 1935, 1937, 1938, 1939, 1941, 1943, 1944, 1946, 1947, 1951, 1952, 1954, 1956, 1957, 1958, 1959, 1961, 1963, 1964, 1966, 1968, 1969, 1981, 1982, 1987, 1995, 1996, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2017, 2018, 2019, 2020, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2034, 2035, 2041, 2043, 2045, 2048, 2059, 2061, 2062, 2072, 2076, 2106, 2109], "term": [34, 43, 146, 164, 1489, 1540, 1543, 1968, 1981, 2007, 2017], "time": [34, 35, 36, 41, 42, 43, 63, 66, 67, 84, 85, 111, 114, 115, 132, 133, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 160, 161, 164, 167, 169, 181, 865, 868, 891, 896, 1071, 1088, 1089, 1161, 1164, 1175, 1176, 1177, 1178, 1179, 1451, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1489, 1528, 1531, 1540, 1543, 1711, 1777, 1781, 1792, 1793, 1794, 1795, 1848, 1849, 1852, 1854, 1857, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1979, 1981, 1982, 1985, 1986, 1987, 2007, 2018, 2019, 2020], "These": [34, 35, 36, 38, 40, 41, 42, 43, 63, 111, 143, 146, 147, 148, 150, 151, 153, 154, 155, 157, 160, 161, 164, 165, 167, 168, 169, 181, 1071, 1085, 1120, 1121, 1122, 1123, 1124, 1555, 1581, 1582, 1585, 1968, 1981, 1985, 1987, 1988], "written": [34, 42, 143, 144, 151, 154, 157, 158, 161, 164, 166, 169, 181, 1979, 1981, 1985, 1987, 1988], "mani": [34, 35, 36, 41, 42, 43, 76, 77, 97, 98, 124, 125, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 167, 181, 844, 849, 850, 1219, 1222, 1223, 1226, 1711, 1757, 1758, 1759, 1760, 1761, 1977, 1981, 1984, 1987, 1988, 1995, 1996], "differ": [34, 35, 36, 40, 42, 43, 45, 48, 49, 61, 62, 63, 64, 65, 94, 97, 98, 99, 100, 111, 112, 113, 136, 137, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 181, 323, 363, 366, 453, 469, 472, 749, 751, 753, 779, 782, 865, 866, 867, 868, 869, 891, 892, 896, 899, 900, 904, 933, 936, 938, 941, 943, 946, 948, 951, 1005, 1008, 1071, 1079, 1080, 1089, 1166, 1167, 1168, 1169, 1170, 1175, 1176, 1177, 1178, 1179, 1201, 1204, 1258, 1315, 1316, 1317, 1318, 1319, 1489, 1535, 1538, 1555, 1642, 1645, 1711, 1717, 1720, 1767, 1770, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951, 1952, 1955, 1969, 1978, 1979, 1980, 1981, 1984, 1987, 1988, 2019, 2020], "while": [34, 35, 41, 42, 43, 94, 97, 98, 99, 100, 145, 148, 150, 153, 154, 157, 158, 160, 162, 166, 168, 169, 181, 237, 292, 295, 323, 402, 453, 654, 657, 659, 662, 891, 900, 948, 951, 1053, 1058, 1130, 1133, 1874, 1875, 1879, 1911, 1930, 1933, 1943, 1946, 1981, 1987, 1988, 2019, 2022, 2064, 2065], "thi": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 196, 198, 199, 200, 202, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 242, 243, 244, 249, 250, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 290, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 363, 366, 374, 377, 381, 384, 386, 387, 388, 390, 391, 394, 402, 403, 404, 405, 406, 407, 418, 420, 422, 425, 426, 427, 429, 438, 443, 444, 445, 446, 447, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 823, 824, 825, 827, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 849, 850, 854, 855, 856, 857, 858, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 874, 875, 876, 877, 878, 880, 881, 882, 883, 885, 886, 888, 889, 890, 891, 894, 895, 897, 899, 903, 909, 910, 912, 917, 918, 919, 920, 921, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 955, 957, 958, 959, 961, 962, 963, 965, 968, 969, 970, 971, 974, 975, 977, 978, 979, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1071, 1078, 1081, 1085, 1088, 1094, 1095, 1096, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1175, 1176, 1177, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1217, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1263, 1266, 1267, 1269, 1270, 1271, 1273, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1287, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1332, 1333, 1334, 1335, 1336, 1337, 1341, 1342, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1386, 1387, 1388, 1390, 1391, 1393, 1395, 1401, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1445, 1446, 1447, 1448, 1450, 1451, 1453, 1454, 1455, 1457, 1458, 1461, 1463, 1464, 1465, 1468, 1469, 1472, 1473, 1476, 1477, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1491, 1492, 1493, 1495, 1501, 1502, 1503, 1504, 1505, 1510, 1511, 1512, 1513, 1514, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1572, 1573, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1597, 1598, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1625, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1675, 1676, 1677, 1678, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1796, 1799, 1803, 1804, 1809, 1810, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1841, 1843, 1844, 1845, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1993, 1997, 1998, 2001, 2002, 2005, 2007, 2019, 2020, 2021, 2022, 2023, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2043, 2061, 2062, 2064, 2072, 2076, 2080, 2081, 2086, 2088, 2100, 2103], "wonder": [34, 36, 166], "thing": [34, 35, 36, 40, 41, 42, 43, 145, 153, 158, 160, 162, 166, 167, 1981], "research": [34, 180, 1981, 1988], "develop": [34, 35, 36, 37, 38, 40, 41, 42, 43, 143, 147, 161, 180, 181, 1968, 1969, 1979, 1980, 1981, 1982, 1983, 1986, 1987, 1988], "also": [34, 35, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 180, 181, 198, 199, 200, 202, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 233, 237, 239, 240, 242, 243, 244, 249, 250, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 381, 384, 386, 388, 391, 394, 403, 404, 405, 407, 425, 426, 427, 429, 444, 445, 446, 447, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 823, 824, 825, 827, 828, 829, 831, 834, 835, 836, 838, 839, 840, 841, 843, 844, 849, 850, 854, 855, 856, 857, 858, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 874, 876, 877, 878, 880, 881, 882, 883, 885, 886, 888, 889, 890, 917, 918, 919, 921, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 944, 945, 947, 948, 949, 950, 952, 953, 954, 955, 957, 958, 959, 961, 962, 963, 965, 974, 975, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1071, 1078, 1085, 1088, 1094, 1095, 1096, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1175, 1176, 1177, 1179, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1191, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1217, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1261, 1263, 1266, 1267, 1269, 1270, 1271, 1273, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1287, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1304, 1305, 1306, 1308, 1309, 1310, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1324, 1332, 1333, 1334, 1335, 1336, 1341, 1342, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1386, 1387, 1388, 1390, 1391, 1393, 1395, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1445, 1446, 1447, 1448, 1451, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1468, 1469, 1472, 1473, 1476, 1477, 1481, 1482, 1483, 1484, 1485, 1489, 1491, 1492, 1493, 1495, 1501, 1502, 1503, 1504, 1505, 1510, 1511, 1512, 1513, 1514, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1572, 1573, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1597, 1598, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1619, 1620, 1621, 1622, 1625, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1673, 1675, 1676, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1807, 1808, 1809, 1816, 1817, 1818, 1819, 1820, 1822, 1823, 1824, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1841, 1843, 1844, 1845, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1977, 1978, 1979, 1980, 1981, 1982, 1984, 1986, 1987, 1988, 1997, 2000, 2002, 2007, 2017, 2043, 2059, 2072, 2080, 2081], "consid": [34, 35, 63, 72, 73, 111, 120, 121, 147, 148, 155, 161, 165, 166, 167, 453, 654, 657, 659, 662, 779, 780, 781, 782, 783, 834, 835, 836, 837, 838, 844, 849, 850, 891, 892, 894, 904, 1005, 1006, 1007, 1008, 1009, 1219, 1222, 1223, 1226, 1555, 1571, 1574, 1617, 1618, 1619, 1620, 1621, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1978, 1982, 1986, 1988, 1997, 1998, 2001, 2002, 2005, 2090, 2096], "speed": [34, 63, 111, 160, 966, 967, 1010, 1011, 1012, 1013, 1014, 1984], "evolv": [34, 1981], "shareabl": 34, "code": [34, 35, 36, 39, 40, 41, 42, 43, 59, 60, 61, 62, 94, 97, 98, 99, 100, 107, 108, 109, 110, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 179, 181, 418, 420, 444, 445, 446, 447, 448, 549, 551, 619, 620, 621, 623, 679, 680, 681, 1258, 1417, 1421, 1451, 1480, 1486, 1488, 1489, 1523, 1526, 1555, 1612, 1615, 1617, 1620, 1622, 1625, 1711, 1767, 1770, 1968, 1969, 1977, 1979, 1980, 1981, 1982, 1984, 1985, 1986, 1987, 1988], "significantli": [34, 1555, 1652, 1656, 1979], "hinder": [34, 154], "librari": [34, 35, 36, 37, 41, 42, 59, 60, 107, 108, 143, 162, 169, 179, 181, 418, 444, 445, 446, 447, 448, 453, 569, 572, 634, 637, 654, 657, 659, 662, 1555, 1582, 1585, 1587, 1590, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1943, 1946, 1968, 1969, 1977, 1978, 1979, 1981, 1985, 1988], "outdat": 34, "month": [34, 42], "rigor": [34, 160], "maintain": [34, 43, 86, 87, 134, 135, 143, 147, 159, 160, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1980], "against": [34, 57, 58, 63, 72, 73, 82, 83, 105, 106, 109, 110, 111, 120, 121, 130, 131, 160, 164, 181, 323, 335, 336, 337, 338, 674, 676, 678, 779, 782, 839, 840, 841, 842, 843, 891, 892, 895, 904, 966, 967, 1005, 1008, 1010, 1011, 1012, 1013, 1014, 1140, 1141, 1142, 1143, 1144, 1166, 1167, 1168, 1169, 1170, 1201, 1203, 1204, 1555, 1602, 1605, 1607, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1620, 1621, 1632, 1635, 1848, 1849, 1850, 1851, 1852, 1853, 1981], "newest": 34, "For": [34, 35, 36, 38, 39, 41, 42, 43, 55, 56, 63, 72, 73, 111, 120, 121, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 180, 181, 237, 239, 240, 282, 283, 285, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 529, 532, 534, 537, 539, 542, 564, 567, 569, 572, 574, 577, 624, 627, 629, 632, 634, 637, 639, 642, 644, 647, 654, 657, 699, 702, 714, 717, 719, 722, 729, 732, 734, 737, 739, 742, 754, 758, 759, 763, 764, 768, 799, 800, 801, 802, 803, 891, 913, 1071, 1074, 1088, 1161, 1164, 1187, 1190, 1555, 1642, 1645, 1652, 1656, 1670, 1671, 1672, 1673, 1674, 1711, 1712, 1715, 1767, 1770, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1911, 1926, 1929, 1934, 1937, 1947, 1951, 1978, 1979, 1982, 1987, 1988, 1993, 1994, 2019, 2020, 2021, 2086, 2089], "softwar": [34, 35, 42, 43, 1979, 1984, 1985, 1986], "pipelin": [34, 143, 144, 159, 169, 1968, 1981, 1982, 1987], "where": [34, 35, 36, 37, 39, 42, 43, 55, 56, 61, 62, 63, 64, 65, 72, 73, 76, 77, 80, 81, 82, 83, 88, 89, 90, 91, 97, 98, 103, 104, 109, 110, 111, 120, 121, 124, 125, 128, 129, 130, 131, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 181, 237, 266, 267, 268, 270, 282, 283, 285, 292, 294, 295, 296, 453, 489, 492, 564, 567, 609, 612, 634, 637, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 699, 702, 777, 778, 789, 791, 793, 794, 796, 798, 799, 801, 802, 803, 819, 822, 844, 849, 850, 891, 900, 904, 905, 906, 912, 922, 948, 951, 982, 983, 984, 985, 986, 1005, 1008, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1038, 1044, 1064, 1065, 1066, 1067, 1068, 1071, 1074, 1081, 1088, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1182, 1185, 1201, 1204, 1219, 1222, 1223, 1226, 1258, 1357, 1358, 1360, 1386, 1387, 1450, 1451, 1480, 1486, 1488, 1555, 1581, 1582, 1585, 1607, 1610, 1617, 1618, 1619, 1620, 1621, 1632, 1635, 1637, 1640, 1652, 1656, 1657, 1661, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1725, 1727, 1728, 1729, 1731, 1737, 1738, 1739, 1740, 1741, 1767, 1770, 1787, 1791, 1796, 1808, 1821, 1822, 1825, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1848, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1870, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1979, 1988, 1997, 1999, 2000, 2001, 2004], "rapid": [34, 35, 42, 1981], "prototyp": [34, 1981], "vital": [34, 169], "signific": [34, 35, 181, 1981], "bottleneck": 34, "As": [34, 43, 92, 93, 140, 141, 144, 146, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 181, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1981, 1986], "new": [34, 35, 36, 37, 39, 41, 42, 43, 45, 48, 49, 63, 64, 65, 66, 67, 76, 77, 78, 79, 97, 98, 103, 104, 111, 112, 113, 114, 115, 124, 125, 126, 127, 142, 145, 146, 147, 148, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 169, 180, 237, 252, 261, 264, 266, 267, 270, 292, 294, 295, 296, 297, 298, 300, 303, 315, 317, 318, 322, 323, 412, 453, 494, 497, 684, 687, 694, 697, 709, 712, 779, 781, 783, 834, 835, 836, 837, 838, 891, 894, 910, 1005, 1006, 1007, 1009, 1071, 1085, 1120, 1123, 1145, 1146, 1147, 1148, 1149, 1258, 1290, 1291, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1308, 1309, 1310, 1311, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1328, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1398, 1404, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1428, 1432, 1451, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1711, 1727, 1728, 1729, 1730, 1731, 1747, 1748, 1749, 1750, 1751, 1767, 1770, 1796, 1802, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1968, 1969, 1979, 1983, 1987, 1988, 1993, 1994, 2007, 2017, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030], "futur": [34, 36, 42, 43, 148, 160, 161, 162, 166, 181, 1555, 1582, 1585, 1587, 1590, 1987], "avail": [34, 42, 43, 64, 65, 112, 113, 146, 147, 149, 151, 152, 158, 181, 418, 424, 434, 435, 436, 450, 1258, 1295, 1296, 1297, 1298, 1299, 1986, 1987, 2086, 2087], "quickli": [34, 36, 42, 43, 147, 167, 168, 1981, 1988], "obsolet": [34, 36], "user": [34, 35, 38, 39, 42, 43, 142, 145, 146, 148, 152, 156, 157, 158, 160, 162, 163, 164, 181, 196, 197, 203, 891, 909, 1071, 1088, 1135, 1138, 1161, 1164, 1979, 1981, 1987, 1988, 2007, 2018, 2019, 2020], "constantli": [34, 161, 162], "invent": 34, "wheel": 34, "our": [34, 35, 37, 40, 41, 42, 43, 45, 92, 93, 94, 140, 141, 143, 146, 147, 148, 150, 152, 153, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 181, 196, 234, 236, 237, 323, 418, 453, 1257, 1258, 1451, 1489, 1555, 1695, 1711, 1792, 1796, 1816, 1821, 1848, 1895, 1911, 1957, 1969, 1986, 1987, 1990, 1993, 1997, 2007, 2019, 2023, 2025, 2031, 2090, 2096], "desir": [34, 43, 57, 58, 59, 60, 63, 82, 83, 97, 98, 105, 106, 107, 108, 111, 130, 131, 145, 147, 148, 158, 164, 323, 330, 331, 332, 333, 334, 340, 341, 342, 344, 345, 346, 347, 348, 349, 418, 444, 445, 446, 447, 448, 1140, 1141, 1142, 1143, 1144, 1166, 1167, 1168, 1169, 1170, 1201, 1203, 1204, 1848, 1859, 1860, 1861, 1862, 1863, 1981, 1997, 1998, 2001, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018], "simultan": [34, 36], "modern": [34, 35, 1986], "simpl": [34, 41, 42, 43, 144, 146, 148, 149, 150, 151, 155, 157, 158, 160, 161, 162, 166, 168, 169, 181, 1258, 1305, 1307, 1968, 1980, 1981, 1982, 1983, 2090, 2096], "scalabl": [34, 164, 1986, 1987], "manner": [34, 42, 50, 53, 54, 101, 102, 149, 151, 158, 161, 167, 180, 181, 1796, 1809, 1977, 1979, 1987, 1988], "determin": [34, 45, 48, 49, 61, 62, 63, 72, 73, 76, 77, 90, 91, 94, 97, 98, 99, 100, 109, 110, 111, 112, 113, 120, 121, 134, 135, 138, 139, 146, 147, 148, 149, 151, 155, 158, 162, 237, 258, 259, 323, 345, 348, 351, 362, 380, 381, 384, 386, 389, 391, 394, 396, 399, 417, 418, 434, 435, 436, 450, 453, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 509, 510, 511, 512, 513, 514, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 550, 551, 552, 553, 564, 565, 566, 567, 568, 569, 571, 572, 573, 579, 580, 581, 583, 594, 597, 599, 602, 604, 607, 609, 612, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 664, 667, 679, 680, 681, 682, 683, 699, 700, 701, 702, 703, 714, 715, 717, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 769, 770, 771, 772, 773, 852, 853, 891, 913, 1003, 1187, 1188, 1189, 1190, 1191, 1258, 1259, 1262, 1266, 1268, 1341, 1343, 1344, 1345, 1346, 1362, 1363, 1366, 1368, 1371, 1373, 1375, 1376, 1379, 1417, 1421, 1445, 1449, 1489, 1545, 1548, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1576, 1579, 1592, 1595, 1597, 1599, 1600, 1602, 1605, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1627, 1630, 1632, 1634, 1635, 1636, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1685, 1686, 1688, 1689, 1711, 1717, 1718, 1720, 1792, 1793, 1794, 1795, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1896, 1898, 1900, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1997, 2002, 2005, 2090, 2096], "exactli": [34, 36, 146, 147, 148, 149, 150, 160, 162], "common": [34, 41, 63, 97, 98, 111, 146, 148, 149, 150, 153, 155, 156, 158, 161, 162, 181, 323, 402, 834, 837, 891, 894, 899, 902, 907, 943, 944, 946, 961, 964, 1048, 1049, 1050, 1051, 1052, 1978, 1981, 1988], "ground": [34, 158, 160, 2034, 2035, 2041, 2043, 2060, 2061, 2062], "li": [34, 63, 111, 1166, 1167, 1168, 1169, 1170, 1201, 1204], "between": [34, 63, 70, 71, 74, 75, 76, 77, 84, 85, 94, 97, 98, 99, 100, 109, 110, 111, 118, 119, 122, 123, 124, 125, 144, 145, 146, 150, 154, 155, 158, 159, 160, 162, 163, 165, 166, 167, 169, 180, 237, 239, 240, 323, 363, 366, 453, 489, 492, 699, 702, 779, 782, 824, 825, 826, 827, 891, 892, 904, 914, 1005, 1008, 1069, 1070, 1071, 1088, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1216, 1217, 1218, 1489, 1528, 1529, 1530, 1531, 1532, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1727, 1728, 1729, 1731, 1767, 1770, 1796, 1803, 1821, 1827, 1830, 1874, 1875, 1877, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1969, 1977, 1978, 1980, 1981, 1982, 1987, 2025, 2027, 2086, 2089], "find": [34, 37, 39, 40, 41, 42, 43, 97, 98, 143, 147, 158, 160, 162, 164, 167, 1796, 1799, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1968, 1969], "essenti": [34, 35, 41, 146, 149, 150, 155, 158, 161, 1987], "order": [34, 39, 41, 42, 43, 45, 48, 49, 63, 66, 67, 72, 73, 76, 77, 84, 85, 86, 87, 94, 97, 98, 99, 100, 111, 120, 121, 124, 125, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 167, 169, 181, 237, 282, 285, 453, 489, 492, 844, 849, 850, 886, 889, 891, 903, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 968, 969, 970, 971, 997, 998, 1053, 1055, 1058, 1071, 1078, 1079, 1080, 1130, 1133, 1219, 1222, 1223, 1226, 1463, 1464, 1555, 1581, 1582, 1585, 1607, 1608, 1609, 1610, 1611, 1652, 1656, 1657, 1661, 1675, 1676, 1677, 1678, 1679, 1685, 1686, 1688, 1689, 1711, 1732, 1735, 1747, 1748, 1749, 1750, 1751, 1792, 1793, 1794, 1848, 1864, 1867, 1874, 1875, 1877, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1977, 1980, 1981, 1982, 1984, 1987, 1995, 1996, 2019, 2020, 2031, 2032, 2043, 2059, 2060, 2061, 2062], "design": [34, 35, 111, 142, 147, 148, 157, 158, 159, 162, 164, 166, 181, 844, 847, 848, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1977, 1979, 1981, 1984, 1985, 1986], "univers": [34, 2086, 2087], "abstract": [34, 146, 148, 158, 160, 162, 168, 181, 418, 420, 1979, 1981, 1983, 1984, 1988, 1997, 2001, 2025, 2029], "In": [34, 36, 38, 41, 42, 43, 59, 60, 64, 65, 76, 77, 107, 108, 124, 125, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 180, 181, 418, 438, 444, 445, 446, 447, 448, 449, 452, 453, 469, 472, 714, 717, 875, 1038, 1043, 1258, 1264, 1357, 1358, 1360, 1555, 1642, 1645, 1711, 1747, 1748, 1749, 1750, 1751, 1821, 1837, 1840, 1969, 1977, 1979, 1981, 1982, 1984, 1987, 2019, 2021], "search": [34, 40, 42, 50, 53, 54, 83, 101, 102, 131, 146, 150, 160, 161, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1862, 1864, 1867, 1869, 1873], "languag": [34, 36, 158, 162, 164, 1968, 1979, 1982, 1984, 1985, 1986, 1987], "see": [34, 37, 39, 41, 42, 43, 45, 48, 49, 57, 58, 61, 62, 72, 73, 82, 83, 88, 89, 90, 91, 94, 99, 100, 109, 110, 120, 121, 130, 131, 136, 137, 138, 139, 143, 146, 147, 149, 150, 152, 154, 155, 158, 159, 160, 161, 162, 164, 166, 167, 180, 181, 237, 239, 240, 261, 264, 272, 275, 323, 340, 343, 386, 387, 403, 406, 453, 469, 470, 471, 472, 473, 489, 490, 491, 493, 499, 500, 501, 502, 503, 509, 510, 511, 512, 513, 514, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 549, 550, 551, 552, 553, 554, 555, 556, 558, 569, 572, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 614, 615, 616, 617, 618, 619, 620, 621, 623, 634, 637, 644, 645, 646, 647, 648, 649, 650, 651, 653, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 679, 680, 681, 682, 683, 689, 690, 691, 692, 693, 699, 700, 701, 702, 703, 714, 715, 716, 717, 718, 749, 750, 751, 752, 753, 769, 770, 771, 772, 773, 844, 849, 850, 1219, 1222, 1223, 1226, 1555, 1561, 1562, 1563, 1565, 1617, 1618, 1619, 1620, 1621, 1632, 1635, 1647, 1650, 1680, 1684, 1685, 1686, 1688, 1689, 1848, 1854, 1855, 1856, 1857, 1858, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1911, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1977], "clear": [34, 35, 36, 41, 43, 148, 149, 150, 158, 162, 164, 166, 418, 423, 1981], "front": [34, 163, 164, 167, 1969, 1979, 1981], "runner": 34, "look": [34, 38, 39, 42, 43, 145, 146, 148, 149, 150, 152, 154, 155, 158, 159, 160, 161, 162, 164, 166, 168, 169, 1969, 1977, 1981], "littl": [34, 166, 1983], "deeper": [34, 43, 142, 160, 163, 1796, 1797, 1798, 1807, 1808, 1809], "follow": [34, 35, 39, 41, 42, 43, 64, 65, 66, 67, 70, 71, 97, 98, 112, 113, 114, 115, 118, 119, 120, 121, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 181, 323, 374, 377, 418, 443, 453, 714, 717, 1071, 1088, 1161, 1164, 1258, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1451, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1489, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1607, 1610, 1637, 1640, 1685, 1686, 1688, 1689, 1796, 1803, 1809, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1969, 1978, 1981, 1984, 2007, 2017, 2025, 2029], "same": [34, 36, 38, 39, 42, 43, 45, 48, 49, 50, 51, 52, 55, 56, 57, 58, 61, 62, 63, 66, 67, 70, 71, 72, 73, 76, 77, 80, 81, 84, 85, 86, 87, 88, 89, 97, 98, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 128, 129, 132, 133, 136, 137, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 181, 237, 239, 240, 253, 254, 256, 267, 268, 269, 270, 271, 277, 279, 281, 282, 283, 285, 292, 293, 294, 295, 296, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 418, 419, 443, 453, 454, 455, 456, 457, 458, 459, 460, 464, 465, 469, 472, 474, 475, 484, 485, 504, 505, 506, 507, 508, 514, 515, 516, 518, 529, 530, 531, 532, 533, 574, 575, 576, 577, 578, 684, 685, 686, 688, 694, 695, 696, 698, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 764, 765, 766, 767, 768, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 844, 849, 850, 891, 899, 943, 946, 966, 967, 1010, 1011, 1012, 1013, 1014, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1071, 1088, 1090, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1125, 1126, 1128, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1192, 1193, 1201, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1320, 1322, 1451, 1481, 1482, 1483, 1484, 1485, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1564, 1566, 1569, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1597, 1599, 1600, 1612, 1615, 1622, 1623, 1624, 1625, 1626, 1632, 1634, 1635, 1636, 1637, 1640, 1647, 1650, 1652, 1656, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1711, 1717, 1718, 1720, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1747, 1748, 1749, 1750, 1752, 1753, 1754, 1755, 1756, 1762, 1765, 1767, 1768, 1769, 1770, 1771, 1792, 1793, 1794, 1796, 1810, 1821, 1837, 1838, 1839, 1840, 1841, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1899, 1906, 1909, 1911, 1912, 1915, 1917, 1920, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1969, 1978, 1980, 1987, 1988, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2034, 2035, 2072, 2075, 2086, 2087, 2090, 2097], "core": [34, 41, 42, 149, 160, 169, 418, 435, 1969, 1979, 1980, 1981, 1982, 1986, 1988], "principl": [34, 1979, 1981, 1984], "oper": [34, 41, 42, 55, 56, 57, 58, 63, 64, 65, 66, 67, 70, 71, 94, 97, 98, 99, 100, 103, 104, 105, 106, 111, 112, 113, 118, 119, 143, 144, 146, 148, 149, 150, 151, 152, 155, 157, 158, 160, 162, 164, 167, 168, 237, 272, 275, 277, 278, 279, 280, 281, 323, 403, 404, 405, 406, 407, 453, 469, 472, 519, 522, 714, 717, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 891, 909, 922, 1038, 1039, 1040, 1041, 1044, 1045, 1046, 1047, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1135, 1136, 1137, 1138, 1139, 1258, 1269, 1271, 1272, 1290, 1293, 1295, 1298, 1299, 1300, 1303, 1304, 1417, 1418, 1419, 1420, 1421, 1463, 1464, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1535, 1538, 1968, 1977, 1978, 1979, 1980, 1981, 1982, 1984, 1985, 1986, 1987, 1988, 2072, 2076, 2080, 2081, 2100, 2101, 2102, 2103], "expos": [34, 164, 168, 1258, 1285], "almost": [34, 40, 146, 159, 165, 167], "ident": [34, 36, 97, 98, 146, 155, 156, 158, 159, 161, 162, 166, 167, 181, 237, 258, 259, 418, 433, 1258, 1328, 1555, 1612, 1615, 1796, 1810, 1968, 1969], "uniqu": [34, 63, 84, 85, 111, 132, 133, 143, 146, 155, 158, 159, 162, 181, 966, 967, 1010, 1011, 1012, 1013, 1014, 1071, 1085, 1088, 1120, 1121, 1122, 1123, 1124, 1161, 1164, 1792, 1793, 1794, 1795, 1796, 1799, 1803, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1984, 2090, 2092], "syntax": [34, 35, 148, 153, 1981], "There": [34, 41, 42, 43, 143, 144, 146, 148, 150, 152, 153, 155, 158, 159, 164, 167, 181, 1982, 1983, 1987, 1988, 2090, 2096], "onli": [34, 37, 41, 42, 43, 45, 48, 49, 55, 56, 63, 76, 77, 80, 81, 97, 98, 103, 104, 111, 124, 125, 128, 129, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 179, 181, 237, 277, 278, 279, 280, 281, 323, 401, 402, 418, 439, 452, 453, 654, 657, 659, 662, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 819, 822, 891, 903, 909, 928, 929, 930, 931, 932, 968, 969, 971, 1071, 1072, 1073, 1078, 1135, 1136, 1137, 1138, 1139, 1171, 1172, 1258, 1274, 1555, 1602, 1605, 1637, 1640, 1652, 1656, 1711, 1732, 1733, 1734, 1735, 1736, 1747, 1748, 1749, 1750, 1751, 1796, 1797, 1798, 1804, 1805, 1807, 1808, 1809, 1814, 1815, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1848, 1849, 1852, 1854, 1857, 1895, 1901, 1904, 1911, 1930, 1933, 1943, 1946, 1969, 1980, 1981, 1982, 1987, 1988, 2019, 2020, 2021, 2025, 2026, 2027, 2028, 2029, 2030, 2043, 2059, 2064, 2072, 2076, 2080, 2081, 2090, 2091, 2100, 2101, 2102, 2103], "so": [34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 181, 182, 194, 198, 199, 200, 202, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 233, 242, 243, 249, 250, 253, 254, 261, 262, 267, 268, 269, 271, 277, 278, 279, 281, 282, 283, 287, 288, 292, 293, 294, 296, 300, 301, 302, 304, 305, 307, 310, 312, 318, 319, 320, 321, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 386, 388, 390, 403, 404, 405, 407, 425, 426, 427, 429, 444, 445, 446, 447, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 819, 820, 821, 823, 824, 825, 827, 828, 829, 831, 834, 835, 836, 838, 839, 840, 841, 843, 854, 855, 856, 858, 860, 861, 862, 865, 866, 867, 869, 870, 871, 872, 874, 876, 877, 878, 880, 881, 882, 883, 885, 886, 888, 890, 891, 899, 915, 917, 918, 919, 921, 923, 924, 925, 927, 928, 929, 930, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 955, 957, 958, 959, 961, 962, 963, 965, 974, 975, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1048, 1049, 1050, 1052, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1094, 1095, 1096, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1170, 1175, 1176, 1177, 1179, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1191, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1217, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1259, 1260, 1261, 1263, 1266, 1267, 1269, 1270, 1271, 1273, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1287, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1305, 1306, 1308, 1309, 1310, 1312, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1332, 1333, 1334, 1336, 1341, 1342, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1386, 1387, 1388, 1390, 1391, 1393, 1395, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1445, 1446, 1447, 1448, 1453, 1454, 1455, 1457, 1458, 1463, 1464, 1465, 1468, 1469, 1472, 1473, 1476, 1477, 1481, 1482, 1483, 1484, 1489, 1491, 1492, 1493, 1495, 1501, 1502, 1503, 1505, 1510, 1511, 1512, 1514, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1539, 1550, 1551, 1552, 1554, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1565, 1571, 1572, 1573, 1587, 1588, 1589, 1591, 1597, 1598, 1599, 1602, 1604, 1606, 1607, 1608, 1609, 1611, 1632, 1634, 1636, 1642, 1643, 1644, 1646, 1675, 1676, 1685, 1686, 1688, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1796, 1797, 1808, 1817, 1818, 1819, 1822, 1823, 1824, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1841, 1843, 1844, 1845, 1847, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1932, 1934, 1936, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1952, 1953, 1954, 1955, 1958, 1959, 1960, 1962, 1963, 1964, 1965, 1967, 1969, 1981, 1982, 1983, 1985], "wai": [34, 35, 40, 41, 42, 143, 145, 147, 148, 157, 159, 160, 162, 166, 167, 168, 169, 181, 1983, 1987, 1988], "manipul": [34, 77, 125, 158, 161, 162, 164, 169, 180, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1740, 1742, 1745, 1747, 1750, 1752, 1755, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1981], "unsurprisingli": [34, 150], "fundament": [34, 147, 158, 162, 164, 1981], "consist": [34, 88, 89, 97, 98, 143, 144, 148, 152, 157, 164, 1555, 1581, 1582, 1585, 1911, 1922, 1923, 1925, 1982, 2019, 2020], "each": [34, 35, 36, 38, 41, 42, 43, 45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 82, 83, 84, 85, 88, 89, 94, 97, 98, 99, 100, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 130, 131, 132, 133, 136, 137, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 180, 181, 196, 214, 217, 219, 222, 229, 232, 237, 282, 283, 285, 323, 335, 336, 337, 338, 339, 418, 443, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 498, 499, 502, 504, 507, 509, 512, 514, 517, 519, 522, 524, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 552, 554, 557, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 609, 612, 614, 617, 619, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 649, 652, 654, 656, 657, 658, 659, 662, 664, 667, 679, 682, 684, 685, 686, 687, 688, 689, 692, 694, 695, 696, 697, 698, 699, 702, 704, 706, 707, 708, 709, 712, 714, 715, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 876, 877, 878, 879, 880, 891, 893, 899, 913, 933, 936, 938, 941, 943, 946, 966, 967, 982, 984, 985, 986, 987, 988, 989, 990, 991, 997, 999, 1000, 1001, 1010, 1011, 1012, 1013, 1014, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1071, 1072, 1073, 1074, 1076, 1079, 1080, 1081, 1082, 1084, 1085, 1088, 1092, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1120, 1121, 1122, 1123, 1124, 1161, 1164, 1187, 1188, 1189, 1190, 1191, 1237, 1238, 1239, 1240, 1241, 1258, 1259, 1260, 1261, 1262, 1263, 1290, 1292, 1294, 1295, 1299, 1300, 1304, 1315, 1316, 1317, 1318, 1319, 1450, 1451, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1564, 1566, 1569, 1581, 1582, 1585, 1587, 1590, 1602, 1605, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1632, 1635, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1675, 1679, 1711, 1722, 1725, 1742, 1745, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1767, 1768, 1769, 1770, 1771, 1777, 1781, 1787, 1791, 1796, 1803, 1810, 1821, 1822, 1825, 1848, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1911, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1952, 1955, 1969, 1977, 1978, 1982, 1984, 1987, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2018, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2072, 2080, 2081, 2090, 2095], "veri": [34, 35, 40, 41, 42, 43, 63, 111, 146, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 161, 162, 165, 167, 168, 169, 181, 779, 782, 891, 892, 904, 909, 1005, 1008, 1135, 1136, 1137, 1138, 1139, 1555, 1642, 1645, 1969, 1977, 1978, 1979, 1981, 1982, 1983, 1986, 1987, 1988, 2090, 2096], "similar": [34, 41, 42, 146, 147, 148, 149, 152, 156, 158, 159, 160, 161, 167, 181, 453, 714, 717, 1489, 1545, 1548, 1977, 1978, 1979, 1980, 1987, 2007, 2018], "convent": [34, 145, 154, 161, 180, 1555, 1602, 1605, 1911, 1922, 1925, 1987], "those": [34, 41, 42, 43, 76, 77, 97, 98, 111, 124, 125, 146, 147, 148, 156, 158, 160, 162, 237, 239, 240, 323, 402, 1206, 1207, 1209, 1258, 1450, 1555, 1637, 1640, 1652, 1656, 1711, 1712, 1713, 1714, 1715, 1716, 1796, 1799, 1978], "introduc": [34, 146, 148, 159, 160, 167, 1711, 1752, 1755, 1874, 1875, 1879], "2006": 34, "layer": [34, 71, 78, 79, 119, 126, 127, 151, 158, 161, 162, 164, 165, 168, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1490, 1491, 1494, 1496, 1499, 1501, 1504, 1506, 1508, 1510, 1513, 1515, 1518, 1520, 1521, 1522, 1523, 1526, 1528, 1531, 1533, 1534, 1535, 1538, 1540, 1543, 1545, 1548, 1550, 1553, 1816, 1817, 1818, 1819, 1820, 1969, 1979, 1981, 1985, 1988, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2004, 2005, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2031, 2032], "therefor": [34, 38, 41, 43, 55, 56, 61, 62, 72, 73, 109, 110, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 168, 181, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 282, 285, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 381, 384, 391, 394, 402, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 804, 807, 809, 812, 814, 817, 844, 849, 850, 854, 857, 860, 863, 886, 889, 928, 931, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1047, 1053, 1054, 1055, 1071, 1078, 1088, 1099, 1102, 1104, 1107, 1109, 1112, 1161, 1164, 1219, 1222, 1223, 1226, 1258, 1315, 1318, 1332, 1335, 1341, 1344, 1347, 1350, 1417, 1421, 1433, 1437, 1451, 1481, 1485, 1489, 1501, 1504, 1510, 1513, 1523, 1526, 1535, 1538, 1545, 1548, 1550, 1553, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1689, 1690, 1694, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1740, 1742, 1745, 1747, 1750, 1752, 1755, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1816, 1817, 1820, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966, 1978, 1981, 1987], "present": [34, 41, 43, 97, 98, 146, 148, 149, 154, 157, 164, 1978, 1979, 1988], "itself": [34, 42, 43, 63, 143, 146, 157, 158, 168, 180, 181, 891, 909, 1135, 1136, 1138, 1258, 1264, 1438, 1796, 1809, 1980, 1981, 1982, 1987], "cut": [34, 1987], "cloth": 34, "adher": [34, 35, 143, 148, 151, 154, 162, 164, 169, 1977, 1978, 1987], "semant": [34, 164, 169, 453, 714, 717, 1982], "round": [34, 35, 36, 38, 39, 41, 42, 43, 61, 62, 63, 109, 110, 111, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 453, 469, 472, 529, 530, 531, 532, 533, 574, 575, 576, 577, 578, 579, 582, 723, 739, 742, 764, 765, 766, 767, 768, 769, 773, 891, 898, 923, 924, 925, 926, 927, 1969, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988], "up": [34, 35, 36, 37, 38, 39, 41, 43, 63, 111, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 181, 938, 941, 966, 967, 1010, 1011, 1012, 1013, 1014, 1071, 1080, 1489, 1528, 1531, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1995, 1996], "hopefulli": [34, 35, 36, 38, 39, 41, 42, 43, 45, 94, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 196, 234, 236, 237, 323, 418, 453, 1257, 1258, 1451, 1489, 1555, 1695, 1711, 1792, 1796, 1816, 1821, 1848, 1895, 1911, 1957, 1990, 1993, 1997, 2007, 2019, 2023, 2025, 2031], "paint": [34, 164], "pictur": [34, 41, 164], "how": [34, 36, 37, 39, 40, 41, 42, 43, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 180, 181, 1969, 1977, 1981, 1995, 1996, 1997, 2002, 2005, 2007, 2018, 2019, 2020], "pleas": [34, 35, 36, 38, 39, 41, 42, 43, 45, 94, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 196, 234, 236, 237, 323, 418, 453, 1257, 1258, 1451, 1489, 1555, 1695, 1711, 1792, 1796, 1816, 1821, 1848, 1895, 1911, 1957, 1969, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1993, 1997, 2007, 2019, 2023, 2025, 2031], "reach": [34, 35, 36, 38, 39, 41, 42, 43, 45, 94, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 196, 234, 236, 237, 323, 418, 453, 1257, 1258, 1451, 1489, 1555, 1695, 1711, 1792, 1796, 1809, 1816, 1821, 1848, 1895, 1911, 1957, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1993, 1997, 2007, 2019, 2023, 2025, 2031], "out": [34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 340, 341, 342, 343, 344, 358, 359, 361, 418, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1265, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1308, 1310, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1357, 1359, 1361, 1363, 1367, 1382, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1641, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1787, 1788, 1789, 1790, 1791, 1792, 1796, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1869, 1870, 1871, 1872, 1873, 1874, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1993, 1997, 2007, 2015, 2019, 2023, 2025, 2031, 2043, 2059], "discord": [34, 35, 36, 38, 39, 41, 42, 43, 45, 94, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 196, 234, 236, 237, 323, 418, 453, 1257, 1258, 1451, 1489, 1555, 1695, 1711, 1792, 1796, 1816, 1821, 1848, 1895, 1911, 1957, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1993, 1997, 2007, 2019, 2023, 2025, 2031], "you": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 64, 65, 94, 112, 113, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 196, 234, 236, 237, 323, 418, 453, 1257, 1258, 1315, 1316, 1317, 1318, 1319, 1451, 1489, 1555, 1695, 1711, 1792, 1796, 1816, 1821, 1848, 1895, 1911, 1957, 1968, 1969, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1993, 1997, 2007, 2019, 2023, 2025, 2031], "question": [34, 35, 36, 38, 39, 41, 42, 43, 45, 94, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 181, 196, 234, 236, 237, 323, 418, 453, 1257, 1258, 1451, 1489, 1555, 1695, 1711, 1792, 1796, 1816, 1821, 1848, 1895, 1911, 1957, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1993, 1997, 2007, 2019, 2023, 2025, 2031], "With": [35, 36, 42, 45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 82, 83, 88, 89, 94, 99, 100, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 150, 156, 158, 160, 162, 164, 196, 197, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 249, 251, 258, 259, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 280, 282, 285, 297, 298, 300, 303, 318, 322, 323, 330, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 351, 358, 360, 362, 363, 366, 374, 377, 391, 394, 403, 406, 408, 409, 410, 418, 422, 425, 428, 453, 454, 457, 459, 462, 464, 467, 469, 472, 473, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 503, 504, 507, 514, 517, 518, 519, 522, 523, 524, 527, 529, 532, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 569, 572, 573, 574, 577, 579, 580, 581, 582, 583, 584, 587, 589, 592, 594, 597, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 612, 614, 617, 619, 620, 621, 622, 623, 624, 627, 629, 632, 634, 637, 644, 647, 649, 652, 654, 655, 657, 659, 662, 664, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 729, 732, 734, 737, 739, 742, 744, 745, 747, 754, 758, 759, 763, 764, 765, 768, 769, 770, 771, 772, 773, 824, 826, 839, 840, 841, 842, 843, 854, 857, 858, 860, 863, 881, 885, 886, 889, 891, 895, 907, 913, 928, 930, 931, 932, 933, 935, 937, 938, 940, 942, 978, 979, 981, 982, 984, 985, 986, 992, 996, 997, 999, 1001, 1005, 1007, 1009, 1038, 1042, 1048, 1051, 1053, 1054, 1055, 1058, 1069, 1070, 1071, 1078, 1081, 1085, 1088, 1089, 1091, 1114, 1116, 1118, 1120, 1122, 1123, 1124, 1125, 1129, 1130, 1133, 1134, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1175, 1178, 1187, 1190, 1201, 1203, 1204, 1211, 1212, 1213, 1214, 1215, 1227, 1228, 1230, 1242, 1243, 1258, 1259, 1261, 1262, 1263, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1289, 1295, 1298, 1300, 1303, 1305, 1307, 1315, 1318, 1319, 1320, 1323, 1332, 1335, 1341, 1344, 1347, 1348, 1350, 1352, 1353, 1355, 1391, 1392, 1393, 1394, 1407, 1408, 1410, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1445, 1446, 1447, 1450, 1451, 1453, 1454, 1455, 1456, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1476, 1478, 1479, 1481, 1482, 1484, 1485, 1487, 1489, 1491, 1494, 1501, 1504, 1510, 1513, 1515, 1518, 1523, 1526, 1528, 1529, 1531, 1535, 1538, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1587, 1588, 1589, 1590, 1591, 1597, 1598, 1599, 1600, 1602, 1603, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1642, 1645, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1679, 1695, 1696, 1699, 1700, 1701, 1705, 1706, 1709, 1710, 1711, 1712, 1715, 1716, 1722, 1725, 1727, 1730, 1731, 1732, 1734, 1735, 1736, 1737, 1738, 1740, 1742, 1745, 1747, 1750, 1751, 1752, 1755, 1756, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1783, 1785, 1786, 1796, 1798, 1800, 1803, 1804, 1805, 1806, 1808, 1814, 1815, 1816, 1817, 1819, 1820, 1821, 1822, 1825, 1827, 1831, 1832, 1836, 1837, 1841, 1843, 1846, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1857, 1859, 1862, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1883, 1884, 1885, 1889, 1895, 1896, 1899, 1900, 1901, 1904, 1906, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966, 1981, 1984], "central": [35, 41, 162, 1987], "goal": [35, 41, 1981, 1987], "being": [35, 36, 42, 43, 45, 48, 49, 97, 98, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 162, 164, 167, 180, 181, 237, 239, 240, 1071, 1088, 1161, 1164, 1258, 1274, 1337, 1401, 1555, 1587, 1590, 1969, 1975, 1976, 1977, 1979, 1980, 1981, 1982, 1987, 1988, 1997, 2005, 2043, 2062, 2100, 2101], "would": [35, 37, 39, 41, 42, 43, 59, 60, 76, 77, 107, 108, 124, 125, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 168, 169, 181, 196, 209, 212, 224, 227, 418, 444, 445, 446, 447, 448, 922, 1038, 1044, 1711, 1747, 1748, 1749, 1750, 1751, 1969, 1981, 1987, 2090, 2096], "entir": [35, 36, 41, 42, 43, 88, 89, 90, 91, 97, 98, 112, 113, 136, 137, 138, 139, 143, 144, 146, 148, 150, 152, 157, 158, 159, 160, 162, 164, 167, 168, 169, 181, 418, 443, 875, 1038, 1043, 1071, 1088, 1161, 1164, 1341, 1343, 1345, 1911, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1981, 1987, 1988, 2007, 2016], "forgiven": 35, "rais": [35, 43, 63, 64, 65, 76, 77, 80, 81, 90, 91, 97, 98, 111, 112, 113, 124, 125, 128, 129, 138, 139, 143, 145, 152, 153, 157, 158, 164, 166, 323, 340, 343, 453, 564, 567, 699, 702, 819, 822, 891, 899, 943, 944, 945, 946, 947, 1140, 1141, 1142, 1143, 1144, 1171, 1172, 1201, 1203, 1258, 1269, 1270, 1272, 1273, 1329, 1357, 1358, 1360, 1398, 1412, 1415, 1417, 1418, 1421, 1438, 1451, 1480, 1486, 1488, 1555, 1602, 1605, 1612, 1615, 1680, 1684, 1711, 1727, 1730, 1747, 1748, 1749, 1750, 1751, 1767, 1770, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1848, 1864, 1867, 1911, 1926, 1929, 1934, 1937, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 2019, 2020, 2025, 2029, 2034, 2040, 2090, 2092], "an": [35, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 180, 181, 196, 214, 217, 219, 222, 224, 225, 229, 232, 234, 236, 237, 239, 240, 242, 243, 244, 249, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 280, 282, 283, 285, 287, 290, 297, 298, 300, 301, 303, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 345, 348, 363, 366, 374, 377, 381, 384, 391, 394, 402, 403, 404, 405, 406, 407, 418, 419, 444, 445, 446, 447, 448, 453, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 539, 540, 541, 542, 543, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 564, 565, 567, 569, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 661, 662, 664, 665, 667, 669, 670, 671, 672, 673, 674, 675, 677, 679, 680, 682, 684, 685, 687, 689, 690, 692, 694, 695, 697, 699, 700, 702, 704, 705, 707, 709, 710, 714, 715, 717, 719, 720, 722, 724, 725, 727, 729, 730, 732, 734, 735, 736, 737, 738, 739, 740, 742, 744, 745, 747, 749, 751, 753, 754, 755, 756, 758, 759, 761, 763, 764, 766, 768, 769, 771, 773, 784, 785, 786, 787, 788, 789, 790, 792, 794, 795, 797, 799, 800, 802, 804, 807, 809, 812, 814, 817, 819, 822, 824, 825, 826, 827, 844, 845, 847, 848, 849, 850, 851, 854, 857, 860, 863, 875, 876, 877, 878, 879, 880, 886, 889, 891, 893, 898, 907, 909, 913, 914, 923, 926, 928, 931, 958, 960, 974, 976, 987, 988, 989, 990, 991, 1025, 1027, 1029, 1031, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1051, 1053, 1054, 1055, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1078, 1082, 1085, 1086, 1087, 1088, 1089, 1092, 1099, 1102, 1104, 1107, 1109, 1112, 1120, 1123, 1125, 1128, 1135, 1136, 1137, 1138, 1139, 1152, 1153, 1161, 1164, 1171, 1172, 1174, 1175, 1178, 1187, 1188, 1190, 1192, 1193, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1233, 1236, 1237, 1238, 1239, 1240, 1241, 1257, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1308, 1311, 1315, 1318, 1332, 1335, 1341, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1391, 1392, 1393, 1394, 1395, 1405, 1417, 1418, 1420, 1421, 1428, 1432, 1433, 1437, 1438, 1450, 1451, 1461, 1480, 1481, 1485, 1488, 1489, 1501, 1504, 1510, 1513, 1523, 1526, 1535, 1538, 1545, 1548, 1550, 1553, 1555, 1556, 1557, 1559, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1599, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1711, 1712, 1713, 1715, 1717, 1718, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1742, 1745, 1747, 1748, 1749, 1750, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1792, 1796, 1803, 1816, 1817, 1820, 1821, 1827, 1828, 1829, 1830, 1831, 1843, 1844, 1846, 1848, 1849, 1852, 1854, 1855, 1856, 1857, 1858, 1864, 1865, 1866, 1867, 1868, 1869, 1871, 1873, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1899, 1901, 1904, 1906, 1909, 1911, 1912, 1915, 1917, 1920, 1922, 1923, 1925, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1977, 1979, 1980, 1981, 1982, 1984, 1985, 1987, 1988, 1990, 1993, 1994, 1997, 2001, 2002, 2005, 2007, 2019, 2020, 2021, 2023, 2025, 2026, 2027, 2029, 2031, 2034, 2040, 2043, 2045, 2048, 2059, 2060, 2062, 2063, 2072, 2073, 2075, 2081, 2090, 2092, 2095, 2097, 2100, 2101, 2102, 2103, 2116, 2121], "eyebrow": 35, "somehow": 35, "pytorch": [35, 36, 40, 41, 66, 67, 147, 148, 149, 152, 154, 155, 157, 158, 159, 161, 162, 164, 169, 181, 453, 719, 722, 1463, 1464, 1968, 1969, 1982, 1984, 1985, 1987, 1988, 2025, 2026, 2027, 2028, 2029, 2030], "other": [35, 38, 41, 42, 43, 45, 48, 49, 57, 58, 64, 65, 88, 89, 94, 97, 98, 99, 100, 105, 106, 109, 110, 112, 113, 136, 137, 143, 144, 146, 147, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 179, 180, 181, 234, 235, 237, 239, 240, 292, 295, 323, 335, 336, 337, 402, 453, 569, 572, 634, 637, 674, 676, 678, 865, 868, 891, 896, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1821, 1837, 1840, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 1968, 1969, 1977, 1979, 1980, 1981, 1987, 1988], "strong": [35, 181, 1981, 2090, 2096], "industri": [35, 1981, 1983], "back": [35, 42, 43, 63, 76, 77, 111, 124, 125, 144, 148, 152, 156, 163, 181, 928, 929, 930, 931, 932, 1071, 1078, 1258, 1396, 1439, 1711, 1747, 1748, 1749, 1750, 1751, 1979, 1983, 1997, 2002, 2005, 2019, 2020, 2025, 2029, 2043, 2059], "momentum": 35, "won": [35, 36, 42, 43, 146, 169], "ad": [35, 40, 41, 42, 43, 76, 77, 124, 125, 140, 141, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 168, 181, 779, 782, 891, 892, 904, 1005, 1008, 1258, 1407, 1410, 1412, 1415, 1555, 1582, 1585, 1587, 1590, 1711, 1727, 1728, 1729, 1730, 1731, 1980, 1981, 2031, 2032], "just": [35, 36, 42, 43, 88, 89, 143, 145, 147, 148, 150, 151, 155, 156, 157, 158, 159, 160, 164, 166, 167, 181, 844, 849, 850, 1219, 1222, 1223, 1226, 1911, 1922, 1923, 1925, 1981, 1982, 1987, 2007, 2016, 2019, 2021], "problem": [35, 43, 143, 144, 158, 166, 1977, 1983, 1987], "even": [35, 36, 42, 43, 63, 111, 143, 148, 149, 151, 154, 155, 157, 158, 162, 166, 167, 168, 169, 181, 453, 699, 702, 719, 722, 1071, 1088, 1161, 1162, 1163, 1164, 1165, 1987], "wors": 35, "rather": [35, 43, 64, 65, 97, 98, 112, 113, 143, 146, 148, 151, 157, 158, 159, 160, 161, 169, 181, 237, 239, 240, 418, 443, 1258, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1376, 1377, 1378, 1379, 1380, 1977, 1980, 1981], "funni": 35, "comic": 35, "strip": 35, "easi": [35, 42, 43, 146, 155, 159, 160, 162, 1979, 1981, 1987, 1988], "feasibl": [35, 41, 147], "space": [35, 55, 56, 63, 64, 65, 103, 104, 109, 110, 111, 112, 113, 162, 237, 239, 240, 272, 275, 277, 278, 279, 280, 281, 891, 903, 914, 968, 969, 970, 971, 972, 1216, 1217, 1218, 1258, 1308, 1309, 1310, 1311, 1312, 1451, 1480, 1486, 1488], "case": [35, 41, 42, 43, 50, 53, 54, 55, 56, 63, 64, 65, 76, 77, 88, 89, 94, 97, 98, 99, 100, 112, 113, 124, 125, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 181, 237, 282, 283, 285, 418, 422, 438, 449, 452, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 524, 527, 529, 532, 534, 537, 539, 542, 564, 567, 569, 572, 574, 577, 624, 627, 629, 632, 634, 637, 639, 642, 644, 647, 654, 657, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 754, 758, 759, 763, 764, 768, 870, 871, 873, 875, 891, 900, 903, 913, 948, 951, 968, 969, 971, 1038, 1043, 1171, 1173, 1187, 1190, 1258, 1357, 1358, 1360, 1391, 1392, 1393, 1394, 1395, 1555, 1642, 1645, 1711, 1747, 1748, 1749, 1750, 1751, 1796, 1800, 1806, 1911, 1926, 1929, 1930, 1931, 1933, 1934, 1937, 1943, 1946, 1947, 1951, 1952, 1954, 1956, 1980, 1984, 2007, 2018, 2019, 2020, 2021, 2025, 2029, 2072, 2076], "unlik": [35, 143, 146, 150, 157, 1986, 1988], "charger": 35, "charact": [35, 153], "encod": [35, 64, 65, 112, 113, 167, 1258, 1308, 1309, 1310, 1311, 1312], "instant": [35, 1969], "much": [35, 41, 42, 43, 144, 146, 148, 157, 158, 159, 161, 164, 166, 167, 779, 782, 891, 892, 904, 1005, 1008, 1979, 1981, 1987, 1988, 1997, 2002], "doe": [35, 39, 41, 43, 63, 76, 77, 97, 98, 111, 124, 125, 142, 145, 148, 150, 151, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 167, 181, 453, 524, 527, 844, 849, 850, 891, 909, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1201, 1203, 1219, 1222, 1223, 1226, 1258, 1357, 1360, 1555, 1581, 1711, 1757, 1758, 1759, 1760, 1761, 1968, 1977, 1981, 1982, 1988, 2034, 2037, 2038, 2039], "mandat": [35, 148, 157, 160, 161], "adopt": [35, 43, 144, 154, 162, 1980, 1981, 1986], "continu": [35, 36, 40, 41, 42, 142, 143, 153, 160, 181, 1981], "own": [35, 36, 42, 143, 148, 151, 152, 158, 161, 164, 181, 1968, 1977, 1980, 1981, 1986, 1987], "signatur": [35, 61, 62, 109, 110, 148, 149, 150, 151, 154, 157, 160, 161, 162, 323, 345, 348, 453, 594, 597, 659, 660, 661, 719, 722, 928, 931, 1071, 1078, 1088, 1161, 1164, 1555, 1587, 1588, 1642, 1645, 1911, 1943, 1946, 1978, 1987], "replac": [35, 39, 43, 63, 64, 65, 76, 77, 80, 81, 97, 98, 111, 112, 113, 124, 125, 128, 129, 146, 148, 149, 150, 156, 158, 160, 166, 169, 181, 237, 258, 259, 891, 909, 1135, 1136, 1137, 1138, 1139, 1258, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1711, 1712, 1713, 1714, 1715, 1716, 1821, 1822, 1823, 1824, 1825, 1826, 1988, 2072, 2076], "your": [35, 36, 37, 38, 39, 40, 41, 42, 143, 147, 151, 161, 162, 167, 168, 181, 1969, 1981], "10": [35, 39, 42, 55, 56, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 80, 81, 84, 85, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 146, 147, 148, 150, 159, 160, 164, 166, 167, 237, 267, 269, 271, 272, 275, 277, 278, 279, 280, 281, 453, 464, 465, 466, 467, 468, 499, 500, 502, 504, 505, 507, 519, 520, 521, 522, 523, 539, 540, 541, 542, 543, 569, 572, 589, 592, 619, 622, 629, 630, 631, 632, 633, 679, 682, 704, 705, 707, 734, 735, 736, 737, 738, 739, 741, 742, 743, 779, 780, 782, 799, 802, 804, 805, 807, 809, 810, 812, 814, 818, 834, 836, 837, 838, 854, 857, 858, 876, 877, 878, 879, 880, 891, 892, 894, 902, 903, 904, 907, 910, 928, 929, 930, 931, 932, 943, 945, 947, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 987, 988, 989, 990, 991, 1005, 1008, 1010, 1011, 1012, 1013, 1014, 1038, 1039, 1040, 1042, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1071, 1074, 1076, 1078, 1082, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1114, 1115, 1116, 1117, 1125, 1126, 1127, 1128, 1129, 1145, 1146, 1147, 1148, 1149, 1166, 1167, 1168, 1169, 1170, 1175, 1177, 1179, 1192, 1193, 1201, 1202, 1204, 1237, 1238, 1240, 1258, 1274, 1295, 1298, 1299, 1300, 1303, 1315, 1318, 1320, 1322, 1323, 1324, 1328, 1337, 1347, 1349, 1350, 1351, 1352, 1355, 1356, 1391, 1392, 1393, 1394, 1395, 1401, 1407, 1409, 1410, 1411, 1442, 1451, 1468, 1469, 1470, 1471, 1489, 1491, 1493, 1494, 1495, 1528, 1529, 1531, 1555, 1566, 1567, 1569, 1576, 1579, 1597, 1600, 1607, 1610, 1612, 1615, 1627, 1630, 1652, 1656, 1657, 1661, 1662, 1665, 1711, 1732, 1735, 1757, 1760, 1762, 1764, 1766, 1767, 1770, 1782, 1783, 1785, 1786, 1796, 1803, 1805, 1808, 1816, 1817, 1819, 1820, 1821, 1822, 1825, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1841, 1848, 1864, 1867, 1874, 1875, 1877, 1879, 1895, 1901, 1904, 1911, 1912, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1929, 1934, 1937, 1938, 1940, 1942, 1947, 1951, 1952, 1955, 1956, 1986, 2025, 2027, 2072, 2075, 2077, 2080, 2081, 2090, 2095], "100": [35, 36, 55, 56, 63, 103, 104, 109, 110, 111, 112, 113, 160, 167, 168, 169, 181, 237, 277, 278, 279, 280, 281, 453, 519, 522, 739, 741, 742, 743, 844, 849, 850, 891, 904, 909, 1005, 1008, 1135, 1136, 1137, 1138, 1139, 1219, 1222, 1223, 1226, 1258, 1320, 1322, 1323, 1324, 1352, 1355, 1356, 1391, 1393, 1394, 1555, 1597, 1600, 1796, 1803, 1969], "despit": [35, 146, 148, 149, 159, 162, 164, 1978, 1981], "distinct": [35, 42, 146, 151, 157, 158, 163, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1969, 1981], "still": [35, 41, 43, 97, 98, 148, 151, 157, 158, 160, 162, 168, 181, 1555, 1652, 1656, 1969, 1978, 1981, 1987], "believ": [35, 43], "share": [35, 97, 98, 145, 146, 150, 155, 159, 160, 162, 164, 323, 412, 1979, 1980, 1987, 2019, 2022, 2072, 2074, 2080, 2081, 2086, 2087], "bring": [35, 143, 160, 164, 165, 1968], "benefit": [35, 36, 42, 144, 146, 157, 162, 166, 167, 181, 1979, 1983, 1986], "unrel": [35, 43], "what": [35, 36, 38, 43, 142, 146, 147, 150, 151, 154, 156, 158, 160, 163, 164, 166, 167, 168, 169, 180, 181, 1969, 1977, 1982, 1983, 1986, 2090, 2096], "again": [35, 36, 43, 145, 146, 150, 152, 157, 158, 160, 161, 162, 167, 169, 181, 1555, 1642, 1645, 1986, 1987], "contrari": 35, "bumpi": 35, "road": 35, "allud": [35, 167], "most": [35, 40, 41, 42, 97, 98, 103, 104, 144, 146, 148, 149, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 181, 237, 292, 294, 295, 296, 1555, 1581, 1582, 1585, 1981, 1982, 1984, 1985, 1987, 1988], "technologi": [35, 1979, 1983], "sector": [35, 61, 62, 109, 110, 453, 464, 465, 466, 467, 468, 479, 480, 481, 482, 483, 494, 495, 496, 497, 498], "full": [35, 36, 43, 45, 48, 49, 72, 73, 94, 99, 100, 118, 119, 148, 151, 152, 154, 158, 160, 162, 164, 181, 237, 323, 363, 366, 453, 589, 592, 619, 622, 1258, 1327, 1339, 1397, 1403, 1440, 1444, 1489, 1510, 1512, 1514, 1515, 1518, 1555, 1617, 1618, 1620, 1637, 1640, 1647, 1650, 1652, 1656, 1979, 1981, 1987, 2043, 2059, 2086, 2089], "success": 35, "reason": [35, 41, 43, 143, 144, 146, 148, 150, 155, 157, 158, 161, 162, 164, 166, 453, 714, 717, 1987], "build": [35, 37, 38, 42, 147, 148, 155, 163, 165, 168, 169, 181, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1968, 1969, 1979, 1981, 1983, 1986, 1987, 1988, 2007, 2018, 2019, 2020, 2021], "custom": [35, 147, 152, 159, 160, 168, 1981, 1985, 1986, 1987], "comput": [35, 36, 42, 46, 47, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 88, 89, 95, 96, 97, 98, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 136, 137, 146, 147, 148, 155, 158, 160, 162, 164, 167, 181, 209, 211, 213, 224, 225, 226, 228, 418, 443, 453, 469, 472, 499, 502, 514, 517, 524, 527, 554, 557, 559, 560, 561, 562, 563, 584, 587, 589, 592, 614, 617, 619, 622, 649, 652, 654, 657, 659, 662, 664, 667, 674, 676, 678, 689, 692, 709, 710, 711, 714, 715, 716, 717, 718, 777, 778, 804, 807, 809, 812, 814, 815, 817, 824, 826, 844, 845, 847, 848, 854, 857, 886, 889, 891, 900, 901, 903, 907, 910, 915, 916, 922, 948, 951, 953, 956, 968, 969, 970, 971, 974, 976, 982, 985, 997, 1000, 1025, 1027, 1029, 1031, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1051, 1053, 1055, 1056, 1057, 1058, 1064, 1067, 1069, 1070, 1071, 1081, 1084, 1091, 1094, 1097, 1099, 1102, 1104, 1107, 1109, 1110, 1112, 1114, 1115, 1116, 1117, 1118, 1130, 1133, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1166, 1167, 1168, 1169, 1170, 1201, 1202, 1203, 1204, 1211, 1212, 1213, 1214, 1215, 1247, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1451, 1453, 1456, 1461, 1462, 1463, 1464, 1467, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1494, 1496, 1499, 1501, 1504, 1506, 1508, 1510, 1513, 1515, 1518, 1520, 1521, 1523, 1526, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1555, 1556, 1559, 1561, 1562, 1563, 1564, 1565, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1602, 1605, 1607, 1610, 1637, 1640, 1647, 1650, 1652, 1656, 1680, 1684, 1685, 1686, 1688, 1689, 1695, 1696, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1727, 1730, 1796, 1803, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1968, 1977, 1979, 1981, 1982, 1984, 1985, 1987, 1995, 1996, 2019, 2021, 2022, 2043, 2061, 2062, 2090, 2096], "thank": [35, 167], "interoper": [35, 1978, 1979, 1981, 1984], "compon": [35, 164, 1451, 1480, 1486, 1488, 1977, 1982, 1984], "bio": [35, 42], "hardwar": [35, 42, 45, 48, 49, 162, 1975, 1976, 1977, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987], "initi": [35, 43, 94, 97, 98, 99, 100, 145, 148, 149, 159, 160, 164, 1489, 1540, 1543, 1981, 1987, 1988, 1995, 1996, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2017, 2018, 2019, 2020, 2022, 2025, 2029], "pcie": 35, "interfac": [35, 166, 169, 181, 1968, 1977, 1978, 1979, 1980, 1981, 1985, 1988], "motherboard": 35, "raid": 35, "storag": [35, 167], "virtual": [35, 38, 39, 43, 1984, 1985], "bluetooth": 35, "wireless": 35, "exchang": [35, 40, 1977, 1979], "btx": 35, "form": [35, 37, 50, 51, 52, 53, 54, 55, 56, 66, 67, 72, 73, 97, 98, 120, 121, 155, 160, 162, 168, 169, 237, 242, 243, 244, 287, 290, 305, 307, 309, 310, 312, 314, 844, 846, 881, 884, 978, 980, 992, 995, 1071, 1077, 1083, 1088, 1093, 1161, 1164, 1242, 1246, 1258, 1264, 1422, 1427, 1463, 1464, 1489, 1555, 1556, 1557, 1558, 1559, 1560, 1566, 1569, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1597, 1599, 1600, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1670, 1671, 1672, 1673, 1674, 1796, 1798, 1809, 1981, 1982, 1987, 1997, 2001], "factor": [35, 66, 67, 70, 71, 72, 73, 111, 114, 115, 118, 119, 120, 121, 152, 418, 441, 442, 443, 1104, 1106, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1555, 1556, 1557, 1558, 1559, 1560, 1997, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2025, 2026, 2027, 2028, 2072, 2076, 2080, 2081, 2090, 2091, 2100, 2101, 2102, 2103], "sata": 35, "connect": [35, 42, 168, 169, 1979, 2007, 2017, 2018], "host": [35, 181, 1986], "bu": 35, "adapt": [35, 114, 115, 1451, 1472, 1474, 1475, 2025, 2028], "devic": [35, 43, 45, 48, 49, 55, 56, 60, 63, 80, 81, 97, 98, 103, 104, 108, 111, 112, 113, 128, 129, 142, 145, 148, 152, 155, 156, 159, 160, 161, 162, 164, 169, 181, 237, 239, 240, 241, 242, 243, 244, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 819, 820, 821, 822, 823, 844, 849, 850, 958, 959, 960, 1171, 1172, 1174, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1258, 1265, 1313, 1314, 1320, 1322, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1968, 1975, 1976, 1980, 1981, 1983, 1984, 1985, 1986, 1993, 1994, 1997, 1998, 2001, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2029, 2031, 2032, 2034, 2037, 2038, 2043, 2061, 2062, 2063], "html": [35, 39, 61, 62, 109, 110, 151, 323, 345, 348, 453, 594, 597, 659, 660, 661, 719, 722, 844, 849, 850, 928, 931, 1071, 1078, 1219, 1222, 1223, 1226, 1555, 1587, 1588, 1642, 1645, 1911, 1943, 1946], "enabl": [35, 42, 43, 94, 97, 98, 99, 100, 144, 146, 155, 156, 157, 158, 160, 162, 163, 165, 167, 169, 181, 1451, 1480, 1488, 1968, 1979, 1980, 1981, 1982, 1983, 1984, 1987, 1988], "anyon": [35, 37, 43, 181, 1987], "websit": [35, 143], "tcp": 35, "ip": 35, "node": [35, 97, 98, 112, 113, 146, 158, 1417, 1418, 1420, 1796, 1807, 1808, 1982, 1997, 1998, 2001, 2002, 2005], "commun": [35, 37, 41, 42, 43, 181, 1969, 1980, 1981, 1983], "network": [35, 146, 155, 164, 168, 180, 1489, 1535, 1538, 1969, 1977, 1979, 1980, 1981, 1985, 1987, 1988, 1990, 1995, 1996, 1997, 2005, 2007, 2019, 2020, 2021], "smtp": 35, "possibl": [35, 37, 41, 42, 43, 76, 77, 124, 125, 143, 146, 148, 150, 151, 157, 158, 159, 160, 162, 164, 167, 180, 181, 799, 802, 1071, 1074, 1258, 1382, 1489, 1528, 1531, 1711, 1747, 1748, 1749, 1750, 1751, 1911, 1926, 1929, 1934, 1937, 1979, 1981, 1987], "send": [35, 1986], "gmail": 35, "outlook": 35, "pop": [35, 42], "u": [35, 37, 42, 43, 72, 73, 103, 104, 120, 121, 146, 147, 156, 157, 158, 159, 160, 161, 162, 168, 181, 277, 279, 1555, 1556, 1557, 1558, 1559, 1560, 1587, 1590, 1652, 1656, 1796, 1805], "email": 35, "ieee": [35, 236, 323, 363, 366, 453, 469, 472, 569, 572, 634, 637, 714, 717, 739, 742], "754": [35, 236, 323, 363, 366, 453, 469, 472, 569, 572, 634, 637, 714, 717, 739, 742], "allow": [35, 38, 41, 43, 147, 148, 152, 153, 156, 158, 159, 160, 164, 166, 181, 237, 272, 275, 1258, 1382, 1895, 1901, 1904, 1968, 1979, 1981, 1985, 1986, 1995, 1996, 2019, 2020, 2072, 2075, 2076, 2080, 2081, 2086, 2089, 2090, 2092, 2095, 2100, 2101], "calcul": [35, 41, 61, 62, 63, 74, 75, 88, 89, 94, 97, 98, 99, 100, 109, 110, 111, 122, 123, 136, 137, 151, 164, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 534, 537, 539, 542, 549, 552, 564, 567, 569, 572, 624, 627, 629, 632, 634, 637, 639, 642, 644, 647, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 682, 699, 702, 729, 732, 734, 737, 739, 742, 749, 753, 754, 758, 759, 763, 784, 785, 786, 787, 788, 824, 825, 826, 827, 891, 893, 897, 903, 908, 913, 917, 920, 966, 967, 968, 969, 970, 971, 1010, 1011, 1012, 1013, 1014, 1059, 1062, 1069, 1070, 1071, 1088, 1161, 1164, 1187, 1190, 1555, 1587, 1590, 1642, 1645, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1911, 1926, 1929, 1930, 1933, 1934, 1935, 1937, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1997, 2002, 2005, 2072, 2076, 2081, 2090, 2096], "live": [35, 36, 148, 1977, 1979], "depend": [35, 38, 41, 42, 43, 57, 58, 64, 65, 86, 87, 105, 106, 134, 135, 136, 137, 148, 151, 156, 157, 158, 160, 162, 164, 181, 323, 330, 331, 332, 333, 334, 453, 454, 457, 459, 462, 464, 467, 474, 477, 479, 482, 484, 487, 489, 492, 534, 537, 539, 542, 564, 567, 569, 572, 624, 627, 629, 632, 634, 637, 639, 642, 699, 702, 729, 732, 734, 737, 754, 758, 759, 763, 891, 913, 1187, 1190, 1258, 1417, 1419, 1421, 1555, 1581, 1582, 1585, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1848, 1869, 1873, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1952, 1955, 1979, 1981, 1982], "did": [35, 41, 169, 1987], "aris": [35, 148, 181], "until": [35, 43, 153, 161, 164, 181, 1969, 1988], "substanti": [35, 43, 144, 148, 160, 1981], "innov": 35, "growth": [35, 1984], "usag": [35, 148, 160, 164, 181, 418, 443, 1984], "relev": [35, 41, 42, 43, 55, 56, 103, 104, 146, 147, 148, 150, 159, 160, 167, 237, 277, 278, 279, 280, 281, 1979, 1986, 1987, 2025, 2026, 2027, 2028, 2029, 2030], "area": [35, 61, 62, 109, 110, 157, 179, 453, 464, 465, 466, 467, 468, 479, 480, 481, 482, 483, 494, 495, 496, 497, 498, 1969, 1977], "necess": 35, "parti": [35, 181, 1980, 1981, 1987], "could": [35, 36, 41, 42, 43, 143, 147, 148, 150, 156, 157, 158, 159, 160, 164, 166, 167, 168, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1981, 1986, 1987], "easili": [35, 42, 147, 158, 162, 167, 168, 169, 181, 1969, 1981, 1987, 1988], "engag": [35, 37, 43], "regard": [35, 40, 146, 158, 159, 162], "effect": [35, 41, 55, 56, 66, 67, 88, 89, 114, 115, 136, 137, 144, 146, 151, 154, 157, 162, 181, 237, 282, 283, 285, 1451, 1453, 1456, 1476, 1477, 1478, 1479, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 2072, 2076, 2080, 2081, 2100, 2103], "2015": [35, 1981], "sinc": [35, 42, 43, 63, 111, 143, 146, 147, 157, 158, 181, 891, 1191, 1981, 1987, 2019, 2022], "alongsid": 35, "machin": [35, 42, 72, 73, 120, 121, 143, 155, 180, 323, 363, 366, 374, 377, 1555, 1617, 1618, 1619, 1620, 1621, 1632, 1635, 1968, 1979, 1981, 1983, 1984, 1985, 1986, 1987], "frame": [35, 180, 1981], "less": [35, 43, 45, 48, 49, 61, 62, 63, 72, 73, 80, 81, 88, 89, 94, 99, 100, 109, 110, 111, 120, 121, 128, 129, 146, 148, 150, 152, 154, 157, 158, 160, 162, 163, 164, 453, 459, 462, 464, 467, 474, 477, 489, 492, 529, 532, 618, 624, 627, 629, 632, 634, 637, 639, 642, 699, 702, 714, 717, 724, 727, 739, 742, 854, 855, 856, 857, 858, 891, 912, 1038, 1042, 1182, 1185, 1555, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1685, 1686, 1688, 1689, 1821, 1837, 1838, 1839, 1840, 1841, 1911, 1943, 1946, 1952, 1954, 1956, 1981, 1983], "matur": [35, 181, 1981], "state": [35, 42, 148, 151, 152, 154, 158, 160, 163, 164, 165, 167, 180, 323, 413, 414, 415, 416, 1258, 1326, 1327, 1339, 1406, 1439, 1441, 1442, 1443, 1489, 1540, 1543, 1969, 1987, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2064], "than": [35, 38, 43, 45, 48, 49, 61, 62, 63, 64, 65, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 94, 97, 98, 99, 100, 109, 110, 111, 112, 113, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 136, 137, 143, 146, 147, 148, 150, 152, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 181, 237, 239, 240, 323, 363, 366, 418, 443, 453, 459, 462, 464, 467, 474, 477, 489, 492, 509, 512, 519, 522, 529, 532, 574, 577, 579, 582, 624, 627, 629, 632, 634, 637, 639, 642, 669, 670, 671, 672, 673, 699, 702, 714, 717, 724, 727, 739, 742, 764, 768, 779, 782, 854, 855, 856, 857, 858, 891, 892, 904, 912, 914, 922, 933, 936, 938, 941, 1005, 1008, 1038, 1042, 1044, 1071, 1079, 1080, 1182, 1185, 1216, 1217, 1218, 1258, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1376, 1377, 1378, 1379, 1380, 1555, 1561, 1564, 1602, 1605, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1685, 1686, 1688, 1689, 1711, 1712, 1715, 1732, 1733, 1734, 1735, 1736, 1762, 1765, 1821, 1837, 1838, 1839, 1840, 1841, 1848, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1978, 1979, 1980, 1981, 1987, 1988, 2019, 2021], "preced": [35, 168], "mention": [35, 41, 42, 43, 150, 154, 155, 157, 158, 160, 162, 1981], "aros": 35, "70": [35, 112, 113, 854, 857, 1038, 1042, 1320, 1322, 1391, 1393, 1395, 1555, 1627, 1630, 1911, 1922, 1925], "80": [35, 63, 111, 891, 903, 968, 969, 970, 971, 1053, 1058, 1130, 1131, 1132, 1133, 1134, 1555, 1627, 1630, 1796, 1808, 1911, 1922, 1925], "90": [35, 61, 62, 63, 109, 110, 111, 453, 524, 527, 544, 545, 547, 548, 704, 707, 708, 719, 721, 722, 723, 1071, 1089, 1175, 1176, 1177, 1178, 1179, 1555, 1627, 1630, 1911, 1922, 1925], "effort": [35, 37, 181, 1977, 1981, 1987], "stage": [35, 37, 39, 43, 142, 153, 160, 1969, 1981], "complet": [35, 41, 43, 97, 98, 143, 144, 146, 147, 150, 152, 158, 159, 160, 166, 167, 1555, 1637, 1640, 1979, 2086, 2089], "natur": [35, 72, 73, 120, 121, 144, 150, 152, 159, 180, 453, 564, 567, 624, 627, 634, 637, 719, 722, 1555, 1642, 1643, 1644, 1645, 1646], "like": [35, 39, 41, 42, 43, 55, 56, 63, 76, 77, 103, 104, 111, 124, 125, 142, 143, 146, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 180, 181, 237, 277, 278, 279, 280, 281, 323, 350, 402, 784, 785, 786, 787, 788, 794, 797, 799, 802, 865, 866, 867, 868, 869, 891, 893, 896, 897, 899, 902, 905, 906, 908, 912, 917, 918, 920, 928, 929, 930, 931, 932, 943, 944, 946, 961, 962, 963, 964, 965, 1015, 1018, 1020, 1023, 1059, 1060, 1061, 1062, 1063, 1071, 1073, 1074, 1078, 1125, 1127, 1128, 1129, 1182, 1183, 1184, 1185, 1186, 1192, 1193, 1555, 1581, 1711, 1747, 1748, 1749, 1750, 1751, 1821, 1837, 1840, 1969, 1981, 1986], "certainli": [35, 1987], "mission": [35, 1969, 1983], "creat": [35, 37, 38, 39, 41, 42, 43, 55, 56, 63, 80, 81, 97, 98, 103, 104, 111, 112, 113, 128, 129, 147, 148, 149, 152, 156, 157, 158, 159, 160, 162, 164, 165, 168, 179, 180, 237, 239, 240, 242, 243, 244, 252, 253, 254, 256, 258, 259, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 315, 317, 318, 319, 320, 321, 322, 819, 820, 821, 822, 823, 844, 849, 850, 870, 871, 872, 873, 874, 891, 909, 958, 959, 960, 1071, 1088, 1135, 1136, 1137, 1138, 1139, 1161, 1164, 1171, 1172, 1173, 1174, 1219, 1222, 1223, 1226, 1258, 1320, 1322, 1423, 1426, 1450, 1451, 1487, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1968, 1969, 1981, 1982, 1987, 1993, 1994, 1997, 1998, 2001, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2043, 2048, 2061, 2062], "At": [35, 41, 42, 143, 158, 160, 161, 1981], "process": [35, 36, 37, 39, 42, 43, 146, 147, 155, 158, 159, 160, 162, 164, 169, 418, 438, 452, 1979, 1980, 1981, 1984, 1985, 1987, 1988], "ourselv": [35, 1987], "lead": [35, 36, 94, 97, 98, 99, 100, 150, 181, 1555, 1637, 1640, 1652, 1656, 2090, 2096], "quansight": [35, 1987], "compani": [35, 1977], "made": [35, 38, 41, 43, 63, 76, 77, 111, 143, 146, 147, 152, 157, 158, 161, 164, 166, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 1033, 1036, 1053, 1056, 1071, 1072, 1073, 1767, 1768, 1981], "organ": [35, 144, 146, 155, 158, 161, 1968], "panda": 35, "scipi": [35, 1983, 1988], "conda": [35, 39, 42, 1983], "dask": [35, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894], "apach": [35, 1983, 1987], "mxnet": [35, 1988], "onnx": [35, 1979, 1987], "scikit": 35, "jupyt": [35, 1983], "aw": 35, "cupi": [35, 1981, 1988], "net": [35, 36, 164, 169], "sympi": 35, "rai": [35, 453, 489, 492], "modin": 35, "spyder": 35, "includ": [35, 41, 43, 55, 56, 63, 64, 65, 82, 83, 88, 89, 90, 91, 97, 98, 103, 104, 109, 110, 111, 112, 113, 120, 121, 130, 131, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 180, 181, 237, 239, 240, 242, 243, 244, 272, 275, 277, 278, 279, 280, 281, 287, 290, 839, 841, 843, 844, 849, 850, 865, 867, 869, 870, 872, 874, 876, 878, 880, 886, 888, 890, 891, 907, 917, 919, 921, 923, 925, 927, 933, 935, 937, 938, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 957, 961, 963, 965, 974, 975, 977, 978, 981, 982, 984, 986, 987, 989, 991, 997, 999, 1001, 1015, 1017, 1019, 1020, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1037, 1048, 1049, 1051, 1059, 1061, 1063, 1114, 1116, 1118, 1120, 1122, 1124, 1135, 1137, 1139, 1140, 1142, 1144, 1145, 1147, 1155, 1157, 1159, 1166, 1168, 1170, 1182, 1184, 1186, 1219, 1222, 1223, 1226, 1227, 1228, 1230, 1233, 1234, 1235, 1237, 1238, 1240, 1247, 1248, 1250, 1252, 1253, 1255, 1258, 1341, 1342, 1343, 1344, 1345, 1445, 1446, 1447, 1448, 1449, 1555, 1675, 1676, 1678, 1685, 1686, 1688, 1689, 1796, 1797, 1821, 1837, 1840, 1848, 1854, 1855, 1856, 1857, 1858, 1911, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1972, 1974, 1978, 1979, 1981, 1983, 1986, 1987, 1988, 1997, 2005, 2007, 2017, 2018, 2023, 2024, 2043, 2061, 2072, 2076, 2080, 2081, 2100, 2101, 2102, 2103], "member": [35, 41, 43, 158], "googl": [35, 1969], "octoml": [35, 1987], "einop": [35, 64, 65, 112, 113, 1258, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304], "further": [35, 36, 39, 43, 143, 144, 147, 150, 152, 158, 160, 163, 164, 167, 168, 1969, 1986, 1987, 2090, 2096], "sponsor": 35, "lg": 35, "electron": 35, "microsoft": [35, 1981, 1986, 1988], "d": [35, 36, 37, 42, 63, 70, 71, 72, 73, 103, 104, 111, 118, 119, 120, 121, 142, 146, 160, 167, 277, 279, 323, 403, 406, 799, 800, 801, 802, 803, 804, 807, 809, 812, 814, 815, 816, 817, 818, 828, 829, 831, 844, 849, 850, 860, 863, 922, 933, 934, 935, 936, 937, 1038, 1039, 1040, 1041, 1044, 1045, 1046, 1047, 1053, 1054, 1058, 1071, 1074, 1079, 1099, 1102, 1104, 1107, 1109, 1110, 1111, 1112, 1113, 1130, 1133, 1206, 1207, 1209, 1219, 1222, 1223, 1226, 1489, 1491, 1493, 1494, 1495, 1496, 1499, 1501, 1504, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1555, 1571, 1574, 1576, 1579, 1607, 1608, 1609, 1610, 1611, 1627, 1630, 1675, 1676, 1677, 1678, 1679, 1796, 1800, 1804, 1805, 1806, 1814, 1815, 1969, 1977], "shaw": 35, "co": [35, 40, 61, 62, 64, 65, 109, 110, 148, 164, 180, 453, 538, 1258, 1308, 1309, 1311, 1969], "intel": [35, 1979, 1986], "togeth": [35, 97, 98, 144, 146, 153, 158, 161, 162, 168, 169, 181, 779, 782, 891, 892, 904, 1005, 1008, 1979, 1981, 1982, 1987, 2031, 2032], "major": [35, 148, 149, 159, 160, 181, 1848, 1864, 1867, 1978, 1981], "involv": [35, 37, 39, 57, 58, 105, 106, 142, 147, 148, 150, 162, 169, 323, 403, 404, 405, 406, 407, 453, 469, 472, 1981, 1987], "anoth": [35, 41, 42, 43, 146, 148, 152, 155, 156, 157, 158, 159, 160, 162, 164, 166, 169, 237, 261, 264, 323, 335, 338, 345, 348, 1968, 1981, 1987], "promis": 35, "sign": [35, 42, 61, 62, 63, 72, 73, 109, 110, 111, 120, 121, 164, 169, 237, 239, 240, 453, 454, 457, 469, 472, 489, 492, 519, 522, 714, 715, 716, 717, 718, 728, 834, 835, 836, 837, 838, 891, 894, 1555, 1642, 1643, 1644, 1645, 1646, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951], "pursuit": 35, "unif": [35, 37, 166, 1977, 1987], "clearli": [35, 41, 43, 150, 159, 160, 1985], "lot": [35, 36, 147, 148, 156, 160, 181, 1980], "thought": [35, 42, 43, 154, 1979], "care": [35, 43, 158, 162, 169, 2019, 2022], "attent": [35, 43, 70, 71, 118, 119, 144, 1489, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 2007, 2018], "gone": [35, 163], "simplifi": [35, 152, 158, 164, 165, 168, 1977, 1979, 1980, 1981, 1984, 1987, 1988], "compat": [35, 45, 48, 49, 61, 62, 72, 73, 76, 77, 82, 83, 88, 89, 90, 91, 94, 99, 100, 109, 110, 120, 121, 124, 125, 130, 131, 136, 137, 138, 139, 145, 154, 158, 159, 161, 164, 181, 323, 340, 343, 453, 469, 470, 471, 472, 473, 489, 490, 491, 492, 493, 499, 500, 501, 502, 503, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 593, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 679, 680, 681, 682, 683, 689, 690, 691, 692, 693, 699, 700, 701, 702, 703, 714, 715, 716, 717, 718, 749, 750, 751, 752, 753, 769, 770, 771, 772, 773, 1555, 1561, 1562, 1563, 1565, 1617, 1618, 1619, 1620, 1621, 1632, 1635, 1647, 1650, 1662, 1665, 1680, 1684, 1685, 1686, 1688, 1689, 1711, 1747, 1748, 1749, 1750, 1751, 1848, 1854, 1855, 1856, 1857, 1858, 1911, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969], "excit": [35, 37, 142, 1969], "complianc": 35, "hope": [35, 181, 1987], "due": [35, 38, 42, 143, 147, 152, 157, 158, 453, 719, 722, 1981], "suit": [35, 42, 142, 143, 147, 160, 167, 180, 1968, 1981, 1987], "some": [35, 36, 41, 42, 43, 97, 98, 114, 115, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 180, 181, 418, 420, 453, 569, 572, 634, 637, 875, 1038, 1043, 1451, 1453, 1456, 1457, 1459, 1460, 1463, 1466, 1468, 1470, 1471, 1472, 1474, 1475, 1476, 1478, 1479, 1796, 1808, 1968, 1969, 1977, 1978, 1980, 1981, 1982, 1987, 1988, 2007, 2015], "motiv": [35, 166], "great": [35, 36, 43, 160, 164, 166, 1987], "convinc": 35, "celebr": 35, "encourag": [35, 180, 181], "foundat": [35, 1984], "mai": [36, 40, 41, 42, 43, 45, 48, 49, 59, 60, 61, 62, 63, 84, 85, 86, 87, 94, 99, 100, 107, 108, 109, 110, 120, 121, 134, 135, 143, 146, 148, 157, 158, 159, 160, 165, 166, 168, 237, 239, 240, 261, 264, 418, 444, 445, 446, 447, 448, 453, 554, 555, 556, 557, 558, 589, 592, 619, 622, 654, 657, 659, 662, 689, 690, 691, 693, 891, 909, 1135, 1136, 1138, 1258, 1287, 1289, 1555, 1642, 1645, 1685, 1686, 1688, 1689, 1874, 1875, 1877, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1943, 1946, 1988, 2072, 2081], "ask": [36, 41, 42, 150, 164, 166, 181], "perfectli": [36, 2090, 2096], "happi": [36, 42, 181], "abund": 36, "better": [36, 38, 142, 158, 159, 161, 162, 163, 166, 167, 168, 1984], "ll": [36, 37, 42, 43, 150, 157, 167], "give": [36, 38, 42, 43, 142, 145, 147, 150, 151, 154, 160, 323, 402, 1711, 1747, 1750, 1981, 1985, 1995, 1996, 1997, 2002], "two": [36, 41, 42, 45, 48, 49, 55, 56, 63, 72, 73, 94, 99, 100, 111, 120, 121, 143, 144, 148, 150, 151, 158, 159, 160, 162, 163, 167, 169, 237, 239, 240, 258, 259, 282, 285, 305, 307, 309, 310, 312, 314, 323, 401, 412, 453, 519, 522, 719, 722, 779, 780, 782, 794, 797, 844, 849, 850, 860, 863, 886, 889, 891, 892, 900, 901, 904, 948, 951, 953, 956, 1005, 1008, 1053, 1054, 1055, 1058, 1071, 1073, 1088, 1089, 1091, 1130, 1133, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1175, 1176, 1177, 1178, 1179, 1201, 1204, 1211, 1212, 1213, 1214, 1215, 1219, 1222, 1223, 1226, 1258, 1266, 1268, 1555, 1556, 1557, 1558, 1559, 1560, 1566, 1569, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1711, 1772, 1776, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1969, 1978, 1986, 2072, 2075, 2090, 2093, 2094], "streamlin": [36, 1984], "workflow": [36, 41, 43, 145, 147, 148, 158, 167, 179, 1968, 1969, 1980, 1987, 1988], "save": [36, 38, 97, 98, 153, 160, 181, 418, 420, 1258, 1340, 1404, 1980, 2019, 2020], "week": [36, 43, 1969], "let": [36, 38, 64, 65, 88, 89, 112, 113, 146, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 1258, 1315, 1316, 1317, 1318, 1319, 1911, 1930, 1931, 1933, 1943, 1946, 1947, 1951, 1952, 1954, 1956, 1969, 1988], "sai": [36, 42, 156, 166], "deepmind": 36, "releas": [36, 41, 42, 43, 148, 158, 161, 162, 181, 1969, 1981, 1987], "awesom": 36, "paper": 36, "love": 36, "choic": [36, 42, 88, 89, 136, 137, 157, 158, 167, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 1981], "perceiverio": 36, "happen": [36, 42, 43, 160, 167, 891, 914, 1216, 1218], "slew": 36, "rush": 36, "f": [36, 37, 39, 43, 63, 76, 77, 111, 124, 125, 142, 146, 153, 164, 167, 928, 929, 930, 931, 932, 1071, 1078, 1258, 1346, 1362, 1711, 1747, 1748, 1749, 1750, 1751, 1796, 1800, 1804, 1805, 1806, 1814, 1815, 1977], "g": [36, 37, 41, 42, 63, 80, 81, 128, 129, 142, 143, 146, 158, 160, 164, 181, 323, 329, 403, 406, 418, 421, 819, 822, 870, 871, 873, 1171, 1172, 1173, 1796, 1800, 1804, 1806, 1814, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1911, 1912, 1915, 1917, 1920, 1926, 1929, 1934, 1937, 1938, 1941, 1947, 1951, 1968, 1977, 1997, 2001, 2019, 2021], "inevit": [36, 1982], "deviat": [36, 78, 79, 80, 81, 88, 89, 126, 127, 128, 129, 136, 137, 143, 1816, 1817, 1818, 1819, 1820, 1821, 1832, 1833, 1834, 1835, 1836, 1911, 1943, 1944, 1945, 1946, 1997, 2002, 2023, 2024, 2090, 2094], "often": [36, 40, 143, 152, 153, 154, 155, 158, 160, 181, 1982, 1985, 1988], "erron": 36, "train": [36, 66, 67, 70, 71, 114, 115, 118, 119, 146, 149, 155, 167, 168, 169, 179, 180, 181, 875, 1038, 1043, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1489, 1528, 1531, 1968, 1969, 1979, 1980, 1985, 1987, 1988, 1997, 2002, 2005, 2019, 2021, 2022], "poor": 36, "converg": 36, "perform": [36, 55, 56, 66, 67, 70, 71, 88, 89, 90, 91, 103, 104, 112, 113, 118, 119, 120, 121, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 181, 196, 209, 212, 224, 227, 237, 272, 275, 277, 278, 279, 280, 281, 453, 769, 773, 865, 868, 875, 891, 896, 922, 1038, 1043, 1044, 1258, 1290, 1293, 1295, 1298, 1299, 1300, 1303, 1304, 1347, 1350, 1352, 1355, 1357, 1360, 1396, 1403, 1463, 1464, 1489, 1528, 1529, 1530, 1531, 1532, 1540, 1543, 1555, 1652, 1656, 1685, 1686, 1688, 1689, 1792, 1793, 1794, 1795, 1796, 1804, 1805, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1978, 1981, 1982, 1983, 1984, 1985, 1986, 1988, 2019, 2022, 2034, 2041], "issu": [36, 37, 40, 41, 143, 145, 147, 148, 150, 152, 158, 160, 164, 168, 181, 1997, 2005], "etc": [36, 41, 42, 43, 55, 56, 80, 81, 92, 93, 103, 104, 112, 113, 128, 129, 140, 141, 143, 144, 146, 148, 150, 152, 154, 158, 159, 160, 161, 164, 166, 167, 181, 237, 272, 275, 277, 278, 279, 280, 281, 292, 293, 295, 819, 822, 958, 960, 1171, 1172, 1174, 1320, 1322, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1968, 1979, 1981, 1987, 1997, 1998, 2001, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2029, 2031, 2032, 2072, 2076, 2080, 2081, 2100, 2101, 2102, 2103], "publish": [36, 181], "manag": [36, 37, 157, 181, 1983, 1985], "get": [36, 37, 40, 41, 42, 45, 48, 49, 59, 60, 97, 98, 107, 108, 120, 121, 142, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 196, 323, 358, 360, 362, 363, 366, 374, 377, 418, 424, 425, 426, 427, 428, 430, 433, 438, 442, 449, 452, 1258, 1265, 1325, 1326, 1327, 1329, 1330, 1331, 1337, 1339, 1340, 1385, 1406, 1555, 1685, 1686, 1688, 1689, 1796, 1799, 1968, 1981, 1987, 1995, 1996, 1997, 2001, 2007, 2016], "work": [36, 40, 41, 42, 43, 63, 111, 142, 143, 146, 147, 148, 149, 150, 152, 158, 159, 160, 161, 163, 164, 166, 168, 169, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1796, 1804, 1805, 1809, 1814, 1815, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988], "repositori": [36, 38, 39, 42, 43, 142, 143, 147, 153], "pull": [36, 37, 38, 39, 41, 42, 143, 150, 161, 162, 181], "request": [36, 37, 41, 150, 161, 162, 418, 435], "confus": [36, 148, 152, 157, 162, 1968], "do": [36, 41, 42, 43, 63, 64, 65, 97, 98, 111, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 181, 453, 714, 717, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1258, 1357, 1358, 1360, 1796, 1797, 1804, 1807, 1808, 1809, 1814, 1968, 1982, 1987, 1988], "don": [36, 41, 42, 43, 92, 93, 140, 141, 147, 148, 159, 160, 168, 181], "expect": [36, 43, 143, 148, 152, 159, 160, 181, 323, 402, 1258, 1265, 1969, 1995, 1996, 1997, 2002, 2005, 2019, 2020], "codebas": [36, 37, 142, 148, 157, 158, 160, 161, 163, 418, 441, 442, 1969], "total": [36, 37, 43, 63, 88, 89, 94, 97, 98, 99, 100, 111, 136, 137, 148, 149, 150, 152, 160, 162, 167, 168, 181, 418, 449, 839, 840, 841, 842, 843, 891, 895, 1848, 1864, 1867, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956], "hour": [36, 147], "spent": 36, "spin": 36, "off": [36, 42, 163, 1555, 1576, 1579, 1670, 1674, 1987, 1997, 2005], "test": [36, 40, 41, 61, 62, 63, 90, 91, 109, 110, 111, 138, 139, 142, 148, 150, 152, 153, 156, 158, 161, 181, 323, 381, 384, 391, 394, 453, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 875, 891, 905, 906, 966, 967, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1020, 1023, 1038, 1043, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1981, 2034, 2035, 2040, 2041, 2048, 2059, 2060, 2061, 2062, 2064, 2065, 2086, 2089], "discuss": [36, 42, 43, 148, 149, 157, 158, 160, 162, 165, 166, 167, 181, 1969, 1977, 1982], "error": [36, 40, 42, 43, 61, 62, 97, 98, 109, 110, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 158, 160, 161, 166, 181, 196, 198, 201, 453, 559, 560, 561, 562, 563, 1555, 1642, 1645, 1657, 1661, 1911, 1926, 1929, 1934, 1937, 1981, 2019, 2020, 2025, 2029, 2090, 2096], "iter": [36, 50, 51, 52, 53, 54, 64, 65, 92, 93, 94, 97, 98, 99, 100, 112, 113, 140, 141, 146, 164, 167, 234, 235, 418, 443, 1071, 1086, 1087, 1088, 1152, 1153, 1161, 1164, 1258, 1259, 1260, 1261, 1262, 1263, 1382, 1711, 1722, 1725, 1742, 1745, 1777, 1781, 1787, 1791, 1796, 1797, 1798, 1799, 1800, 1802, 1803, 1805, 1806, 1807, 1808, 1809, 1812, 1813, 1815], "address": [36, 41, 43, 143, 144, 164, 1258, 1428, 1432, 1977, 1979, 1981, 1987], "sake": 36, "singl": [36, 41, 42, 43, 63, 80, 81, 97, 98, 109, 110, 128, 129, 143, 146, 147, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 181, 819, 822, 891, 904, 914, 1005, 1008, 1053, 1058, 1130, 1133, 1171, 1172, 1216, 1217, 1218, 1258, 1433, 1437, 1445, 1449, 1451, 1461, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1874, 1875, 1879, 2019, 2021, 2072, 2080, 2081], "multipl": [36, 43, 63, 78, 79, 88, 89, 90, 91, 97, 98, 109, 110, 111, 112, 113, 114, 115, 120, 121, 124, 125, 126, 127, 136, 137, 138, 139, 145, 146, 150, 152, 155, 157, 158, 160, 162, 164, 181, 453, 469, 473, 499, 503, 514, 518, 519, 522, 523, 644, 647, 664, 668, 669, 672, 674, 676, 677, 678, 854, 857, 858, 876, 879, 891, 907, 978, 981, 987, 990, 1038, 1042, 1048, 1049, 1050, 1051, 1052, 1053, 1058, 1071, 1076, 1082, 1092, 1130, 1133, 1134, 1237, 1241, 1258, 1259, 1261, 1262, 1263, 1382, 1451, 1453, 1455, 1456, 1463, 1465, 1466, 1468, 1470, 1471, 1476, 1478, 1479, 1481, 1482, 1484, 1485, 1489, 1501, 1504, 1510, 1513, 1555, 1556, 1559, 1560, 1561, 1565, 1597, 1599, 1600, 1602, 1604, 1606, 1607, 1610, 1711, 1712, 1715, 1716, 1727, 1730, 1731, 1752, 1755, 1756, 1757, 1760, 1816, 1817, 1818, 1819, 1820, 1848, 1849, 1852, 1854, 1857, 1911, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1979, 1980, 1981, 1988, 2007, 2017], "line": [36, 42, 143, 144, 147, 150, 152, 153, 156, 160, 162, 165, 166, 167, 168, 179, 1969, 1984], "convert": [36, 41, 50, 51, 52, 53, 54, 55, 56, 61, 62, 101, 102, 109, 110, 144, 156, 160, 164, 181, 182, 194, 237, 242, 243, 244, 287, 290, 323, 328, 329, 418, 421, 422, 423, 424, 438, 449, 452, 453, 544, 545, 546, 547, 548, 704, 705, 706, 707, 708, 789, 792, 794, 797, 799, 802, 1071, 1072, 1073, 1074, 1201, 1205, 1227, 1231, 1258, 1396, 1422, 1427, 1428, 1432, 1433, 1437, 1439, 1555, 1690, 1694, 1796, 1798, 1809, 1810, 1968, 1979, 1980, 1987, 1994, 2019, 2020, 2043, 2047], "directli": [36, 43, 143, 144, 146, 147, 148, 149, 151, 155, 156, 157, 158, 159, 161, 162, 164, 166, 168, 169, 180, 181, 1796, 1809, 1985, 1986, 1987, 2019, 2021], "graph": [36, 66, 67, 146, 155, 158, 162, 165, 181, 1463, 1464, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1968, 1977, 1981, 1984, 1995, 1996, 2019, 2020, 2021], "guarante": [36, 144, 181, 1874, 1875, 1879, 1885, 1889], "turn": [36, 42, 146, 150, 158, 160], "4": [36, 39, 41, 42, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 145, 146, 147, 150, 160, 164, 166, 167, 168, 169, 196, 198, 201, 204, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 224, 227, 229, 231, 233, 237, 249, 251, 258, 259, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 285, 300, 303, 318, 322, 323, 335, 336, 337, 338, 339, 340, 342, 343, 345, 347, 348, 349, 358, 359, 360, 363, 366, 386, 388, 389, 390, 391, 394, 403, 406, 407, 418, 425, 426, 427, 428, 429, 430, 437, 441, 444, 445, 446, 447, 453, 454, 456, 457, 458, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 487, 489, 490, 491, 492, 493, 499, 502, 503, 504, 506, 508, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 527, 529, 531, 532, 533, 534, 537, 539, 542, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 563, 569, 571, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 599, 601, 602, 603, 604, 606, 607, 608, 609, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 627, 629, 630, 632, 634, 636, 637, 638, 644, 645, 646, 647, 648, 664, 667, 669, 671, 672, 673, 674, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 702, 704, 707, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 729, 731, 732, 733, 734, 737, 739, 740, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 784, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 824, 826, 839, 840, 841, 842, 843, 844, 846, 849, 850, 854, 855, 856, 857, 858, 860, 863, 865, 866, 867, 868, 869, 870, 872, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 888, 889, 890, 891, 895, 896, 897, 899, 900, 901, 902, 903, 907, 908, 910, 913, 914, 917, 918, 919, 920, 921, 922, 928, 929, 930, 931, 932, 933, 935, 937, 938, 940, 942, 943, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 961, 962, 964, 966, 967, 968, 969, 970, 971, 978, 980, 987, 988, 989, 990, 991, 992, 994, 995, 997, 998, 999, 1000, 1001, 1005, 1006, 1010, 1011, 1012, 1013, 1014, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1175, 1176, 1177, 1178, 1179, 1187, 1189, 1190, 1191, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1237, 1238, 1239, 1240, 1241, 1242, 1245, 1246, 1258, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1287, 1289, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1308, 1309, 1310, 1311, 1312, 1315, 1317, 1318, 1319, 1320, 1323, 1328, 1341, 1344, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1410, 1411, 1417, 1419, 1423, 1426, 1438, 1450, 1451, 1453, 1455, 1456, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1476, 1477, 1478, 1479, 1481, 1482, 1484, 1485, 1487, 1489, 1491, 1492, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1520, 1521, 1523, 1526, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1559, 1566, 1567, 1569, 1571, 1572, 1573, 1574, 1576, 1579, 1587, 1589, 1590, 1591, 1597, 1598, 1599, 1600, 1602, 1603, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1620, 1622, 1624, 1625, 1626, 1627, 1630, 1632, 1633, 1634, 1635, 1636, 1642, 1643, 1644, 1645, 1646, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1695, 1706, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1762, 1765, 1767, 1769, 1770, 1771, 1772, 1776, 1777, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1796, 1798, 1800, 1803, 1804, 1805, 1806, 1808, 1814, 1815, 1816, 1817, 1819, 1820, 1821, 1822, 1825, 1827, 1829, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1895, 1896, 1899, 1901, 1904, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1957, 1958, 1959, 1961, 1963, 1964, 1966, 1969, 1981, 1987, 1988, 1997, 2005, 2025, 2026, 2027, 2028, 2030, 2043, 2061, 2072, 2074, 2076, 2080, 2081, 2084, 2086, 2087, 2100, 2101, 2103], "step": [36, 38, 39, 41, 42, 43, 63, 66, 67, 103, 104, 111, 114, 115, 144, 145, 146, 148, 149, 150, 158, 160, 164, 167, 168, 169, 180, 237, 239, 240, 241, 272, 275, 982, 983, 984, 985, 986, 1071, 1081, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1792, 1793, 1794, 1795, 1969, 1981, 1995, 1996, 2025, 2026, 2027, 2028, 2029, 2030], "take": [36, 37, 41, 42, 43, 63, 76, 77, 88, 89, 111, 124, 125, 143, 146, 147, 148, 149, 150, 151, 157, 158, 159, 160, 162, 164, 166, 168, 169, 181, 237, 292, 295, 453, 524, 527, 809, 811, 813, 922, 928, 929, 930, 931, 932, 1038, 1044, 1071, 1078, 1090, 1104, 1106, 1108, 1206, 1210, 1711, 1747, 1748, 1749, 1750, 1751, 1912, 1913, 1969, 1978, 1979, 1987, 1997, 2002, 2019, 2022, 2072, 2075, 2116, 2121], "few": [36, 40, 41, 43, 146, 148, 149, 154, 155, 157, 160, 162, 164, 165, 166, 167, 168, 179, 1969, 1981, 1983], "second": [36, 42, 45, 48, 49, 61, 62, 63, 66, 67, 72, 73, 84, 85, 94, 99, 100, 109, 110, 111, 114, 115, 120, 121, 132, 133, 143, 148, 150, 157, 158, 160, 166, 323, 401, 412, 453, 469, 470, 471, 472, 473, 489, 490, 491, 493, 499, 500, 501, 502, 503, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 554, 555, 557, 579, 582, 584, 585, 589, 590, 592, 614, 615, 617, 619, 620, 622, 644, 645, 647, 649, 650, 652, 659, 660, 662, 664, 665, 667, 679, 680, 681, 682, 689, 690, 692, 699, 700, 702, 749, 750, 751, 752, 753, 779, 780, 781, 782, 783, 819, 820, 844, 849, 850, 886, 889, 891, 892, 900, 901, 902, 903, 904, 907, 908, 911, 915, 916, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 961, 962, 963, 964, 965, 968, 969, 970, 971, 1005, 1006, 1007, 1008, 1009, 1033, 1036, 1037, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1071, 1089, 1155, 1156, 1157, 1158, 1159, 1175, 1178, 1219, 1222, 1223, 1226, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1266, 1268, 1337, 1401, 1442, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1555, 1561, 1562, 1563, 1564, 1565, 1576, 1579, 1581, 1582, 1585, 1592, 1595, 1602, 1604, 1605, 1606, 1627, 1630, 1637, 1640, 1642, 1645, 1652, 1656, 1662, 1665, 1680, 1684, 1711, 1767, 1770, 1772, 1776, 1792, 1794, 1796, 1798, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1986, 2025, 2026, 2027], "automat": [36, 41, 42, 43, 142, 146, 147, 148, 153, 155, 162, 163, 165, 168, 169, 1968, 1969, 1981, 1984, 1988], "convers": [36, 41, 51, 52, 53, 54, 61, 62, 102, 156, 163, 165, 169, 180, 181, 544, 545, 704, 705, 1258, 1396, 1403, 1968, 1969, 1980, 1987], "everyon": [36, 37, 43, 181], "regardless": [36, 37, 97, 98, 148, 166, 169, 234, 235], "wouldn": 36, "nice": [36, 160, 1981], "write": [36, 39, 40, 41, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 145, 147, 148, 150, 151, 155, 157, 158, 159, 161, 164, 166, 169, 196, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 340, 343, 418, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 784, 785, 786, 787, 788, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 854, 855, 856, 857, 858, 860, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 891, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 905, 906, 907, 908, 909, 912, 913, 914, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1001, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1069, 1070, 1071, 1076, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1089, 1091, 1092, 1094, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1290, 1291, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1357, 1359, 1361, 1363, 1367, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1647, 1650, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1787, 1791, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1854, 1856, 1858, 1859, 1860, 1862, 1869, 1870, 1871, 1872, 1873, 1874, 1890, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1913, 1915, 1917, 1920, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1981, 1988, 2064, 2065], "onc": [36, 41, 42, 43, 80, 81, 128, 129, 146, 147, 148, 149, 150, 158, 160, 162, 164, 167, 181, 418, 443, 1555, 1581, 1582, 1585, 1587, 1590, 1652, 1656, 1821, 1822, 1823, 1824, 1825, 1826], "know": [36, 43, 159, 160, 161, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1982], "among": [36, 97, 98, 160, 162, 1981], "frantic": 36, "port": [36, 2043, 2058], "lucid": 36, "honk": 36, "improv": [36, 43, 148, 154, 155, 162, 164, 1968, 1979, 1981, 1983, 1984], "understand": [36, 38, 39, 40, 41, 42, 43, 142, 143, 150, 151, 154, 159, 162, 163, 1977, 1987], "pattern": [36, 64, 65, 112, 113, 148, 151, 1258, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304], "hasn": 36, "chang": [36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 145, 146, 147, 148, 150, 151, 158, 160, 161, 162, 164, 168, 181, 198, 199, 200, 202, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 233, 242, 243, 249, 250, 253, 254, 261, 262, 267, 268, 269, 271, 277, 278, 279, 281, 282, 283, 287, 288, 292, 293, 294, 296, 300, 301, 302, 304, 305, 307, 310, 312, 318, 319, 320, 321, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 386, 388, 403, 404, 405, 407, 425, 426, 427, 429, 444, 445, 446, 447, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 819, 820, 821, 823, 824, 825, 827, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 843, 854, 855, 856, 858, 860, 861, 862, 865, 866, 867, 869, 870, 871, 872, 874, 876, 877, 878, 880, 881, 882, 883, 885, 886, 888, 890, 891, 894, 917, 918, 919, 921, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 944, 945, 947, 948, 949, 950, 952, 953, 954, 955, 957, 958, 959, 961, 962, 963, 965, 974, 975, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1048, 1049, 1050, 1052, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1071, 1078, 1094, 1095, 1096, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1170, 1175, 1176, 1177, 1179, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1191, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1217, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1259, 1260, 1261, 1263, 1266, 1267, 1269, 1270, 1271, 1273, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1287, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1305, 1306, 1308, 1309, 1310, 1312, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1332, 1333, 1334, 1336, 1341, 1342, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1386, 1387, 1388, 1390, 1391, 1393, 1395, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1445, 1446, 1447, 1448, 1453, 1454, 1455, 1457, 1458, 1463, 1464, 1465, 1468, 1469, 1472, 1473, 1476, 1477, 1481, 1482, 1483, 1484, 1491, 1492, 1493, 1495, 1501, 1502, 1503, 1505, 1510, 1511, 1512, 1514, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1532, 1535, 1536, 1537, 1539, 1550, 1551, 1552, 1554, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1565, 1571, 1572, 1573, 1587, 1588, 1589, 1591, 1597, 1598, 1599, 1602, 1604, 1606, 1607, 1608, 1609, 1611, 1632, 1634, 1636, 1642, 1643, 1644, 1646, 1675, 1676, 1685, 1686, 1688, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1796, 1798, 1809, 1814, 1817, 1818, 1819, 1822, 1823, 1824, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1841, 1843, 1844, 1845, 1847, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1932, 1934, 1936, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1952, 1953, 1954, 1955, 1958, 1959, 1960, 1962, 1963, 1964, 1965, 1967, 1969, 1984, 1987, 2043, 2046], "now": [36, 39, 42, 143, 145, 146, 147, 148, 153, 154, 156, 158, 159, 160, 161, 162, 166, 167, 169, 180, 181, 237, 258, 259, 300, 303, 318, 322, 1981, 2007, 2018, 2019, 2020], "spend": [36, 1981], "torchvis": 36, "probabl": [36, 70, 71, 80, 81, 118, 119, 128, 129, 160, 875, 1038, 1043, 1489, 1528, 1529, 1530, 1531, 1532, 1821, 1822, 1823, 1824, 1825, 1826, 1997, 2005, 2007, 2015, 2090, 2096], "sonnet": 36, "about": [36, 40, 41, 42, 43, 143, 147, 148, 154, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 181, 323, 363, 366, 374, 377, 1982, 1983, 1986], "next": [36, 38, 41, 42, 43, 63, 111, 145, 150, 151, 156, 158, 161, 165, 166, 167, 323, 363, 366, 891, 911, 915, 1155, 1156, 1157, 1158, 1159, 1247, 1248, 1249, 1250, 1251, 1969, 1981, 1983, 1997, 1998, 2001, 2002, 2005, 2019, 2020, 2025, 2026, 2027, 2028, 2029, 2030], "everyth": [36, 41, 43, 150, 158, 159, 160, 161, 165, 181], "zero": [36, 45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 66, 67, 70, 71, 72, 73, 76, 77, 82, 83, 88, 89, 90, 91, 94, 99, 100, 103, 104, 105, 106, 109, 110, 111, 114, 115, 118, 119, 120, 121, 128, 129, 130, 131, 136, 137, 138, 139, 144, 146, 148, 149, 150, 154, 156, 159, 164, 167, 168, 196, 204, 207, 214, 217, 237, 249, 251, 252, 258, 259, 282, 283, 285, 292, 293, 294, 295, 296, 300, 303, 305, 307, 309, 310, 312, 314, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 338, 453, 459, 462, 464, 467, 469, 472, 474, 475, 476, 477, 478, 479, 482, 484, 487, 489, 490, 492, 494, 497, 509, 512, 519, 522, 534, 535, 537, 539, 540, 541, 542, 543, 544, 547, 569, 572, 574, 577, 594, 597, 599, 600, 602, 604, 605, 607, 609, 612, 634, 637, 654, 657, 659, 662, 669, 670, 672, 674, 675, 677, 684, 685, 687, 689, 692, 694, 695, 697, 699, 700, 702, 704, 707, 714, 717, 719, 720, 722, 729, 732, 734, 735, 736, 738, 739, 742, 744, 747, 754, 758, 759, 763, 764, 768, 769, 773, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 854, 855, 856, 857, 858, 865, 868, 875, 891, 894, 895, 896, 898, 909, 910, 912, 913, 915, 922, 923, 924, 926, 982, 983, 984, 985, 986, 1038, 1042, 1043, 1044, 1053, 1058, 1071, 1081, 1085, 1088, 1114, 1118, 1120, 1121, 1122, 1123, 1124, 1130, 1133, 1135, 1138, 1145, 1148, 1161, 1164, 1182, 1185, 1187, 1190, 1247, 1248, 1249, 1250, 1251, 1258, 1280, 1283, 1382, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1481, 1485, 1489, 1528, 1529, 1530, 1531, 1532, 1535, 1538, 1550, 1551, 1553, 1555, 1556, 1559, 1566, 1569, 1587, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1625, 1632, 1633, 1634, 1635, 1636, 1642, 1645, 1680, 1684, 1685, 1686, 1688, 1689, 1711, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1738, 1740, 1752, 1755, 1787, 1791, 1816, 1817, 1820, 1821, 1827, 1829, 1830, 1832, 1834, 1835, 1837, 1839, 1840, 1848, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1862, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1980, 1997, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2017, 2025, 2026, 2027], "need": [36, 38, 39, 41, 42, 43, 64, 65, 76, 77, 112, 113, 124, 125, 143, 144, 146, 147, 148, 150, 151, 152, 155, 157, 158, 159, 161, 162, 164, 166, 167, 180, 181, 922, 1038, 1044, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1357, 1359, 1361, 1555, 1581, 1711, 1712, 1715, 1727, 1728, 1729, 1731, 1796, 1808, 1977, 1981, 1982, 1983, 1987, 2019, 2022, 2086, 2089], "said": [36, 2090, 2096], "high": [36, 41, 80, 81, 128, 129, 158, 162, 167, 1821, 1827, 1828, 1829, 1830, 1831, 1837, 1838, 1839, 1840, 1841, 1968, 1977, 1978, 1979, 1980, 1981, 1985, 1987, 1988, 2090, 2093], "level": [36, 37, 41, 43, 146, 152, 155, 158, 162, 163, 164, 167, 168, 169, 181, 1968, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1985, 1986, 1987, 1988], "optim": [36, 66, 67, 114, 115, 157, 165, 167, 169, 180, 1258, 1265, 1451, 1463, 1464, 1476, 1477, 1478, 1479, 1792, 1793, 1794, 1795, 1969, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1988, 1997, 2005, 2026, 2027, 2028, 2030], "trainer": [36, 179, 181, 1969, 1988], "statu": [36, 41, 147], "quo": 36, "kera": [36, 1987, 2019, 2020, 2021], "dopamin": 36, "ignit": 36, "catalyst": 36, "lightn": 36, "fastai": 36, "haiku": [36, 169, 1981, 2019, 2020], "flax": [36, 169, 181, 1981], "trax": [36, 169], "objax": [36, 169], "idea": [36, 38, 158, 161, 165, 180, 1980], "fulli": [36, 144, 148, 154, 157, 162, 164, 165, 166, 167, 168, 169, 181, 1979, 1980, 1981, 1987, 1988, 2007, 2017, 2018], "offer": [36, 158, 168, 1981, 1987, 1988], "strongli": [37, 42, 1987, 1988], "welcom": [37, 42, 43], "absolut": [37, 42, 45, 48, 49, 61, 62, 63, 72, 73, 97, 98, 109, 110, 111, 120, 121, 162, 453, 454, 455, 456, 457, 458, 779, 780, 781, 782, 783, 891, 892, 904, 1005, 1006, 1007, 1008, 1009, 1555, 1607, 1610, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1642, 1643, 1644, 1645, 1646, 2034, 2035, 2041, 2043, 2059, 2060, 2061, 2062, 2072, 2076, 2080, 2081, 2090, 2091], "skill": [37, 1983], "whether": [37, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 76, 77, 80, 81, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 148, 150, 154, 157, 158, 160, 161, 162, 196, 198, 200, 201, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 234, 235, 237, 242, 243, 244, 267, 269, 271, 292, 294, 296, 300, 302, 304, 318, 319, 321, 323, 330, 331, 332, 333, 334, 335, 337, 339, 345, 347, 349, 352, 353, 354, 356, 357, 358, 360, 368, 369, 371, 372, 380, 381, 384, 386, 387, 388, 389, 390, 391, 394, 396, 399, 401, 403, 405, 407, 417, 418, 424, 425, 426, 427, 428, 431, 432, 434, 435, 438, 439, 443, 444, 445, 447, 450, 452, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 780, 781, 782, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 821, 823, 839, 841, 843, 852, 853, 875, 891, 892, 904, 909, 933, 937, 1003, 1005, 1006, 1007, 1008, 1009, 1038, 1043, 1135, 1136, 1137, 1138, 1139, 1155, 1157, 1159, 1175, 1177, 1179, 1187, 1189, 1191, 1206, 1207, 1209, 1211, 1212, 1214, 1247, 1248, 1250, 1252, 1253, 1255, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1268, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1287, 1288, 1289, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1319, 1320, 1322, 1324, 1331, 1332, 1333, 1334, 1335, 1336, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1386, 1388, 1390, 1391, 1393, 1395, 1396, 1397, 1400, 1402, 1403, 1405, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1428, 1429, 1431, 1432, 1433, 1434, 1436, 1441, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1488, 1489, 1528, 1529, 1530, 1531, 1532, 1535, 1537, 1539, 1550, 1552, 1554, 1555, 1556, 1558, 1560, 1561, 1563, 1565, 1582, 1585, 1587, 1589, 1590, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1609, 1611, 1617, 1619, 1621, 1642, 1644, 1646, 1670, 1671, 1673, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1711, 1712, 1714, 1716, 1727, 1731, 1732, 1734, 1736, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1782, 1783, 1784, 1785, 1786, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1814, 1815, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1859, 1861, 1863, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1896, 1898, 1900, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1930, 1932, 1938, 1940, 1942, 1943, 1945, 1952, 1953, 1955, 1957, 1958, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1993, 1994, 2007, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2034, 2037, 2038, 2039, 2043, 2059, 2060, 2061, 2062, 2090, 2096], "veteran": 37, "beginn": [37, 1981], "aspect": [37, 167, 1969, 1981], "guid": [37, 41, 42, 43, 153, 158, 1969, 1987, 2019, 2021], "through": [37, 40, 41, 43, 63, 111, 142, 145, 146, 150, 152, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 180, 453, 489, 492, 1140, 1141, 1142, 1143, 1144, 1201, 1203, 1796, 1800, 1806, 1979, 1981, 1982, 1983, 2019, 2020], "journei": [37, 1969], "inclus": [37, 63, 111, 145, 157, 162, 237, 239, 240, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1821, 1827, 1830], "big": [37, 181, 1981, 1997, 2001], "team": [37, 41, 42, 43, 158, 1983], "board": 37, "contributor": [37, 42, 43, 158, 163, 1969, 1981], "split": [37, 43, 63, 76, 77, 97, 98, 111, 124, 125, 163, 164, 181, 418, 441, 442, 443, 876, 877, 878, 879, 880, 987, 988, 989, 990, 991, 1071, 1076, 1082, 1092, 1237, 1238, 1239, 1240, 1241, 1258, 1382, 1489, 1520, 1545, 1548, 1711, 1761, 1772, 1774, 1969, 1988, 2043, 2058], "section": [37, 38, 40, 41, 43, 63, 111, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 876, 877, 878, 879, 880, 987, 988, 989, 990, 991, 1071, 1076, 1082, 1092, 1237, 1238, 1239, 1240, 1241, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1977, 1984, 1987], "below": [37, 39, 41, 42, 55, 56, 136, 137, 142, 143, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 237, 305, 307, 309, 310, 312, 314, 453, 609, 612, 844, 849, 850, 1219, 1222, 1223, 1226, 1555, 1576, 1579, 1670, 1674, 1952, 1955, 1969, 1977, 1979, 1984, 1986], "best": [37, 40, 41, 42, 43, 142, 148, 153, 160, 161, 1258, 1382, 1984, 1985], "go": [37, 38, 41, 42, 43, 142, 145, 148, 150, 152, 158, 159, 160, 161, 163, 167, 181, 1796, 1797, 1798, 1807, 1808, 1809, 1977, 1981, 1982, 1986, 1988], "start": [37, 38, 39, 41, 42, 43, 55, 56, 97, 98, 103, 104, 142, 148, 150, 151, 154, 158, 160, 162, 163, 164, 166, 167, 168, 180, 181, 237, 239, 240, 241, 272, 275, 276, 277, 278, 279, 280, 281, 418, 420, 928, 931, 1071, 1078, 1981, 1987, 2090, 2096], "finish": [37, 41, 42, 142, 1969], "dive": [37, 40, 41, 43, 143, 146, 148, 159, 163, 166, 167, 181, 1969, 1987], "right": [37, 42, 43, 72, 73, 94, 97, 98, 99, 100, 120, 121, 142, 143, 150, 152, 162, 167, 453, 509, 512, 519, 522, 933, 936, 1071, 1079, 1555, 1652, 1656, 1675, 1676, 1677, 1678, 1679, 1895, 1901, 1904], "environ": [37, 38, 39, 43, 180, 1981, 1983], "basic": [37, 39, 41, 150, 160], "fork": [37, 42, 143, 1258, 1383], "doc": [37, 40, 41, 150, 151, 154, 160, 164, 167, 168, 453, 719, 722, 844, 849, 850, 1219, 1222, 1223, 1226, 1969], "document": [37, 40, 43, 76, 77, 147, 148, 150, 158, 159, 160, 167, 169, 1258, 1450, 1767, 1768], "local": [37, 38, 39, 42, 143, 155, 159, 160], "task": [37, 43, 158, 159, 180, 1792, 1793, 1794, 1795, 1969, 1981, 1987, 1988], "help": [37, 38, 41, 42, 144, 145, 146, 148, 150, 156, 158, 160, 161, 162, 166, 167, 168, 179, 1258, 1264, 1911, 1947, 1951, 1968, 1969, 1977, 1981, 1983, 1987, 1997, 2005], "appli": [37, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 166, 167, 168, 169, 179, 181, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 242, 243, 249, 250, 253, 254, 261, 262, 267, 268, 269, 271, 277, 278, 279, 281, 282, 283, 287, 288, 292, 293, 294, 296, 300, 301, 302, 304, 305, 307, 310, 312, 318, 319, 320, 321, 323, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 386, 388, 390, 403, 404, 405, 406, 407, 425, 426, 427, 429, 444, 445, 446, 447, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 819, 820, 821, 823, 824, 825, 826, 827, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 843, 854, 855, 856, 857, 858, 860, 861, 862, 865, 866, 867, 869, 870, 871, 872, 874, 876, 877, 878, 880, 881, 882, 883, 885, 886, 888, 890, 891, 894, 917, 918, 919, 921, 923, 924, 925, 927, 928, 929, 930, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 944, 945, 947, 948, 949, 950, 952, 953, 954, 955, 957, 958, 959, 961, 962, 963, 965, 974, 975, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1042, 1048, 1049, 1050, 1052, 1053, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1094, 1095, 1096, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1170, 1175, 1176, 1177, 1179, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1191, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1217, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1261, 1263, 1266, 1267, 1269, 1270, 1271, 1273, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1312, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1324, 1332, 1333, 1334, 1336, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1386, 1387, 1388, 1390, 1391, 1393, 1395, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1445, 1446, 1447, 1448, 1451, 1453, 1454, 1455, 1457, 1458, 1463, 1464, 1465, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1481, 1482, 1483, 1484, 1489, 1491, 1492, 1493, 1495, 1501, 1502, 1503, 1505, 1510, 1511, 1512, 1514, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1565, 1571, 1572, 1573, 1587, 1588, 1589, 1591, 1597, 1598, 1599, 1602, 1604, 1606, 1607, 1608, 1609, 1611, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1642, 1643, 1644, 1646, 1670, 1671, 1673, 1675, 1676, 1685, 1686, 1688, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1796, 1803, 1806, 1809, 1810, 1816, 1817, 1818, 1819, 1820, 1822, 1823, 1824, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1841, 1843, 1844, 1845, 1847, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1932, 1934, 1936, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1952, 1953, 1954, 1955, 1958, 1959, 1960, 1962, 1963, 1964, 1965, 1967, 1968, 1969, 1982, 1990, 1991, 1992, 2023, 2024, 2090, 2091, 2100, 2101, 2102, 2103], "resourc": [37, 41, 147], "video": [37, 42, 43, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 1979], "contribut": [38, 40, 41, 42, 43, 158, 164, 1985], "toward": [38, 42, 63, 76, 77, 124, 125, 161, 164, 453, 769, 773, 891, 898, 911, 923, 924, 926, 1071, 1089, 1155, 1158, 1175, 1178, 1711, 1752, 1753, 1754, 1755, 1756, 1977, 1981], "requir": [38, 39, 41, 42, 63, 111, 144, 147, 148, 149, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 164, 166, 181, 234, 235, 453, 739, 742, 891, 909, 1071, 1088, 1135, 1136, 1137, 1138, 1139, 1161, 1164, 1555, 1581, 1582, 1585, 1587, 1590, 1711, 1767, 1770, 1981, 1987, 1993, 1994, 2072, 2076], "slightli": [38, 146, 158, 164, 168], "more": [38, 40, 41, 43, 63, 76, 77, 84, 85, 111, 120, 121, 124, 125, 132, 133, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 180, 181, 237, 239, 240, 323, 335, 338, 453, 569, 572, 634, 637, 789, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 1053, 1058, 1071, 1072, 1073, 1074, 1089, 1130, 1133, 1175, 1176, 1177, 1178, 1179, 1555, 1602, 1605, 1642, 1645, 1685, 1686, 1688, 1689, 1711, 1732, 1733, 1734, 1735, 1736, 1767, 1768, 1769, 1771, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1969, 1979, 1980, 1981, 1982, 1983, 1984, 1987, 1988, 2019, 2021, 2090, 2092, 2096], "complex": [38, 41, 63, 111, 148, 150, 160, 162, 167, 168, 169, 181, 453, 609, 612, 784, 785, 786, 787, 788, 886, 889, 891, 893, 1053, 1055, 1258, 1407, 1410, 1555, 1581, 1582, 1585, 1587, 1590, 1652, 1656, 1968, 1977, 1979, 1981, 1983, 1987, 1988], "setup": [38, 42, 43], "alon": [38, 160, 418, 438, 452], "instanc": [38, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 148, 150, 151, 152, 154, 155, 156, 157, 160, 167, 168, 169, 182, 194, 198, 199, 200, 204, 205, 206, 209, 210, 211, 214, 215, 216, 219, 220, 221, 224, 225, 226, 229, 230, 231, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 272, 275, 277, 278, 279, 280, 282, 283, 285, 287, 288, 292, 293, 294, 297, 298, 300, 301, 302, 303, 305, 307, 309, 310, 312, 314, 315, 317, 318, 320, 321, 322, 323, 330, 331, 332, 333, 335, 336, 337, 340, 341, 342, 345, 346, 347, 348, 363, 366, 381, 384, 386, 387, 388, 391, 394, 403, 404, 405, 418, 419, 425, 426, 427, 440, 444, 445, 446, 447, 453, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 564, 565, 566, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 619, 620, 621, 622, 624, 625, 626, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 674, 676, 679, 680, 681, 682, 684, 685, 686, 687, 689, 690, 691, 692, 694, 695, 696, 697, 699, 700, 701, 702, 704, 705, 706, 709, 710, 711, 714, 715, 716, 717, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 779, 780, 781, 784, 785, 786, 789, 790, 791, 794, 795, 796, 799, 800, 801, 804, 805, 806, 807, 809, 810, 811, 812, 814, 817, 819, 820, 821, 828, 829, 834, 835, 836, 839, 840, 841, 844, 849, 850, 854, 855, 856, 857, 860, 861, 862, 863, 865, 866, 867, 870, 871, 872, 876, 877, 878, 881, 882, 883, 886, 888, 889, 917, 918, 919, 923, 924, 925, 928, 929, 930, 931, 933, 934, 935, 938, 939, 940, 943, 944, 945, 948, 949, 950, 953, 954, 955, 958, 959, 961, 962, 963, 974, 975, 978, 979, 982, 983, 984, 987, 988, 989, 992, 993, 994, 997, 998, 999, 1005, 1006, 1007, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1035, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1047, 1048, 1049, 1050, 1053, 1054, 1055, 1059, 1060, 1061, 1064, 1065, 1066, 1071, 1078, 1088, 1094, 1095, 1096, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1109, 1112, 1114, 1115, 1116, 1120, 1121, 1122, 1125, 1126, 1127, 1130, 1131, 1132, 1135, 1136, 1137, 1140, 1141, 1142, 1145, 1146, 1147, 1155, 1156, 1157, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1175, 1176, 1182, 1183, 1184, 1187, 1188, 1189, 1206, 1208, 1209, 1211, 1213, 1214, 1216, 1217, 1219, 1222, 1223, 1226, 1227, 1229, 1230, 1233, 1235, 1237, 1239, 1240, 1242, 1244, 1245, 1247, 1249, 1250, 1252, 1254, 1255, 1258, 1259, 1260, 1261, 1266, 1267, 1269, 1270, 1271, 1275, 1276, 1277, 1280, 1281, 1282, 1284, 1287, 1288, 1290, 1291, 1292, 1295, 1296, 1297, 1300, 1301, 1302, 1305, 1306, 1308, 1309, 1310, 1315, 1316, 1317, 1318, 1320, 1321, 1322, 1332, 1333, 1334, 1335, 1336, 1341, 1342, 1344, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1368, 1369, 1370, 1373, 1374, 1376, 1377, 1378, 1386, 1387, 1388, 1391, 1393, 1402, 1407, 1408, 1409, 1412, 1413, 1414, 1417, 1418, 1419, 1420, 1421, 1423, 1425, 1428, 1430, 1431, 1433, 1435, 1436, 1437, 1445, 1447, 1448, 1451, 1453, 1454, 1455, 1457, 1458, 1463, 1464, 1465, 1468, 1469, 1472, 1473, 1476, 1477, 1481, 1482, 1483, 1484, 1485, 1489, 1491, 1492, 1493, 1501, 1502, 1503, 1504, 1510, 1511, 1512, 1513, 1515, 1518, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1535, 1536, 1537, 1538, 1545, 1548, 1550, 1551, 1553, 1555, 1556, 1557, 1558, 1559, 1561, 1562, 1563, 1564, 1566, 1569, 1571, 1572, 1573, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1597, 1598, 1599, 1600, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1610, 1612, 1615, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1637, 1640, 1642, 1643, 1644, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1672, 1673, 1675, 1677, 1678, 1680, 1684, 1685, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1706, 1707, 1708, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1770, 1772, 1774, 1775, 1776, 1777, 1779, 1780, 1781, 1782, 1784, 1785, 1786, 1787, 1789, 1790, 1791, 1816, 1817, 1818, 1819, 1820, 1822, 1823, 1824, 1827, 1828, 1829, 1832, 1833, 1834, 1837, 1838, 1839, 1843, 1844, 1845, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1963, 1964, 1965, 1966, 1968, 1982, 1993, 1994, 2019, 2020, 2022], "mech": 38, "vision": [38, 179, 1969, 1977, 1987], "demo": [38, 180, 1969], "util": [38, 91, 139, 149, 152, 157, 161, 418, 430, 1958, 1961, 1963, 1966, 1979, 1987, 1988], "thu": [38, 41, 147, 152, 158, 453, 519, 522, 699, 702, 714, 717, 1555, 1581, 1582, 1585], "relat": [38, 40, 42, 43, 152, 153, 158, 160, 161, 162, 180, 418, 419, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988], "folder": [38, 39, 42, 43, 143, 155, 158, 160, 161], "To": [38, 39, 42, 143, 146, 148, 150, 152, 153, 155, 158, 159, 160, 161, 167, 168, 169, 1258, 1401, 1969, 1997, 2001, 2019, 2021], "grasp": [38, 158], "directori": [38, 39, 41, 42, 43, 147, 158, 160, 418, 420, 1258, 1340, 1404], "tree": [38, 39, 148], "place": [38, 40, 43, 50, 52, 54, 55, 56, 61, 62, 63, 64, 65, 72, 73, 76, 77, 97, 98, 103, 104, 107, 108, 109, 110, 111, 112, 113, 124, 125, 142, 143, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 169, 237, 239, 240, 242, 243, 244, 252, 253, 254, 256, 258, 259, 261, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 280, 282, 285, 287, 288, 290, 297, 298, 300, 301, 302, 303, 304, 305, 309, 310, 314, 315, 317, 318, 319, 320, 321, 322, 323, 345, 348, 381, 384, 391, 394, 418, 444, 445, 447, 448, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 609, 612, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 779, 780, 781, 782, 783, 804, 807, 809, 812, 814, 817, 819, 821, 823, 844, 849, 850, 854, 857, 860, 863, 886, 889, 891, 892, 904, 909, 910, 911, 915, 916, 928, 929, 930, 931, 932, 1005, 1006, 1007, 1008, 1009, 1015, 1016, 1020, 1021, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1047, 1053, 1054, 1055, 1071, 1078, 1088, 1099, 1102, 1104, 1107, 1109, 1112, 1135, 1136, 1137, 1138, 1139, 1145, 1146, 1147, 1148, 1149, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1219, 1222, 1223, 1226, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1315, 1318, 1332, 1335, 1341, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1417, 1418, 1419, 1420, 1421, 1433, 1437, 1451, 1481, 1485, 1489, 1501, 1504, 1510, 1513, 1523, 1526, 1535, 1538, 1545, 1548, 1550, 1553, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1689, 1690, 1694, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1740, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1816, 1817, 1820, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966, 1968, 1983, 2025, 2026, 2027, 2028, 2029, 2030], "dir": [38, 167], "clone": [38, 39, 43], "mutual": [38, 146, 155], "git": [38, 40, 42, 43, 143, 160], "http": [38, 42, 61, 62, 109, 110, 114, 115, 143, 147, 148, 151, 323, 345, 348, 453, 594, 597, 659, 660, 661, 679, 682, 719, 722, 844, 849, 850, 886, 889, 928, 931, 1053, 1055, 1071, 1078, 1219, 1222, 1223, 1226, 1451, 1453, 1456, 1457, 1460, 1555, 1587, 1588, 1642, 1645, 1690, 1694, 1911, 1943, 1946, 2019, 2021], "com": [38, 42, 143, 148], "unifyai": [38, 39, 42, 43], "venv": 38, "python3": [38, 39, 42, 43], "m": [38, 39, 42, 43, 45, 48, 49, 55, 56, 63, 72, 73, 80, 81, 109, 110, 111, 120, 121, 128, 129, 142, 164, 237, 282, 285, 305, 307, 309, 310, 312, 314, 649, 651, 653, 799, 800, 801, 802, 803, 819, 822, 844, 849, 850, 870, 871, 873, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 1071, 1074, 1079, 1080, 1089, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1219, 1222, 1223, 1226, 1555, 1556, 1557, 1558, 1559, 1560, 1566, 1569, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1670, 1671, 1672, 1673, 1674, 1796, 1805, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841], "ivy_dev": [38, 39, 42, 43], "activ": [38, 39, 42, 43, 47, 64, 65, 92, 93, 96, 140, 141, 161, 168, 197, 198, 201, 203, 204, 207, 209, 212, 214, 216, 217, 218, 219, 222, 224, 227, 229, 232, 778, 1417, 1419, 1969, 1981, 1984, 1991, 1992, 1997, 2001, 2002], "window": [38, 39, 43, 63, 70, 71, 111, 118, 119, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 844, 845, 846, 847, 848, 851, 974, 975, 976, 977, 978, 979, 980, 981, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1233, 1234, 1235, 1236, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1986, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014], "script": [38, 39, 42, 43, 147, 150, 164, 181, 1981], "bat": [38, 39, 42, 43], "mac": [38, 39, 42, 43], "linux": [38, 39, 42, 43, 1984, 1986], "bin": [38, 39, 42, 43, 143, 146], "instal": [38, 39, 42, 43, 145, 153, 180, 1969], "packag": [38, 39, 42, 147, 153, 158, 181, 1981, 1983], "edit": [38, 41, 42, 43], "mode": [38, 42, 43, 63, 72, 73, 97, 98, 111, 120, 121, 146, 150, 162, 181, 234, 235, 418, 443, 453, 469, 472, 1071, 1088, 1161, 1162, 1163, 1164, 1165, 1258, 1331, 1396, 1397, 1400, 1402, 1403, 1439, 1440, 1441, 1443, 1444, 1555, 1637, 1638, 1639, 1640, 1641, 1981, 1984, 2019, 2021], "cd": [38, 39, 42, 43], "pip": [38, 42, 180, 1969], "repeat": [38, 43, 64, 65, 76, 77, 112, 113, 124, 125, 144, 145, 150, 151, 153, 160, 1258, 1300, 1301, 1302, 1303, 1304, 1711, 1746, 1777, 1781], "note": [38, 41, 42, 43, 63, 76, 77, 111, 124, 125, 148, 150, 151, 158, 159, 160, 161, 323, 330, 331, 332, 334, 402, 453, 634, 637, 714, 717, 719, 722, 844, 849, 850, 891, 903, 928, 929, 930, 931, 932, 968, 969, 971, 1071, 1078, 1219, 1222, 1223, 1226, 1258, 1274, 1555, 1581, 1582, 1585, 1642, 1645, 1652, 1656, 1711, 1747, 1748, 1749, 1750, 1751, 1767, 1770, 1874, 1875, 1877, 1880, 1884, 1911, 1930, 1933, 2019, 2021], "link": [38, 41, 42, 43, 147, 148, 158, 160, 1977, 1979], "reflect": [38, 43, 144, 160, 1071, 1088, 1161, 1164], "immedi": [38, 42, 162, 1969], "ivy_robot": [38, 180], "docker": [38, 40], "desktop": [38, 42], "imag": [38, 39, 42, 63, 69, 70, 71, 111, 117, 118, 119, 161, 164, 165, 167, 169, 180, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 1038, 1039, 1040, 1045, 1046, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1969, 1981], "my": [38, 161], "mount": [38, 43], "run": [38, 39, 41, 42, 66, 67, 114, 115, 142, 145, 147, 150, 152, 153, 154, 158, 159, 164, 165, 166, 167, 168, 169, 180, 181, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1792, 1793, 1794, 1795, 1979, 1981, 1982, 1983, 1984, 1986, 1987, 1988, 2007, 2018, 2019, 2020, 2021, 2022, 2043, 2054, 2064, 2065], "rm": [38, 43], "v": [38, 42, 43, 70, 71, 86, 87, 103, 104, 118, 119, 134, 135, 164, 167, 168, 169, 277, 279, 886, 889, 1053, 1055, 1489, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1895, 1901, 1902, 1903, 1904, 1905, 1969, 1995, 1996, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2029, 2031, 2032, 2043, 2062], "pwd": 38, "volum": [38, 63, 70, 71, 111, 118, 119, 814, 815, 816, 817, 818, 922, 1038, 1041, 1044, 1047, 1109, 1110, 1111, 1112, 1113, 1489, 1510, 1511, 1512, 1513, 1514], "rebuild": [38, 94, 97, 98, 99, 100], "everi": [38, 39, 41, 43, 55, 56, 63, 64, 65, 111, 112, 113, 143, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 168, 237, 266, 267, 268, 270, 891, 903, 968, 969, 970, 971, 1258, 1259, 1260, 1261, 1262, 1263, 1981, 2019, 2022], "id": [38, 40, 42, 144, 146, 153, 418, 424, 2019, 2020], "pycharm": 38, "configur": [38, 39, 42, 43, 97, 98, 147, 148, 156, 418, 442, 1796, 1810], "part": [38, 43, 55, 56, 63, 66, 67, 111, 143, 155, 158, 160, 161, 162, 164, 165, 169, 180, 181, 237, 305, 307, 309, 310, 312, 314, 453, 609, 612, 844, 849, 850, 1071, 1088, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1219, 1222, 1223, 1226, 1463, 1464, 1555, 1587, 1590, 1979, 1981, 1986, 1987, 1988, 2019, 2020, 2043, 2047], "vscode": [38, 42], "found": [38, 41, 42, 43, 76, 77, 84, 85, 94, 97, 98, 99, 100, 124, 125, 132, 133, 144, 145, 146, 148, 151, 153, 156, 157, 158, 162, 418, 433, 1767, 1768, 1769, 1771, 1796, 1808, 1875, 1876, 1877, 1878, 1983, 1995, 1996], "devcontain": [38, 42], "extens": [38, 40, 42, 43, 61, 62, 72, 73, 109, 110, 151, 160, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 282, 285, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 363, 366, 374, 377, 403, 406, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 860, 863, 928, 931, 1053, 1054, 1071, 1078, 1257, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1689, 1711, 1717, 1720, 1727, 1730, 1732, 1735, 1737, 1740, 1747, 1750, 1752, 1755, 1762, 1765, 1767, 1770, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966, 1978, 1981, 1988], "remot": [38, 42, 143], "codespac": 38, "config": [38, 42, 97, 98, 143, 167, 1796, 1810, 1982], "json": [38, 42, 97, 98, 167], "good": [38, 39, 40, 41, 42, 43, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 168], "feel": [38, 39, 41, 42, 43, 45, 94, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 196, 234, 236, 237, 323, 418, 453, 1257, 1258, 1451, 1489, 1555, 1695, 1711, 1792, 1796, 1816, 1821, 1848, 1895, 1911, 1957, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1993, 1997, 2007, 2019, 2023, 2025, 2031], "free": [38, 39, 40, 41, 43, 45, 94, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 180, 196, 234, 236, 237, 323, 418, 453, 1257, 1258, 1451, 1489, 1555, 1695, 1711, 1792, 1796, 1816, 1821, 1848, 1895, 1911, 1957, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1993, 1997, 2007, 2019, 2023, 2025, 2031], "channel": [38, 39, 41, 42, 43, 45, 64, 65, 94, 112, 113, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 196, 234, 236, 237, 323, 418, 453, 875, 1038, 1043, 1257, 1258, 1308, 1309, 1310, 1311, 1312, 1451, 1489, 1555, 1695, 1711, 1792, 1796, 1816, 1821, 1848, 1895, 1911, 1957, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1993, 1997, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2017, 2019, 2023, 2025, 2031], "pre": [38, 41, 160, 169, 181, 1981], "commit": [38, 41, 143, 150, 160], "_": [38, 39, 42, 61, 62, 109, 110, 114, 115, 146, 151, 153, 157, 160, 167, 323, 345, 348, 453, 569, 570, 594, 597, 659, 660, 661, 719, 722, 886, 889, 928, 931, 1053, 1055, 1071, 1078, 1451, 1453, 1456, 1457, 1460, 1555, 1587, 1588, 1642, 1645, 1657, 1661, 1690, 1694, 1796, 1804, 1911, 1943, 1946], "builder": [39, 179, 181, 1968, 1969], "dockerfil": [39, 42], "command": [39, 42, 143, 156, 1969], "maco": [39, 1986], "latest": [39, 41, 42, 43, 61, 62, 109, 110, 145, 147, 148, 151, 161, 181, 323, 345, 348, 453, 594, 597, 659, 660, 661, 719, 722, 886, 889, 928, 931, 1053, 1055, 1071, 1078, 1555, 1587, 1588, 1642, 1645, 1911, 1943, 1946, 1986, 2007, 2016], "ubuntu": 39, "uid": 39, "bash": [39, 42, 43, 143], "root": [39, 42, 43, 61, 62, 109, 110, 158, 167, 453, 739, 740, 741, 742, 743, 1995, 1996], "both": [39, 43, 55, 56, 61, 62, 63, 72, 73, 103, 104, 109, 110, 111, 120, 121, 145, 146, 148, 149, 150, 151, 154, 155, 157, 158, 160, 162, 164, 166, 167, 168, 169, 180, 181, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 282, 285, 292, 294, 296, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 381, 384, 391, 394, 401, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 804, 807, 809, 812, 814, 817, 834, 835, 836, 837, 838, 854, 857, 860, 863, 886, 889, 891, 894, 899, 904, 928, 931, 943, 944, 946, 966, 967, 982, 983, 985, 1005, 1008, 1010, 1011, 1012, 1013, 1014, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1047, 1053, 1054, 1055, 1071, 1078, 1081, 1088, 1099, 1102, 1104, 1107, 1109, 1112, 1161, 1164, 1258, 1315, 1318, 1332, 1335, 1341, 1344, 1347, 1350, 1433, 1437, 1451, 1481, 1485, 1487, 1489, 1501, 1504, 1510, 1513, 1523, 1526, 1535, 1538, 1545, 1548, 1550, 1553, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1680, 1684, 1685, 1689, 1690, 1694, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1740, 1742, 1745, 1747, 1750, 1752, 1755, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1816, 1817, 1820, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966, 1981, 1984, 1986, 1987, 1988, 2019, 2022, 2034, 2038], "termin": [39, 42, 43, 94, 97, 98, 99, 100, 146, 164, 167], "3": [39, 42, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 145, 146, 148, 150, 152, 159, 160, 164, 166, 167, 168, 169, 196, 198, 199, 200, 201, 202, 204, 207, 209, 210, 211, 212, 213, 214, 217, 219, 222, 224, 226, 227, 228, 229, 232, 236, 237, 258, 259, 267, 268, 269, 270, 271, 272, 275, 282, 285, 297, 298, 300, 303, 315, 317, 318, 322, 323, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 358, 359, 360, 363, 366, 386, 387, 388, 389, 390, 391, 394, 403, 405, 406, 407, 418, 422, 424, 425, 426, 427, 428, 429, 439, 441, 444, 445, 447, 448, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 489, 490, 491, 492, 493, 494, 497, 499, 502, 503, 504, 506, 508, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 644, 645, 646, 647, 648, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 779, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 824, 825, 826, 827, 828, 829, 830, 831, 834, 835, 839, 840, 841, 842, 843, 844, 849, 850, 851, 854, 855, 856, 857, 858, 860, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 891, 893, 895, 896, 897, 899, 900, 901, 902, 903, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 974, 975, 977, 978, 979, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1010, 1011, 1012, 1013, 1014, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1261, 1266, 1268, 1274, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1287, 1289, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1303, 1305, 1307, 1315, 1318, 1320, 1321, 1323, 1332, 1333, 1334, 1335, 1336, 1341, 1342, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1368, 1371, 1376, 1379, 1382, 1391, 1392, 1393, 1394, 1395, 1405, 1407, 1408, 1409, 1410, 1411, 1423, 1426, 1433, 1434, 1435, 1437, 1438, 1450, 1451, 1453, 1454, 1455, 1456, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1487, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1566, 1568, 1569, 1571, 1572, 1573, 1574, 1576, 1579, 1587, 1588, 1589, 1590, 1591, 1597, 1598, 1600, 1602, 1603, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1633, 1634, 1635, 1636, 1642, 1643, 1644, 1645, 1646, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1690, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1703, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1762, 1765, 1767, 1769, 1770, 1771, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1796, 1798, 1800, 1803, 1804, 1805, 1806, 1808, 1814, 1815, 1816, 1817, 1819, 1820, 1821, 1822, 1825, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1846, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1895, 1896, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1961, 1963, 1964, 1966, 1969, 1988, 2043, 2061, 2072, 2076, 2080, 2081, 2100, 2101, 2102, 2103], "8": [39, 42, 45, 48, 49, 61, 62, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 99, 100, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 146, 150, 160, 163, 167, 196, 198, 201, 219, 222, 237, 266, 267, 270, 300, 303, 318, 322, 323, 353, 354, 356, 357, 363, 366, 418, 430, 449, 453, 469, 472, 473, 474, 475, 476, 478, 479, 482, 483, 499, 500, 502, 504, 507, 519, 522, 529, 532, 539, 542, 579, 580, 581, 582, 583, 584, 587, 589, 592, 614, 617, 619, 620, 621, 622, 623, 644, 647, 654, 657, 659, 661, 669, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 699, 700, 701, 702, 703, 704, 705, 707, 714, 715, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 739, 742, 744, 747, 759, 763, 764, 768, 779, 780, 782, 789, 792, 794, 797, 799, 800, 804, 805, 806, 807, 808, 809, 810, 812, 814, 815, 817, 824, 825, 826, 827, 854, 855, 856, 857, 858, 870, 872, 874, 876, 877, 878, 879, 880, 891, 892, 897, 899, 903, 904, 907, 910, 914, 917, 918, 919, 920, 921, 922, 928, 929, 930, 931, 932, 943, 944, 945, 946, 947, 968, 969, 970, 971, 987, 988, 989, 990, 991, 992, 993, 995, 1005, 1008, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1069, 1070, 1071, 1072, 1073, 1076, 1078, 1082, 1083, 1091, 1093, 1099, 1100, 1102, 1104, 1105, 1107, 1114, 1116, 1125, 1126, 1127, 1128, 1129, 1140, 1142, 1144, 1145, 1146, 1148, 1166, 1168, 1170, 1175, 1177, 1179, 1192, 1193, 1206, 1207, 1209, 1211, 1215, 1216, 1217, 1218, 1237, 1238, 1240, 1242, 1244, 1246, 1258, 1274, 1280, 1283, 1295, 1297, 1315, 1318, 1332, 1333, 1334, 1335, 1336, 1347, 1349, 1350, 1352, 1353, 1354, 1355, 1368, 1371, 1376, 1379, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1410, 1411, 1417, 1418, 1420, 1421, 1451, 1453, 1455, 1456, 1462, 1467, 1476, 1479, 1487, 1489, 1491, 1493, 1494, 1495, 1510, 1512, 1513, 1514, 1515, 1518, 1523, 1526, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1555, 1566, 1568, 1569, 1571, 1572, 1573, 1574, 1576, 1579, 1587, 1590, 1591, 1602, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1627, 1630, 1642, 1643, 1645, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1674, 1675, 1676, 1677, 1678, 1679, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1727, 1731, 1732, 1735, 1757, 1760, 1767, 1770, 1782, 1783, 1785, 1786, 1796, 1798, 1805, 1821, 1822, 1825, 1827, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1846, 1847, 1848, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1879, 1885, 1886, 1887, 1888, 1889, 1895, 1896, 1899, 1906, 1907, 1908, 1909, 1910, 1911, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1930, 1932, 1933, 1938, 1940, 1942, 1947, 1951, 1952, 1954, 1955, 1969, 2007, 2018, 2072, 2076, 2080, 2081, 2100, 2101, 2103], "built": [39, 42, 43, 146, 160, 165, 237, 239, 240, 1968, 1980, 1981, 1985, 2007, 2018, 2019, 2020], "explicit": [39, 42, 146, 148, 157, 158, 164, 181, 1981, 1995, 1996], "cmd": [39, 42], "file": [39, 41, 42, 43, 97, 98, 143, 144, 145, 146, 147, 151, 152, 153, 155, 158, 159, 160, 161, 164, 167, 1258, 1340, 1404, 1977, 1980, 1981, 1982, 2019, 2020], "abov": [39, 42, 43, 55, 56, 61, 62, 72, 73, 80, 81, 95, 96, 109, 110, 128, 129, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 164, 166, 167, 168, 169, 196, 229, 231, 232, 233, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 282, 285, 297, 298, 300, 303, 305, 307, 309, 310, 312, 314, 315, 317, 318, 322, 323, 345, 348, 381, 384, 391, 394, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 609, 612, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 804, 807, 809, 812, 814, 817, 844, 849, 850, 854, 857, 860, 863, 886, 889, 928, 931, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1047, 1053, 1054, 1055, 1071, 1078, 1088, 1099, 1102, 1104, 1107, 1109, 1112, 1161, 1164, 1219, 1222, 1223, 1226, 1258, 1315, 1318, 1332, 1335, 1341, 1344, 1347, 1350, 1433, 1437, 1451, 1481, 1485, 1489, 1501, 1504, 1510, 1513, 1523, 1526, 1535, 1538, 1545, 1548, 1550, 1553, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1674, 1680, 1684, 1685, 1689, 1690, 1694, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1740, 1742, 1745, 1747, 1750, 1752, 1755, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1816, 1817, 1820, 1821, 1827, 1828, 1829, 1830, 1831, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966, 1981, 1986], "OR": [39, 42, 43, 90, 91, 138, 139, 453, 514, 517, 659, 662, 1957, 1963, 1964, 1965, 1966, 1967], "move": [39, 43, 59, 60, 63, 107, 108, 111, 161, 418, 444, 445, 446, 447, 448, 844, 849, 850, 1071, 1085, 1120, 1121, 1122, 1123, 1124, 1219, 1222, 1223, 1226], "execut": [39, 42, 43, 146, 147, 150, 157, 160, 162, 164, 166, 169, 181, 418, 420, 1258, 1438, 1968, 1977, 1981, 1982, 1983, 1984, 1985, 1987], "insid": [39, 42, 43, 94, 99, 100, 146, 148, 156, 160, 161, 1071, 1091, 1211, 1215, 1987, 2064], "make_docs_without_dock": 39, "path": [39, 42, 157, 158, 159, 1258, 1340, 1981, 2043, 2059], "rel": [39, 43, 45, 48, 49, 63, 66, 67, 72, 73, 76, 77, 86, 87, 103, 104, 111, 114, 115, 120, 121, 124, 125, 134, 135, 159, 162, 267, 269, 271, 779, 780, 781, 782, 783, 891, 892, 904, 1005, 1006, 1007, 1008, 1009, 1451, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1555, 1576, 1579, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1670, 1674, 1711, 1732, 1733, 1734, 1735, 1736, 1752, 1753, 1754, 1755, 1756, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1969, 1981, 1983, 2034, 2035, 2041, 2043, 2059, 2060, 2061, 2062], "assum": [39, 55, 56, 61, 62, 63, 72, 73, 109, 110, 111, 143, 145, 147, 148, 151, 159, 162, 166, 167, 181, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 282, 285, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 381, 384, 391, 394, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 609, 612, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 804, 807, 809, 812, 814, 817, 854, 857, 860, 863, 875, 886, 889, 891, 913, 914, 928, 931, 966, 967, 1010, 1011, 1012, 1013, 1014, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1053, 1054, 1055, 1071, 1078, 1088, 1099, 1102, 1104, 1107, 1109, 1112, 1161, 1164, 1187, 1190, 1216, 1217, 1218, 1258, 1315, 1318, 1332, 1335, 1341, 1344, 1347, 1350, 1433, 1437, 1451, 1481, 1485, 1489, 1501, 1504, 1510, 1513, 1523, 1526, 1535, 1538, 1545, 1548, 1550, 1553, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1689, 1690, 1694, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1740, 1742, 1745, 1747, 1750, 1752, 1755, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1816, 1817, 1820, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966], "gener": [39, 41, 42, 43, 55, 56, 61, 62, 65, 80, 81, 92, 93, 103, 104, 109, 110, 113, 128, 129, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 168, 169, 180, 181, 234, 237, 239, 240, 272, 275, 277, 278, 279, 280, 281, 323, 345, 348, 453, 594, 597, 659, 660, 661, 714, 717, 719, 722, 844, 846, 849, 850, 870, 873, 928, 931, 967, 978, 980, 1071, 1078, 1086, 1087, 1152, 1153, 1171, 1173, 1219, 1222, 1223, 1226, 1259, 1262, 1264, 1265, 1266, 1268, 1269, 1272, 1274, 1275, 1278, 1280, 1283, 1285, 1286, 1287, 1289, 1290, 1293, 1295, 1298, 1300, 1303, 1305, 1307, 1308, 1311, 1313, 1314, 1315, 1318, 1320, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1335, 1337, 1338, 1339, 1340, 1341, 1344, 1346, 1347, 1350, 1352, 1355, 1357, 1360, 1362, 1363, 1366, 1368, 1371, 1373, 1375, 1376, 1379, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1391, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1410, 1412, 1415, 1417, 1421, 1422, 1423, 1426, 1427, 1428, 1432, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1449, 1450, 1555, 1587, 1588, 1642, 1645, 1675, 1679, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1830, 1837, 1838, 1839, 1840, 1841, 1842, 1911, 1943, 1946, 1968, 1969, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 2025, 2029, 2072, 2075, 2076, 2080, 2081, 2100, 2101, 2102, 2103], "prefer": [39, 42, 146, 156, 158, 162, 1981], "browser": [39, 42], "affect": [39, 147, 158], "page": [39, 42, 43, 147, 165, 166, 169, 179, 1969], "It": [39, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 90, 91, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 150, 151, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 196, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 340, 343, 418, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 804, 805, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 860, 863, 875, 891, 913, 922, 958, 959, 960, 1033, 1036, 1038, 1041, 1043, 1044, 1047, 1053, 1054, 1056, 1057, 1058, 1069, 1070, 1071, 1089, 1094, 1097, 1099, 1100, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1130, 1133, 1134, 1171, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1187, 1188, 1189, 1190, 1191, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1290, 1291, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1357, 1359, 1361, 1363, 1367, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1647, 1650, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1787, 1791, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1856, 1858, 1859, 1860, 1862, 1869, 1870, 1871, 1872, 1873, 1874, 1890, 1894, 1895, 1896, 1898, 1899, 1900, 1906, 1909, 1911, 1912, 1915, 1917, 1920, 1930, 1932, 1938, 1940, 1942, 1943, 1945, 1952, 1953, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1979, 1981, 1982, 1984, 1985, 1986, 1987, 1988, 1997, 1999, 2000, 2002, 2004, 2019, 2021], "synchron": 39, "respons": [39, 43, 148], "rest": [39, 42, 63, 111, 147, 169, 875, 876, 877, 878, 879, 880, 987, 988, 989, 990, 991, 1038, 1043, 1071, 1076, 1082, 1092, 1237, 1238, 1239, 1240, 1241, 1983], "remove_doc": 39, "privat": [39, 160, 2025, 2029], "access": [39, 41, 42, 43, 97, 98, 148, 158, 1981, 1983, 1985], "fulfil": [39, 163, 1969], "purpos": [39, 43, 144, 146, 147, 150, 152, 154, 155, 156, 158, 160, 162, 163, 166, 453, 569, 572, 634, 637, 844, 849, 850, 1219, 1222, 1223, 1226, 1555, 1642, 1645, 1968, 1969, 1980, 1982, 1985, 1986, 1987], "delet": [39, 43, 147, 1451, 1486], "autogenerated_sourc": 39, "Then": [39, 41, 43, 147, 156, 161, 181], "format": [39, 59, 60, 88, 89, 95, 96, 97, 98, 101, 102, 107, 108, 142, 148, 149, 150, 151, 152, 164, 166, 167, 196, 229, 231, 232, 233, 323, 358, 360, 418, 425, 426, 427, 428, 1911, 1922, 1923, 1925, 1969, 1977, 1979, 1981, 1982, 2034, 2037, 2038, 2039], "png": [39, 167], "_imag": 39, "lastli": 39, "docstr": [39, 40, 41, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 153, 154, 155, 158, 161, 198, 199, 200, 202, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 233, 237, 239, 240, 242, 243, 244, 249, 250, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 281, 282, 283, 285, 287, 288, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 363, 366, 374, 377, 386, 388, 390, 403, 404, 405, 406, 407, 425, 426, 427, 429, 444, 445, 446, 447, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 819, 820, 821, 823, 824, 825, 827, 828, 829, 831, 834, 835, 836, 838, 839, 840, 841, 843, 854, 855, 856, 858, 860, 861, 862, 863, 865, 866, 867, 869, 870, 871, 872, 874, 876, 877, 878, 880, 881, 882, 883, 885, 886, 888, 890, 917, 918, 919, 921, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 944, 945, 947, 948, 949, 950, 952, 953, 954, 955, 957, 958, 959, 961, 962, 963, 965, 974, 975, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1048, 1049, 1050, 1052, 1053, 1054, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1071, 1078, 1094, 1095, 1096, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1170, 1175, 1176, 1177, 1179, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1191, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1217, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1261, 1263, 1266, 1267, 1269, 1270, 1271, 1273, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1287, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1305, 1306, 1308, 1309, 1310, 1312, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1332, 1333, 1334, 1336, 1341, 1342, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1386, 1387, 1388, 1390, 1391, 1393, 1395, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1445, 1446, 1447, 1448, 1450, 1453, 1454, 1455, 1457, 1458, 1463, 1464, 1465, 1468, 1469, 1472, 1473, 1476, 1477, 1481, 1482, 1483, 1484, 1491, 1492, 1493, 1495, 1501, 1502, 1503, 1505, 1510, 1511, 1512, 1514, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1532, 1535, 1536, 1537, 1539, 1550, 1551, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1572, 1573, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1597, 1598, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1675, 1676, 1680, 1684, 1685, 1686, 1688, 1689, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1817, 1818, 1819, 1822, 1823, 1824, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1841, 1843, 1844, 1845, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967], "structur": [39, 43, 94, 97, 98, 99, 100, 144, 146, 155, 159, 160, 161, 167, 168, 1258, 1285, 1796, 1810, 1980, 1981, 1995, 1996], "rst": 39, "main": [39, 42, 55, 56, 72, 73, 120, 121, 143, 146, 153, 156, 237, 258, 259, 305, 307, 309, 310, 312, 314, 844, 849, 850, 860, 863, 1053, 1054, 1219, 1222, 1223, 1226, 1555, 1571, 1574, 1576, 1579, 1670, 1671, 1672, 1673, 1674, 1979, 1981, 1982, 1987], "submodul": [39, 41, 42, 43, 45, 94, 143, 147, 149, 155, 156, 160, 163, 164, 168, 196, 234, 236, 237, 323, 418, 453, 1257, 1258, 1451, 1489, 1555, 1695, 1711, 1792, 1796, 1816, 1821, 1848, 1895, 1911, 1957, 1968, 1969, 1990, 1993, 1995, 1996, 1997, 2007, 2019, 2020, 2023, 2024, 2025, 2031, 2032], "skip": [39, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 147, 156, 160, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 267, 269, 271, 292, 294, 296, 300, 302, 304, 318, 319, 321, 335, 337, 339, 345, 347, 349, 403, 405, 407, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 821, 823, 839, 841, 843, 933, 937, 1005, 1007, 1009, 1155, 1157, 1159, 1175, 1177, 1179, 1187, 1189, 1191, 1206, 1207, 1209, 1211, 1212, 1214, 1247, 1248, 1250, 1252, 1253, 1255, 1259, 1261, 1263, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1463, 1465, 1481, 1482, 1484, 1528, 1530, 1532, 1535, 1537, 1539, 1550, 1552, 1554, 1556, 1558, 1560, 1561, 1563, 1565, 1587, 1589, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1609, 1611, 1617, 1619, 1621, 1642, 1644, 1646, 1670, 1671, 1673, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1727, 1731, 1732, 1734, 1736, 1747, 1749, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1782, 1783, 1785, 1796, 1810, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1859, 1861, 1863, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1896, 1898, 1900, 1912, 1914, 1916, 1917, 1919, 1921, 1930, 1932, 1938, 1940, 1942, 1943, 1945, 1952, 1953, 1955, 1958, 1960, 1962, 1963, 1965, 1967, 2086, 2089], "read": [39, 41, 42, 63, 76, 77, 97, 98, 111, 124, 125, 160, 162, 928, 929, 930, 931, 932, 1071, 1078, 1711, 1747, 1748, 1749, 1750, 1751, 1969, 1981], "partial_sourc": 39, "conf": 39, "copi": [39, 43, 55, 56, 57, 58, 59, 60, 63, 64, 65, 76, 77, 97, 98, 103, 104, 105, 106, 107, 108, 111, 112, 113, 124, 125, 143, 145, 148, 151, 158, 159, 164, 180, 181, 237, 242, 243, 244, 245, 249, 250, 251, 261, 264, 323, 330, 331, 332, 333, 334, 418, 444, 445, 446, 447, 448, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 891, 909, 1071, 1072, 1073, 1074, 1125, 1128, 1135, 1136, 1137, 1138, 1139, 1192, 1193, 1258, 1407, 1409, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1711, 1747, 1748, 1749, 1750, 1751, 1796, 1798, 1895, 1906, 1909], "5": [39, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 145, 146, 150, 154, 159, 160, 166, 167, 168, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 221, 223, 224, 227, 229, 230, 231, 232, 233, 237, 267, 268, 269, 270, 271, 272, 275, 277, 278, 280, 282, 285, 297, 298, 300, 303, 315, 317, 318, 322, 323, 335, 336, 337, 338, 339, 340, 342, 343, 345, 347, 348, 349, 358, 360, 363, 366, 386, 388, 390, 391, 394, 403, 406, 407, 418, 425, 426, 427, 428, 429, 437, 441, 444, 445, 446, 447, 453, 454, 456, 457, 458, 464, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 506, 508, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 539, 542, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 563, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 629, 630, 632, 634, 636, 637, 638, 644, 645, 646, 647, 648, 654, 656, 657, 659, 661, 664, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 704, 705, 706, 707, 708, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 729, 731, 732, 733, 739, 741, 743, 744, 745, 747, 749, 751, 753, 754, 755, 757, 758, 759, 760, 762, 763, 764, 765, 767, 768, 769, 770, 772, 784, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 814, 815, 817, 824, 825, 826, 827, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 854, 855, 856, 857, 858, 870, 872, 874, 876, 877, 878, 879, 880, 881, 883, 886, 888, 889, 890, 891, 895, 897, 899, 900, 901, 902, 903, 905, 906, 907, 908, 910, 913, 916, 917, 918, 919, 920, 921, 922, 928, 929, 930, 931, 932, 933, 935, 937, 943, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 961, 962, 963, 964, 965, 968, 969, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1059, 1060, 1061, 1062, 1063, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1078, 1081, 1082, 1083, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1109, 1110, 1112, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1135, 1137, 1145, 1146, 1147, 1148, 1149, 1155, 1157, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1175, 1176, 1178, 1182, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1252, 1253, 1254, 1255, 1256, 1258, 1274, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1287, 1289, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1315, 1317, 1318, 1319, 1320, 1323, 1328, 1341, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1410, 1411, 1417, 1418, 1420, 1421, 1423, 1426, 1438, 1450, 1451, 1453, 1455, 1456, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1476, 1478, 1479, 1481, 1482, 1484, 1485, 1487, 1489, 1491, 1493, 1494, 1495, 1501, 1503, 1504, 1505, 1510, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1526, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1559, 1561, 1563, 1564, 1565, 1566, 1569, 1571, 1572, 1573, 1574, 1576, 1579, 1587, 1590, 1591, 1597, 1598, 1599, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1622, 1625, 1627, 1630, 1632, 1633, 1634, 1635, 1636, 1642, 1643, 1645, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1695, 1706, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1722, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1765, 1767, 1768, 1769, 1771, 1772, 1776, 1777, 1778, 1780, 1781, 1782, 1783, 1785, 1786, 1796, 1798, 1800, 1803, 1804, 1805, 1806, 1808, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1825, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1848, 1854, 1856, 1857, 1864, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1884, 1885, 1886, 1887, 1888, 1889, 1895, 1896, 1897, 1899, 1900, 1901, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1957, 1958, 1961, 1963, 1966, 2007, 2018, 2072, 2075, 2076, 2077, 2080, 2081, 2090, 2095, 2100, 2101, 2103], "create_rst_fil": 39, "filter": [39, 63, 70, 71, 111, 118, 119, 814, 815, 816, 817, 818, 844, 847, 848, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1038, 1041, 1047, 1109, 1110, 1111, 1112, 1113, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1534, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014], "recurs": [39, 42, 50, 51, 52, 53, 54, 97, 98, 101, 102, 143, 146, 155, 168, 181, 323, 368, 369, 371, 372, 418, 431, 432, 1258, 1313, 1314, 1796, 1797, 1798, 1807, 1808, 1809], "repres": [39, 55, 56, 61, 62, 63, 72, 73, 109, 110, 111, 120, 121, 162, 166, 237, 282, 283, 285, 292, 295, 323, 362, 453, 464, 465, 466, 467, 468, 469, 472, 479, 480, 481, 482, 483, 494, 495, 496, 497, 498, 539, 540, 541, 542, 543, 734, 735, 736, 737, 738, 759, 760, 761, 762, 763, 891, 903, 968, 969, 970, 971, 1033, 1036, 1053, 1056, 1071, 1088, 1161, 1164, 1451, 1480, 1488, 1489, 1535, 1538, 1555, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1978, 1979, 1982, 1997, 1998, 2001, 2002, 2005, 2090, 2094, 2097], "its": [39, 41, 42, 43, 50, 53, 54, 57, 58, 76, 77, 97, 98, 105, 106, 112, 113, 124, 125, 147, 148, 151, 156, 158, 159, 160, 161, 162, 169, 181, 323, 335, 336, 337, 338, 339, 352, 353, 354, 356, 357, 418, 443, 891, 914, 1216, 1218, 1258, 1269, 1271, 1308, 1310, 1312, 1427, 1555, 1602, 1605, 1711, 1727, 1728, 1729, 1730, 1731, 1747, 1750, 1752, 1753, 1754, 1755, 1756, 1772, 1776, 1796, 1803, 1968, 1980, 1981, 1987, 2043, 2045, 2054], "overal": [39, 146, 148, 149, 151, 169, 1489, 1528, 1531, 1977, 1979, 1980, 1981], "markup": 39, "6": [39, 45, 48, 49, 55, 56, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 94, 99, 100, 103, 104, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 145, 146, 150, 160, 162, 164, 166, 167, 168, 196, 198, 201, 204, 207, 224, 227, 237, 266, 267, 268, 269, 270, 271, 282, 285, 300, 303, 318, 322, 323, 335, 338, 340, 343, 358, 360, 363, 366, 418, 452, 453, 454, 455, 456, 457, 458, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 499, 502, 503, 504, 505, 506, 507, 508, 514, 515, 516, 517, 518, 519, 522, 524, 526, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 542, 544, 545, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 569, 571, 573, 574, 577, 579, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 599, 600, 602, 604, 605, 607, 609, 612, 614, 616, 617, 618, 619, 620, 622, 634, 636, 637, 644, 646, 647, 648, 654, 657, 664, 667, 669, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 689, 690, 691, 693, 694, 695, 697, 704, 707, 714, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 739, 742, 744, 745, 747, 749, 750, 751, 752, 753, 754, 758, 759, 763, 769, 770, 772, 773, 789, 790, 792, 794, 795, 797, 799, 800, 802, 824, 825, 826, 827, 839, 840, 841, 842, 843, 854, 856, 857, 858, 870, 872, 874, 876, 877, 878, 879, 880, 886, 889, 891, 895, 897, 902, 903, 908, 914, 917, 918, 919, 920, 921, 922, 928, 929, 930, 931, 932, 933, 935, 937, 961, 962, 963, 964, 965, 968, 969, 970, 971, 987, 988, 989, 990, 991, 992, 993, 995, 1033, 1034, 1035, 1036, 1037, 1038, 1042, 1044, 1045, 1048, 1050, 1052, 1053, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1078, 1082, 1083, 1088, 1089, 1092, 1093, 1099, 1100, 1101, 1102, 1103, 1114, 1115, 1116, 1117, 1118, 1120, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1145, 1147, 1149, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1175, 1176, 1178, 1192, 1193, 1201, 1202, 1204, 1205, 1206, 1207, 1209, 1216, 1217, 1218, 1227, 1228, 1229, 1230, 1231, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1246, 1258, 1275, 1277, 1278, 1280, 1283, 1287, 1289, 1295, 1297, 1298, 1299, 1315, 1317, 1318, 1319, 1320, 1323, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1410, 1411, 1417, 1421, 1423, 1426, 1438, 1451, 1453, 1455, 1456, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1471, 1476, 1479, 1487, 1489, 1491, 1492, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1510, 1513, 1515, 1518, 1523, 1526, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1561, 1563, 1564, 1565, 1566, 1567, 1569, 1571, 1572, 1573, 1574, 1576, 1579, 1587, 1589, 1590, 1591, 1602, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1627, 1630, 1642, 1643, 1645, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1695, 1696, 1698, 1699, 1700, 1701, 1703, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1717, 1720, 1722, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1735, 1737, 1738, 1740, 1742, 1745, 1752, 1755, 1757, 1758, 1760, 1762, 1765, 1767, 1768, 1770, 1772, 1776, 1777, 1780, 1781, 1782, 1783, 1785, 1786, 1796, 1798, 1808, 1815, 1816, 1817, 1819, 1820, 1821, 1822, 1825, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1856, 1858, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1886, 1888, 1889, 1895, 1896, 1897, 1899, 1901, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1929, 1930, 1932, 1933, 1934, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1997, 2000, 2004], "extract": [39, 63, 111, 158, 161, 1071, 1090, 1206, 1207, 1208, 1209, 1210, 1977, 1981, 1982, 1987], "get_functions_and_class": 39, "doctr": 39, "7": [39, 43, 45, 46, 47, 48, 49, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 99, 100, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 146, 147, 150, 155, 157, 160, 196, 204, 207, 209, 210, 214, 217, 237, 272, 275, 323, 363, 366, 374, 377, 418, 425, 429, 430, 453, 454, 457, 469, 470, 471, 472, 473, 479, 481, 499, 500, 502, 503, 504, 505, 506, 507, 508, 514, 515, 516, 517, 518, 519, 522, 524, 525, 527, 529, 532, 539, 541, 542, 543, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 567, 574, 577, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 644, 646, 647, 648, 654, 656, 658, 664, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 689, 690, 694, 695, 697, 704, 706, 719, 720, 721, 722, 723, 724, 725, 726, 727, 729, 732, 739, 741, 742, 743, 754, 758, 759, 763, 764, 768, 769, 771, 773, 779, 780, 782, 789, 792, 794, 797, 799, 802, 804, 806, 808, 809, 812, 814, 815, 817, 824, 825, 826, 827, 839, 840, 841, 842, 843, 844, 846, 848, 854, 856, 857, 858, 865, 866, 867, 868, 869, 870, 872, 874, 876, 877, 878, 879, 880, 891, 892, 895, 896, 897, 903, 904, 917, 918, 919, 920, 921, 922, 928, 929, 930, 931, 932, 961, 963, 965, 966, 967, 968, 969, 970, 971, 978, 980, 987, 988, 989, 990, 991, 992, 993, 995, 1005, 1008, 1010, 1011, 1012, 1013, 1014, 1029, 1031, 1038, 1040, 1041, 1042, 1044, 1045, 1053, 1057, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1078, 1082, 1083, 1088, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1114, 1115, 1116, 1117, 1118, 1120, 1122, 1124, 1145, 1147, 1149, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1175, 1176, 1177, 1178, 1179, 1201, 1202, 1204, 1205, 1206, 1207, 1209, 1227, 1228, 1229, 1230, 1231, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1246, 1258, 1275, 1278, 1280, 1283, 1295, 1296, 1297, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1411, 1417, 1421, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1476, 1479, 1487, 1489, 1491, 1492, 1493, 1494, 1495, 1515, 1518, 1523, 1526, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1552, 1553, 1554, 1555, 1561, 1563, 1564, 1565, 1566, 1567, 1569, 1571, 1572, 1573, 1574, 1576, 1579, 1587, 1590, 1591, 1602, 1605, 1607, 1611, 1612, 1615, 1627, 1630, 1642, 1643, 1645, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1727, 1728, 1729, 1730, 1731, 1732, 1735, 1757, 1760, 1767, 1770, 1772, 1776, 1782, 1783, 1785, 1786, 1796, 1798, 1805, 1816, 1817, 1819, 1820, 1821, 1822, 1825, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1845, 1846, 1847, 1848, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1879, 1885, 1886, 1887, 1888, 1889, 1895, 1896, 1897, 1898, 1900, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1930, 1932, 1933, 1938, 1940, 1942, 1947, 1951, 1952, 1953, 1954, 1955, 1956], "readm": [39, 181], "module_nam": 39, "copy_readme_to_rst": 39, "tabl": [39, 148, 158, 1981, 2072, 2080, 2086, 2087], "content": [39, 41, 97, 98, 157, 164, 167], "toc": 39, "append": [39, 97, 98, 152, 160, 164, 167, 453, 509, 512, 865, 868, 891, 896, 1555, 1576, 1579, 1602, 1605, 1711, 1727, 1730], "append_toctree_to_rst": 39, "9": [39, 45, 48, 49, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 80, 81, 84, 85, 86, 87, 88, 89, 94, 99, 100, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 128, 129, 132, 133, 134, 135, 136, 137, 146, 150, 160, 167, 168, 196, 198, 201, 323, 353, 354, 356, 357, 363, 366, 374, 376, 453, 459, 460, 469, 470, 471, 472, 473, 474, 475, 478, 479, 482, 494, 495, 496, 498, 499, 500, 502, 504, 505, 507, 519, 522, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 579, 581, 582, 583, 594, 597, 609, 613, 619, 620, 621, 623, 624, 626, 627, 628, 629, 631, 632, 633, 654, 655, 657, 659, 661, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 689, 690, 691, 693, 699, 702, 704, 706, 707, 708, 719, 721, 722, 723, 724, 727, 739, 741, 743, 744, 745, 746, 747, 748, 749, 751, 753, 769, 770, 771, 772, 773, 777, 778, 789, 791, 794, 796, 799, 801, 802, 804, 805, 806, 807, 808, 809, 810, 812, 854, 857, 858, 870, 872, 874, 876, 877, 878, 879, 880, 891, 898, 903, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 968, 969, 970, 971, 987, 988, 989, 990, 991, 1033, 1035, 1037, 1038, 1039, 1040, 1042, 1044, 1045, 1046, 1064, 1065, 1066, 1067, 1068, 1071, 1074, 1076, 1078, 1082, 1091, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1125, 1126, 1127, 1128, 1129, 1145, 1147, 1149, 1175, 1177, 1179, 1192, 1193, 1211, 1213, 1215, 1237, 1238, 1240, 1258, 1280, 1283, 1295, 1296, 1297, 1300, 1303, 1315, 1318, 1347, 1348, 1350, 1352, 1353, 1354, 1355, 1368, 1371, 1376, 1379, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1411, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1489, 1491, 1492, 1493, 1494, 1495, 1501, 1502, 1504, 1515, 1518, 1523, 1526, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1555, 1561, 1564, 1565, 1566, 1569, 1576, 1579, 1587, 1590, 1602, 1605, 1607, 1610, 1612, 1615, 1627, 1630, 1642, 1643, 1645, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1711, 1712, 1713, 1715, 1732, 1735, 1752, 1755, 1757, 1759, 1760, 1767, 1770, 1782, 1783, 1785, 1786, 1796, 1798, 1803, 1805, 1808, 1821, 1822, 1825, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1869, 1873, 1874, 1875, 1877, 1879, 1885, 1886, 1888, 1889, 1895, 1896, 1897, 1906, 1908, 1909, 1910, 1911, 1917, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1930, 1932, 1938, 1939, 1941, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1977, 2025, 2026, 2027], "index": [39, 55, 56, 63, 64, 65, 76, 77, 82, 83, 84, 85, 86, 87, 97, 98, 103, 104, 111, 112, 113, 124, 125, 130, 131, 132, 133, 134, 135, 146, 147, 155, 159, 160, 166, 236, 237, 258, 259, 282, 283, 284, 285, 286, 418, 440, 928, 929, 930, 931, 932, 1071, 1078, 1086, 1087, 1090, 1152, 1153, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1205, 1206, 1210, 1227, 1231, 1258, 1264, 1320, 1321, 1322, 1323, 1324, 1328, 1386, 1388, 1390, 1391, 1393, 1395, 1451, 1486, 1711, 1747, 1748, 1749, 1750, 1751, 1767, 1770, 1796, 1799, 1800, 1801, 1804, 1805, 1806, 1812, 1814, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1864, 1867, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1972, 1974, 1981, 2043, 2048, 2086, 2089], "create_index_rst": 39, "14": [39, 57, 58, 61, 62, 63, 70, 71, 80, 81, 88, 89, 105, 106, 109, 110, 111, 112, 113, 120, 121, 124, 125, 128, 129, 146, 150, 160, 323, 330, 332, 333, 334, 363, 366, 374, 375, 453, 459, 461, 462, 463, 479, 482, 489, 490, 491, 492, 493, 524, 525, 544, 545, 547, 548, 644, 647, 659, 661, 679, 681, 704, 707, 724, 728, 734, 736, 738, 769, 773, 804, 805, 806, 807, 808, 809, 812, 854, 857, 876, 877, 878, 879, 880, 923, 925, 927, 928, 929, 930, 931, 932, 987, 988, 989, 990, 991, 1038, 1039, 1040, 1042, 1047, 1071, 1076, 1078, 1082, 1109, 1110, 1112, 1237, 1238, 1240, 1258, 1407, 1409, 1410, 1451, 1453, 1456, 1489, 1491, 1494, 1528, 1529, 1531, 1550, 1553, 1555, 1576, 1579, 1627, 1630, 1670, 1671, 1673, 1674, 1711, 1782, 1783, 1785, 1786, 1827, 1828, 1831, 1832, 1833, 1834, 1837, 1838, 1839, 1874, 1875, 1879, 1911, 1917, 1918, 1920, 1922, 1923, 1925], "\u03c0": [39, 236, 453, 459, 462, 474, 477, 484, 487, 489, 492], "namespac": [39, 41, 148, 156, 158, 159, 161, 164, 169, 2043, 2059], "remov": [39, 41, 72, 73, 97, 98, 120, 121, 145, 147, 148, 151, 155, 160, 162, 169, 1451, 1486, 1555, 1576, 1579, 1602, 1605, 1670, 1671, 1672, 1673, 1674, 1711, 1762, 1765, 1792, 1793, 1794, 1796, 1811, 1981], "here": [40, 41, 42, 43, 143, 146, 147, 150, 154, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 180, 181, 453, 719, 722, 1981, 1982, 2019, 2021], "resours": 40, "climb": 40, "steep": 40, "curv": 40, "respect": [40, 41, 43, 55, 56, 61, 62, 63, 66, 67, 109, 110, 111, 114, 115, 144, 146, 148, 150, 154, 158, 161, 237, 282, 283, 285, 453, 454, 457, 469, 472, 489, 492, 499, 502, 509, 512, 514, 517, 519, 522, 524, 527, 549, 552, 554, 557, 579, 582, 584, 587, 589, 592, 614, 617, 619, 622, 644, 647, 649, 652, 659, 662, 664, 667, 679, 682, 689, 692, 714, 715, 716, 717, 718, 749, 753, 777, 778, 891, 903, 968, 969, 970, 971, 1064, 1065, 1066, 1067, 1068, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1487, 1489, 1520, 1521, 1555, 1637, 1640, 1652, 1656, 1792, 1793, 1794, 1795, 1977, 1987, 1997, 2000, 2043, 2061, 2062], "behaviour": [40, 41, 43, 142, 143, 144, 146, 148, 151, 152, 154, 157, 158, 160, 161, 166, 891, 909, 1135, 1138], "frontend": [40, 43, 50, 53, 142, 148, 152, 160, 161, 162, 163, 165, 1258, 1397, 1968, 1981, 2043, 2059, 2060, 2064, 2068, 2086, 2089], "refer": [40, 41, 42, 43, 63, 76, 77, 88, 89, 90, 91, 111, 114, 115, 124, 125, 136, 137, 138, 139, 143, 147, 148, 154, 155, 158, 159, 160, 181, 237, 258, 259, 453, 569, 572, 634, 637, 844, 849, 850, 860, 863, 891, 912, 928, 929, 930, 931, 932, 1053, 1054, 1071, 1078, 1182, 1185, 1219, 1222, 1223, 1226, 1451, 1453, 1456, 1457, 1459, 1460, 1555, 1571, 1574, 1680, 1684, 1711, 1747, 1748, 1749, 1750, 1751, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1981, 2007, 2017], "realpython": 40, "pyn": 40, "kind": [40, 63, 158, 160, 162, 164, 181, 323, 363, 366, 374, 377, 379, 453, 699, 702, 997, 998, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951, 2072, 2075, 2080, 2086, 2087, 2089], "stack": [40, 45, 48, 49, 72, 73, 76, 77, 97, 98, 111, 120, 121, 124, 125, 143, 164, 237, 305, 309, 310, 314, 881, 883, 884, 885, 992, 995, 1071, 1077, 1083, 1093, 1242, 1243, 1245, 1246, 1258, 1339, 1397, 1403, 1444, 1555, 1566, 1569, 1576, 1579, 1581, 1582, 1585, 1587, 1590, 1597, 1600, 1602, 1605, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1632, 1635, 1637, 1640, 1642, 1645, 1652, 1656, 1657, 1661, 1670, 1671, 1672, 1673, 1674, 1711, 1771, 1796, 1797, 1807, 1808, 1969, 1977, 1979, 1986, 1987, 2007, 2016], "overflow": [40, 148, 453, 469, 472, 1555, 1642, 1645, 1911, 1947, 1951], "platform": [40, 42, 1979, 1983, 1985], "sort": [40, 63, 87, 94, 97, 98, 99, 100, 111, 135, 147, 161, 891, 914, 1125, 1126, 1127, 1128, 1129, 1193, 1216, 1218, 1555, 1581, 1582, 1585, 1652, 1656, 1657, 1661, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1910, 2090, 2092], "inform": [40, 41, 42, 43, 66, 67, 114, 115, 143, 146, 147, 152, 160, 323, 363, 366, 374, 377, 1258, 1264, 1451, 1481, 1482, 1483, 1484, 1485, 1984], "pilot": 40, "bit": [40, 41, 42, 146, 147, 148, 150, 155, 164, 166, 323, 362, 363, 366, 374, 377, 453, 504, 507, 509, 512, 519, 522, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951, 1987], "thei": [40, 41, 43, 63, 72, 73, 80, 81, 97, 98, 120, 121, 128, 129, 142, 143, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 181, 323, 401, 891, 899, 914, 943, 944, 946, 1216, 1218, 1555, 1675, 1676, 1677, 1678, 1679, 1792, 1793, 1794, 1821, 1822, 1823, 1824, 1825, 1826, 1969, 1978, 1981, 1983, 1984, 1987, 1988, 2031, 2032, 2034, 2035], "done": [40, 41, 42, 43, 143, 150, 153, 158, 160, 167, 1555, 1587, 1590, 1981], "faster": [40, 234, 235, 1555, 1652, 1656, 1968, 1983, 1986], "head": [40, 42, 158, 1489, 1545, 1548, 1969, 2007, 2018], "stuck": [40, 41], "spell": 40, "check": [40, 41, 42, 43, 50, 51, 52, 53, 54, 57, 58, 64, 65, 97, 98, 105, 106, 112, 113, 143, 146, 147, 150, 152, 156, 158, 160, 161, 163, 164, 166, 167, 168, 323, 350, 351, 368, 369, 371, 372, 380, 386, 387, 389, 390, 396, 399, 417, 418, 431, 432, 438, 452, 1258, 1269, 1271, 1272, 1273, 1305, 1307, 1313, 1314, 1331, 1341, 1342, 1343, 1344, 1345, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1400, 1417, 1419, 1421, 1441, 1445, 1446, 1447, 1448, 1449, 1555, 1582, 1585, 1587, 1590, 1796, 1797, 1798, 1807, 1808, 1809, 1969, 2019, 2021, 2034, 2037, 2038, 2039], "though": [40, 41, 43, 148, 151, 155, 157, 158, 162, 167, 181], "sound": [40, 147, 163], "odd": [40, 143, 453, 699, 702, 1071, 1088, 1161, 1164], "peopl": [40, 42, 43, 142, 1981, 1983], "action": [40, 147, 150, 160], "integr": [40, 42, 57, 58, 63, 105, 106, 109, 110, 142, 323, 330, 331, 332, 333, 334, 891, 914, 1216, 1217, 1218, 1979, 1981, 1983, 1984, 1985], "keep": [40, 41, 42, 43, 76, 77, 97, 98, 124, 125, 143, 146, 147, 152, 158, 160, 161, 162, 167, 169, 1711, 1782, 1783, 1784, 1785, 1786], "explain": [41, 42, 43, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 1969, 1977, 1984, 1987], "frequent": [41, 43, 1981], "wherebi": [41, 1796, 1809, 1978], "outlin": [41, 42, 43, 142, 146, 148, 151, 155, 157, 158, 160], "broad": [41, 1983], "individu": [41, 43, 143, 147, 148, 155, 157, 158, 1981, 1984, 1987, 1988], "sub": [41, 43, 63, 76, 77, 94, 97, 98, 99, 100, 101, 102, 109, 110, 111, 112, 113, 124, 125, 142, 146, 152, 158, 159, 160, 166, 167, 168, 674, 676, 678, 876, 879, 987, 990, 1071, 1076, 1082, 1092, 1140, 1141, 1142, 1143, 1144, 1201, 1203, 1237, 1241, 1295, 1299, 1300, 1304, 1320, 1324, 1555, 1576, 1579, 1711, 1757, 1758, 1759, 1760, 1761, 1792, 1793, 1794, 1795, 1969, 1977, 1995, 1996], "distribut": [41, 63, 74, 75, 80, 81, 111, 122, 123, 128, 129, 149, 181, 819, 820, 821, 822, 823, 824, 825, 826, 827, 870, 871, 872, 873, 874, 875, 958, 959, 960, 1038, 1043, 1069, 1070, 1171, 1172, 1173, 1174, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1981, 1984, 1997, 2002, 2005, 2007, 2015, 2019, 2020], "across": [41, 82, 83, 97, 98, 112, 113, 130, 131, 143, 146, 148, 150, 152, 154, 155, 158, 160, 162, 418, 441, 442, 1258, 1266, 1268, 1341, 1343, 1345, 1796, 1803, 1848, 1849, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1979, 1981, 1986], "todo": [41, 147, 148, 158, 160, 1995, 1996], "detail": [41, 43, 76, 77, 84, 85, 124, 125, 132, 133, 143, 145, 146, 147, 154, 155, 156, 158, 159, 160, 161, 164, 166, 167, 168, 237, 261, 264, 1767, 1768, 1769, 1771, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1983, 1987, 2019, 2021], "select": [41, 42, 43, 63, 88, 89, 111, 136, 137, 157, 160, 164, 166, 169, 181, 1053, 1058, 1071, 1090, 1130, 1133, 1206, 1207, 1208, 1209, 1210, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1981, 1984, 1985], "alloc": [41, 43, 55, 56, 57, 58, 105, 106, 181, 237, 305, 307, 309, 310, 312, 314, 323, 330, 331, 332, 333, 334], "describ": [41, 43, 88, 89, 147, 158, 160, 164, 169, 1911, 1922, 1923, 1925, 1938, 1941, 1947, 1951, 1981], "explan": [41, 43, 146, 151, 154, 158, 166], "instead": [41, 42, 43, 61, 62, 109, 110, 143, 146, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 167, 181, 418, 422, 453, 714, 715, 716, 717, 718, 1979, 1981, 1987, 1988, 2019, 2022], "focu": [41, 1979, 1980, 1983, 1988], "alwai": [41, 43, 57, 58, 76, 77, 105, 106, 124, 125, 144, 145, 146, 148, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 181, 323, 330, 331, 332, 333, 334, 453, 469, 472, 891, 899, 943, 946, 1258, 1357, 1360, 1711, 1747, 1748, 1749, 1750, 1751, 2019, 2021, 2090, 2096], "NOT": [41, 453, 654, 657], "pypi": [41, 42, 181], "instruct": [41, 42, 143, 152, 159, 160, 1979, 1982, 1985, 1987], "static": [41, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 150, 151, 155, 156, 158, 181, 198, 202, 204, 208, 209, 213, 214, 218, 219, 223, 224, 228, 229, 233, 234, 235, 237, 249, 251, 267, 271, 277, 281, 292, 296, 300, 304, 318, 319, 335, 339, 340, 344, 345, 349, 386, 390, 403, 407, 425, 429, 454, 458, 459, 463, 464, 468, 469, 473, 474, 478, 479, 483, 484, 488, 489, 493, 494, 498, 499, 503, 504, 508, 509, 513, 514, 518, 519, 523, 524, 528, 529, 533, 534, 538, 539, 543, 544, 548, 549, 553, 554, 558, 559, 563, 564, 568, 569, 573, 574, 578, 579, 583, 584, 588, 589, 593, 594, 598, 599, 603, 604, 608, 609, 613, 614, 618, 619, 623, 624, 628, 629, 633, 634, 638, 639, 643, 644, 648, 649, 653, 654, 658, 659, 663, 664, 668, 669, 673, 674, 678, 679, 683, 684, 688, 689, 693, 694, 698, 699, 703, 704, 708, 709, 713, 714, 718, 719, 723, 724, 728, 729, 733, 739, 743, 744, 748, 749, 750, 754, 755, 759, 760, 764, 765, 769, 770, 779, 783, 784, 788, 789, 793, 794, 798, 799, 803, 804, 808, 809, 813, 814, 816, 818, 819, 823, 824, 827, 828, 831, 834, 838, 839, 843, 854, 858, 865, 869, 870, 874, 876, 880, 881, 885, 886, 890, 917, 921, 923, 927, 928, 932, 933, 937, 938, 942, 943, 947, 948, 952, 953, 957, 961, 965, 974, 977, 978, 981, 982, 986, 987, 991, 992, 996, 997, 1001, 1005, 1009, 1015, 1019, 1020, 1024, 1025, 1028, 1029, 1032, 1033, 1037, 1048, 1052, 1059, 1063, 1064, 1068, 1099, 1103, 1104, 1108, 1109, 1111, 1113, 1114, 1118, 1120, 1124, 1125, 1129, 1130, 1134, 1135, 1139, 1140, 1144, 1145, 1149, 1155, 1159, 1161, 1165, 1166, 1170, 1175, 1177, 1179, 1182, 1186, 1187, 1191, 1206, 1207, 1211, 1212, 1227, 1228, 1233, 1234, 1237, 1238, 1242, 1243, 1247, 1248, 1252, 1253, 1259, 1263, 1269, 1273, 1275, 1279, 1290, 1294, 1308, 1312, 1315, 1319, 1347, 1351, 1352, 1356, 1363, 1367, 1368, 1372, 1376, 1380, 1386, 1390, 1391, 1395, 1407, 1411, 1412, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1433, 1434, 1445, 1446, 1481, 1482, 1491, 1495, 1501, 1505, 1510, 1514, 1523, 1527, 1528, 1532, 1535, 1539, 1550, 1554, 1556, 1560, 1561, 1565, 1587, 1591, 1602, 1606, 1607, 1611, 1617, 1621, 1642, 1646, 1670, 1671, 1675, 1676, 1685, 1686, 1696, 1700, 1701, 1705, 1706, 1710, 1712, 1716, 1717, 1721, 1722, 1726, 1727, 1731, 1732, 1736, 1737, 1741, 1742, 1746, 1747, 1751, 1752, 1756, 1757, 1761, 1762, 1766, 1767, 1771, 1772, 1773, 1777, 1778, 1782, 1783, 1787, 1788, 1822, 1826, 1827, 1831, 1832, 1836, 1837, 1841, 1843, 1847, 1849, 1853, 1854, 1858, 1859, 1863, 1864, 1868, 1869, 1870, 1875, 1876, 1880, 1881, 1885, 1886, 1896, 1900, 1901, 1905, 1906, 1910, 1912, 1916, 1917, 1921, 1938, 1942, 1952, 1953, 1958, 1962, 1963, 1967, 1980, 1981, 1982, 2019, 2020], "method": [41, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 148, 150, 151, 153, 154, 155, 156, 160, 161, 164, 165, 168, 169, 181, 198, 199, 200, 202, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 233, 237, 242, 243, 249, 250, 251, 253, 254, 261, 262, 264, 267, 268, 269, 271, 277, 278, 279, 281, 282, 283, 287, 288, 292, 293, 294, 296, 300, 301, 302, 303, 304, 305, 307, 310, 312, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 363, 366, 386, 387, 388, 390, 403, 404, 405, 407, 425, 426, 427, 429, 444, 445, 446, 447, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 819, 820, 821, 823, 824, 825, 827, 828, 829, 831, 834, 835, 836, 838, 839, 840, 841, 843, 854, 855, 856, 858, 860, 861, 862, 865, 866, 867, 869, 870, 871, 872, 874, 876, 877, 878, 880, 881, 882, 883, 885, 886, 888, 890, 917, 918, 919, 921, 923, 924, 925, 927, 928, 929, 930, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 944, 945, 947, 948, 949, 950, 952, 953, 954, 955, 957, 958, 959, 961, 962, 963, 965, 974, 975, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1048, 1049, 1050, 1052, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1094, 1095, 1096, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1149, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1175, 1176, 1177, 1179, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1191, 1201, 1203, 1204, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1217, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1261, 1263, 1266, 1267, 1269, 1270, 1271, 1273, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1304, 1305, 1306, 1308, 1309, 1310, 1312, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1324, 1332, 1333, 1334, 1336, 1341, 1342, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1445, 1446, 1447, 1448, 1451, 1453, 1454, 1455, 1457, 1458, 1463, 1464, 1465, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1480, 1481, 1482, 1483, 1484, 1486, 1488, 1489, 1491, 1492, 1493, 1495, 1501, 1502, 1503, 1505, 1510, 1511, 1512, 1514, 1515, 1518, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1532, 1535, 1536, 1537, 1539, 1550, 1551, 1552, 1554, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1565, 1571, 1572, 1573, 1587, 1588, 1589, 1591, 1597, 1598, 1599, 1602, 1604, 1606, 1607, 1608, 1609, 1611, 1617, 1618, 1619, 1621, 1622, 1624, 1626, 1632, 1634, 1636, 1642, 1643, 1644, 1646, 1657, 1661, 1670, 1671, 1672, 1673, 1675, 1676, 1677, 1678, 1685, 1686, 1688, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1796, 1808, 1809, 1810, 1817, 1818, 1819, 1822, 1823, 1824, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1841, 1843, 1844, 1845, 1847, 1848, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1982, 1988, 1995, 1997, 2002, 2007, 2018, 2019, 2020, 2021, 2043, 2060, 2062, 2116, 2122], "revers": [41, 45, 48, 49, 63, 64, 65, 72, 73, 88, 89, 94, 99, 100, 111, 120, 121, 136, 137, 146, 147, 148, 150, 151, 158, 162, 169, 181, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 1071, 1079, 1080, 1258, 1287, 1288, 1289, 1555, 1675, 1676, 1677, 1678, 1679, 1711, 1732, 1735, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "familiar": [41, 42, 152], "yourself": [41, 43, 158, 160, 162, 180], "hypothesi": [41, 43, 143, 147, 156, 2072, 2075, 2090, 2092, 2093, 2094, 2116, 2121], "fail": [41, 42, 43, 143, 147, 148, 150, 153, 158, 159, 2034, 2035, 2041], "els": [41, 43, 64, 65, 80, 81, 128, 129, 143, 145, 148, 152, 155, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 181, 323, 352, 353, 354, 356, 357, 819, 822, 1171, 1172, 1258, 1269, 1272, 1287, 1288, 1289, 1305, 1306, 1307, 1796, 1807, 1810, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1982, 2034, 2035, 2041], "cover": [41, 143, 150, 151, 155, 156, 160, 162, 163], "lambda": [41, 164, 167, 196, 197, 203, 1258, 1287, 1289, 1451, 1462, 1467, 1487, 1489, 1545, 1548, 1796, 1804, 1805], "direct": [41, 63, 158, 162, 168, 169, 180, 865, 868, 891, 896, 911, 915, 933, 936, 938, 941, 1071, 1079, 1080, 1089, 1155, 1156, 1158, 1175, 1178, 1247, 1249, 1251, 1895, 1906, 1909, 1977, 1981, 1982, 1985, 2043, 2059], "bind": [41, 146, 1980, 1981], "defin": [41, 42, 55, 56, 63, 64, 65, 72, 73, 103, 104, 111, 112, 113, 120, 121, 147, 148, 151, 154, 158, 159, 160, 161, 166, 168, 181, 237, 292, 293, 294, 295, 296, 453, 714, 717, 777, 778, 844, 845, 847, 848, 849, 850, 891, 909, 974, 976, 1025, 1027, 1029, 1031, 1064, 1065, 1066, 1067, 1068, 1071, 1088, 1089, 1135, 1138, 1161, 1164, 1175, 1176, 1177, 1178, 1179, 1219, 1222, 1223, 1226, 1258, 1347, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1555, 1561, 1562, 1563, 1564, 1565, 1582, 1585, 1587, 1590, 1647, 1650, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1943, 1946, 1968, 1978, 1979, 1980, 1981, 1982, 1985, 1987, 1988, 2019, 2022], "def": [41, 42, 63, 111, 143, 146, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 784, 785, 786, 787, 788, 891, 893, 1258, 1274, 1796, 1803, 1969], "special": [41, 45, 48, 49, 88, 89, 94, 99, 100, 120, 121, 143, 144, 150, 151, 152, 154, 157, 159, 161, 162, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 524, 527, 529, 532, 534, 537, 539, 542, 564, 567, 569, 572, 574, 577, 624, 627, 629, 632, 634, 637, 639, 642, 644, 647, 654, 657, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 754, 758, 759, 763, 764, 768, 891, 913, 1187, 1190, 1632, 1636, 1911, 1926, 1929, 1930, 1931, 1933, 1934, 1937, 1943, 1946, 1947, 1951, 1952, 1954, 1956, 1981, 1982, 1983, 1997, 2005, 2072, 2074, 2076, 2080, 2081, 2083, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2097, 2098, 2100, 2101, 2102, 2103, 2116, 2121], "sure": [41, 42, 43, 143, 147, 158, 159, 160, 162], "aforement": 41, "correct": [41, 43, 88, 89, 136, 137, 142, 146, 148, 149, 153, 154, 155, 159, 160, 323, 412, 1711, 1712, 1715, 1911, 1943, 1944, 1945, 1946, 1952, 1953, 1954, 1955, 1956, 1969, 2043, 2059, 2060, 2061, 2062], "categori": [41, 143, 144, 146, 148, 158, 161, 163, 1969], "parent": [41, 166, 1451, 1480, 1488], "arraywithelementwis": [41, 45, 48, 49, 61, 144, 166], "containerwithmanipul": [41, 94, 99, 100, 124], "hint": [41, 55, 56, 61, 62, 72, 73, 109, 110, 144, 151, 154, 155, 157, 158, 159, 161, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 282, 285, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 381, 384, 391, 394, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 609, 612, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 804, 807, 809, 812, 814, 817, 854, 857, 860, 863, 886, 889, 928, 931, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1047, 1053, 1054, 1055, 1071, 1078, 1088, 1099, 1102, 1104, 1107, 1109, 1112, 1161, 1164, 1258, 1315, 1318, 1332, 1335, 1341, 1344, 1347, 1350, 1433, 1437, 1451, 1481, 1485, 1489, 1501, 1504, 1510, 1513, 1523, 1526, 1535, 1538, 1545, 1548, 1550, 1553, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1689, 1690, 1694, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1740, 1742, 1745, 1747, 1750, 1752, 1755, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1816, 1817, 1820, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966], "add": [41, 42, 43, 45, 48, 49, 61, 62, 78, 79, 92, 93, 94, 97, 98, 99, 100, 109, 110, 126, 127, 140, 141, 142, 143, 144, 145, 146, 148, 151, 154, 155, 157, 158, 160, 161, 162, 164, 166, 181, 453, 473, 1258, 1382, 1438, 1451, 1480, 1488, 1816, 1817, 1818, 1819, 1820, 1969, 1977, 1979, 1981, 2023, 2024, 2043, 2061, 2116, 2121], "thorough": [41, 151, 154, 160], "ensur": [41, 42, 43, 64, 65, 144, 148, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 1258, 1357, 1358, 1360, 1981, 2034, 2035], "produc": [41, 70, 71, 111, 118, 119, 148, 160, 161, 844, 846, 978, 979, 980, 981, 1489, 1550, 1551, 1552, 1553, 1554, 1982, 1984], "comment": [41, 42, 43, 143, 148, 153, 158], "add_reformatting_checklist_": 41, "category_nam": [41, 148, 149, 151, 154, 155], "pr": [41, 43, 143, 158, 159, 160], "belong": [41, 97, 98, 143, 168], "shown": [41, 43, 92, 93, 97, 98, 140, 141, 143, 147, 148, 150, 152, 153, 154, 158, 159, 160, 161, 164, 166, 181, 453, 609, 612, 1258, 1339], "trigger": [41, 2019, 2020], "autom": [41, 147, 160, 1968, 1969, 1983], "bot": 41, "proper": 41, "markdown": 41, "text": [41, 43, 150, 151], "might": [41, 42, 43, 64, 65, 148, 150, 152, 153, 156, 157, 158, 160, 161, 162, 164, 166, 167, 323, 402, 1258, 1287, 1288, 1289, 1968], "moment": [41, 66, 67, 114, 115, 145, 181, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 2025, 2026, 2027], "patient": [41, 42], "modifi": [41, 42, 43, 63, 97, 98, 111, 143, 145, 148, 149, 151, 153, 155, 159, 160, 161, 164, 876, 878, 987, 989, 997, 998, 999, 1000, 1001, 1071, 1084, 1088, 1161, 1164, 1237, 1240], "item": [41, 50, 54, 64, 65, 92, 93, 97, 98, 111, 112, 113, 146, 148, 164, 166, 167, 169, 323, 352, 418, 424, 865, 867, 869, 923, 925, 927, 961, 963, 965, 1059, 1061, 1063, 1135, 1137, 1139, 1182, 1184, 1186, 1258, 1285, 1315, 1316, 1317, 1318, 1319, 1338, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1451, 1486, 1796, 1802, 1803, 1804, 1805, 1809, 1814, 1815, 1969, 2019, 2020], "symbol": [41, 42, 1981, 1982], "emoji": 41, "within": [41, 43, 50, 53, 54, 63, 111, 158, 159, 160, 168, 181, 237, 239, 240, 779, 780, 782, 789, 791, 793, 794, 796, 798, 799, 801, 803, 891, 892, 904, 1005, 1008, 1821, 1837, 1840, 1977, 1978, 1982, 2019, 2022], "legend": 41, "mark": [41, 43, 143, 160, 164, 2034, 2035, 2041], "review": [41, 43, 150, 158, 161], "checkbox": [41, 42], "proce": [41, 42], "elabor": 41, "struggl": 41, "assigne": 41, "author": [41, 43, 1969, 1979, 1983], "later": [41, 97, 98, 160, 1258, 1274, 1981], "status": 41, "manual": [41, 42, 43, 147, 158, 160, 168, 1796, 1797, 1807, 1808], "refrain": 41, "transpil": [41, 152, 158, 163, 164, 165, 1968, 1969, 1981, 1987, 1988], "locat": [41, 43, 145, 149, 158, 159, 160, 161, 237, 292, 295, 1821, 1822, 1825, 1895, 1901, 1904, 1979], "subsect": [41, 43, 143, 147], "verifi": [41, 148, 149, 158, 160, 161], "miss": [41, 42, 144, 146, 150, 153, 160, 2025, 2029], "simpler": [41, 43, 158, 1982, 1988], "titl": [41, 43, 158, 1969], "label": [41, 43, 74, 75, 111, 122, 123, 143, 147, 158, 163, 164, 165, 169, 824, 825, 826, 827, 1069, 1070, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1981], "suggest": [41, 42, 43, 148, 158, 160, 161], "simpli": [41, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 148, 149, 150, 151, 154, 155, 157, 158, 159, 160, 162, 164, 168, 169, 181, 198, 199, 200, 202, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 233, 242, 243, 249, 250, 253, 254, 261, 262, 267, 268, 269, 271, 277, 278, 279, 281, 282, 283, 287, 288, 292, 293, 294, 296, 300, 301, 302, 304, 305, 307, 310, 312, 318, 319, 320, 321, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 386, 387, 388, 390, 403, 404, 405, 407, 425, 426, 427, 429, 444, 445, 446, 447, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 819, 820, 821, 823, 824, 825, 827, 828, 829, 831, 834, 835, 836, 838, 839, 840, 841, 843, 854, 855, 856, 858, 860, 861, 862, 865, 866, 867, 869, 870, 871, 872, 874, 876, 877, 878, 880, 881, 882, 883, 885, 886, 888, 890, 917, 918, 919, 921, 923, 924, 925, 927, 928, 929, 930, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 944, 945, 947, 948, 949, 950, 952, 953, 954, 955, 957, 958, 959, 961, 962, 963, 965, 974, 975, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1048, 1049, 1050, 1052, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1094, 1095, 1096, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1170, 1175, 1176, 1177, 1179, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1191, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1217, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1259, 1260, 1261, 1263, 1266, 1267, 1269, 1270, 1271, 1273, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1287, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1305, 1306, 1308, 1309, 1310, 1312, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1332, 1333, 1334, 1336, 1341, 1342, 1347, 1348, 1349, 1351, 1352, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1386, 1387, 1388, 1390, 1391, 1393, 1395, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1445, 1446, 1447, 1448, 1453, 1454, 1455, 1457, 1458, 1463, 1464, 1465, 1468, 1469, 1472, 1473, 1476, 1477, 1481, 1482, 1483, 1484, 1491, 1492, 1493, 1495, 1501, 1502, 1503, 1505, 1510, 1511, 1512, 1514, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1532, 1535, 1536, 1537, 1539, 1550, 1551, 1552, 1554, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1565, 1571, 1572, 1573, 1587, 1588, 1589, 1591, 1597, 1598, 1599, 1602, 1604, 1606, 1607, 1608, 1609, 1611, 1632, 1634, 1636, 1642, 1643, 1644, 1646, 1675, 1676, 1685, 1686, 1688, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1817, 1818, 1819, 1822, 1823, 1824, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1841, 1843, 1844, 1845, 1847, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1932, 1934, 1936, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1952, 1953, 1954, 1955, 1958, 1959, 1960, 1962, 1963, 1964, 1965, 1967, 1968, 1982, 1987], "leav": [41, 50, 53, 54, 94, 99, 100, 101, 102, 109, 110, 111, 112, 113, 118, 119, 124, 125, 136, 137, 146, 148, 150, 151, 154, 155, 157, 158, 160, 167, 168, 549, 551, 928, 930, 932, 1064, 1066, 1068, 1269, 1271, 1308, 1310, 1312, 1550, 1552, 1554, 1711, 1767, 1769, 1770, 1771, 1782, 1783, 1785, 1796, 1797, 1798, 1807, 1808, 1809, 1810, 1912, 1914, 1916, 1917, 1919, 1921, 2043, 2045], "assess": [41, 162], "appropri": [41, 43, 82, 83, 92, 93, 130, 131, 140, 141, 156, 160, 453, 469, 472, 779, 782, 891, 892, 904, 1005, 1008, 1848, 1849, 1850, 1851, 1852, 1853], "wait": [41, 43, 94, 97, 98, 99, 100, 158, 1258, 1401], "composit": [41, 142, 144, 145, 146, 148, 157, 159, 160, 162, 164, 168, 169, 181, 891, 914, 1033, 1036, 1053, 1056, 1216, 1218, 1968, 1982], "temporari": [41, 148, 1258, 1340, 1404], "merg": [41, 43, 143, 158, 1981], "close": [41, 42, 43, 151, 158, 162, 453, 569, 572, 634, 637, 719, 722, 1555, 1652, 1656, 1711, 1727, 1730, 1981], "normal": [41, 63, 78, 79, 80, 81, 111, 126, 127, 128, 129, 162, 167, 854, 855, 856, 857, 858, 886, 889, 891, 913, 922, 1038, 1042, 1044, 1053, 1055, 1187, 1190, 1711, 1717, 1720, 1767, 1770, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1826, 1832, 1833, 1834, 1835, 1836, 1979, 1997, 2002, 2023, 2024], "altern": [41, 42, 63, 111, 157, 158, 167, 779, 780, 781, 782, 783, 891, 892, 904, 910, 911, 915, 916, 1005, 1006, 1007, 1008, 1009, 1015, 1016, 1020, 1021, 1145, 1146, 1147, 1148, 1149, 1155, 1156, 1157, 1158, 1159, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1984], "composition": [41, 157, 158], "choos": [41, 42, 43, 59, 60, 82, 83, 107, 108, 160, 165, 169, 418, 444, 445, 446, 447, 448, 453, 654, 657, 659, 662, 1848, 1869, 1871, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1943, 1946, 1988], "decid": [41, 42, 97, 98, 148, 162, 1796, 1797, 1798, 1807, 1808, 1809], "addit": [41, 42, 43, 59, 60, 64, 65, 78, 79, 107, 108, 112, 113, 126, 127, 146, 148, 150, 151, 158, 160, 161, 162, 166, 167, 169, 418, 444, 445, 446, 447, 448, 453, 469, 472, 719, 722, 1258, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1450, 1816, 1817, 1818, 1819, 1820, 1981, 1982, 1983, 1987, 2007, 2017], "potenti": [41, 42, 43, 148, 158, 163, 453, 569, 572, 634, 637, 1984], "pend": 41, "show": [41, 42, 43, 147, 150, 157, 158, 160, 180, 181, 1258, 1339, 1397, 1403, 1444, 1969, 1981, 1995, 1996], "helpfulli": [41, 162, 1979], "prevent": [41, 43, 66, 67, 114, 115, 148, 152, 153, 157, 158, 161, 162, 1258, 1274, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1489, 1528, 1531, 1911, 1947, 1951, 1997, 2001, 2025, 2026, 2027], "problemat": [41, 42], "unimpl": 41, "final": [41, 43, 55, 56, 64, 65, 112, 113, 143, 144, 147, 148, 150, 151, 153, 155, 157, 158, 162, 163, 167, 237, 272, 275, 277, 278, 280, 1258, 1308, 1309, 1310, 1311, 1312, 1977, 1987, 2007, 2018], "issue_link": 41, "chosen": [41, 237, 239, 240, 453, 489, 492, 1848, 1869, 1873], "correctli": [41, 42, 43, 63, 72, 73, 82, 83, 111, 120, 121, 130, 131, 146, 148, 150, 152, 153, 154, 157, 159, 160, 162, 168, 181, 839, 840, 841, 842, 843, 891, 895, 1140, 1141, 1142, 1143, 1144, 1166, 1167, 1168, 1169, 1170, 1201, 1203, 1204, 1555, 1607, 1608, 1609, 1610, 1611, 1848, 1849, 1850, 1851, 1852, 1853], "alias": [41, 158, 159, 2043, 2059], "detect": [41, 42, 61, 62, 97, 98, 109, 110, 145, 146, 147, 153, 160, 167, 168, 453, 599, 600, 601, 602, 603, 1796, 1797, 1808], "alias_nam": 41, "function_nam": [41, 45, 48, 49], "notic": [41, 162], "alia": [41, 158, 236], "alreadi": [41, 42, 43, 97, 98, 145, 146, 148, 154, 158, 162, 181, 453, 529, 532, 574, 577, 719, 722, 764, 768, 794, 797, 799, 802, 1071, 1073, 1074, 1088, 1161, 1164, 1555, 1592, 1595, 1627, 1630, 1969, 1981, 1983, 1988], "push": [41, 43, 143, 153, 159, 160, 1987], "liner": 41, "meanwhil": 41, "reselect": 41, "too": [41, 42, 43, 143, 147, 148, 152, 153, 181, 453, 469, 472, 1997, 2001], "placement": 41, "categoris": [41, 143, 158], "faithfulli": 41, "descript": [41, 55, 56, 61, 62, 72, 73, 109, 110, 120, 121, 151, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 282, 285, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 381, 384, 391, 394, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 609, 612, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 804, 807, 809, 812, 814, 817, 854, 857, 860, 863, 886, 889, 928, 931, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1047, 1053, 1054, 1055, 1071, 1078, 1088, 1099, 1102, 1104, 1107, 1109, 1112, 1161, 1164, 1258, 1315, 1318, 1332, 1335, 1341, 1344, 1347, 1350, 1433, 1437, 1451, 1481, 1485, 1489, 1501, 1504, 1510, 1513, 1523, 1526, 1535, 1538, 1545, 1548, 1550, 1553, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1740, 1742, 1745, 1747, 1750, 1752, 1755, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1816, 1817, 1820, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966], "inner": [41, 72, 73, 103, 104, 120, 121, 157, 237, 292, 294, 295, 296, 1555, 1581, 1582, 1585, 1602, 1605, 1792, 1793, 1794, 1795], "fall": [41, 43, 148, 163, 1969, 2019, 2020, 2025, 2029], "under": [41, 42, 43, 142, 143, 146, 150, 151, 155, 158, 159, 160, 162, 163, 164, 167, 169, 181, 1981, 1984, 1988], "linalg": [41, 157, 1555, 1587, 1588, 1642, 1645, 1969], "match": [41, 57, 58, 97, 98, 105, 106, 146, 150, 323, 330, 331, 332, 333, 334, 453, 714, 717, 834, 837, 865, 868, 891, 894, 896, 1071, 1090, 1206, 1210, 1258, 1382, 1982, 1987, 2034, 2035, 2041], "creation_routin": [41, 159], "fft": [41, 1038, 1981], "indexing_routin": 41, "logic": [41, 90, 91, 138, 139, 144, 147, 148, 149, 152, 156, 158, 160, 162, 166, 418, 435, 453, 649, 652, 654, 657, 659, 662, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969], "ma": 41, "manipulation_routin": 41, "mathematical_funct": [41, 158], "matrix": [41, 45, 48, 49, 55, 56, 64, 65, 70, 71, 72, 73, 111, 112, 113, 118, 119, 120, 121, 148, 158, 237, 282, 283, 285, 305, 309, 310, 314, 844, 849, 850, 1053, 1057, 1058, 1094, 1097, 1130, 1133, 1134, 1219, 1222, 1223, 1226, 1258, 1259, 1260, 1261, 1262, 1263, 1275, 1276, 1277, 1278, 1279, 1489, 1535, 1536, 1537, 1538, 1539, 1555, 1556, 1557, 1558, 1559, 1560, 1566, 1569, 1576, 1579, 1581, 1582, 1585, 1587, 1590, 1597, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1632, 1635, 1637, 1640, 1642, 1643, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1690, 1694, 1979, 1981, 1997, 1998, 2001, 2002, 2005, 2007, 2017, 2090, 2096], "random": [41, 63, 81, 97, 98, 111, 129, 149, 160, 161, 169, 180, 819, 820, 821, 822, 823, 870, 871, 872, 873, 874, 958, 959, 960, 1172, 1173, 1174, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1969, 1981, 2072, 2081, 2082, 2090, 2097], "sorting_searching_count": 41, "statist": [41, 89, 137, 140, 141, 148, 158, 160, 161, 1071, 1088, 1161, 1164, 1202, 1203, 1204, 1205, 1912, 1915, 1917, 1920, 1922, 1925, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1981], "ufunc": 41, "hierarchi": [41, 97, 98, 167, 1977, 1987], "decomposit": [41, 1555, 1556, 1559, 1637, 1640, 1652, 1656, 1988], "matrix_and_vector_product": 41, "matrix_eigenvalu": 41, "norms_and_other_numb": 41, "solving_equations_and_inverting_matric": 41, "product": [41, 61, 62, 70, 71, 72, 73, 88, 89, 109, 110, 111, 118, 119, 120, 121, 136, 137, 164, 453, 679, 680, 681, 682, 1033, 1036, 1037, 1053, 1056, 1058, 1130, 1133, 1134, 1489, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1561, 1562, 1563, 1564, 1565, 1592, 1595, 1602, 1605, 1627, 1630, 1680, 1684, 1911, 1912, 1913, 1914, 1915, 1917, 1920, 1922, 1925, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1981, 1983, 2007, 2018], "seem": [41, 42, 162, 168, 169, 181, 1981], "func": [41, 97, 98, 143, 150, 157, 234, 235, 418, 443, 1258, 1274, 1450, 1451, 1461, 1462, 1467, 1487, 1796, 1810, 2043, 2054], "gleam": 41, "yet": [41, 42, 181], "uncom": 41, "test_numpy_inn": 41, "mirror": [41, 1071, 1088, 1161, 1164, 1981], "correspond": [41, 43, 57, 58, 61, 62, 63, 64, 65, 76, 77, 88, 89, 94, 97, 98, 99, 100, 105, 106, 109, 110, 111, 124, 125, 136, 137, 144, 145, 146, 147, 148, 150, 151, 154, 155, 156, 158, 160, 162, 164, 196, 197, 203, 323, 335, 336, 337, 338, 339, 453, 489, 490, 491, 492, 493, 699, 700, 702, 886, 888, 889, 890, 891, 898, 899, 905, 906, 914, 923, 924, 926, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 946, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1033, 1037, 1053, 1055, 1071, 1079, 1080, 1216, 1217, 1218, 1258, 1407, 1408, 1450, 1555, 1561, 1564, 1581, 1582, 1585, 1607, 1610, 1642, 1645, 1647, 1650, 1711, 1752, 1753, 1754, 1755, 1756, 1821, 1822, 1825, 1848, 1849, 1852, 1854, 1857, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1981, 2043, 2048, 2059, 2060, 2062, 2072, 2080], "ivy_test": [41, 42, 43, 143, 147, 159, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123], "test_ivi": [41, 42, 43, 147, 159, 160, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123], "test_frontend": [41, 147, 159], "unsur": [41, 160], "put": [41, 160, 181, 1987], "explor": [41, 42, 43, 148, 162, 165, 169, 180, 1981, 1984], "outer": [41, 72, 73, 120, 121, 1555, 1792, 1793, 1794, 1795], "confirm": 41, "ve": [41, 42, 43, 80, 81, 128, 129, 160, 162, 163, 166, 1821, 1822, 1823, 1824, 1825, 1826, 1968, 1969], "empti": [41, 42, 45, 48, 49, 64, 65, 94, 97, 98, 99, 100, 112, 113, 144, 148, 149, 237, 239, 240, 1071, 1088, 1161, 1164, 1258, 1275, 1278, 1391, 1392, 1393, 1394, 1395, 1451, 1480, 1486, 1488, 1796, 1811, 1911, 1947, 1951, 1957, 1958, 1961, 1963, 1966], "along": [41, 46, 47, 55, 56, 63, 64, 65, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 103, 104, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 150, 157, 161, 162, 164, 209, 211, 213, 224, 225, 226, 228, 237, 272, 275, 277, 278, 279, 280, 281, 418, 443, 839, 840, 841, 842, 843, 854, 857, 865, 866, 867, 868, 869, 876, 877, 878, 879, 880, 881, 884, 891, 895, 896, 910, 914, 922, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 987, 990, 1038, 1042, 1044, 1071, 1076, 1077, 1079, 1080, 1082, 1088, 1091, 1092, 1114, 1115, 1116, 1117, 1118, 1125, 1128, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1192, 1193, 1201, 1202, 1203, 1204, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1237, 1239, 1241, 1258, 1315, 1316, 1317, 1318, 1319, 1555, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1685, 1686, 1688, 1689, 1695, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1717, 1718, 1720, 1732, 1733, 1734, 1735, 1736, 1737, 1739, 1741, 1742, 1745, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1767, 1768, 1769, 1770, 1771, 1777, 1781, 1782, 1783, 1784, 1786, 1792, 1793, 1794, 1795, 1821, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1981, 2043, 2054], "backend_nam": [41, 145, 148, 149, 151, 154, 155, 156], "relevant_submodul": 41, "sometim": [41, 42, 43, 143, 148, 158, 160, 161, 162], "behav": [41, 143, 152, 157, 159, 166, 1555, 1581, 1982], "helper": [41, 147, 148, 152, 167, 323, 350, 1968, 1996, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2117, 2118, 2119, 2120, 2121, 2122, 2123], "recreat": [41, 143], "defer": [41, 144, 146, 148, 149, 155, 156, 157, 158, 160, 1987], "clearer": [41, 152, 167], "mind": [41, 144, 146, 160], "posit": [41, 43, 50, 51, 52, 61, 62, 63, 64, 65, 72, 73, 76, 77, 109, 110, 111, 112, 113, 120, 121, 124, 125, 143, 146, 156, 158, 160, 161, 167, 180, 236, 237, 258, 259, 323, 363, 366, 453, 454, 457, 594, 597, 599, 600, 601, 602, 603, 698, 709, 712, 714, 717, 779, 782, 824, 825, 826, 827, 834, 835, 836, 837, 838, 844, 849, 850, 860, 863, 891, 892, 894, 904, 906, 909, 1005, 1008, 1020, 1021, 1022, 1023, 1024, 1053, 1054, 1069, 1070, 1071, 1085, 1120, 1121, 1122, 1123, 1124, 1135, 1136, 1137, 1138, 1139, 1219, 1222, 1223, 1226, 1258, 1274, 1308, 1309, 1310, 1311, 1312, 1450, 1555, 1556, 1557, 1558, 1559, 1560, 1571, 1574, 1670, 1671, 1672, 1673, 1711, 1727, 1728, 1729, 1730, 1731, 1752, 1753, 1754, 1755, 1756, 1821, 1842, 1848, 1864, 1867, 1957, 1958, 1961, 1963, 1966, 1983, 1993, 1994, 2019, 2020, 2043, 2059, 2060, 2062, 2072, 2075, 2116, 2121], "keyword": [41, 50, 51, 52, 55, 56, 94, 97, 98, 99, 100, 146, 148, 149, 156, 157, 158, 159, 160, 161, 167, 237, 282, 283, 285, 891, 909, 1071, 1088, 1135, 1138, 1161, 1164, 1258, 1265, 1274, 1382, 1438, 1796, 1803, 1911, 1947, 1951, 2019, 2020, 2034, 2038, 2039, 2040, 2043, 2048, 2059, 2060, 2061, 2062], "strategi": [41, 156, 159, 2072, 2074, 2075, 2076, 2080, 2081, 2083, 2086, 2087, 2090, 2092, 2093, 2094, 2095, 2097, 2098, 2116, 2121], "draw": [41, 80, 81, 128, 129, 143, 159, 160, 870, 873, 1171, 1173, 1821, 1822, 1823, 1824, 1825, 1826, 1832, 1835, 1837, 1840, 1997, 1999, 2000, 2004, 2072, 2074, 2075, 2076, 2080, 2081, 2083, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2097, 2098, 2100, 2101, 2102, 2103, 2116, 2121], "realli": [42, 146, 181, 1986, 1987], "gh": 42, "your_fold": 42, "cours": [42, 43, 143, 150, 161, 162, 167, 181, 1986, 1987], "whatev": [42, 146, 181], "elig": 42, "student": 42, "licenc": 42, "remind": 42, "account": [42, 63, 76, 77, 111, 124, 125, 147, 151, 158, 928, 929, 930, 931, 932, 1071, 1078, 1711, 1747, 1748, 1749, 1750, 1751, 1997, 2002], "licens": [42, 1984], "expir": 42, "abl": [42, 43, 97, 98, 143, 148, 155, 157, 158, 162, 164, 169, 1984, 1987], "profession": 42, "trial": 42, "jetbrain": 42, "valid": [42, 63, 70, 71, 90, 91, 111, 118, 119, 138, 139, 145, 148, 150, 159, 160, 323, 351, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1053, 1058, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1130, 1133, 1134, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1711, 1727, 1730, 1767, 1770, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1982, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2072, 2075, 2080, 2081, 2086, 2087, 2089], "bui": [42, 1987], "paid": 42, "pace": 42, "align": [42, 43, 63, 97, 98, 111, 158, 164, 166, 860, 861, 862, 863, 864, 1053, 1054, 1968, 1987], "stabl": [42, 64, 65, 86, 87, 112, 113, 134, 135, 145, 148, 164, 181, 453, 719, 722, 844, 849, 850, 1219, 1222, 1223, 1226, 1258, 1329, 1330, 1398, 1399, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1907, 1908, 1909, 1910, 2090, 2096], "mayb": [42, 50, 53, 54, 164, 166], "person": [42, 43], "experi": [42, 160, 165, 167, 181], "avoid": [42, 43, 145, 146, 147, 148, 153, 156, 158, 160, 161, 453, 569, 572, 634, 637, 799, 802, 1071, 1074, 1258, 1274, 1981, 2090, 2096, 2100, 2101], "abil": [42, 162, 165, 181, 1981], "certain": [42, 43, 97, 98, 143, 148, 152, 160, 162, 181, 237, 239, 240, 272, 275, 277, 280, 1985], "perhap": [42, 166, 167, 168, 181, 1987], "track": [42, 43, 143, 1796, 1809, 1981, 1995, 1996, 2019, 2020], "click": [42, 43, 147, 151, 165, 1969], "icon": [42, 43], "side": [42, 43, 86, 87, 134, 135, 1895, 1901, 1902, 1903, 1904, 1905], "left": [42, 43, 63, 72, 73, 82, 83, 86, 87, 111, 120, 121, 130, 131, 134, 135, 143, 148, 150, 453, 509, 512, 839, 840, 841, 842, 843, 891, 895, 910, 933, 936, 1071, 1079, 1114, 1115, 1116, 1117, 1118, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1166, 1167, 1168, 1169, 1170, 1201, 1202, 1203, 1204, 1555, 1581, 1582, 1585, 1607, 1608, 1609, 1610, 1611, 1652, 1656, 1675, 1676, 1677, 1678, 1679, 1848, 1849, 1850, 1851, 1852, 1853, 1895, 1901, 1902, 1903, 1904, 1905], "panel": 42, "drop": [42, 181, 1997, 2005], "down": [42, 147, 152, 160, 938, 941, 1071, 1080, 1968, 1981, 1987, 1995, 1996], "builtin": [42, 166, 168], "virtualenv": 42, "o": [42, 142, 164, 1258, 1382], "tick": [42, 43, 147], "test_array_api": [42, 43, 143, 160], "r": [42, 43, 63, 97, 98, 111, 142, 891, 903, 968, 969, 970, 971, 1451, 1461, 1555, 1637, 1640, 1711, 1782, 1786], "txt": [42, 143, 161], "visual": [42, 158, 181, 1981, 1983, 1986], "mitig": [42, 1987], "conflict": [42, 43, 158, 167], "particular": [42, 43, 143, 145, 147, 148, 150, 156, 157, 158, 160, 161, 162, 453, 454, 457, 654, 657, 1977, 1981, 1987, 2086, 2089], "system": [42, 43, 145, 148, 181, 1555, 1647, 1650, 1979, 1981, 1984, 1986, 1988], "wsl": 42, "powershel": 42, "admin": 42, "visit": [42, 43], "deploy": [42, 1980, 1983, 1984, 1987, 1988], "top": [42, 43, 63, 76, 77, 111, 147, 148, 158, 160, 167, 168, 1071, 1091, 1211, 1212, 1213, 1214, 1215, 1717, 1718, 1981, 1985, 1995, 1996], "press": [42, 43, 167, 1969], "ok": 42, "debug": [42, 43, 146, 147, 160, 162, 167, 1981], "dialog": 42, "invalid": [42, 90, 91, 138, 139, 148, 153, 1555, 1680, 1684, 1711, 1727, 1730, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 2072, 2076], "caus": [42, 43, 143, 145, 146, 147, 148, 150, 157, 160, 181], "earlier": [42, 43], "necessari": [42, 43, 63, 76, 77, 111, 124, 125, 145, 146, 150, 156, 157, 158, 160, 162, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 1071, 1072, 1073, 1711, 1747, 1748, 1749, 1750, 1751], "virtualis": 42, "m1": 42, "optional_m1_1": 42, "optional_m1_2": 42, "sudo": 42, "apt": 42, "ca": 42, "certif": 42, "curl": 42, "gnupg": 42, "lsb": 42, "mkdir": 42, "p": [42, 43, 64, 65, 112, 113, 120, 121, 142, 237, 282, 285, 891, 897, 917, 920, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1555, 1607, 1610, 1685, 1686, 1688, 1689, 1796, 1805, 2007, 2015], "keyr": 42, "fssl": 42, "download": [42, 160], "gpg": 42, "dearmor": 42, "echo": 42, "deb": 42, "arch": 42, "dpkg": 42, "architectur": [42, 169, 181, 1979, 1980, 1981, 1984, 1985, 1986], "lsb_releas": 42, "tee": 42, "dev": [42, 59, 60, 97, 98, 107, 108, 149, 155, 166, 168, 237, 297, 298, 418, 429, 433, 439], "null": 42, "ce": 42, "cli": 42, "containerd": 42, "io": [42, 147], "compos": [42, 146, 160, 181, 1981, 1988, 1995, 1996], "plugin": 42, "systemctl": 42, "permiss": 42, "post": [42, 78, 79, 126, 127, 169, 1816, 1817, 1818, 1819, 1820], "coupl": [42, 144, 166, 168, 1981], "unit": [42, 46, 47, 95, 96, 143, 148, 158, 159, 160, 181, 196, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 213, 214, 216, 217, 218, 219, 221, 223, 224, 225, 226, 228, 229, 231, 233, 886, 889, 1053, 1055, 1982, 1985], "test_ab": 42, "context": [42, 43, 70, 71, 118, 119, 150, 418, 419, 1258, 1383, 1489, 1545, 1546, 1547, 1548, 1549, 2007, 2018], "menu": 42, "editor": 42, "green": [42, 43, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 2124, 2125], "appear": [42, 43, 143, 158, 162, 933, 936, 938, 941, 1071, 1079, 1080, 1258, 1450], "pytest": [42, 43, 143, 147, 160], "keyboard": 42, "shortcut": [42, 1071, 1088, 1161, 1164], "displai": [42, 146, 152, 160, 167], "screenshot": 42, "ctrl": [42, 43], "shift": [42, 43, 76, 77, 94, 99, 100, 103, 104, 124, 125, 150, 154, 267, 269, 271, 453, 509, 512, 519, 522, 844, 849, 850, 1219, 1222, 1223, 1226, 1711, 1752, 1753, 1754, 1755, 1756], "bottom": [42, 147, 1987], "screen": [42, 97, 98, 167], "elsewher": [42, 237, 258, 259, 1848, 1869, 1873], "test_elementwis": 42, "tab": [42, 147, 167, 1969], "progress": [42, 43, 169, 1555, 1675, 1679], "bar": 42, "shell": [42, 43], "run_tests_cli": [42, 143], "run_ivy_core_test": 42, "run_ivy_nn_test": 42, "run_ivy_stateful_test": 42, "run_test": [42, 147], "sh": [42, 43, 143], "test_depend": 42, "test_ivy_cor": 42, "test_ivy_nn": 42, "test_ivy_st": 42, "test_": [42, 147, 159], "test_funct": [42, 43, 147, 159, 160, 2043], "test_cor": [42, 43, 147, 159], "wish": [42, 158], "ivy_cor": 42, "ivy_nn": 42, "ivy_st": 42, "dure": [42, 59, 60, 66, 67, 88, 89, 97, 98, 107, 108, 114, 115, 136, 137, 146, 148, 149, 152, 155, 156, 157, 158, 159, 160, 162, 181, 234, 235, 418, 444, 445, 446, 447, 448, 875, 1038, 1043, 1258, 1438, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1489, 1528, 1531, 1555, 1602, 1605, 1792, 1793, 1794, 1795, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 1981, 1982, 1987, 1995, 1996, 2019, 2020, 2025, 2026, 2027, 2029], "simplest": [42, 150, 160, 162], "valu": [42, 43, 45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 181, 196, 229, 231, 232, 233, 237, 239, 240, 258, 259, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 292, 293, 294, 295, 296, 323, 330, 331, 332, 333, 334, 379, 386, 387, 402, 418, 442, 443, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469, 472, 474, 475, 476, 477, 478, 484, 485, 486, 487, 488, 489, 490, 491, 493, 529, 532, 549, 550, 551, 553, 554, 557, 559, 562, 564, 566, 568, 569, 571, 573, 574, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 664, 665, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 683, 684, 687, 689, 692, 694, 697, 699, 700, 701, 702, 703, 709, 712, 714, 715, 716, 718, 719, 722, 739, 740, 741, 743, 744, 745, 746, 748, 749, 751, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 776, 779, 782, 819, 821, 822, 823, 839, 840, 841, 842, 843, 844, 849, 850, 860, 863, 865, 868, 891, 892, 895, 896, 898, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 923, 926, 958, 960, 966, 967, 968, 969, 970, 971, 982, 983, 984, 985, 986, 1005, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1053, 1054, 1071, 1081, 1086, 1088, 1090, 1091, 1104, 1106, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1150, 1152, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1174, 1187, 1190, 1194, 1196, 1199, 1201, 1203, 1204, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1256, 1258, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1308, 1309, 1311, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1328, 1337, 1338, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1361, 1362, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1398, 1399, 1401, 1417, 1418, 1419, 1420, 1421, 1433, 1434, 1436, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1468, 1469, 1470, 1471, 1480, 1486, 1488, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1540, 1543, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1571, 1574, 1607, 1610, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1685, 1686, 1688, 1689, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1723, 1724, 1725, 1726, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1787, 1791, 1792, 1793, 1794, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1810, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1913, 1915, 1917, 1920, 1926, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1975, 1976, 1981, 1982, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2029, 2034, 2035, 2036, 2041, 2043, 2059, 2060, 2061, 2062, 2072, 2075, 2076, 2080, 2081, 2086, 2088, 2090, 2091, 2095, 2100, 2101, 2102, 2103, 2106, 2114], "becaus": [42, 43, 144, 145, 146, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 162, 164, 168, 169, 181, 1981, 1984, 1987], "header": [42, 43], "summari": [42, 43, 97, 98, 160, 323, 379, 1258, 1285, 1338], "recommend": [42, 43, 145, 453, 654, 657, 659, 662, 714, 717, 1911, 1930, 1933, 1943, 1946], "advanc": [42, 1980], "q": [42, 43, 63, 70, 71, 111, 118, 119, 142, 181, 891, 916, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1252, 1253, 1254, 1255, 1256, 1489, 1550, 1551, 1552, 1553, 1554, 1555, 1581, 1582, 1585, 1637, 1640, 1796, 1805], "fix": [42, 43, 63, 111, 143, 148, 160, 161, 891, 927], "arrow": 42, "button": [42, 43], "funcion": 42, "target": [42, 142, 159, 161, 163, 167, 168, 169, 418, 423, 1969, 1977, 1979, 1980, 1981, 1984, 1986, 1987], "test_stat": [42, 147], "test_submodule_nam": 42, "test_function_nam": 42, "debugg": 42, "studio": 42, "easiest": 42, "effici": [42, 43, 146, 153, 155, 156, 157, 160, 164, 167, 181, 1981, 1983, 1984], "afterward": [42, 167, 2019, 2022], "background": [42, 1981, 1983], "restart": 42, "corner": [42, 43, 158], "overlap": [42, 161, 162, 1982], "test_file_path": 42, "test_fn_nam": 42, "long": [42, 43, 147, 148, 150, 152, 164, 1489, 1540, 1543, 1981], "larg": [42, 43, 63, 111, 147, 167, 453, 469, 472, 891, 909, 1135, 1136, 1137, 1138, 1139, 1555, 1642, 1645, 1981], "gb": [42, 418, 449, 452], "engin": [42, 1981, 1983, 1984], "comma": 42, "end": [42, 43, 145, 147, 157, 161, 162, 163, 180, 181, 237, 239, 240, 453, 489, 492, 928, 931, 1071, 1078, 1088, 1161, 1164, 1969, 1979, 1984], "entri": [42, 76, 77, 97, 98, 124, 125, 132, 133, 147, 160, 237, 272, 275, 933, 936, 938, 941, 1071, 1079, 1080, 1711, 1757, 1758, 1759, 1760, 1761, 1796, 1810, 1875, 1878, 1981], "postcreatecommand": 42, "post_create_command": 42, "poststartcommand": 42, "safe": [42, 158], "containerworkspacefold": 42, "roughli": [42, 105, 106, 143, 386, 390, 1984], "reopen": 42, "dropdown": 42, "test_fle_path": 42, "enter": [42, 43, 144, 148, 149, 154, 156, 418, 419, 1451, 1480, 1486, 1488], "forward": [42, 145, 151, 160, 161, 162, 169, 180, 181, 922, 1038, 1044, 1981, 1982, 1997, 2002, 2005, 2019, 2020, 2022, 2025, 2029], "slash": 42, "regular": [42, 43, 111, 158, 1053, 1058, 1130, 1133, 1134, 1981], "headach": 42, "arm": [42, 43], "featur": [42, 43, 154, 158, 161, 162, 167, 181, 875, 1038, 1043, 1969, 1981, 1982, 1983, 1987, 1997, 1999, 2000, 2002, 2004, 2005], "vm": 42, "azur": 42, "cloud": [42, 180, 1983], "mean": [42, 43, 63, 64, 65, 70, 71, 76, 77, 80, 81, 88, 89, 97, 98, 111, 112, 113, 118, 119, 124, 125, 128, 129, 136, 137, 140, 141, 142, 143, 145, 146, 148, 149, 150, 155, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 180, 181, 418, 443, 819, 822, 839, 840, 841, 842, 843, 860, 863, 891, 895, 928, 929, 930, 931, 932, 1053, 1054, 1071, 1078, 1088, 1140, 1141, 1142, 1143, 1144, 1161, 1164, 1171, 1172, 1201, 1203, 1258, 1295, 1296, 1297, 1298, 1299, 1451, 1462, 1467, 1487, 1489, 1510, 1513, 1515, 1518, 1523, 1524, 1525, 1526, 1527, 1555, 1571, 1574, 1711, 1747, 1748, 1749, 1750, 1751, 1792, 1793, 1794, 1795, 1796, 1803, 1821, 1827, 1830, 1832, 1833, 1834, 1835, 1836, 1911, 1968, 1969, 1978, 1981, 1997, 2002, 2072, 2076, 2080, 2081, 2090, 2094, 2100, 2101, 2102, 2103], "longer": [42, 148, 156, 157, 160, 1981], "worri": 42, "agnost": [42, 144, 154, 164, 166, 169, 181, 1969, 1987, 1988], "usual": [42, 143, 158, 160, 162], "favourit": 42, "theme": 42, "unsupport": [42, 153, 158, 323, 371, 372, 418, 432, 1258, 1313, 1314, 2034, 2040, 2064], "old": [42, 97, 98, 145, 157], "slow": 42, "ipad": 42, "cool": [42, 161], "sever": [42, 43, 161, 181, 1979, 1985], "exact": [42, 43, 95, 96, 97, 98, 143, 150, 164, 198, 200, 202, 1874, 1875, 1879, 1885, 1889, 2090, 2096], "quota": 42, "requisit": 42, "pane": [42, 43], "readi": 42, "begin": [42, 143, 147, 159, 1071, 1088, 1161, 1164, 1796, 1797, 1808, 1995, 1996], "master": [42, 43, 143, 161, 1981], "view": [42, 43, 63, 111, 147, 152, 237, 261, 264, 799, 800, 801, 802, 803, 1071, 1074, 1085, 1089, 1120, 1121, 1123, 1175, 1176, 1177, 1178, 1179, 1981], "box": 42, "upto": [42, 43], "15": [42, 61, 62, 63, 80, 81, 88, 89, 94, 99, 100, 103, 104, 109, 110, 111, 112, 113, 118, 119, 124, 125, 128, 129, 136, 137, 150, 152, 237, 267, 269, 270, 271, 323, 363, 366, 453, 469, 470, 472, 473, 499, 502, 519, 522, 549, 552, 584, 585, 614, 615, 644, 645, 647, 679, 681, 682, 683, 714, 715, 717, 719, 720, 722, 724, 725, 804, 805, 806, 807, 808, 809, 812, 854, 857, 876, 877, 878, 879, 880, 891, 903, 907, 928, 929, 930, 931, 932, 968, 969, 970, 971, 987, 988, 989, 990, 991, 1038, 1039, 1040, 1042, 1047, 1048, 1049, 1050, 1051, 1052, 1071, 1076, 1078, 1082, 1109, 1110, 1112, 1237, 1238, 1240, 1258, 1280, 1283, 1295, 1297, 1298, 1337, 1347, 1350, 1351, 1352, 1355, 1356, 1401, 1407, 1409, 1410, 1411, 1442, 1489, 1491, 1494, 1535, 1537, 1538, 1539, 1555, 1576, 1579, 1587, 1590, 1597, 1600, 1627, 1630, 1657, 1661, 1662, 1665, 1711, 1752, 1755, 1782, 1783, 1785, 1786, 1821, 1827, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1848, 1864, 1867, 1874, 1875, 1879, 1911, 1912, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1984, 2043, 2061], "minut": [42, 147], "launch": 42, "12": [42, 45, 48, 49, 61, 62, 63, 64, 65, 70, 71, 80, 81, 88, 89, 94, 99, 100, 109, 110, 111, 112, 113, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 136, 137, 145, 146, 148, 150, 161, 453, 469, 470, 472, 473, 474, 475, 476, 478, 499, 500, 519, 522, 524, 526, 527, 528, 539, 541, 542, 543, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 563, 619, 621, 623, 679, 680, 681, 682, 683, 689, 690, 691, 693, 719, 722, 734, 736, 738, 764, 765, 767, 768, 769, 770, 772, 804, 806, 808, 809, 810, 811, 812, 813, 814, 816, 818, 844, 847, 848, 854, 856, 858, 876, 877, 878, 879, 880, 891, 903, 928, 929, 930, 931, 932, 968, 969, 970, 971, 987, 988, 989, 990, 991, 1015, 1016, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1038, 1040, 1046, 1071, 1076, 1078, 1082, 1099, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1113, 1237, 1238, 1240, 1258, 1280, 1283, 1295, 1297, 1298, 1330, 1352, 1356, 1391, 1392, 1394, 1399, 1407, 1409, 1410, 1489, 1491, 1493, 1495, 1510, 1512, 1514, 1528, 1529, 1530, 1531, 1532, 1535, 1538, 1555, 1576, 1579, 1607, 1609, 1610, 1611, 1627, 1630, 1662, 1665, 1670, 1674, 1711, 1732, 1735, 1752, 1755, 1762, 1764, 1766, 1782, 1783, 1785, 1786, 1816, 1817, 1819, 1820, 1821, 1827, 1830, 1832, 1833, 1835, 1837, 1838, 1839, 1848, 1869, 1873, 1874, 1875, 1879, 1911, 1912, 1915, 1917, 1918, 1919, 1922, 1923, 1925, 1938, 1941, 1947, 1951], "output": [42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 168, 169, 181, 196, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 283, 285, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 340, 343, 402, 418, 443, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 854, 855, 856, 857, 858, 860, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1076, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1089, 1090, 1091, 1092, 1094, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1156, 1157, 1158, 1159, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1290, 1291, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1308, 1310, 1320, 1321, 1322, 1323, 1357, 1359, 1361, 1363, 1367, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1439, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1487, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1642, 1644, 1646, 1647, 1650, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1787, 1791, 1796, 1810, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1856, 1858, 1859, 1860, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1895, 1896, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1982, 1997, 2000, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2019, 2021, 2034, 2039], "That": [42, 43, 160, 166, 167, 168, 453, 714, 717, 1982], "approach": [42, 43, 146, 148, 155, 156, 160, 162, 166, 167, 181, 1978, 1985, 1987], "colour": 42, "applic": [42, 70, 71, 118, 119, 148, 149, 156, 168, 1489, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1796, 1803, 1804, 1805, 1809, 1810, 1978, 1979, 1981, 1983, 1985, 1987], "chanc": 42, "troubleshoot": 42, "ever": 42, "64": [42, 61, 62, 63, 70, 71, 94, 99, 100, 109, 110, 111, 112, 113, 118, 119, 120, 121, 128, 129, 136, 137, 167, 168, 323, 362, 453, 519, 520, 521, 522, 523, 699, 700, 702, 739, 741, 743, 744, 747, 854, 855, 856, 857, 858, 891, 897, 899, 917, 918, 919, 920, 921, 943, 944, 946, 1038, 1042, 1258, 1295, 1298, 1299, 1451, 1468, 1471, 1489, 1515, 1518, 1523, 1524, 1525, 1526, 1527, 1555, 1612, 1615, 1627, 1630, 1657, 1661, 1675, 1676, 1678, 1832, 1834, 1911, 1922, 1925, 1938, 1940, 1942, 1969, 1986, 2007, 2018], "usr": 42, "flask": 42, "toolbar": [42, 43], "_array_modul": [42, 143], "array_api_test": [42, 43, 143], "refresh": 42, "conftest": 42, "nutshel": [42, 154], "hook": [42, 2019, 2022], "lint": 42, "accept": [42, 43, 50, 55, 56, 61, 62, 72, 73, 101, 109, 110, 144, 146, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 166, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 282, 285, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 381, 384, 391, 394, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 609, 612, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 804, 807, 809, 812, 814, 817, 844, 849, 850, 854, 857, 860, 863, 886, 889, 928, 931, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1047, 1053, 1054, 1055, 1071, 1078, 1088, 1099, 1102, 1104, 1107, 1109, 1112, 1161, 1164, 1219, 1222, 1223, 1226, 1258, 1315, 1318, 1332, 1335, 1341, 1344, 1347, 1350, 1417, 1421, 1433, 1437, 1451, 1481, 1485, 1489, 1501, 1504, 1510, 1513, 1523, 1526, 1535, 1538, 1545, 1548, 1550, 1553, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1689, 1690, 1694, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1740, 1742, 1745, 1747, 1750, 1752, 1755, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1816, 1817, 1820, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966, 1968, 1969, 1979], "attempt": [42, 153, 181], "succe": 42, "properli": [42, 142, 152, 160], "server": [43, 1981], "suitabl": [43, 111, 146, 161, 844, 847, 848, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1895, 1901, 1904, 1981, 2090, 2096], "quick": [43, 142, 159, 168], "tendenc": 43, "land": 43, "world": [43, 1983], "come": [43, 158, 161, 162, 168, 179, 1968, 1969, 1981], "fly": [43, 1981], "hard": [43, 166, 1981], "receiv": [43, 148, 149, 160, 1258, 1265, 1382, 2007, 2017], "internship": 43, "bug": [43, 158, 160, 161], "serv": [43, 144, 146, 154, 155, 158, 160, 162, 163, 1968, 1969, 1979], "suspect": 43, "observ": [43, 152, 164, 1983], "act": [43, 150, 181, 1988], "placehold": [43, 144, 153, 154, 1796, 1804, 1809, 1814, 1968], "ii": [43, 88, 89, 136, 137, 1911, 1922, 1923, 1924, 1925], "iii": 43, "three": [43, 63, 146, 147, 150, 158, 160, 162, 163, 164, 237, 282, 285, 799, 800, 802, 1071, 1074, 1969, 1982, 1987], "reformat": [43, 153], "issue_numb": 43, "No": [43, 147, 1981], "anyth": [43, 63, 111, 160, 161, 1140, 1141, 1142, 1143, 1144, 1201, 1203, 1981, 1982], "kept": [43, 94, 97, 98, 99, 100, 157, 161, 1792, 1793, 1794], "clean": [43, 161, 162, 164, 165, 167], "soon": [43, 147, 148, 179, 181, 1969], "partial": [43, 63, 97, 98, 111, 891, 903, 968, 969, 970, 971, 1451, 1467, 2019, 2020], "solut": [43, 146, 148, 160, 162, 1555, 1647, 1650, 1979, 1983], "respond": 43, "shape": [43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 146, 148, 149, 150, 151, 154, 157, 158, 159, 160, 161, 164, 166, 167, 168, 169, 196, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 285, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 418, 439, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 799, 800, 801, 802, 803, 804, 805, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 837, 844, 847, 848, 849, 850, 860, 863, 865, 868, 870, 871, 872, 873, 874, 875, 886, 888, 889, 890, 891, 894, 896, 899, 913, 922, 943, 944, 946, 958, 959, 960, 966, 967, 1010, 1011, 1012, 1013, 1014, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1038, 1041, 1043, 1044, 1047, 1053, 1054, 1055, 1056, 1057, 1058, 1069, 1070, 1071, 1074, 1075, 1085, 1087, 1088, 1089, 1090, 1091, 1094, 1097, 1099, 1100, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1130, 1133, 1134, 1153, 1161, 1164, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1201, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1290, 1291, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1332, 1333, 1334, 1335, 1336, 1357, 1359, 1361, 1363, 1367, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1402, 1422, 1427, 1443, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1780, 1781, 1787, 1791, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1856, 1858, 1859, 1860, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1881, 1882, 1883, 1886, 1887, 1888, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1911, 1912, 1915, 1917, 1920, 1922, 1923, 1925, 1930, 1932, 1938, 1940, 1942, 1943, 1945, 1952, 1953, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1975, 1976, 1997, 1998, 2001, 2002, 2005, 2007, 2009, 2010, 2011, 2012, 2013, 2014, 2023, 2024, 2043, 2060, 2062, 2072, 2073, 2076, 2079, 2080, 2081, 2090, 2092, 2095, 2097], "dai": 43, "warn": 43, "without": [43, 97, 98, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 159, 160, 161, 162, 166, 167, 168, 180, 181, 1258, 1337, 1401, 1438, 1711, 1747, 1750, 1796, 1798, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1978, 1981, 1982, 1983, 1987, 2072, 2076, 2080, 2081, 2100, 2101, 2102, 2103], "likewis": [43, 146, 148, 151, 154, 155, 158, 162, 167, 1987], "freed": 43, "flag": [43, 97, 98, 148, 156, 157, 158, 159, 160, 418, 424, 2043, 2061, 2062], "remain": [43, 76, 77, 82, 83, 124, 125, 130, 131, 147, 150, 161, 162, 181, 453, 469, 472, 714, 717, 875, 1038, 1043, 1711, 1747, 1748, 1749, 1750, 1751, 1796, 1803, 1848, 1864, 1865, 1866, 1867, 1868], "short": [43, 148, 158, 161, 164, 168, 1489, 1540, 1543], "basi": [43, 143, 167], "situat": [43, 147, 169], "upon": [43, 150, 157, 160, 162, 181, 1980, 1981], "period": [43, 111, 147, 161, 844, 845, 846, 847, 848, 974, 975, 976, 977, 978, 979, 980, 981, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032], "unabl": [43, 162], "obvious": [43, 147], "never": [43, 76, 77, 124, 125, 148, 158, 160, 162, 1711, 1747, 1748, 1749, 1750, 1751], "qualiti": 43, "hypothet": 43, "frustrat": 43, "delai": 43, "busi": 43, "fine": [43, 148, 150, 158, 166, 169, 1987], "inact": 43, "me": 43, "unfairli": 43, "definit": [43, 63, 72, 73, 109, 110, 120, 121, 148, 155, 166, 891, 914, 1216, 1217, 1218, 1555, 1556, 1557, 1558, 1559, 1560], "investig": 43, "maximum": [43, 61, 62, 63, 64, 65, 66, 67, 76, 77, 82, 83, 88, 89, 94, 97, 98, 99, 100, 109, 110, 111, 112, 113, 114, 115, 124, 125, 130, 131, 136, 137, 150, 157, 167, 418, 443, 453, 673, 891, 900, 948, 949, 950, 951, 952, 1071, 1088, 1161, 1164, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1308, 1309, 1310, 1311, 1312, 1451, 1468, 1469, 1470, 1471, 1555, 1607, 1610, 1711, 1712, 1713, 1714, 1715, 1716, 1796, 1809, 1848, 1849, 1850, 1851, 1852, 1853, 1911, 1926, 1927, 1928, 1929, 1934, 1937, 1969, 1988, 2072, 2075, 2076, 2080, 2081, 2090, 2091, 2092, 2095, 2100, 2101, 2102, 2103, 2116, 2121], "incomplet": 43, "per": [43, 63, 70, 71, 111, 118, 119, 147, 158, 167, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014], "self": [43, 45, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 152, 158, 159, 164, 166, 167, 168, 169, 198, 199, 200, 204, 205, 206, 209, 210, 211, 214, 215, 216, 219, 220, 221, 224, 226, 229, 230, 231, 242, 243, 249, 250, 253, 254, 255, 261, 262, 263, 267, 268, 269, 271, 272, 273, 274, 277, 278, 279, 282, 283, 284, 287, 288, 289, 292, 293, 294, 300, 301, 302, 304, 305, 307, 308, 310, 312, 313, 318, 319, 320, 321, 330, 331, 332, 335, 336, 337, 340, 341, 342, 345, 346, 347, 358, 359, 363, 364, 365, 374, 375, 376, 381, 382, 383, 386, 387, 388, 391, 392, 393, 396, 397, 398, 403, 404, 405, 407, 418, 419, 425, 426, 427, 444, 446, 447, 454, 455, 456, 459, 460, 461, 464, 465, 466, 469, 470, 471, 474, 475, 476, 479, 480, 481, 484, 485, 486, 489, 490, 491, 494, 495, 496, 499, 500, 501, 504, 505, 506, 509, 510, 511, 514, 515, 516, 519, 520, 521, 524, 525, 526, 529, 530, 531, 534, 535, 536, 539, 540, 541, 544, 545, 546, 549, 550, 551, 554, 555, 556, 559, 560, 561, 564, 565, 566, 569, 570, 571, 574, 575, 576, 579, 580, 581, 584, 585, 586, 589, 590, 591, 594, 595, 596, 599, 600, 601, 604, 605, 606, 609, 610, 611, 614, 615, 616, 619, 620, 621, 624, 625, 626, 629, 630, 631, 634, 635, 636, 639, 640, 641, 644, 645, 646, 649, 650, 651, 654, 655, 656, 659, 660, 661, 664, 665, 666, 669, 670, 671, 674, 675, 676, 679, 680, 681, 684, 685, 686, 689, 690, 691, 694, 695, 696, 699, 700, 701, 704, 705, 706, 709, 710, 711, 714, 715, 716, 719, 720, 721, 724, 725, 726, 729, 730, 731, 734, 735, 736, 739, 740, 741, 744, 745, 746, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 779, 780, 781, 784, 785, 786, 789, 790, 791, 794, 795, 796, 799, 800, 801, 804, 805, 806, 809, 810, 811, 814, 815, 816, 819, 820, 821, 824, 825, 828, 829, 834, 835, 836, 839, 840, 841, 854, 855, 856, 860, 861, 862, 865, 866, 867, 870, 871, 872, 876, 877, 878, 881, 882, 883, 886, 887, 888, 917, 918, 919, 923, 924, 925, 928, 929, 930, 933, 934, 935, 938, 939, 940, 943, 944, 945, 948, 949, 950, 953, 954, 955, 958, 959, 961, 962, 963, 968, 969, 970, 974, 975, 978, 979, 982, 983, 984, 987, 988, 989, 992, 993, 994, 997, 998, 999, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1020, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1035, 1048, 1049, 1050, 1059, 1060, 1061, 1064, 1065, 1066, 1094, 1095, 1096, 1099, 1100, 1101, 1104, 1105, 1106, 1109, 1110, 1111, 1114, 1115, 1116, 1120, 1121, 1122, 1125, 1126, 1127, 1130, 1131, 1132, 1135, 1136, 1137, 1140, 1141, 1142, 1145, 1146, 1147, 1155, 1156, 1157, 1161, 1162, 1163, 1166, 1167, 1168, 1175, 1176, 1177, 1182, 1183, 1184, 1187, 1188, 1189, 1206, 1208, 1209, 1211, 1213, 1214, 1216, 1217, 1219, 1221, 1223, 1225, 1227, 1229, 1230, 1233, 1235, 1237, 1239, 1240, 1242, 1244, 1245, 1247, 1249, 1250, 1252, 1254, 1255, 1259, 1260, 1261, 1266, 1267, 1269, 1270, 1271, 1275, 1276, 1277, 1280, 1281, 1282, 1287, 1288, 1290, 1291, 1292, 1295, 1296, 1297, 1300, 1301, 1302, 1305, 1306, 1308, 1309, 1310, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1332, 1333, 1334, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1352, 1353, 1354, 1357, 1358, 1359, 1363, 1364, 1365, 1368, 1369, 1370, 1373, 1374, 1376, 1377, 1378, 1386, 1387, 1388, 1391, 1392, 1393, 1407, 1408, 1409, 1412, 1413, 1414, 1417, 1419, 1420, 1423, 1425, 1428, 1429, 1430, 1431, 1433, 1435, 1436, 1445, 1447, 1448, 1453, 1454, 1455, 1457, 1458, 1459, 1463, 1464, 1465, 1468, 1469, 1470, 1472, 1473, 1474, 1476, 1477, 1478, 1481, 1483, 1484, 1491, 1492, 1493, 1496, 1497, 1498, 1501, 1502, 1503, 1506, 1507, 1510, 1511, 1512, 1515, 1516, 1517, 1523, 1524, 1525, 1528, 1529, 1530, 1535, 1536, 1537, 1540, 1541, 1542, 1545, 1546, 1547, 1550, 1551, 1552, 1554, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1565, 1566, 1567, 1568, 1571, 1572, 1573, 1576, 1577, 1578, 1582, 1583, 1584, 1587, 1588, 1589, 1592, 1593, 1594, 1597, 1598, 1599, 1602, 1603, 1604, 1607, 1608, 1609, 1612, 1613, 1614, 1617, 1618, 1619, 1622, 1623, 1624, 1627, 1628, 1629, 1632, 1633, 1634, 1637, 1638, 1639, 1642, 1643, 1644, 1647, 1648, 1649, 1652, 1654, 1655, 1657, 1659, 1660, 1662, 1664, 1666, 1667, 1668, 1670, 1672, 1673, 1675, 1677, 1678, 1680, 1682, 1683, 1685, 1687, 1688, 1690, 1692, 1693, 1696, 1697, 1698, 1701, 1702, 1703, 1706, 1707, 1708, 1712, 1713, 1714, 1717, 1718, 1719, 1722, 1723, 1724, 1727, 1728, 1729, 1732, 1733, 1734, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1752, 1753, 1754, 1757, 1758, 1759, 1762, 1763, 1764, 1767, 1768, 1769, 1772, 1774, 1775, 1777, 1779, 1780, 1782, 1784, 1785, 1787, 1789, 1790, 1817, 1818, 1819, 1822, 1823, 1824, 1827, 1828, 1829, 1832, 1833, 1834, 1837, 1838, 1839, 1843, 1844, 1845, 1849, 1850, 1851, 1854, 1855, 1856, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1869, 1871, 1872, 1875, 1877, 1878, 1880, 1882, 1883, 1885, 1887, 1888, 1890, 1892, 1893, 1896, 1897, 1898, 1901, 1902, 1903, 1906, 1907, 1908, 1912, 1913, 1914, 1917, 1918, 1919, 1922, 1923, 1924, 1926, 1927, 1928, 1930, 1931, 1932, 1934, 1935, 1936, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1952, 1953, 1954, 1955, 1958, 1959, 1960, 1962, 1963, 1964, 1965, 1967, 1969, 1975, 1976, 2019, 2020, 2025, 2029], "assign": [43, 145, 148, 153, 157, 166], "sequenc": [43, 55, 56, 63, 76, 77, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 147, 148, 149, 150, 152, 160, 161, 164, 169, 180, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 234, 235, 237, 258, 259, 267, 269, 271, 277, 278, 280, 292, 294, 296, 300, 302, 304, 318, 319, 321, 335, 337, 339, 345, 347, 349, 386, 388, 390, 403, 405, 407, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 789, 791, 793, 794, 796, 797, 798, 799, 801, 802, 803, 819, 821, 823, 839, 841, 843, 870, 871, 872, 873, 874, 881, 884, 891, 914, 922, 933, 937, 992, 995, 1005, 1007, 1009, 1038, 1044, 1053, 1058, 1071, 1073, 1074, 1077, 1083, 1085, 1093, 1120, 1121, 1122, 1123, 1124, 1130, 1133, 1134, 1155, 1157, 1159, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1175, 1177, 1179, 1187, 1189, 1191, 1201, 1204, 1206, 1207, 1209, 1211, 1212, 1214, 1216, 1218, 1242, 1246, 1247, 1248, 1250, 1252, 1253, 1255, 1258, 1259, 1261, 1263, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1382, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1450, 1463, 1465, 1481, 1482, 1484, 1528, 1530, 1532, 1535, 1537, 1539, 1550, 1552, 1554, 1555, 1556, 1558, 1560, 1561, 1563, 1565, 1587, 1589, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1609, 1611, 1617, 1619, 1621, 1642, 1644, 1646, 1670, 1671, 1673, 1685, 1686, 1688, 1689, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1711, 1712, 1714, 1716, 1717, 1720, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1782, 1783, 1785, 1796, 1804, 1814, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1859, 1861, 1863, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1896, 1898, 1900, 1911, 1912, 1914, 1916, 1917, 1919, 1921, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1984, 2007, 2016, 2023, 2024, 2031, 2032], "regist": [43, 2019, 2022], "wherea": [43, 144, 146, 148, 149, 150, 154, 155, 160, 161, 169, 1978], "primarili": [43, 146, 453, 714, 717, 1981], "invit": 43, "roadmap": [43, 147, 1969], "mainli": [43, 142, 160, 165, 167, 1968, 1981], "extend": [43, 145, 151, 154, 158, 161, 181, 1071, 1088, 1161, 1164, 1978, 1981, 1987], "ideal": [43, 147, 157, 167], "Such": [43, 160, 1555, 1675, 1679], "easier": [43, 143, 144, 148, 158, 159, 161, 1968, 1981, 1983], "interv": [43, 80, 81, 90, 91, 128, 129, 138, 139, 237, 239, 240, 272, 275, 277, 280, 1555, 1680, 1684, 1711, 1712, 1715, 1727, 1730, 1767, 1770, 1821, 1827, 1828, 1829, 1830, 1831, 1837, 1838, 1839, 1840, 1841, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967], "forth": 43, "rare": [43, 149, 181, 1986], "scenario": [43, 152], "someon": [43, 152, 181], "someth": [43, 161, 167, 168, 181, 1987], "unfortun": 43, "redund": [43, 148, 152, 158, 162], "behind": [43, 66, 67, 142, 154, 160, 163, 165, 1463, 1464], "well": [43, 112, 113, 147, 148, 152, 157, 158, 159, 160, 168, 169, 180, 1258, 1341, 1343, 1344, 1345, 1555, 1647, 1650, 1980, 1981, 1982, 1986, 2090, 2096], "practic": [43, 147, 1984], "separ": [43, 144, 146, 160, 164, 166, 167, 1982, 1986], "branch": [43, 143, 181, 234, 235, 453, 489, 492, 1981], "role": [43, 158, 165, 1982, 1984, 1988], "date": [43, 161], "upstream": [43, 143], "complic": [43, 159, 164], "merge_with_upstream": 43, "name_of_your_branch": 43, "resolv": [43, 148, 164, 1711, 1727, 1730, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951], "abort": 43, "tediou": [43, 150], "resolut": [43, 323, 363, 366], "stash": 43, "reinstat": 43, "fetch": [43, 143], "uncommit": 43, "unstag": 43, "untrack": 43, "comprehens": [43, 143], "atlassian": 43, "tutori": [43, 158], "wrote": 43, "piec": [43, 144, 155, 156, 164, 1977, 1979], "tag": 43, "navig": [43, 142], "blame": 43, "revis": 43, "log": [43, 55, 56, 61, 62, 72, 73, 103, 104, 109, 110, 120, 121, 146, 147, 150, 155, 157, 158, 160, 162, 164, 167, 237, 277, 278, 279, 280, 281, 453, 628, 634, 637, 644, 647, 777, 778, 891, 915, 1064, 1067, 1247, 1251, 1642, 1643, 1644, 1646, 1969, 2072, 2076, 2080, 2081, 2100, 2101, 2102, 2103], "eg": 43, "16": [43, 45, 48, 49, 61, 62, 63, 70, 71, 72, 73, 80, 81, 88, 89, 94, 99, 100, 105, 106, 109, 110, 111, 112, 113, 118, 119, 120, 121, 124, 125, 128, 129, 150, 167, 323, 374, 376, 377, 453, 519, 520, 521, 522, 523, 634, 637, 719, 720, 754, 755, 757, 758, 804, 805, 806, 807, 808, 809, 810, 854, 855, 856, 857, 858, 886, 889, 891, 899, 903, 922, 928, 929, 930, 931, 932, 943, 944, 946, 968, 969, 970, 971, 1038, 1039, 1042, 1044, 1045, 1046, 1053, 1055, 1071, 1078, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1295, 1297, 1407, 1409, 1451, 1487, 1489, 1523, 1526, 1535, 1536, 1537, 1538, 1539, 1555, 1556, 1557, 1559, 1576, 1579, 1587, 1590, 1591, 1627, 1630, 1657, 1661, 1711, 1782, 1783, 1785, 1786, 1796, 1805, 1821, 1827, 1828, 1830, 1831, 1832, 1834, 1837, 1839, 1841, 1848, 1869, 1873, 1911, 1917, 1918, 1920, 1922, 1925, 2072, 2076, 2080, 2081, 2100, 2101, 2102, 2103], "past": [43, 143, 159, 160, 1981], "l": [43, 72, 73, 109, 110, 120, 121, 142, 649, 651, 653, 1555, 1556, 1557, 1558, 1559, 1560, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1602, 1605, 1670, 1671, 1672, 1673, 1674], "filepath": [43, 97, 98, 143], "grep": 43, "commit_id": 43, "handi": 43, "histori": 43, "toggl": 43, "vertic": [43, 111, 1071, 1093, 1237, 1238, 1240, 1242, 1246], "highlight": [43, 150, 158], "previou": [43, 66, 67, 114, 115, 143, 147, 154, 158, 160, 162, 169, 181, 323, 413, 414, 415, 416, 1258, 1439, 1441, 1442, 1443, 1451, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1984, 1997, 1998, 2001, 2002, 2005], "whenev": [43, 147, 148, 152, 156, 157, 160, 167], "think": [43, 150, 1982], "gain": [43, 143, 163, 168, 1981, 1997, 2005], "quit": [43, 144, 150, 151, 155, 156, 160, 162, 1981, 1987], "newli": [43, 57, 58, 105, 106, 147, 157, 160, 234, 235, 323, 330, 331, 332, 333, 334, 1258, 1274], "cannot": [43, 63, 143, 145, 148, 158, 164, 169, 789, 790, 794, 795, 799, 800, 1987], "least": [43, 63, 111, 144, 147, 148, 150, 155, 160, 789, 792, 794, 797, 799, 802, 891, 907, 922, 933, 934, 935, 936, 937, 1038, 1044, 1048, 1049, 1050, 1051, 1052, 1071, 1072, 1073, 1074, 1079, 1555, 1602, 1605, 2072, 2083], "approv": 43, "hash": [43, 167], "cancel": 43, "speedup": 43, "unavail": 43, "tickbox": 43, "lower": [43, 55, 56, 61, 62, 63, 72, 73, 80, 81, 109, 110, 111, 120, 121, 128, 129, 150, 158, 160, 162, 164, 181, 237, 258, 259, 305, 307, 309, 453, 669, 670, 671, 672, 673, 844, 849, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1219, 1222, 1555, 1556, 1557, 1558, 1559, 1560, 1587, 1590, 1821, 1837, 1838, 1839, 1840, 1841, 1968, 1977, 1978, 1979, 1981, 1982, 1987, 1988, 1995, 1996, 1997, 2002, 2090, 2096], "span": [43, 162, 1979, 1987], "intent": [43, 157], "discourag": 43, "philosophi": 43, "increment": [43, 64, 65, 112, 113, 161, 1258, 1352, 1353, 1354, 1355, 1356, 1981], "valuabl": 43, "infrequ": 43, "earli": [43, 1969, 1981], "wast": [43, 147], "spot": [43, 150, 155], "mistak": [43, 153], "propos": [43, 158, 162, 1981], "mountain": 43, "around": [43, 94, 97, 98, 99, 100, 144, 154, 155, 158, 161, 166, 181, 1071, 1088, 1161, 1164, 1968, 1979, 1981, 1988], "advoc": [43, 181], "style": [43, 1071, 1088, 1161, 1164, 1848, 1864, 1867, 1981], "were": [43, 97, 98, 105, 106, 148, 153, 160, 161, 162, 164, 386, 388, 390, 1981, 1982, 1987], "actual": [43, 142, 147, 155, 157, 160, 162, 163, 168, 181, 1982, 1987], "aim": [43, 143, 160, 163, 1979, 1981, 1984], "session": [43, 1981], "block": [43, 146, 152, 153, 155, 160, 163, 165, 169, 181, 418, 419, 1033, 1036, 1053, 1056, 1451, 1480, 1488, 1968, 1969, 1986, 1988], "smaller": [43, 76, 77, 124, 125, 164, 779, 782, 891, 892, 904, 1005, 1008, 1711, 1712, 1715, 1752, 1753, 1754, 1755, 1756, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951], "beauti": 43, "particularli": [43, 167, 181, 1979], "concern": [43, 142, 146, 150, 157, 162, 163, 1987], "difficult": [43, 143, 148, 160, 181, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894], "undo": 43, "stress": 43, "frequenc": [43, 64, 65, 112, 113, 147, 1258, 1308, 1309, 1310, 1311, 1312], "advantag": [43, 157, 158, 1981], "nifti": 43, "reassur": 43, "isol": [43, 1982, 1987], "fact": [43, 143, 158, 160, 164, 167], "local_path_to_ivi": 43, "overwrit": [43, 97, 98, 157, 158, 164, 418, 443], "subfold": [43, 159, 160, 161], "wide": [43, 160, 1979, 1981], "via": [43, 143, 146, 148, 149, 152, 157, 161, 162, 164, 166, 167, 180, 1796, 1807, 1808, 1981], "dep": 43, "fresh": 43, "arsen": 43, "declar": 43, "exec": 43, "rf": 43, "cp": 43, "ivy_contain": 43, "test_imag": 43, "test_random_crop": 43, "test_creation_funct": 43, "test_arang": 43, "variou": [43, 143, 148, 151, 152, 154, 156, 159, 160, 180, 1968, 1977, 1979, 1980, 1981, 1984, 1987], "cpu": [43, 55, 56, 59, 60, 80, 81, 103, 104, 107, 108, 112, 113, 128, 129, 149, 158, 160, 181, 237, 258, 259, 266, 272, 275, 277, 278, 279, 280, 281, 292, 293, 295, 297, 298, 300, 303, 318, 322, 418, 419, 422, 424, 425, 426, 427, 428, 429, 430, 431, 435, 438, 440, 441, 444, 445, 446, 447, 448, 449, 451, 452, 819, 822, 958, 960, 1171, 1172, 1174, 1320, 1322, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1979, 1981, 1984, 1986, 1997, 1998, 2001, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2029, 2031, 2032, 2043, 2059, 2061, 2062], "gpu": [43, 149, 166, 237, 272, 275, 418, 419, 424, 430, 431, 434, 436, 438, 440, 441, 442, 449, 451, 452, 1979, 1981, 1984, 1985, 1986], "combin": [43, 94, 97, 98, 99, 100, 144, 146, 148, 150, 155, 160, 162, 169, 1258, 1313, 1314, 1555, 1561, 1564, 1602, 1605, 1981], "num": [43, 55, 56, 103, 104, 154, 164, 237, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 2072, 2077], "integ": [43, 45, 48, 49, 61, 62, 63, 76, 77, 80, 81, 88, 89, 90, 91, 94, 97, 98, 99, 100, 109, 110, 111, 120, 121, 124, 125, 128, 129, 136, 137, 138, 139, 146, 148, 156, 159, 160, 164, 166, 237, 239, 240, 266, 323, 374, 377, 379, 391, 394, 402, 403, 406, 410, 453, 454, 457, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 574, 577, 579, 582, 664, 667, 699, 702, 714, 717, 719, 722, 764, 768, 769, 773, 819, 820, 821, 822, 823, 839, 840, 841, 842, 843, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 891, 895, 898, 899, 907, 922, 923, 924, 926, 943, 946, 958, 959, 960, 987, 988, 989, 990, 991, 1038, 1044, 1048, 1051, 1071, 1076, 1082, 1088, 1092, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1201, 1204, 1237, 1238, 1239, 1240, 1241, 1258, 1328, 1450, 1555, 1571, 1574, 1612, 1615, 1680, 1684, 1685, 1686, 1688, 1689, 1711, 1757, 1758, 1759, 1760, 1761, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1895, 1901, 1904, 1911, 1912, 1915, 1917, 1920, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 2072, 2075, 2076, 2080, 2081, 2086, 2089, 2090, 2093, 2094, 2095, 2097, 2100, 2102, 2103, 2116, 2121], "greater": [43, 45, 48, 49, 61, 62, 63, 80, 81, 94, 99, 100, 109, 110, 128, 129, 159, 453, 459, 462, 474, 477, 489, 492, 509, 512, 519, 522, 574, 577, 579, 582, 588, 699, 702, 714, 717, 724, 727, 764, 768, 891, 914, 922, 1038, 1044, 1216, 1217, 1218, 1555, 1561, 1564, 1612, 1615, 1711, 1762, 1765, 1821, 1837, 1838, 1839, 1840, 1841, 2090, 2096], "prompt": [43, 1969, 1995, 1996], "whole": 43, "multipli": [43, 61, 62, 88, 89, 109, 110, 111, 144, 145, 146, 150, 453, 469, 470, 471, 472, 473, 683, 749, 750, 751, 752, 753, 1053, 1058, 1130, 1133, 1134, 1911, 1912, 1913, 1915], "cursor": 43, "alt": 43, "j": [43, 55, 56, 63, 72, 73, 88, 89, 103, 104, 109, 110, 111, 120, 121, 142, 237, 292, 293, 294, 295, 296, 649, 651, 653, 784, 785, 787, 886, 888, 889, 890, 891, 893, 1053, 1055, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1258, 1266, 1268, 1555, 1670, 1671, 1672, 1673, 1674, 1911, 1922, 1923, 1925, 1977], "blog": 43, "breakpoint": 43, "gutter": 43, "caret": 43, "f8": 43, "f9": 43, "Into": 43, "f7": 43, "smart": 43, "interest": 43, "consol": [43, 160, 166, 1258, 1385], "store": [43, 57, 58, 64, 65, 72, 73, 76, 77, 97, 98, 105, 106, 112, 113, 120, 121, 124, 125, 144, 145, 146, 147, 151, 164, 166, 167, 168, 237, 258, 259, 300, 303, 318, 322, 340, 341, 342, 344, 1258, 1308, 1309, 1310, 1311, 1312, 1555, 1670, 1671, 1672, 1673, 1674, 1711, 1757, 1758, 1759, 1760, 1761, 1968, 2019, 2020, 2043, 2061, 2064], "variabl": [43, 45, 48, 49, 64, 65, 66, 67, 78, 79, 97, 98, 112, 113, 114, 115, 126, 127, 145, 148, 151, 153, 154, 157, 160, 161, 164, 167, 168, 169, 181, 870, 873, 1171, 1173, 1258, 1269, 1272, 1357, 1358, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1376, 1377, 1378, 1379, 1380, 1417, 1420, 1421, 1451, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1489, 1545, 1548, 1555, 1647, 1650, 1792, 1793, 1794, 1795, 1816, 1817, 1818, 1819, 1820, 1982, 1993, 1994, 1995, 1996, 1997, 1998, 2001, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2043, 2048, 2059, 2060, 2062, 2063], "fragment": [43, 1977, 1979, 1983], "except": [43, 63, 64, 65, 76, 77, 80, 81, 90, 91, 97, 98, 111, 112, 113, 120, 121, 128, 129, 138, 139, 142, 143, 144, 148, 151, 153, 154, 157, 158, 162, 166, 181, 323, 340, 343, 819, 822, 865, 868, 891, 896, 1140, 1141, 1142, 1143, 1144, 1171, 1172, 1201, 1203, 1258, 1269, 1270, 1272, 1273, 1287, 1288, 1289, 1357, 1358, 1360, 1397, 1417, 1418, 1421, 1438, 1555, 1632, 1634, 1635, 1636, 1711, 1717, 1718, 1720, 1727, 1730, 1767, 1770, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1848, 1864, 1867, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 2019, 2020, 2034, 2040, 2064], "pychram": 43, "depth": [43, 55, 56, 103, 104, 167, 168, 169, 180, 237, 292, 293, 294, 295, 296, 881, 884, 1071, 1077, 1258, 1338, 1796, 1809, 1995, 1996, 2019, 2020], "dummi": 43, "wherein": [43, 156, 160], "evalu": [43, 61, 62, 97, 98, 109, 110, 111, 146, 148, 162, 453, 564, 565, 566, 567, 568, 569, 571, 572, 573, 624, 625, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 654, 656, 658, 684, 685, 686, 688, 694, 695, 696, 698, 724, 725, 726, 727, 728, 744, 747, 876, 878, 987, 989, 997, 999, 1000, 1001, 1053, 1058, 1071, 1084, 1130, 1133, 1237, 1240, 1451, 1487, 1796, 1807, 1808, 1957, 1958, 1961, 1963, 1966, 1981], "failur": [43, 147, 159, 160], "arraywithactiv": [45, 46, 48, 49, 166], "arraywithcr": [45, 48, 49, 55, 166], "arraywithdatatyp": [45, 48, 49, 57, 166], "arraywithdevic": [45, 48, 49, 59, 166], "arraywithgener": [45, 48, 49, 64, 166], "arraywithgradi": [45, 48, 49, 66, 166], "arraywithimag": [45, 48, 49, 68, 166], "arraywithlay": [45, 48, 49, 70, 166], "arraywithlinearalgebra": [45, 48, 49, 72, 166], "arraywithloss": [45, 48, 49, 74, 166], "arraywithmanipul": [45, 48, 49, 76, 166], "arraywithnorm": [45, 48, 49, 78, 166], "arraywithrandom": [45, 48, 49, 80, 166], "arraywithsearch": [45, 48, 49, 82, 166], "arraywithset": [45, 48, 49, 84, 166], "arraywithsort": [45, 48, 49, 86, 166], "arraywithstatist": [45, 48, 49, 88, 166], "arraywithutil": [45, 48, 49, 90, 166], "arraywithactivationsexperiment": [45, 48, 49, 63], "arraywithconversionsexperiment": [45, 48, 49, 63], "arraywithcreationexperiment": [45, 48, 49, 63], "arraywithdata_typeexperiment": [45, 48, 49, 63], "arraywithdeviceexperiment": [45, 48, 49, 63], "arraywithelementwiseexperiment": [45, 48, 49, 63], "arraywithgeneralexperiment": [45, 48, 49, 63], "arraywithgradientsexperiment": [45, 48, 49, 63], "arraywithimageexperiment": [45, 48, 49, 63], "arraywithlayersexperiment": [45, 48, 49, 63], "arraywithlinearalgebraexperiment": [45, 48, 49, 63], "arraywithlossesexperiment": [45, 48, 49, 63], "arraywithmanipulationexperiment": [45, 48, 49, 63], "arraywithnormsexperiment": [45, 48, 49, 63], "arraywithrandomexperiment": [45, 48, 49, 63], "arraywithsearchingexperiment": [45, 48, 49, 63], "arraywithsetexperiment": [45, 48, 49, 63], "arraywithsortingexperiment": [45, 48, 49, 63], "arraywithstatisticalexperiment": [45, 48, 49, 63], "arraywithutilityexperiment": [45, 48, 49, 63], "properti": [45, 48, 49, 97, 98, 143, 146, 150, 155, 159, 160, 166, 167, 168, 776, 1194, 1196, 1975, 1976, 1987, 2019, 2020, 2025, 2026, 2027, 2028, 2030], "transpos": [45, 48, 49, 72, 73, 97, 98, 120, 121, 157, 166, 169, 1489, 1490, 1496, 1499, 1506, 1508, 1515, 1518, 1520, 1521, 1555, 1622, 1623, 1624, 1625, 1626, 1632, 1634, 1635, 1636, 1969, 2007, 2009, 2011, 2013, 2090, 2099], "dimension": [45, 48, 49, 55, 56, 63, 72, 73, 76, 77, 82, 83, 88, 89, 90, 91, 97, 98, 109, 110, 111, 120, 121, 124, 125, 136, 137, 138, 139, 164, 237, 239, 240, 258, 259, 282, 283, 285, 789, 792, 794, 797, 799, 802, 844, 849, 850, 860, 863, 891, 914, 922, 928, 931, 1038, 1044, 1053, 1054, 1071, 1072, 1073, 1074, 1078, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1555, 1561, 1564, 1566, 1569, 1592, 1595, 1602, 1605, 1617, 1618, 1619, 1620, 1621, 1627, 1630, 1632, 1635, 1680, 1684, 1685, 1686, 1688, 1689, 1711, 1757, 1758, 1759, 1760, 1761, 1848, 1849, 1850, 1852, 1854, 1855, 1857, 1864, 1867, 1911, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1978, 1981, 1988], "whose": [45, 48, 49, 55, 56, 61, 62, 63, 64, 65, 72, 73, 76, 77, 84, 85, 88, 89, 103, 104, 109, 110, 111, 112, 113, 120, 121, 124, 125, 132, 133, 136, 137, 151, 160, 237, 267, 269, 271, 305, 307, 309, 310, 312, 314, 453, 464, 465, 466, 467, 468, 479, 480, 481, 482, 483, 494, 495, 496, 497, 498, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 699, 700, 702, 704, 707, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 1071, 1085, 1120, 1121, 1122, 1123, 1124, 1187, 1188, 1189, 1191, 1258, 1274, 1417, 1419, 1420, 1421, 1555, 1556, 1557, 1558, 1559, 1560, 1566, 1569, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1670, 1671, 1672, 1673, 1674, 1711, 1732, 1733, 1734, 1735, 1736, 1752, 1753, 1754, 1755, 1756, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1911, 1917, 1919, 1921, 1922, 1923, 1925, 2090, 2096], "dimens": [45, 48, 49, 55, 56, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 97, 98, 99, 100, 103, 104, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 150, 152, 158, 159, 160, 162, 164, 167, 196, 209, 212, 224, 227, 237, 292, 293, 294, 295, 296, 305, 307, 309, 310, 312, 314, 789, 792, 794, 797, 799, 800, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 839, 840, 841, 842, 843, 865, 868, 870, 873, 891, 895, 896, 903, 910, 922, 928, 929, 931, 968, 969, 970, 971, 1038, 1039, 1040, 1041, 1044, 1045, 1046, 1047, 1071, 1072, 1073, 1074, 1078, 1089, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1175, 1176, 1177, 1178, 1179, 1201, 1202, 1203, 1204, 1258, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1308, 1309, 1310, 1311, 1312, 1320, 1324, 1332, 1333, 1334, 1335, 1336, 1450, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1540, 1543, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1597, 1599, 1600, 1602, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1685, 1686, 1688, 1689, 1695, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1717, 1718, 1720, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1765, 1767, 1770, 1782, 1783, 1784, 1785, 1786, 1792, 1793, 1794, 1795, 1821, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1911, 1922, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1975, 1976, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2072, 2075, 2081], "ax": [45, 46, 47, 48, 49, 63, 72, 73, 76, 77, 82, 83, 88, 89, 90, 91, 95, 96, 111, 120, 121, 124, 125, 130, 131, 136, 137, 138, 139, 148, 150, 160, 161, 164, 166, 209, 211, 213, 224, 225, 226, 228, 418, 443, 839, 840, 841, 842, 843, 865, 868, 891, 895, 896, 910, 1071, 1085, 1088, 1089, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1175, 1176, 1177, 1178, 1179, 1201, 1202, 1203, 1204, 1258, 1450, 1555, 1607, 1608, 1609, 1610, 1611, 1647, 1650, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1685, 1686, 1688, 1689, 1711, 1722, 1725, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1752, 1753, 1754, 1755, 1756, 1762, 1764, 1765, 1766, 1772, 1776, 1787, 1791, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1911, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1975, 1976, 2072, 2081, 2090, 2092], "permut": [45, 48, 49, 76, 77, 124, 125, 1711, 1737, 1738, 1739, 1740, 1741, 1772, 1776], "__abs__": [45, 48, 49, 94, 99, 100], "variant": [45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 150, 151, 162, 198, 199, 200, 202, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 233, 242, 243, 249, 250, 253, 254, 261, 262, 267, 268, 269, 271, 277, 278, 279, 281, 282, 283, 287, 288, 292, 293, 294, 296, 300, 301, 302, 304, 305, 307, 310, 312, 318, 319, 320, 321, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 386, 387, 388, 390, 403, 404, 405, 407, 425, 426, 427, 429, 444, 445, 446, 447, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 819, 820, 821, 823, 824, 825, 827, 828, 829, 831, 834, 835, 836, 838, 839, 840, 841, 843, 854, 855, 856, 858, 860, 861, 862, 865, 866, 867, 869, 870, 871, 872, 874, 876, 877, 878, 880, 881, 882, 883, 885, 886, 888, 890, 917, 918, 919, 921, 923, 924, 925, 927, 928, 929, 930, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 944, 945, 947, 948, 949, 950, 952, 953, 954, 955, 957, 958, 959, 961, 962, 963, 965, 974, 975, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1048, 1049, 1050, 1052, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1094, 1095, 1096, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1170, 1175, 1176, 1177, 1179, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1191, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1217, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1259, 1260, 1261, 1263, 1266, 1267, 1269, 1270, 1271, 1273, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1287, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1305, 1306, 1308, 1309, 1310, 1312, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1332, 1333, 1334, 1336, 1341, 1342, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1386, 1387, 1388, 1390, 1391, 1393, 1395, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1445, 1446, 1447, 1448, 1453, 1454, 1455, 1457, 1458, 1463, 1464, 1465, 1468, 1469, 1472, 1473, 1476, 1477, 1481, 1482, 1483, 1484, 1491, 1492, 1493, 1495, 1501, 1502, 1503, 1505, 1510, 1511, 1512, 1514, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1532, 1535, 1536, 1537, 1539, 1550, 1551, 1552, 1554, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1565, 1571, 1572, 1573, 1587, 1588, 1589, 1591, 1597, 1598, 1599, 1602, 1604, 1606, 1607, 1608, 1609, 1611, 1617, 1618, 1619, 1621, 1632, 1634, 1636, 1642, 1643, 1644, 1646, 1670, 1671, 1672, 1673, 1675, 1676, 1677, 1678, 1685, 1686, 1688, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1817, 1818, 1819, 1822, 1823, 1824, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1841, 1843, 1844, 1845, 1847, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1932, 1934, 1936, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1952, 1953, 1954, 1955, 1958, 1959, 1960, 1962, 1963, 1964, 1965, 1967], "ab": [45, 48, 49, 61, 62, 94, 99, 100, 109, 110, 148, 156, 158, 160, 453, 458, 699, 702, 779, 782, 891, 892, 904, 1005, 1008, 1555, 1607, 1610, 1657, 1661, 1685, 1686, 1688, 1689, 1796, 1805, 1808, 1969, 2043, 2061], "wrap": [45, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 160, 164, 166, 169, 181, 182, 194, 198, 199, 200, 202, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 233, 242, 243, 249, 250, 253, 254, 261, 262, 267, 268, 269, 271, 277, 278, 279, 281, 282, 283, 287, 288, 292, 293, 294, 296, 300, 301, 302, 304, 305, 307, 310, 312, 318, 319, 320, 321, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 386, 388, 390, 403, 404, 405, 407, 425, 426, 427, 429, 444, 445, 446, 447, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 819, 820, 821, 823, 824, 825, 827, 828, 829, 831, 834, 835, 836, 838, 839, 840, 841, 843, 854, 855, 856, 858, 860, 861, 862, 865, 866, 867, 869, 870, 871, 872, 874, 876, 877, 878, 880, 881, 882, 883, 885, 886, 888, 890, 917, 918, 919, 921, 923, 924, 925, 927, 928, 929, 930, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 944, 945, 947, 948, 949, 950, 952, 953, 954, 955, 957, 958, 959, 961, 962, 963, 965, 974, 975, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1048, 1049, 1050, 1052, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1071, 1088, 1094, 1095, 1096, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1175, 1176, 1177, 1179, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1191, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1217, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1261, 1263, 1266, 1267, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1287, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1305, 1306, 1308, 1309, 1310, 1312, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1332, 1333, 1334, 1336, 1339, 1341, 1342, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1386, 1387, 1388, 1390, 1391, 1393, 1395, 1403, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1444, 1445, 1446, 1447, 1448, 1453, 1454, 1455, 1457, 1458, 1463, 1464, 1465, 1468, 1469, 1472, 1473, 1476, 1477, 1481, 1482, 1483, 1484, 1491, 1492, 1493, 1495, 1501, 1502, 1503, 1505, 1510, 1511, 1512, 1514, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1532, 1535, 1536, 1537, 1539, 1550, 1551, 1552, 1554, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1565, 1571, 1572, 1573, 1587, 1588, 1589, 1591, 1597, 1598, 1599, 1602, 1604, 1606, 1607, 1608, 1609, 1611, 1632, 1634, 1636, 1642, 1643, 1644, 1646, 1675, 1676, 1685, 1686, 1688, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1817, 1818, 1819, 1822, 1823, 1824, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1841, 1843, 1844, 1845, 1847, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1932, 1934, 1936, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1952, 1953, 1954, 1955, 1958, 1959, 1960, 1962, 1963, 1964, 1965, 1967, 1968, 1975, 1976, 1977, 1981, 1982, 1987, 1988, 2043, 2063], "minim": [45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 151, 157, 159, 162, 164, 198, 199, 200, 202, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 233, 242, 243, 249, 250, 253, 254, 261, 262, 267, 268, 269, 271, 277, 278, 279, 281, 282, 283, 287, 288, 292, 293, 294, 296, 300, 301, 302, 304, 305, 307, 310, 312, 318, 319, 320, 321, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 386, 388, 403, 404, 405, 407, 425, 426, 427, 429, 444, 445, 446, 447, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 816, 818, 819, 820, 821, 823, 824, 825, 827, 828, 829, 831, 834, 835, 836, 838, 839, 840, 841, 843, 854, 855, 856, 858, 860, 861, 862, 865, 866, 867, 869, 870, 871, 872, 874, 876, 877, 878, 880, 881, 882, 883, 885, 886, 888, 890, 917, 918, 919, 921, 923, 924, 925, 927, 928, 929, 930, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 944, 945, 947, 948, 949, 950, 952, 953, 954, 955, 957, 958, 959, 961, 962, 963, 965, 974, 975, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1048, 1049, 1050, 1052, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1094, 1095, 1096, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1170, 1175, 1176, 1177, 1179, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1191, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1217, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1259, 1260, 1261, 1263, 1266, 1267, 1269, 1270, 1271, 1273, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1287, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1305, 1306, 1308, 1309, 1310, 1312, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1332, 1333, 1334, 1336, 1341, 1342, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1386, 1387, 1388, 1390, 1391, 1393, 1395, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1445, 1446, 1447, 1448, 1453, 1454, 1455, 1457, 1458, 1463, 1464, 1465, 1468, 1469, 1472, 1473, 1476, 1477, 1481, 1482, 1483, 1484, 1491, 1492, 1493, 1495, 1501, 1502, 1503, 1505, 1510, 1511, 1512, 1514, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1532, 1535, 1536, 1537, 1539, 1550, 1551, 1552, 1554, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1565, 1571, 1572, 1573, 1587, 1588, 1589, 1591, 1597, 1598, 1599, 1602, 1604, 1606, 1607, 1608, 1609, 1611, 1632, 1634, 1636, 1642, 1643, 1644, 1646, 1675, 1676, 1685, 1686, 1688, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1817, 1818, 1819, 1822, 1823, 1824, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1841, 1843, 1844, 1845, 1847, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1932, 1934, 1936, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1952, 1953, 1954, 1955, 1958, 1959, 1960, 1962, 1963, 1964, 1965, 1967, 1979, 1987], "input": [45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 181, 182, 194, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 360, 362, 363, 366, 374, 377, 381, 384, 386, 387, 388, 389, 390, 391, 394, 396, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 418, 422, 424, 425, 428, 443, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 839, 840, 841, 842, 843, 844, 851, 852, 853, 854, 855, 856, 857, 858, 860, 863, 865, 866, 867, 868, 869, 870, 872, 874, 875, 876, 877, 878, 879, 880, 881, 885, 886, 888, 889, 890, 891, 892, 893, 895, 896, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 974, 975, 977, 978, 979, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 996, 997, 998, 999, 1000, 1001, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1094, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1331, 1332, 1333, 1335, 1341, 1342, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1400, 1405, 1407, 1408, 1409, 1410, 1412, 1413, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1441, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1487, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1598, 1599, 1600, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1800, 1803, 1804, 1805, 1806, 1808, 1809, 1810, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1982, 1985, 1997, 1999, 2000, 2001, 2002, 2004, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2034, 2035, 2038, 2039, 2043, 2048, 2059, 2060, 2061, 2062, 2086, 2088], "numer": [45, 48, 49, 55, 56, 57, 58, 61, 62, 64, 65, 72, 73, 80, 81, 82, 83, 88, 89, 94, 99, 100, 105, 106, 109, 110, 111, 112, 113, 120, 121, 128, 129, 130, 131, 134, 135, 148, 156, 158, 159, 160, 161, 162, 164, 168, 237, 282, 283, 285, 323, 330, 331, 332, 333, 334, 453, 454, 455, 456, 457, 458, 469, 470, 471, 472, 473, 529, 530, 531, 532, 533, 549, 552, 569, 572, 574, 575, 576, 577, 578, 579, 582, 594, 597, 599, 602, 604, 607, 614, 617, 654, 657, 659, 662, 679, 681, 682, 684, 685, 686, 688, 689, 692, 694, 695, 696, 698, 699, 702, 714, 717, 719, 720, 721, 723, 724, 725, 726, 727, 728, 744, 747, 749, 750, 752, 753, 764, 768, 769, 773, 819, 821, 822, 823, 1171, 1172, 1258, 1329, 1330, 1398, 1399, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1555, 1561, 1562, 1563, 1564, 1565, 1592, 1595, 1602, 1605, 1627, 1630, 1642, 1645, 1652, 1656, 1662, 1665, 1670, 1674, 1680, 1684, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1872, 1896, 1898, 1900, 1911, 1926, 1927, 1929, 1938, 1941, 1947, 1951, 1978, 1981, 1987, 1997, 2005, 2086, 2089, 2090, 2091, 2096], "element": [45, 46, 47, 48, 49, 55, 56, 61, 62, 63, 64, 65, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 94, 95, 96, 97, 98, 99, 100, 103, 104, 109, 110, 111, 112, 113, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 136, 137, 151, 159, 160, 162, 164, 196, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 239, 240, 249, 251, 266, 267, 268, 269, 270, 271, 305, 307, 309, 310, 312, 314, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 779, 782, 784, 787, 789, 791, 793, 794, 796, 798, 799, 801, 803, 844, 849, 850, 876, 878, 886, 889, 891, 892, 893, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 961, 962, 963, 964, 965, 966, 967, 982, 983, 984, 985, 986, 987, 989, 997, 999, 1000, 1001, 1005, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1033, 1037, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1059, 1060, 1061, 1062, 1063, 1071, 1078, 1079, 1080, 1081, 1084, 1091, 1114, 1115, 1116, 1117, 1118, 1135, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1157, 1158, 1159, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1201, 1202, 1203, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1219, 1222, 1223, 1226, 1237, 1240, 1247, 1248, 1250, 1251, 1252, 1253, 1255, 1258, 1266, 1268, 1275, 1277, 1278, 1279, 1280, 1283, 1315, 1316, 1317, 1318, 1319, 1407, 1408, 1409, 1411, 1412, 1414, 1416, 1417, 1419, 1420, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1451, 1480, 1488, 1489, 1528, 1529, 1530, 1531, 1532, 1555, 1561, 1562, 1563, 1564, 1565, 1571, 1574, 1581, 1582, 1585, 1602, 1605, 1637, 1640, 1642, 1645, 1652, 1656, 1711, 1712, 1713, 1714, 1715, 1716, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1739, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1765, 1796, 1797, 1800, 1806, 1821, 1822, 1823, 1824, 1825, 1826, 1848, 1859, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1871, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1895, 1901, 1904, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1925, 1926, 1929, 1930, 1931, 1933, 1934, 1937, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1961, 1963, 1966, 1975, 1976, 1985, 2007, 2015, 2034, 2035, 2043, 2046, 2072, 2076, 2080, 2081, 2082, 2083, 2090, 2097, 2098], "__add__": [45, 48, 49, 94, 99, 100, 144, 146, 150, 151, 154, 158, 159, 166], "broadcast": [45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 146, 148, 150, 151, 160, 161, 164, 196, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 418, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 804, 805, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 837, 839, 840, 841, 842, 843, 860, 863, 875, 891, 894, 895, 899, 913, 922, 943, 944, 946, 958, 959, 960, 1033, 1036, 1038, 1041, 1043, 1044, 1047, 1053, 1054, 1056, 1057, 1069, 1070, 1071, 1075, 1089, 1091, 1094, 1097, 1099, 1100, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1140, 1141, 1142, 1143, 1144, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1187, 1188, 1189, 1190, 1191, 1201, 1203, 1204, 1211, 1212, 1213, 1214, 1215, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1290, 1291, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1357, 1359, 1361, 1363, 1367, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1647, 1650, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1787, 1791, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1869, 1870, 1871, 1872, 1873, 1874, 1890, 1894, 1896, 1898, 1900, 1911, 1912, 1915, 1917, 1920, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 2072, 2073], "wise": [45, 46, 47, 48, 49, 61, 62, 63, 72, 73, 94, 95, 96, 99, 100, 109, 110, 111, 120, 121, 162, 196, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 453, 454, 457, 459, 462, 469, 470, 471, 472, 473, 474, 477, 484, 487, 489, 492, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 544, 545, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 672, 674, 677, 679, 680, 681, 682, 683, 689, 690, 691, 692, 693, 699, 700, 701, 702, 703, 704, 705, 709, 710, 711, 713, 714, 715, 716, 717, 718, 749, 750, 751, 752, 753, 769, 770, 771, 772, 773, 779, 782, 784, 787, 875, 881, 884, 891, 892, 893, 897, 898, 900, 901, 902, 904, 905, 906, 907, 908, 911, 912, 915, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 943, 945, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 961, 962, 963, 964, 965, 982, 983, 984, 985, 986, 992, 995, 997, 1000, 1005, 1008, 1015, 1018, 1020, 1023, 1033, 1037, 1038, 1043, 1048, 1049, 1050, 1051, 1052, 1059, 1060, 1061, 1062, 1063, 1071, 1077, 1081, 1083, 1084, 1093, 1155, 1157, 1158, 1159, 1182, 1183, 1184, 1185, 1186, 1242, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1255, 1561, 1562, 1563, 1565, 1711, 1712, 1715, 2025, 2028], "sum": [45, 48, 49, 61, 62, 63, 64, 65, 70, 71, 72, 73, 74, 75, 88, 89, 94, 97, 98, 99, 100, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 136, 137, 146, 148, 155, 157, 164, 418, 443, 453, 469, 470, 471, 472, 473, 644, 647, 749, 750, 752, 891, 910, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1201, 1203, 1258, 1295, 1296, 1297, 1298, 1299, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1489, 1528, 1531, 1550, 1551, 1552, 1553, 1554, 1555, 1607, 1610, 1652, 1656, 1670, 1671, 1672, 1673, 1674, 1685, 1686, 1688, 1689, 1695, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1911, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1997, 2002, 2005], "promot": [45, 48, 49, 57, 58, 61, 62, 63, 72, 73, 94, 99, 100, 105, 106, 109, 110, 111, 120, 121, 134, 135, 143, 151, 152, 155, 323, 330, 331, 332, 333, 334, 345, 346, 347, 348, 349, 401, 402, 403, 406, 412, 453, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 509, 510, 511, 512, 513, 514, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 550, 551, 552, 553, 564, 565, 566, 567, 568, 569, 571, 572, 573, 579, 580, 581, 583, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 664, 667, 679, 680, 681, 682, 683, 699, 700, 701, 702, 703, 714, 715, 717, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 769, 770, 771, 772, 773, 891, 899, 913, 943, 946, 1187, 1188, 1189, 1190, 1191, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1592, 1595, 1597, 1599, 1600, 1602, 1605, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1627, 1630, 1632, 1634, 1635, 1636, 1642, 1645, 1647, 1650, 1680, 1684, 1685, 1686, 1688, 1689, 1711, 1717, 1720, 1767, 1770, 1896, 1898, 1900, 1911, 1930, 1933, 1943, 1946, 2072, 2080, 2086, 2087], "y": [45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 145, 146, 150, 158, 159, 160, 161, 162, 164, 166, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 249, 251, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 285, 297, 298, 300, 303, 318, 322, 323, 330, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 358, 359, 360, 363, 366, 374, 376, 377, 403, 405, 406, 418, 421, 425, 426, 427, 428, 429, 433, 437, 438, 439, 442, 444, 445, 446, 447, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 567, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 644, 645, 646, 647, 648, 649, 650, 652, 654, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 779, 780, 781, 782, 783, 824, 825, 826, 827, 854, 857, 881, 882, 883, 884, 891, 892, 913, 914, 915, 966, 967, 992, 993, 994, 995, 1005, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1033, 1035, 1037, 1038, 1042, 1069, 1070, 1071, 1077, 1083, 1088, 1090, 1091, 1093, 1125, 1127, 1129, 1130, 1132, 1134, 1140, 1142, 1144, 1161, 1164, 1166, 1168, 1170, 1187, 1188, 1189, 1190, 1191, 1206, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1258, 1259, 1261, 1262, 1263, 1266, 1268, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1289, 1295, 1296, 1300, 1301, 1305, 1307, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1337, 1341, 1342, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1398, 1399, 1401, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1417, 1421, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1481, 1482, 1483, 1484, 1485, 1489, 1515, 1518, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1587, 1588, 1589, 1590, 1597, 1598, 1599, 1600, 1602, 1603, 1605, 1607, 1608, 1609, 1610, 1611, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1633, 1634, 1635, 1636, 1642, 1643, 1644, 1645, 1646, 1657, 1661, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1796, 1800, 1803, 1804, 1806, 1814, 1816, 1817, 1820, 1821, 1822, 1825, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1846, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1862, 1864, 1867, 1869, 1873, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967], "z": [45, 48, 49, 61, 62, 63, 64, 65, 72, 73, 74, 75, 80, 81, 84, 85, 88, 89, 94, 99, 100, 103, 104, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 128, 129, 136, 137, 145, 146, 150, 164, 166, 237, 272, 275, 277, 279, 281, 418, 433, 453, 469, 470, 471, 472, 473, 489, 490, 491, 492, 493, 499, 500, 502, 503, 514, 515, 516, 517, 518, 524, 526, 527, 528, 549, 551, 584, 586, 587, 588, 589, 590, 591, 592, 593, 599, 601, 602, 603, 604, 607, 608, 609, 612, 613, 614, 616, 617, 618, 619, 622, 644, 645, 646, 647, 648, 649, 650, 651, 653, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 749, 750, 751, 752, 753, 777, 778, 784, 785, 786, 787, 788, 824, 825, 826, 827, 828, 829, 831, 891, 893, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1258, 1266, 1268, 1315, 1318, 1320, 1321, 1322, 1323, 1347, 1350, 1351, 1352, 1355, 1356, 1391, 1393, 1394, 1395, 1405, 1407, 1408, 1409, 1410, 1411, 1438, 1450, 1555, 1561, 1562, 1563, 1564, 1565, 1602, 1603, 1605, 1632, 1633, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1715, 1767, 1771, 1796, 1800, 1804, 1806, 1814, 1821, 1827, 1828, 1829, 1832, 1833, 1834, 1835, 1837, 1838, 1839, 1840, 1848, 1849, 1852, 1874, 1875, 1877, 1879, 1911, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1934, 1936, 1937, 1938, 1939, 1941, 1943, 1944, 1946, 1997, 2001], "__eq__": [45, 48, 49, 94, 99, 100], "equal": [45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 72, 73, 76, 77, 80, 81, 86, 87, 88, 89, 94, 97, 98, 99, 100, 105, 106, 109, 110, 111, 112, 113, 120, 121, 124, 125, 128, 129, 134, 135, 146, 148, 150, 152, 160, 237, 258, 259, 266, 267, 268, 270, 323, 330, 331, 332, 333, 334, 453, 509, 512, 519, 522, 558, 594, 597, 599, 602, 699, 702, 719, 722, 779, 780, 781, 782, 783, 824, 825, 826, 827, 876, 877, 878, 879, 880, 891, 892, 904, 987, 988, 989, 990, 991, 1005, 1006, 1007, 1008, 1009, 1069, 1070, 1071, 1076, 1082, 1092, 1237, 1238, 1239, 1240, 1241, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1268, 1450, 1555, 1576, 1579, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1642, 1645, 1711, 1712, 1715, 1722, 1725, 1757, 1758, 1759, 1760, 1761, 1787, 1791, 1821, 1837, 1838, 1839, 1840, 1841, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1911, 1930, 1931, 1933, 1943, 1946, 1947, 1951, 1952, 1954, 1956, 1997, 2005], "bool": [45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 148, 150, 152, 157, 158, 160, 161, 164, 169, 196, 198, 200, 201, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 234, 235, 237, 242, 243, 244, 266, 267, 269, 271, 272, 275, 277, 278, 279, 280, 281, 282, 285, 292, 294, 296, 300, 302, 304, 318, 319, 321, 323, 330, 331, 332, 333, 334, 335, 337, 339, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 357, 358, 360, 368, 369, 371, 372, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 394, 396, 397, 399, 401, 403, 405, 407, 408, 413, 417, 418, 424, 425, 426, 427, 428, 434, 435, 438, 439, 443, 444, 445, 447, 450, 452, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 513, 514, 516, 517, 518, 519, 521, 523, 524, 526, 527, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 686, 688, 689, 690, 691, 692, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 798, 799, 800, 801, 802, 803, 819, 821, 823, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 852, 853, 875, 891, 892, 893, 895, 904, 905, 906, 909, 910, 911, 915, 916, 933, 937, 966, 967, 974, 975, 976, 977, 978, 979, 980, 981, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1020, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1038, 1043, 1071, 1072, 1074, 1091, 1114, 1115, 1116, 1117, 1118, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1156, 1157, 1158, 1159, 1166, 1167, 1168, 1169, 1170, 1175, 1177, 1179, 1187, 1189, 1191, 1201, 1202, 1203, 1204, 1206, 1207, 1209, 1211, 1212, 1213, 1214, 1215, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1287, 1288, 1289, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1326, 1331, 1332, 1333, 1334, 1335, 1336, 1339, 1341, 1342, 1344, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1386, 1388, 1390, 1391, 1393, 1395, 1405, 1406, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1428, 1429, 1431, 1432, 1433, 1434, 1436, 1445, 1446, 1447, 1448, 1449, 1451, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1488, 1489, 1528, 1529, 1530, 1531, 1532, 1535, 1537, 1539, 1550, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1565, 1587, 1589, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1617, 1619, 1621, 1642, 1644, 1646, 1652, 1656, 1670, 1671, 1673, 1675, 1676, 1677, 1678, 1679, 1685, 1686, 1688, 1689, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1711, 1712, 1714, 1716, 1727, 1731, 1732, 1734, 1736, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1782, 1783, 1784, 1785, 1786, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1803, 1804, 1805, 1807, 1808, 1809, 1814, 1815, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 2019, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2043, 2059, 2060, 2061, 2062, 2090, 2096], "__ge__": [45, 48, 49, 94, 99, 100], "greater_equ": [45, 48, 49, 61, 62, 94, 99, 100, 109, 110, 453, 593, 644, 646, 648], "bitwise_xor": [45, 48, 49, 61, 62, 109, 110, 453, 528], "mix": [45, 48, 49, 57, 58, 61, 62, 94, 99, 100, 105, 106, 109, 110, 112, 113, 122, 123, 128, 129, 142, 150, 157, 160, 162, 164, 323, 335, 336, 337, 338, 339, 403, 406, 453, 499, 502, 514, 517, 519, 522, 524, 527, 549, 550, 552, 554, 555, 556, 557, 579, 580, 581, 582, 583, 584, 587, 589, 592, 614, 617, 619, 620, 621, 664, 667, 679, 680, 681, 682, 689, 690, 691, 692, 714, 715, 716, 717, 718, 824, 826, 1069, 1070, 1258, 1305, 1307, 1315, 1318, 1319, 1320, 1323, 1423, 1426, 1433, 1437, 1489, 1491, 1494, 1501, 1504, 1515, 1518, 1523, 1526, 1535, 1538, 1545, 1548, 1550, 1553, 1555, 1556, 1559, 1662, 1665, 1695, 1696, 1699, 1700, 1701, 1705, 1706, 1709, 1710, 1711, 1712, 1715, 1816, 1817, 1820, 1827, 1831, 1832, 1836, 1837, 1841, 1848, 1869, 1873, 1911, 1922, 1925, 1930, 1933, 1943, 1946, 1968, 1981, 1985, 1987], "__gt__": [45, 48, 49, 94, 99, 100, 162], "__le__": [45, 48, 49, 94, 99, 100], "less_equ": [45, 48, 49, 61, 62, 94, 99, 100, 109, 110, 152, 453, 623], "__lt__": [45, 48, 49, 94, 99, 100], "__ne__": [45, 48, 49, 94, 99, 100], "not_equ": [45, 48, 49, 61, 62, 94, 99, 100, 109, 110, 453, 693], "__pow__": [45, 48, 49, 94, 99, 100, 166], "power": [45, 48, 49, 63, 64, 65, 72, 73, 94, 99, 100, 111, 112, 113, 120, 121, 166, 167, 168, 453, 519, 522, 564, 567, 699, 702, 844, 851, 891, 897, 899, 917, 918, 919, 920, 921, 943, 944, 945, 946, 947, 1233, 1236, 1258, 1329, 1398, 1412, 1413, 1414, 1415, 1416, 1555, 1612, 1615, 1675, 1676, 1677, 1678, 1679, 1796, 1803, 1981, 1983, 1987, 1997, 2005], "pow": [45, 48, 49, 61, 62, 94, 99, 100, 109, 110, 143, 453, 703], "float": [45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 88, 89, 95, 96, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 136, 137, 143, 146, 148, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162, 164, 166, 168, 196, 204, 207, 229, 231, 232, 233, 236, 237, 239, 240, 242, 244, 252, 258, 259, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 297, 298, 315, 317, 323, 330, 331, 332, 333, 334, 350, 353, 354, 363, 366, 379, 386, 387, 388, 389, 390, 402, 403, 406, 409, 414, 418, 430, 438, 441, 442, 449, 452, 453, 454, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 524, 527, 529, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 552, 554, 555, 557, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 577, 579, 582, 584, 587, 589, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 612, 614, 617, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 679, 682, 684, 687, 689, 690, 692, 694, 697, 699, 702, 709, 712, 714, 717, 719, 722, 724, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 768, 769, 773, 777, 778, 779, 780, 781, 782, 783, 819, 821, 822, 823, 824, 825, 826, 827, 844, 845, 846, 847, 848, 865, 866, 870, 871, 872, 873, 874, 875, 891, 892, 897, 898, 899, 904, 905, 906, 908, 909, 911, 912, 913, 914, 917, 918, 920, 921, 923, 924, 926, 943, 944, 946, 947, 958, 960, 974, 975, 976, 977, 978, 979, 980, 981, 1005, 1006, 1007, 1008, 1009, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1038, 1043, 1059, 1060, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1135, 1136, 1137, 1138, 1139, 1155, 1158, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1201, 1204, 1216, 1217, 1218, 1258, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1308, 1309, 1310, 1311, 1312, 1329, 1330, 1337, 1341, 1344, 1398, 1399, 1401, 1407, 1410, 1412, 1413, 1414, 1415, 1416, 1445, 1446, 1447, 1448, 1449, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1489, 1528, 1529, 1530, 1531, 1532, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1566, 1569, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1597, 1599, 1600, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1670, 1671, 1672, 1673, 1685, 1686, 1688, 1689, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1792, 1793, 1794, 1795, 1796, 1803, 1816, 1817, 1818, 1819, 1820, 1821, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1911, 1912, 1915, 1917, 1920, 1926, 1929, 1930, 1931, 1932, 1933, 1934, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1997, 1998, 2001, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2043, 2059, 2072, 2076, 2080, 2081, 2086, 2089, 2090, 2091, 2100, 2103], "69678056": [45, 48, 49], "59876156": [45, 48, 49], "37": [45, 46, 47, 48, 49, 61, 62, 63, 95, 96, 109, 110, 111, 209, 210, 211, 213, 453, 479, 482, 483, 519, 522, 719, 720, 734, 736, 738, 754, 758, 814, 818, 1201, 1205, 1227, 1228, 1229, 1230, 1231, 1489, 1535, 1538, 1555, 1612, 1615, 1796, 1805, 1821, 1832, 1835], "82660675": [45, 48, 49], "__radd__": [45, 48, 49, 94, 99, 100, 150, 151, 158], "__rrshift__": [45, 48, 49, 94, 99, 100], "bitwise_right_shift": [45, 48, 49, 61, 62, 109, 110, 453, 523], "32": [45, 48, 49, 61, 62, 63, 80, 81, 94, 99, 100, 109, 110, 111, 128, 129, 167, 196, 204, 207, 323, 362, 453, 464, 465, 466, 467, 468, 519, 522, 524, 525, 719, 720, 724, 725, 809, 812, 814, 815, 817, 854, 855, 856, 857, 858, 891, 897, 917, 918, 919, 920, 921, 1038, 1040, 1041, 1042, 1048, 1050, 1052, 1258, 1352, 1355, 1489, 1510, 1513, 1515, 1518, 1523, 1526, 1535, 1538, 1555, 1602, 1605, 1627, 1630, 1821, 1827, 1829, 1831, 1832, 1833, 1834, 1836, 1837, 1839, 1840, 1841, 1848, 1869, 1873, 1911, 1922, 1925, 1986, 2072, 2076, 2080, 2081, 2100, 2101, 2102, 2103], "__rshift__": [45, 48, 49, 94, 99, 100], "__rsub__": [45, 48, 49, 94, 99, 100], "subtract": [45, 48, 49, 61, 62, 94, 99, 100, 109, 110, 144, 146, 150, 453, 750, 1071, 1088, 1161, 1164], "__sub__": [45, 48, 49, 94, 99, 100, 144, 146, 150, 154, 166], "__truediv__": [45, 48, 49, 94, 99, 100, 144, 146, 150], "divid": [45, 48, 49, 61, 62, 64, 65, 76, 77, 94, 97, 98, 99, 100, 109, 110, 124, 125, 144, 146, 150, 453, 553, 579, 582, 1258, 1407, 1408, 1410, 1711, 1757, 1758, 1759, 1760, 1761], "25": [45, 48, 49, 61, 62, 64, 65, 72, 73, 74, 75, 80, 81, 88, 89, 94, 95, 96, 99, 100, 109, 110, 111, 112, 113, 118, 119, 120, 121, 126, 127, 128, 129, 136, 137, 146, 229, 231, 233, 237, 272, 275, 453, 469, 471, 519, 522, 549, 551, 552, 553, 559, 561, 563, 679, 681, 683, 699, 700, 702, 719, 720, 734, 737, 739, 741, 743, 744, 745, 747, 764, 765, 767, 768, 784, 786, 788, 844, 846, 978, 980, 1048, 1050, 1052, 1166, 1168, 1170, 1258, 1347, 1350, 1351, 1352, 1355, 1356, 1391, 1392, 1407, 1408, 1410, 1411, 1491, 1493, 1495, 1555, 1556, 1557, 1559, 1576, 1579, 1597, 1599, 1600, 1675, 1676, 1677, 1678, 1679, 1695, 1701, 1702, 1704, 1796, 1798, 1816, 1817, 1819, 1820, 1827, 1828, 1832, 1833, 1834, 1836, 1837, 1839, 1911, 1917, 1918, 1922, 1925, 1930, 1931, 1952, 1955], "40000001": [45, 48, 49, 94, 95, 96, 99, 100, 196, 204, 207, 214, 216, 217, 218, 1874, 1880, 1884], "__xor__": [45, 48, 49, 94, 99, 100], "boolean": [45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 76, 77, 82, 83, 88, 89, 94, 97, 98, 99, 100, 105, 106, 109, 110, 111, 112, 113, 124, 125, 130, 131, 136, 137, 146, 158, 159, 160, 162, 237, 242, 243, 244, 266, 323, 330, 331, 332, 333, 334, 380, 386, 387, 388, 390, 417, 418, 434, 450, 453, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 852, 853, 891, 904, 905, 906, 966, 967, 1003, 1005, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1268, 1328, 1341, 1342, 1344, 1346, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1396, 1400, 1402, 1403, 1445, 1446, 1447, 1448, 1449, 1451, 1480, 1488, 1711, 1747, 1748, 1749, 1750, 1751, 1792, 1793, 1794, 1796, 1807, 1859, 1860, 1861, 1863, 1869, 1870, 1872, 1911, 1926, 1928, 1934, 1935, 1936, 1937, 2019, 2021, 2043, 2048, 2072, 2074, 2090, 2092, 2116, 2120], "67": [45, 48, 49, 61, 62, 64, 65, 109, 110, 112, 113, 128, 129, 453, 524, 527, 539, 541, 542, 543, 719, 720, 724, 725, 734, 736, 738, 764, 766, 768, 1258, 1295, 1298, 1299, 1407, 1408, 1451, 1462, 1467, 1487, 1837, 1839], "21": [45, 48, 49, 61, 62, 63, 64, 65, 80, 81, 103, 104, 109, 110, 111, 112, 113, 128, 129, 136, 137, 237, 277, 279, 280, 323, 374, 377, 453, 469, 471, 479, 481, 489, 491, 492, 493, 519, 522, 524, 527, 679, 680, 682, 804, 805, 807, 814, 816, 854, 857, 891, 907, 1038, 1039, 1042, 1045, 1048, 1049, 1051, 1052, 1099, 1100, 1102, 1109, 1111, 1113, 1145, 1147, 1149, 1258, 1295, 1298, 1299, 1391, 1392, 1555, 1576, 1579, 1627, 1630, 1695, 1706, 1709, 1796, 1803, 1827, 1829, 1832, 1833, 1834, 1911, 1912, 1915, 1917, 1919, 1921, 1922, 1925], "13": [45, 46, 47, 48, 49, 61, 62, 63, 70, 71, 80, 81, 88, 89, 109, 110, 111, 112, 113, 114, 115, 118, 119, 124, 125, 128, 129, 136, 137, 146, 150, 196, 229, 230, 232, 323, 374, 377, 418, 430, 453, 469, 471, 524, 527, 539, 542, 579, 580, 582, 699, 702, 739, 742, 814, 818, 854, 857, 858, 876, 877, 878, 879, 880, 891, 903, 928, 929, 930, 931, 932, 968, 969, 970, 971, 987, 988, 989, 990, 991, 1038, 1042, 1048, 1050, 1052, 1071, 1076, 1078, 1082, 1145, 1147, 1149, 1237, 1238, 1240, 1258, 1275, 1278, 1279, 1280, 1283, 1284, 1295, 1298, 1299, 1352, 1355, 1399, 1407, 1410, 1451, 1453, 1455, 1456, 1489, 1491, 1492, 1493, 1495, 1528, 1531, 1535, 1537, 1538, 1539, 1550, 1553, 1555, 1576, 1579, 1627, 1630, 1657, 1661, 1711, 1782, 1783, 1785, 1786, 1827, 1828, 1831, 1832, 1833, 1834, 1836, 1837, 1839, 1848, 1869, 1873, 1874, 1875, 1879, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1925], "79": [45, 48, 49, 64, 65, 112, 113, 128, 129, 453, 524, 527, 549, 552, 854, 857, 1038, 1042, 1258, 1275, 1276, 1278, 1279, 1280, 1281, 1283, 1284, 1837, 1839], "24": [45, 48, 49, 61, 62, 63, 72, 73, 88, 89, 111, 112, 113, 118, 119, 120, 121, 128, 129, 167, 453, 524, 525, 527, 619, 620, 679, 682, 719, 720, 724, 725, 739, 742, 804, 805, 806, 807, 808, 824, 826, 854, 855, 856, 857, 858, 891, 903, 968, 969, 970, 971, 1038, 1039, 1042, 1045, 1048, 1050, 1069, 1070, 1099, 1100, 1101, 1102, 1103, 1258, 1295, 1298, 1299, 1491, 1493, 1495, 1555, 1576, 1579, 1607, 1608, 1609, 1611, 1627, 1630, 1796, 1798, 1827, 1829, 1832, 1834, 1837, 1839, 1911, 1912, 1913, 1915, 1922, 1923, 1925, 2043, 2061], "arang": [45, 48, 49, 63, 72, 73, 88, 89, 94, 99, 100, 111, 120, 121, 148, 237, 272, 275, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 881, 885, 922, 938, 940, 942, 1038, 1039, 1040, 1041, 1044, 1045, 1046, 1047, 1053, 1058, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1130, 1131, 1132, 1133, 1134, 1242, 1243, 1258, 1382, 1450, 1555, 1607, 1608, 1609, 1610, 1611, 1911, 1922, 1923, 1925, 1969, 1988], "invok": [45, 48, 49], "arg_info": [45, 48, 49, 94, 99, 100, 1258], "arg_nam": [45, 48, 49, 94, 99, 100, 1258], "args_to_ivi": [45, 48, 49, 50], "args_to_n": [45, 48, 49, 50, 157], "as_ivy_dev": [45, 48, 49, 94, 99, 100, 166, 418], "as_ivy_dtyp": [45, 48, 49, 94, 99, 100, 158, 323], "as_native_dev": [45, 48, 49, 94, 99, 100, 418, 438], "as_native_dtyp": [45, 48, 49, 94, 99, 100, 323], "asarray_handle_nest": [45, 48, 49, 94, 99, 100, 237], "asarray_infer_devic": [45, 48, 49, 94, 99, 100, 237], "asarray_to_native_arrays_and_back": [45, 48, 49, 94, 99, 100, 237], "cache_fn": [45, 48, 49, 94, 99, 100, 155, 1258], "check_float": [45, 48, 49, 94, 99, 100, 323], "clear_mem_on_dev": [45, 48, 49, 94, 99, 100, 418], "closest_valid_dtyp": [45, 48, 49, 94, 99, 100, 323], "container_typ": [45, 48, 49, 94, 99, 100, 854, 857, 1038, 1042, 1258], "conv": [45, 48, 49, 94, 99, 100, 162, 1489], "conv2d_transpos": [45, 48, 49, 118, 119, 1489], "conv_general_dil": [45, 48, 49, 94, 99, 100, 158, 1489], "conv_general_transpos": [45, 48, 49, 94, 99, 100, 1489], "current_backend_str": [45, 48, 49, 94, 99, 100, 152, 164, 166, 1258], "nativearrai": [45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 182, 194, 196, 198, 201, 202, 204, 207, 208, 209, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 227, 228, 229, 232, 233, 237, 242, 244, 249, 251, 253, 256, 267, 270, 272, 275, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 290, 292, 295, 300, 303, 304, 305, 309, 310, 314, 318, 319, 322, 323, 330, 333, 335, 336, 337, 338, 339, 340, 343, 345, 348, 352, 353, 354, 356, 357, 358, 360, 363, 366, 374, 377, 381, 384, 386, 389, 391, 394, 396, 399, 402, 403, 404, 406, 412, 418, 424, 425, 428, 443, 444, 445, 448, 453, 454, 457, 458, 459, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 477, 479, 482, 484, 487, 488, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 533, 534, 537, 539, 542, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 567, 568, 569, 572, 573, 574, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 597, 598, 599, 602, 603, 604, 607, 608, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 629, 632, 633, 634, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 687, 688, 689, 690, 691, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 727, 728, 729, 732, 734, 737, 739, 742, 743, 744, 747, 748, 749, 750, 751, 752, 753, 754, 758, 759, 763, 764, 765, 768, 769, 770, 771, 772, 773, 779, 783, 784, 787, 788, 789, 791, 792, 793, 794, 796, 797, 798, 799, 801, 802, 803, 804, 807, 808, 809, 812, 813, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 834, 835, 837, 838, 839, 842, 843, 844, 845, 848, 851, 854, 857, 860, 863, 865, 868, 869, 870, 873, 875, 876, 879, 880, 886, 889, 890, 891, 893, 894, 895, 896, 898, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 921, 922, 923, 926, 927, 928, 931, 932, 933, 936, 937, 938, 941, 942, 943, 947, 948, 951, 952, 953, 956, 957, 958, 959, 960, 961, 964, 965, 966, 967, 968, 971, 974, 975, 976, 977, 982, 985, 986, 987, 990, 991, 997, 1000, 1001, 1005, 1008, 1009, 1010, 1013, 1015, 1019, 1020, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1062, 1063, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1099, 1102, 1103, 1104, 1107, 1108, 1109, 1112, 1113, 1120, 1123, 1124, 1125, 1128, 1129, 1130, 1133, 1134, 1135, 1138, 1139, 1145, 1148, 1149, 1155, 1158, 1159, 1161, 1164, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1182, 1185, 1186, 1187, 1190, 1192, 1193, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1215, 1233, 1234, 1235, 1236, 1237, 1238, 1241, 1247, 1248, 1251, 1252, 1253, 1256, 1258, 1259, 1260, 1262, 1266, 1267, 1268, 1269, 1272, 1273, 1275, 1278, 1279, 1280, 1283, 1284, 1290, 1293, 1295, 1298, 1300, 1303, 1308, 1309, 1310, 1311, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1328, 1332, 1335, 1336, 1341, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1368, 1371, 1376, 1379, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1421, 1423, 1424, 1426, 1428, 1429, 1432, 1433, 1434, 1437, 1439, 1445, 1446, 1449, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1485, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1531, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1545, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1590, 1591, 1592, 1595, 1597, 1600, 1602, 1604, 1605, 1606, 1607, 1610, 1611, 1612, 1615, 1617, 1620, 1621, 1622, 1625, 1626, 1627, 1630, 1632, 1635, 1636, 1637, 1640, 1642, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1674, 1675, 1676, 1679, 1680, 1684, 1685, 1686, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1740, 1742, 1745, 1747, 1750, 1751, 1752, 1755, 1756, 1757, 1760, 1761, 1762, 1765, 1767, 1768, 1770, 1771, 1772, 1776, 1777, 1781, 1782, 1783, 1786, 1787, 1791, 1796, 1798, 1799, 1800, 1804, 1805, 1806, 1809, 1814, 1815, 1816, 1817, 1820, 1821, 1822, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1846, 1847, 1848, 1849, 1852, 1853, 1854, 1857, 1858, 1859, 1862, 1864, 1867, 1868, 1869, 1870, 1872, 1873, 1874, 1875, 1876, 1879, 1880, 1884, 1885, 1886, 1889, 1890, 1894, 1895, 1896, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1915, 1916, 1917, 1920, 1921, 1922, 1925, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1962, 1963, 1966, 1967, 1968, 1975, 1976], "deconv_length": [45, 48, 49, 94, 99, 100, 1489], "default_devic": [45, 48, 49, 94, 99, 100, 149, 152, 418, 437, 440, 441, 451], "default_dtyp": [45, 48, 49, 94, 99, 100, 148, 155, 323], "default_float_dtyp": [45, 48, 49, 94, 99, 100, 148, 323, 409], "default_int_dtyp": [45, 48, 49, 94, 99, 100, 148, 323, 410, 415], "default_uint_dtyp": [45, 48, 49, 94, 99, 100, 323, 411, 416], "deseri": [45, 48, 49, 94, 99, 100, 196], "dev_util": [45, 48, 49, 94, 99, 100, 149, 418], "resid": [45, 48, 49, 158, 164, 168, 1711, 1727, 1730, 1975, 1976], "dtype_bit": [45, 48, 49, 94, 99, 100, 323], "execute_with_gradi": [45, 48, 49, 94, 99, 100, 167, 168, 169, 181, 1451, 1969], "ey": [45, 48, 49, 94, 99, 100, 118, 119, 162, 169, 237, 1489, 1501, 1503, 1504, 1505, 1523, 1526], "function_supported_devic": [45, 48, 49, 94, 99, 100, 418], "function_supported_devices_and_dtyp": [45, 48, 49, 94, 99, 100, 1258], "function_supported_dtyp": [45, 48, 49, 94, 99, 100, 148, 323], "function_unsupported_devic": [45, 48, 49, 94, 99, 100, 418], "function_unsupported_devices_and_dtyp": [45, 48, 49, 94, 99, 100, 1258], "function_unsupported_dtyp": [45, 48, 49, 94, 99, 100, 148, 323], "get_all_arrays_in_memori": [45, 48, 49, 94, 99, 100, 1258, 1385], "get_all_ivy_arrays_on_dev": [45, 48, 49, 94, 99, 100, 149, 418], "get_array_mod": [45, 48, 49, 94, 99, 100, 1258, 1396, 1439], "get_exception_trace_mod": [45, 48, 49, 94, 99, 100, 1258, 1331, 1397, 1440], "get_item": [45, 48, 49, 94, 99, 100, 1258], "get_min_bas": [45, 48, 49, 94, 99, 100, 1258, 1398], "get_min_denomin": [45, 48, 49, 94, 99, 100, 1258, 1399], "get_nestable_mod": [45, 48, 49, 94, 99, 100, 1258, 1400, 1441], "get_queue_timeout": [45, 48, 49, 94, 99, 100, 1258, 1401, 1442], "get_referrers_recurs": [45, 48, 49, 94, 99, 100, 1258], "get_show_func_wrapper_trace_mod": [45, 48, 49, 94, 99, 100, 1258, 1403, 1444], "get_tmp_dir": [45, 48, 49, 94, 99, 100, 1258, 1404], "get_x_data_format": [45, 48, 49, 94, 99, 100, 1489], "gpu_is_avail": [45, 48, 49, 94, 99, 100, 418], "grad": [45, 48, 49, 94, 99, 100, 167, 168, 169, 1451, 1453, 1456, 1969, 2025, 2029], "handle_array_lik": [45, 48, 49, 94, 99, 100, 182], "handle_except": [45, 48, 49, 94, 99, 100], "handle_nest": [45, 48, 49, 94, 99, 100, 146, 155, 156, 164, 182], "handle_out_argu": [45, 48, 49, 94, 99, 100, 148, 149, 154, 156, 157, 164, 182], "handle_pad": [45, 48, 49, 94, 99, 100, 1489], "infer_default_dtyp": [45, 48, 49, 94, 99, 100, 323], "infer_devic": [45, 48, 49, 94, 99, 100, 148, 149, 154, 156, 182], "infer_dtyp": [45, 48, 49, 94, 99, 100, 148, 149, 154, 156, 182], "inplace_arrays_support": [45, 48, 49, 94, 99, 100, 1258], "inplace_variables_support": [45, 48, 49, 94, 99, 100, 1258], "inputs_to_ivy_arrai": [45, 48, 49, 94, 99, 100, 156, 182], "inputs_to_native_arrai": [45, 48, 49, 94, 99, 100, 144, 156, 182], "integer_arrays_to_float": [45, 48, 49, 94, 99, 100, 182], "invalid_dtyp": [45, 48, 49, 94, 99, 100, 148, 323], "isscalar": [45, 48, 49, 94, 99, 100, 1258], "jac": [45, 48, 49, 94, 99, 100, 1451], "mt": [45, 48, 49, 166], "matric": [45, 48, 49, 55, 56, 72, 73, 111, 120, 121, 180, 237, 282, 285, 305, 307, 309, 310, 312, 314, 1053, 1058, 1130, 1133, 1134, 1489, 1535, 1538, 1555, 1556, 1557, 1558, 1559, 1560, 1566, 1569, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1597, 1599, 1600, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1670, 1671, 1672, 1673, 1674, 1675, 1678, 1981, 2090, 2096], "n": [45, 48, 49, 55, 56, 63, 72, 73, 76, 77, 80, 81, 82, 83, 88, 89, 90, 91, 109, 110, 111, 120, 121, 124, 125, 128, 129, 130, 131, 136, 137, 138, 139, 142, 160, 237, 282, 283, 285, 305, 307, 309, 310, 312, 314, 799, 800, 801, 802, 803, 819, 822, 844, 849, 850, 854, 855, 856, 857, 858, 865, 866, 867, 868, 869, 870, 871, 873, 876, 877, 878, 879, 880, 886, 889, 891, 896, 914, 922, 987, 988, 989, 990, 991, 1038, 1042, 1044, 1053, 1055, 1071, 1074, 1076, 1082, 1092, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1201, 1204, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1237, 1238, 1239, 1240, 1241, 1489, 1545, 1548, 1555, 1576, 1579, 1592, 1595, 1602, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1652, 1656, 1657, 1661, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1711, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1737, 1738, 1739, 1740, 1741, 1767, 1770, 1787, 1791, 1796, 1805, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1848, 1864, 1865, 1866, 1867, 1868, 1911, 1930, 1931, 1933, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967], "match_kwarg": [45, 48, 49, 94, 99, 100, 1258], "multiprocess": [45, 48, 49, 94, 97, 98, 99, 100, 167, 181, 1258], "ndim": [45, 48, 49, 63, 82, 83, 130, 131, 146, 789, 790, 794, 795, 799, 800, 802, 1071, 1074, 1258, 1450, 1555, 1637, 1640, 1652, 1656, 1848, 1864, 1865, 1866, 1867, 1868, 1975, 1976], "int": [45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 146, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 169, 196, 209, 212, 224, 225, 227, 229, 231, 232, 233, 234, 235, 237, 242, 244, 258, 259, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 292, 293, 294, 295, 296, 305, 307, 309, 310, 312, 314, 323, 340, 341, 342, 343, 344, 356, 362, 363, 366, 374, 377, 391, 394, 415, 418, 435, 436, 437, 443, 444, 445, 446, 447, 448, 453, 469, 470, 471, 472, 473, 499, 502, 504, 507, 509, 512, 514, 517, 519, 522, 524, 527, 749, 750, 751, 752, 753, 777, 778, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 828, 830, 831, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 854, 855, 856, 857, 858, 865, 866, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 891, 895, 896, 898, 902, 903, 909, 910, 912, 914, 922, 923, 926, 928, 929, 930, 931, 932, 958, 959, 960, 961, 962, 964, 965, 968, 969, 970, 971, 974, 976, 977, 978, 980, 981, 987, 988, 989, 990, 991, 1025, 1027, 1028, 1029, 1031, 1032, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1064, 1066, 1067, 1068, 1071, 1075, 1076, 1078, 1082, 1085, 1088, 1089, 1090, 1091, 1092, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1185, 1186, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1237, 1238, 1239, 1240, 1241, 1258, 1264, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1308, 1309, 1310, 1311, 1312, 1315, 1316, 1317, 1318, 1319, 1332, 1333, 1335, 1386, 1387, 1388, 1389, 1390, 1407, 1410, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1545, 1548, 1555, 1561, 1562, 1563, 1564, 1565, 1571, 1574, 1576, 1579, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1662, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1695, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1717, 1718, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1792, 1793, 1794, 1795, 1796, 1800, 1803, 1804, 1806, 1808, 1809, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1864, 1865, 1866, 1867, 1868, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1975, 1976, 1997, 1998, 2001, 2043, 2059, 2060, 2062, 2072, 2074, 2086, 2087, 2090, 2092, 2100], "normalize_axis_tupl": [45, 48, 49, 94, 99, 100], "num_arrays_in_memori": [45, 48, 49, 94, 99, 100, 1258], "num_cpu_cor": [45, 48, 49, 94, 99, 100, 149, 418], "num_gpu": [45, 48, 49, 94, 99, 100, 149, 160, 418], "num_ivy_arrays_on_dev": [45, 48, 49, 94, 99, 100, 418], "ones": [45, 48, 49, 55, 56, 66, 67, 70, 71, 80, 81, 94, 97, 98, 99, 100, 103, 104, 118, 119, 128, 129, 147, 150, 154, 160, 166, 167, 237, 258, 259, 267, 268, 270, 292, 293, 294, 295, 296, 300, 301, 302, 303, 304, 318, 322, 418, 431, 432, 453, 529, 532, 1451, 1453, 1454, 1456, 1489, 1510, 1511, 1512, 1513, 1514, 1827, 1828, 1829, 1832, 1833, 1834, 1837, 1838, 1839, 1969, 1981], "outputs_to_ivy_arrai": [45, 48, 49, 94, 99, 100, 144, 148, 149, 154, 156, 182], "percent_used_mem_on_dev": [45, 48, 49, 94, 99, 100, 418], "print_all_arrays_in_memori": [45, 48, 49, 94, 99, 100, 1258], "print_all_ivy_arrays_on_dev": [45, 48, 49, 94, 99, 100, 418], "promote_typ": [45, 48, 49, 94, 99, 100, 148, 323], "promote_types_of_input": [45, 48, 49, 94, 99, 100, 148, 157, 323], "seed": [45, 48, 49, 63, 80, 81, 84, 85, 94, 97, 98, 99, 100, 111, 128, 129, 160, 819, 820, 821, 822, 823, 870, 871, 872, 873, 874, 958, 959, 960, 1171, 1172, 1173, 1174, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1874, 1875, 1877, 1879, 1969, 2116], "set_array_mod": [45, 48, 49, 94, 99, 100, 1258, 1326, 1439], "set_default_devic": [45, 48, 49, 94, 99, 100, 149, 418, 451], "set_default_dtyp": [45, 48, 49, 94, 99, 100, 148, 155, 323, 413], "set_default_float_dtyp": [45, 48, 49, 94, 99, 100, 148, 323, 353, 354, 379, 414], "set_default_int_dtyp": [45, 48, 49, 94, 99, 100, 148, 323, 356, 379, 415], "set_default_uint_dtyp": [45, 48, 49, 94, 99, 100, 323, 357, 379, 416], "set_exception_trace_mod": [45, 48, 49, 94, 99, 100, 152, 1258, 1327, 1440], "set_min_bas": [45, 48, 49, 94, 99, 100, 1258], "set_min_denomin": [45, 48, 49, 94, 99, 100, 1258], "set_nestable_mod": [45, 48, 49, 94, 99, 100, 1258, 1331, 1441], "set_queue_timeout": [45, 48, 49, 94, 99, 100, 1258, 1337, 1442], "set_shape_array_mod": [45, 48, 49, 94, 99, 100, 1258, 1406, 1443], "set_show_func_wrapper_trace_mod": [45, 48, 49, 94, 99, 100, 152, 1258, 1339, 1444], "set_split_factor": [45, 48, 49, 94, 99, 100, 152, 418], "set_tmp_dir": [45, 48, 49, 94, 99, 100, 1258], "set_with_grad": [45, 48, 49, 94, 99, 100, 1451, 1486, 1488], "shape_array_mod": [45, 48, 49, 94, 99, 100, 1258, 1402, 1443], "size": [45, 48, 49, 63, 64, 65, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 94, 97, 98, 99, 100, 111, 112, 113, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 159, 160, 167, 237, 272, 275, 418, 441, 442, 443, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 839, 840, 841, 842, 843, 844, 846, 851, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 891, 895, 910, 978, 979, 980, 981, 987, 988, 989, 990, 991, 1038, 1039, 1040, 1045, 1046, 1071, 1076, 1082, 1091, 1092, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1114, 1115, 1116, 1117, 1118, 1125, 1126, 1127, 1128, 1129, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1192, 1193, 1201, 1202, 1203, 1204, 1211, 1212, 1213, 1214, 1215, 1233, 1236, 1237, 1238, 1239, 1240, 1241, 1258, 1386, 1387, 1388, 1389, 1390, 1489, 1550, 1551, 1552, 1553, 1554, 1555, 1576, 1579, 1592, 1595, 1607, 1608, 1609, 1610, 1611, 1627, 1630, 1637, 1640, 1652, 1656, 1680, 1684, 1711, 1727, 1728, 1729, 1730, 1731, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1765, 1821, 1822, 1823, 1824, 1825, 1826, 1848, 1849, 1850, 1851, 1852, 1853, 1864, 1865, 1866, 1867, 1868, 1957, 1958, 1961, 1963, 1966, 2007, 2008, 2009, 2072, 2074, 2075, 2080, 2081, 2083, 2090, 2095, 2100, 2101, 2102], "split_factor": [45, 48, 49, 94, 99, 100, 152, 418, 441], "split_func_cal": [45, 48, 49, 94, 99, 100, 418], "to_ivi": [45, 48, 49, 50, 101, 102, 1796, 1810], "to_ivy_shap": [45, 48, 49, 94, 99, 100, 1258], "to_n": [45, 48, 49, 50, 101, 102, 164], "to_native_arrays_and_back": [45, 48, 49, 94, 99, 100, 154, 156, 164, 182], "to_native_shap": [45, 48, 49, 94, 99, 100, 1258], "total_mem_on_dev": [45, 48, 49, 94, 99, 100, 149, 418], "tpu_is_avail": [45, 48, 49, 94, 99, 100, 418], "try_else_non": [45, 48, 49, 94, 99, 100, 1258], "type_promote_arrai": [45, 48, 49, 94, 99, 100, 148, 323], "unset_array_mod": [45, 48, 49, 94, 99, 100, 1258], "unset_default_devic": [45, 48, 49, 94, 99, 100, 418], "unset_default_dtyp": [45, 48, 49, 94, 99, 100, 323, 408], "unset_default_float_dtyp": [45, 48, 49, 94, 99, 100, 323], "unset_default_int_dtyp": [45, 48, 49, 94, 99, 100, 323], "unset_default_uint_dtyp": [45, 48, 49, 94, 99, 100, 323], "unset_exception_trace_mod": [45, 48, 49, 94, 99, 100, 1258], "unset_nestable_mod": [45, 48, 49, 94, 99, 100, 1258], "unset_queue_timeout": [45, 48, 49, 94, 99, 100, 1258], "unset_shape_array_mod": [45, 48, 49, 94, 99, 100, 1258, 1439, 1442], "unset_show_func_wrapper_trace_mod": [45, 48, 49, 94, 99, 100, 1258], "unset_with_grad": [45, 48, 49, 94, 99, 100, 1451], "used_mem_on_dev": [45, 48, 49, 94, 99, 100, 418], "valid_dtyp": [45, 48, 49, 94, 99, 100, 323], "value_and_grad": [45, 48, 49, 94, 99, 100, 1451], "vmap": [45, 48, 49, 94, 99, 100, 181, 1258, 1981], "with_grad": [45, 48, 49, 94, 99, 100, 1451, 1452, 1480, 1486, 2019, 2020], "overview": [45, 94, 160, 163, 180, 196, 234, 236, 237, 323, 418, 453, 1257, 1258, 1451, 1489, 1555, 1695, 1711, 1792, 1796, 1816, 1821, 1848, 1895, 1911, 1957, 1990, 1993, 1997, 2007, 2019, 2023, 2025, 2031], "forum": [45, 94, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 196, 234, 236, 237, 323, 418, 453, 1257, 1258, 1451, 1489, 1555, 1695, 1711, 1792, 1796, 1816, 1821, 1848, 1895, 1911, 1957, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1993, 1997, 2007, 2019, 2023, 2025, 2031], "abc": [46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 166, 418, 420, 1258, 1305, 1307, 1796, 1815, 1975, 1976, 1995, 1996, 1997, 2001, 2025, 2029], "gelu": [46, 47, 95, 96, 196, 202, 1990], "approxim": [46, 47, 63, 72, 73, 95, 96, 109, 110, 111, 120, 121, 151, 158, 196, 198, 199, 200, 201, 202, 453, 459, 462, 464, 467, 474, 477, 479, 482, 484, 487, 489, 492, 534, 537, 539, 542, 564, 567, 569, 572, 624, 627, 629, 632, 634, 637, 639, 642, 699, 702, 729, 732, 734, 737, 754, 758, 759, 763, 891, 903, 913, 914, 968, 969, 970, 971, 1187, 1190, 1216, 1217, 1218, 1555, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1990, 1992], "185": [46, 47, 95, 96, 198, 199, 200, 202], "046": [46, 47, 95, 96, 198, 199, 200, 202], "leaky_relu": [46, 47, 95, 96, 196, 208, 1969], "alpha": [46, 47, 61, 62, 63, 95, 96, 109, 110, 111, 158, 159, 196, 204, 205, 206, 207, 208, 453, 469, 470, 471, 472, 473, 749, 750, 751, 752, 753, 819, 820, 821, 822, 823, 844, 845, 870, 871, 872, 873, 874, 958, 959, 960, 974, 975, 976, 977, 1171, 1172, 1173, 1174], "39": [46, 47, 61, 62, 63, 80, 81, 95, 96, 109, 110, 111, 114, 115, 128, 129, 196, 204, 205, 206, 207, 208, 453, 479, 482, 564, 567, 624, 625, 627, 634, 635, 637, 638, 644, 647, 809, 812, 854, 855, 856, 857, 858, 1038, 1040, 1042, 1047, 1109, 1110, 1112, 1451, 1453, 1455, 1456, 1555, 1627, 1630, 1832, 1833, 1834, 1836, 1911, 1922, 1925], "85": [46, 47, 80, 81, 94, 95, 96, 99, 100, 109, 110, 114, 115, 118, 119, 128, 129, 196, 204, 205, 206, 207, 208, 453, 474, 476, 519, 522, 524, 526, 527, 528, 704, 706, 707, 708, 1258, 1407, 1410, 1451, 1463, 1465, 1466, 1489, 1535, 1537, 1538, 1539, 1821, 1827, 1828, 1832, 1833, 1834, 1837, 1838, 1840], "17": [46, 47, 63, 94, 95, 96, 99, 100, 109, 110, 111, 112, 113, 114, 115, 118, 119, 128, 129, 146, 150, 196, 204, 205, 206, 207, 208, 209, 211, 213, 237, 277, 280, 453, 469, 471, 549, 552, 644, 647, 679, 681, 683, 804, 805, 806, 807, 808, 809, 810, 854, 857, 858, 922, 928, 929, 931, 1038, 1039, 1042, 1044, 1045, 1046, 1071, 1078, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1258, 1295, 1297, 1352, 1355, 1356, 1451, 1453, 1455, 1456, 1489, 1491, 1493, 1495, 1528, 1531, 1535, 1537, 1538, 1539, 1555, 1576, 1579, 1657, 1661, 1796, 1805, 1821, 1827, 1829, 1831, 1832, 1834, 1837, 1839, 1841, 1843, 1846], "log_softmax": [46, 47, 95, 96, 196, 213], "98": [46, 47, 66, 67, 80, 81, 95, 96, 109, 110, 114, 115, 128, 129, 196, 209, 210, 211, 212, 213, 453, 524, 527, 539, 541, 543, 734, 736, 738, 1451, 1463, 1464, 1465, 1466, 1555, 1627, 1630, 1796, 1798, 1827, 1828, 1837, 1839, 1848, 1869, 1873, 1911, 1922, 1925], "35": [46, 47, 70, 71, 95, 96, 109, 110, 111, 118, 119, 120, 121, 128, 129, 209, 210, 211, 213, 453, 489, 491, 492, 493, 739, 741, 743, 814, 818, 854, 857, 1038, 1042, 1489, 1535, 1536, 1537, 1538, 1539, 1550, 1552, 1553, 1554, 1555, 1561, 1563, 1564, 1565, 1832, 1834, 1836, 1837, 1841, 1848, 1869, 1873, 1911, 1922, 1925], "0719": [46, 47, 95, 96, 209, 210, 211, 213], "62": [46, 47, 95, 96, 111, 126, 127, 128, 129, 209, 210, 211, 213, 453, 734, 737, 1048, 1050, 1052, 1816, 1817, 1819, 1820, 1821, 1827, 1829, 1837, 1840], "221": [46, 47, 209, 210], "82": [46, 47, 61, 62, 114, 115, 128, 129, 152, 209, 210, 479, 480, 1451, 1453, 1455, 1456, 1832, 1834, 1837, 1839], "relu": [46, 47, 92, 93, 95, 96, 159, 167, 168, 196, 204, 206, 207, 208, 218, 1969], "sigmoid": [46, 47, 95, 96, 164, 167, 168, 196, 197, 203, 223, 1969], "269": [46, 47, 196, 219, 220, 222], "731": [46, 47, 196, 219, 220, 222], "881": [46, 47, 61, 62, 109, 110, 196, 219, 220, 222, 453, 479, 480, 481, 482, 544, 546, 547, 704, 706], "softmax": [46, 47, 70, 71, 92, 93, 95, 96, 118, 119, 196, 228, 1489, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1969], "union": [46, 47, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 148, 149, 150, 152, 153, 154, 155, 157, 158, 161, 162, 164, 169, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 239, 240, 242, 243, 244, 249, 251, 252, 253, 254, 256, 258, 259, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 309, 310, 314, 315, 317, 318, 319, 320, 321, 322, 323, 328, 329, 330, 333, 335, 336, 337, 338, 339, 340, 343, 345, 347, 349, 351, 352, 353, 354, 356, 357, 358, 360, 362, 363, 366, 374, 377, 379, 380, 381, 384, 386, 388, 389, 390, 391, 394, 396, 399, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 430, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 777, 778, 779, 781, 783, 784, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 857, 860, 863, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 886, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 918, 920, 921, 922, 923, 926, 927, 928, 931, 932, 933, 936, 937, 938, 941, 942, 943, 944, 946, 947, 948, 951, 952, 953, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968, 969, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 986, 987, 988, 989, 990, 991, 997, 1000, 1001, 1003, 1005, 1007, 1008, 1009, 1010, 1013, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1157, 1158, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1182, 1183, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1193, 1201, 1202, 1203, 1204, 1206, 1207, 1209, 1210, 1211, 1212, 1214, 1215, 1219, 1222, 1223, 1226, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1247, 1248, 1250, 1251, 1252, 1253, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1268, 1269, 1271, 1272, 1273, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1308, 1309, 1310, 1311, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1328, 1332, 1334, 1335, 1336, 1341, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1365, 1367, 1368, 1370, 1371, 1372, 1376, 1378, 1379, 1380, 1382, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1420, 1421, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1436, 1437, 1445, 1446, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1484, 1485, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1545, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1589, 1590, 1591, 1592, 1595, 1597, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1625, 1626, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1644, 1645, 1646, 1647, 1650, 1652, 1653, 1654, 1656, 1657, 1661, 1662, 1665, 1670, 1671, 1673, 1674, 1675, 1676, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1720, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1740, 1742, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1776, 1777, 1781, 1782, 1783, 1785, 1786, 1787, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1804, 1805, 1806, 1807, 1808, 1809, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1872, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1997, 1998, 2001, 2025, 2026, 2027, 2029, 2031, 2032, 2043, 2059, 2060, 2061, 2062], "422": [46, 47, 196, 224, 225, 227], "155": [46, 47, 118, 119, 196, 224, 225, 227, 1489, 1535, 1537, 1538, 1539], "softplu": [46, 47, 95, 96, 162, 196, 233, 1969], "beta": [46, 47, 63, 78, 79, 95, 96, 111, 126, 127, 162, 196, 229, 230, 231, 232, 233, 823, 844, 845, 847, 848, 870, 873, 958, 959, 960, 974, 975, 976, 977, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1171, 1173, 1174, 1816, 1817, 1818, 1819, 1820], "threshold": [46, 47, 61, 62, 95, 96, 109, 110, 162, 196, 229, 230, 231, 232, 233, 453, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "3461": [46, 47, 95, 96, 196, 229, 230, 231, 232, 233], "6491": [46, 47, 95, 96, 196, 229, 230, 231, 232, 233], "535": [46, 47, 95, 96, 196, 229, 230, 231, 232], "42": [46, 47, 80, 81, 95, 96, 114, 115, 126, 127, 128, 129, 164, 169, 196, 229, 230, 231, 232, 453, 519, 522, 854, 857, 1038, 1042, 1451, 1453, 1456, 1463, 1465, 1466, 1555, 1607, 1610, 1627, 1630, 1816, 1817, 1819, 1820, 1821, 1822, 1825, 1827, 1830, 1832, 1833, 1834, 1835, 1837, 1840, 1842, 1911, 1912, 1915, 1922, 1925], "22": [46, 47, 61, 62, 63, 64, 65, 80, 81, 88, 89, 95, 96, 111, 112, 113, 118, 119, 128, 129, 146, 196, 209, 211, 213, 229, 230, 232, 453, 524, 525, 527, 804, 805, 807, 809, 810, 814, 816, 854, 857, 858, 1038, 1039, 1042, 1045, 1046, 1047, 1099, 1100, 1102, 1104, 1105, 1107, 1109, 1110, 1111, 1112, 1113, 1201, 1205, 1227, 1228, 1229, 1230, 1231, 1295, 1297, 1391, 1392, 1445, 1446, 1448, 1489, 1528, 1531, 1535, 1537, 1538, 1539, 1555, 1576, 1579, 1597, 1600, 1627, 1630, 1796, 1805, 1815, 1827, 1829, 1832, 1833, 1834, 1837, 1839, 1848, 1869, 1873, 1911, 1917, 1918, 1922, 1923, 1925], "09": [46, 47, 61, 62, 114, 115, 128, 129, 196, 229, 230, 232, 453, 699, 700, 702, 744, 747, 1451, 1453, 1455, 1456, 1489, 1550, 1553, 1832, 1834], "31": [46, 47, 61, 62, 63, 109, 110, 111, 112, 113, 118, 119, 128, 129, 167, 196, 209, 212, 229, 230, 232, 237, 277, 280, 453, 519, 522, 644, 645, 647, 679, 681, 683, 814, 815, 817, 854, 857, 858, 1038, 1041, 1042, 1258, 1275, 1278, 1352, 1356, 1535, 1537, 1539, 1555, 1657, 1661, 1832, 1834, 1837, 1839], "55": [46, 47, 128, 129, 143, 229, 230, 453, 519, 522, 764, 768, 1258, 1347, 1350, 1555, 1597, 1600, 1627, 1630, 1657, 1661, 1821, 1832, 1834, 1835, 1837, 1839, 1911, 1922, 1925], "collect": [50, 97, 98, 101, 147, 152, 159, 160, 180, 196, 234, 418, 1258, 1451, 1489, 1695, 1796, 1810, 1816, 1821, 1979, 1981, 1984, 1990, 2007, 2023, 2025], "include_deriv": [50, 51, 52, 53, 54, 101, 102, 1796, 1798, 1809], "nest": [50, 51, 52, 53, 54, 94, 97, 98, 99, 100, 101, 102, 144, 146, 155, 161, 167, 168, 181, 1258, 1423, 1426, 1450, 1451, 1461, 1480, 1486, 1488, 1792, 1793, 1794, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1968, 1976, 1981, 1995, 1996, 2019, 2020, 2025, 2026, 2027, 2028, 2029, 2030], "unchang": [50, 51, 52, 53, 54, 928, 931, 1071, 1078, 1489, 1528, 1531], "deriv": [50, 51, 52, 53, 54, 55, 56, 66, 67, 101, 102, 103, 104, 111, 114, 115, 148, 149, 166, 168, 237, 253, 254, 256, 267, 268, 270, 300, 301, 302, 303, 304, 318, 319, 320, 321, 322, 844, 847, 1025, 1026, 1027, 1028, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1796, 1798, 1809, 2019, 2020, 2025, 2029, 2031], "tupl": [50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 70, 71, 72, 73, 76, 77, 82, 83, 84, 85, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 148, 153, 154, 159, 160, 164, 167, 168, 181, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 237, 242, 243, 244, 267, 269, 271, 287, 290, 292, 294, 296, 300, 302, 304, 318, 319, 321, 323, 335, 337, 339, 340, 341, 342, 343, 344, 345, 347, 349, 368, 369, 371, 372, 386, 388, 390, 402, 403, 405, 407, 412, 418, 424, 431, 432, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 823, 828, 830, 831, 839, 840, 841, 842, 843, 844, 849, 850, 865, 866, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 886, 887, 888, 889, 890, 891, 895, 896, 897, 898, 899, 902, 903, 905, 906, 908, 910, 912, 917, 918, 920, 921, 922, 923, 926, 933, 937, 943, 944, 946, 947, 961, 962, 964, 965, 968, 969, 970, 971, 987, 988, 989, 990, 991, 1005, 1007, 1009, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1038, 1039, 1040, 1041, 1044, 1045, 1046, 1047, 1053, 1055, 1059, 1060, 1062, 1063, 1071, 1075, 1076, 1082, 1087, 1088, 1089, 1091, 1092, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1125, 1128, 1129, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1153, 1155, 1157, 1159, 1161, 1164, 1171, 1173, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1185, 1186, 1187, 1189, 1191, 1192, 1193, 1201, 1202, 1203, 1205, 1206, 1207, 1209, 1211, 1212, 1213, 1214, 1215, 1219, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1237, 1238, 1239, 1240, 1241, 1247, 1248, 1250, 1252, 1253, 1255, 1258, 1259, 1261, 1263, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1309, 1310, 1311, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1328, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1450, 1451, 1453, 1456, 1463, 1465, 1468, 1471, 1481, 1482, 1484, 1489, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1530, 1532, 1535, 1537, 1539, 1540, 1541, 1542, 1543, 1544, 1550, 1552, 1554, 1555, 1556, 1558, 1560, 1561, 1563, 1565, 1581, 1582, 1583, 1585, 1587, 1589, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1637, 1638, 1640, 1642, 1643, 1644, 1645, 1646, 1652, 1653, 1654, 1656, 1662, 1665, 1666, 1667, 1670, 1671, 1673, 1685, 1686, 1688, 1689, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1711, 1712, 1714, 1716, 1717, 1720, 1722, 1725, 1727, 1731, 1732, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1747, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1782, 1783, 1785, 1787, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1812, 1813, 1814, 1815, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1848, 1859, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1896, 1898, 1900, 1911, 1912, 1914, 1916, 1917, 1919, 1921, 1926, 1927, 1928, 1929, 1930, 1932, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1997, 1998, 2001, 2002, 2005, 2019, 2021, 2072, 2080, 2081, 2086, 2088, 2090, 2092, 2095, 2097], "kei": [50, 51, 52, 70, 71, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 146, 153, 158, 159, 160, 167, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 267, 269, 271, 292, 294, 296, 300, 302, 304, 318, 319, 321, 335, 337, 339, 345, 347, 349, 386, 388, 390, 403, 405, 407, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 819, 821, 823, 839, 841, 843, 933, 937, 1005, 1007, 1009, 1155, 1157, 1159, 1175, 1177, 1179, 1187, 1189, 1191, 1211, 1212, 1214, 1247, 1248, 1250, 1252, 1253, 1255, 1258, 1259, 1261, 1263, 1264, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1285, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1463, 1465, 1481, 1482, 1484, 1489, 1528, 1530, 1532, 1535, 1537, 1539, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1556, 1558, 1560, 1561, 1563, 1565, 1587, 1589, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1609, 1611, 1617, 1619, 1621, 1642, 1644, 1646, 1670, 1671, 1673, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1727, 1731, 1732, 1734, 1736, 1747, 1749, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1782, 1783, 1785, 1792, 1793, 1794, 1796, 1800, 1806, 1810, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1859, 1861, 1863, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1896, 1898, 1900, 1912, 1914, 1916, 1917, 1919, 1921, 1930, 1932, 1938, 1940, 1942, 1943, 1945, 1952, 1953, 1955, 1958, 1960, 1962, 1963, 1965, 1967, 1981, 1984, 1988, 1993, 1994, 1995, 1996, 2007, 2018, 2019, 2020, 2025, 2029, 2072, 2074, 2086, 2087, 2089, 2106, 2114], "word": [50, 51, 52, 146, 158, 237, 239, 240, 1821, 1837, 1840, 1968, 1993, 1994, 2019, 2020], "cont_inplac": [50, 52, 54], "leaf": [50, 53, 97, 98, 136, 137, 146, 155, 167, 1796, 1807, 1808, 1810, 1917, 1919, 1921, 1995, 1996], "travers": [50, 53, 54, 101, 102, 146, 148, 164, 1796, 1809], "lowest": [50, 53, 54, 80, 81, 101, 102, 128, 129, 155, 181, 1796, 1809, 1821, 1827, 1828, 1829, 1830, 1831, 1968, 1978, 1982, 1986], "asarrai": [55, 56, 64, 65, 94, 99, 100, 112, 113, 156, 157, 158, 237, 1258, 1332, 1334, 1335, 1336, 1347, 1348, 1352, 1353, 1407, 1408, 1409, 1410, 1411, 1489, 1491, 1494, 1874, 1880, 1884], "nativedtyp": [55, 56, 57, 58, 63, 80, 81, 82, 83, 88, 89, 103, 104, 111, 120, 121, 128, 129, 130, 131, 136, 137, 148, 149, 154, 158, 161, 164, 237, 239, 240, 242, 243, 244, 252, 253, 254, 256, 258, 259, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 315, 317, 318, 319, 320, 321, 322, 323, 329, 330, 333, 351, 352, 353, 354, 356, 357, 358, 360, 362, 379, 380, 401, 408, 417, 819, 820, 822, 839, 840, 841, 842, 843, 844, 846, 847, 851, 852, 853, 870, 871, 872, 873, 874, 891, 895, 910, 958, 959, 960, 978, 979, 980, 981, 1003, 1025, 1027, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1171, 1172, 1173, 1174, 1201, 1203, 1233, 1236, 1555, 1685, 1686, 1688, 1689, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1856, 1857, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1938, 1939, 1940, 1941, 1942, 1947, 1951, 1997, 1998, 2001], "datatyp": [55, 56, 97, 98, 237, 242, 243, 267, 268, 270, 287, 288, 290, 323, 351, 401, 408, 2034, 2040], "nativedevic": [55, 56, 59, 60, 63, 80, 81, 103, 104, 107, 108, 128, 129, 148, 149, 152, 154, 161, 237, 239, 240, 242, 243, 244, 252, 253, 254, 256, 258, 259, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 287, 288, 290, 292, 293, 295, 297, 298, 300, 301, 302, 303, 304, 315, 317, 318, 319, 320, 321, 322, 418, 419, 422, 423, 424, 425, 426, 428, 430, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 819, 820, 822, 844, 849, 850, 958, 959, 960, 1171, 1172, 1174, 1219, 1222, 1223, 1226, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1997, 1998, 2001, 2025, 2026, 2027, 2029, 2031, 2032], "interpret": [55, 56, 147, 237, 242, 243, 244, 287, 288, 290, 1982], "copy_arrai": [55, 56, 94, 99, 100, 237], "empty_lik": [55, 56, 103, 104, 162, 237], "deafult": [55, 56, 82, 83, 130, 131, 237, 253, 254, 256, 1848, 1849, 1850, 1851, 1852, 1853], "uniniti": [55, 56, 237, 252, 253, 254, 256], "from_dlpack": [55, 56, 103, 104, 237], "full_lik": [55, 56, 103, 104, 161, 237, 271], "scalar": [55, 56, 61, 62, 63, 64, 65, 95, 96, 103, 104, 109, 110, 111, 112, 113, 120, 121, 148, 181, 204, 206, 208, 237, 267, 268, 269, 270, 271, 292, 293, 294, 295, 296, 453, 469, 470, 471, 472, 473, 749, 750, 751, 752, 753, 789, 790, 792, 794, 795, 797, 799, 800, 802, 834, 835, 836, 837, 838, 865, 868, 891, 894, 896, 897, 899, 903, 904, 912, 917, 918, 920, 943, 944, 946, 968, 969, 970, 971, 982, 983, 985, 1005, 1008, 1071, 1072, 1073, 1074, 1081, 1182, 1185, 1258, 1433, 1434, 1435, 1436, 1437, 1445, 1449, 1555, 1685, 1686, 1688, 1689, 1981, 2019, 2021], "fill": [55, 56, 63, 80, 81, 82, 83, 97, 98, 103, 104, 111, 128, 129, 130, 131, 159, 237, 252, 266, 267, 268, 269, 270, 271, 277, 279, 281, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 315, 317, 318, 319, 320, 321, 322, 819, 822, 891, 909, 958, 960, 1135, 1136, 1137, 1138, 1139, 1171, 1172, 1174, 1821, 1827, 1828, 1829, 1830, 1831, 1848, 1864, 1865, 1866, 1867, 1868, 1997, 1998, 2003, 2005, 2006], "000123": [55, 56, 237, 267, 268, 270], "linspac": [55, 56, 103, 104, 154, 162, 164, 237, 239, 240, 1969, 1988], "stop": [55, 56, 66, 67, 103, 104, 114, 115, 154, 162, 164, 181, 237, 239, 240, 241, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 418, 420, 443, 1451, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1792, 1793, 1794, 1795, 1796, 1808, 1981, 2025, 2026, 2027, 2028, 2029, 2030], "endpoint": [55, 56, 103, 104, 154, 237, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 1997, 2005], "logspac": [55, 56, 103, 104, 164, 237, 281], "rang": [55, 56, 103, 104, 148, 152, 160, 164, 167, 168, 169, 237, 239, 240, 272, 275, 277, 278, 279, 280, 281, 1258, 1450, 1451, 1486, 1874, 1875, 1879, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951, 1969, 1981, 1987, 1997, 2005, 2072, 2076, 2080, 2081, 2083, 2090, 2096, 2100, 2101, 2102, 2103], "sampl": [55, 56, 63, 80, 81, 88, 89, 103, 104, 109, 110, 111, 128, 129, 136, 137, 156, 159, 160, 237, 272, 275, 277, 278, 279, 280, 281, 819, 820, 822, 870, 871, 872, 873, 874, 875, 891, 914, 958, 959, 960, 1038, 1043, 1171, 1172, 1173, 1174, 1216, 1217, 1218, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 2007, 2015], "on_valu": [55, 56, 103, 104, 237, 277, 278, 279, 280, 281, 292, 293, 294, 295, 296], "off_valu": [55, 56, 103, 104, 237, 277, 278, 279, 280, 281, 292, 293, 294, 295, 296], "float32": [55, 56, 57, 58, 70, 71, 103, 104, 105, 106, 112, 113, 118, 119, 136, 137, 148, 150, 160, 237, 277, 278, 279, 280, 281, 292, 293, 294, 296, 300, 303, 318, 322, 323, 328, 329, 345, 346, 347, 349, 353, 354, 358, 360, 362, 363, 366, 368, 369, 379, 386, 388, 389, 390, 391, 394, 403, 406, 407, 409, 414, 844, 851, 854, 857, 891, 899, 943, 946, 1038, 1042, 1233, 1236, 1258, 1428, 1429, 1432, 1489, 1501, 1503, 1504, 1510, 1511, 1513, 1523, 1524, 1525, 1527, 1917, 1921, 2043, 2061], "cuda": [55, 56, 80, 81, 103, 104, 112, 113, 128, 129, 164, 181, 237, 272, 275, 277, 278, 279, 280, 281, 292, 293, 295, 418, 421, 422, 423, 440, 441, 819, 822, 958, 960, 1171, 1172, 1174, 1320, 1322, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1968, 1986, 1997, 1998, 2001, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2029, 2031, 2032], "evenli": [55, 56, 63, 76, 77, 97, 98, 103, 104, 109, 110, 124, 125, 237, 239, 240, 272, 275, 277, 278, 279, 280, 281, 891, 914, 1216, 1217, 1218, 1711, 1757, 1758, 1759, 1760, 1761], "simplic": [55, 56, 61, 62, 72, 73, 109, 110, 151, 162, 168, 180, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 282, 285, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 381, 384, 391, 394, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 609, 612, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 804, 807, 809, 812, 814, 817, 854, 857, 860, 863, 886, 889, 928, 931, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1047, 1053, 1054, 1055, 1071, 1078, 1088, 1099, 1102, 1104, 1107, 1109, 1112, 1161, 1164, 1258, 1315, 1318, 1332, 1335, 1341, 1344, 1347, 1350, 1433, 1437, 1451, 1481, 1485, 1489, 1501, 1504, 1510, 1513, 1523, 1526, 1535, 1538, 1545, 1548, 1550, 1553, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1689, 1690, 1694, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1740, 1742, 1745, 1747, 1750, 1752, 1755, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1816, 1817, 1820, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956], "nestabl": [55, 56, 61, 62, 72, 73, 109, 110, 142, 150, 151, 157, 160, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 282, 285, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 381, 384, 391, 394, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 804, 807, 809, 812, 814, 817, 844, 849, 850, 854, 857, 860, 863, 886, 889, 928, 931, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1047, 1053, 1054, 1055, 1071, 1078, 1088, 1099, 1102, 1104, 1107, 1109, 1112, 1161, 1164, 1219, 1222, 1223, 1226, 1258, 1315, 1318, 1332, 1335, 1341, 1344, 1347, 1350, 1417, 1421, 1433, 1437, 1451, 1481, 1485, 1489, 1501, 1504, 1510, 1513, 1523, 1526, 1535, 1538, 1545, 1548, 1550, 1553, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1689, 1690, 1694, 1711, 1712, 1715, 1717, 1720, 1722, 1725, 1727, 1730, 1732, 1735, 1737, 1740, 1742, 1745, 1747, 1750, 1752, 1755, 1757, 1760, 1762, 1765, 1767, 1770, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1816, 1817, 1820, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966, 1968], "01": [55, 56, 63, 66, 67, 111, 114, 115, 120, 121, 128, 129, 145, 169, 237, 277, 278, 280, 453, 644, 647, 719, 722, 724, 727, 824, 826, 844, 848, 854, 857, 886, 889, 1005, 1006, 1007, 1009, 1029, 1031, 1038, 1042, 1053, 1055, 1069, 1070, 1258, 1407, 1410, 1451, 1453, 1455, 1456, 1468, 1469, 1470, 1471, 1555, 1587, 1590, 1591, 1657, 1661, 1821, 1832, 1835, 1837, 1839], "02": [55, 56, 66, 67, 78, 79, 80, 81, 109, 110, 114, 115, 128, 129, 237, 277, 278, 280, 453, 474, 476, 479, 481, 644, 647, 854, 857, 1038, 1042, 1258, 1407, 1410, 1451, 1453, 1455, 1456, 1468, 1469, 1470, 1471, 1816, 1817, 1818, 1820, 1821, 1832, 1833, 1834, 1837, 1840], "03": [55, 56, 61, 62, 109, 110, 114, 115, 128, 129, 237, 277, 278, 280, 453, 539, 540, 541, 543, 634, 637, 1258, 1407, 1410, 1451, 1468, 1470, 1471, 1489, 1550, 1553, 1555, 1597, 1600, 1832, 1834, 1837, 1841], "04": [55, 56, 66, 67, 95, 96, 114, 115, 160, 196, 204, 206, 207, 208, 209, 212, 237, 277, 278, 280, 323, 363, 366, 453, 569, 572, 1258, 1398, 1451, 1453, 1455, 1456, 1468, 1469, 1470, 1471, 1489, 1550, 1553], "05": [55, 56, 61, 62, 63, 66, 67, 78, 79, 109, 110, 111, 114, 115, 126, 127, 159, 160, 237, 277, 278, 280, 453, 644, 645, 646, 647, 648, 779, 780, 781, 782, 783, 844, 848, 891, 892, 904, 1005, 1006, 1007, 1008, 1009, 1029, 1031, 1258, 1329, 1347, 1350, 1398, 1451, 1453, 1456, 1468, 1469, 1470, 1471, 1555, 1607, 1610, 1816, 1817, 1818, 1819, 1820, 2023, 2024, 2034, 2035], "464": [55, 56, 61, 62, 128, 129, 237, 277, 278, 280, 453, 484, 485, 489, 492, 1832, 1836], "15888336": [55, 56, 237, 277, 278, 280], "1000": [55, 56, 103, 104, 167, 237, 277, 278, 279, 280, 281], "2154": [55, 56, 237, 277, 278, 280], "43469003": [55, 56, 237, 277, 278, 280], "10000": [55, 56, 103, 104, 237, 277, 278, 279, 280, 281], "meshgrid": [55, 56, 103, 104, 237], "spars": [55, 56, 74, 75, 103, 104, 122, 123, 237, 282, 283, 284, 285, 286, 1695, 1706, 1707, 1708, 1709, 1710], "xy": [55, 56, 103, 104, 237, 282, 283, 284, 285, 286], "arbitrari": [55, 56, 57, 58, 63, 97, 98, 105, 106, 146, 154, 155, 157, 158, 160, 168, 181, 237, 282, 283, 285, 323, 335, 336, 337, 338, 339, 403, 404, 405, 406, 407, 789, 790, 794, 795, 799, 800, 1451, 1461, 1982, 1987], "grid": [55, 56, 150, 160, 180, 237, 282, 283, 285], "coordin": [55, 56, 61, 62, 82, 83, 109, 110, 111, 130, 131, 237, 282, 283, 285, 453, 489, 490, 491, 492, 493, 844, 849, 850, 968, 970, 1071, 1086, 1087, 1152, 1153, 1201, 1205, 1219, 1222, 1223, 1226, 1227, 1231, 1848, 1864, 1865, 1866, 1867, 1868], "cartesian": [55, 56, 237, 282, 283, 285], "ij": [55, 56, 88, 89, 237, 282, 283, 285, 1911, 1922, 1923, 1925], "vector": [55, 56, 63, 64, 65, 70, 71, 72, 73, 112, 113, 118, 119, 120, 121, 180, 237, 282, 283, 285, 870, 871, 873, 1071, 1088, 1161, 1164, 1171, 1173, 1258, 1280, 1281, 1282, 1283, 1284, 1357, 1359, 1361, 1450, 1489, 1535, 1536, 1537, 1538, 1539, 1555, 1561, 1562, 1563, 1564, 1565, 1581, 1582, 1585, 1592, 1595, 1602, 1605, 1627, 1630, 1652, 1656, 1657, 1661, 1675, 1679, 1680, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1694, 1981, 2007, 2017], "ignor": [55, 56, 97, 98, 147, 150, 160, 181, 237, 282, 283, 285, 875, 1038, 1043, 1796, 1808, 1987, 2019, 2022, 2025, 2029, 2043, 2059], "rank": [55, 56, 63, 72, 73, 76, 77, 90, 91, 111, 120, 121, 124, 125, 138, 139, 237, 282, 283, 285, 1071, 1088, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1555, 1561, 1564, 1571, 1574, 1617, 1618, 1619, 1620, 1621, 1637, 1640, 1647, 1650, 1670, 1671, 1672, 1673, 1674, 1680, 1684, 1685, 1686, 1688, 1689, 1711, 1722, 1725, 1727, 1728, 1729, 1730, 1731, 1767, 1770, 1782, 1786, 1787, 1791, 1848, 1864, 1867, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967], "length": [55, 56, 63, 76, 77, 94, 97, 98, 99, 100, 111, 124, 125, 153, 160, 167, 237, 239, 240, 282, 283, 285, 824, 825, 826, 827, 844, 845, 847, 848, 851, 865, 868, 870, 871, 872, 873, 874, 886, 889, 891, 896, 922, 974, 976, 1025, 1027, 1029, 1031, 1038, 1044, 1053, 1055, 1069, 1070, 1071, 1088, 1161, 1164, 1171, 1173, 1206, 1207, 1209, 1233, 1236, 1258, 1450, 1555, 1652, 1656, 1657, 1661, 1711, 1747, 1748, 1749, 1750, 1751, 2072, 2082], "ni": [55, 56, 237, 282, 283, 285], "len": [55, 56, 63, 72, 73, 111, 120, 121, 146, 147, 157, 158, 160, 166, 169, 237, 282, 283, 285, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1555, 1675, 1676, 1677, 1678, 1679], "xi": [55, 56, 237, 282, 283, 285], "one_hot": [55, 56, 103, 104, 169, 237, 296, 1969], "scatter": [55, 56, 64, 65, 103, 104, 112, 113, 162, 237, 292, 293, 294, 295, 296, 1258, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1988], "hot": [55, 56, 103, 104, 237, 292, 293, 294, 295, 296], "unless": [55, 56, 63, 72, 73, 103, 104, 111, 145, 149, 157, 181, 237, 292, 293, 294, 295, 296, 779, 781, 783, 891, 910, 1005, 1006, 1007, 1009, 1145, 1146, 1147, 1148, 1149, 1555, 1617, 1618, 1620], "overrid": [55, 56, 103, 104, 237, 292, 293, 294, 295, 296], "ones_lik": [55, 56, 103, 104, 145, 169, 237, 304, 1969], "tril": [55, 56, 103, 104, 237], "k": [55, 56, 63, 70, 71, 72, 73, 80, 81, 103, 104, 109, 110, 111, 118, 119, 120, 121, 128, 129, 142, 143, 158, 159, 164, 237, 258, 259, 260, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 649, 651, 653, 819, 822, 844, 849, 850, 860, 861, 862, 863, 870, 871, 872, 873, 874, 1053, 1054, 1071, 1089, 1091, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1211, 1212, 1213, 1214, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1258, 1266, 1268, 1489, 1550, 1551, 1552, 1553, 1554, 1555, 1571, 1572, 1573, 1574, 1575, 1602, 1605, 1607, 1609, 1610, 1611, 1637, 1640, 1647, 1650, 1652, 1656, 1657, 1661, 1670, 1671, 1672, 1673, 1674, 1796, 1805, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1848, 1864, 1867, 1977, 1981], "innermost": [55, 56, 72, 73, 120, 121, 237, 305, 307, 309, 310, 312, 314, 1555, 1556, 1557, 1558, 1559, 1560, 1566, 1569, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1597, 1599, 1600, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1632, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1670, 1671, 1672, 1673, 1674], "mxn": [55, 56, 72, 73, 120, 121, 237, 305, 307, 309, 310, 312, 314, 1555, 1576, 1579, 1607, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1632, 1634, 1635, 1636, 1637, 1640, 1657, 1661, 1670, 1671, 1672, 1673, 1674], "diagon": [55, 56, 72, 73, 120, 121, 237, 258, 259, 305, 307, 309, 310, 312, 314, 844, 849, 850, 860, 863, 1053, 1054, 1219, 1222, 1223, 1226, 1555, 1571, 1574, 1670, 1671, 1672, 1673, 1674], "triangular": [55, 56, 72, 73, 120, 121, 237, 305, 307, 309, 310, 312, 314, 844, 849, 850, 1219, 1222, 1223, 1226, 1555, 1556, 1557, 1558, 1559, 1560, 1587, 1590, 1637, 1640], "triu": [55, 56, 103, 104, 237], "upper": [55, 56, 72, 73, 80, 81, 120, 121, 128, 129, 157, 160, 237, 258, 259, 310, 312, 314, 844, 850, 1223, 1226, 1555, 1556, 1557, 1558, 1559, 1560, 1587, 1590, 1637, 1640, 1821, 1837, 1838, 1839, 1840, 1841, 1995, 1996], "zeros_lik": [55, 56, 103, 104, 158, 162, 237, 319, 323, 330, 333, 453, 659, 662, 1451, 1453, 1456, 1463, 1466, 1468, 1471, 1476, 1479, 1489, 1523, 1526, 1711, 1712, 1715, 1969], "creation": [56, 94, 97, 98, 99, 100, 104, 148, 149, 152, 154, 156, 158, 159, 160, 161, 164, 238, 239, 240, 242, 244, 246, 247, 248, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 280, 281, 282, 285, 287, 290, 292, 295, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 845, 846, 847, 848, 849, 850, 851, 1981, 1983, 1987], "data_typ": [57, 58, 105, 106, 148, 160, 161, 323, 324, 325, 326, 327, 328, 329, 330, 333, 335, 338, 340, 343, 345, 348, 350, 351, 352, 353, 354, 356, 357, 358, 360, 362, 363, 366, 368, 369, 371, 372, 374, 377, 379, 380, 381, 384, 386, 389, 391, 394, 396, 399, 401, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 852, 853], "astyp": [57, 58, 70, 71, 105, 106, 118, 119, 148, 157, 158, 162, 323, 1489, 1501, 1504, 1510, 1511, 1513, 1523, 1524, 1525, 1527], "irrespect": [57, 58, 105, 106, 146, 157, 166, 323, 330, 331, 332, 333, 334, 1555, 1652, 1656, 1988], "rule": [57, 58, 63, 72, 73, 105, 106, 109, 110, 120, 121, 143, 144, 146, 148, 150, 153, 154, 155, 160, 162, 323, 330, 331, 332, 333, 334, 345, 346, 347, 348, 349, 401, 402, 403, 406, 453, 494, 497, 549, 552, 679, 682, 714, 717, 769, 773, 891, 914, 1216, 1217, 1218, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1564, 1592, 1595, 1612, 1615, 1627, 1630, 1647, 1650, 1711, 1717, 1720, 1982, 2090, 2096], "cast": [57, 58, 63, 105, 106, 111, 120, 121, 148, 155, 159, 164, 323, 330, 331, 332, 333, 334, 345, 346, 347, 348, 349, 403, 404, 405, 407, 891, 909, 1135, 1136, 1137, 1138, 1139, 1555, 1685, 1686, 1688, 1689, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951, 1969, 2086, 2088], "nan": [57, 58, 61, 62, 63, 64, 65, 88, 89, 105, 106, 109, 110, 111, 112, 113, 143, 148, 151, 161, 236, 323, 330, 331, 332, 333, 334, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 475, 476, 477, 478, 479, 482, 484, 487, 489, 490, 492, 529, 532, 534, 537, 539, 542, 544, 546, 547, 548, 564, 567, 569, 572, 574, 577, 594, 595, 596, 597, 598, 604, 605, 606, 607, 608, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 639, 642, 644, 647, 654, 657, 699, 702, 704, 706, 707, 708, 714, 717, 719, 722, 729, 732, 734, 737, 739, 742, 754, 758, 759, 763, 764, 768, 777, 778, 779, 780, 781, 782, 783, 891, 892, 900, 901, 904, 909, 910, 913, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 1005, 1006, 1007, 1008, 1009, 1064, 1065, 1066, 1067, 1068, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1187, 1190, 1201, 1203, 1258, 1341, 1342, 1343, 1344, 1345, 1445, 1446, 1447, 1448, 1449, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1911, 1926, 1929, 1930, 1931, 1933, 1934, 1937, 1943, 1946, 1947, 1951, 1952, 1954, 1956, 1957, 1958, 1961, 1963, 1966, 2072, 2076, 2080, 2081, 2100, 2101], "infin": [57, 58, 61, 62, 63, 64, 65, 105, 106, 109, 110, 111, 120, 121, 143, 151, 236, 323, 330, 331, 332, 333, 334, 453, 454, 457, 464, 467, 469, 472, 479, 482, 484, 487, 489, 490, 492, 529, 532, 534, 537, 539, 542, 564, 567, 569, 572, 574, 577, 579, 582, 594, 597, 599, 600, 601, 602, 603, 624, 627, 629, 632, 634, 637, 639, 642, 644, 647, 654, 657, 699, 702, 714, 717, 719, 722, 729, 732, 734, 737, 739, 742, 754, 758, 759, 763, 764, 768, 891, 905, 906, 909, 913, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1135, 1136, 1137, 1138, 1139, 1187, 1190, 1258, 1341, 1342, 1344, 1555, 1642, 1645, 1685, 1686, 1688, 1689, 1911, 1926, 1929, 1934, 1937, 1957, 1958, 1961, 1963, 1966], "non": [57, 58, 63, 72, 73, 80, 81, 82, 83, 88, 89, 90, 91, 105, 106, 111, 120, 121, 128, 129, 130, 131, 136, 137, 138, 139, 146, 148, 150, 156, 164, 234, 235, 323, 330, 331, 332, 333, 334, 380, 402, 453, 654, 657, 659, 662, 794, 797, 799, 802, 839, 840, 841, 842, 843, 891, 895, 900, 909, 948, 951, 1071, 1073, 1074, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1201, 1203, 1555, 1566, 1569, 1607, 1610, 1617, 1618, 1619, 1620, 1621, 1652, 1656, 1662, 1665, 1680, 1684, 1685, 1686, 1688, 1689, 1796, 1810, 1821, 1832, 1833, 1834, 1835, 1836, 1848, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1862, 1864, 1865, 1866, 1867, 1868, 1911, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1981, 1997, 2002, 2019, 2020, 2025, 2029], "float64": [57, 58, 80, 81, 88, 89, 105, 106, 111, 128, 129, 136, 137, 148, 160, 237, 266, 323, 330, 331, 333, 345, 346, 348, 353, 354, 363, 366, 368, 369, 379, 380, 391, 394, 403, 404, 405, 406, 407, 408, 409, 414, 417, 852, 853, 891, 899, 943, 946, 1003, 1135, 1137, 1821, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1917, 1918, 1919, 2043, 2061], "broadcast_arrai": [57, 58, 105, 106, 323, 339], "x3": [57, 58, 237, 300, 303, 318, 322, 323, 335, 336, 338, 1258, 1259, 1262], "broadcast_to": [57, 58, 105, 106, 148, 323, 344], "can_cast": [57, 58, 105, 106, 148, 155, 158, 323, 349], "occur": [57, 58, 63, 84, 85, 105, 106, 111, 132, 133, 143, 152, 323, 345, 346, 347, 348, 349, 891, 909, 1135, 1136, 1137, 1138, 1139, 1848, 1849, 1852, 1854, 1857, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1889, 1890, 1894], "as_n": [57, 58, 59, 60, 105, 106, 107, 108, 148, 323, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 379, 418, 424, 425, 426, 427, 428, 429, 440], "int32": [57, 58, 80, 81, 82, 83, 88, 89, 105, 106, 112, 113, 128, 129, 130, 131, 148, 158, 160, 164, 237, 258, 259, 300, 303, 318, 322, 323, 330, 332, 333, 334, 345, 347, 348, 349, 351, 356, 358, 359, 360, 368, 369, 374, 376, 377, 379, 386, 388, 390, 391, 394, 403, 404, 405, 406, 407, 410, 413, 415, 418, 439, 852, 853, 1003, 1258, 1320, 1323, 1428, 1429, 1431, 1432, 1821, 1827, 1828, 1829, 1831, 1832, 1835, 1837, 1840, 1848, 1854, 1855, 1856, 1857, 1858, 1911, 1912, 1913, 1915, 1917, 1920, 1938, 1941, 1947, 1951], "finfo": [57, 58, 105, 106, 160, 323], "iinfo": [57, 58, 105, 106, 153, 323], "119": [57, 58, 374, 375], "122": [57, 58, 374, 375, 453, 539, 542], "int8": [57, 58, 80, 81, 128, 129, 148, 160, 323, 356, 368, 369, 374, 375, 377, 379, 386, 387, 1827, 1828, 1829], "min": [57, 58, 64, 65, 88, 89, 105, 106, 112, 113, 136, 137, 323, 363, 366, 374, 375, 376, 377, 453, 674, 677, 844, 849, 850, 1219, 1222, 1223, 1226, 1258, 1295, 1296, 1297, 1298, 1299, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1407, 1410, 1555, 1607, 1610, 1637, 1640, 1652, 1656, 1657, 1661, 1685, 1686, 1688, 1689, 1911], "128": [57, 58, 63, 70, 71, 94, 99, 100, 111, 118, 119, 323, 374, 375, 377, 854, 857, 891, 897, 917, 918, 919, 920, 921, 1038, 1042, 1258, 1328, 1523, 1524, 1525, 1527, 1555, 1627, 1630], "max": [57, 58, 63, 64, 65, 72, 73, 88, 89, 105, 106, 111, 112, 113, 120, 121, 136, 137, 147, 160, 323, 363, 366, 374, 375, 376, 377, 453, 669, 672, 804, 805, 809, 810, 811, 813, 814, 815, 1038, 1045, 1046, 1047, 1099, 1100, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1295, 1296, 1297, 1298, 1299, 1357, 1359, 1361, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1555, 1607, 1610, 1617, 1618, 1619, 1620, 1621, 1632, 1635, 1911, 2025, 2027, 2072, 2083], "127": [57, 58, 63, 111, 323, 374, 375, 377, 891, 913, 1187, 1188, 1189, 1190, 1191], "is_bool_dtyp": [57, 58, 105, 106, 323], "is_float_dtyp": [57, 58, 105, 106, 161, 323, 390], "is_int_dtyp": [57, 58, 105, 106, 159, 161, 323], "is_uint_dtyp": [57, 58, 105, 106, 159, 161, 323], "result_typ": [57, 58, 105, 106, 148, 323, 407], "arrays_and_dtyp": [57, 58, 105, 106, 323, 403, 404, 405, 406, 407], "handl": [59, 60, 66, 67, 94, 97, 98, 99, 100, 107, 108, 142, 146, 148, 149, 154, 155, 156, 157, 158, 159, 160, 162, 168, 234, 235, 418, 421, 422, 423, 424, 425, 426, 427, 428, 433, 437, 438, 449, 452, 1463, 1464, 1978, 1988, 2025, 2026, 2027, 2028, 2029, 2030], "to_devic": [59, 60, 107, 108, 418, 424, 445], "stream": [59, 60, 107, 108, 418, 444, 445, 446, 447, 448, 1985], "__dlpack__": [59, 60, 107, 108, 237, 261, 264, 418, 444, 445, 446, 447, 448], "caveat": [59, 60, 107, 108, 418, 444, 445, 446, 447, 448], "portabl": [59, 60, 107, 108, 418, 444, 445, 446, 447, 448, 1969, 1979], "aco": [61, 62, 109, 110, 453, 463, 1969], "real": [61, 62, 88, 89, 109, 110, 136, 137, 146, 453, 459, 460, 461, 463, 464, 465, 474, 475, 476, 478, 484, 485, 486, 488, 489, 490, 491, 493, 549, 550, 551, 553, 564, 566, 568, 569, 571, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 664, 665, 679, 680, 683, 699, 700, 701, 703, 714, 715, 716, 718, 739, 740, 741, 743, 744, 745, 746, 748, 749, 751, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 1555, 1581, 1642, 1645, 1911, 1926, 1928, 1934, 1935, 1936, 1937, 1943, 1946, 1983], "cosin": [61, 62, 109, 110, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 844, 846, 854, 857, 978, 980, 1038, 1042], "57": [61, 62, 109, 110, 418, 430, 453, 459, 460, 461, 462, 463, 464, 467, 474, 475, 476, 477, 478, 479, 482, 489, 490, 492, 539, 542, 544, 545, 547, 548, 704, 705, 707], "69": [61, 62, 114, 115, 128, 129, 160, 167, 453, 459, 460, 634, 637, 854, 857, 1038, 1042, 1451, 1463, 1465, 1466, 1555, 1607, 1610, 1612, 1615, 1832, 1834, 1837, 1841], "acosh": [61, 62, 109, 110, 323, 368, 369, 371, 372, 453, 1969], "hyperbol": [61, 62, 109, 110, 453, 464, 465, 466, 467, 468, 479, 480, 481, 482, 483, 494, 495, 496, 497, 498, 539, 540, 541, 542, 543, 734, 735, 736, 737, 738, 759, 760, 761, 762, 763], "99": [61, 62, 66, 67, 109, 110, 128, 129, 237, 266, 453, 464, 465, 466, 467, 468, 534, 535, 1258, 1407, 1410, 1451, 1463, 1464, 1466, 1832, 1834, 1911, 1922, 1925], "asin": [61, 62, 109, 110, 453, 478, 1969], "sine": [61, 62, 109, 110, 453, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738], "927": [61, 62, 109, 110, 474, 475, 476, 478], "asinh": [61, 62, 109, 110, 453, 483, 1969], "atan": [61, 62, 109, 110, 453, 488, 1969], "tangent": [61, 62, 109, 110, 151, 453, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763], "785": [61, 62, 109, 110, 453, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "atan2": [61, 62, 109, 110, 453, 493, 1969], "quotient": [61, 62, 109, 110, 453, 489, 490, 491, 492, 493], "245": [61, 62, 118, 119, 489, 490, 1489, 1528, 1531, 1535, 1537, 1538, 1539], "68": [61, 62, 128, 129, 196, 209, 212, 237, 266, 453, 489, 490, 492, 854, 857, 1038, 1042, 1816, 1817, 1820, 1832, 1834, 1837, 1839], "588": [61, 62, 453, 489, 490, 492], "inf": [61, 62, 63, 64, 65, 72, 73, 109, 110, 111, 112, 113, 120, 121, 148, 236, 453, 489, 490, 492, 569, 572, 594, 595, 597, 599, 600, 601, 602, 603, 604, 605, 607, 609, 611, 612, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 777, 778, 891, 905, 906, 909, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1064, 1065, 1066, 1067, 1068, 1135, 1136, 1137, 1138, 1139, 1258, 1341, 1343, 1344, 1345, 1445, 1446, 1447, 1448, 1449, 1555, 1607, 1608, 1609, 1610, 1611, 1685, 1686, 1688, 1689, 2072, 2075, 2076, 2080, 2081, 2100, 2101], "36": [61, 62, 63, 70, 71, 88, 89, 111, 112, 113, 120, 121, 453, 489, 490, 492, 719, 720, 724, 725, 814, 818, 854, 857, 891, 903, 968, 969, 970, 971, 1038, 1042, 1258, 1295, 1298, 1299, 1535, 1536, 1555, 1612, 1615, 1627, 1630, 1657, 1661, 1675, 1676, 1678, 1796, 1808, 1911, 1922, 1923, 1925], "75": [61, 62, 63, 109, 110, 111, 112, 113, 118, 119, 128, 129, 237, 272, 275, 453, 479, 482, 483, 489, 490, 491, 492, 493, 549, 552, 844, 846, 854, 857, 891, 903, 968, 969, 970, 971, 978, 980, 1038, 1042, 1166, 1168, 1170, 1258, 1300, 1302, 1304, 1347, 1350, 1351, 1352, 1356, 1407, 1409, 1491, 1493, 1495, 1555, 1597, 1600, 1627, 1630, 1796, 1805, 1821, 1832, 1836, 1837, 1840], "52": [61, 62, 109, 110, 112, 113, 114, 115, 128, 129, 453, 489, 490, 492, 539, 541, 543, 549, 551, 552, 553, 1258, 1295, 1298, 1299, 1352, 1355, 1451, 1453, 1455, 1456, 1489, 1535, 1538, 1555, 1627, 1630, 1837, 1839, 1911, 1922, 1925], "719": [61, 62, 453, 489, 490, 492], "197": [61, 62, 453, 489, 490, 492], "atanh": [61, 62, 109, 110, 453, 498, 1969], "549": [61, 62, 109, 110, 118, 119, 453, 494, 495, 496, 497, 498, 1489, 1535, 1537, 1538, 1539], "47": [61, 62, 63, 80, 81, 109, 110, 111, 112, 113, 114, 115, 128, 129, 453, 494, 495, 496, 498, 739, 742, 809, 810, 814, 816, 1038, 1046, 1047, 1104, 1105, 1107, 1109, 1110, 1111, 1112, 1113, 1258, 1295, 1298, 1299, 1451, 1463, 1465, 1466, 1489, 1535, 1538, 1821, 1832, 1834, 1837, 1838, 1840], "bitwise_and": [61, 62, 109, 110, 453, 503], "11": [61, 62, 63, 64, 65, 70, 71, 72, 73, 80, 81, 88, 89, 94, 99, 100, 109, 110, 111, 112, 113, 118, 119, 120, 121, 124, 125, 128, 129, 136, 137, 146, 147, 148, 150, 161, 453, 469, 471, 473, 484, 487, 499, 500, 502, 569, 571, 714, 715, 717, 719, 722, 749, 750, 752, 804, 805, 807, 809, 810, 812, 814, 818, 854, 858, 876, 877, 878, 879, 880, 928, 929, 930, 931, 932, 987, 988, 989, 990, 991, 997, 999, 1001, 1038, 1039, 1040, 1045, 1046, 1071, 1076, 1078, 1082, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1237, 1238, 1240, 1258, 1274, 1295, 1296, 1297, 1315, 1318, 1352, 1355, 1391, 1392, 1394, 1489, 1491, 1492, 1493, 1494, 1495, 1528, 1529, 1530, 1531, 1532, 1535, 1537, 1538, 1539, 1555, 1576, 1579, 1587, 1590, 1591, 1597, 1600, 1602, 1603, 1607, 1608, 1609, 1610, 1611, 1627, 1630, 1652, 1656, 1657, 1661, 1695, 1706, 1709, 1711, 1732, 1735, 1762, 1764, 1766, 1782, 1783, 1785, 1786, 1796, 1803, 1805, 1815, 1821, 1827, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1848, 1869, 1873, 1874, 1875, 1879, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1952, 1955], "bitwise_invert": [61, 62, 109, 110, 453, 508], "bitiwse_invert": [61, 62, 504, 505], "bitwise_left_shift": [61, 62, 109, 110, 453, 513], "bitwise_or": [61, 62, 109, 110, 453, 518], "89": [61, 62, 80, 81, 94, 99, 100, 105, 106, 109, 110, 111, 128, 129, 323, 374, 376, 377, 453, 524, 525, 526, 527, 528, 854, 857, 858, 1038, 1042, 1555, 1662, 1665, 1832, 1834, 1837, 1838, 1911, 1947, 1951], "51": [61, 62, 63, 109, 110, 111, 112, 113, 128, 129, 453, 524, 525, 679, 681, 734, 735, 737, 854, 855, 856, 857, 858, 1038, 1042, 1352, 1356, 1832, 1836, 1837, 1839], "18": [61, 62, 63, 80, 81, 109, 110, 111, 118, 119, 128, 129, 136, 137, 146, 150, 196, 209, 212, 453, 469, 473, 524, 525, 549, 552, 714, 715, 734, 735, 736, 737, 738, 854, 857, 891, 903, 922, 928, 929, 931, 968, 969, 970, 971, 1038, 1042, 1044, 1045, 1071, 1078, 1099, 1100, 1101, 1102, 1103, 1510, 1512, 1514, 1555, 1576, 1579, 1602, 1605, 1627, 1630, 1821, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1839, 1841, 1911, 1917, 1919, 1920, 1922, 1925, 1938, 1940, 1942], "19": [61, 62, 63, 80, 81, 109, 110, 111, 120, 121, 128, 129, 150, 152, 453, 479, 481, 483, 524, 525, 569, 573, 634, 636, 679, 681, 683, 754, 755, 756, 757, 758, 814, 815, 817, 854, 857, 858, 928, 929, 931, 1038, 1041, 1042, 1045, 1071, 1078, 1099, 1100, 1101, 1102, 1103, 1555, 1576, 1579, 1607, 1609, 1611, 1670, 1671, 1673, 1674, 1796, 1808, 1821, 1827, 1829, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1839, 1841, 1895, 1906, 1909], "26": [61, 62, 63, 78, 79, 80, 81, 111, 112, 113, 114, 115, 128, 129, 453, 524, 525, 549, 552, 734, 737, 854, 857, 858, 1038, 1042, 1053, 1058, 1130, 1131, 1132, 1133, 1134, 1258, 1347, 1350, 1351, 1451, 1453, 1455, 1456, 1489, 1523, 1526, 1555, 1576, 1579, 1627, 1630, 1662, 1665, 1796, 1798, 1816, 1817, 1818, 1820, 1827, 1829, 1832, 1833, 1911, 1922, 1925], "27": [61, 62, 63, 72, 73, 80, 81, 109, 110, 111, 118, 119, 120, 121, 128, 129, 136, 137, 453, 519, 522, 524, 525, 539, 542, 699, 700, 701, 702, 703, 734, 737, 739, 741, 743, 854, 857, 891, 899, 943, 944, 946, 1038, 1042, 1145, 1149, 1258, 1352, 1355, 1489, 1550, 1552, 1553, 1554, 1555, 1602, 1605, 1627, 1630, 1675, 1676, 1677, 1678, 1679, 1796, 1798, 1805, 1827, 1831, 1832, 1833, 1911, 1922, 1925, 1938, 1940, 1942], "23": [61, 62, 63, 70, 71, 80, 81, 103, 104, 109, 110, 111, 112, 113, 128, 129, 160, 164, 237, 267, 269, 270, 271, 453, 524, 525, 527, 539, 540, 541, 543, 599, 601, 602, 603, 604, 606, 607, 608, 609, 611, 612, 714, 717, 719, 720, 724, 727, 734, 735, 736, 737, 738, 764, 768, 804, 805, 807, 809, 810, 814, 816, 834, 837, 838, 854, 857, 858, 891, 894, 1038, 1039, 1042, 1045, 1046, 1047, 1099, 1100, 1102, 1104, 1105, 1107, 1109, 1110, 1111, 1112, 1113, 1352, 1356, 1489, 1515, 1518, 1550, 1551, 1553, 1555, 1576, 1579, 1607, 1610, 1657, 1661, 1796, 1798, 1805, 1827, 1828, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1848, 1869, 1873], "20": [61, 62, 63, 70, 71, 80, 81, 88, 89, 109, 110, 111, 112, 113, 128, 129, 136, 137, 162, 166, 453, 524, 525, 544, 547, 564, 567, 704, 706, 707, 719, 721, 722, 723, 739, 742, 804, 805, 807, 814, 815, 816, 817, 891, 903, 904, 968, 969, 970, 971, 1005, 1008, 1038, 1039, 1041, 1045, 1099, 1100, 1102, 1109, 1111, 1113, 1258, 1320, 1322, 1323, 1324, 1328, 1391, 1393, 1394, 1395, 1407, 1410, 1411, 1491, 1492, 1555, 1576, 1579, 1597, 1600, 1607, 1610, 1627, 1630, 1662, 1665, 1821, 1827, 1828, 1829, 1830, 1848, 1864, 1867, 1869, 1873, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1922, 1925, 1938, 1941, 1947, 1951], "74": [61, 62, 128, 129, 453, 524, 525, 644, 647, 854, 857, 1038, 1042, 1555, 1612, 1615, 1837, 1841], "41": [61, 62, 63, 109, 110, 111, 112, 113, 120, 121, 196, 209, 212, 453, 484, 486, 487, 488, 524, 525, 679, 681, 739, 740, 742, 809, 810, 1038, 1046, 1104, 1105, 1107, 1201, 1205, 1227, 1228, 1229, 1230, 1231, 1258, 1275, 1278, 1279, 1280, 1283, 1284, 1555, 1556, 1558, 1559, 1560, 1911, 1947, 1951], "59": [61, 62, 524, 525], "ceil": [61, 62, 109, 110, 157, 237, 239, 240, 453, 533, 1969], "radian": [61, 62, 63, 109, 110, 111, 151, 453, 459, 462, 474, 477, 484, 487, 489, 492, 534, 535, 536, 537, 538, 544, 545, 546, 547, 548, 704, 705, 706, 707, 708, 729, 730, 731, 732, 733, 754, 755, 756, 757, 758, 784, 785, 786, 787, 788, 891, 893, 913, 1187, 1188, 1189, 1190, 1191], "54": [61, 62, 70, 71, 109, 110, 111, 118, 119, 128, 129, 150, 453, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 739, 741, 743, 764, 766, 768, 844, 845, 854, 857, 858, 974, 975, 976, 977, 1038, 1042, 1048, 1050, 1052, 1489, 1535, 1536, 1537, 1538, 1539, 1550, 1552, 1553, 1554, 1555, 1612, 1615, 1627, 1630, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1911, 1922, 1925], "416": [61, 62, 453, 534, 535, 537], "540": [61, 62, 534, 535], "990": [61, 62, 534, 535], "cosh": [61, 62, 109, 110, 453, 464, 468, 543, 1969], "angl": [61, 62, 63, 109, 110, 111, 180, 453, 489, 492, 539, 540, 541, 542, 543, 734, 735, 736, 737, 738, 759, 760, 761, 762, 763, 788, 891], "76": [61, 62, 88, 89, 105, 106, 109, 110, 128, 129, 323, 374, 376, 377, 453, 464, 466, 468, 539, 540, 541, 542, 543, 734, 736, 738, 759, 760, 1555, 1662, 1665, 1796, 1805, 1832, 1834, 1911, 1922, 1923, 1925], "81": [61, 62, 105, 106, 109, 110, 120, 121, 128, 129, 160, 323, 374, 376, 377, 453, 539, 540, 634, 637, 638, 744, 745, 747, 1555, 1612, 1615, 1675, 1676, 1678, 1796, 1805, 1821, 1837, 1839, 1840, 1911, 1922, 1925], "deg2rad": [61, 62, 109, 110, 453, 548], "degre": [61, 62, 63, 88, 89, 109, 110, 111, 136, 137, 453, 544, 545, 546, 547, 548, 704, 705, 706, 707, 708, 784, 785, 786, 787, 788, 891, 893, 1071, 1089, 1175, 1176, 1177, 1178, 1179, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 1980], "180": [61, 62, 109, 110, 453, 544, 545, 547, 548, 704, 707, 708], "270": [61, 62, 109, 110, 453, 544, 545, 547, 548, 704, 707, 708], "360": [61, 62, 109, 110, 147, 453, 544, 545, 547, 548, 704, 707, 708], "71": [61, 62, 109, 110, 453, 544, 545, 547, 548, 704, 707], "28": [61, 62, 78, 79, 109, 110, 111, 112, 113, 128, 129, 136, 137, 453, 544, 545, 547, 548, 634, 636, 704, 707, 854, 857, 858, 1038, 1042, 1258, 1347, 1350, 1351, 1451, 1453, 1456, 1489, 1515, 1518, 1523, 1526, 1535, 1538, 1555, 1627, 1630, 1816, 1817, 1818, 1820, 1827, 1829, 1832, 1834, 1837, 1839, 1911, 1922, 1925, 1938, 1940, 1942], "dividend": [61, 62, 109, 110, 453, 549, 550, 551, 552, 553, 579, 580, 581, 583, 714, 715, 717, 769, 770, 771, 772, 773], "divisor": [61, 62, 66, 67, 88, 89, 109, 110, 114, 115, 136, 137, 453, 549, 550, 551, 552, 553, 579, 580, 581, 583, 584, 586, 588, 714, 715, 717, 769, 770, 771, 772, 773, 891, 902, 961, 964, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 2025, 2026, 2027], "375": [61, 62, 554, 555, 689, 690], "erf": [61, 62, 109, 110, 453, 563], "exponenti": [61, 62, 109, 110, 453, 559, 560, 561, 562, 563, 564, 565, 567, 644, 647, 699, 700, 702, 1053, 1057, 1094, 1097], "gauss": [61, 62, 109, 110, 453, 559, 560, 561, 562, 563], "328": [61, 62, 453, 559, 560, 562, 754, 758], "677": [61, 62, 453, 559, 560, 562], "842": [61, 62, 453, 559, 560, 562, 754, 758], "exp": [61, 62, 109, 110, 453, 568, 569, 572, 644, 647, 922, 1038, 1044, 1555, 1642, 1645, 1969], "expm1": [61, 62, 109, 110, 148, 453, 573], "244": [61, 62, 569, 570, 854, 857, 1038, 1042], "918": [61, 62, 569, 570], "48": [61, 62, 63, 109, 110, 111, 112, 113, 114, 115, 128, 129, 196, 204, 207, 453, 464, 466, 467, 468, 569, 570, 739, 742, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 854, 855, 856, 857, 858, 1038, 1040, 1041, 1042, 1046, 1047, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1258, 1347, 1350, 1351, 1451, 1453, 1455, 1456, 1463, 1465, 1466, 1555, 1627, 1630, 1796, 1798, 1832, 1834, 1837, 1841, 1911, 1922, 1925], "147": [61, 62, 453, 569, 570, 572], "floor": [61, 62, 109, 110, 157, 453, 519, 522, 578, 1969], "floor_divid": [61, 62, 109, 110, 453, 583, 2116, 2121], "isfinit": [61, 62, 109, 110, 158, 453, 598], "out_i": [61, 62, 109, 110, 453, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "self_i": [61, 62, 109, 110, 594, 595, 596, 599, 600, 601, 604, 605, 606, 609, 610, 611], "finit": [61, 62, 63, 109, 110, 111, 453, 469, 472, 489, 492, 594, 595, 596, 597, 598, 699, 702, 714, 717, 891, 909, 1135, 1136, 1137, 1138, 1139], "isinf": [61, 62, 109, 110, 453, 603], "detect_posit": [61, 62, 109, 110, 453, 599, 600, 601, 602, 603], "detect_neg": [61, 62, 109, 110, 453, 599, 600, 601, 602, 603], "neg": [61, 62, 63, 72, 73, 76, 77, 80, 81, 90, 91, 95, 96, 109, 110, 111, 120, 121, 124, 125, 128, 129, 138, 139, 146, 155, 157, 196, 204, 206, 207, 208, 237, 239, 240, 258, 259, 453, 594, 597, 599, 600, 601, 602, 603, 688, 699, 702, 714, 717, 844, 849, 850, 860, 863, 891, 905, 909, 1015, 1016, 1017, 1018, 1019, 1053, 1054, 1135, 1136, 1137, 1138, 1139, 1219, 1222, 1223, 1226, 1555, 1571, 1574, 1652, 1656, 1670, 1671, 1672, 1673, 1680, 1684, 1685, 1686, 1688, 1689, 1711, 1717, 1718, 1720, 1727, 1730, 1732, 1733, 1734, 1735, 1736, 1752, 1753, 1754, 1755, 1756, 1821, 1832, 1833, 1834, 1835, 1836, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 2072, 2081, 2090, 2092], "isnan": [61, 62, 109, 110, 453, 608], "isreal": [61, 62, 109, 110, 453, 613], "1j": [61, 62, 63, 109, 110, 609, 610, 611, 784, 785, 787, 891, 893, 1258, 1407, 1410], "5j": [61, 62, 109, 110, 453, 609, 610, 612, 613], "6j": [61, 62, 453, 609, 610, 612], "61": [61, 62, 63, 109, 110, 111, 114, 115, 122, 123, 128, 129, 453, 479, 481, 624, 625, 627, 634, 637, 638, 744, 745, 747, 854, 855, 856, 857, 858, 1038, 1042, 1451, 1453, 1455, 1456, 1489, 1523, 1526, 1695, 1696, 1698, 1699, 1700, 1706, 1708, 1710, 1837, 1839], "log10": [61, 62, 109, 110, 453, 633], "logarithm": [61, 62, 109, 110, 453, 564, 567, 624, 627, 629, 630, 631, 632, 633, 634, 637, 639, 640, 641, 642, 643, 644, 647, 1555, 1642, 1645], "602": [61, 62, 453, 629, 630, 632], "699": [61, 62, 453, 629, 630, 632], "log1p": [61, 62, 109, 110, 453, 638], "693": [61, 62, 109, 110, 196, 224, 227, 453, 479, 482, 634, 635, 637, 638, 1695, 1706, 1709], "001": [61, 62, 63, 78, 79, 111, 167, 168, 323, 363, 366, 634, 635, 1005, 1006, 1007, 1009, 1816, 1817, 1818, 1820], "0953": [61, 62, 109, 110, 453, 624, 626, 627, 628, 634, 635], "log2": [61, 62, 109, 110, 453, 643, 891, 908, 1059, 1062], "logaddexp": [61, 62, 109, 110, 453], "logical_and": [61, 62, 109, 110, 158, 162, 453, 653, 1969, 1988], "logical_not": [61, 62, 109, 110, 148, 453, 658, 1969], "logical_or": [61, 62, 109, 110, 453, 663, 1969, 1988], "conform": [61, 62, 72, 73, 109, 110, 151, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 282, 285, 297, 298, 300, 303, 305, 309, 310, 314, 315, 317, 318, 322, 323, 345, 348, 363, 366, 374, 377, 403, 406, 453, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 549, 552, 554, 557, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 619, 622, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 660, 661, 662, 664, 667, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 860, 863, 886, 889, 928, 931, 1053, 1054, 1055, 1071, 1078, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1588, 1590, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1680, 1684, 1685, 1689, 1711, 1717, 1720, 1727, 1730, 1732, 1735, 1737, 1740, 1747, 1750, 1752, 1755, 1762, 1765, 1767, 1770, 1848, 1849, 1852, 1854, 1857, 1864, 1867, 1869, 1873, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1899, 1906, 1909, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1938, 1941, 1943, 1946, 1947, 1951, 1952, 1956, 1957, 1958, 1961, 1963, 1966], "org": [61, 62, 109, 110, 114, 115, 151, 323, 345, 348, 453, 594, 597, 659, 660, 661, 719, 722, 844, 849, 850, 886, 889, 928, 931, 1053, 1055, 1071, 1078, 1219, 1222, 1223, 1226, 1451, 1453, 1456, 1457, 1460, 1555, 1587, 1588, 1642, 1645, 1690, 1694, 1911, 1943, 1946, 2019, 2021], "api_specif": [61, 62, 109, 110, 151, 323, 345, 348, 453, 594, 597, 659, 660, 661, 719, 722, 928, 931, 1071, 1078, 1911, 1943, 1946], "elementwise_funct": [61, 62, 109, 110, 151, 453, 594, 597, 659, 660, 661, 719, 722], "logical_xor": [61, 62, 109, 110, 453, 668], "use_wher": [61, 62, 109, 110, 453, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "formula": [61, 62, 109, 110, 453, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "clip": [61, 62, 76, 77, 109, 110, 112, 113, 124, 125, 146, 155, 157, 167, 169, 453, 669, 670, 671, 672, 673, 674, 675, 677, 1258, 1275, 1277, 1278, 1279, 1280, 1283, 1711, 1716, 1969], "minimum": [61, 62, 64, 65, 76, 77, 82, 83, 88, 89, 109, 110, 112, 113, 124, 125, 130, 131, 136, 137, 453, 454, 457, 678, 891, 899, 943, 946, 1071, 1088, 1161, 1164, 1258, 1329, 1330, 1398, 1399, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1711, 1712, 1713, 1714, 1715, 1716, 1848, 1854, 1855, 1856, 1857, 1858, 1911, 1926, 1929, 1934, 1935, 1936, 1937, 1969, 1978, 1984, 1988, 2072, 2075, 2076, 2080, 2081, 2090, 2091, 2092, 2095, 2100, 2101, 2102, 2103, 2116, 2121], "exce": [61, 62, 63, 111, 453, 674, 675, 677, 1071, 1091, 1211, 1212, 1213, 1214, 1215], "30": [61, 62, 63, 94, 99, 100, 111, 112, 113, 128, 129, 136, 137, 453, 679, 680, 682, 854, 857, 891, 903, 968, 969, 970, 971, 1038, 1042, 1155, 1157, 1159, 1227, 1228, 1230, 1258, 1300, 1302, 1304, 1320, 1322, 1323, 1324, 1347, 1350, 1351, 1352, 1355, 1356, 1391, 1393, 1394, 1395, 1401, 1407, 1410, 1411, 1555, 1597, 1600, 1627, 1630, 1796, 1806, 1827, 1829, 1832, 1834, 1836, 1911, 1917, 1919, 1922, 1925, 1938, 1941, 1997, 2004, 2090, 2096], "56": [61, 62, 63, 70, 71, 80, 81, 109, 110, 111, 150, 237, 277, 280, 453, 679, 680, 682, 739, 742, 754, 755, 756, 757, 758, 764, 768, 854, 855, 856, 857, 858, 1038, 1042, 1451, 1453, 1456, 1489, 1515, 1518, 1535, 1536, 1555, 1627, 1630, 1657, 1661, 1832, 1833, 1911, 1922, 1925], "expon": [61, 62, 63, 64, 65, 111, 112, 113, 453, 699, 700, 702, 891, 899, 943, 944, 945, 946, 947, 1258, 1412, 1413, 1414, 1415, 1416, 1555, 1612, 1615], "rad2deg": [61, 62, 109, 110, 453, 708], "286": [61, 62, 111, 704, 705, 854, 858], "458": [61, 62, 704, 705], "573": [61, 62, 453, 704, 705, 707], "reciproc": [61, 62, 109, 110, 453, 713], "remaind": [61, 62, 63, 76, 77, 97, 98, 109, 110, 111, 124, 125, 143, 157, 453, 718, 891, 901, 953, 954, 955, 956, 957, 1711, 1757, 1758, 1759, 1760, 1761], "modulu": [61, 62, 109, 110, 157, 453, 714, 715, 716, 717, 718], "x2_i": [61, 62, 109, 110, 143, 453, 469, 472, 489, 492, 499, 502, 509, 512, 514, 517, 519, 522, 524, 527, 549, 552, 554, 557, 579, 582, 584, 587, 589, 592, 614, 617, 619, 622, 644, 647, 649, 652, 659, 662, 664, 667, 679, 682, 689, 692, 699, 702, 714, 715, 716, 717, 718, 749, 753], "94": [61, 62, 66, 67, 80, 81, 109, 110, 114, 115, 128, 129, 418, 438, 479, 483, 719, 720, 724, 725, 854, 857, 1038, 1042, 1451, 1463, 1464, 1465, 1466, 1837, 1838, 1839], "256": [61, 62, 719, 720, 724, 725, 1489, 1515, 1518], "0001": [61, 62, 719, 720, 724, 725, 2025, 2026, 2027, 2028, 2030, 2072, 2076, 2080, 2081, 2100, 2101, 2103], "45": [61, 62, 63, 88, 89, 94, 99, 100, 109, 110, 111, 114, 115, 128, 129, 453, 489, 491, 492, 493, 549, 551, 552, 553, 719, 720, 724, 725, 784, 785, 787, 814, 816, 854, 857, 891, 893, 911, 1038, 1042, 1109, 1111, 1113, 1155, 1156, 1157, 1158, 1159, 1451, 1453, 1456, 1468, 1470, 1471, 1555, 1627, 1630, 1711, 1757, 1760, 1832, 1834, 1837, 1839, 1911, 1922, 1923, 1925], "678": [61, 62, 719, 720, 724, 725], "33": [61, 62, 80, 81, 88, 89, 109, 110, 112, 113, 114, 115, 118, 119, 453, 479, 481, 484, 487, 519, 522, 719, 720, 809, 812, 1038, 1040, 1258, 1280, 1282, 1407, 1410, 1451, 1463, 1465, 1466, 1489, 1528, 1531, 1535, 1537, 1538, 1539, 1555, 1627, 1630, 1796, 1815, 1827, 1828, 1911, 1922, 1925, 1952, 1954, 2072, 2076, 2080, 2081, 2100, 2101, 2102, 2103], "sin": [61, 62, 64, 65, 109, 110, 144, 164, 453, 733, 1258, 1308, 1309, 1311, 1969], "841": [61, 62, 109, 110, 196, 198, 201, 453, 729, 730, 731, 732, 733], "909": [61, 62, 109, 110, 112, 113, 453, 729, 730, 731, 732, 733, 1407, 1411], "141": [61, 62, 109, 110, 323, 330, 333, 453, 729, 730, 731, 732, 733], "sinh": [61, 62, 109, 110, 453, 738, 1969], "63": [61, 62, 95, 96, 109, 110, 120, 121, 229, 231, 233, 453, 704, 707, 734, 735, 736, 737, 738, 739, 742, 854, 857, 1038, 1042, 1555, 1556, 1558, 1559, 1560, 1627, 1630, 1796, 1798, 1911, 1922, 1925], "232": [61, 62, 109, 110, 453, 734, 735, 736, 737, 738], "sqrt": [61, 62, 109, 110, 453, 743, 922, 1038, 1044, 1685, 1686, 1688, 1997, 2000, 2002, 2004], "squar": [61, 62, 72, 73, 109, 110, 120, 121, 453, 739, 740, 741, 742, 743, 748, 1053, 1057, 1094, 1097, 1451, 1462, 1467, 1487, 1555, 1556, 1557, 1558, 1559, 1560, 1566, 1569, 1571, 1574, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591, 1597, 1599, 1600, 1612, 1615, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1652, 1656, 1675, 1676, 1677, 1678, 1679, 1796, 1803], "73": [61, 62, 120, 121, 160, 739, 740, 1555, 1556, 1558, 1559, 1560, 1821, 1832, 1835], "44": [61, 62, 63, 80, 81, 109, 110, 111, 128, 129, 453, 479, 482, 679, 681, 719, 722, 739, 742, 744, 745, 747, 814, 815, 816, 817, 834, 837, 854, 856, 858, 891, 894, 1038, 1041, 1109, 1111, 1113, 1258, 1274, 1489, 1528, 1531, 1555, 1627, 1630, 1796, 1805, 1827, 1829, 1831, 1832, 1833, 1834, 1848, 1869, 1873, 1911, 1922, 1925], "tan": [61, 62, 109, 110, 146, 151, 154, 155, 157, 158, 164, 453, 755, 1258, 1265, 1969], "tanh": [61, 62, 109, 110, 164, 453, 760, 1969], "762": [61, 62, 109, 110, 453, 759, 761, 762, 763], "964": [61, 62, 109, 110, 453, 759, 761, 762, 763], "trunc": [61, 62, 109, 110, 453, 765], "025": [61, 62, 453, 764, 766, 768], "trunc_divid": [61, 62, 109, 110, 453, 770], "elementwis": [62, 63, 78, 79, 110, 126, 127, 155, 161, 164, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 514, 517, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 557, 559, 562, 564, 567, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 607, 609, 612, 614, 617, 619, 622, 624, 627, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 662, 664, 667, 669, 672, 674, 677, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 704, 707, 709, 712, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 753, 754, 758, 759, 763, 764, 768, 769, 773, 777, 778, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 1064, 1065, 1067, 1555, 1675, 1679, 1816, 1817, 1818, 1819, 1820], "logit": [63, 74, 75, 111, 122, 123, 777, 824, 825, 826, 827, 1068, 1069, 1070, 1695, 1706, 1707, 1708, 1709, 1710], "ep": [63, 72, 73, 111, 120, 121, 323, 363, 366, 777, 778, 1064, 1065, 1066, 1067, 1068, 1555, 1617, 1618, 1619, 1620, 1621, 1632, 1635], "outpu": [63, 111, 777, 778, 1064, 1065, 1066, 1067, 1068], "clamp": [63, 111, 169, 777, 778, 1064, 1065, 1066, 1067, 1068], "19722438": [63, 111, 777, 778, 1064, 1065, 1066, 1067, 1068], "38629448": [63, 111, 777, 778, 1064, 1065, 1066, 1067, 1068], "38629436": [63, 111, 777, 778, 1064, 1065, 1066, 1067, 1068], "allclos": [63, 111, 783, 891], "rtol": [63, 72, 73, 111, 120, 121, 159, 779, 780, 781, 782, 783, 891, 892, 904, 1005, 1006, 1007, 1008, 1009, 1555, 1617, 1618, 1619, 1620, 1621, 1632, 1633, 1634, 1635, 1636, 2034, 2035, 2041, 2043, 2059, 2060, 2061, 2062], "1e": [63, 66, 67, 74, 75, 78, 79, 111, 114, 115, 122, 123, 126, 127, 146, 155, 157, 159, 168, 169, 323, 363, 366, 779, 780, 781, 782, 783, 824, 825, 826, 827, 891, 892, 904, 1005, 1006, 1007, 1008, 1009, 1069, 1070, 1258, 1329, 1330, 1398, 1399, 1407, 1410, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1476, 1479, 1555, 1652, 1656, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1816, 1817, 1818, 1819, 1820, 1969, 2023, 2024, 2025, 2026, 2027, 2028, 2030, 2034, 2035, 2041, 2043, 2056, 2059, 2060, 2061, 2062], "atol": [63, 72, 73, 111, 120, 121, 779, 780, 781, 782, 783, 891, 892, 904, 1005, 1006, 1007, 1008, 1009, 1555, 1617, 1618, 1619, 1620, 1621, 2034, 2035, 2041, 2043, 2059, 2060, 2061, 2062], "08": [63, 88, 89, 111, 128, 129, 453, 479, 482, 779, 780, 781, 782, 783, 891, 892, 904, 1005, 1006, 1007, 1008, 1009, 1489, 1550, 1553, 1832, 1834, 1837, 1839, 1952, 1954, 2034, 2035], "equal_nan": [63, 111, 779, 780, 781, 782, 783, 891, 892, 904, 1005, 1006, 1007, 1008, 1009], "toler": [63, 72, 73, 111, 120, 121, 143, 159, 779, 780, 781, 782, 783, 891, 892, 904, 1005, 1006, 1007, 1008, 1009, 1555, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1981, 2034, 2035, 2041, 2043, 2059, 2060, 2061, 2062], "compar": [63, 64, 65, 86, 87, 97, 98, 111, 112, 113, 134, 135, 145, 150, 152, 153, 159, 160, 167, 779, 780, 781, 782, 783, 891, 892, 904, 1005, 1006, 1007, 1008, 1009, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1268, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1977, 1979, 1981, 1987, 1988, 1995, 1996, 2043, 2059, 2060, 2061, 2062], "1e10": [63, 779, 780, 782, 891, 892, 904, 1005, 1008], "00001e10": [63, 779, 780, 782, 891, 892, 904, 1005, 1008], "00001e": [63, 779, 780, 782, 891, 892], "005": [63, 779, 780, 782, 891, 892, 904, 1005, 1008], "deg": [63, 111, 784, 785, 786, 787, 788, 891, 893], "2j": [63, 784, 785, 787, 891, 893, 922, 1038, 1044], "3j": [63, 109, 110, 453, 609, 611, 612, 613, 784, 785, 787, 891, 893], "35619449": [63, 784, 785, 787, 891, 893], "78539816": [63, 784, 785, 787, 891, 893], "135": [63, 784, 785, 787, 891, 893, 1258, 1275, 1278], "copysign": [63, 111, 838, 891], "unsign": [63, 111, 148, 159, 164, 834, 835, 836, 837, 838, 891, 894, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951, 2086, 2089], "count_nonzero": [63, 111, 843, 891], "keepdim": [63, 72, 73, 76, 77, 82, 83, 88, 89, 90, 91, 97, 98, 111, 120, 121, 124, 125, 130, 131, 136, 137, 138, 139, 152, 158, 164, 839, 840, 841, 842, 843, 891, 895, 910, 1114, 1115, 1116, 1117, 1118, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1166, 1167, 1168, 1169, 1170, 1201, 1202, 1203, 1204, 1555, 1607, 1608, 1609, 1610, 1611, 1685, 1686, 1687, 1688, 1689, 1711, 1782, 1783, 1784, 1785, 1786, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1911, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967], "count": [63, 76, 77, 84, 85, 90, 91, 111, 124, 125, 132, 133, 138, 139, 146, 150, 167, 418, 437, 839, 840, 841, 842, 843, 891, 895, 1555, 1680, 1684, 1711, 1717, 1718, 1720, 1732, 1733, 1734, 1735, 1736, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967], "flatten": [63, 64, 65, 76, 77, 82, 83, 84, 85, 111, 112, 113, 120, 121, 124, 125, 130, 131, 132, 133, 162, 839, 840, 841, 842, 843, 860, 863, 891, 895, 910, 932, 1053, 1054, 1071, 1114, 1115, 1116, 1117, 1118, 1120, 1122, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1166, 1167, 1168, 1169, 1170, 1201, 1202, 1203, 1204, 1258, 1308, 1309, 1310, 1311, 1312, 1555, 1592, 1595, 1627, 1630, 1685, 1686, 1688, 1689, 1711, 1717, 1718, 1720, 1742, 1745, 1752, 1753, 1754, 1755, 1756, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1894, 1995, 1996, 2034, 2041, 2043, 2052, 2054, 2061, 2062], "diff": [63, 97, 98, 111, 150, 157, 869, 891], "th": [63, 111, 860, 863, 865, 866, 867, 868, 869, 891, 896, 1053, 1054, 1166, 1169, 1201, 1204], "discret": [63, 111, 854, 857, 865, 866, 867, 868, 869, 891, 896, 922, 1038, 1042, 1044, 1695, 1701, 1704], "static_diff": [63, 111, 865, 866, 867], "exp2": [63, 111, 891, 921], "nearest": [63, 111, 453, 469, 472, 719, 722, 891, 898, 923, 924, 926, 1166, 1167, 1168, 1169, 1170, 1201, 1204], "float_pow": [63, 111, 891, 947], "125": [63, 72, 73, 120, 121, 453, 519, 522, 891, 899, 943, 944, 946, 1555, 1675, 1676, 1677, 1678, 1679], "fmax": [63, 111, 891, 952], "fmod": [63, 111, 891, 957], "divis": [63, 64, 65, 66, 67, 111, 112, 113, 114, 115, 155, 453, 519, 522, 549, 552, 579, 582, 714, 717, 769, 773, 876, 877, 878, 879, 880, 891, 901, 953, 954, 955, 956, 957, 987, 988, 989, 990, 991, 1071, 1076, 1082, 1092, 1237, 1238, 1239, 1240, 1241, 1258, 1330, 1399, 1407, 1408, 1409, 1410, 1411, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1489, 1520, 2025, 2026, 2027], "gcd": [63, 111, 891, 965], "gradient": [63, 67, 111, 115, 161, 167, 168, 180, 181, 418, 443, 891, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1792, 1793, 1794, 1795, 1969, 1981, 2019, 2020, 2025, 2026, 2027, 2028, 2029, 2030, 2043, 2061, 2062], "edge_ord": [63, 111, 891, 903, 968, 969, 970, 971, 972], "w": [63, 66, 67, 70, 71, 97, 98, 109, 110, 111, 112, 113, 114, 115, 118, 119, 164, 167, 168, 649, 651, 653, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 886, 889, 891, 903, 968, 969, 970, 971, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1053, 1055, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1258, 1300, 1302, 1303, 1304, 1407, 1410, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1535, 1536, 1537, 1538, 1539, 1796, 1803], "outcom": [63, 111, 891, 903, 968, 969, 970, 971], "scale": [63, 70, 71, 111, 114, 115, 118, 119, 418, 441, 442, 875, 891, 903, 968, 969, 970, 971, 1033, 1036, 1038, 1043, 1053, 1056, 1451, 1472, 1474, 1475, 1489, 1528, 1529, 1530, 1531, 1532, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1981, 1983, 1997, 2005, 2007, 2015, 2018, 2025, 2028, 2072, 2080, 2090, 2091, 2100, 2101, 2102, 2103], "frist": [63, 111, 891, 903, 968, 969, 970, 971], "estim": [63, 111, 891, 903, 968, 969, 970, 971], "boundari": [63, 80, 81, 111, 128, 129, 891, 903, 968, 969, 970, 971, 1821, 1837, 1838, 1839, 1840, 1841, 1981], "diment": [63, 891, 903, 968, 969, 971], "40": [63, 64, 65, 94, 99, 100, 111, 112, 113, 128, 129, 136, 137, 147, 453, 519, 522, 539, 542, 739, 742, 809, 810, 854, 855, 856, 857, 858, 891, 903, 968, 969, 970, 971, 1038, 1042, 1046, 1048, 1050, 1052, 1104, 1105, 1107, 1258, 1300, 1302, 1304, 1320, 1322, 1323, 1324, 1391, 1392, 1393, 1394, 1395, 1407, 1410, 1411, 1450, 1555, 1597, 1600, 1627, 1630, 1796, 1806, 1832, 1834, 1911, 1922, 1925, 1938, 1940, 1942], "72": [63, 80, 81, 111, 114, 115, 453, 564, 567, 569, 572, 854, 857, 891, 903, 968, 969, 970, 971, 1038, 1042, 1451, 1463, 1465, 1466, 1555, 1627, 1630, 1832, 1833, 1911, 1922, 1925], "33333333": [63, 111, 891, 903, 968, 969, 970, 971], "isclos": [63, 111, 143, 891, 1009], "hold": [63, 64, 65, 72, 73, 88, 89, 111, 120, 121, 136, 137, 167, 779, 781, 783, 891, 910, 1005, 1006, 1007, 1009, 1145, 1146, 1147, 1148, 1149, 1258, 1386, 1387, 1389, 1391, 1394, 1555, 1607, 1608, 1609, 1610, 1611, 1911, 1917, 1918, 1919, 1920, 1921, 1982, 2064], "isneginf": [63, 111, 891, 1019], "isposinf": [63, 111, 891, 1024], "lcm": [63, 111, 891, 1052], "60": [63, 88, 89, 111, 112, 113, 128, 129, 136, 137, 784, 786, 788, 891, 907, 1048, 1049, 1050, 1051, 1052, 1258, 1320, 1322, 1352, 1355, 1356, 1391, 1393, 1395, 1407, 1410, 1450, 1555, 1627, 1630, 1796, 1800, 1827, 1829, 1911, 1912, 1915, 1922, 1925, 1938, 1939, 1940, 1941, 1942], "logaddexp2": [63, 111, 891, 1063], "169925": [63, 111, 891, 908, 1059, 1060, 1061, 1062, 1063], "nan_to_num": [63, 111, 891, 1139], "posinf": [63, 111, 891, 909, 1135, 1136, 1137, 1138, 1139], "neginf": [63, 111, 891, 909, 1135, 1136, 1137, 1138, 1139], "small": [63, 72, 73, 78, 79, 111, 120, 121, 126, 127, 147, 150, 155, 159, 162, 164, 168, 181, 779, 782, 891, 892, 904, 909, 1005, 1008, 1135, 1136, 1137, 1138, 1139, 1555, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1642, 1645, 1816, 1817, 1818, 1819, 1820, 1982, 1997, 2001, 2023, 2024], "5e": [63, 66, 67, 111, 891, 909, 1135, 1136, 1137, 1138, 1139, 1155, 1157, 1159, 1451, 1468, 1469, 1471], "nansum": [63, 111, 891, 1149], "accumul": [63, 111, 891, 910, 1145, 1146, 1147, 1148, 1149], "By": [63, 88, 89, 90, 91, 111, 136, 137, 138, 139, 148, 150, 155, 157, 158, 164, 168, 169, 844, 851, 891, 910, 968, 970, 1145, 1146, 1147, 1148, 1149, 1233, 1236, 1555, 1680, 1684, 1711, 1742, 1745, 1911, 1912, 1915, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967], "reduc": [63, 64, 65, 72, 73, 82, 83, 88, 89, 90, 91, 97, 98, 111, 112, 113, 120, 121, 130, 131, 136, 137, 138, 139, 152, 158, 162, 164, 166, 418, 443, 891, 910, 1114, 1115, 1116, 1117, 1118, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1166, 1167, 1168, 1169, 1170, 1201, 1202, 1203, 1204, 1258, 1295, 1296, 1297, 1298, 1299, 1555, 1637, 1638, 1639, 1640, 1641, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1911, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1979, 1983, 1984, 1985], "nextaft": [63, 111, 891, 1159], "represent": [63, 64, 65, 94, 97, 98, 99, 100, 111, 112, 113, 180, 236, 323, 328, 329, 363, 366, 374, 377, 418, 421, 422, 453, 454, 457, 469, 472, 499, 502, 514, 517, 524, 527, 664, 667, 891, 911, 915, 1155, 1156, 1157, 1158, 1159, 1247, 1248, 1249, 1250, 1251, 1258, 1264, 1423, 1424, 1425, 1426, 1979, 1980, 1982, 1986, 1987, 2072, 2076, 2080, 2081, 2090, 2091, 2100, 2101, 2103], "0e": [63, 66, 67, 111, 114, 115, 891, 911, 1155, 1156, 1157, 1158, 1159, 1451, 1468, 1469, 1470, 1471], "50": [63, 88, 89, 109, 110, 111, 112, 113, 166, 453, 544, 546, 547, 548, 704, 706, 707, 708, 891, 911, 1033, 1035, 1037, 1155, 1156, 1157, 1158, 1159, 1258, 1300, 1302, 1304, 1320, 1322, 1323, 1324, 1347, 1350, 1351, 1352, 1355, 1356, 1391, 1393, 1394, 1395, 1407, 1410, 1411, 1555, 1597, 1600, 1627, 1630, 1796, 1798, 1800, 1848, 1864, 1867, 1911, 1922, 1923, 1925, 2072, 2076, 2080, 2081, 2100, 2101, 2102, 2103], "4013e": [63, 111, 891, 911, 1155, 1156, 1157, 1158, 1159], "4028e": [63, 111, 891, 911, 1155, 1156, 1157, 1158, 1159], "38": [63, 109, 110, 111, 128, 129, 150, 323, 363, 366, 453, 754, 755, 757, 758, 809, 812, 891, 911, 1038, 1040, 1047, 1109, 1110, 1112, 1155, 1156, 1157, 1158, 1159, 1555, 1612, 1615, 1837, 1841], "signbit": [63, 111, 891, 1186], "637": [63, 111, 891, 913, 1187, 1188, 1189, 1190], "212": [63, 70, 71, 111, 891, 913, 1187, 1188, 1189, 1190, 1191, 1535, 1536], "0909": [63, 111, 891, 913, 1187, 1188, 1189, 1190], "trapz": [63, 109, 110, 891], "dx": [63, 109, 110, 891, 914, 1216, 1217, 1218], "apart": [63, 109, 110, 891, 914, 1216, 1217, 1218], "trapezoid": [63, 109, 110, 891, 914, 1216, 1217, 1218], "xlogi": [63, 111, 891, 1248], "0986": [63, 111, 891, 915, 1247, 1248, 1249, 1250, 1251], "3863": [63, 111, 891, 915, 1247, 1248, 1249, 1250, 1251], "0000": [63, 111, 844, 845, 848, 891, 915, 974, 976, 978, 979, 981, 982, 983, 985, 1029, 1031, 1053, 1057, 1071, 1081, 1094, 1095, 1096, 1097, 1247, 1248, 1249, 1250, 1251], "zeta": [63, 111, 891, 1253], "0369": [63, 111, 891, 916, 1252, 1253, 1254, 1255, 1256], "2021": [63, 111, 891, 916, 1252, 1253, 1254, 1255, 1256, 1969], "isin": [63, 111, 966, 1014], "test_el": [63, 111, 966, 967, 1010, 1011, 1012, 1013, 1014], "assume_uniqu": [63, 111, 966, 967, 1010, 1011, 1012, 1013, 1014], "invert": [63, 111, 453, 504, 507, 966, 967, 1010, 1011, 1012, 1013, 1014, 1555, 1612, 1615], "avg_pool1d": [63, 111, 808, 1038], "kernel": [63, 70, 71, 111, 118, 119, 162, 164, 181, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1489, 1540, 1541, 1542, 1543, 1544, 1981, 1984, 1985], "stride": [63, 70, 71, 111, 118, 119, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1534, 1981, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014], "pad": [63, 70, 71, 111, 118, 119, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 854, 855, 856, 857, 858, 922, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1071, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1165, 1258, 1308, 1311, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1534, 1711, 1722, 1725, 1787, 1791, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014], "data_format": [63, 70, 71, 111, 118, 119, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 875, 1038, 1039, 1040, 1041, 1043, 1045, 1046, 1047, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1533, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014], "nwc": [63, 70, 71, 111, 118, 119, 804, 805, 806, 807, 808, 875, 1038, 1039, 1043, 1045, 1099, 1100, 1101, 1102, 1103, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 2007, 2008, 2009], "batch_siz": [63, 70, 71, 80, 81, 111, 118, 119, 128, 129, 167, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1821, 1822, 1823, 1824, 1825, 1826], "d_in": [63, 70, 71, 111, 118, 119, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 922, 1038, 1039, 1040, 1041, 1044, 1045, 1046, 1047, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527], "slide": [63, 70, 71, 111, 118, 119, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014], "algorithm": [63, 70, 71, 95, 96, 111, 118, 119, 148, 158, 162, 181, 198, 200, 202, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1555, 1642, 1645, 1981, 1983, 1985, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014], "ncw": [63, 70, 71, 111, 118, 119, 804, 805, 806, 807, 808, 875, 1038, 1039, 1043, 1045, 1099, 1100, 1101, 1102, 1103, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 2007, 2008, 2009], "pool": [63, 111, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113], "reshap": [63, 72, 73, 76, 77, 97, 98, 111, 118, 119, 120, 121, 124, 125, 157, 158, 160, 162, 164, 166, 169, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 928, 929, 930, 931, 932, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1053, 1058, 1071, 1078, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1130, 1131, 1132, 1133, 1134, 1258, 1450, 1489, 1501, 1503, 1504, 1505, 1510, 1513, 1523, 1526, 1555, 1607, 1608, 1609, 1610, 1611, 1711, 1751, 1969, 1975, 1976], "avg_pool2d": [63, 111, 813, 1038], "nhwc": [63, 70, 71, 111, 118, 119, 809, 810, 811, 812, 813, 1038, 1040, 1046, 1104, 1105, 1106, 1107, 1108, 1489, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1523, 1524, 1525, 1526, 1527, 2007, 2010, 2011, 2014], "h": [63, 70, 71, 111, 112, 113, 118, 119, 142, 146, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1038, 1040, 1041, 1046, 1047, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1258, 1300, 1302, 1303, 1304, 1489, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1796, 1800, 1804, 1806, 1814, 1977], "nchw": [63, 70, 71, 111, 118, 119, 809, 810, 811, 812, 813, 1038, 1040, 1046, 1104, 1105, 1106, 1107, 1108, 1489, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1523, 1524, 1525, 1526, 1527, 2007, 2010, 2011, 2014], "max_pool2d": [63, 111, 809, 810, 1038, 1108], "46": [63, 80, 81, 111, 118, 119, 128, 129, 237, 277, 280, 453, 634, 637, 724, 727, 809, 810, 814, 816, 844, 845, 974, 975, 976, 977, 1038, 1046, 1047, 1104, 1105, 1107, 1109, 1110, 1111, 1112, 1113, 1535, 1537, 1539, 1796, 1798, 1827, 1828, 1832, 1834], "avg_pool3d": [63, 111, 818, 1038], "ndhwc": [63, 70, 71, 111, 118, 119, 814, 815, 816, 817, 818, 1038, 1041, 1047, 1109, 1110, 1111, 1112, 1113, 1489, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 2007, 2012, 2013], "convolut": [63, 70, 71, 111, 118, 119, 814, 815, 816, 817, 818, 1038, 1041, 1047, 1109, 1110, 1111, 1112, 1113, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1979, 1981, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014], "ncdhw": [63, 70, 71, 111, 118, 119, 814, 815, 816, 817, 818, 1038, 1041, 1047, 1109, 1110, 1111, 1112, 1113, 1489, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 2007, 2012, 2013], "43": [63, 94, 99, 100, 128, 129, 453, 519, 522, 814, 815, 817, 1038, 1041, 1821, 1832, 1834, 1835, 1837, 1839, 1840, 1848, 1869, 1873], "dct": [63, 111, 167, 858, 1038], "norm": [63, 64, 65, 72, 73, 79, 111, 112, 113, 120, 121, 127, 161, 854, 855, 856, 857, 858, 922, 1038, 1042, 1044, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1357, 1359, 1361, 1555, 1607, 1608, 1609, 1610, 1611, 1685, 1686, 1688, 1689, 1817, 1818, 1819, 1820, 1969, 2024, 2025, 2027], "signal": [63, 111, 854, 855, 856, 857, 858, 1038, 1042, 1980, 1981], "liter": [63, 72, 73, 111, 120, 121, 153, 854, 855, 856, 857, 858, 1038, 1042, 1071, 1088, 1161, 1164, 1555, 1607, 1608, 1609, 1610, 1611, 1685, 1686, 1688, 1689], "lenght": [63, 111, 854, 855, 856, 857, 858, 974, 975, 977, 1025, 1026, 1028, 1029, 1030, 1032, 1038, 1042, 1233, 1234, 1235], "transform": [63, 70, 71, 111, 118, 119, 160, 169, 180, 854, 855, 856, 857, 858, 922, 1038, 1042, 1044, 1489, 1535, 1536, 1537, 1538, 1539, 1968, 1979, 1981, 1982, 1983, 2072, 2076, 2080, 2081, 2100, 2101, 2102, 2103], "truncat": [63, 111, 152, 167, 854, 855, 856, 857, 858, 922, 1038, 1042, 1044, 1258, 1397, 1995, 1996], "larger": [63, 76, 77, 88, 89, 111, 124, 125, 136, 137, 160, 323, 363, 366, 854, 855, 856, 857, 858, 1038, 1042, 1711, 1712, 1715, 1752, 1753, 1754, 1755, 1756, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 1988], "ortho": [63, 111, 854, 855, 856, 857, 858, 922, 1038, 1042, 1044], "102": [63, 111, 128, 129, 854, 855, 856, 857, 858, 1038, 1042, 1827, 1829], "406": [63, 111, 854, 855, 856, 857, 858, 1038, 1042, 1258, 1275, 1278], "max_pool1d": [63, 111, 1038, 1103], "max_pool3d": [63, 111, 814, 816, 1038, 1113], "diagflat": [63, 111, 1033, 1034, 1053, 1094, 1096], "offset": [63, 72, 73, 111, 120, 121, 860, 861, 862, 863, 864, 1053, 1054, 1555, 1576, 1577, 1578, 1579, 1580, 1670, 1671, 1672, 1673, 1674], "padding_valu": [63, 111, 860, 861, 862, 863, 864, 1053, 1054], "right_left": [63, 111, 860, 861, 862, 863, 864, 1053, 1054], "num_row": [63, 111, 860, 861, 862, 863, 864, 1053, 1054], "num_col": [63, 111, 860, 861, 862, 863, 864, 1053, 1054], "eig": [63, 72, 73, 111, 890, 1053, 1555, 1582, 1585, 1587, 1590], "37228132": [63, 886, 889, 1053, 1055], "82456484": [63, 886, 889, 1053, 1055], "41597356": [63, 886, 889, 1053, 1055], "56576746": [63, 886, 889, 1053, 1055], "90937671": [63, 886, 889, 1053, 1055], "kron": [63, 111, 1037, 1053, 1094, 1095, 1988], "matrix_exp": [63, 111, 1053], "7183": [63, 111, 1053, 1057, 1094, 1095, 1096, 1097], "3891": [63, 111, 1053, 1057, 1094, 1095, 1096, 1097], "multi_dot": [63, 111, 1053, 1134], "49": [63, 80, 81, 111, 120, 121, 453, 739, 742, 854, 857, 1038, 1042, 1053, 1058, 1130, 1131, 1132, 1133, 1134, 1675, 1676, 1678, 1832, 1833, 1911, 1922, 1925], "148": [63, 111, 1053, 1058, 1130, 1131, 1132, 1133, 1134], "atleast_1d": [63, 111, 793, 1071], "ari": [63, 111, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 876, 877, 878, 879, 880, 987, 988, 989, 990, 991, 1071, 1072, 1073, 1074, 1076, 1082, 1092, 1237, 1238, 1239, 1240, 1241], "a1": [63, 237, 258, 259, 789, 790, 794, 795, 799, 800], "a2": [63, 789, 790, 794, 795, 799, 800], "atleast_2d": [63, 111, 798, 1071], "atleast_3d": [63, 111, 803, 1071], "dsplit": [63, 111, 880, 1071], "indices_or_sect": [63, 111, 876, 877, 878, 879, 880, 987, 988, 989, 990, 991, 1071, 1076, 1082, 1092, 1237, 1238, 1239, 1240, 1241], "3rd": [63, 111, 876, 877, 878, 879, 880, 987, 990, 1071, 1076, 1082, 1092, 1237, 1239, 1241], "dstack": [63, 111, 885, 1071], "start_dim": [63, 111, 928, 929, 930, 931, 932, 1071, 1078], "end_dim": [63, 111, 928, 929, 930, 931, 932, 1071, 1078], "dim": [63, 97, 98, 103, 104, 111, 148, 152, 159, 162, 237, 292, 294, 295, 296, 922, 928, 929, 930, 931, 932, 1038, 1044, 1071, 1078, 1489, 1490, 1520, 1521, 1533, 2007, 2018, 2090, 2099], "fastest": [63, 76, 77, 111, 124, 125, 928, 929, 930, 931, 932, 1053, 1058, 1071, 1078, 1130, 1133, 1711, 1747, 1748, 1749, 1750, 1751], "slowest": [63, 76, 77, 111, 124, 125, 928, 929, 930, 931, 932, 1071, 1078, 1711, 1747, 1748, 1749, 1750, 1751], "fortran": [63, 76, 77, 111, 124, 125, 928, 929, 930, 931, 932, 1071, 1078, 1711, 1747, 1748, 1749, 1750, 1751, 1981, 1985], "memori": [63, 76, 77, 111, 124, 125, 147, 148, 149, 157, 158, 162, 164, 179, 181, 237, 282, 285, 418, 423, 438, 443, 449, 452, 928, 929, 930, 931, 932, 1071, 1078, 1489, 1540, 1543, 1711, 1747, 1748, 1749, 1750, 1751, 1969, 1981, 1983, 1984, 1985], "layout": [63, 76, 77, 111, 124, 125, 145, 158, 162, 928, 929, 930, 931, 932, 1071, 1078, 1711, 1747, 1748, 1749, 1750, 1751], "underli": [63, 76, 77, 111, 124, 125, 146, 162, 453, 499, 502, 514, 517, 524, 527, 664, 667, 928, 929, 930, 931, 932, 1071, 1078, 1555, 1642, 1645, 1711, 1747, 1748, 1749, 1750, 1751, 1981, 2019, 2021], "fliplr": [63, 111, 937, 1071], "flip": [63, 76, 77, 111, 124, 125, 158, 166, 167, 169, 453, 504, 507, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 1071, 1079, 1080, 1711, 1736, 1969], "diag": [63, 72, 73, 111, 120, 121, 164, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 1071, 1079, 1080, 1555], "flipud": [63, 111, 942, 1071], "heavisid": [63, 111, 986, 1071], "5000": [63, 982, 983, 985, 1071, 1081, 1555, 1597, 1600], "hsplit": [63, 111, 828, 831, 991, 1071], "horizont": [63, 111, 987, 988, 989, 990, 991, 1071, 1082], "hstack": [63, 111, 996, 1071], "vstack": [63, 111, 992, 993, 1071, 1243], "i0": [63, 111, 1001, 1071], "bessel": [63, 88, 89, 111, 136, 137, 844, 847, 876, 878, 987, 989, 997, 998, 999, 1000, 1001, 1025, 1026, 1027, 1028, 1071, 1084, 1237, 1240, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956], "26606588": [63, 111, 997, 998, 999, 1000, 1001, 1071, 1084], "2795853": [63, 111, 997, 998, 999, 1000, 1001, 1071, 1084], "88079259": [63, 111, 997, 998, 999, 1000, 1001, 1071, 1084], "moveaxi": [63, 111, 1071, 1124], "destin": [63, 111, 1071, 1085, 1120, 1121, 1122, 1123, 1124], "unstack": [63, 76, 77, 97, 98, 124, 125, 146, 164, 167, 1120, 1121, 1711, 1783, 1969, 1988], "reorder": [63, 76, 77, 111, 124, 125, 1071, 1085, 1120, 1121, 1122, 1123, 1124, 1711, 1732, 1733, 1734, 1735, 1736], "pad_width": [63, 76, 77, 111, 124, 125, 1071, 1088, 1161, 1162, 1163, 1164, 1165, 1711, 1722, 1723, 1724, 1725, 1726, 1787, 1788, 1789, 1790, 1791], "constant": [63, 78, 79, 111, 126, 127, 155, 159, 161, 168, 169, 181, 1071, 1088, 1161, 1162, 1163, 1164, 1165, 1711, 1722, 1725, 1796, 1803, 1816, 1817, 1818, 1819, 1820, 1997, 2003, 2006, 2019, 2020, 2023, 2024], "stat_length": [63, 111, 1071, 1088, 1161, 1162, 1163, 1164, 1165], "constant_valu": [63, 111, 1071, 1088, 1161, 1162, 1163, 1164, 1165], "end_valu": [63, 111, 1071, 1088, 1161, 1162, 1163, 1164, 1165], "reflect_typ": [63, 111, 1071, 1088, 1161, 1162, 1163, 1164, 1165], "rot90": [63, 111, 1071, 1179], "rotat": [63, 111, 180, 1071, 1089, 1175, 1176, 1177, 1178, 1179], "plane": [63, 111, 1071, 1089, 1175, 1176, 1177, 1178, 1179], "take_along_axi": [63, 111, 1071, 1207], "arr": [63, 64, 65, 105, 106, 111, 148, 149, 323, 386, 388, 389, 390, 1071, 1090, 1206, 1207, 1208, 1209, 1210, 1391, 1392], "top_k": [63, 111, 1071, 1212], "largest": [63, 97, 98, 111, 180, 323, 363, 366, 374, 377, 1071, 1091, 1211, 1212, 1213, 1214, 1215, 1555, 1607, 1610, 1652, 1656], "retun": [63, 111, 1071, 1091, 1211, 1212, 1213, 1214, 1215], "smallest": [63, 97, 98, 111, 323, 363, 366, 374, 377, 453, 529, 532, 1071, 1091, 1211, 1212, 1213, 1214, 1215, 1555, 1607, 1610, 2072, 2076, 2080, 2081, 2090, 2091], "vsplit": [63, 111, 987, 990, 1071, 1082, 1238], "drawn": [63, 80, 81, 111, 128, 129, 160, 819, 820, 821, 822, 823, 870, 871, 872, 873, 874, 958, 959, 1171, 1172, 1173, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1997, 2005, 2072, 2080, 2081, 2086, 2087, 2088, 2090, 2092, 2095, 2098], "parameter": [63, 80, 81, 128, 129, 819, 820, 958, 959, 1821, 1822, 1823, 1824, 1826, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841], "dirichlet": [63, 111, 874, 1171], "shuffl": [63, 80, 81, 97, 98, 111, 128, 129, 870, 871, 872, 1821, 1847, 1969], "nativeshap": [63, 76, 77, 80, 81, 111, 124, 125, 128, 129, 237, 252, 266, 297, 298, 315, 317, 819, 821, 822, 823, 870, 871, 872, 873, 874, 1171, 1172, 1173, 1258, 1391, 1394, 1405, 1422, 1427, 1489, 1496, 1499, 1506, 1508, 1515, 1518, 1711, 1747, 1748, 1749, 1750, 1751, 1821, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841], "10598304": [63, 870, 871, 873, 1171, 1173], "21537054": [63, 870, 871, 873, 1171, 1173], "67864642": [63, 870, 871, 873, 1171, 1173], "48006698": [63, 870, 871, 873, 1171, 1173], "07472073": [63, 870, 871, 873, 1171, 1173], "44521229": [63, 870, 871, 873, 1171, 1173], "55479872": [63, 870, 871, 873, 1171, 1173], "05426367": [63, 870, 871, 873, 1171, 1173], "39093761": [63, 870, 871, 873, 1171, 1173], "19531053": [63, 870, 871, 873, 1171, 1173], "51675832": [63, 870, 871, 873, 1171, 1173], "28793114": [63, 870, 871, 873, 1171, 1173], "12315625": [63, 870, 871, 873, 1171, 1173], "29823365": [63, 870, 871, 873, 1171, 1173], "5786101": [63, 870, 871, 873, 1171, 1173], "15564976": [63, 870, 871, 873, 1171, 1173], "50542368": [63, 870, 871, 873, 1171, 1173], "33892656": [63, 870, 871, 873, 1171, 1173], "1325352": [63, 870, 871, 873, 1171, 1173], "44439589": [63, 870, 871, 873, 1171, 1173], "42306891": [63, 870, 871, 873, 1171, 1173], "gamma": [63, 78, 79, 126, 127, 1171, 1816, 1817, 1818, 1819, 1820], "msort": [63, 111, 1129, 1192], "randint": [63, 70, 71, 80, 81, 84, 85, 111, 118, 119, 128, 129, 148, 1125, 1126, 1127, 1128, 1129, 1192, 1193, 1523, 1524, 1525, 1527, 1821, 1831, 1874, 1875, 1877, 1879, 1969], "median": [63, 111, 158, 1071, 1088, 1118, 1161, 1164, 1201], "nanmean": [63, 111, 1144, 1201], "6666666666666665": [63, 111, 1140, 1141, 1142, 1143, 1144, 1201, 1203], "quantil": [63, 111, 1170, 1201], "interpol": [63, 111, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1981], "linear": [63, 64, 65, 70, 71, 95, 96, 111, 112, 113, 118, 119, 146, 151, 158, 160, 162, 164, 167, 168, 169, 196, 198, 201, 203, 204, 207, 214, 216, 217, 218, 229, 231, 232, 233, 1071, 1088, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1258, 1308, 1309, 1310, 1311, 1312, 1382, 1489, 1539, 1647, 1650, 1796, 1804, 1969, 1979, 1980, 1981, 1984, 1997, 2002, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2072, 2076, 2080, 2081, 2090, 2091, 2100, 2101, 2102, 2103], "higher": [63, 66, 67, 111, 163, 164, 169, 181, 789, 792, 794, 797, 799, 802, 1071, 1072, 1073, 1074, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1463, 1464, 1978, 1981, 1982, 1985, 1987, 1988, 1997, 2002], "midpoint": [63, 111, 1166, 1167, 1168, 1169, 1170, 1201, 1204], "fraction": [63, 111, 1166, 1167, 1168, 1169, 1170, 1201, 1204, 1489, 1528, 1531], "surround": [63, 111, 162, 1166, 1167, 1168, 1169, 1170, 1201, 1204], "whichev": [63, 111, 1166, 1167, 1168, 1169, 1170, 1201, 1204], "unravel_index": [63, 111, 1201, 1228], "unravel": [63, 111, 1201, 1205, 1227, 1228, 1229, 1230, 1231], "all_equ": [64, 65, 112, 113, 1258, 1263], "equality_matrix": [64, 65, 112, 113, 1258, 1259, 1260, 1261, 1262, 1263], "array_equ": [64, 65, 94, 99, 100, 1258], "assert_supports_inplac": [64, 65, 112, 113, 1258, 1273], "clip_matrix_norm": [64, 65, 112, 113, 1258, 1279], "max_norm": [64, 65, 112, 113, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284], "downscal": [64, 65, 112, 113, 1258, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1357, 1359, 1361], "894": [64, 65, 112, 113, 1258, 1275, 1276, 1278, 1279, 1280, 1281, 1283, 1284, 1816, 1817, 1820], "clip_vector_norm": [64, 65, 112, 113, 1258, 1284], "default_v": [64, 65, 1258, 1287, 1288, 1289], "catch_except": [64, 65, 1258, 1287, 1288, 1289], "rev": [64, 65, 1258, 1287, 1288, 1289], "with_cal": [64, 65, 1258, 1287, 1288, 1289], "catch": [64, 65, 160, 1258, 1287, 1288, 1289], "callabl": [64, 65, 112, 113, 146, 152, 158, 164, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 203, 234, 235, 237, 246, 247, 248, 323, 368, 369, 371, 372, 418, 431, 432, 443, 1071, 1088, 1161, 1164, 1258, 1264, 1274, 1287, 1288, 1289, 1295, 1296, 1297, 1298, 1299, 1313, 1314, 1382, 1438, 1450, 1489, 1545, 1548, 1792, 1793, 1794, 1795, 1796, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 2025, 2029, 2034, 2040, 2064, 2066], "einops_rearrang": [64, 65, 112, 113, 1258, 1294], "axes_length": [64, 65, 112, 113, 1258, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304], "arrang": [64, 65, 1258, 1290, 1291, 1293], "rearrang": [64, 65, 112, 113, 1258, 1290, 1291, 1292, 1293, 1294, 1300, 1301, 1302, 1303, 1304], "einops_reduc": [64, 65, 112, 113, 1258], "reduct": [64, 65, 74, 75, 90, 91, 97, 98, 111, 112, 113, 122, 123, 138, 139, 148, 160, 166, 824, 825, 826, 827, 1069, 1070, 1258, 1295, 1296, 1297, 1298, 1299, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969], "One": [64, 65, 76, 77, 80, 81, 112, 113, 124, 125, 128, 129, 146, 148, 150, 159, 160, 164, 166, 167, 789, 792, 794, 797, 799, 802, 1071, 1072, 1073, 1074, 1088, 1161, 1164, 1258, 1295, 1296, 1297, 1298, 1299, 1711, 1747, 1748, 1749, 1750, 1751, 1821, 1827, 1828, 1829, 1830, 1831], "prod": [64, 65, 88, 89, 112, 113, 136, 137, 148, 150, 164, 1258, 1295, 1296, 1297, 1298, 1299, 1911, 1942, 2072], "einops_repeat": [64, 65, 112, 113, 1258], "fourier_encod": [64, 65, 112, 113, 1258, 1312], "max_freq": [64, 65, 112, 113, 1258, 1308, 1309, 1310, 1311, 1312], "num_band": [64, 65, 112, 113, 1258, 1308, 1309, 1310, 1311, 1312], "concat": [64, 65, 76, 77, 97, 98, 124, 125, 159, 162, 164, 418, 443, 928, 931, 1071, 1078, 1258, 1308, 1309, 1311, 1711, 1721, 1969], "band": [64, 65, 112, 113, 1258, 1308, 1309, 1310, 1311, 1312], "linearli": [64, 65, 112, 113, 1258, 1308, 1309, 1310, 1311, 1312, 1555, 1647, 1650], "oppos": [64, 65, 112, 113, 148, 1258, 1308, 1309, 1310, 1311, 1312], "geometr": [64, 65, 112, 113, 1258, 1308, 1309, 1310, 1311, 1312, 1555, 1675, 1679], "concaten": [64, 65, 76, 77, 159, 162, 164, 167, 1258, 1308, 1309, 1311, 1711, 1717, 1718, 1720, 1969], "seper": [64, 65, 150, 159, 160, 1258, 1308, 1309, 1311], "batch": [64, 65, 97, 98, 112, 113, 120, 121, 146, 155, 167, 418, 441, 442, 1258, 1308, 1309, 1310, 1311, 1312, 1315, 1316, 1317, 1318, 1319, 1450, 1489, 1535, 1538, 1555, 1685, 1686, 1688, 1689, 1792, 1793, 1794, 1795, 1816, 1817, 1820, 1979, 2023, 2024], "expand": [64, 65, 76, 77, 112, 113, 146, 865, 868, 891, 896, 1258, 1308, 1309, 1310, 1311, 1312, 1711, 1727, 1728, 1730], "gather": [64, 65, 112, 113, 1258, 1319, 1320, 1321, 1322, 1323, 1324, 1328, 1988], "gather_nd": [64, 65, 112, 113, 1258, 1969], "get_num_dim": [64, 65, 112, 113, 1258, 1336, 1969], "as_arrai": [64, 65, 112, 113, 1258, 1332, 1333, 1334, 1335, 1336, 1405], "has_nan": [64, 65, 112, 113, 1258], "include_inf": [64, 65, 112, 113, 1258, 1341, 1342, 1343, 1344, 1345, 1445, 1446, 1447, 1448, 1449], "inplace_decr": [64, 65, 112, 113, 1258, 1351], "val": [64, 65, 97, 98, 112, 113, 157, 166, 1258, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1398, 1399], "decrement": [64, 65, 112, 113, 1258, 1347, 1348, 1349, 1350, 1351], "inplace_incr": [64, 65, 112, 113, 1258, 1356], "inplace_upd": [64, 65, 112, 113, 157, 1258, 1361, 1993, 1994, 2019, 2020], "ensure_in_backend": [64, 65, 157, 1258, 1357, 1358, 1360], "inplac": [64, 65, 66, 67, 97, 98, 112, 113, 142, 144, 150, 154, 156, 162, 166, 168, 1258, 1265, 1269, 1271, 1272, 1273, 1346, 1357, 1358, 1359, 1360, 1361, 1362, 1463, 1464, 1796, 1804, 1805, 1809, 1814, 1815, 1993, 1994, 2019, 2020, 2025, 2026, 2027, 2028, 2029, 2030, 2043, 2059], "is_arrai": [64, 65, 112, 113, 158, 1258, 1367], "exclus": [64, 65, 88, 89, 97, 98, 112, 113, 136, 137, 146, 148, 155, 158, 161, 169, 237, 239, 240, 1258, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1376, 1377, 1378, 1379, 1380, 1821, 1827, 1830, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1985, 1987], "trace": [64, 65, 72, 73, 97, 98, 112, 113, 120, 121, 143, 148, 164, 181, 1258, 1339, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1376, 1377, 1378, 1379, 1380, 1397, 1403, 1440, 1444, 1555, 1671, 1968, 1982, 1987], "is_ivy_arrai": [64, 65, 112, 113, 157, 166, 1258, 1372], "is_ivy_contain": [64, 65, 94, 99, 100, 1258], "is_native_arrai": [64, 65, 112, 113, 166, 852, 853, 1003, 1258, 1368, 1370, 1380], "scatter_flat": [64, 65, 112, 113, 1258, 1390], "occupi": [64, 65, 323, 363, 366, 374, 377, 1258, 1386, 1387, 1389, 1391, 1394], "scatter_nd": [64, 65, 112, 113, 162, 166, 1258, 1395, 1969], "stable_divid": [64, 65, 112, 113, 155, 1258, 1411], "denomin": [64, 65, 78, 79, 112, 113, 126, 127, 155, 181, 1258, 1330, 1399, 1407, 1408, 1409, 1410, 1411, 1816, 1817, 1818, 1819, 1820, 1978, 2023, 2024], "min_denomin": [64, 65, 112, 113, 1258, 1407, 1408, 1409, 1410, 1411], "_min_denomin": [64, 65, 112, 113, 1258, 1407, 1408, 1409, 1410, 1411], "stable_pow": [64, 65, 112, 113, 1258, 1416], "min_bas": [64, 65, 112, 113, 1258, 1412, 1413, 1414, 1415, 1416], "_min_bas": [64, 65, 78, 79, 112, 113, 126, 127, 1258, 1412, 1413, 1414, 1415, 1416, 1816, 1817, 1818, 1819, 1820, 2023, 2024], "supports_inplace_upd": [64, 65, 112, 113, 1258], "supports_inplac": [64, 65, 112, 113, 1417, 1418, 1419], "to_list": [64, 65, 112, 113, 1258, 1424, 1969], "to_numpi": [64, 65, 112, 113, 167, 1258, 1429, 1969], "to_scalar": [64, 65, 112, 113, 1258, 1434], "value_is_nan": [64, 65, 112, 113, 1258, 1446], "92": [64, 65, 128, 129, 1445, 1447, 1451, 1476, 1479, 1555, 1566, 1569, 1832, 1834, 1837, 1839], "adam_step": [66, 67, 114, 115, 1451], "mw": [66, 67, 114, 115, 168, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460], "vw": [66, 67, 114, 115, 168, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460], "beta1": [66, 67, 114, 115, 168, 1258, 1265, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 2025, 2026, 2027], "beta2": [66, 67, 114, 115, 168, 1258, 1265, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 2025, 2026, 2027], "999": [66, 67, 109, 110, 114, 115, 168, 453, 759, 760, 762, 763, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1476, 1479, 2025, 2026, 2027], "epsilon": [66, 67, 72, 73, 74, 75, 78, 79, 111, 114, 115, 120, 121, 122, 123, 126, 127, 146, 155, 157, 168, 824, 825, 826, 827, 1069, 1070, 1258, 1265, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1555, 1617, 1618, 1619, 1620, 1621, 1632, 1635, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1816, 1817, 1818, 1819, 1820, 2023, 2024, 2025, 2026, 2027], "07": [66, 67, 74, 75, 109, 110, 111, 114, 115, 122, 123, 128, 129, 168, 453, 489, 491, 492, 493, 624, 626, 627, 628, 644, 647, 724, 727, 824, 825, 826, 827, 1069, 1070, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1487, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1832, 1834, 2025, 2026, 2027], "cost": [66, 67, 114, 115, 162, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1792, 1793, 1794, 1795, 1979], "weight": [66, 67, 70, 71, 78, 79, 111, 114, 115, 118, 119, 126, 127, 146, 155, 164, 168, 169, 824, 825, 826, 827, 844, 846, 978, 980, 1069, 1070, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1489, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1550, 1551, 1552, 1553, 1554, 1816, 1817, 1818, 1819, 1820, 1980, 1997, 2001, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2017, 2019, 2020, 2025, 2027, 2028], "dc": [66, 67, 114, 115, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479], "dw": [66, 67, 114, 115, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479], "averag": [66, 67, 114, 115, 809, 812, 1038, 1040, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1792, 1793, 1794, 1997, 2002, 2005], "forget": [66, 67, 114, 115, 148, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 2025, 2026, 2027], "adam": [66, 67, 114, 115, 167, 168, 169, 1258, 1265, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1969, 1981, 2025, 2027], "delta": [66, 67, 114, 115, 1451, 1453, 1454, 1455, 1456], "dcdw": [66, 67, 114, 115, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475], "adam_step_delta": [66, 67, 114, 115, 1451, 1453, 1454, 1455, 1456], "2020105": [66, 67, 1451, 1453, 1454, 1456], "22187898": [66, 67, 1451, 1453, 1454, 1456], "24144873": [66, 67, 1451, 1453, 1454, 1456], "10000002": [66, 67, 136, 137, 1451, 1453, 1454, 1456, 1930, 1932], "20000005": [66, 67, 1451, 1453, 1454, 1456], "00300002": [66, 67, 1451, 1453, 1454, 1456], "00800002": [66, 67, 1451, 1453, 1454, 1456], "adam_upd": [66, 67, 114, 115, 168, 1451], "lr": [66, 67, 114, 115, 167, 168, 1258, 1265, 1451, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 2025, 2026, 2027, 2028, 2029, 2030], "mw_tm1": [66, 67, 114, 115, 1451, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471], "vw_tm1": [66, 67, 114, 115, 1451, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471], "stop_gradi": [66, 67, 114, 115, 168, 418, 443, 1258, 1265, 1451, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1482, 1792, 1793, 1794, 1795, 1969, 2025, 2026, 2027, 2028, 2029, 2030], "rate": [66, 67, 114, 115, 1451, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1792, 1793, 1794, 1795, 2007, 2018, 2025, 2026, 2027, 2028, 2029, 2030], "ws_new": [66, 67, 114, 115, 1451, 1457, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479], "gradient_descent_upd": [66, 67, 114, 115, 1451, 1792, 1793, 1794, 1795, 1969], "descent": [66, 67, 114, 115, 168, 1451, 1463, 1464, 1465, 1466, 1981, 2025, 2030], "new_weight": [66, 67, 114, 115, 167, 1451, 1463, 1464, 1466, 1468, 1469, 1470, 1471], "95": [66, 67, 80, 81, 114, 115, 128, 129, 196, 198, 201, 854, 857, 1038, 1042, 1451, 1453, 1456, 1463, 1464, 1465, 1466, 1476, 1479, 1821, 1832, 1833, 1834, 1835, 1837, 1839], "97": [66, 67, 109, 110, 114, 115, 128, 129, 453, 479, 482, 483, 1451, 1463, 1464, 1465, 1466, 1832, 1834], "96": [66, 67, 109, 110, 111, 112, 113, 128, 129, 453, 534, 536, 537, 538, 754, 758, 759, 760, 854, 857, 858, 1038, 1042, 1048, 1050, 1052, 1258, 1295, 1298, 1299, 1451, 1463, 1464, 1466, 1555, 1627, 1630, 1837, 1839, 1911, 1922, 1925], "lamb_upd": [66, 67, 114, 115, 1451], "max_trust_ratio": [66, 67, 114, 115, 1451, 1468, 1469, 1470, 1471, 2025, 2027], "decay_lambda": [66, 67, 114, 115, 1451, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 2025, 2027, 2028], "trust": [66, 67, 114, 115, 1451, 1468, 1469, 1470, 1471, 2025, 2027], "ratio": [66, 67, 114, 115, 1451, 1468, 1469, 1470, 1471, 2025, 2027], "decai": [66, 67, 114, 115, 1451, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 2025, 2027, 2028], "lamb": [66, 67, 114, 115, 168, 1451, 1468, 1469, 1470, 1471, 2025], "784": [66, 67, 1451, 1468, 1469, 1471], "78": [66, 67, 453, 524, 527, 724, 727, 1451, 1468, 1469, 1471, 1555, 1627, 1630, 1821, 1832, 1835, 1911, 1922, 1925], "lars_upd": [66, 67, 114, 115, 1451], "lar": [66, 67, 114, 115, 168, 1451, 1472, 1473, 1474, 1475, 2025], "optimizer_upd": [66, 67, 114, 115, 1451], "effective_grad": [66, 67, 114, 115, 1451, 1476, 1477, 1478, 1479], "3e": [66, 67, 114, 115, 1451, 1476, 1477, 1478, 1479], "preserve_typ": [66, 67, 114, 115, 1451, 1481, 1482, 1483, 1484, 1485], "preserv": [66, 67, 94, 97, 98, 99, 100, 114, 115, 160, 169, 181, 789, 792, 794, 797, 799, 802, 933, 936, 938, 941, 1071, 1072, 1073, 1074, 1079, 1080, 1451, 1481, 1482, 1483, 1484, 1485, 1711, 1732, 1735, 2072, 2076], "conv1d": [70, 71, 118, 119, 1489, 1495, 2007], "dilat": [70, 71, 111, 118, 119, 1104, 1106, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014], "fw": [70, 71, 118, 119, 160, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 2043, 2052, 2061], "d_out": [70, 71, 118, 119, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1521], "wio": [70, 71, 1489, 1491, 1492, 1494], "conv1d_transpos": [70, 71, 118, 119, 1489], "output_shap": [70, 71, 118, 119, 1489, 1490, 1496, 1497, 1498, 1499, 1500, 1506, 1507, 1508, 1509, 1515, 1516, 1517, 1518, 1519, 1521, 2007, 2009, 2011, 2013], "conv2d": [70, 71, 118, 119, 1489, 1505, 1969, 2007], "fh": [70, 71, 118, 119, 1489, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1513, 1515, 1518, 1520, 1521, 1523, 1524, 1525, 1526, 1527], "hwio": [70, 71, 1489, 1501, 1502, 1504], "conv3d": [70, 71, 118, 119, 1489, 1514, 2007], "fd": [70, 71, 1489, 1510, 1511, 1513, 1515, 1518, 1520, 1521], "conv3d_transpos": [70, 71, 118, 119, 1489], "depthwise_conv2d": [70, 71, 118, 119, 1489, 1527, 1969], "255": [70, 71, 111, 118, 119, 453, 519, 522, 854, 858, 1523, 1524, 1525, 1527], "random_norm": [70, 71, 80, 81, 118, 119, 128, 129, 1489, 1510, 1513, 1515, 1518, 1523, 1524, 1525, 1526, 1527, 1555, 1652, 1656, 1821, 1836], "std": [70, 71, 80, 81, 88, 89, 118, 119, 128, 129, 136, 137, 150, 819, 822, 1171, 1172, 1489, 1510, 1513, 1515, 1518, 1523, 1524, 1525, 1526, 1527, 1821, 1827, 1830, 1832, 1833, 1834, 1835, 1836, 1911], "dropout": [70, 71, 118, 119, 167, 875, 1038, 1043, 1489, 1532, 2007, 2018], "prob": [70, 71, 118, 119, 128, 129, 875, 1038, 1043, 1489, 1528, 1529, 1530, 1531, 1532, 1821, 1822, 1825, 1826, 2007, 2015], "droput": [70, 71, 1528, 1529], "42857146": [70, 71, 1489, 1528, 1529, 1531], "85714293": [70, 71, 1489, 1528, 1529, 1531], "28571415": [70, 71, 118, 119, 1489, 1528, 1529, 1530, 1531, 1532], "71428585": [70, 71, 118, 119, 1489, 1528, 1529, 1530, 1531, 1532], "14285755": [70, 71, 118, 119, 1489, 1528, 1529, 1530, 1531, 1532], "5714283": [70, 71, 1489, 1528, 1529, 1531], "4285717": [70, 71, 118, 119, 1489, 1528, 1529, 1530, 1531, 1532], "8571434": [70, 71, 118, 119, 1489, 1528, 1529, 1530, 1531, 1532], "2857151": [70, 71, 1489, 1528, 1529, 1531], "flase": [70, 71, 1489, 1528, 1529, 1531], "dropout1d": [70, 71, 118, 119, 1038], "bia": [70, 71, 78, 79, 118, 119, 126, 127, 164, 168, 1258, 1382, 1489, 1490, 1520, 1521, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1816, 1817, 1818, 1819, 1820, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017], "outer_batch_shap": [70, 71, 118, 119, 1489, 1535, 1536, 1537, 1538, 1539], "inner_batch_shap": [70, 71, 118, 119, 1489, 1535, 1536, 1537, 1538, 1539], "in_featur": [70, 71, 118, 119, 1489, 1535, 1536, 1537, 1538, 1539], "out_featur": [70, 71, 118, 119, 1489, 1535, 1536, 1537, 1538, 1539], "84": [70, 71, 88, 89, 109, 110, 126, 127, 128, 129, 323, 374, 377, 418, 430, 634, 636, 1535, 1536, 1555, 1627, 1630, 1816, 1817, 1819, 1820, 1832, 1834, 1837, 1839, 1911, 1922, 1923, 1925], "133": [70, 71, 1258, 1280, 1283, 1535, 1536], "134": [70, 71, 1535, 1536, 1555, 1612, 1615], "lstm_updat": [70, 71, 118, 119, 164, 1489], "init_h": [70, 71, 118, 119, 164, 1489, 1540, 1541, 1542, 1543, 1544], "init_c": [70, 71, 118, 119, 164, 1489, 1540, 1541, 1542, 1543, 1544], "recurrent_kernel": [70, 71, 118, 119, 164, 1489, 1540, 1541, 1542, 1543, 1544], "recurrent_bia": [70, 71, 118, 119, 164, 1489, 1540, 1541, 1542, 1543, 1544], "multi_head_attent": [70, 71, 118, 119, 157, 1489], "num_head": [70, 71, 118, 119, 1489, 1545, 1546, 1547, 1548, 1549, 2007, 2018], "mask": [70, 71, 118, 119, 162, 1258, 1328, 1489, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 2019, 2021], "to_q_fn": [70, 71, 118, 119, 1489, 1545, 1546, 1547, 1548, 1549], "to_kv_fn": [70, 71, 118, 119, 1489, 1545, 1546, 1547, 1548, 1549], "to_out_fn": [70, 71, 118, 119, 157, 1489, 1545, 1546, 1547, 1548, 1549], "to_q_v": [70, 71, 118, 119, 1489, 1545, 1546, 1547, 1548, 1549], "to_kv_v": [70, 71, 118, 119, 1489, 1545, 1546, 1547, 1548, 1549], "to_out_v": [70, 71, 118, 119, 1489, 1545, 1546, 1547, 1548, 1549], "scaled_dot_product_attent": [70, 71, 118, 119, 1489, 1554], "queri": [70, 71, 97, 98, 118, 119, 146, 148, 166, 418, 430, 442, 1258, 1328, 1489, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1981, 2007, 2018], "batch_shap": [70, 71, 80, 81, 103, 104, 118, 119, 128, 129, 162, 164, 166, 237, 258, 259, 292, 294, 295, 296, 1489, 1540, 1543, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1690, 1694, 1821, 1822, 1823, 1824, 1825, 1826, 2007, 2016], "num_queri": [70, 71, 118, 119, 1489, 1545, 1548, 1550, 1551, 1552, 1553, 1554], "feat_dim": [70, 71, 118, 119, 1489, 1550, 1551, 1552, 1553, 1554], "num_kei": [70, 71, 118, 119, 1489, 1545, 1548, 1550, 1551, 1552, 1553, 1554], "pair": [70, 71, 118, 119, 147, 453, 489, 492, 1071, 1086, 1152, 1489, 1550, 1551, 1552, 1553, 1554, 1555, 1561, 1564], "dot": [70, 71, 111, 118, 119, 147, 1053, 1058, 1130, 1133, 1134, 1489, 1545, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1680, 1684, 2007, 2018], "score": [70, 71, 118, 119, 1489, 1550, 1551, 1552, 1553, 1554], "linear_algebra": [72, 73, 120, 121, 161, 1053, 1054, 1055, 1056, 1057, 1058, 1555, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1582, 1585, 1587, 1590, 1592, 1595, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1615, 1617, 1620, 1622, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1645, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1665, 1666, 1669, 1670, 1674, 1675, 1679, 1680, 1684, 1685, 1689, 1690, 1694], "choleski": [72, 73, 120, 121, 157, 1555, 1560], "symmetr": [72, 73, 111, 120, 121, 146, 844, 845, 846, 847, 848, 974, 975, 976, 977, 978, 979, 980, 981, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1071, 1088, 1161, 1164, 1555, 1556, 1557, 1558, 1559, 1560, 1581, 1582, 1585, 1587, 1590, 1690, 1694], "625": [72, 73, 1555, 1556, 1557, 1559], "cross": [72, 73, 74, 75, 111, 120, 121, 122, 123, 147, 824, 825, 826, 827, 1069, 1070, 1555, 1565, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1969], "vif": [72, 73, 120, 121, 1555, 1561, 1562, 1563, 1564, 1565], "det": [72, 73, 120, 121, 1555, 1642, 1645], "axis1": [72, 73, 76, 77, 120, 121, 124, 125, 1555, 1576, 1577, 1578, 1579, 1580, 1670, 1671, 1672, 1673, 1674, 1711, 1772, 1773, 1774, 1775, 1776], "axis2": [72, 73, 120, 121, 1555, 1576, 1577, 1578, 1579, 1580, 1670, 1671, 1672, 1673, 1674], "eigh": [72, 73, 120, 121, 1555, 1581], "uplo": [72, 73, 120, 121, 1555, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591], "eigvalsh": [72, 73, 120, 121, 1555, 1591], "eigenvalu": [72, 73, 120, 121, 886, 889, 1053, 1055, 1555, 1581, 1582, 1585, 1587, 1588, 1589, 1590, 1591], "inv": [72, 73, 120, 121, 1555, 1969], "adjoint": [72, 73, 120, 121, 1555, 1597, 1598, 1599, 1600, 1601, 1652, 1656], "matmul": [72, 73, 120, 121, 145, 160, 161, 164, 1258, 1450, 1555, 1606, 1652, 1656, 1969], "transpose_a": [72, 73, 120, 121, 1555, 1602, 1603, 1604, 1605, 1606], "transpose_b": [72, 73, 120, 121, 1555, 1602, 1603, 1604, 1605, 1606], "matrix_norm": [72, 73, 120, 121, 1555, 1611], "ord": [72, 73, 120, 121, 1555, 1607, 1608, 1609, 1610, 1611, 1685, 1686, 1687, 1688, 1689], "fro": [72, 73, 120, 121, 1555, 1607, 1608, 1609, 1610, 1611], "nuc": [72, 73, 120, 121, 1555, 1607, 1608, 1609, 1610, 1611], "matrix_pow": [72, 73, 120, 121, 1555], "matrix_rank": [72, 73, 120, 121, 1555, 1621], "singular": [72, 73, 120, 121, 148, 1555, 1607, 1610, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636, 1652, 1656, 1657, 1661, 2090, 2096], "largest_singular_valu": [72, 73, 120, 121, 1555, 1617, 1618, 1619, 1620, 1621, 1632, 1634, 1635, 1636], "defici": [72, 73, 1555, 1617, 1618, 1620], "matrix_transpos": [72, 73, 120, 121, 166, 1555], "pinv": [72, 73, 120, 121, 1555, 1636, 1969], "0426": [72, 73, 120, 121, 1632, 1633, 1634, 1636], "0964": [72, 73, 120, 121, 1632, 1633, 1634, 1636], "0605": [72, 73, 120, 121, 1632, 1633, 1634, 1636], "1368": [72, 73, 120, 121, 1632, 1633, 1634, 1636], "qr": [72, 73, 120, 121, 1555], "slogdet": [72, 73, 120, 121, 1555, 1646], "namedtupl": [72, 73, 84, 85, 120, 121, 132, 133, 1555, 1581, 1582, 1585, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1652, 1656, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889], "logabsdet": [72, 73, 120, 121, 1555, 1642, 1643, 1644, 1645, 1646], "6931472": [72, 73, 120, 121, 1555, 1642, 1643, 1644, 1645, 1646], "098611": [72, 73, 1555, 1642, 1643, 1645], "solv": [72, 73, 120, 121, 143, 158, 165, 180, 1555, 1983], "svd": [72, 73, 120, 121, 1555, 1657, 1661, 1969], "compute_uv": [72, 73, 120, 121, 1555, 1652, 1653, 1654, 1655, 1656], "full_matric": [72, 73, 120, 121, 1555, 1652, 1653, 1654, 1655, 1656], "svdval": [72, 73, 120, 121, 1555], "tensordot": [72, 73, 120, 121, 148, 1555], "tensorsolv": [72, 73, 120, 121, 1555], "vander": [72, 73, 120, 121, 1555, 1676], "vandermond": [72, 73, 120, 121, 1555, 1675, 1676, 1677, 1678, 1679], "column": [72, 73, 120, 121, 237, 258, 259, 844, 849, 850, 886, 889, 933, 936, 938, 941, 992, 995, 1053, 1055, 1071, 1079, 1080, 1083, 1219, 1222, 1223, 1226, 1555, 1581, 1582, 1585, 1607, 1610, 1637, 1640, 1647, 1650, 1652, 1656, 1675, 1676, 1677, 1678, 1679, 1997, 1998, 2001, 2002, 2005], "vecdot": [72, 73, 120, 121, 1555], "vector_norm": [72, 73, 120, 121, 1555, 1686, 1969], "vector_to_skew_symmetric_matrix": [72, 73, 120, 121, 1555, 1969], "binary_cross_entropi": [74, 75, 122, 123, 147, 1695, 1700], "pred": [74, 75, 111, 122, 123, 146, 155, 157, 824, 825, 826, 827, 1069, 1070, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710], "predict": [74, 75, 111, 122, 123, 824, 825, 826, 827, 1069, 1070, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710], "amount": [74, 75, 111, 122, 123, 147, 149, 159, 418, 449, 824, 825, 826, 827, 1069, 1070, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710], "smooth": [74, 75, 111, 122, 123, 824, 825, 826, 827, 1069, 1070, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710], "binari": [74, 75, 111, 122, 123, 453, 499, 502, 514, 517, 524, 527, 664, 667, 824, 825, 826, 827, 1069, 1070, 1695, 1696, 1697, 1698, 1699, 1700], "entropi": [74, 75, 111, 122, 123, 824, 825, 826, 827, 1069, 1070, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710], "357": [74, 75, 122, 123, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1709, 1710], "223": [74, 75, 122, 123, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1710], "cross_entropi": [74, 75, 122, 123, 146, 155, 157, 1695, 1705, 1706, 1709], "3862944": [74, 75, 1695, 1701, 1702, 1704], "sparse_cross_entropi": [74, 75, 122, 123, 1695, 1710], "loss": [75, 111, 123, 147, 148, 155, 158, 161, 167, 168, 169, 824, 825, 826, 827, 1070, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1969, 1981, 1988], "x_min": [76, 77, 124, 125, 169, 1711, 1712, 1713, 1714, 1715, 1716], "x_max": [76, 77, 124, 125, 169, 1711, 1712, 1713, 1714, 1715, 1716], "join": [76, 77, 97, 98, 124, 125, 152, 1711, 1717, 1718, 1720, 1767, 1768, 1769, 1770, 1771, 1969], "constant_pad": [76, 77, 124, 125, 1711, 1726], "expand_dim": [76, 77, 124, 125, 158, 164, 167, 1489, 1523, 1526, 1711, 1731, 1969], "permute_dim": [76, 77, 124, 125, 1711, 1741], "valueerror": [76, 77, 112, 113, 124, 125, 152, 1258, 1417, 1418, 1421, 1711, 1747, 1748, 1749, 1750, 1751, 1762, 1765], "reus": [76, 77, 124, 125, 152, 160, 1711, 1747, 1748, 1749, 1750, 1751, 1986], "buffer": [76, 77, 124, 125, 181, 1711, 1747, 1748, 1749, 1750, 1751], "roll": [76, 77, 124, 125, 146, 154, 1711, 1756], "restor": [76, 77, 124, 125, 1711, 1752, 1753, 1754, 1755, 1756], "num_or_size_split": [76, 77, 97, 98, 124, 125, 164, 1489, 1545, 1548, 1711, 1757, 1758, 1759, 1760, 1761], "with_remaind": [76, 77, 97, 98, 124, 125, 1711, 1757, 1758, 1759, 1760, 1761], "squeez": [76, 77, 124, 125, 1711, 1766, 1969, 1981], "swapax": [76, 77, 124, 125, 1711, 1773], "axis0": [76, 77, 124, 125, 1711, 1772, 1773, 1774, 1775, 1776], "swap_ax": [76, 77, 1772, 1774], "tile": [76, 77, 112, 113, 124, 125, 1300, 1302, 1304, 1711, 1778, 1969], "rep": [76, 77, 124, 125, 1711, 1777, 1778, 1779, 1780, 1781], "unpack": [76, 77, 124, 125, 153, 159, 160, 1711, 1782, 1783, 1784, 1785, 1786], "zero_pad": [76, 77, 124, 125, 1711, 1788, 1969], "layer_norm": [78, 79, 126, 127, 1816], "normalized_idx": [78, 79, 126, 127, 1816, 1817, 1818, 1819, 1820], "new_std": [78, 79, 126, 127, 1816, 1817, 1818, 1819, 1820, 2023, 2024], "learnabl": [78, 79, 126, 127, 169, 1816, 1817, 1818, 1819, 1820, 2023, 2024], "0976": [78, 79, 1816, 1817, 1818, 1820], "3452": [78, 79, 1816, 1817, 1818, 1820], "2740": [78, 79, 1816, 1817, 1818, 1820], "1047": [78, 79, 1816, 1817, 1818, 1820], "5886": [78, 79, 1816, 1817, 1818, 1820], "2732": [78, 79, 1816, 1817, 1818, 1820], "7696": [78, 79, 1816, 1817, 1818, 1820], "7024": [78, 79, 1816, 1817, 1818, 1820], "2518": [78, 79, 1816, 1817, 1818, 1820], "826": [78, 79, 1816, 1817, 1818, 1820], "178": [78, 79, 1816, 1817, 1818, 1820], "981": [78, 79, 1816, 1817, 1818, 1820], "831": [78, 79, 1816, 1817, 1818, 1820], "421": [78, 79, 1816, 1817, 1818, 1820], "multinomi": [80, 81, 128, 129, 870, 873, 1171, 1173, 1821, 1826], "population_s": [80, 81, 128, 129, 1821, 1822, 1823, 1824, 1825, 1826], "num_sampl": [80, 81, 128, 129, 1821, 1822, 1823, 1824, 1825, 1826], "unnorm": [80, 81, 128, 129, 160, 1821, 1822, 1823, 1824, 1825, 1826], "popul": [80, 81, 88, 89, 97, 98, 128, 129, 136, 137, 148, 149, 160, 164, 1821, 1822, 1823, 1824, 1825, 1826, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 1987], "uniform": [80, 81, 128, 129, 168, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1837, 1838, 1839, 1840, 1841, 1988, 1997, 1999, 2000, 2004], "independ": [80, 81, 128, 129, 143, 148, 150, 156, 164, 169, 1555, 1561, 1564, 1647, 1650, 1821, 1822, 1823, 1824, 1825, 1826, 1979], "highest": [80, 81, 128, 129, 1821, 1827, 1828, 1829, 1830, 1831], "low": [80, 81, 128, 129, 146, 158, 162, 164, 1821, 1827, 1828, 1829, 1830, 1831, 1837, 1838, 1839, 1840, 1841, 1977, 1979, 1981, 1982, 1983, 1985, 1987, 2090, 2093], "half": [80, 81, 128, 129, 162, 237, 239, 240, 1821, 1827, 1828, 1829, 1830, 1831, 1837, 1840], "int16": [80, 81, 105, 106, 128, 129, 148, 158, 160, 164, 323, 345, 348, 356, 368, 369, 374, 376, 391, 394, 415, 1827, 1828, 1829, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951], "int64": [80, 81, 82, 83, 86, 87, 105, 106, 128, 129, 130, 131, 134, 135, 136, 137, 148, 158, 160, 164, 237, 297, 298, 323, 345, 347, 348, 349, 356, 362, 368, 369, 374, 377, 386, 388, 390, 396, 399, 410, 1827, 1828, 1829, 1848, 1849, 1850, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1862, 1895, 1901, 1902, 1903, 1904, 1905, 1911, 1912, 1915, 1917, 1919, 1920, 1938, 1941, 1947, 1951], "235": [80, 81, 1832, 1833], "float16": [80, 81, 128, 129, 148, 160, 323, 351, 353, 354, 363, 366, 371, 372, 891, 899, 943, 946, 1832, 1833, 1834, 1837, 1838, 1839], "807": [80, 81, 1832, 1833], "random_uniform": [80, 81, 128, 129, 149, 160, 168, 1821, 1841, 1969], "86": [80, 81, 128, 129, 1451, 1453, 1456, 1832, 1834, 1837, 1838, 1839], "06": [80, 81, 109, 110, 114, 115, 160, 167, 196, 198, 201, 323, 363, 366, 464, 466, 468, 539, 541, 543, 854, 857, 1038, 1042, 1451, 1468, 1470, 1471, 1837, 1838, 2034, 2041, 2043, 2056, 2059, 2060, 2061, 2062], "53": [80, 81, 109, 110, 418, 449, 569, 571, 573, 1451, 1462, 1467, 1487, 1816, 1817, 1820, 1837, 1838], "argmax": [82, 83, 130, 131, 158, 1848, 1853, 1969], "output_dtyp": [82, 83, 130, 131, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858], "select_last_index": [82, 83, 130, 131, 1848, 1849, 1850, 1851, 1852, 1853], "insert": [82, 83, 130, 131, 147, 1711, 1727, 1730, 1796, 1802, 1848, 1849, 1850, 1851, 1852, 1853, 1895, 1901, 1904], "occurr": [82, 83, 1848, 1849, 1850, 1852, 1854, 1855, 1857, 1874, 1875, 1879], "argmin": [82, 83, 130, 131, 1848, 1858, 1969], "singleton": [82, 83, 88, 89, 90, 91, 120, 121, 130, 131, 136, 137, 138, 139, 164, 1555, 1685, 1686, 1688, 1689, 1711, 1727, 1730, 1762, 1765, 1848, 1854, 1855, 1856, 1857, 1858, 1911, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967], "accordingli": [82, 83, 88, 89, 90, 91, 120, 121, 130, 131, 136, 137, 138, 139, 153, 158, 164, 237, 282, 285, 453, 569, 572, 634, 637, 1555, 1685, 1686, 1688, 1689, 1848, 1854, 1855, 1856, 1857, 1858, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1911, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967], "argwher": [82, 83, 130, 131, 153, 1848, 1863], "nonzero": [82, 83, 130, 131, 453, 469, 472, 1848, 1868], "as_tupl": [82, 83, 130, 131, 1848, 1864, 1865, 1866, 1867, 1868], "fewer": [82, 83, 130, 131, 1848, 1864, 1865, 1866, 1867, 1868], "yield": [82, 83, 147, 153, 1071, 1086, 1087, 1088, 1152, 1153, 1161, 1164, 1848, 1869, 1871, 1873], "condit": [82, 83, 130, 131, 143, 148, 150, 152, 157, 180, 234, 235, 1796, 1807, 1808, 1848, 1869, 1870, 1871, 1872, 1873, 2090, 2096], "unique_al": [84, 85, 132, 133, 1874, 1876], "inverse_indic": [84, 85, 132, 133, 1874, 1875, 1876, 1877, 1878, 1879, 1885, 1886, 1887, 1888, 1889], "vari": [84, 85, 146, 150, 158, 160, 166, 1874, 1875, 1877, 1879, 1880, 1884, 1885, 1889, 1890, 1894], "unique_count": [84, 85, 132, 133, 1874, 1881], "field": [84, 85, 132, 133, 180, 1555, 1581, 1582, 1585, 1637, 1640, 1642, 1645, 1652, 1656, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1979, 1987], "unique_invers": [84, 85, 132, 133, 1874, 1886], "reconstruct": [84, 85, 132, 133, 1555, 1652, 1656, 1874, 1875, 1879, 1885, 1886, 1887, 1888, 1889], "unique_valu": [84, 85, 132, 133, 1874], "argsort": [86, 87, 134, 135, 1895, 1900, 1901, 1904], "descend": [86, 87, 134, 135, 1555, 1652, 1656, 1657, 1661, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1907, 1908, 1909, 1910], "ascend": [86, 87, 134, 135, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904], "stabil": [86, 87, 134, 135, 148, 162, 1258, 1407, 1410, 1412, 1415, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909], "searchsort": [86, 87, 134, 135, 1895, 1905], "sorter": [86, 87, 134, 135, 1895, 1901, 1902, 1903, 1904, 1905], "ret_dtyp": [86, 87, 134, 135, 1895, 1901, 1902, 1903, 1904, 1905], "cumprod": [88, 89, 136, 137, 158, 169, 1911, 1916], "cumul": [88, 89, 136, 137, 180, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921], "120": [88, 89, 94, 99, 100, 136, 137, 152, 1555, 1627, 1630, 1912, 1913, 1914, 1916], "cumsum": [88, 89, 136, 137, 148, 1911, 1921, 1969], "einsum": [88, 89, 136, 137, 1911], "equat": [88, 89, 111, 136, 137, 844, 845, 974, 975, 976, 977, 1555, 1647, 1650, 1911, 1922, 1923, 1924, 1925, 1981], "contract": [88, 89, 1555, 1662, 1665, 1911, 1922, 1923, 1925], "operand": [88, 89, 146, 151, 158, 453, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 524, 527, 529, 532, 534, 537, 539, 542, 564, 567, 569, 572, 574, 577, 624, 627, 629, 632, 634, 637, 639, 642, 644, 647, 699, 702, 714, 717, 719, 722, 729, 732, 734, 737, 739, 742, 754, 758, 759, 763, 764, 768, 891, 913, 1187, 1190, 1911, 1922, 1923, 1925, 1926, 1929, 1934, 1937, 1947, 1951], "seq": [88, 89, 1911, 1922, 1923, 1925, 2072, 2085], "jk": [88, 89, 1911, 1922, 1923, 1925], "ik": [88, 89, 1911, 1922, 1923, 1925], "66": [88, 89, 112, 113, 114, 115, 453, 524, 527, 1258, 1295, 1298, 1299, 1451, 1463, 1465, 1466, 1555, 1627, 1630, 1911, 1922, 1923, 1925], "104": [88, 89, 1555, 1627, 1630, 1911, 1922, 1923, 1925], "126": [88, 89, 196, 198, 201, 453, 704, 707, 1555, 1612, 1615, 1911, 1922, 1923, 1925], "510": [88, 89, 1911, 1922, 1923, 1925], "arithmet": [88, 89, 136, 137, 158, 453, 519, 522, 1911, 1930, 1931, 1932, 1933], "x_i": [88, 89, 109, 110, 151, 453, 454, 457, 459, 462, 464, 467, 474, 477, 479, 482, 484, 487, 504, 507, 529, 532, 534, 537, 539, 542, 564, 567, 569, 572, 574, 577, 594, 597, 598, 599, 602, 603, 604, 607, 608, 609, 612, 613, 624, 627, 629, 632, 634, 637, 639, 642, 654, 657, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 754, 758, 759, 763, 764, 768, 891, 913, 1187, 1190, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1911, 1926, 1929, 1930, 1931, 1933, 1934, 1937, 1943, 1946, 1947, 1951, 1952, 1954, 1956, 1997, 2001], "propag": [88, 89, 453, 519, 522, 1911, 1926, 1929, 1930, 1931, 1933, 1934, 1937, 1943, 1946, 1947, 1951, 1952, 1954, 1956], "04999995": [88, 89, 1930, 1931], "0999999": [88, 89, 1930, 1931], "freedom": [88, 89, 136, 137, 145, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956], "constitut": [88, 89, 136, 137, 155, 164, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956, 1982], "commonli": [88, 89, 136, 137, 152, 155, 1911, 1943, 1944, 1945, 1946, 1952, 1954, 1955, 1956], "8164966": [88, 89, 1911, 1943, 1944, 1946], "varianc": [88, 89, 136, 137, 1911, 1952, 1953, 1954, 1955, 1956, 1997, 2005], "unbias": [88, 89, 136, 137, 1911, 1952, 1954, 1955, 1956], "6666665": [88, 89, 167, 1952, 1954], "667": [88, 89, 112, 113, 453, 549, 552, 1258, 1280, 1282, 1407, 1409, 1410, 1952, 1954], "AND": [90, 91, 138, 139, 453, 499, 502, 649, 652, 1957, 1958, 1959, 1960, 1961, 1962], "backward": [90, 91, 138, 139, 181, 453, 714, 717, 922, 1038, 1044, 1555, 1680, 1684, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967], "add_ivy_array_instance_method": 92, "cl": [92, 93, 140, 141], "to_ignor": [92, 93, 140, 141, 1796, 1808], "loop": [92, 93, 140, 141, 145, 153, 181, 1792, 1793, 1794, 1795], "_wrap_funct": [92, 93, 140, 141, 155, 156], "toi": [92, 93, 140, 141], "arrayexampl": [92, 93], "hasattr": [92, 93, 140, 141], "dict_in": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "queue": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 167, 1258, 1337, 1401, 1442], "queue_load_s": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "container_combine_method": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "list_join": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "queue_timeout": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "print_limit": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "key_length_limit": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "print_ind": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "print_line_spac": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "ivyh": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "default_key_color": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "keyword_color_dict": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "rebuild_child_contain": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "types_to_iteratively_nest": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "alphabetical_kei": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "containerwithactiv": [94, 95, 99, 100], "containerwithconvers": [94, 99, 100, 101], "containerwithcr": [94, 99, 100, 103], "containerwithdatatyp": [94, 99, 100, 105], "containerwithdevic": [94, 99, 100, 107], "containerwithelementwis": [94, 99, 100, 109, 146], "containerwithgener": [94, 99, 100, 112], "containerwithgradi": [94, 99, 100, 114], "containerwithimag": [94, 99, 100, 116], "containerwithlay": [94, 99, 100, 118], "containerwithlinearalgebra": [94, 99, 100, 120], "containerwithloss": [94, 99, 100, 122], "containerwithnorm": [94, 99, 100, 126], "containerwithrandom": [94, 99, 100, 128], "containerwithsearch": [94, 99, 100, 130], "containerwithset": [94, 99, 100, 132], "containerwithsort": [94, 99, 100, 134], "containerwithstatist": [94, 99, 100, 136], "containerwithutil": [94, 99, 100, 138], "containerwithactivationexperiment": [94, 99, 100, 111], "containerwithconversionexperiment": [94, 99, 100, 111], "containerwithcreationexperiment": [94, 99, 100, 111], "containerwithdata_typeexperiment": [94, 99, 100, 111], "containerwithdeviceexperiment": [94, 99, 100, 111], "containerwithelementwiseexperiment": [94, 99, 100, 111], "containerwithgeneralexperiment": [94, 99, 100, 111], "containerwithgradientsexperiment": [94, 99, 100, 111], "containerwithimageexperiment": [94, 99, 100, 111], "containerwithlayersexperiment": [94, 99, 100, 111], "containerwithlinearalgebraexperiment": [94, 99, 100, 111], "containerwithlossesexperiment": [94, 99, 100, 111], "containerwithmanipulationexperiment": [94, 99, 100, 111], "containerwithnormsexperiment": [94, 99, 100, 111], "containerwithrandomexperiment": [94, 99, 100, 111], "containerwithsearchingexperiment": [94, 99, 100, 111], "containerwithsetexperiment": [94, 99, 100, 111], "containerwithsortingexperiment": [94, 99, 100, 111], "containerwithstatisticalexperiment": [94, 99, 100, 111], "containerwithutilityexperiment": [94, 99, 100, 111], "eq": [94, 99, 100], "ge": [94, 99, 100], "gt": [94, 99, 100, 159, 164], "dictionari": [94, 97, 98, 99, 100, 147, 148, 158, 167, 181, 196, 197, 203, 418, 442, 1451, 1461, 2043, 2048], "asynchron": [94, 97, 98, 99, 100, 1981], "arriv": [94, 97, 98, 99, 100, 162, 1258, 1401], "cont_list_join": [94, 97, 98, 99, 100], "timeout": [94, 97, 98, 99, 100, 1258, 1337, 1401, 1442], "whitespac": [94, 97, 98, 99, 100], "indent": [94, 97, 98, 99, 100, 167], "extra": [94, 97, 98, 99, 100, 144, 148, 150, 156, 158, 159, 162, 164, 1258, 1450, 1978, 1983], "newlin": [94, 97, 98, 99, 100, 151], "color": [94, 97, 98, 99, 100, 2124, 2125], "map": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 146, 147, 148, 154, 155, 158, 160, 161, 167, 180, 181, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 267, 269, 271, 292, 294, 296, 300, 302, 304, 318, 319, 321, 335, 337, 339, 345, 347, 349, 386, 388, 390, 403, 405, 407, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 821, 823, 839, 841, 843, 875, 933, 937, 1005, 1007, 1009, 1038, 1043, 1155, 1157, 1159, 1175, 1177, 1179, 1187, 1189, 1191, 1206, 1207, 1209, 1211, 1212, 1214, 1247, 1248, 1250, 1252, 1253, 1255, 1258, 1259, 1261, 1263, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1450, 1463, 1465, 1481, 1482, 1484, 1528, 1530, 1532, 1535, 1537, 1539, 1550, 1552, 1554, 1556, 1558, 1560, 1561, 1563, 1565, 1587, 1589, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1609, 1611, 1617, 1619, 1621, 1642, 1644, 1646, 1670, 1671, 1673, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1727, 1731, 1732, 1734, 1736, 1747, 1749, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1782, 1783, 1785, 1796, 1804, 1805, 1809, 1810, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1859, 1861, 1863, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1896, 1898, 1900, 1912, 1914, 1916, 1917, 1919, 1921, 1930, 1932, 1938, 1940, 1942, 1943, 1945, 1952, 1953, 1955, 1958, 1960, 1962, 1963, 1965, 1967, 1968, 1982, 2007, 2018], "termcolor": [94, 97, 98, 99, 100], "constructor": [94, 97, 98, 99, 100, 148, 149, 166, 1258, 1265, 2019, 2020, 2031, 2032, 2043, 2060, 2062], "alphabet": [94, 97, 98, 99, 100], "le": [94, 99, 100], "lt": [94, 99, 100], "ne": [94, 99, 100], "75979435": [94, 99, 100], "52153397": [94, 99, 100], "13532257": [94, 99, 100], "rshift": [94, 99, 100], "143": [94, 99, 100, 109, 110, 150, 453, 754, 755, 757, 758], "truediv": [94, 99, 100], "66666669": [94, 99, 100], "60000002": [94, 99, 100, 136, 137, 1930, 1932], "key_chain": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 239, 241, 242, 245, 253, 255, 257, 258, 260, 261, 263, 265, 267, 269, 271, 272, 274, 276, 277, 279, 281, 282, 284, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 302, 304, 305, 306, 308, 310, 311, 313, 315, 316, 318, 319, 321, 330, 332, 334, 335, 337, 339, 340, 342, 344, 345, 347, 349, 353, 355, 358, 359, 361, 363, 365, 367, 368, 370, 371, 373, 374, 376, 378, 381, 383, 385, 386, 388, 390, 391, 393, 395, 396, 398, 400, 403, 405, 407, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 784, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 821, 823, 824, 825, 827, 828, 831, 834, 838, 839, 841, 843, 854, 858, 860, 862, 864, 865, 869, 870, 874, 876, 880, 881, 883, 885, 886, 888, 890, 917, 921, 923, 927, 928, 932, 933, 937, 938, 942, 943, 947, 948, 952, 953, 957, 961, 965, 968, 972, 974, 975, 977, 978, 981, 982, 986, 987, 991, 992, 994, 996, 997, 1001, 1005, 1007, 1009, 1015, 1019, 1020, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1035, 1037, 1048, 1050, 1052, 1059, 1063, 1094, 1096, 1098, 1099, 1101, 1103, 1104, 1106, 1108, 1109, 1111, 1113, 1114, 1118, 1120, 1124, 1125, 1127, 1129, 1130, 1132, 1134, 1135, 1139, 1140, 1144, 1145, 1149, 1155, 1157, 1159, 1161, 1163, 1165, 1166, 1168, 1170, 1175, 1177, 1179, 1182, 1186, 1187, 1189, 1191, 1206, 1207, 1209, 1211, 1212, 1214, 1219, 1220, 1221, 1223, 1224, 1225, 1227, 1228, 1233, 1234, 1235, 1237, 1238, 1242, 1243, 1245, 1247, 1248, 1250, 1252, 1253, 1255, 1259, 1261, 1263, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1341, 1343, 1345, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1463, 1465, 1481, 1482, 1484, 1491, 1493, 1495, 1496, 1498, 1500, 1501, 1503, 1505, 1506, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1523, 1525, 1527, 1528, 1530, 1532, 1535, 1537, 1539, 1540, 1542, 1544, 1545, 1547, 1549, 1550, 1552, 1554, 1556, 1558, 1560, 1561, 1563, 1565, 1566, 1568, 1570, 1571, 1573, 1575, 1576, 1578, 1580, 1582, 1584, 1586, 1587, 1589, 1591, 1592, 1594, 1596, 1597, 1599, 1601, 1602, 1604, 1606, 1607, 1609, 1611, 1612, 1614, 1616, 1617, 1619, 1621, 1622, 1624, 1626, 1627, 1629, 1631, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1653, 1655, 1657, 1658, 1660, 1662, 1663, 1664, 1670, 1671, 1673, 1675, 1676, 1680, 1681, 1683, 1685, 1686, 1688, 1690, 1691, 1693, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1722, 1724, 1726, 1727, 1729, 1731, 1732, 1734, 1736, 1737, 1739, 1741, 1742, 1744, 1746, 1747, 1749, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1772, 1773, 1775, 1777, 1778, 1780, 1782, 1783, 1785, 1787, 1788, 1790, 1796, 1810, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1859, 1861, 1863, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1912, 1914, 1916, 1917, 1919, 1921, 1922, 1924, 1926, 1928, 1930, 1932, 1934, 1936, 1938, 1940, 1942, 1943, 1945, 1947, 1948, 1950, 1952, 1953, 1955, 1958, 1960, 1962, 1963, 1965, 1967], "to_appli": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 239, 241, 242, 245, 253, 255, 257, 258, 260, 261, 263, 265, 267, 269, 271, 272, 274, 276, 277, 279, 281, 282, 284, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 302, 304, 305, 306, 308, 310, 311, 313, 315, 316, 318, 319, 321, 330, 332, 334, 335, 337, 339, 340, 342, 344, 345, 347, 349, 353, 355, 358, 359, 361, 363, 365, 367, 368, 370, 371, 373, 374, 376, 378, 381, 383, 385, 386, 388, 390, 391, 393, 395, 396, 398, 400, 403, 405, 407, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 784, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 821, 823, 824, 825, 827, 828, 831, 834, 838, 839, 841, 843, 854, 858, 860, 862, 864, 865, 869, 870, 874, 876, 880, 881, 883, 885, 886, 888, 890, 917, 921, 923, 927, 928, 932, 933, 937, 938, 942, 943, 947, 948, 952, 953, 957, 961, 965, 968, 972, 974, 975, 977, 978, 981, 982, 986, 987, 991, 992, 994, 996, 997, 1001, 1005, 1007, 1009, 1015, 1019, 1020, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1035, 1037, 1048, 1050, 1052, 1059, 1063, 1094, 1096, 1098, 1099, 1101, 1103, 1104, 1106, 1108, 1109, 1111, 1113, 1114, 1118, 1120, 1124, 1125, 1127, 1129, 1130, 1132, 1134, 1135, 1139, 1140, 1144, 1145, 1149, 1155, 1157, 1159, 1161, 1163, 1165, 1166, 1168, 1170, 1175, 1177, 1179, 1182, 1186, 1187, 1189, 1191, 1206, 1207, 1209, 1211, 1212, 1214, 1219, 1220, 1221, 1223, 1224, 1225, 1227, 1228, 1233, 1234, 1235, 1237, 1238, 1242, 1243, 1245, 1247, 1248, 1250, 1252, 1253, 1255, 1259, 1261, 1263, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1341, 1343, 1345, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1463, 1465, 1481, 1482, 1484, 1491, 1493, 1495, 1496, 1498, 1500, 1501, 1503, 1505, 1506, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1523, 1525, 1527, 1528, 1530, 1532, 1535, 1537, 1539, 1540, 1542, 1544, 1545, 1547, 1549, 1550, 1552, 1554, 1556, 1558, 1560, 1561, 1563, 1565, 1566, 1568, 1570, 1571, 1573, 1575, 1576, 1578, 1580, 1582, 1584, 1586, 1587, 1589, 1591, 1592, 1594, 1596, 1597, 1599, 1601, 1602, 1604, 1606, 1607, 1609, 1611, 1612, 1614, 1616, 1617, 1619, 1621, 1622, 1624, 1626, 1627, 1629, 1631, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1653, 1655, 1657, 1658, 1660, 1662, 1663, 1664, 1670, 1671, 1673, 1675, 1676, 1680, 1681, 1683, 1685, 1686, 1688, 1690, 1691, 1693, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1722, 1724, 1726, 1727, 1729, 1731, 1732, 1734, 1736, 1737, 1739, 1741, 1742, 1744, 1746, 1747, 1749, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1772, 1773, 1775, 1777, 1778, 1780, 1782, 1783, 1785, 1787, 1788, 1790, 1796, 1810, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1859, 1861, 1863, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1912, 1914, 1916, 1917, 1919, 1921, 1922, 1924, 1926, 1928, 1930, 1932, 1934, 1936, 1938, 1940, 1942, 1943, 1945, 1947, 1948, 1950, 1952, 1953, 1955, 1958, 1960, 1962, 1963, 1965, 1967], "prune_unappli": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 239, 241, 242, 245, 253, 255, 257, 258, 260, 261, 263, 265, 267, 269, 271, 272, 274, 276, 277, 279, 281, 282, 284, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 302, 304, 305, 306, 308, 310, 311, 313, 315, 316, 318, 319, 321, 330, 332, 334, 335, 337, 339, 340, 342, 344, 345, 347, 349, 353, 355, 358, 359, 361, 363, 365, 367, 368, 370, 371, 373, 374, 376, 378, 381, 383, 385, 386, 388, 390, 391, 393, 395, 396, 398, 400, 403, 405, 407, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 784, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 821, 823, 824, 825, 827, 828, 831, 834, 838, 839, 841, 843, 854, 858, 860, 862, 864, 865, 869, 870, 874, 876, 880, 881, 883, 885, 886, 888, 890, 917, 921, 923, 927, 928, 932, 933, 937, 938, 942, 943, 947, 948, 952, 953, 957, 961, 965, 968, 972, 974, 975, 977, 978, 981, 982, 986, 987, 991, 992, 994, 996, 997, 1001, 1005, 1007, 1009, 1015, 1019, 1020, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1035, 1037, 1048, 1050, 1052, 1059, 1063, 1099, 1101, 1103, 1104, 1106, 1108, 1109, 1111, 1113, 1114, 1118, 1120, 1124, 1125, 1127, 1129, 1130, 1132, 1134, 1135, 1139, 1140, 1144, 1145, 1149, 1155, 1157, 1159, 1161, 1163, 1165, 1166, 1168, 1170, 1175, 1177, 1179, 1182, 1186, 1187, 1189, 1191, 1206, 1207, 1209, 1211, 1212, 1214, 1219, 1220, 1221, 1223, 1224, 1225, 1227, 1228, 1233, 1234, 1235, 1237, 1238, 1242, 1243, 1245, 1247, 1248, 1250, 1252, 1253, 1255, 1259, 1261, 1263, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1341, 1343, 1345, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1463, 1465, 1481, 1482, 1484, 1491, 1493, 1495, 1496, 1498, 1500, 1501, 1503, 1505, 1506, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1523, 1525, 1527, 1528, 1530, 1532, 1535, 1537, 1539, 1540, 1542, 1544, 1545, 1547, 1549, 1550, 1552, 1554, 1556, 1558, 1560, 1561, 1563, 1565, 1566, 1568, 1570, 1571, 1573, 1575, 1576, 1578, 1580, 1582, 1584, 1586, 1587, 1589, 1591, 1592, 1594, 1596, 1597, 1599, 1601, 1602, 1604, 1606, 1607, 1609, 1611, 1612, 1614, 1616, 1617, 1619, 1621, 1622, 1624, 1626, 1627, 1629, 1631, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1653, 1655, 1657, 1658, 1660, 1662, 1663, 1664, 1670, 1671, 1673, 1675, 1676, 1680, 1681, 1683, 1685, 1686, 1688, 1690, 1691, 1693, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1722, 1724, 1726, 1727, 1729, 1731, 1732, 1734, 1736, 1737, 1739, 1741, 1742, 1744, 1746, 1747, 1749, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1772, 1773, 1775, 1777, 1778, 1780, 1782, 1783, 1785, 1787, 1788, 1790, 1796, 1810, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1859, 1861, 1863, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1912, 1914, 1916, 1917, 1919, 1921, 1922, 1924, 1926, 1928, 1930, 1932, 1934, 1936, 1938, 1940, 1942, 1943, 1945, 1947, 1948, 1950, 1952, 1953, 1955, 1958, 1960, 1962, 1963, 1965, 1967], "map_sequ": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 239, 241, 242, 245, 253, 255, 257, 258, 260, 261, 263, 265, 267, 269, 271, 272, 274, 276, 277, 279, 281, 282, 284, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 302, 304, 305, 306, 308, 310, 311, 313, 315, 316, 318, 319, 321, 330, 332, 334, 335, 337, 339, 340, 342, 344, 345, 347, 349, 353, 355, 358, 359, 361, 363, 365, 367, 368, 370, 371, 373, 374, 376, 378, 381, 383, 385, 386, 388, 390, 391, 393, 395, 396, 398, 400, 403, 405, 407, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 784, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 821, 823, 824, 825, 827, 828, 831, 834, 838, 839, 841, 843, 854, 858, 860, 862, 864, 865, 869, 870, 874, 876, 880, 881, 883, 885, 886, 888, 890, 917, 921, 923, 927, 928, 932, 933, 937, 938, 942, 943, 947, 948, 952, 953, 957, 961, 965, 968, 972, 974, 975, 977, 978, 981, 982, 986, 987, 991, 992, 994, 996, 997, 1001, 1005, 1007, 1009, 1015, 1019, 1020, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1035, 1037, 1048, 1050, 1052, 1059, 1063, 1099, 1101, 1103, 1104, 1106, 1108, 1109, 1111, 1113, 1114, 1118, 1120, 1124, 1125, 1127, 1129, 1130, 1132, 1134, 1135, 1139, 1140, 1144, 1145, 1149, 1155, 1157, 1159, 1161, 1163, 1165, 1166, 1168, 1170, 1175, 1177, 1179, 1182, 1186, 1187, 1189, 1191, 1206, 1207, 1209, 1211, 1212, 1214, 1219, 1220, 1221, 1223, 1224, 1225, 1227, 1228, 1233, 1234, 1235, 1237, 1238, 1242, 1243, 1245, 1247, 1248, 1250, 1252, 1253, 1255, 1259, 1261, 1263, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1341, 1343, 1345, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1463, 1465, 1481, 1482, 1484, 1491, 1493, 1495, 1496, 1498, 1500, 1501, 1503, 1505, 1506, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1523, 1525, 1527, 1528, 1530, 1532, 1535, 1537, 1539, 1540, 1542, 1544, 1545, 1547, 1549, 1550, 1552, 1554, 1556, 1558, 1560, 1561, 1563, 1565, 1566, 1568, 1570, 1571, 1573, 1575, 1576, 1578, 1580, 1582, 1584, 1586, 1587, 1589, 1591, 1592, 1594, 1596, 1597, 1599, 1601, 1602, 1604, 1606, 1607, 1609, 1611, 1612, 1614, 1616, 1617, 1619, 1621, 1622, 1624, 1626, 1627, 1629, 1631, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1653, 1655, 1657, 1658, 1660, 1662, 1663, 1664, 1670, 1671, 1673, 1675, 1676, 1680, 1681, 1683, 1685, 1686, 1688, 1690, 1691, 1693, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1722, 1724, 1726, 1727, 1729, 1731, 1732, 1734, 1736, 1737, 1739, 1741, 1742, 1744, 1746, 1747, 1749, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1772, 1773, 1775, 1777, 1778, 1780, 1782, 1783, 1785, 1787, 1788, 1790, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1859, 1861, 1863, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1912, 1914, 1916, 1917, 1919, 1921, 1922, 1924, 1926, 1928, 1930, 1932, 1934, 1936, 1938, 1940, 1942, 1943, 1945, 1947, 1948, 1950, 1952, 1953, 1955, 1958, 1960, 1962, 1963, 1965, 1967], "static_adam_step": [94, 99, 100], "static_adam_upd": [94, 99, 100], "static_arg_info": [94, 99, 100], "static_arg_nam": [94, 99, 100], "static_arrai": [94, 99, 100], "static_array_equ": [94, 99, 100], "static_as_ivy_dev": [94, 99, 100], "static_as_ivy_dtyp": [94, 99, 100], "static_as_native_dev": [94, 99, 100], "static_as_native_dtyp": [94, 99, 100], "static_asarray_handle_nest": [94, 99, 100], "static_asarray_infer_devic": [94, 99, 100], "static_asarray_to_native_arrays_and_back": [94, 99, 100], "static_cache_fn": [94, 99, 100], "static_check_float": [94, 99, 100], "static_clear_mem_on_dev": [94, 99, 100], "static_closest_valid_dtyp": [94, 99, 100], "static_container_typ": [94, 99, 100], "static_conv": [94, 99, 100], "static_conv_general_dil": [94, 99, 100], "static_conv_general_transpos": [94, 99, 100], "static_copy_arrai": [94, 99, 100, 237, 249, 251], "static_current_backend": [94, 99, 100], "static_current_backend_str": [94, 99, 100], "static_deconv_length": [94, 99, 100], "static_default": [94, 99, 100], "static_default_devic": [94, 99, 100], "static_default_dtyp": [94, 99, 100], "static_default_int_dtyp": [94, 99, 100], "static_default_uint_dtyp": [94, 99, 100], "static_deseri": [94, 99, 100], "static_dev_util": [94, 99, 100], "static_dtype_bit": [94, 99, 100], "static_einsum": [94, 99, 100], "static_empti": [94, 99, 100], "static_execute_with_gradi": [94, 99, 100], "static_exist": [94, 99, 100], "static_ful": [94, 99, 100], "static_function_supported_devic": [94, 99, 100], "static_function_supported_devices_and_dtyp": [94, 99, 100], "static_function_unsupported_devic": [94, 99, 100], "static_function_unsupported_devices_and_dtyp": [94, 99, 100], "static_get": [94, 99, 100], "static_get_all_arrays_in_memori": [94, 99, 100], "static_get_all_ivy_arrays_on_dev": [94, 99, 100], "static_get_array_mod": [94, 99, 100], "static_get_exception_trace_mod": [94, 99, 100], "static_get_item": [94, 99, 100], "static_get_min_bas": [94, 99, 100], "static_get_min_denomin": [94, 99, 100], "static_get_nestable_mod": [94, 99, 100], "static_get_queue_timeout": [94, 99, 100], "static_get_referrers_recurs": [94, 99, 100], "static_get_show_func_wrapper_trace_mod": [94, 99, 100], "static_get_tmp_dir": [94, 99, 100], "static_get_x_data_format": [94, 99, 100], "static_gpu_is_avail": [94, 99, 100], "static_grad": [94, 99, 100], "static_gradient_descent_upd": [94, 99, 100], "static_handle_array_lik": [94, 99, 100], "static_handle_except": [94, 99, 100], "static_handle_nest": [94, 99, 100], "static_handle_out_argu": [94, 99, 100], "static_handle_pad": [94, 99, 100], "static_infer_default_dtyp": [94, 99, 100], "static_infer_devic": [94, 99, 100], "static_infer_dtyp": [94, 99, 100], "static_inplace_arrays_support": [94, 99, 100], "static_inplace_variables_support": [94, 99, 100], "static_inputs_to_ivy_arrai": [94, 99, 100], "static_inputs_to_native_arrai": [94, 99, 100], "static_integer_arrays_to_float": [94, 99, 100], "static_invalid_dtyp": [94, 99, 100], "static_is_ivy_contain": [94, 99, 100], "static_isscalar": [94, 99, 100], "static_jac": [94, 99, 100], "static_lamb_upd": [94, 99, 100], "static_lars_upd": [94, 99, 100], "static_layer_norm": [94, 99, 100], "static_match_kwarg": [94, 99, 100], "static_max": [94, 99, 100], "static_mean": [94, 99, 100], "static_min": [94, 99, 100], "static_multiprocess": [94, 99, 100], "static_normalize_axis_tupl": [94, 99, 100], "static_num_arrays_in_memori": [94, 99, 100], "static_num_cpu_cor": [94, 99, 100], "static_num_gpu": [94, 99, 100], "static_num_ivy_arrays_on_dev": [94, 99, 100], "static_optimizer_upd": [94, 99, 100], "static_outputs_to_ivy_arrai": [94, 99, 100], "static_percent_used_mem_on_dev": [94, 99, 100], "static_print_all_arrays_in_memori": [94, 99, 100], "static_print_all_ivy_arrays_on_dev": [94, 99, 100], "static_promote_typ": [94, 99, 100], "static_promote_types_of_input": [94, 99, 100], "static_se": [94, 99, 100], "static_set_array_mod": [94, 99, 100], "static_set_default_devic": [94, 99, 100], "static_set_default_dtyp": [94, 99, 100], "static_set_default_float_dtyp": [94, 99, 100], "static_set_default_int_dtyp": [94, 99, 100], "static_set_default_uint_dtyp": [94, 99, 100], "static_set_exception_trace_mod": [94, 99, 100], "static_set_min_bas": [94, 99, 100], "static_set_min_denomin": [94, 99, 100], "static_set_nestable_mod": [94, 99, 100], "static_set_queue_timeout": [94, 99, 100], "static_set_shape_array_mod": [94, 99, 100], "static_set_show_func_wrapper_trace_mod": [94, 99, 100], "static_set_split_factor": [94, 99, 100], "static_set_tmp_dir": [94, 99, 100], "static_set_with_grad": [94, 99, 100], "static_shap": [94, 99, 100], "static_shape_array_mod": [94, 99, 100], "static_split_factor": [94, 99, 100], "static_split_func_cal": [94, 99, 100], "static_std": [94, 99, 100], "static_tensorsolv": [94, 99, 100], "static_to_ivy_shap": [94, 99, 100], "static_to_native_arrays_and_back": [94, 99, 100], "static_to_native_shap": [94, 99, 100], "static_total_mem_on_dev": [94, 99, 100], "static_tpu_is_avail": [94, 99, 100], "static_try_else_non": [94, 99, 100], "static_type_promote_arrai": [94, 99, 100], "static_unset_array_mod": [94, 99, 100], "static_unset_default_devic": [94, 99, 100], "static_unset_default_dtyp": [94, 99, 100], "static_unset_default_float_dtyp": [94, 99, 100], "static_unset_default_int_dtyp": [94, 99, 100], "static_unset_default_uint_dtyp": [94, 99, 100], "static_unset_exception_trace_mod": [94, 99, 100], "static_unset_nestable_mod": [94, 99, 100], "static_unset_queue_timeout": [94, 99, 100], "static_unset_shape_array_mod": [94, 99, 100], "static_unset_show_func_wrapper_trace_mod": [94, 99, 100], "static_unset_with_grad": [94, 99, 100], "static_used_mem_on_dev": [94, 99, 100], "static_valid_dtyp": [94, 99, 100], "static_value_and_grad": [94, 99, 100], "static_vmap": [94, 99, 100], "static_with_grad": [94, 99, 100], "static_wrap": [94, 99, 100], "containerbas": [95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 146, 1010, 1014], "formul": [95, 96, 198, 200, 202], "chain": [95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 158, 168, 169, 181, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 267, 269, 271, 292, 294, 296, 300, 302, 304, 318, 319, 321, 335, 337, 339, 345, 347, 349, 386, 388, 390, 403, 405, 407, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 819, 821, 823, 839, 841, 843, 933, 937, 1005, 1007, 1009, 1155, 1157, 1159, 1175, 1177, 1179, 1187, 1189, 1191, 1211, 1212, 1214, 1247, 1248, 1250, 1252, 1253, 1255, 1259, 1261, 1263, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1463, 1465, 1481, 1482, 1484, 1528, 1530, 1532, 1535, 1537, 1539, 1550, 1552, 1554, 1556, 1558, 1560, 1561, 1563, 1565, 1587, 1589, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1609, 1611, 1617, 1619, 1621, 1642, 1644, 1646, 1670, 1671, 1673, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1727, 1731, 1732, 1734, 1736, 1747, 1749, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1782, 1783, 1785, 1792, 1793, 1794, 1796, 1799, 1810, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1859, 1861, 1863, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1896, 1898, 1900, 1912, 1914, 1916, 1917, 1919, 1921, 1930, 1932, 1938, 1940, 1942, 1943, 1945, 1952, 1953, 1955, 1958, 1960, 1962, 1963, 1965, 1967, 1981, 1995, 1996, 2031, 2032], "prune": [95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 147, 198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 267, 269, 271, 292, 294, 296, 300, 302, 304, 318, 319, 321, 335, 337, 339, 345, 347, 349, 386, 388, 390, 403, 405, 407, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 789, 791, 793, 794, 796, 798, 799, 801, 803, 819, 821, 823, 839, 841, 843, 933, 937, 1005, 1007, 1009, 1155, 1157, 1159, 1175, 1177, 1179, 1187, 1189, 1191, 1206, 1207, 1209, 1211, 1212, 1214, 1247, 1248, 1250, 1252, 1253, 1255, 1259, 1261, 1263, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1463, 1465, 1481, 1482, 1484, 1528, 1530, 1532, 1535, 1537, 1539, 1550, 1552, 1554, 1556, 1558, 1560, 1561, 1563, 1565, 1587, 1589, 1591, 1597, 1599, 1602, 1604, 1606, 1607, 1609, 1611, 1617, 1619, 1621, 1642, 1644, 1646, 1670, 1671, 1673, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1727, 1731, 1732, 1734, 1736, 1747, 1749, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1782, 1783, 1785, 1796, 1810, 1811, 1812, 1813, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1859, 1861, 1863, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1896, 1898, 1900, 1912, 1914, 1916, 1917, 1919, 1921, 1930, 1932, 1938, 1940, 1942, 1943, 1945, 1952, 1953, 1955, 1958, 1960, 1962, 1963, 1965, 1967, 2064], "slope": [95, 96, 196, 204, 206, 207, 208], "leaki": [95, 96, 196, 204, 206, 207, 208], "38999999": [95, 96, 204, 206, 208], "371": [95, 96, 209, 211, 213], "rectifi": [95, 96, 196, 204, 207, 214, 216, 217, 218], "2689414": [95, 96, 219, 221, 223, 224, 226, 228], "7310586": [95, 96, 219, 221, 223, 224, 226, 228], "88079703": [95, 96, 219, 221, 223], "62245935": [95, 96, 219, 221, 223], "4750208": [95, 96, 219, 221, 223], "72844321": [95, 96, 224, 226, 228], "19852395": [95, 96, 224, 226, 228], "07303288": [95, 96, 224, 226, 228], "revert": [95, 96, 196, 229, 231, 232, 233], "948": [95, 96, 229, 231, 233], "static_gelu": [95, 96, 198], "static_leaky_relu": [95, 96, 204], "static_log_softmax": [95, 96, 209], "static_relu": [95, 96, 214], "static_sigmoid": [95, 96, 219], "static_softmax": [95, 96, 224], "static_softplu": [95, 96, 229], "53499615": [95, 96, 229, 233], "42036411": [95, 96, 229, 233], "31326175": [95, 96, 229, 233], "69314718": [95, 96, 229, 233], "__getitem__": [97, 98, 146], "slice": [97, 98, 112, 113, 844, 849, 850, 1071, 1090, 1206, 1210, 1219, 1222, 1223, 1226, 1258, 1315, 1318, 1320, 1323, 1324, 1328, 1796, 1806, 1981], "__setitem__": [97, 98, 144, 146, 166], "cont_all_fals": [97, 98], "assert_is_bool": [97, 98], "cont_all_key_chain": [97, 98], "include_empti": [97, 98], "cont_all_tru": [97, 98, 146, 167], "cont_as_bool": [97, 98], "cont_assert_contains_sub_contain": [97, 98], "sub_cont": [97, 98], "cont_assert_contains_sub_structur": [97, 98], "cont_assert_ident": [97, 98], "check_typ": [97, 98], "same_arrai": [97, 98, 167], "arrays_equ": [97, 98], "cont_assert_identical_structur": [97, 98], "cont_at_key_chain": [97, 98], "ignore_key_error": [97, 98], "ignore_non": [97, 98], "cont_at_kei": [97, 98], "substr": [97, 98], "cont_combin": [97, 98], "duplic": [97, 98, 145, 151, 153, 156, 159, 168, 1796, 1799, 1987], "container_rightmost": [97, 98], "cont_common_key_chain": [97, 98, 146], "cont_config": [97, 98], "cont_contains_sub_contain": [97, 98], "cont_contains_sub_structur": [97, 98], "cont_copi": [97, 98, 167], "cont_create_if_abs": [97, 98], "noth": [97, 98, 162, 1987], "cont_cutoff_at_depth": [97, 98], "depth_cutoff": [97, 98], "cont_cutoff_at_height": [97, 98], "height_cutoff": [97, 98], "cont_deep_copi": [97, 98, 167], "intern": [97, 98, 144, 146, 149, 151, 157, 1796, 1797, 1807, 1808, 1975, 1976, 1997, 1998, 2001, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2031, 2032], "cont_dev": [97, 98], "cont_dev_str": [97, 98], "cont_diff": [97, 98, 146, 167], "diff_kei": [97, 98], "detect_key_diff": [97, 98], "detect_value_diff": [97, 98], "detect_shape_diff": [97, 98], "treat": [97, 98, 160, 165, 169, 234, 235, 891, 910, 1145, 1148, 2043, 2059, 2060, 2062], "container0": [97, 98], "cont_duplicate_array_keychain": [97, 98], "cont_find_sub_contain": [97, 98], "sub_cont_to_find": [97, 98], "exsit": [97, 98], "cont_find_sub_structur": [97, 98], "sub_struc_to_find": [97, 98], "cont_flatten_key_chain": [97, 98, 167], "__": [97, 98, 150, 167], "above_height": [97, 98, 167], "below_depth": [97, 98, 167], "cont_format_key_chain": [97, 98], "format_fn": [97, 98], "string": [97, 98, 145, 148, 149, 152, 153, 164, 167, 196, 197, 203, 323, 328, 329, 358, 360, 380, 417, 418, 419, 421, 422, 423, 424, 430, 438, 444, 448, 449, 452, 1071, 1088, 1161, 1164, 1258, 1286, 1555, 1587, 1590, 1995, 1996, 2043, 2059, 2060, 2062, 2086, 2089], "cont_from_disk_as_hdf5": [97, 98, 167], "h5_obj_or_filepath": [97, 98], "slice_obj": [97, 98], "load": [97, 98, 181, 1980, 1987], "disk": [97, 98, 167, 1980], "h5py": [97, 98], "hdf5": [97, 98, 167, 2019, 2020], "h5": [97, 98], "cont_from_disk_as_json": [97, 98, 167], "json_filepath": [97, 98], "cont_from_disk_as_pickl": [97, 98, 167], "pickle_filepath": [97, 98], "pickl": [97, 98, 146, 167], "cont_from_flat_list": [97, 98], "flat_list": [97, 98], "flat": [97, 98, 1201, 1205, 1227, 1231, 1258, 1386, 1389, 1711, 1742, 1745, 1995, 1996], "cont_handle_inplac": [97, 98], "prime": [97, 98], "overwritten": [97, 98, 144, 145], "cont_has_kei": [97, 98], "query_kei": [97, 98], "somewher": [97, 98], "cont_has_key_chain": [97, 98], "cont_ident": [97, 98, 167], "cont_identical_array_shap": [97, 98], "cont_identical_config": [97, 98], "cont_identical_structur": [97, 98], "cont_if_exist": [97, 98], "cont_inplace_upd": [97, 98], "cont_ivi": [97, 98], "cont_key_chains_contain": [97, 98], "sub_str": [97, 98], "cont_list_stack": [97, 98, 167], "cont_map": [97, 98, 146, 167], "cont_map_sub_cont": [97, 98], "include_self": [97, 98], "possibi": [97, 98], "cont_max_depth": [97, 98], "cont_multi_map": [97, 98, 146], "map_nest": [97, 98], "assert_ident": [97, 98], "leftmost": [97, 98, 1796, 1810], "cont_multi_map_in_funct": [97, 98, 146], "cont_num_arrai": [97, 98], "cont_overwrite_at_key_chain": [97, 98], "target_dict": [97, 98], "return_dict": [97, 98], "cont_prune_empti": [97, 98], "keep_non": [97, 98], "cont_prune_key_chain": [97, 98], "key1": [97, 98, 168], "key2": [97, 98], "key3": [97, 98], "cont_prune_key_from_key_chain": [97, 98], "cont_prune_kei": [97, 98], "cont_prune_keys_from_key_chain": [97, 98], "cont_reduc": [97, 98], "cont_remove_key_length_limit": [97, 98], "cont_remove_print_limit": [97, 98], "cont_reshape_lik": [97, 98], "leading_shap": [97, 98], "return_cont": [97, 98], "cont_restructur": [97, 98], "keep_orig": [97, 98], "cont_restructure_key_chain": [97, 98], "keychain_map": [97, 98], "cont_set_at_key_chain": [97, 98], "cont_set_at_kei": [97, 98], "cont_shap": [97, 98, 1489, 1510, 1513], "attribut": [97, 98, 146, 148, 151, 156, 157, 165, 166, 167, 168, 323, 363, 366, 368, 369, 371, 372, 374, 377, 418, 431, 432, 439, 1258, 1313, 1314, 2064, 2065], "cont_show": [97, 98], "cont_show_sub_contain": [97, 98], "sub_cont_or_keychain": [97, 98], "cont_size_ordered_arrai": [97, 98], "keychain": [97, 98, 111, 789, 791, 793, 794, 796, 798, 799, 801, 803, 1206, 1207, 1209], "cont_slice_kei": [97, 98], "key_slic": [97, 98], "all_depth": [97, 98], "cont_slice_via_kei": [97, 98], "slice_kei": [97, 98], "cont_sort_by_kei": [97, 98], "cont_structural_diff": [97, 98], "cont_to_dict": [97, 98], "cont_to_disk_as_hdf5": [97, 98, 167], "starting_index": [97, 98], "max_batch_s": [97, 98], "cont_to_disk_as_json": [97, 98, 167], "cont_to_disk_as_pickl": [97, 98, 167], "cont_to_flat_list": [97, 98], "cont_to_iter": [97, 98, 146], "leaf_keys_onli": [97, 98], "cont_to_iterator_kei": [97, 98], "cont_to_iterator_valu": [97, 98], "cont_to_json": [97, 98], "cont_to_nested_list": [97, 98], "cont_to_raw": [97, 98], "raw": [97, 98, 151, 1982], "cont_trim_kei": [97, 98], "max_length": [97, 98], "trim": [97, 98], "cont_try_kc": [97, 98], "tri": [97, 98, 2064, 2065], "cont_unifi": [97, 98], "concatten": [97, 98, 418, 443], "cont_unstack_cont": [97, 98], "dim_siz": [97, 98, 1489, 1522], "cont_update_config": [97, 98], "cont_with_default_key_color": [97, 98], "cont_with_entries_as_list": [97, 98], "cont_with_ivy_backend": [97, 98], "ivy_backend": [97, 98], "cont_with_key_length_limit": [97, 98, 167], "cont_with_print_ind": [97, 98, 167], "cont_with_print_limit": [97, 98, 167], "cont_with_print_line_spac": [97, 98], "h5_file_s": [97, 98], "shuffle_h5_fil": [97, 98], "seed_valu": [97, 98, 1821, 1842], "dataset": [97, 98, 167, 179, 1969, 2072, 2083], "split_cont": [97, 98], "constitu": [97, 98, 169], "static_to_ivi": [101, 102], "static_to_n": [101, 102], "2324": [103, 104, 237, 267, 269, 270, 271], "234": [103, 104, 109, 110, 237, 267, 269, 270, 271, 453, 559, 561, 563, 764, 765, 767, 768, 1489, 1535, 1538], "123": [103, 104, 160, 237, 267, 269, 270, 271, 1258, 1305, 1307], "15443469": [103, 104, 277, 279, 281], "64158883": [103, 104, 277, 279, 281], "5443469": [103, 104, 237, 277, 279, 280], "static_arang": [103, 104, 239], "static_asarrai": [103, 104, 242], "static_empty_lik": [103, 104, 253], "static_ey": [103, 104, 258], "n_row": [103, 104, 111, 237, 258, 259, 260, 844, 849, 850, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226], "n_col": [103, 104, 111, 237, 258, 259, 260, 844, 849, 850, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226], "static_from_dlpack": [103, 104, 261], "static_full_lik": [103, 104, 267], "static_linspac": [103, 104, 272], "static_logspac": [103, 104, 277], "static_meshgrid": [103, 104, 282], "static_native_arrai": [103, 104, 287], "static_one_hot": [103, 104, 292], "static_on": [103, 104, 297], "static_ones_lik": [103, 104, 300], "static_tril": [103, 104, 305], "static_triu": [103, 104, 310], "static_zero": [103, 104, 315], "static_zeros_lik": [103, 104, 318], "718": [105, 106, 109, 110, 323, 330, 332, 333, 334, 659, 661], "618": [105, 106, 109, 110, 323, 330, 332, 333, 334, 659, 661], "broadcats": [105, 106, 335, 337], "1800": [105, 106, 323, 374, 376, 377], "32768": [105, 106, 374, 376], "32767": [105, 106, 374, 376], "2147483648": [105, 106, 323, 374, 376, 377], "2147483647": [105, 106, 323, 374, 376, 377], "static_astyp": [105, 106, 330], "static_broadcast_arrai": [105, 106, 335], "And": [105, 106, 160, 335, 339], "static_broadcast_to": [105, 106, 340], "static_can_cast": [105, 106, 345], "from_": [105, 106, 323, 345, 348, 349], "static_default_float_dtyp": [105, 106, 353], "float_dtyp": [105, 106, 323, 325, 326, 353, 354, 355, 409], "static_dtyp": [105, 106, 358], "static_finfo": [105, 106, 363], "static_function_supported_dtyp": [105, 106, 368], "static_function_unsupported_dtyp": [105, 106, 371], "static_iinfo": [105, 106, 374], "static_is_bool_dtyp": [105, 106, 381], "dtype_in": [105, 106, 323, 328, 329, 362, 380, 381, 384, 385, 386, 389, 390, 391, 394, 395, 396, 399, 400, 417, 852, 853, 1003], "static_is_float_dtyp": [105, 106, 386], "static_is_int_dtyp": [105, 106, 391], "static_is_uint_dtyp": [105, 106, 396], "static_result_typ": [105, 106, 403], "contaion": [107, 108, 425, 427], "static_dev": [107, 108, 425], "static_to_devic": [107, 108, 444], "524": [109, 110, 453, 474, 476, 477, 478], "644": [109, 110, 168, 453, 474, 476, 477], "305": [109, 110, 111, 118, 119, 453, 474, 476, 477, 824, 825, 826, 827, 1069, 1070, 1535, 1537, 1539], "915": [109, 110, 453, 489, 491, 492, 493], "29": [109, 110, 112, 113, 114, 115, 128, 129, 453, 489, 491, 492, 493, 1258, 1295, 1298, 1299, 1451, 1468, 1470, 1471, 1827, 1829, 1832, 1834, 1837, 1839, 1841], "983": [109, 110, 453, 489, 491, 492, 493], "978": [109, 110, 196, 219, 222, 453, 489, 491, 492, 493], "696": [109, 110, 128, 129, 453, 489, 491, 492, 493, 1832, 1834], "993": [109, 110, 453, 489, 491, 492, 493], "203": [109, 110, 126, 127, 494, 496, 498, 1816, 1817, 1819, 1820], "34": [109, 110, 111, 112, 113, 128, 129, 323, 374, 377, 453, 524, 527, 539, 541, 543, 644, 647, 734, 736, 738, 814, 818, 1258, 1274, 1295, 1298, 1299, 1555, 1612, 1615, 1821, 1827, 1831, 1832, 1834, 1837, 1840], "351": [109, 110, 453, 544, 546, 547, 704, 706], "00613": [109, 110, 544, 546], "0154": [109, 110, 544, 546], "0262": [109, 110, 453, 544, 546, 547, 548, 704, 707], "873": [109, 110, 453, 544, 546, 547, 548, 704, 707], "333": [109, 110, 453, 549, 551, 552, 553, 1258, 1280, 1283, 1489, 1523, 1526], "thefunct": [109, 110, 559, 561, 569, 573, 574, 578], "27632612": [109, 110, 559, 561, 563], "934008": [109, 110, 559, 561, 563], "99999928": [109, 110, 559, 561, 563], "91903949": [109, 110, 559, 561, 563], "649": [109, 110, 569, 571], "220": [109, 110, 569, 571], "959": [109, 110, 453, 569, 571, 729, 731, 732, 733], "865": [109, 110, 569, 571], "metho": [109, 110, 589, 591, 639, 641], "999999999999": [109, 110, 453, 594, 596, 597, 598], "7j": [109, 110, 453, 609, 611, 612], "0j": [109, 110, 453, 609, 611, 612, 613], "898": [109, 110, 453, 629, 631, 632, 633], "0414": [109, 110, 453, 629, 631, 632, 633], "956": [109, 110, 634, 636], "nuner": [109, 110, 679, 681], "65": [109, 110, 114, 115, 128, 129, 453, 519, 522, 679, 681, 854, 857, 1038, 1042, 1258, 1347, 1350, 1451, 1453, 1455, 1456, 1555, 1627, 1630, 1832, 1834, 1837, 1839, 1911, 1922, 1925], "2860": [109, 110, 704, 706, 708], "413": [109, 110, 704, 706], "recirpoc": [109, 110, 709, 711, 713], "300": [109, 110, 112, 113, 160, 453, 719, 721, 722, 723, 1258, 1320, 1322, 1323, 1324, 1391, 1394, 1555, 1597, 1600], "527": [109, 110, 453, 719, 721, 722, 723], "301": [109, 110, 453, 719, 721, 722, 723], "757": [109, 110, 453, 729, 731, 732, 733], "279": [109, 110, 453, 729, 731, 732, 733, 854, 857, 1038, 1042, 1258, 1275, 1278], "835": [109, 110, 734, 736, 738], "347": [109, 110, 734, 736, 738], "721": [109, 110, 734, 736, 738], "93": [109, 110, 112, 113, 128, 129, 418, 430, 739, 741, 743, 1258, 1295, 1298, 1299, 1832, 1834, 1837, 1839], "static_ab": [109, 110, 454], "static_aco": [109, 110, 459], "static_acosh": [109, 110, 464], "static_add": [109, 110, 146, 150, 151, 469], "static_asin": [109, 110, 474], "412": [109, 110, 118, 119, 453, 474, 477, 478, 1535, 1539], "201": [109, 110, 111, 453, 474, 477, 478, 854, 856, 858], "static_asinh": [109, 110, 479], "static_atan": [109, 110, 484], "static_atan2": [109, 110, 489], "static_atanh": [109, 110, 494], "static_bitwise_and": [109, 110, 499], "static_bitwise_invert": [109, 110, 504], "static_bitwise_left_shift": [109, 110, 509], "static_bitwise_or": [109, 110, 514], "static_bitwise_right_shift": [109, 110, 519], "static_bitwise_xor": [109, 110, 524], "static_ceil": [109, 110, 529], "static_co": [109, 110, 534], "static_cosh": [109, 110, 539], "static_deg2rad": [109, 110, 544], "static_divid": [109, 110, 549, 769, 770], "static_equ": [109, 110, 554], "static_erf": [109, 110, 559], "static_exp": [109, 110, 564], "static_expm1": [109, 110, 569], "areal": [109, 110, 569, 573], "71828175": [109, 110, 569, 573], "38905621": [109, 110, 569, 573], "08553696": [109, 110, 569, 573], "59815216": [109, 110, 569, 573], "static_floor": [109, 110, 574], "static_floor_divid": [109, 110, 579], "static_great": [109, 110, 584], "static_greater_equ": [109, 110, 589], "static_isfinit": [109, 110, 594], "static_isinf": [109, 110, 599], "static_isnan": [109, 110, 604], "static_isr": [109, 110, 609], "23j": [109, 110, 609, 613], "9j": [109, 110, 609, 613], "static_less": [109, 110, 614], "static_less_equ": [109, 110, 619], "static_log": [109, 110, 624], "static_log10": [109, 110, 629], "static_log1p": [109, 110, 634], "static_log2": [109, 110, 639], "static_logaddexp": [109, 110, 644], "static_logical_and": [109, 110, 649], "static_logical_not": [109, 110, 654], "static_logical_or": [109, 110, 659], "static_logical_xor": [109, 110, 664], "static_maximum": [109, 110, 669], "static_minimum": [109, 110, 674], "static_multipli": [109, 110, 679], "static_neg": [109, 110, 684], "static_not_equ": [109, 110, 689], "static_posit": [109, 110, 694], "static_pow": [109, 110, 699], "static_rad2deg": [109, 110, 704], "5160": [109, 110, 704, 708], "10300": [109, 110, 453, 704, 707, 708], "15500": [109, 110, 704, 708], "20600": [109, 110, 704, 708], "static_reciproc": [109, 110, 709], "static_remaind": [109, 110, 714], "static_round": [109, 110, 719], "thevfunct": [109, 110, 719, 723], "static_sign": [109, 110, 724], "static_sin": [109, 110, 729], "static_sinh": [109, 110, 734], "static_sqrt": [109, 110, 739], "static_squar": [109, 110, 744], "static_subtract": [109, 110, 749], "static_tan": [109, 110, 146, 150, 754], "static_tanh": [109, 110, 759], "995": [109, 110, 453, 759, 760, 762, 763], "9999": [109, 110, 759, 760], "static_trapz": [109, 110], "static_trunc": [109, 110, 764], "static_trunc_divid": [109, 110, 769], "contan": [111, 1064, 1066, 1068], "19722462": [111, 1064, 1066, 1068], "84729779": [111, 1064, 1066, 1068], "static_logit": [111, 1064], "hamming_window": [111, 844, 977], "coeffici": [111, 844, 845, 974, 975, 976, 977, 1555, 1647, 1650], "ham": [111, 844, 845, 974, 975, 976, 977], "8000": [111, 844, 845, 974, 975, 976, 977], "2000": [111, 844, 845, 974, 975, 976, 977], "4180": [111, 974, 975, 977], "8180": [111, 974, 975, 977], "hann_window": [111, 844, 981], "hann": [111, 844, 846, 978, 979, 980, 981], "7500": [111, 978, 979, 981], "3455": [111, 978, 979, 981], "9045": [111, 978, 979, 981], "kaiser_bessel_derived_window": [111, 844, 1028], "spectral": [111, 844, 847, 848, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032], "analysi": [111, 844, 847, 848, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1981, 1982], "kaiser": [111, 844, 847, 848, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032], "70710677": [111, 844, 847, 1025, 1026, 1027, 1028], "18493208": [111, 844, 847, 1025, 1026, 1027, 1028], "9827513": [111, 844, 847, 1025, 1026, 1027, 1028], "kaiser_window": [111, 844, 1032], "static_kaiser_window": [111, 1029, 1030], "2049": [111, 1029, 1030, 1032], "8712": [111, 1029, 1030, 1032], "0367": [111, 844, 848, 1029, 1030, 1031, 1032], "7753": [111, 1029, 1030, 1032], "static_hamming_window": [111, 974], "static_hann_window": [111, 978], "window_length": [111, 844, 845, 846, 847, 848, 851, 974, 976, 978, 980, 981, 1025, 1027, 1029, 1031, 1032, 1233, 1236], "static_hann": [111, 978, 981], "static_kaiser_bessel_derived_window": [111, 1025], "static_tril_indic": [111, 1219], "static_triu_indic": [111, 1223], "static_vorbis_window": [111, 1233], "vorbis_window": [111, 844, 1234], "vorbi": [111, 844, 851, 1233, 1234, 1235, 1236], "38268343": [111, 1233, 1234, 1235], "92387953": [111, 1233, 1234, 1235], "14943586": [111, 844, 851, 1233, 1234, 1235, 1236], "51644717": [111, 1233, 1234, 1235], "85631905": [111, 1233, 1234, 1235], "98877142": [111, 1233, 1234, 1235], "tril_indic": [111, 844], "triu_indic": [111, 844], "0003": [111, 779, 781, 783, 1555, 1597, 1600, 2072, 2076, 2080, 2081, 2100, 2101, 2103], "0006": [111, 779, 781, 783, 1252, 1253, 1255], "75j": [111, 784, 786, 788], "01317055": [111, 784, 786, 788], "05634501": [111, 784, 786, 788], "115": [111, 453, 544, 547, 704, 707, 784, 786, 788, 854, 857, 1038, 1042], "3461759": [111, 784, 786, 788], "524111": [111, 784, 786, 788], "coord": [111, 968, 970], "1080": [111, 1048, 1050, 1052], "1550": [111, 1048, 1050, 1052], "130": [111, 1048, 1050, 1052], "08746284": [111, 1059, 1061, 1063], "32192809": [111, 1059, 1061, 1063], "000": [111, 1135, 1137], "0707": [111, 891, 913, 1187, 1189, 1190], "0579": [111, 891, 913, 1187, 1189, 1190], "static_allclos": [111, 779], "static_angl": [111, 784], "static_copysign": [111, 834], "static_count_nonzero": [111, 839], "static_exp2": [111, 917], "static_fix": [111, 923], "static_float_pow": [111, 943], "static_fmax": [111, 948], "static_fmod": [111, 953], "static_gcd": [111, 961], "static_gradi": [111, 968], "static_isclos": [111, 1005], "static_isneginf": [111, 1015], "static_isposinf": [111, 1020], "static_lcm": [111, 1048], "static_logaddexp2": [111, 1059], "static_nan_to_num": [111, 1135], "static_nansum": [111, 1145], "static_nextaft": [111, 1155], "static_signbit": [111, 1182], "static_sinc": [111, 1187], "636": [111, 1187, 1191], "090": [111, 1187, 1191], "070": [111, 1187, 1191], "057": [111, 1187, 1191], "static_xlogi": [111, 1247], "static_zeta": [111, 1252], "0244": [111, 1252, 1253, 1255], "static_isin": [111, 1010], "673": [111, 854, 856, 858], "0507": [111, 854, 856, 858], "static_avg_pool1d": [111, 804], "static_avg_pool2d": [111, 809], "static_avg_pool3d": [111, 814], "static_dct": [111, 854], "132": [111, 854, 858], "182": [111, 854, 858], "242": [111, 854, 858], "253": [111, 453, 734, 737, 854, 858], "515": [111, 854, 858, 1821, 1832, 1835], "467": [111, 854, 858], "static_max_pool1d": [111, 1099], "static_max_pool2d": [111, 1104], "max_pool2dd": [111, 1104, 1108], "static_max_pool3d": [111, 1109], "eigenvealu": [111, 886, 888, 890], "eigenvector": [111, 886, 888, 889, 890, 1053, 1055, 1555, 1581, 1582, 1585], "xx": [111, 886, 888, 890], "37228107": [111, 886, 888, 890], "3722816": [111, 886, 888, 890], "8245648": [111, 886, 888, 890], "41597357": [111, 886, 888, 890], "56576747": [111, 886, 888, 890], "9093767": [111, 886, 888, 890], "450": [111, 1033, 1035, 1037], "static_diagflat": [111, 860], "static_eig": [111, 886], "static_kron": [111, 1033], "kroneck": [111, 1033, 1036, 1037, 1053, 1056], "static_matrix_exp": [111, 1094], "static_multi_dot": [111, 1130], "binary_cross_entropy_with_logit": [111, 147, 827, 1069], "pos_weight": [111, 824, 825, 826, 827, 1069, 1070], "027": [111, 824, 825, 826, 827, 1069, 1070], "263": [111, 152, 824, 825, 826, 827, 1069, 1070, 1258, 1280, 1283], "953": [111, 824, 825, 826, 827, 1069, 1070], "static_binary_cross_entropy_with_logit": [111, 824], "atleast": [111, 789, 791, 792, 793, 794, 796, 797, 798, 799, 801, 803, 1071, 1072, 1073], "1d": [111, 789, 791, 792, 793, 854, 857, 875, 1038, 1042, 1043, 1071, 1072, 1090, 1206, 1210, 2007, 2008, 2009], "ary1": [111, 789, 791, 792, 794, 796, 797, 799, 801, 802, 1071, 1072, 1073, 1074], "ary2": [111, 789, 791, 792, 794, 796, 797, 799, 801, 802, 1071, 1072, 1073, 1074], "2d": [111, 158, 794, 796, 797, 798, 875, 1038, 1043, 1071, 1073, 2007, 2010, 2011, 2014], "3d": [111, 180, 799, 801, 803, 875, 1038, 1043, 2007, 2012, 2013], "broadcast_shap": [111, 831, 1071, 2072], "30192195": [111, 997, 999, 1001], "static_atleast_1d": [111, 789], "static_atleast_2d": [111, 794], "static_atleast_3d": [111, 799], "static_broadcast_shap": [111, 828], "static_dsplit": [111, 876], "static_dstack": [111, 881], "static_flatten": [111, 928], "static_fliplr": [111, 933], "static_flipud": [111, 938], "static_heavisid": [111, 982], "static_hsplit": [111, 987], "static_vsplit": [111, 987, 991, 1237], "static_hstack": [111, 992], "static_i0": [111, 997], "static_moveaxi": [111, 1114, 1118, 1120, 1140, 1144], "static_pad": [111, 1161], "static_rot90": [111, 1175], "static_take_along_axi": [111, 1206], "static_top_k": [111, 1211], "static_vstack": [111, 1242], "43643127": [111, 870, 872, 874], "32325703": [111, 870, 872, 874], "24031169": [111, 870, 872, 874], "34251311": [111, 870, 872, 874], "31692529": [111, 870, 872, 874], "3405616": [111, 870, 872, 874], "5319725": [111, 870, 872, 874], "22458365": [111, 870, 872, 874], "24344385": [111, 870, 872, 874], "26588406": [111, 870, 872, 874], "61075421": [111, 870, 872, 874], "12336174": [111, 870, 872, 874], "51142915": [111, 870, 872, 874], "25041268": [111, 870, 872, 874], "23815817": [111, 870, 872, 874], "64042903": [111, 870, 872, 874], "25763214": [111, 870, 872, 874], "10193883": [111, 870, 872, 874], "31624692": [111, 870, 872, 874], "46567987": [111, 870, 872, 874], "21807321": [111, 870, 872, 874], "37677699": [111, 870, 872, 874], "39914594": [111, 870, 872, 874], "22407707": [111, 870, 872, 874], "static_beta": [111, 819], "static_dirichlet": [111, 870], "static_msort": [111, 1125], "static_median": [111, 1114], "static_nanmean": [111, 1140], "static_quantil": [111, 1166], "static_unravel_index": [111, 1227], "static_all_equ": [112, 113, 1259, 1261], "833": [112, 113, 1280, 1282], "200": [112, 113, 167, 453, 519, 522, 1258, 1320, 1322, 1323, 1324, 1391, 1393, 1394], "400": [112, 113, 147, 1258, 1320, 1322, 1323, 1324, 1391, 1394, 1555, 1597, 1600], "500": [112, 113, 1258, 1320, 1322, 1323, 1324], "600": [112, 113, 1320, 1322], "700": [112, 113, 1320, 1322], "static_assert_supports_inplac": [112, 113, 1269], "static_clip_matrix_norm": [112, 113, 1275], "849": [112, 113, 1258, 1275, 1278, 1279, 1280, 1283, 1284], "static_clip_vector_norm": [112, 113, 1280], "static_einops_rearrang": [112, 113, 1290], "static_einops_reduc": [112, 113, 1295], "static_einops_repeat": [112, 113, 1300], "static_fourier_encod": [112, 113, 1308], "static_gath": [112, 113, 1315], "static_gather_nd": [112, 113, 1320], "static_get_num_dim": [112, 113, 1332], "static_has_nan": [112, 113, 1341], "leafwis": [112, 113, 1341, 1345], "static_inplace_decr": [112, 113, 1347], "static_inplace_incr": [112, 113, 1352], "static_inplace_upd": [112, 113, 1357], "static_is_arrai": [112, 113, 1363], "static_is_ivy_arrai": [112, 113, 1368], "static_is_native_arrai": [112, 113, 1376], "static_scatter_flat": [112, 113, 1386], "ref": [112, 113, 120, 121, 151, 453, 614, 617, 679, 682, 689, 692, 714, 717, 749, 753, 1386, 1390, 1391, 1395, 1617, 1621, 1711, 1767, 1770], "static_scatter_nd": [112, 113, 1391], "static_stable_divid": [112, 113, 1407], "22222222": [112, 113, 1407, 1411], "11111111": [112, 113, 1407, 1411], "857": [112, 113, 1258, 1407, 1410, 1411], "444": [112, 113, 1407, 1411], "static_stable_pow": [112, 113, 1412], "static_supports_inplace_upd": [112, 113, 1417], "static_to_list": [112, 113, 1423], "static_to_numpi": [112, 113, 1428], "static_to_scalar": [112, 113, 1433], "static_value_is_nan": [112, 113, 1445], "452": [112, 113, 1445, 1446], "425": [112, 113, 1445, 1448], "87": [114, 115, 453, 519, 522, 634, 637, 1451, 1453, 1455, 1456], "976": [114, 115, 453, 759, 763, 1451, 1453, 1455, 1456], "49e": [114, 115, 1451, 1453, 1455, 1456], "74e": [114, 115, 1451, 1453, 1455, 1456], "95e": [114, 115, 1451, 1453, 1455, 1456], "024": [114, 115, 824, 826, 1069, 1070, 1451, 1453, 1455, 1456], "096": [114, 115, 453, 544, 547, 1451, 1453, 1455, 1456], "216": [114, 115, 120, 121, 1451, 1453, 1455, 1456, 1675, 1676, 1678], "384": [114, 115, 1451, 1453, 1455, 1456], "626": [114, 115, 1451, 1453, 1455, 1456], "en": [114, 115, 147, 1451, 1453, 1456, 1457, 1460, 1555, 1690, 1694], "wikipedia": [114, 115, 1451, 1453, 1456, 1457, 1460, 1555, 1690, 1694], "wiki": [114, 115, 1451, 1453, 1456, 1457, 1460, 1555, 1690, 1694], "stochastic_gradient_desc": [114, 115, 1451, 1453, 1456, 1457, 1460], "w_new": [114, 115, 1451, 1463, 1465, 1466], "88": [114, 115, 128, 129, 196, 204, 207, 453, 524, 527, 1451, 1463, 1465, 1466, 1555, 1627, 1630, 1657, 1661, 1821, 1837, 1839, 1840, 1911, 1922, 1925], "708": [114, 115, 1451, 1468, 1470, 1471], "445": [114, 115, 1451, 1468, 1470, 1471], "6e": [114, 115, 1451, 1468, 1470, 1471], "00036": [114, 115, 1451, 1468, 1470, 1471], "00016": [114, 115, 1451, 1468, 1470, 1471], "00049": [114, 115, 1451, 1468, 1470, 1471], "layerwis": [114, 115, 1451, 1472, 1474, 1475], "static_stop_gradi": [114, 115, 1481], "fdfh": [118, 119, 1510, 1512, 1514], "inp": [118, 119, 1489, 1523, 1525, 1526, 1527], "278": [118, 119, 1489, 1528, 1531, 1535, 1537, 1538, 1539], "105": [118, 119, 1489, 1528, 1531, 1535, 1537, 1538, 1539, 1555, 1627, 1630, 1695, 1696, 1699], "352": [118, 119, 1489, 1535, 1537, 1538, 1539], "195": [118, 119, 1535, 1537, 1539], "static_conv1d": [118, 119, 1491], "static_conv1d_transpos": [118, 119, 1496], "static_conv2d": [118, 119, 1501], "static_conv2d_transpos": [118, 119, 1506], "static_conv3d": [118, 119, 1510], "static_conv3d_transpos": [118, 119, 1515], "static_depthwise_conv2d": [118, 119, 1523], "static_dropout": [118, 119, 1528], "static_dropout1d": [118, 119], "static_linear": [118, 119, 1535], "static_lstm_upd": [118, 119, 1540], "static_multi_head_attent": [118, 119, 1545], "static_scaled_dot_product_attent": [118, 119, 1550], "577": [120, 121, 1555, 1556, 1558, 1559, 1560], "707": [120, 121, 1555, 1556, 1558, 1559, 1560], "pseudo": [120, 121, 1555, 1632, 1634, 1635, 1636], "0986123": [120, 121, 1555, 1642, 1644, 1645, 1646], "static_choleski": [120, 121, 1556], "static_rol": [120, 121, 124, 125, 146, 150, 1556, 1560, 1752], "static_cross": [120, 121, 1561], "static_det": [120, 121, 1566], "static_diag": [120, 121, 1571], "static_diagon": [120, 121, 1576], "static_eigh": [120, 121, 1582], "static_eigvalsh": [120, 121, 1587], "51572949": [120, 121, 1555, 1587, 1590, 1591], "17091519": [120, 121, 1555, 1587, 1590, 1591], "3448143": [120, 121, 1555, 1587, 1590, 1591], "88178420e": [120, 121, 1555, 1587, 1590, 1591], "35898387e": [120, 121, 1555, 1587, 1590, 1591], "46410179e": [120, 121, 1555, 1587, 1590, 1591], "00": [120, 121, 160, 453, 569, 572, 854, 857, 886, 889, 922, 1038, 1042, 1044, 1053, 1055, 1555, 1587, 1590, 1591], "static_inn": [120, 121, 1592], "static_inv": [120, 121, 1555, 1597, 1600], "static_matmul": [120, 121, 1602], "matul": [120, 121, 1602, 1606], "static_matrix_norm": [120, 121, 1607], "deimens": [120, 121, 1607, 1611], "static_matrix_pow": [120, 121, 1612], "static_matrix_rank": [120, 121, 1617], "static_matrix_transpos": [120, 121, 1622], "static_out": [120, 121, 1627], "static_pinv": [120, 121, 1632], "static_qr": [120, 121, 1637], "static_slogdet": [120, 121, 1642], "static_solv": [120, 121, 1647], "static_svd": [120, 121, 1652], "static_svdv": [120, 121, 1657], "static_tensordot": [120, 121, 1662], "static_trac": [120, 121, 1670], "static_vand": [120, 121, 1675], "343": [120, 121, 453, 719, 722, 1675, 1676, 1678], "512": [120, 121, 1675, 1676, 1678], "729": [120, 121, 168, 1675, 1676, 1678], "static_vecdot": [120, 121, 1680], "static_vector_norm": [120, 121, 1685], "mathemat": [120, 121, 148, 158, 162, 236, 453, 469, 472, 489, 492, 569, 572, 634, 637, 1555, 1607, 1610, 1685, 1686, 1688, 1689, 1981, 1987], "l1": [120, 121, 146, 167, 1555, 1685, 1686, 1688, 1689], "manhattan": [120, 121, 1555, 1685, 1686, 1688, 1689], "l2": [120, 121, 146, 1555, 1685, 1686, 1688, 1689], "euclidean": [120, 121, 1555, 1685, 1686, 1688, 1689], "precis": [120, 121, 147, 148, 158, 162, 323, 363, 366, 453, 739, 742, 891, 899, 943, 946, 1555, 1642, 1645, 1685, 1686, 1688, 1689, 1985], "static_vector_to_skew_symmetric_matrix": [120, 121, 1690], "511": [122, 123, 1695, 1696, 1698, 1699, 1700, 1706, 1708, 1710], "5108256": [122, 123, 1701, 1703], "609438": [122, 123, 1555, 1642, 1645, 1701, 1703], "static_binary_cross_entropi": [122, 123, 1696], "static_cross_entropi": [122, 123, 1701], "20397282": [122, 123, 1701, 1705], "83258148": [122, 123, 1701, 1705], "60943794": [122, 123, 1701, 1705], "static_sparse_cross_entropi": [122, 123, 1706], "leavv": [124, 125, 1767, 1769, 1771], "static_clip": [124, 125, 1712], "static_concat": [124, 125, 1717], "static_constant_pad": [124, 125, 1722], "static_expand_dim": [124, 125, 1727], "container_axi": [124, 125, 1711, 1727, 1730, 1731], "static_flip": [124, 125, 1732], "static_permute_dim": [124, 125, 1737], "static_repeat": [124, 125, 1742], "static_reshap": [124, 125, 1747], "positivclip": [124, 125, 1752, 1756], "static_split": [124, 125, 1757], "static_squeez": [124, 125, 1762], "static_stack": [124, 125, 1767], "static_swapax": [124, 125, 1772], "static_til": [124, 125, 1777], "static_unstack": [124, 125, 1782], "static_zero_pad": [124, 125, 1787], "classivi": [124, 125, 1711, 1757, 1760, 1777, 1780, 1874, 1880, 1884], "342": [126, 127, 1816, 1817, 1819, 1820], "0427": [126, 127, 1816, 1817, 1819, 1820], "299": [126, 127, 1816, 1817, 1819, 1820], "241": [126, 127, 1817, 1819], "431": [128, 129, 1832, 1834], "83": [128, 129, 453, 739, 742, 854, 857, 1038, 1042, 1489, 1535, 1538, 1832, 1834], "274": [128, 129, 1832, 1834], "91": [128, 129, 453, 524, 527, 1489, 1535, 1538, 1555, 1627, 1630, 1821, 1832, 1834, 1835, 1911, 1922, 1925], "static_multinomi": [128, 129, 1822], "static_randint": [128, 129, 1827], "static_random_norm": [128, 129, 1832], "651": [128, 129, 1832, 1836], "static_random_uniform": [128, 129, 1837], "481": [128, 129, 1837, 1841], "0999": [128, 129, 1837, 1841], "static_shuffl": [128, 129, 1843], "static_argmax": [130, 131, 1849], "static_argmin": [130, 131, 1854], "static_argwher": [130, 131, 1859], "static_nonzero": [130, 131, 1864], "static_wher": [130, 131, 1869], "static_unique_al": [132, 133, 1875, 1878], "static_unique_count": [132, 133, 1880], "static_unique_invers": [132, 133, 1885], "static_unique_valu": [132, 133, 1890], "static_argsort": [134, 135, 1896], "static_searchsort": [134, 135, 1901], "static_sort": [134, 135, 1906], "cotain": [136, 137, 1934, 1936], "11000001": [136, 137, 1938, 1940, 1942], "23100001": [136, 137, 1938, 1940, 1942], "30800003": [136, 137, 1911, 1938, 1940, 1941, 1942], "static_cumprod": [136, 137, 1912], "static_cumsum": [136, 137, 1917], "static_prod": [136, 137, 1938], "static_sum": [136, 137, 1947], "static_var": [136, 137, 1952], "12666667": [136, 137, 1911, 1952, 1953, 1956], "11555555": [136, 137, 1911, 1952, 1953, 1956], "respectv": [136, 137, 1943, 1945], "81649649": [136, 137, 1943, 1945], "94280904": [136, 137, 1943, 1945], "509902": [136, 137, 1911, 1943, 1945, 1946], "2472192": [136, 137, 1943, 1945], "44948983": [136, 137, 1943, 1945], "41421354": [136, 137, 1943, 1945], "contian": [136, 137, 1952, 1955], "6666667": [136, 137, 1952, 1955], "static_al": [138, 139, 1958], "static_ani": [138, 139, 1963], "add_ivy_container_instance_method": 140, "containerexampl": [140, 141], "who": [142, 152, 163, 181, 1981, 1983], "hood": [142, 146, 150, 155, 158, 160, 162, 163, 164, 167, 169, 1988], "weed": [142, 163], "tour": 142, "primari": [142, 145, 148, 157, 158, 160, 162, 181, 844, 849, 850, 1219, 1222, 1223, 1226, 1968], "superset": [142, 181], "goe": [142, 162], "dynam": [142, 148, 149, 157, 158, 164, 234, 235, 1981, 1985], "runtim": [142, 160, 162, 418, 419, 1981], "borrow": 142, "conjunct": 143, "establish": [143, 1983], "2020": [143, 1981], "group": [143, 146, 155, 158, 159, 1489, 1520, 1796, 1799, 1977, 1980, 1986], "intend": [143, 154, 1911, 1947, 1951, 1979, 1981, 1985, 1986, 1997, 2005, 2064], "popular": [143, 1981], "sens": [143, 150, 158, 166], "unconnect": 143, "decis": [143, 146, 148, 158, 162, 164, 166, 1981], "initialis": [143, 160, 418, 419], "checkout": [143, 160], "everytim": [143, 148], "init": [143, 169, 1997, 2003, 2006], "thoroughli": 143, "ci": [143, 148, 153, 159, 160, 181], "test_linalg": 143, "test_set_funct": 143, "test_signatur": 143, "excess": [143, 145, 150], "explicitli": [143, 144, 145, 146, 148, 151, 152, 155, 156, 157, 160, 164, 181, 1555, 1582, 1585, 1587, 1590, 1981, 2007, 2016, 2018, 2019, 2020, 2043, 2062], "array_modul": 143, "vv": 143, "test_manipulation_funct": 143, "test_concat": [143, 160], "typic": [143, 155, 779, 782, 891, 892, 904, 1005, 1008, 1895, 1901, 1904, 1980, 1988], "nb": 143, "liber": 143, "bodi": [143, 160], "decor": [143, 146, 148, 149, 155, 156, 157, 158, 159, 1258, 1274, 2072, 2075, 2090, 2092, 2093, 2094, 2116, 2121], "fortun": 143, "falsifi": [143, 160], "______________________": 143, "test_remaind": 143, "_______________________": 143, "test_operators_and_elementwise_funct": 143, "1264": 143, "st": [143, 159, 160], "1277": 143, "binary_param_assert_against_refimpl": 143, "ctx": 143, "mod": 143, "620": 143, "binary_assert_against_refimpl": 143, "324": 143, "scalar_o": 143, "assertionerror": [143, 152, 160, 2090, 2092], "17304064": 143, "binaryparamcontext": 143, "reproduc": [143, 2072, 2074, 2076, 2080, 2081, 2083, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2097, 2098, 2100, 2101, 2102, 2103, 2116, 2121], "temporarili": [143, 161, 2019, 2020], "reproduce_failur": [143, 160], "axic42baaowcnp": 143, "rumwmabaear0": 143, "parametr": [143, 160, 1981], "make_binary_param": 143, "dh": 143, "numeric_dtyp": 143, "left_strat": 143, "left_sym": 143, "right_strat": 143, "right_sym": 143, "right_is_scalar": 143, "xp": 143, "binary_param_assert_dtyp": 143, "binary_param_assert_shap": 143, "led": [143, 1983], "unexpectedli": 143, "discrep": [143, 159], "sync": 143, "varieti": [143, 147, 148, 149, 160, 1977, 1979, 1983, 1984, 1987, 1988], "known": [143, 148, 158, 160, 1997, 2000, 2002], "test_asarray_arrai": 143, "test_floor_divid": 143, "health": 143, "test_iop": 143, "__imod__": 143, "x1_i": [143, 453, 469, 472, 489, 492, 499, 502, 509, 512, 514, 517, 519, 522, 524, 527, 549, 552, 554, 557, 579, 582, 584, 587, 589, 592, 614, 617, 619, 622, 644, 647, 649, 652, 659, 662, 664, 667, 679, 682, 689, 692, 699, 702, 714, 717, 749, 753], "isequ": 143, "test_matrix_norm": 143, "alter": 143, "tweak": 143, "array_api_methods_to_test": 143, "identifi": [143, 147, 160, 162, 196, 197, 203], "202": [143, 453, 539, 542], "test_trac": 143, "latter": [143, 145, 148, 151, 158, 2019, 2022], "hand": [143, 148, 155, 160, 181], "scheme": [143, 168, 1981], "edg": [143, 160, 1071, 1088, 1161, 1164, 1711, 1712, 1715, 1722, 1725, 1787, 1791, 1969, 1981, 1983, 1987, 2100, 2101], "test_special_cas": 143, "__ipow__": 143, "is_integ": 143, "revisit": [143, 154], "tf": [144, 148, 149, 154, 157, 158, 160, 161, 162, 164, 169, 181, 1968, 1969, 1981, 2019, 2020, 2021], "wrapper": [144, 146, 148, 152, 156, 157, 158, 166, 1968, 1977, 1981], "_data": [144, 158, 166], "meta": [144, 161, 1793, 1794, 1795, 1981], "organiz": [144, 146, 158], "inherit": [144, 146, 152, 166, 181, 1968], "bear": [144, 146, 148, 158], "necessarili": [144, 146, 886, 889, 1053, 1055], "although": [144, 146, 158, 162, 1555, 1642, 1645, 1979, 1981, 2019, 2022], "underpin": [144, 146, 164], "programmat": [144, 146, 1982], "backup": [144, 146], "accident": [144, 146, 158], "readabl": [144, 146, 152, 154, 160, 161, 166, 167], "absent": [144, 146], "perk": [144, 146], "auto": [144, 146, 167], "__mul__": [144, 146, 150, 154, 162, 166], "throw": [144, 148, 152, 166, 1981], "imposs": 144, "firstli": [144, 148, 150, 151, 152, 155, 156, 157, 162, 167, 1977, 1987], "anywai": [144, 156, 158], "secondli": [144, 148], "permit": [144, 154, 158, 160, 162], "dictat": [144, 150, 154, 157, 2043, 2059, 2060, 2061, 2062], "implicit_backend": [145, 164], "__dict__": [145, 164], "ivy_original_dict": [145, 164], "unmodifi": [145, 148, 418, 422], "opt": [145, 148, 157, 160, 161, 162], "fallback": 145, "requires_grad": [145, 159], "memory_format": 145, "preserve_format": 145, "weren": 145, "break": [145, 148, 153, 154, 161, 181, 1969], "Not": [145, 159, 167, 168, 181, 236, 886, 889, 891, 910, 1053, 1055, 1145, 1148], "vast": [145, 148, 1981], "minor": [145, 162, 181], "fn_name_v_1p12_and_abov": 145, "similarli": [145, 148, 162, 166, 237, 282, 285, 844, 849, 850, 1219, 1222, 1223, 1226, 1987], "fn_name_v_1p01_to_1p1": 145, "fn_name": [145, 160, 2043, 2061, 2064, 2066, 2116, 2121], "five": [146, 167], "recap": [146, 150, 168], "arbitrarili": [146, 156, 167, 2100, 2101, 2102], "multi_map": 146, "__repr__": 146, "control": [146, 148, 157, 158, 162, 166, 167, 180, 844, 849, 850, 875, 1038, 1043, 1219, 1222, 1223, 1226, 1555, 1571, 1574, 1968, 1981, 1987, 1995, 1996], "__getattr__": 146, "__setattr__": 146, "__contains__": 146, "__getstate__": 146, "__setstate__": 146, "unpickl": 146, "num_dim": [146, 169], "__len__": 146, "restrict": [146, 158, 164, 1978], "enforc": [146, 166], "extern": [146, 154, 158, 160, 161], "flexibl": [146, 154, 161, 1981], "c1": 146, "lefthand": 146, "righthand": 146, "addition": [146, 157, 158, 1987], "counterpart": [146, 156], "behavior": [146, 148, 158, 159, 160, 162, 164, 181, 453, 699, 702, 714, 717, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894, 1978], "presenc": [146, 157, 2034, 2037, 2038, 2039], "absenc": [146, 154, 1981], "implicitli": [146, 160, 164], "themselv": [146, 148, 149, 151, 155, 158, 168, 1796, 1797, 1978, 1987], "log_pr": [146, 155, 157], "intuit": [146, 160, 167, 168, 1977], "chronolog": 146, "concurr": [146, 155, 1981], "had": [146, 147, 157, 164, 1981, 1982], "consum": [146, 147, 154, 159, 160, 2043, 2060, 2061, 2062], "sequenti": [146, 168], "But": [146, 147, 151, 156, 157, 169, 2090, 2096], "flow": [146, 180, 1981, 1982], "compil": [146, 158, 161, 162, 163, 165, 181, 1968, 1969, 1977, 1980, 1981, 1982, 1985, 1988, 2019, 2020, 2025, 2026, 2027, 2028, 2029, 2030], "implic": 146, "whatsoev": [146, 155, 1968, 1987], "implicit": [146, 151, 158, 160, 164, 1981], "eager": [146, 181, 1981], "children": 146, "shallowest": 146, "deepest": 146, "regularli": 147, "feedback": 147, "rollback": 147, "incorpor": [147, 158, 167, 1981], "fold": 147, "techniqu": 147, "subset": [147, 151, 154, 158, 160, 164, 1981, 2090], "triplet": 147, "notat": [147, 453, 489, 492, 1911, 1922, 1925], "test_torch": [147, 159], "test_tensor": [147, 159], "test_torch_instance_arctan_": 147, "7284": 147, "daili": 147, "neither": [147, 158, 162, 453, 469, 472, 1451, 1480, 1488], "nor": [147, 158, 453, 469, 472, 1451, 1480, 1488, 1985], "shoot": 147, "654": [147, 453, 534, 537], "impact": [147, 160, 168, 1983], "_reduce_loss": 147, "test_nn": 147, "test_loss": 147, "test_binary_cross_entropy_with_logit": 147, "test_cross_entropi": 147, "test_binary_cross_entropi": 147, "test_sparse_cross_entropi": 147, "test_loss_funct": 147, "test_torch_binary_cross_entropi": 147, "test_torch_cross_entropi": 147, "torch_binary_cross_entropi": 147, "torch_cross_entropi": 147, "underneath": [147, 1979], "achiev": [147, 148, 153, 156, 160, 167, 169, 1968], "magic": 147, "coverag": [147, 148, 160, 1995, 1996], "statement": [147, 153, 157, 160, 162, 181], "readthedoc": 147, "prepar": 147, "pedagog": 147, "flalign": 147, "f_1": 147, "t_1": 147, "t_3": 147, "t_7": 147, "t_10": 147, "t_11": 147, "t_15": 147, "f_m": 147, "t_23": 147, "t_37": 147, "t_32": 147, "t_54": 147, "t_65": 147, "f1": 147, "fm": 147, "encapsul": [147, 323, 374, 377], "yeah": 147, "procedur": [147, 150], "cyclic": 147, "intellig": [147, 160, 162, 1983], "tests_fil": 147, "file_nam": [147, 160, 161], "del": 147, "intersect": [147, 160, 180, 2086, 2089], "tests_lin": 147, "elif": [147, 152, 157, 158], "correspondingli": 147, "tests_to_run": 147, "determine_tests_lin": 147, "taken": [147, 153, 158, 161, 169, 865, 868, 891, 896, 1555, 1576, 1579, 1982], "mongodb": 147, "databas": [147, 160], "yml": 147, "dispatch": [147, 181, 1981, 1984], "yellow": 147, "queu": 147, "redirect": 147, "book": 147, "decoupl": [147, 168], "ran": 147, "badg": 147, "clickabl": 147, "uint8": [148, 160, 323, 345, 348, 357, 368, 369, 396, 399, 403, 406, 411, 416], "uint16": [148, 158, 160, 164, 323, 351, 357, 371, 372, 374, 377, 396, 399, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951], "uint32": [148, 160, 164, 323, 357, 371, 372, 374, 377, 379, 416, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951], "uint64": [148, 160, 164, 323, 357, 371, 372, 379, 380, 403, 406, 408, 411, 1911, 1912, 1915, 1917, 1920, 1938, 1941, 1947, 1951], "bfloat16": [148, 158, 160, 323, 368, 369], "all_dtyp": 148, "all_numeric_dtyp": 148, "all_int_dtyp": 148, "all_float_dtyp": 148, "replic": [148, 150, 158, 162], "four": [148, 150, 154, 155, 160, 162, 167], "thirdli": 148, "native_float32": 148, "importantli": [148, 166, 169, 180], "conveni": [148, 149, 154, 159, 165, 167, 168, 1968, 1987], "arguabl": [148, 149, 158], "jaxarrai": [148, 149, 154, 157, 161, 164], "jnp": [148, 149, 154, 157, 161, 164, 169, 1969], "_handle_0_dim_output": [148, 157], "experiment": [148, 158, 161, 164, 775, 776, 777, 778, 779, 782, 784, 787, 789, 792, 794, 797, 799, 802, 804, 807, 809, 812, 814, 817, 819, 822, 824, 826, 828, 830, 834, 837, 839, 842, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 857, 860, 863, 865, 868, 870, 873, 875, 876, 879, 881, 884, 886, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 920, 922, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 960, 961, 964, 966, 967, 968, 971, 974, 976, 978, 980, 982, 985, 987, 990, 992, 995, 997, 1000, 1002, 1003, 1004, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1027, 1029, 1031, 1033, 1036, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1062, 1064, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1097, 1099, 1102, 1104, 1107, 1109, 1112, 1114, 1117, 1120, 1123, 1125, 1128, 1130, 1133, 1135, 1138, 1140, 1143, 1145, 1148, 1150, 1151, 1152, 1153, 1155, 1158, 1161, 1164, 1166, 1169, 1171, 1172, 1173, 1174, 1175, 1178, 1182, 1185, 1187, 1190, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1210, 1211, 1215, 1216, 1218, 1219, 1222, 1223, 1226, 1227, 1231, 1233, 1236, 1237, 1241, 1242, 1246, 1247, 1251, 1252, 1256, 1981], "subtli": [148, 157], "On": [148, 158, 160, 165, 169], "promote_types_frontend_nam": 148, "promote_types_of_frontend_name_input": 148, "frontend_nam": 148, "demonstr": [148, 150, 166], "accuraci": 148, "upcast": 148, "instabl": [148, 2090, 2096], "underflow": [148, 1555, 1642, 1645], "nearli": [148, 154, 156, 1981], "downcast": 148, "footprint": 148, "constraint": 148, "concret": 148, "compound": 148, "settabl": [148, 149], "irrelev": [148, 150], "deleg": [148, 1988], "shape_to_tupl": 148, "with_supported_dtyp": [148, 182], "with_unsupported_dtyp": [148, 182], "unment": 148, "backend_vers": 148, "_cast_for_unary_op": 148, "target_typ": 148, "discov": 148, "unsupported_dtyp": 148, "former": [148, 151, 158, 2019, 2022], "uint": [148, 159, 323, 357, 396, 399, 411, 416], "lack": [148, 152, 157, 1981, 1988], "patch": [148, 1981], "subtl": [148, 161, 1987], "offici": [148, 164], "inconsist": [148, 152], "unexpect": [148, 323, 402], "84530": 148, "unwarr": 148, "risk": [148, 1987], "needlessli": 148, "bloat": 148, "undergo": [148, 181], "supported_dtyp": [148, 158], "unsupported_devic": 148, "supported_devic": 148, "slight": [148, 168], "downsid": 148, "inflat": 148, "idx": [149, 166, 1258, 1264], "tpu": [149, 418, 419, 422, 441, 450, 1981, 1984], "aliv": [149, 418, 433, 437, 439, 1258, 1325, 1384, 1385], "outsid": [149, 153, 155, 166, 1711, 1712, 1715, 1767, 1770, 1986], "dual": 149, "categor": [149, 155, 158], "thrown": [149, 152, 181, 1258, 1357, 1360], "far": [149, 150, 165, 1796, 1797, 1808, 1986, 1987], "eight": [150, 163], "func_nam": [150, 151, 155, 158], "static_func_nam": 150, "op_nam": 150, "__r": 150, "combinatori": 150, "variat": [150, 158, 160], "unus": [150, 153, 157, 234, 235], "okai": [150, 162, 164], "showcas": [150, 180], "meant": [150, 2019, 2021], "imaginari": 150, "spec": [150, 151], "my_func": [150, 161], "some_flag": 150, "another_flag": 150, "jointli": 150, "x0": [150, 1258, 1266, 1268], "5574077": 150, "1850398": 150, "5463025": 150, "8422884": 150, "91601413": 150, "9647598": 150, "3738229": 150, "1597457": 150, "0963247": 150, "9955841": 150, "3278579": 150, "multi": [150, 163, 181, 1489, 1545, 1548, 1555, 1561, 1564, 1969, 1977, 1979, 1981, 1985, 2007, 2018], "pars": [150, 181], "satisfi": 150, "asid": [150, 180], "increasingli": 150, "14254655": 150, "1578213": 150, "380515": 150, "trivial": 150, "exlud": 150, "failing_fn_nam": 150, "onlin": [150, 151], "minutest": 150, "suffici": [150, 160], "segment": 150, "fault": [150, 1981], "contrast": [151, 154, 158, 1987], "instanti": 151, "templat": [151, 160, 1969], "array_api": 151, "preview": 151, "render": 151, "incorrectli": 151, "domain": [151, 453, 459, 462, 464, 467, 474, 477, 479, 482, 484, 487, 489, 492, 534, 537, 539, 542, 564, 567, 569, 572, 624, 627, 629, 632, 639, 642, 729, 732, 734, 737, 739, 742, 754, 758, 759, 763, 891, 913, 1187, 1190, 1979, 1981], "codomain": [151, 453, 459, 462, 464, 467, 474, 477, 479, 482, 484, 487, 489, 492, 534, 537, 539, 542, 564, 567, 569, 572, 624, 627, 629, 632, 639, 642, 729, 732, 734, 737, 739, 742, 754, 758, 759, 763, 891, 913, 1187, 1190], "needless": [151, 159], "info": [151, 1969], "renam": [151, 158], "judgment": 151, "beyond": [151, 158, 1711, 1752, 1755, 1987], "pure": [151, 154, 158, 162, 166, 169, 181, 1981, 1987, 1988], "operator_nam": 151, "succinct": 151, "contstructor": 151, "_forward": [151, 164, 167, 168, 1969], "trainabl": [151, 165, 167, 168, 1993, 1994, 2019, 2020, 2031], "docst": 151, "ivyexcept": [152, 158, 1451, 1480, 1488], "super": [152, 164, 167, 168, 169], "ivybackendexcept": 152, "_default": 152, "_delimit": 152, "indexerror": [152, 1451, 1486, 1711, 1727, 1730], "ivyerror": 152, "repetit": [152, 1711, 1742, 1745, 1777, 1781], "124": [152, 1489, 1535, 1538], "new_fn": [152, 158], "new_arg": 152, "new_kwarg": 152, "186": 152, "truth_value_test": 152, "__name__": [152, 1258, 1438], "got": [152, 1969], "switch": [152, 1988], "121": 152, "462": [152, 453, 759, 763], "402": 152, "stdin": 152, "285": 152, "ivy_arg": 152, "ivy_kwarg": 152, "unwieldi": 152, "squash": 152, "118": [152, 1555, 1612, 1615], "hidden": [152, 164, 168, 1489, 1540, 1543, 2007, 2016], "awar": [152, 158], "recov": [152, 158], "caught": 152, "functool": [152, 158, 166], "attributeerror": [152, 166], "_print_traceback_histori": 152, "comparison": [152, 1555, 1657, 1661], "error_stack": 152, "axiserror": 152, "bound": [152, 160, 164, 1987], "polici": [152, 160, 180], "moreov": 152, "cleaner": [152, 167], "lesser": 152, "met": 152, "flake8": 153, "undefin": [153, 1071, 1088, 1161, 1164], "handler": [153, 163, 165, 169, 1968, 1969], "annot": [153, 154], "star": 153, "byte": [153, 1986, 1987], "notimpl": 153, "notimplementederror": 153, "unsuccess": 153, "exceed": 153, "black": 153, "disobei": 153, "successfulli": [153, 2019, 2020], "inde": [153, 154, 162, 181, 1979], "adress": 154, "dedic": [154, 166, 168, 1993, 1994, 2019, 2020], "usabl": [154, 161], "sole": [154, 161, 1980, 1981, 1982], "strictli": [154, 157], "rational": 154, "__div__": [154, 162], "dicat": 154, "futher": 154, "pep": 154, "484": 154, "brittl": 154, "freeli": 154, "technic": [154, 157, 181, 1981, 1983], "original_typ": 154, "cumbersom": 154, "omit": [154, 157, 158, 453, 719, 722, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894], "venn": 155, "diagram": [155, 1987], "light": [155, 158, 181, 1968, 1982, 1987], "array_arg": [155, 2043, 2044], "cach": [155, 160, 418, 423, 1258, 1274], "deal": [155, 181], "modif": [155, 1981], "briefli": [155, 160, 167], "get_all_arrays_on_dev": 155, "nested_map": [155, 1796], "index_nest": [155, 1796], "heavili": [156, 158, 181], "facilit": 156, "integer_array_to_float": 156, "handle_cmd_line_arg": 156, "as_vari": [156, 159, 160, 2043, 2061, 2106, 2109, 2115], "with_out": [156, 159, 160, 2043, 2059, 2061, 2106, 2109, 2115], "instance_method": [156, 160, 2043, 2061, 2106, 2109, 2115], "test_gradi": [156, 2043, 2062, 2106, 2109, 2115, 2116, 2120], "topic": [156, 166, 1981], "suffic": [156, 160], "program": [157, 1978, 1979, 1981, 1984, 1985, 1988], "ration": [157, 162], "speak": 157, "x_nativ": 157, "val_n": 157, "_is_vari": 157, "unspecifi": [157, 453, 699, 702, 714, 717, 1555, 1581, 1582, 1585, 1711, 1767, 1770], "predominantli": [157, 161, 180], "support_native_out": [157, 164], "math": [157, 158, 159, 169, 1969, 1979], "_wrap_fn": 157, "dim0": 157, "dim1": 157, "res_floor": 157, "mul": [157, 166], "extent": [157, 158], "maxim": [157, 162, 164, 1978, 1979, 1983, 1984, 1985], "third": [157, 181, 881, 884, 1071, 1077, 1555, 1652, 1656, 1874, 1875, 1879, 1980, 1981, 1987], "leverag": [157, 1979, 1981], "capabl": [157, 160, 162], "input_arrai": 157, "plai": [158, 160, 169, 1981, 1984], "tf_frontend": 158, "lax": [158, 159, 162, 169, 181], "fn_tree": [158, 159, 160, 2043, 2059, 2064, 2066, 2116, 2118, 2120], "wrong": [158, 162], "carefulli": [158, 1979, 1984, 1997, 2001], "acceler": [158, 1969, 1979, 1983, 1984, 1985, 1986], "algebra": [158, 1979, 1980, 1981, 1984, 1988], "xla": [158, 181, 1968, 1981], "decompos": 158, "dynamic": 158, "to_ivy_arrays_and_back": [158, 159], "mimic": 158, "arithmetic_oper": 158, "handle_numpy_cast": 158, "same_kind": 158, "subok": [158, 159, 162], "obtain": 158, "unhandl": 158, "subclass": [158, 162, 2019, 2021, 2022], "trigonometric_funct": 158, "from_zero_dim_arrays_to_float": 158, "raw_op": [158, 159], "tackl": 158, "map_raw_ops_alia": 158, "unnecessari": [158, 162], "output_typ": 158, "kwargs_to_upd": 158, "implemnt": 158, "pointwise_op": 158, "preferred_element_typ": 158, "finer": 158, "margin": 158, "fit": [158, 164, 1711, 1742, 1745, 1977, 1978, 1981], "meet": 158, "criteria": 158, "omiss": 158, "sensibl": 158, "deem": 158, "reserv": 158, "resum": 158, "sort_complex": 158, "stai": 158, "awai": [158, 1979, 1981], "notifi": 158, "meantim": 158, "possibli": [158, 160, 181, 1258, 1423, 1426], "straight": [158, 160, 166, 1969], "ahead": [158, 1981], "heavi": [158, 159, 162, 1982, 2090, 2096], "logicaland": 158, "truth": [158, 160, 453, 554, 557, 584, 587, 589, 592, 614, 617, 619, 622, 689, 692, 2034, 2035, 2041, 2043, 2060, 2061, 2062], "np_frontend": 158, "radd": 158, "_init_data": 158, "isinst": [158, 160, 161, 168, 169], "_process_str_data": 158, "_shape": [158, 166], "_dtype": [158, 159, 166], "govern": 158, "promote_types_of_": 158, "_input": 158, "promote_types_of_tensorflow_input": 158, "saniti": 158, "func_wrapp": [158, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "handle_numpy_casting_speci": 158, "equiv": 158, "unsaf": 158, "array_type_test": 158, "routin": [158, 162, 181, 1981], "organis": 158, "watch": 158, "youtub": 158, "seri": [158, 160, 1981, 1983], "jump": 159, "knowledg": 159, "handle_frontend_test": [159, 160, 2116], "handle_frontend_method": [159, 160, 2116], "test_frontend_funct": [159, 2043], "lift": [159, 1982], "get_dtyp": [159, 160, 2072, 2075, 2080, 2086, 2087], "dtype_and_valu": [159, 160, 2072], "get_shap": [159, 160, 2090], "np_frontend_help": 159, "nn": [159, 162, 169, 237, 282, 285, 1969, 1982, 2019, 2020, 2022], "test_jax": 159, "test_jax_lax_oper": 159, "dtype_and_x": [159, 160], "available_dtyp": [159, 160, 2072, 2080, 2081, 2086, 2087, 2088], "test_jax_lax_tan": 159, "num_positional_arg": [159, 160, 2043, 2058, 2059, 2061, 2106, 2109, 2115, 2116], "on_devic": [159, 2043, 2059, 2061], "input_dtyp": [159, 160, 2034, 2038, 2039, 2043, 2048, 2056, 2059, 2061], "as_variable_flag": [159, 2043, 2048, 2056, 2059, 2061, 2116, 2120], "native_array_flag": [159, 2043, 2048, 2056, 2059, 2061, 2116, 2120], "test_numpi": 159, "test_mathematical_funct": 159, "test_np_trigonometric_funct": 159, "test_numpy_tan": 159, "handle_dtype_and_cast": 159, "get_dtypes_kind": 159, "handle_where_and_array_bool": 159, "test_tensorflow": 159, "test_math": 159, "test_tensorflow_tan": 159, "test_pointwise_op": 159, "test_torch_tan": 159, "_fill_valu": 159, "min_valu": [159, 160, 2072, 2074, 2076, 2080, 2081, 2086, 2087, 2090, 2091, 2100, 2101, 2102, 2103], "max_valu": [159, 160, 2072, 2074, 2076, 2080, 2081, 2086, 2087, 2090, 2091, 2100, 2101, 2102, 2103], "allow_non": [159, 160, 2072, 2077, 2090, 2092, 2095], "min_num_dim": [159, 160, 2072, 2075, 2077, 2080, 2081, 2090, 2095], "max_num_dim": [159, 160, 2072, 2075, 2077, 2080, 2081, 2090, 2095], "min_dim_s": [159, 160, 2072, 2075, 2077, 2080, 2081, 2090, 2095], "max_dim_s": [159, 2072, 2075, 2077, 2080, 2081, 2090, 2095], "test_jax_lax_ful": 159, "test_from_shape_or_valu": 159, "input_fill_dtyp": 159, "_input_fill_and_dtyp": 159, "test_numpy_ful": 159, "dtype_to_cast": 159, "test_tf_funct": 159, "test_tensorflow_fil": 159, "test_creation_op": 159, "_requires_grad": 159, "test_torch_ful": 159, "accommod": 159, "walkthrough": 159, "torch_frontend": 159, "comparison_op": 159, "promote_types_of_torch_input": 159, "test_comparison_op": 159, "dtype_and_input": 159, "num_arrai": [159, 160, 2072, 2074, 2080, 2081, 2086, 2087], "allow_inf": [159, 160, 2072, 2075, 2076, 2080, 2081, 2100, 2101], "shared_dtyp": [159, 2072, 2080, 2081, 2086, 2087], "test_torch_great": 159, "all_alias": [159, 2043, 2059], "class_tre": [159, 2116, 2117], "init_tre": [159, 2116, 2117], "method_nam": [159, 2043, 2062, 2104, 2105, 2116, 2117], "test_frontend_method": [159, 2043], "test_jax_devicearrai": 159, "test_jax_instance_add": 159, "init_num_positional_arg": [159, 2043, 2060, 2062], "pf": 159, "numpositionalargfn": [159, 2043, 2060, 2106], "method_num_positional_arg": [159, 2043, 2060, 2062], "numpositionalargmethod": [159, 2043, 2060, 2106], "asvariableflag": [159, 2043, 2060, 2062, 2106], "nativearrayflag": [159, 2043, 2060, 2062, 2106], "frontend_method_data": [159, 2043, 2060], "init_input_dtyp": [159, 2043, 2060, 2062], "init_as_variable_flag": [159, 2043, 2060, 2062], "init_native_array_flag": [159, 2043, 2060, 2062], "init_all_as_kwargs_np": [159, 2043, 2060, 2062], "method_input_dtyp": [159, 2043, 2060, 2062], "method_as_variable_flag": [159, 2043, 2060, 2062], "method_native_array_flag": [159, 2043, 2060, 2062], "method_all_as_kwargs_np": [159, 2043, 2060, 2062], "tell": [159, 2090, 2096], "reli": [159, 2019, 2021], "test_ndarrai": 159, "test_numpy_instance_add__": 159, "test_tensorflow_instance_add": 159, "method_tre": [159, 160, 2116, 2119], "1e04": 159, "allow_infin": 159, "test_torch_instance_add": 159, "_arrays_idx_n_dtyp": 159, "test_manipul": [159, 160], "surprisingli": 159, "cat": [159, 162, 164, 169], "closest_relevant_group": 159, "strive": [159, 160, 162, 181, 1983], "cycl": 160, "exhaust": [160, 1978, 1987], "fixtur": 160, "hit": [160, 164], "eleg": [160, 1981], "unexplor": 160, "repeatedli": [160, 1796, 1806], "upload": 160, "artifact": 160, "impli": [160, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894], "bespok": 160, "_array_or_typ": 160, "standalon": [160, 1968, 1977, 1982, 1987, 1988], "test_default_int_dtyp": 160, "clariti": [160, 162, 1981], "print_hypothesis_exampl": 160, "searchstrategi": [160, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2080, 2081, 2083, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2106, 2115, 2116, 2121, 2122, 2123], "custom_strategi": 160, "sampled_from": 160, "randomis": 160, "simplist": 160, "intricaci": 160, "glanc": 160, "stratigi": 160, "one_of": 160, "datum": 160, "pipe": 160, "overload": 160, "shorthand": 160, "suppos": [160, 237, 258, 259], "scaler": [160, 2072, 2076, 2080, 2081, 2100, 2101, 2102, 2103], "array_or_scal": 160, "len_of_arrai": 160, "test_add": 160, "keywoard": 160, "gradient_test": [160, 2043], "test_gpu_is_avail": 160, "requri": 160, "handle_test": [160, 2116], "summara": 160, "pretest": 160, "slighlti": 160, "handle_method": [160, 2116], "pytet": 160, "snippet": 160, "thankfulli": 160, "seamlessli": 160, "encount": 160, "criterion": 160, "array_valu": [160, 2072], "valid_ax": 160, "craft": 160, "hoc": 160, "44758124e": 160, "308": [160, 323, 363, 366], "11228": 160, "456": 160, "268": 160, "wherev": 160, "dtype_values_axi": [160, 2072], "9622": 160, "28136": 160, "6375": 160, "12720": 160, "21354": 160, "900e": 160, "955e": 160, "exclude_min": [160, 2072, 2076, 2080, 2081, 2100, 2101], "large_abs_safety_factor": [160, 2072, 2076, 2080, 2081, 2090, 2091, 2100, 2101, 2103], "safety_factor_scal": [160, 2072, 2076, 2080, 2081, 2090, 2091, 2100, 2101, 2102, 2103], "57384": 160, "25687": 160, "248": 160, "array_dtyp": [160, 2072, 2075, 2086], "min_siz": [160, 2072, 2083, 2090, 2092, 2116, 2120], "max_siz": [160, 2072, 2083, 2090, 2092, 2116, 2120], "array_bool": [160, 2072], "na": 160, "test_devic": 160, "array_shap": 160, "common_shap": 160, "test_lay": 160, "size_bound": [160, 2072, 2083], "reshape_shap": [160, 2090], "stand": 160, "fashion": [160, 2090, 2092], "some_sequ": 160, "allow_nan": [160, 2072, 2076, 2080, 2081, 2100, 2101], "allow_subnorm": [160, 2072, 2076, 2100, 2101], "get_bound": [160, 2090], "arrays_valu": 160, "36418": 160, "213": 160, "21716926": 160, "none_or_list_of_float": 160, "get_prob": 160, "get_mean_std": [160, 2090], "103515625e": 160, "099609375": 160, "probabilist": 160, "get_axi": [160, 2090], "number_positional_argu": 160, "unreproduc": 160, "test_valu": [160, 2043, 2059, 2060, 2061, 2062], "enough": [160, 166, 167, 168], "report": 160, "valid_float_dtyp": 160, "test_demo": 160, "failing_test": 160, "traceback": 160, "shrink": 160, "prescrib": 160, "closest": [160, 162, 323, 351, 453, 529, 532, 574, 577, 579, 582, 719, 722, 764, 768], "scratch": 160, "therebi": 160, "event": 160, "test_gelu": 160, "test_fil": 160, "brief": 160, "phase": [160, 181, 1981], "notabl": [160, 1981], "verbos": [160, 164, 1969, 2125], "newer": 160, "max_exampl": 160, "deadlin": 160, "weird": 160, "systemat": 160, "safeguard": 160, "inabl": 160, "test_result_typ": 160, "9090909090909091": 160, "judgement": 161, "some_namespac": 161, "some_backend": 161, "another_backend": 161, "refactor": 161, "ongo": 161, "cooler": 161, "something_cool": 161, "_assert_fill_value_and_dtype_are_compat": 161, "_to_devic": 161, "focus": [161, 180, 1979, 1980, 1981, 1987, 1988], "prior": [161, 865, 868, 870, 873, 891, 896, 1171, 1173], "older": 161, "grow": [161, 1969, 1981], "unbound": 161, "battl": 161, "face": [162, 164, 1981, 1987], "answer": [162, 166, 181], "contradict": 162, "entail": 162, "sacrif": 162, "dimems": 162, "jacfwd": 162, "jacrev": 162, "banner": 162, "ravel": 162, "pointwis": 162, "fuse": 162, "tensorrt": 162, "highli": [162, 1981], "expens": 162, "incredibli": [162, 167, 181, 1984], "six": 162, "price": 162, "pai": 162, "intrus": 162, "x_beta": 162, "equip": 162, "deliber": [162, 453, 719, 722], "priorit": 162, "simplif": 162, "allevi": 162, "ineffici": [162, 181, 1981], "fledg": [164, 165], "syntact": [164, 169], "construct": [164, 168, 169, 1711, 1777, 1781, 1979, 1981, 1988, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2017, 2018, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032], "power_seq": 164, "backend_stack": 164, "cprint": [164, 2124], "_determine_backend_from_arg": 164, "importlib": 164, "import_modul": 164, "_backend_dict": 164, "illustr": [164, 180], "un": [164, 323, 380], "unrol": [164, 167, 1489, 1540, 1543], "lstm": [164, 1489, 1540, 1543, 1981, 2007], "cell": [164, 1489, 1540, 1543, 2007, 2016], "recurr": [164, 1489, 1540, 1543, 1981, 1985], "timestep": [164, 1489, 1540, 1543, 2007, 2016], "x_shape": 164, "input_channel": [164, 168, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2016, 2017], "x_flat": 164, "wi": 164, "wi_x": 164, "wii_x": 164, "wif_x": 164, "wig_x": 164, "wio_x": 164, "wh": 164, "ht": 164, "ct": 164, "hts_list": 164, "wii_xt": 164, "wif_xt": 164, "wig_xt": 164, "wio_xt": 164, "zip": 164, "htm1": 164, "ctm1": 164, "wh_htm1": 164, "whi_htm1": 164, "whf_htm1": 164, "whg_htm1": 164, "who_htm1": 164, "ft": 164, "ot": 164, "reliabl": 164, "sacrific": 164, "hear": 164, "virtu": [164, 1978], "pure_ivi": 164, "compile_graph": [164, 169], "pure_torch": 164, "backbon": [164, 167], "_layer": 164, "random_unifrom": 164, "unclean": 164, "wx": 164, "temp": 164, "ivy_func": 164, "emphas": 164, "torchscript": [164, 1968, 1988], "example_input": [164, 234, 235], "static_argnum": [164, 234, 235], "static_argnam": [164, 234, 235], "jit": [164, 181, 1981], "primit": [165, 181, 1979, 1981], "upcom": 165, "hierarch": [165, 167, 168, 1981], "_init": 166, "_size": 166, "_devic": 166, "_dev_str": 166, "_pre_repr": 166, "_post_repr": 166, "framework_str": 166, "noinspect": 166, "pypep8nam": 166, "typeerror": 166, "immut": 166, "claim": 166, "truli": 166, "_native_wrapp": 166, "genuin": 166, "some_method": 166, "rewritten": 166, "strang": 166, "compartment": 166, "public": [166, 1258, 1285, 1984], "newshap": 166, "new_shap": 166, "tidi": 166, "shorter": 166, "crystal": 166, "ton": 167, "ado": [167, 168], "soup": 167, "walk": [167, 168], "cnt": 167, "combo": 167, "3333335": 167, "delimit": 167, "autocomplet": 167, "midwai": 167, "agent": 167, "total_spe": 167, "total_height": 167, "total_width": 167, "ag": 167, "tot": 167, "total_": 167, "total_h": 167, "cnt0": 167, "cnt1": 167, "diff_0": 167, "diff_1": 167, "config0": 167, "config1": 167, "decod": 167, "l0": 167, "decoder__l0": 167, "decoder__l1": 167, "encoder__l0": 167, "encoder__l1": 167, "height": [167, 1995, 1996], "l0__b": 167, "l0__w": 167, "l1__b": 167, "l1__w": 167, "printabl": 167, "obviou": [167, 1981], "foresight": 167, "untidili": 167, "update_ag": 167, "normalize_img": 167, "img": 167, "img_max": 167, "reduce_max": [167, 1969], "img_min": 167, "reduce_min": [167, 1969], "img_rang": 167, "agent_posit": 167, "agent_veloc": 167, "agent_cam_front_rgb": 167, "agent_cam_front_depth": 167, "agent_cam_rear_rgb": 167, "agent_cam_rear_depth": 167, "agent_cam_lidar": 167, "camera": 167, "front_rgb": 167, "front_depth": 167, "rear_rgb": 167, "rear_depth": 167, "lidar": 167, "rgb": 167, "rear": 167, "veloc": 167, "cam": 167, "cam_max": 167, "cam_min": 167, "cam_rang": 167, "Of": [167, 1986, 1987], "perman": 167, "thread": [167, 1981], "pretti": [167, 1987], "straightforward": 167, "dataload": [167, 179, 1969], "_cnt": 167, "img_": 167, "_dataset_s": 167, "_batch_siz": 167, "_count": [167, 168], "__next__": 167, "filenam": 167, "img_fnam": 167, "fname": 167, "loaded_img": 167, "cv2": 167, "imread": 167, "from_numpi": 167, "loader": [167, 181], "batch_slic": 167, "model": [167, 168, 1968, 1969, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1987, 1988, 2019, 2021], "mymodel": [167, 1969], "linear0": [167, 168, 1969], "linear1": [167, 168, 1969], "x_in": [167, 168, 169, 1969], "loss_fn": [167, 168, 169, 1969], "reduce_mean": [167, 168, 169, 1969], "0145": 167, "grad_fn": [167, 1451, 1462, 1487], "addbackward0": 167, "_create_vari": 168, "output_channel": [168, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2016, 2017], "with_bia": [168, 2007, 2017], "_input_channel": 168, "_output_channel": 168, "_w_shape": 168, "_b_shape": 168, "_with_bia": 168, "396": 168, "764": 168, "872": 168, "211": 168, "439": 168, "nightmar": 168, "overcom": 168, "fc": 168, "v0": 168, "v1": 168, "key0": 168, "linear3": 168, "v2": 168, "counter": [168, 2043, 2047], "fed": [168, 418, 443], "weight_initi": [168, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2017], "glorotuniform": [168, 1997, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2017], "bias_initi": [168, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017], "_w_init": 168, "_b_init": 168, "create_vari": [168, 1997, 1998, 2001, 2002, 2005], "var_shap": [168, 1997, 1998, 2001, 2002, 2005], "fan_out": [168, 1997, 1998, 2000, 2001, 2002, 2005], "fan_in": [168, 1997, 1998, 1999, 2000, 2001, 2002, 2004, 2005], "fan_mod": [168, 1997, 2002, 2005], "fan_sum": [168, 1997, 2002, 2005], "misnom": 168, "saw": 168, "vanilla": [168, 1792, 1794, 1981], "compile_on_next_step": [168, 1258, 1265, 2019, 2020, 2025, 2026, 2027, 2028, 2029, 2030], "_beta1": 168, "_beta2": 168, "_epsilon": 168, "_mw": 168, "_vw": 168, "_first_pass": 168, "_should_compil": 168, "_step": [168, 2025, 2029], "new_v": 168, "_lr": 168, "_inplac": 168, "_stop_gradi": 168, "set_stat": [168, 2025, 2026, 2027, 2028, 2029, 2030], "clip_by_valu": 169, "captur": [169, 1982], "sparse_funct": 169, "num_class": 169, "new_axi": 169, "_linear": 169, "jax_graph": 169, "to_backend": 169, "to_ivy_modul": [169, 1993], "thinli": 169, "whilst": [169, 789, 792, 794, 797, 799, 802, 1071, 1072, 1073, 1074, 1968, 1981], "to_haiku_modul": [169, 2019, 2020], "hk": [169, 2019, 2020], "loss_fn_t": 169, "without_apply_rng": 169, "rng": 169, "prngkei": 169, "update_rul": 169, "tree_multimap": 169, "mechan": [179, 181, 1969], "robot": [179, 1969], "perfect": 180, "differenti": [180, 1981], "orient": 180, "pose": 180, "euler": [180, 236], "quaternion": 180, "ivy_mech": 180, "target_facing_rotation_matrix": 180, "polar_to_cartesian_coord": 180, "ordin": [180, 1555, 1647, 1650], "warp": 180, "optic": 180, "voxel": 180, "ivy_vis": 180, "coords_to_voxel_grid": 180, "render_pixel_coord": 180, "neural": [180, 1489, 1969, 1977, 1979, 1980, 1981, 1985, 1987, 1988, 1990, 2007], "radianc": 180, "nerf": 180, "trajectori": 180, "motion": 180, "plan": [180, 1969], "mobil": [180, 1981], "sample_spline_path": 180, "rigidmobil": 180, "sample_bodi": 180, "drone": 180, "sample_link": 180, "openai": 180, "swimmer": 180, "reward": 180, "supervis": 180, "reinforc": 180, "door": [180, 181], "cartpol": 180, "mountain_car": 180, "pendulum": 180, "reacher": 180, "learnt": 180, "ture": 180, "ntm": 180, "egospher": 180, "spatial": 180, "esm": 180, "ivy_memori": 180, "egocentr": 180, "room": 180, "inspir": 180, "doubt": 181, "grate": 181, "probe": 181, "remark": 181, "surpris": 181, "lock": 181, "gold": 181, "dex": 181, "ye": 181, "scan": 181, "tricki": [181, 1968], "predictor": 181, "tight": 181, "driver": 181, "schedul": [181, 1981, 1988], "Will": [181, 1995, 1996], "ast": 181, "cond": 181, "jacobian": [181, 1451, 1467, 1981], "checkpoint": 181, "autodiff": 181, "shine": 181, "merci": 181, "autograd": 181, "cluster": [181, 1981], "compet": [181, 1981], "paradigm": [181, 1981], "parallelis": 181, "spmd": 181, "mixtur": 181, "expert": 181, "sophist": 181, "depart": 181, "hundr": 181, "thousand": 181, "deepli": [181, 1796, 1798, 1981], "broadli": [181, 1987], "supplementari": 181, "reusabl": [181, 1979, 1981], "fanci": [181, 1981], "fusion": [181, 1985], "lose": 181, "pmap": 181, "overhead": [181, 1984], "eventu": 181, "supplement": 181, "backdoor": 181, "callback": 181, "record": [181, 1982], "metric": 181, "somewhat": [181, 1981], "outsourc": 181, "custom_handle_nest": 182, "handle_nan": 182, "with_supported_device_and_dtyp": 182, "version_dict": 182, "with_supported_devic": 182, "with_unsupported_device_and_dtyp": 182, "with_unsupported_devic": 182, "custom_object": [196, 197, 203], "nonetyp": [196, 197, 203], "xxxxxxxxxxxxxx": [196, 197, 203], "custom_fn": [196, 197, 203], "gaussian": [196, 198, 201], "138": [196, 198, 201], "165": [196, 198, 201, 1489, 1535, 1538], "166": [196, 198, 201], "159": [196, 198, 201, 1489, 1535, 1538], "24000001": [196, 204, 207], "703": [196, 209, 212], "683": [196, 209, 212], "408": [196, 209, 212], "313": [196, 209, 212], "437": [196, 209, 212], "214": [196, 219, 222], "891": [196, 219, 222], "0768": [196, 224, 227, 453, 544, 547], "231": [196, 224, 227], "array_method": [198, 199, 204, 205, 209, 210, 214, 215, 219, 220, 224, 225, 229, 230, 242, 243, 249, 250, 253, 254, 261, 262, 267, 268, 272, 273, 277, 278, 282, 283, 287, 288, 292, 293, 300, 301, 305, 307, 310, 312, 318, 320, 330, 331, 335, 336, 340, 341, 345, 346, 363, 364, 374, 375, 381, 382, 386, 387, 391, 392, 396, 397, 403, 404, 425, 426, 444, 446, 454, 455, 459, 460, 464, 465, 469, 470, 474, 475, 479, 480, 484, 485, 489, 490, 494, 495, 499, 500, 504, 505, 509, 510, 514, 515, 519, 520, 524, 525, 529, 530, 534, 535, 539, 540, 544, 545, 549, 550, 554, 555, 559, 560, 564, 565, 569, 570, 574, 575, 579, 580, 584, 585, 589, 590, 594, 595, 599, 600, 604, 605, 609, 610, 614, 615, 619, 620, 624, 625, 629, 630, 634, 635, 639, 640, 644, 645, 649, 650, 654, 655, 659, 660, 664, 665, 669, 670, 674, 675, 679, 680, 684, 685, 689, 690, 694, 695, 699, 700, 704, 705, 709, 710, 714, 715, 719, 720, 724, 725, 729, 730, 734, 735, 739, 740, 744, 745, 749, 751, 754, 756, 759, 761, 764, 766, 769, 771, 779, 780, 784, 785, 789, 790, 794, 795, 799, 800, 804, 805, 809, 810, 814, 815, 819, 820, 834, 835, 839, 840, 854, 855, 860, 861, 865, 866, 870, 871, 876, 877, 881, 882, 886, 887, 917, 918, 923, 924, 928, 929, 933, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 961, 962, 968, 969, 982, 983, 987, 988, 992, 993, 997, 998, 1005, 1006, 1010, 1011, 1015, 1016, 1020, 1021, 1033, 1034, 1048, 1049, 1059, 1060, 1064, 1065, 1094, 1095, 1099, 1100, 1104, 1105, 1109, 1110, 1114, 1115, 1120, 1121, 1125, 1126, 1130, 1131, 1135, 1136, 1140, 1141, 1145, 1146, 1155, 1156, 1161, 1162, 1166, 1167, 1175, 1176, 1182, 1183, 1187, 1188, 1206, 1208, 1211, 1213, 1216, 1217, 1227, 1229, 1237, 1239, 1242, 1244, 1247, 1249, 1252, 1254, 1259, 1260, 1266, 1267, 1269, 1270, 1275, 1276, 1280, 1281, 1287, 1288, 1290, 1291, 1295, 1296, 1300, 1301, 1305, 1306, 1308, 1309, 1315, 1316, 1320, 1321, 1332, 1333, 1341, 1342, 1347, 1348, 1352, 1353, 1357, 1358, 1363, 1364, 1368, 1369, 1373, 1374, 1376, 1377, 1386, 1387, 1391, 1392, 1407, 1408, 1412, 1413, 1417, 1419, 1423, 1425, 1428, 1430, 1433, 1435, 1445, 1447, 1453, 1454, 1457, 1458, 1463, 1464, 1468, 1469, 1472, 1473, 1476, 1477, 1481, 1483, 1491, 1492, 1496, 1497, 1501, 1502, 1510, 1511, 1515, 1516, 1523, 1524, 1528, 1529, 1535, 1536, 1540, 1541, 1545, 1546, 1550, 1551, 1556, 1557, 1561, 1562, 1566, 1567, 1571, 1572, 1576, 1577, 1582, 1583, 1587, 1588, 1592, 1593, 1597, 1598, 1602, 1603, 1607, 1608, 1612, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1637, 1638, 1642, 1643, 1647, 1648, 1652, 1654, 1657, 1659, 1666, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1685, 1687, 1690, 1692, 1696, 1697, 1701, 1702, 1706, 1707, 1712, 1713, 1717, 1718, 1722, 1723, 1727, 1728, 1732, 1733, 1737, 1738, 1742, 1743, 1747, 1748, 1752, 1753, 1757, 1758, 1762, 1763, 1767, 1768, 1772, 1774, 1777, 1779, 1782, 1784, 1787, 1789, 1817, 1818, 1822, 1823, 1827, 1828, 1832, 1833, 1837, 1838, 1843, 1844, 1849, 1850, 1854, 1855, 1859, 1860, 1864, 1865, 1869, 1871, 1875, 1877, 1880, 1882, 1885, 1887, 1890, 1892, 1896, 1897, 1901, 1902, 1906, 1907, 1912, 1913, 1917, 1918, 1922, 1923, 1926, 1927, 1930, 1931, 1934, 1935, 1938, 1939, 1943, 1944, 1947, 1949, 1952, 1954, 1958, 1959, 1963, 1964], "container_method": [198, 200, 202, 204, 206, 208, 209, 211, 213, 214, 216, 218, 219, 221, 223, 224, 226, 228, 229, 231, 233, 239, 241, 242, 245, 253, 255, 257, 258, 260, 261, 263, 265, 267, 269, 271, 272, 274, 276, 277, 279, 281, 282, 284, 286, 287, 289, 291, 292, 294, 296, 297, 299, 300, 302, 304, 305, 306, 308, 310, 311, 313, 315, 316, 318, 319, 321, 330, 332, 334, 335, 337, 339, 340, 342, 344, 345, 347, 349, 353, 355, 358, 359, 361, 363, 365, 367, 368, 370, 371, 373, 374, 376, 378, 381, 383, 385, 386, 388, 390, 391, 393, 395, 396, 398, 400, 403, 405, 407, 425, 427, 429, 444, 445, 447, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 679, 681, 683, 684, 686, 688, 689, 691, 693, 694, 696, 698, 699, 701, 703, 704, 706, 708, 709, 711, 713, 714, 716, 718, 719, 721, 723, 724, 726, 728, 729, 731, 733, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 762, 764, 765, 767, 769, 770, 772, 779, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 798, 799, 801, 803, 804, 806, 808, 809, 811, 813, 814, 816, 818, 819, 821, 823, 824, 825, 827, 828, 829, 831, 834, 836, 838, 839, 841, 843, 854, 856, 858, 860, 862, 864, 865, 867, 869, 870, 872, 874, 876, 878, 880, 881, 883, 885, 886, 888, 890, 917, 919, 921, 923, 925, 927, 928, 930, 932, 933, 935, 937, 938, 940, 942, 943, 945, 947, 948, 950, 952, 953, 955, 957, 961, 963, 965, 968, 970, 972, 974, 975, 977, 978, 979, 981, 982, 984, 986, 987, 989, 991, 992, 994, 996, 997, 999, 1001, 1005, 1007, 1009, 1010, 1012, 1014, 1015, 1017, 1019, 1020, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1035, 1037, 1048, 1050, 1052, 1059, 1061, 1063, 1064, 1066, 1068, 1094, 1096, 1098, 1099, 1101, 1103, 1104, 1106, 1108, 1109, 1111, 1113, 1114, 1116, 1118, 1120, 1122, 1124, 1125, 1127, 1129, 1130, 1132, 1134, 1135, 1137, 1139, 1140, 1142, 1144, 1145, 1147, 1149, 1155, 1157, 1159, 1161, 1163, 1165, 1166, 1168, 1170, 1175, 1177, 1179, 1182, 1184, 1186, 1187, 1189, 1191, 1206, 1207, 1209, 1211, 1212, 1214, 1219, 1220, 1221, 1223, 1224, 1225, 1227, 1228, 1230, 1233, 1234, 1235, 1237, 1238, 1240, 1242, 1243, 1245, 1247, 1248, 1250, 1252, 1253, 1255, 1259, 1261, 1263, 1269, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1302, 1304, 1308, 1310, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1332, 1334, 1336, 1341, 1343, 1345, 1347, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1367, 1368, 1370, 1372, 1376, 1378, 1380, 1386, 1388, 1390, 1391, 1393, 1395, 1407, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1420, 1423, 1424, 1428, 1429, 1431, 1433, 1434, 1436, 1445, 1446, 1448, 1453, 1455, 1457, 1459, 1463, 1465, 1468, 1470, 1472, 1474, 1476, 1478, 1481, 1482, 1484, 1491, 1493, 1495, 1496, 1498, 1500, 1501, 1503, 1505, 1506, 1507, 1509, 1510, 1512, 1514, 1515, 1517, 1519, 1523, 1525, 1527, 1528, 1530, 1532, 1535, 1537, 1539, 1540, 1542, 1544, 1545, 1547, 1549, 1550, 1552, 1554, 1556, 1558, 1560, 1561, 1563, 1565, 1566, 1568, 1570, 1571, 1573, 1575, 1576, 1578, 1580, 1582, 1584, 1586, 1587, 1589, 1591, 1592, 1594, 1596, 1597, 1599, 1601, 1602, 1604, 1606, 1607, 1609, 1611, 1612, 1614, 1616, 1617, 1619, 1621, 1622, 1624, 1626, 1627, 1629, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1653, 1655, 1657, 1658, 1660, 1662, 1663, 1664, 1666, 1668, 1670, 1671, 1673, 1675, 1676, 1678, 1680, 1681, 1683, 1685, 1686, 1688, 1690, 1691, 1693, 1696, 1698, 1700, 1701, 1703, 1705, 1706, 1708, 1710, 1712, 1714, 1716, 1717, 1719, 1721, 1722, 1724, 1726, 1727, 1729, 1731, 1732, 1734, 1736, 1737, 1739, 1741, 1742, 1744, 1746, 1747, 1749, 1751, 1752, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1767, 1769, 1771, 1772, 1773, 1775, 1777, 1778, 1780, 1782, 1783, 1785, 1787, 1788, 1790, 1817, 1819, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1843, 1845, 1847, 1849, 1851, 1853, 1854, 1856, 1858, 1859, 1861, 1863, 1864, 1866, 1868, 1869, 1870, 1872, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1912, 1914, 1916, 1917, 1919, 1921, 1922, 1924, 1926, 1928, 1930, 1932, 1934, 1936, 1938, 1940, 1942, 1943, 1945, 1947, 1948, 1950, 1952, 1953, 1955, 1958, 1960, 1962, 1963, 1965, 1967], "invoc": [234, 235], "718281828459045": 236, "newaxi": 236, "pi": [236, 922, 1038, 1044], "141592653589793": 236, "nestedsequ": [237, 242, 244], "protocol": [237, 238], "_t_co": [237, 238], "ml_framework": [237, 239, 240], "distanc": [237, 239, 240], "adjac": [237, 239, 240], "obj": [237, 242, 244], "typevar": [237, 242, 244], "supportsbufferprotocol": [237, 242, 244], "row": [237, 258, 259, 844, 849, 850, 938, 941, 1071, 1080, 1093, 1219, 1222, 1223, 1226, 1242, 1246, 1555, 1607, 1610, 1647, 1650, 1652, 1656, 1675, 1679, 1821, 1822, 1825, 1848, 1864, 1867, 1997, 1998, 2001, 2002, 2005], "intdtyp": [237, 258, 259, 300, 303, 318, 322, 323, 356, 396, 399, 410, 415], "numrow": [237, 258, 259], "numcolumn": [237, 258, 259], "interchang": [237, 261, 264, 1711, 1772, 1776], "33333337": [237, 272, 275], "66666663": [237, 272, 275], "41588834": [237, 277, 280], "7827941": [237, 277, 280], "6227766": [237, 277, 280], "23413252": [237, 277, 280], "conserv": [237, 282, 285], "n1": [237, 282, 285], "n2": [237, 282, 285], "n3": [237, 282, 285], "xv": [237, 282, 285], "yv": [237, 282, 285], "d_type": [237, 297, 298], "__new__": [237, 297, 298], "y1": [237, 300, 303, 318, 322], "y2": [237, 300, 303, 318, 322], "y3": [237, 300, 303, 318, 322], "defaultdtyp": 323, "defaultfloatdtyp": 323, "defaultintdtyp": 323, "defaultuintdtyp": 323, "uint_dtyp": [323, 327, 357, 411], "incompat": [323, 340, 343], "data_type_funct": [323, 345, 348], "xtype": [323, 351], "ytype": [323, 351], "native_uint16": [323, 351], "floatdtyp": [323, 353, 354, 409], "4294": [323, 353, 354], "967346": [323, 353, 354], "int_dtyp": [323, 356, 410], "4294967346": [323, 356, 357], "uintdtyp": [323, 357, 396, 399, 411, 416], "native_bool": [323, 362], "followng": [323, 363, 366], "smallest_norm": [323, 363, 366], "4028235e": [323, 363, 366], "7976931348623157e": [323, 363, 366], "55040e": [323, 363, 366], "314": [323, 374, 377], "9223372036854775808": [323, 374, 377], "9223372036854775807": [323, 374, 377], "65535": [323, 374, 377], "4294967295": [323, 374, 377], "native_uint8": [323, 380], "type1": [323, 401], "type2": [323, 401], "array_api_promot": [323, 401, 402, 2072, 2080, 2086, 2087], "default_dtype_stack": [323, 408, 413], "native_uint64": [323, 408], "ret1": [323, 412], "ret2": [323, 412], "reset": [323, 413, 414, 415, 416, 418, 451, 1258, 1439, 1440, 1441, 1442, 1443, 1444], "default_float_dtype_stack": [323, 414], "native_float16": [323, 417], "defaultdevic": 418, "__enter__": [418, 419], "_dev": [418, 419], "__exit__": [418, 419], "exc_typ": [418, 419], "exc_val": [418, 419], "exc_tb": [418, 419], "exit": [418, 419], "profil": 418, "save_dir": [418, 420], "139740789224448": [418, 433], "physic": [418, 435], "process_specif": [418, 438, 452], "percentag": [418, 438], "ram": [418, 438, 449, 452], "036902561555": [418, 438], "7024003467681645": [418, 438], "7095597456708771": [418, 438], "attr_onli": [418, 439], "chunk": [418, 441, 442, 443], "max_chunk_s": [418, 443], "chunk_siz": [418, 443], "input_ax": [418, 443], "output_ax": [418, 443], "feed": [418, 443, 1981, 1982], "fist": [418, 443], "66700032": [418, 449], "589934592": [418, 449], "219563008": [418, 452], "902400346": [418, 452], "525205504": [418, 452], "magnitud": [453, 454, 457, 469, 472, 1555, 1652, 1656, 1657, 1661], "princip": [453, 459, 462, 474, 477, 484, 487, 891, 913, 1187, 1190], "2019": [453, 469, 472, 569, 572, 634, 637, 1981, 1984], "commut": [453, 469, 472], "809": [453, 479, 482], "199": [453, 479, 482], "569": [453, 479, 482], "733": [453, 479, 482], "denot": [453, 489, 492, 1451, 1480, 1488, 2019, 2020], "quadrant": [453, 489, 492], "3\u03c0": [453, 489, 492], "bitwis": [453, 499, 502, 514, 517, 524, 527, 664, 667], "170": [453, 519, 522], "243": [453, 519, 522], "225": [453, 519, 522], "xor": [453, 524, 527, 664, 667], "77": [453, 524, 527, 1555, 1627, 1630, 1911, 1922, 1925], "368": [453, 539, 542], "670": [453, 539, 542], "548": [453, 539, 542], "1490": [453, 539, 542], "0192": [453, 544, 547], "0384": [453, 544, 547], "0576": [453, 544, 547], "698": [453, 549, 552], "accur": [453, 569, 572, 634, 637, 1555, 1642, 1645], "fdlibm": [453, 569, 572, 634, 637], "compliant": [453, 569, 572, 634, 637, 654, 657, 659, 662, 1911, 1926, 1929, 1930, 1933, 1934, 1937, 1943, 1946], "632": [453, 569, 572], "20e": [453, 569, 572], "72e": [453, 569, 572], "greatest": [453, 574, 577, 579, 582, 891, 902, 961, 964], "742": [453, 634, 637], "versu": [453, 699, 702], "52095687": [453, 699, 702], "92457771": [453, 699, 702], "49372482": [453, 699, 702], "22738838": [453, 699, 702], "156": [453, 699, 702], "5877228": [453, 699, 702], "189": [453, 704, 707], "252": [453, 704, 707], "315": [453, 704, 707], "378": [453, 704, 707], "1150": [453, 704, 707], "2890": [453, 704, 707], "172": [453, 704, 707], "229": [453, 704, 707], "487": [453, 704, 707, 1489, 1535, 1538], "344": [453, 704, 707], "decim": [453, 719, 722], "imprecis": [453, 719, 722], "5654": [453, 719, 722], "034": [453, 719, 722], "433": [453, 719, 722, 1451, 1462, 1467, 1487], "932": [453, 729, 732], "746": [453, 729, 732], "443": [453, 729, 732], "657": [453, 729, 732, 1258, 1280, 1283], "indistinguish": [453, 739, 742], "infinit": [453, 739, 742], "32455532": [453, 739, 742], "89897949": [453, 739, 742], "169": [453, 739, 742], "546": [453, 754, 758, 1489, 1535, 1538], "916": [453, 754, 758, 1695, 1696, 1699], "996": [453, 754, 758], "604": [453, 759, 763], "984": [453, 759, 763], "997": [453, 759, 763], "0375": [453, 764, 768], "032": [453, 764, 768], "coo_indic": [776, 1150, 1194, 1196, 1199], "csr_crow_indic": [776, 1150, 1194, 1196, 1199], "csr_col_indic": [776, 1150, 1194, 1196, 1199], "csc_ccol_indic": [776, 1150, 1194, 1196, 1199], "csc_row_indic": [776, 1150, 1194, 1196, 1199], "dense_shap": [776, 1150, 1194, 1196, 1199], "to_dense_arrai": [776, 1194, 1196], "yj": [784, 787, 891, 893], "ary3": [799, 802, 1071, 1074], "avg": [804, 807, 814, 817, 1038, 1039, 1041], "dimensio": [809, 812, 1038, 1040, 1046, 1104, 1107], "463": [824, 826, 1069, 1070], "022": [824, 826, 1069, 1070], "059": [824, 826, 1069, 1070], "601": [824, 826, 1069, 1070], "015": [824, 826, 1069, 1070], "868": [824, 826, 1069, 1070], "908": [824, 826, 1069, 1070], "672": [824, 826, 1069, 1070], "002": [824, 826, 1069, 1070], "029": [824, 826, 1069, 1070], "144": [824, 826, 1069, 1070], "822": [824, 826, 1069, 1070], "0800": [844, 845, 974, 976], "3979": [844, 845, 974, 976], "9121": [844, 845, 974, 976], "5400": [844, 845, 974, 976], "han": [844, 846, 978, 980], "taper": [844, 846, 978, 980], "00713103": [844, 847, 1025, 1027], "99997455": [844, 847, 1025, 1027], "kaiser_derived_window": [844, 847, 1025, 1027], "00726415": [844, 847, 1025, 1027], "9999736": [844, 847, 1025, 1027], "2773e": [844, 848, 1029, 1031], "0172e": [844, 848, 1029, 1031], "9294e": [844, 848, 1029, 1031], "4149": [844, 848, 1029, 1031], "9138": [844, 848, 1029, 1031], "5529": [844, 848, 1029, 1031], "col": [844, 849, 850, 1219, 1222, 1223, 1226], "retain": [844, 849, 850, 1219, 1222, 1223, 1226, 1451, 1461, 1968], "downward": [844, 849, 850, 1219, 1222, 1223, 1226], "upward": [844, 849, 850, 1219, 1222, 1223, 1226], "2xn": [844, 849, 850, 1219, 1222, 1223, 1226], "subarrai": [844, 849, 850, 1219, 1222, 1223, 1226], "complementari": [844, 851, 1233, 1236, 1979, 1987], "38268346": [844, 851, 1233, 1236], "38268352": [844, 851, 1233, 1236], "8563191": [844, 851, 1233, 1236], "14943568": [844, 851, 1233, 1236], "is_native_dtyp": 852, "tranform": [854, 857, 1038, 1042], "22e": [854, 857, 1038, 1042], "24e": [854, 857, 1038, 1042], "91e": [854, 857, 1038, 1042], "10e": [854, 857, 1038, 1042], "16e": [854, 857, 1038, 1042], "81e": [854, 857, 1038, 1042], "280": [854, 857, 1038, 1042], "container_n": [854, 857, 1038, 1042], "container_norm": [854, 857, 1038, 1042], "superdiagon": [860, 863, 1053, 1054, 1555, 1571, 1574], "subdiagon": [860, 863, 1053, 1054, 1555, 1571, 1574], "prepend": [865, 868, 891, 896, 1555, 1602, 1605, 1711, 1727, 1730], "differenc": [865, 868, 891, 896], "rreturn": [865, 868, 891, 896], "multivari": [870, 873, 1171, 1173], "conjug": [870, 873, 1171, 1173], "bayesian": [870, 873, 1171, 1173], "randomli": [875, 1038, 1043, 1489, 1528, 1531, 2007, 2015, 2072, 2074, 2075, 2076, 2080, 2081, 2083, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2097, 2098, 2100, 2101, 2102, 2103, 2116, 2121], "bernoulli": [875, 1038, 1043], "ed": [875, 1038, 1043], "eigenvali": [886, 889, 1053, 1055], "72281323e": [886, 889, 1053, 1055], "37228132e": [886, 889, 1053, 1055], "88578059e": [886, 889, 1053, 1055], "10000000e": [886, 889, 1053, 1055], "76822128": [886, 889, 1053, 1055], "70710678": [886, 889, 1053, 1055], "6401844": [886, 889, 1053, 1055], "position": [891, 899, 943, 946], "inexact": [891, 899, 943, 946], "999999e": [891, 904, 1005, 1008], "suppli": [891, 912, 1071, 1088, 1161, 1164, 1182, 1185], "217234": [891, 913, 1187, 1190], "hurwitz": [891, 916, 1252, 1256], "fourier": [922, 1038, 1044, 1258, 1308, 1311], "frac": [922, 1038, 1044], "44509285e": [922, 1038, 1044], "14423775e": [922, 1038, 1044], "17j": [922, 1038, 1044], "00000000e": [922, 1038, 1044], "11483250e": [922, 1038, 1044], "16j": [922, 1038, 1044], "33486982e": [922, 1038, 1044], "22464680e": [922, 1038, 1044], "95799250e": [922, 1038, 1044], "66951701e": [922, 1038, 1044], "02733949e": [922, 1038, 1044], "00j": [922, 1038, 1044], "49660576e": [922, 1038, 1044], "68178638e": [922, 1038, 1044], "01j": [922, 1038, 1044], "98912367e": [922, 1038, 1044], "21802426e": [922, 1038, 1044], "04549134e": [922, 1038, 1044], "18j": [922, 1038, 1044], "82842712e": [922, 1038, 1044], "86902654e": [922, 1038, 1044], "25501143e": [922, 1038, 1044], "32978028e": [922, 1038, 1044], "52068201e": [922, 1038, 1044], "71158374e": [922, 1038, 1044], "manipulation_funct": [928, 931, 1071, 1078], "horizot": [992, 995, 1071, 1083], "ndenumer": 1071, "multidimension": [1071, 1086, 1087, 1152, 1153, 1981], "ndindex": 1071, "before_1": [1071, 1088, 1161, 1164, 1711, 1722, 1725, 1787, 1791], "after_1": [1071, 1088, 1161, 1164, 1711, 1722, 1725, 1787, 1791], "before_n": [1071, 1088, 1161, 1164, 1711, 1722, 1725, 1787, 1791], "after_n": [1071, 1088, 1161, 1164, 1711, 1722, 1725, 1787, 1791], "width": [1071, 1088, 1161, 1164], "linear_ramp": [1071, 1088, 1161, 1164], "ramp": [1071, 1088, 1161, 1164], "padding_func": [1071, 1088, 1161, 1164], "iaxis_pad_width": [1071, 1088, 1161, 1164], "iaxi": [1071, 1088, 1161, 1164], "unalt": [1071, 1088, 1161, 1164], "sparse_arrai": [1194, 1195, 1196, 1197, 1198, 1199, 1200], "nativesparsearrai": 1194, "sparsearrai": 1194, "is_ivy_sparse_arrai": 1194, "is_native_sparse_arrai": 1194, "native_sparse_arrai": 1194, "native_sparse_array_to_indices_values_and_shap": 1194, "inspect": [1258, 1264, 1973, 1974], "recalcul": [1258, 1274], "my_sum": [1258, 1274], "val1": [1258, 1274], "val2": [1258, 1274], "cached_sum": [1258, 1274], "line_eq": [1258, 1274], "slp": [1258, 1274], "itc": [1258, 1274], "cached_line_eq": [1258, 1274], "0353": [1258, 1275, 1278], "424": [1258, 1275, 1278], "58": [1258, 1275, 1278], "176": [1258, 1275, 1278], "339": [1258, 1275, 1278], "271": [1258, 1275, 1278], "168": [1258, 1275, 1278], "391": [1258, 1275, 1278], "417": [1258, 1280, 1283], "583": [1258, 1280, 1283], "0667": [1258, 1280, 1283], "267": [1258, 1280, 1283], "131": [1258, 1280, 1283], "394": [1258, 1280, 1283, 1821, 1843, 1846], "526": [1258, 1280, 1283], "788": [1258, 1280, 1283], "default_str": [1258, 1287, 1289], "405": [1258, 1295, 1298], "array_mod": [1258, 1326], "exception_trace_mod": [1258, 1327], "max_depth": [1258, 1338, 1796, 1809], "seen_set": [1258, 1338], "local_set": [1258, 1338], "allow_dupl": [1258, 1382], "forkserv": [1258, 1383], "spawn": [1258, 1383], "garbag": [1258, 1385], "collector": [1258, 1385], "rtype": [1258, 1396, 1397, 1400, 1402, 1403], "exept": [1258, 1397], "tmp_dr": [1258, 1404], "tmp": [1258, 1404], "my_tmp": [1258, 1404], "49999999999975": [1258, 1407, 1410], "5015015015010504": [1258, 1407, 1410], "000444502911705e": [1258, 1407, 1410], "9999999999995j": [1258, 1407, 1410], "100000023841858": [1258, 1423, 1426], "200000047683716": [1258, 1423, 1426], "299999952316284": [1258, 1423, 1426], "400000095367432": [1258, 1423, 1426], "599999904632568": [1258, 1423, 1426], "dictionai": [1258, 1438], "hemant": [1258, 1438], "451": [1258, 1445, 1449], "in_ax": [1258, 1450], "out_ax": [1258, 1450], "thereof": [1258, 1450], "fun": [1258, 1450, 1796, 1808], "summaris": [1258, 1450], "gradienttrack": 1451, "0125": [1451, 1453, 1456], "171": [1451, 1453, 1456], "retain_grad": [1451, 1461], "xs_grad_idx": [1451, 1461, 2043, 2056, 2061, 2062], "ret_grad_idx": [1451, 1461, 2043, 2056, 2061, 2062], "func_ret": [1451, 1461], "933": [1451, 1462, 1467, 1487], "jac_fn": [1451, 1467], "639": [1451, 1468, 1471], "361": [1451, 1468, 1471], "with_grads_stack": [1451, 1480, 1486, 1488], "value_grad": [1451, 1487], "423332": [1451, 1487], "channel_last": [1489, 1490, 1520, 1521], "feature_group_count": [1489, 1490, 1520, 1521], "x_dilat": [1489, 1490, 1520], "dhwio": [1489, 1510, 1513], "258": [1489, 1515, 1518], "channel_first": [1489, 1520, 1521, 1533], "stride_s": [1489, 1522], "kernel_s": [1489, 1522], "depthwis": [1489, 1523, 1526, 2007, 2014, 2090, 2099], "hwi": [1489, 1523, 1526], "overfit": [1489, 1528, 1531], "1428566": [1489, 1528, 1531], "19999981": [1489, 1528, 1531], "39999962": [1489, 1528, 1531], "4000001": [1489, 1528, 1531], "5999999": [1489, 1528, 1531], "49000001": [1489, 1528, 1531], "55599999": [1489, 1528, 1531], "21000004": [1489, 1528, 1531], "incom": [1489, 1535, 1538], "666": [1489, 1535, 1538, 1555, 1607, 1610], "4269": [1489, 1535, 1538], "911": [1489, 1535, 1538], "157": [1489, 1535, 1538], "753": [1489, 1535, 1538], "101": [1489, 1535, 1538, 1555, 1597, 1600, 1796, 1803], "545": [1489, 1535, 1538, 1821, 1837, 1840], "547": [1489, 1535, 1538], "852": [1489, 1535, 1538], "963": [1489, 1535, 1538], "108": [1489, 1535, 1538, 1911, 1922, 1925], "196": [1489, 1535, 1538], "306": [1489, 1535, 1538], "query_dim": [1489, 1545, 1548, 2007, 2018], "measur": [1489, 1545, 1548, 2007, 2018], "cont_feat_dim": [1489, 1545, 1548], "numhead": [1489, 1545, 1548], "head_dim": [1489, 1545, 1548, 2007, 2018], "out_feat_dim": [1489, 1545, 1548], "5678761": [1489, 1545, 1548], "65441847": [1489, 1545, 1548], "18969631": [1489, 1545, 1548], "40131447": [1489, 1545, 1548], "19991851": [1489, 1545, 1548], "40000153": [1489, 1545, 1548], "68589532": [1489, 1545, 1548], "40129396": [1489, 1545, 1548], "40000817": [1489, 1545, 1548], "31219625": [1489, 1545, 1548], "25698996": [1489, 1545, 1548], "31022024": [1489, 1545, 1548], "16286421": [1489, 1545, 1548], "30296469": [1489, 1545, 1548], "16460133": [1489, 1545, 1548], "59497029": [1489, 1545, 1548], "40046397": [1489, 1545, 1548], "14009905": [1489, 1545, 1548], "81691194": [1489, 1545, 1548], "10732293": [1489, 1545, 1548], "40012637": [1489, 1545, 1548], "73519301": [1489, 1545, 1548], "40021262": [1489, 1545, 1548], "7615059": [1489, 1545, 1548], "40326414": [1489, 1545, 1548], "30141067": [1489, 1545, 1548], "19610119": [1489, 1545, 1548], "32028484": [1489, 1545, 1548], "1708746": [1489, 1545, 1548], "34100914": [1489, 1545, 1548], "14920235": [1489, 1545, 1548], "40000009": [1489, 1545, 1548], "73333335": [1489, 1545, 1548], "axisa": [1555, 1561, 1564], "axisb": [1555, 1561, 1564], "axisc": [1555, 1561, 1564], "293": [1555, 1566, 1569], "46997": [1555, 1566, 1569], "eigendecomposit": [1555, 1581, 1582, 1585], "qlq\u1d40": [1555, 1581, 1582, 1585], "orthogon": [1555, 1581, 1582, 1585], "hermitian": [1555, 1581, 1582, 1585, 1587, 1590, 1652, 1656], "45033181e": [1555, 1587, 1590], "02829754e": [1555, 1587, 1590], "54220343e": [1555, 1587, 1590], "12647155e": [1555, 1587, 1590], "38447177e": [1555, 1587, 1590], "56155300e": [1555, 1587, 1590], "26794919": [1555, 1587, 1590], "7320509": [1555, 1587, 1590], "array_lik": [1555, 1592, 1595, 1627, 1630], "0012": [1555, 1597, 1600], "00342": [1555, 1597, 1600], "000565": [1555, 1597, 1600], "0104": [1555, 1597, 1600], "000981": [1555, 1597, 1600], "00282": [1555, 1597, 1600], "000766": [1555, 1597, 1600], "0322": [1555, 1597, 1600], "00237": [1555, 1597, 1600], "000151": [1555, 1597, 1600], "00101": [1555, 1597, 1600], "00019": [1555, 1597, 1600], "0214": [1555, 1597, 1600], "00171": [1555, 1597, 1600], "0107": [1555, 1597, 1600], "0167": [1555, 1597, 1600], "0472": [1555, 1597, 1600], "0536": [1555, 1597, 1600], "0177": [1555, 1597, 1600], "000429": [1555, 1597, 1600], "00762": [1555, 1597, 1600], "frobeniu": [1555, 1607, 1610], "nuclear": [1555, 1607, 1610], "induc": [1555, 1607, 1610], "47722558": [1555, 1607, 1610], "776": [1555, 1607, 1610], "6000004": [1555, 1607, 1610], "112": [1555, 1627, 1630, 1911, 1922, 1925], "moor": [1555, 1632, 1635], "penros": [1555, 1632, 1635], "orthonorm": [1555, 1637, 1640, 1652, 1656], "logsabsdet": [1555, 1642, 1645], "subject": [1555, 1642, 1645], "usvh": [1555, 1652, 1656], "vh": [1555, 1652, 1656], "et": [1555, 1652, 1656], "cetera": [1555, 1652, 1656], "reconstructed_x": [1555, 1652, 1656], "ss": [1555, 1657, 1661], "615": [1555, 1657, 1661], "866": [1555, 1657, 1661], "864": [1555, 1657, 1661], "0x": [1555, 1675, 1679], "alexandr": [1555, 1675, 1679], "theophil": [1555, 1675, 1679], "skew": [1555, 1690, 1694], "symmetric_matrix": [1555, 1690, 1694], "cross_product": [1555, 1690, 1694], "35667497": [1695, 1701, 1704], "793291": [1695, 1706, 1709], "512926": [1695, 1706, 1709], "squeezabl": [1711, 1762, 1765], "famili": [1711, 1767, 1770], "intxx": [1711, 1767, 1770], "floatxx": [1711, 1767, 1770], "retwaitin": [1711, 1777, 1781], "fomaml_step": 1792, "inner_cost_fn": [1792, 1793, 1794], "outer_cost_fn": [1792, 1793, 1794], "inner_grad_step": [1792, 1793, 1794, 1795], "inner_learning_r": [1792, 1793, 1794, 1795], "inner_optimization_step": [1792, 1793, 1794, 1795], "inner_batch_fn": [1792, 1793, 1794], "outer_batch_fn": [1792, 1793, 1794], "average_across_step": [1792, 1793, 1794], "inner_v": [1792, 1793, 1794], "keep_inner_v": [1792, 1793, 1794], "outer_v": [1792, 1793, 1794], "keep_outer_v": [1792, 1793, 1794], "return_inner_v": [1792, 1793, 1794, 1795], "num_task": [1792, 1793, 1794, 1795], "maml": [1792, 1793, 1794], "recev": [1792, 1793, 1794], "0x7faa793378b0": [1792, 1793, 1794, 1795], "maml_step": 1792, "rece": [1792, 1794], "reptile_step": 1792, "cost_fn": [1792, 1795], "reptil": [1792, 1795], "receivng": [1792, 1795], "all_nested_indic": 1796, "include_nest": [1796, 1797], "_index": [1796, 1797, 1808], "_base": [1796, 1797, 1807, 1808], "extra_nest_typ": [1796, 1797, 1798, 1807, 1808, 1809], "copy_nest": 1796, "to_mut": [1796, 1798, 1809], "mutabl": [1796, 1798, 1804, 1805, 1809, 1814, 1815], "copied_nest": [1796, 1798], "1337": [1796, 1798], "duplicate_array_index_chain": 1796, "insert_into_nest_at_index": 1796, "insert_into_nest_at_indic": 1796, "special_squar": [1796, 1803], "6666666666666667": [1796, 1803], "special_pow": [1796, 1803], "linear_model": [1796, 1803], "map_nest_at_index": 1796, "shallow": [1796, 1804, 1805, 1809, 1814, 1815], "_result": [1796, 1804, 1814], "paramt": [1796, 1804, 1814], "hh": [1796, 1804], "map_nest_at_indic": 1796, "ub": [1796, 1805], "tb": [1796, 1805], "multi_index_nest": 1796, "nested_ani": 1796, "check_nest": [1796, 1807, 1808], "conditon": [1796, 1807, 1808], "nested_argwher": 1796, "stop_after_n_found": [1796, 1808], "nested_indic": [1796, 1808], "_depth": [1796, 1809], "_tuple_check_fn": [1796, 1809], "_list_check_fn": [1796, 1809], "_dict_check_fn": [1796, 1809], "nested_multi_map": 1796, "nest0": [1796, 1810], "ivy_arrai": [1796, 1810], "unappli": [1796, 1810], "prune_empti": 1796, "prune_nest_at_index": 1796, "prune_nest_at_indic": 1796, "set_nest_at_index": 1796, "set_nest_at_indic": 1796, "111": [1796, 1815], "xyz": [1796, 1815], "pqr": [1796, 1815], "mini": [1816, 1817, 1820, 2023, 2024], "217": [1816, 1817, 1820], "uniformli": [1821, 1827, 1830, 1837, 1840], "22346112": [1821, 1832, 1835], "0922": [1821, 1832, 1835], "49671414": [1821, 1832, 1835], "1382643": [1821, 1832, 1835], "64768857": [1821, 1832, 1835], "5230298": [1821, 1832, 1835], "23415337": [1821, 1832, 1835], "23413695": [1821, 1832, 1835], "9213753": [1821, 1832, 1835], "12818667": [1821, 1832, 1835], "799": [1821, 1832, 1835], "469": [1821, 1832, 1835], "287": [1821, 1832, 1835], "0366": [1821, 1832, 1835], "26431865": [1821, 1837, 1840], "475": [1821, 1837, 1840], "878": [1821, 1837, 1840], "861": [1821, 1837, 1840], "929": [1821, 1837, 1840], "789": [1821, 1837, 1840], "519": [1821, 1837, 1840], "0435": [1821, 1837, 1840], "381": [1821, 1837, 1840], "4608004": [1821, 1837, 1840], "8458502": [1821, 1837, 1840], "67270088": [1821, 1837, 1840], "31128597": [1821, 1837, 1840], "x_j": [1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894], "aggreg": [1874, 1875, 1879], "fourth": [1874, 1875, 1879], "1141": [1874, 1875, 1879], "8101": [1874, 1875, 1879], "9298": [1874, 1875, 1879], "8460": [1874, 1875, 1879], "2119": [1874, 1875, 1879], "3519": [1874, 1875, 1879], "6252": [1874, 1875, 1879], "4033": [1874, 1875, 1879], "7443": [1874, 1875, 1879], "2577": [1874, 1875, 1879], "3707": [1874, 1875, 1879], "0545": [1874, 1875, 1879], "3238": [1874, 1875, 1879], "5944": [1874, 1875, 1879], "0775": [1874, 1875, 1879], "4327": [1874, 1875, 1879], "62519997": [1874, 1875, 1879], "40329999": [1874, 1875, 1879], "59439999": [1874, 1875, 1879], "74430001": [1874, 1875, 1879], "81010002": [1874, 1875, 1879], "84600002": [1874, 1875, 1879], "92979997": [1874, 1875, 1879], "30000001": [1874, 1880, 1884], "39999998": [1874, 1880, 1884], "29999995": [1874, 1880, 1884], "einstein": [1911, 1922, 1925], "summat": [1911, 1922, 1925], "117": [1911, 1922, 1925], "sentinel": [1911, 1926, 1929, 1934, 1937], "90000004": [1911, 1930, 1933], "statistical_funct": [1911, 1943, 1946], "07472222": [1911, 1952, 1956], "00666667": [1911, 1952, 1956], "08966666": [1911, 1952, 1956], "simplicit": [1957, 1958, 1961, 1963, 1966], "nail": 1968, "funtion": 1968, "asset": 1968, "functiona": 1968, "scientist": 1968, "deploi": [1968, 1979, 1980, 1981, 1983, 1987], "correl": 1968, "analyz": 1968, "ai": [1969, 1979, 1983], "colab": 1969, "interact": [1969, 1980, 1981, 1986], "sharp": 1969, "favorit": 1969, "jax_concat": 1969, "tf_concat": 1969, "np_concat": 1969, "torch_concat": 1969, "get_devic": 1969, "reduce_prod": 1969, "reduce_sum": 1969, "gradient_imag": 1969, "indices_wher": 1969, "bilinear_resampl": 1969, "stack_imag": 1969, "neural_net": 1969, "floormod": 1969, "articl": 1969, "lenton2021ivi": 1969, "inter": 1969, "lenton": 1969, "daniel": 1969, "pardo": 1969, "fabio": 1969, "falck": 1969, "fabian": 1969, "jame": 1969, "stephen": 1969, "clark": 1969, "ronald": 1969, "journal": 1969, "arxiv": 1969, "preprint": 1969, "2102": 1969, "02886": 1969, "add_array_spec": 1972, "fn_array_spec": 1972, "nested_arrai": [1975, 1976], "nestedarrai": 1975, "classmethod": [1975, 1976], "from_row_length": [1975, 1976], "row_length": [1975, 1976], "from_row_split": [1975, 1976], "row_split": [1975, 1976], "unbind": [1975, 1976], "conceptu": [1977, 1982], "broken": [1977, 1981], "tracer": 1977, "infrastructur": [1977, 1983, 1984], "vendor": [1977, 1983], "complimentari": [1977, 1987], "acycl": [1977, 1982], "insert_numb": 1978, "insert_t": 1978, "scaffold": [1979, 1987], "heart": 1979, "toolchain": [1979, 1984], "intermedi": [1979, 1980, 1981, 1982, 1987], "ir": [1979, 1982, 1987], "assembli": [1979, 1986, 1987], "idl": 1979, "middl": 1979, "emit": 1979, "gnu": [1979, 1984], "gcc": [1979, 1986], "broader": 1979, "heterogen": 1979, "aid": 1979, "coprocessor": 1979, "programm": [1979, 1986], "gate": 1979, "onednn": 1979, "sit": [1979, 1982, 1987], "tandem": 1979, "possess": 1979, "export": [1980, 1987], "khrono": [1980, 1986], "appl": 1980, "coremltool": 1980, "albeit": 1980, "promin": 1981, "abbrevi": 1981, "laboratori": 1981, "proprietari": [1981, 1985, 1986], "mathwork": 1981, "commerci": 1981, "1984": 1981, "plot": 1981, "toolbox": 1981, "mupad": 1981, "simulink": 1981, "graphic": [1981, 1985, 1986], "simul": 1981, "embed": 1981, "million": [1981, 1984], "worldwid": 1981, "scienc": [1981, 1983], "econom": 1981, "2001": 1981, "scientif": 1981, "od": 1981, "solver": 1981, "cython": 1981, "friendli": 1981, "2002": 1981, "lua": 1981, "luajit": 1981, "idiap": 1981, "epfl": 1981, "2005": 1981, "numarrai": 1981, "cpython": 1981, "partli": 1981, "2007": 1981, "classif": 1981, "regress": [1981, 1988], "forest": 1981, "boost": 1981, "dbscan": 1981, "inbuilt": 1981, "esqu": 1981, "aesara": 1981, "2008": 1981, "datafram": 1981, "critic": [1981, 1987], "2012": 1981, "Its": 1981, "polymorph": 1981, "parallel": [1981, 1985, 1986], "mpi": 1981, "openmp": 1981, "glue": 1981, "jaot": 1981, "nasa": 1981, "cern": 1981, "climat": 1981, "allianc": 1981, "influenti": 1981, "2014": 1981, "analyt": [1981, 1983, 1987], "scala": 1981, "ship": 1981, "forgiv": 1981, "decemb": 1981, "announc": 1981, "transit": 1981, "mainten": 1981, "v7": 1981, "meaning": 1981, "2016": 1981, "imper": 1981, "fast": 1981, "amazon": 1981, "traction": 1981, "cognit": [1981, 1988], "toolkit": [1981, 1982, 1988], "grade": 1981, "realiz": 1981, "dnn": 1981, "cnn": 1981, "rnn": 1981, "stochast": [1981, 2025, 2030], "sgd": [1981, 2025], "backpropag": 1981, "succumb": 1981, "came": 1981, "monitor": 1981, "practition": [1981, 1985, 1986, 1987], "hobbyist": 1981, "tremend": 1981, "ecosystem": 1981, "gear": 1981, "batteri": 1981, "zygot": 1981, "jl": 1981, "workload": 1981, "daggerflux": 1981, "frontier": 1981, "hessian": 1981, "2018": 1981, "lightweight": [1981, 1988], "shortcom": 1981, "eas": 1981, "barrier": 1981, "inexperienc": 1981, "underdevelop": 1981, "fanat": 1981, "ounc": 1981, "infanc": 1981, "emerg": 1981, "nich": 1981, "introduct": 1981, "lite": 1981, "enterpris": 1981, "reinvent": [1981, 1983], "inertia": 1981, "haven": 1981, "creator": [1981, 1983], "paszk": 1981, "hi": 1981, "safeti": [1981, 2072, 2076, 2080, 2081, 2090, 2091, 2100, 2101, 2102, 2103], "bulk": 1981, "haskel": 1981, "dataflow": 1982, "distil": 1982, "essenc": [1982, 1987], "enclos": 1982, "scope": [1982, 1986], "trace_modul": 1982, "scriptfunct": 1982, "scriptmodul": [1982, 2019, 2022], "fake": 1982, "proxi": 1982, "site": 1982, "graphmodul": 1982, "travi": 1983, "oliph": 1983, "leader": 1983, "cornerston": 1983, "numba": 1983, "numfocu": 1983, "pydata": 1983, "confer": 1983, "consult": 1983, "servic": 1983, "expertis": 1983, "devop": 1983, "mlop": 1983, "dashboard": 1983, "startup": 1983, "mlir": [1983, 1984, 1987], "Their": 1983, "held": 1983, "privileg": 1983, "presum": 1983, "llvm": [1983, 1986], "founder": 1983, "tvm": [1983, 1987], "sustain": 1983, "empow": 1983, "har": 1983, "burden": 1983, "benchmark": 1983, "convention": 1984, "precompil": 1984, "executor": 1984, "exploit": 1984, "julia": [1984, 1987], "fsf": 1984, "gpl": 1984, "biggest": [1984, 1987], "nvidia": [1985, 1986], "conduct": 1985, "throughput": 1985, "autotun": 1985, "consumpt": 1985, "gpgpu": 1985, "talk": 1986, "classic": 1986, "sycl": 1986, "dpc": 1986, "processor": 1986, "x86": 1986, "oneapi": 1986, "ia": 1986, "aka": 1986, "xeon": 1986, "gen9": 1986, "xe": 1986, "card": 1986, "arria": 1986, "gx": 1986, "fpga": 1986, "tune": [1986, 1987], "lofti": 1987, "ambit": 1987, "realm": 1987, "bedrock": 1987, "flux": 1987, "bite": 1987, "chew": 1987, "eagerpi": 1987, "tensorli": 1987, "thinc": 1987, "neuropod": 1987, "exhibit": 1987, "emploi": 1987, "fx": 1987, "retrain": 1987, "wider": 1987, "closer": 1987, "greatli": 1987, "challeng": 1987, "modular": 1987, "anywher": 1987, "theano": 1988, "plaidml": 1988, "partial_svd": 1988, "tucker_mode_dot": 1988, "excel": 1988, "subsystem": 1988, "geglu": 1990, "native_modul": [1993, 1994, 2019, 2020], "native_module_class": [1993, 1994], "modulehelp": [1995, 2019, 2020], "check_submod_ret": [1995, 1996], "expected_submod_ret": [1995, 1996, 2019, 2020], "get_mod_kei": [1995, 1996], "top_mod": [1995, 1996], "mod_depth": [1995, 1996], "mod_height": [1995, 1996], "mod_with_top_mod_key_chain": [1995, 1996], "flatten_key_chain": [1995, 1996], "show_mod_in_top_mod": [1995, 1996], "upper_depth": [1995, 1996], "lower_depth": [1995, 1996], "show_structur": [1995, 1996], "this_repr": [1995, 1996], "show_v_in_top_v": [1995, 1996], "perspect": [1995, 1996], "top_v": [1995, 1996], "sub_mod": [1995, 1996], "show_v": [1995, 1996], "enumer": [1995, 1996], "track_submod_call_ord": [1995, 1996, 2019, 2020], "track_submod_ret": [1995, 1996, 2019, 2020], "track_submod_return": [1995, 1996], "v_with_top_v_key_chain": [1995, 1996], "rectangular": [1997, 1998, 2001, 2002, 2005], "firstlayersiren": 1997, "siren": [1997, 1999], "distribt": [1997, 1999, 2000, 2004], "glorot": [1997, 2000], "xavier": [1997, 2000], "neuron": [1997, 2001, 2002, 2005], "w_1x_1": [1997, 2001], "w_2x_2": [1997, 2001], "w_nx_n": [1997, 2001], "w_i": [1997, 2001], "vanish": [1997, 2001], "pick": [1997, 2001], "kaimingnorm": 1997, "kaim": [1997, 2002], "he": [1997, 2002], "distibut": [1997, 2002], "center": [1997, 2002], "negative_slop": [1997, 2002], "fan": [1997, 2002, 2005], "propog": [1997, 2002, 2005], "relationship": [1997, 2002], "proport": [1997, 2002], "Ones": 1997, "w0": [1997, 2004], "wlim": [1997, 2005], "predefin": [1997, 2005], "initialz": [1997, 2005], "fan_avg": [1997, 2005], "filter_s": [2007, 2008, 2009], "conv1dtranspos": 2007, "filter_shap": [2007, 2010, 2011, 2012, 2013, 2014], "conv2dtranspos": 2007, "conv3dtranspos": 2007, "depthwiseconv2d": 2007, "num_channel": [2007, 2014], "bernoul": [2007, 2015], "num_lay": [2007, 2016], "return_sequ": [2007, 2016], "return_st": [2007, 2016], "get_initial_st": [2007, 2016], "dens": [2007, 2017], "multiheadattent": 2007, "dropout_r": [2007, 2018], "context_dim": [2007, 2018], "with_to_q_fn": [2007, 2018], "with_to_kv_fn": [2007, 2018], "with_to_out_fn": [2007, 2018], "build_mod": [2007, 2018, 2019, 2020], "on_init": [2007, 2018, 2019, 2020], "__call__": [2007, 2018, 2019, 2020, 2021, 2043, 2062], "store_var": [2019, 2020], "arg_stateful_idx": [2019, 2020], "kwarg_stateful_idx": [2019, 2020], "fallback_to_non_compil": [2019, 2020, 2025, 2029], "with_partial_v": [2019, 2020], "submod_depth": [2019, 2020], "submods_to_track": [2019, 2020], "varibl": [2019, 2020], "from_cal": [2019, 2020], "built_": [2019, 2020], "from_haiku_modul": [2019, 2020], "constructor_arg": [2019, 2020], "constructor_kwarg": [2019, 2020], "instance_arg": [2019, 2020], "instance_kwarg": [2019, 2020], "from_keras_modul": [2019, 2020], "from_torch_modul": [2019, 2020], "save_weight": [2019, 2020], "weights_path": [2019, 2020], "ivy_modul": [2019, 2020, 2021, 2022], "to_keras_modul": [2019, 2020], "to_torch_modul": [2019, 2020], "mytfmodul": 2019, "reappli": [2019, 2021], "overridden": [2019, 2021, 2022, 2025, 2029], "www": [2019, 2021], "masking_and_pad": [2019, 2021], "mytorchmodul": 2019, "recip": [2019, 2022], "silent": [2019, 2022], "layernorm": 2023, "normalized_shap": [2023, 2024], "elementwise_affin": [2023, 2024], "trail": [2023, 2024], "affin": [2023, 2024], "init_on_first_step": [2025, 2029], "ignore_miss": [2025, 2029], "sub_modul": [2031, 2032], "nativevari": [2031, 2032], "assert_all_clos": 2034, "ret_np": [2034, 2035, 2043, 2059], "ret_from_gt_np": [2034, 2035], "ground_truth_backend": [2034, 2035, 2041, 2043, 2056, 2061, 2062, 2064, 2067, 2116, 2119, 2120], "ret_from_np": [2034, 2035], "assert_same_type_and_shap": 2034, "this_key_chain": [2034, 2036], "check_unsupported_devic": 2034, "input_devic": [2034, 2037], "all_as_kwargs_np": [2034, 2037, 2038, 2039, 2043, 2056, 2059, 2061], "check_unsupported_device_and_dtyp": 2034, "check_unsupported_dtyp": 2034, "test_unsupported_funct": 2034, "value_test": 2034, "ret_np_flat": [2034, 2041], "ret_np_from_gt_flat": [2034, 2041], "ret_from_np_flat": [2034, 2041], "function_test": [2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063], "args_to_contain": 2043, "as_cont": 2043, "as_list": 2043, "convtru": 2043, "nativeclass": [2043, 2047], "create_args_kwarg": 2043, "args_np": [2043, 2048, 2056], "arg_np_val": [2043, 2048], "args_idx": [2043, 2048], "kwargs_np": [2043, 2048, 2056], "kwarg_np_val": [2043, 2048], "kwargs_idx": [2043, 2048], "container_flag": [2043, 2048, 2056, 2061, 2106, 2115, 2116, 2120], "empty_func": 2043, "flatten_and_to_np": 2043, "flatten_fw_and_to_np": 2043, "get_frontend_ret": 2043, "get_ret_and_flattened_np_arrai": 2043, "gradient_incompatible_funct": 2043, "rtol_": [2043, 2056, 2060, 2061, 2062], "atol_": [2043, 2056, 2060, 2061, 2062], "gradient_unsupported_dtyp": 2043, "kwargs_to_args_n_kwarg": 2043, "with_inplac": [2043, 2059], "with_v": [2043, 2060, 2062], "ret_gt": [2043, 2060, 2061, 2062], "test_flag": [2043, 2061], "return_flat_np_arrai": [2043, 2061, 2062], "functiontestflag": [2043, 2061, 2106], "test_method": 2043, "method_container_flag": [2043, 2062], "class_nam": [2043, 2062], "init_with_v": [2043, 2062], "method_with_v": [2043, 2062], "device_": [2043, 2062], "numpositionalarg": [2043, 2062, 2106], "containerflag": [2043, 2062, 2106], "tthe": [2043, 2062], "var_fn": 2043, "holder": 2064, "interruptedtest": 2064, "test_interrup": [2064, 2065], "baseexcept": [2064, 2065], "testdata": 2064, "test_fn": [2064, 2066], "supported_device_dtyp": [2064, 2066], "setup_api_test": 2064, "test_data": [2064, 2067, 2068], "setup_frontend_test": 2064, "teardown_api_test": 2064, "teardown_frontend_test": 2064, "hypothesis_help": [2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103], "array_help": [2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085], "array_and_broadcastable_shap": 2072, "ex": [2072, 2074, 2076, 2080, 2081, 2083, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2097, 2098, 2100, 2101, 2102, 2103, 2116, 2121], "array_indices_axi": 2072, "indices_dtyp": [2072, 2075], "disable_random_axi": [2072, 2075], "axis_zero": [2072, 2075], "first_dimension_onli": [2072, 2075], "indices_same_dim": [2072, 2075], "abs_smallest_v": [2072, 2076, 2080, 2081, 2090, 2091, 2100, 2101], "exclude_max": [2072, 2076, 2080, 2081, 2100, 2101], "small_abs_safety_factor": [2072, 2076, 2080, 2081, 2090, 2091, 2100, 2101, 2103], "subnorm": [2072, 2076, 2100, 2101], "0002": [2072, 2076, 2080, 2081, 2100, 2101, 2103], "arrays_and_ax": 2072, "arrays_for_pool": 2072, "min_dim": [2072, 2078, 2084], "max_dim": [2072, 2078, 2084], "min_sid": [2072, 2078, 2084], "max_sid": [2072, 2078, 2084], "ret_shap": [2072, 2080, 2081], "array_api_dtyp": [2072, 2080, 2086, 2087], "min_axi": [2072, 2081], "max_axi": [2072, 2081], "valid_axi": [2072, 2081], "allow_neg_ax": [2072, 2081], "min_axes_s": [2072, 2081], "max_axes_s": [2072, 2081], "force_int_axi": [2072, 2081], "list_of_length": 2072, "mutually_broadcastable_shap": 2072, "num_shap": [2072, 2084], "base_shap": [2072, 2084], "dtype_help": [2086, 2087, 2088, 2089], "get_castable_dtyp": 2086, "castabl": [2086, 2088], "prune_funct": [2086, 2089], "incas": [2086, 2089], "general_help": [2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099], "apply_safety_factor": 2090, "allow_neg": [2090, 2092], "force_tupl": [2090, 2092], "force_int": [2090, 2092], "matrix_is_st": 2090, "cond_limit": [2090, 2096], "computation": [2090, 2096], "condition_index": [2090, 2096], "ill": [2090, 2096], "prone": [2090, 2096], "thumb": [2090, 2096], "gradual": [2090, 2096], "decreas": [2090, 2096], "multicollinear": [2090, 2096], "x_and_filt": 2090, "number_help": [2100, 2101, 2102, 2103], "safety_factor": [2100, 2102], "frontendmethoddata": 2104, "ivy_init_modul": [2104, 2105], "framework_init_modul": [2104, 2105], "init_nam": [2104, 2105], "struct": 2105, "test_parameter_flag": [2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115], "build_flag": 2106, "function_flag": 2106, "testing_help": [2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123], "_given_kwarg": [2116, 2117, 2118, 2119, 2120], "number_positional_arg": [2116, 2120], "test_instance_method": [2116, 2120], "test_with_out": [2116, 2120], "num_positional_args_method": 2116}, "objects": {"ivy": [[0, 0, 0, "-", "_version"], [1, 0, 0, "-", "assertions"], [19, 0, 0, "-", "backend_handler"], [182, 0, 0, "-", "func_wrapper"], [1972, 0, 0, "-", "inspection"], [1989, 0, 0, "-", "stateful"], [2124, 0, 0, "-", "verbosity"]], "ivy.array": [[46, 0, 0, "-", "activations"], [48, 0, 0, "-", "array"], [50, 0, 0, "-", "conversions"], [55, 0, 0, "-", "creation"], [57, 0, 0, "-", "data_type"], [59, 0, 0, "-", "device"], [61, 0, 0, "-", "elementwise"], [64, 0, 0, "-", "general"], [66, 0, 0, "-", "gradients"], [68, 0, 0, "-", "image"], [70, 0, 0, "-", "layers"], [72, 0, 0, "-", "linear_algebra"], [74, 0, 0, "-", "losses"], [76, 0, 0, "-", "manipulation"], [78, 0, 0, "-", "norms"], [80, 0, 0, "-", "random"], [82, 0, 0, "-", "searching"], [84, 0, 0, "-", "set"], [86, 0, 0, "-", "sorting"], [88, 0, 0, "-", "statistical"], [90, 0, 0, "-", "utility"], [92, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[47, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[47, 2, 1, "", "gelu"], [47, 2, 1, "", "leaky_relu"], [47, 2, 1, "", "log_softmax"], [47, 2, 1, "", "relu"], [47, 2, 1, "", "sigmoid"], [47, 2, 1, "", "softmax"], [47, 2, 1, "", "softplus"]], "ivy.array.array": [[49, 1, 1, "", "Array"]], "ivy.array.array.Array": [[49, 3, 1, "", "T"], [49, 2, 1, "", "__abs__"], [49, 2, 1, "", "__add__"], [49, 2, 1, "", "__eq__"], [49, 2, 1, "", "__ge__"], [49, 2, 1, "", "__gt__"], [49, 2, 1, "", "__init__"], [49, 2, 1, "", "__le__"], [49, 2, 1, "", "__lt__"], [49, 2, 1, "", "__ne__"], [49, 2, 1, "", "__pow__"], [49, 2, 1, "", "__radd__"], [49, 2, 1, "", "__rrshift__"], [49, 2, 1, "", "__rshift__"], [49, 2, 1, "", "__rsub__"], [49, 2, 1, "", "__sub__"], [49, 2, 1, "", "__truediv__"], [49, 2, 1, "", "__xor__"], [49, 2, 1, "", "arange"], [49, 2, 1, "", "arg_info"], [49, 2, 1, "", "arg_names"], [49, 2, 1, "", "args_to_ivy"], [49, 2, 1, "", "args_to_native"], [49, 2, 1, "", "array"], [49, 2, 1, "", "as_ivy_dev"], [49, 2, 1, "", "as_ivy_dtype"], [49, 2, 1, "", "as_native_dev"], [49, 2, 1, "", "as_native_dtype"], [49, 2, 1, "", "asarray_handle_nestable"], [49, 2, 1, "", "asarray_infer_device"], [49, 2, 1, "", "asarray_to_native_arrays_and_back"], [49, 2, 1, "", "cache_fn"], [49, 2, 1, "", "check_float"], [49, 2, 1, "", "clear_mem_on_dev"], [49, 2, 1, "", "closest_valid_dtype"], [49, 2, 1, "", "container_types"], [49, 2, 1, "", "conv"], [49, 2, 1, "", "conv2d_transpose"], [49, 2, 1, "", "conv_general_dilated"], [49, 2, 1, "", "conv_general_transpose"], [49, 2, 1, "", "current_backend"], [49, 2, 1, "", "current_backend_str"], [49, 3, 1, "", "data"], [49, 2, 1, "", "deconv_length"], [49, 2, 1, "", "default_device"], [49, 2, 1, "", "default_dtype"], [49, 2, 1, "", "default_float_dtype"], [49, 2, 1, "", "default_int_dtype"], [49, 2, 1, "", "default_uint_dtype"], [49, 2, 1, "", "deserialize"], [49, 2, 1, "", "dev_util"], [49, 3, 1, "", "device"], [49, 3, 1, "", "dtype"], [49, 2, 1, "", "dtype_bits"], [49, 2, 1, "", "empty"], [49, 2, 1, "", "execute_with_gradients"], [49, 2, 1, "", "eye"], [49, 2, 1, "", "full"], [49, 2, 1, "", "function_supported_devices"], [49, 2, 1, "", "function_supported_devices_and_dtypes"], [49, 2, 1, "", "function_supported_dtypes"], [49, 2, 1, "", "function_unsupported_devices"], [49, 2, 1, "", "function_unsupported_devices_and_dtypes"], [49, 2, 1, "", "function_unsupported_dtypes"], [49, 2, 1, "", "get"], [49, 2, 1, "", "get_all_arrays_in_memory"], [49, 2, 1, "", "get_all_ivy_arrays_on_dev"], [49, 2, 1, "", "get_array_mode"], [49, 2, 1, "", "get_exception_trace_mode"], [49, 2, 1, "", "get_item"], [49, 2, 1, "", "get_min_base"], [49, 2, 1, "", "get_min_denominator"], [49, 2, 1, "", "get_nestable_mode"], [49, 2, 1, "", "get_queue_timeout"], [49, 2, 1, "", "get_referrers_recursive"], [49, 2, 1, "", "get_show_func_wrapper_trace_mode"], [49, 2, 1, "", "get_tmp_dir"], [49, 2, 1, "", "get_x_data_format"], [49, 2, 1, "", "gpu_is_available"], [49, 2, 1, "", "grad"], [49, 2, 1, "", "handle_array_like"], [49, 2, 1, "", "handle_exceptions"], [49, 2, 1, "", "handle_nestable"], [49, 2, 1, "", "handle_out_argument"], [49, 2, 1, "", "handle_padding"], [49, 2, 1, "", "infer_default_dtype"], [49, 2, 1, "", "infer_device"], [49, 2, 1, "", "infer_dtype"], [49, 2, 1, "", "inplace_arrays_supported"], [49, 2, 1, "", "inplace_variables_supported"], [49, 2, 1, "", "inputs_to_ivy_arrays"], [49, 2, 1, "", "inputs_to_native_arrays"], [49, 2, 1, "", "integer_arrays_to_float"], [49, 2, 1, "", "invalid_dtype"], [49, 2, 1, "", "isscalar"], [49, 2, 1, "", "jac"], [49, 3, 1, "", "mT"], [49, 2, 1, "", "match_kwargs"], [49, 2, 1, "", "multiprocessing"], [49, 3, 1, "", "ndim"], [49, 2, 1, "", "normalize_axis_tuple"], [49, 2, 1, "", "num_arrays_in_memory"], [49, 2, 1, "", "num_cpu_cores"], [49, 2, 1, "", "num_gpus"], [49, 2, 1, "", "num_ivy_arrays_on_dev"], [49, 2, 1, "", "ones"], [49, 2, 1, "", "outputs_to_ivy_arrays"], [49, 2, 1, "", "percent_used_mem_on_dev"], [49, 2, 1, "", "print_all_arrays_in_memory"], [49, 2, 1, "", "print_all_ivy_arrays_on_dev"], [49, 2, 1, "", "promote_types"], [49, 2, 1, "", "promote_types_of_inputs"], [49, 2, 1, "", "seed"], [49, 2, 1, "", "set_array_mode"], [49, 2, 1, "", "set_default_device"], [49, 2, 1, "", "set_default_dtype"], [49, 2, 1, "", "set_default_float_dtype"], [49, 2, 1, "", "set_default_int_dtype"], [49, 2, 1, "", "set_default_uint_dtype"], [49, 2, 1, "", "set_exception_trace_mode"], [49, 2, 1, "", "set_min_base"], [49, 2, 1, "", "set_min_denominator"], [49, 2, 1, "", "set_nestable_mode"], [49, 2, 1, "", "set_queue_timeout"], [49, 2, 1, "", "set_shape_array_mode"], [49, 2, 1, "", "set_show_func_wrapper_trace_mode"], [49, 2, 1, "", "set_split_factor"], [49, 2, 1, "", "set_tmp_dir"], [49, 2, 1, "", "set_with_grads"], [49, 3, 1, "", "shape"], [49, 2, 1, "", "shape_array_mode"], [49, 3, 1, "", "size"], [49, 2, 1, "", "split_factor"], [49, 2, 1, "", "split_func_call"], [49, 2, 1, "", "to_ivy"], [49, 2, 1, "", "to_ivy_shape"], [49, 2, 1, "", "to_native"], [49, 2, 1, "", "to_native_arrays_and_back"], [49, 2, 1, "", "to_native_shape"], [49, 2, 1, "", "total_mem_on_dev"], [49, 2, 1, "", "tpu_is_available"], [49, 2, 1, "", "try_else_none"], [49, 2, 1, "", "type_promote_arrays"], [49, 2, 1, "", "unset_array_mode"], [49, 2, 1, "", "unset_default_device"], [49, 2, 1, "", "unset_default_dtype"], [49, 2, 1, "", "unset_default_float_dtype"], [49, 2, 1, "", "unset_default_int_dtype"], [49, 2, 1, "", "unset_default_uint_dtype"], [49, 2, 1, "", "unset_exception_trace_mode"], [49, 2, 1, "", "unset_nestable_mode"], [49, 2, 1, "", "unset_queue_timeout"], [49, 2, 1, "", "unset_shape_array_mode"], [49, 2, 1, "", "unset_show_func_wrapper_trace_mode"], [49, 2, 1, "", "unset_with_grads"], [49, 2, 1, "", "used_mem_on_dev"], [49, 2, 1, "", "valid_dtype"], [49, 2, 1, "", "value_and_grad"], [49, 2, 1, "", "vmap"], [49, 2, 1, "", "with_grads"], [49, 2, 1, "", "wraps"], [49, 2, 1, "", "zeros"]], "ivy.array.array_methods": [[455, 4, 1, "", "abs"], [460, 4, 1, "", "acos"], [465, 4, 1, "", "acosh"], [1454, 4, 1, "", "adam_step"], [1458, 4, 1, "", "adam_update"], [470, 4, 1, "", "add"], [1959, 4, 1, "", "all"], [1260, 4, 1, "", "all_equal"], [780, 4, 1, "", "allclose"], [785, 4, 1, "", "angle"], [1964, 4, 1, "", "any"], [1850, 4, 1, "", "argmax"], [1855, 4, 1, "", "argmin"], [1897, 4, 1, "", "argsort"], [1860, 4, 1, "", "argwhere"], [1267, 4, 1, "", "array_equal"], [243, 4, 1, "", "asarray"], [475, 4, 1, "", "asin"], [480, 4, 1, "", "asinh"], [1270, 4, 1, "", "assert_supports_inplace"], [331, 4, 1, "", "astype"], [485, 4, 1, "", "atan"], [490, 4, 1, "", "atan2"], [495, 4, 1, "", "atanh"], [790, 4, 1, "", "atleast_1d"], [795, 4, 1, "", "atleast_2d"], [800, 4, 1, "", "atleast_3d"], [805, 4, 1, "", "avg_pool1d"], [810, 4, 1, "", "avg_pool2d"], [815, 4, 1, "", "avg_pool3d"], [820, 4, 1, "", "beta"], [1697, 4, 1, "", "binary_cross_entropy"], [500, 4, 1, "", "bitwise_and"], [505, 4, 1, "", "bitwise_invert"], [510, 4, 1, "", "bitwise_left_shift"], [515, 4, 1, "", "bitwise_or"], [520, 4, 1, "", "bitwise_right_shift"], [525, 4, 1, "", "bitwise_xor"], [336, 4, 1, "", "broadcast_arrays"], [341, 4, 1, "", "broadcast_to"], [346, 4, 1, "", "can_cast"], [530, 4, 1, "", "ceil"], [1557, 4, 1, "", "cholesky"], [1713, 4, 1, "", "clip"], [1276, 4, 1, "", "clip_matrix_norm"], [1281, 4, 1, "", "clip_vector_norm"], [1718, 4, 1, "", "concat"], [1723, 4, 1, "", "constant_pad"], [1492, 4, 1, "", "conv1d"], [1497, 4, 1, "", "conv1d_transpose"], [1502, 4, 1, "", "conv2d"], [1511, 4, 1, "", "conv3d"], [1516, 4, 1, "", "conv3d_transpose"], [250, 4, 1, "", "copy_array"], [835, 4, 1, "", "copysign"], [535, 4, 1, "", "cos"], [540, 4, 1, "", "cosh"], [840, 4, 1, "", "count_nonzero"], [1562, 4, 1, "", "cross"], [1702, 4, 1, "", "cross_entropy"], [1913, 4, 1, "", "cumprod"], [1918, 4, 1, "", "cumsum"], [855, 4, 1, "", "dct"], [1288, 4, 1, "", "default"], [545, 4, 1, "", "deg2rad"], [1524, 4, 1, "", "depthwise_conv2d"], [1567, 4, 1, "", "det"], [426, 4, 1, "", "dev"], [1572, 4, 1, "", "diag"], [861, 4, 1, "", "diagflat"], [1577, 4, 1, "", "diagonal"], [866, 4, 1, "", "diff"], [871, 4, 1, "", "dirichlet"], [550, 4, 1, "", "divide"], [1529, 4, 1, "", "dropout"], [877, 4, 1, "", "dsplit"], [882, 4, 1, "", "dstack"], [887, 4, 1, "", "eig"], [1583, 4, 1, "", "eigh"], [1588, 4, 1, "", "eigvalsh"], [1291, 4, 1, "", "einops_rearrange"], [1296, 4, 1, "", "einops_reduce"], [1301, 4, 1, "", "einops_repeat"], [1923, 4, 1, "", "einsum"], [254, 4, 1, "", "empty_like"], [555, 4, 1, "", "equal"], [560, 4, 1, "", "erf"], [1306, 4, 1, "", "exists"], [565, 4, 1, "", "exp"], [918, 4, 1, "", "exp2"], [1728, 4, 1, "", "expand_dims"], [570, 4, 1, "", "expm1"], [364, 4, 1, "", "finfo"], [924, 4, 1, "", "fix"], [929, 4, 1, "", "flatten"], [1733, 4, 1, "", "flip"], [934, 4, 1, "", "fliplr"], [939, 4, 1, "", "flipud"], [944, 4, 1, "", "float_power"], [575, 4, 1, "", "floor"], [580, 4, 1, "", "floor_divide"], [949, 4, 1, "", "fmax"], [954, 4, 1, "", "fmod"], [1309, 4, 1, "", "fourier_encode"], [262, 4, 1, "", "from_dlpack"], [268, 4, 1, "", "full_like"], [959, 4, 1, "", "gamma"], [1316, 4, 1, "", "gather"], [1321, 4, 1, "", "gather_nd"], [962, 4, 1, "", "gcd"], [199, 4, 1, "", "gelu"], [1333, 4, 1, "", "get_num_dims"], [969, 4, 1, "", "gradient"], [1464, 4, 1, "", "gradient_descent_update"], [585, 4, 1, "", "greater"], [590, 4, 1, "", "greater_equal"], [1342, 4, 1, "", "has_nans"], [983, 4, 1, "", "heaviside"], [988, 4, 1, "", "hsplit"], [993, 4, 1, "", "hstack"], [998, 4, 1, "", "i0"], [375, 4, 1, "", "iinfo"], [1593, 4, 1, "", "inner"], [1348, 4, 1, "", "inplace_decrement"], [1353, 4, 1, "", "inplace_increment"], [1358, 4, 1, "", "inplace_update"], [1598, 4, 1, "", "inv"], [1364, 4, 1, "", "is_array"], [382, 4, 1, "", "is_bool_dtype"], [387, 4, 1, "", "is_float_dtype"], [392, 4, 1, "", "is_int_dtype"], [1369, 4, 1, "", "is_ivy_array"], [1374, 4, 1, "", "is_ivy_container"], [1377, 4, 1, "", "is_native_array"], [397, 4, 1, "", "is_uint_dtype"], [1006, 4, 1, "", "isclose"], [595, 4, 1, "", "isfinite"], [1011, 4, 1, "", "isin"], [600, 4, 1, "", "isinf"], [605, 4, 1, "", "isnan"], [1016, 4, 1, "", "isneginf"], [1021, 4, 1, "", "isposinf"], [610, 4, 1, "", "isreal"], [1034, 4, 1, "", "kron"], [1469, 4, 1, "", "lamb_update"], [1473, 4, 1, "", "lars_update"], [1818, 4, 1, "", "layer_norm"], [1049, 4, 1, "", "lcm"], [205, 4, 1, "", "leaky_relu"], [615, 4, 1, "", "less"], [620, 4, 1, "", "less_equal"], [1536, 4, 1, "", "linear"], [273, 4, 1, "", "linspace"], [625, 4, 1, "", "log"], [630, 4, 1, "", "log10"], [635, 4, 1, "", "log1p"], [640, 4, 1, "", "log2"], [210, 4, 1, "", "log_softmax"], [645, 4, 1, "", "logaddexp"], [1060, 4, 1, "", "logaddexp2"], [650, 4, 1, "", "logical_and"], [655, 4, 1, "", "logical_not"], [660, 4, 1, "", "logical_or"], [665, 4, 1, "", "logical_xor"], [1065, 4, 1, "", "logit"], [278, 4, 1, "", "logspace"], [1541, 4, 1, "", "lstm_update"], [1603, 4, 1, "", "matmul"], [1095, 4, 1, "", "matrix_exp"], [1608, 4, 1, "", "matrix_norm"], [1613, 4, 1, "", "matrix_power"], [1618, 4, 1, "", "matrix_rank"], [1623, 4, 1, "", "matrix_transpose"], [1927, 4, 1, "", "max"], [1100, 4, 1, "", "max_pool1d"], [1105, 4, 1, "", "max_pool2d"], [1110, 4, 1, "", "max_pool3d"], [670, 4, 1, "", "maximum"], [1931, 4, 1, "", "mean"], [1115, 4, 1, "", "median"], [283, 4, 1, "", "meshgrid"], [1935, 4, 1, "", "min"], [675, 4, 1, "", "minimum"], [1121, 4, 1, "", "moveaxis"], [1126, 4, 1, "", "msort"], [1131, 4, 1, "", "multi_dot"], [1546, 4, 1, "", "multi_head_attention"], [1823, 4, 1, "", "multinomial"], [680, 4, 1, "", "multiply"], [1136, 4, 1, "", "nan_to_num"], [1141, 4, 1, "", "nanmean"], [1146, 4, 1, "", "nansum"], [288, 4, 1, "", "native_array"], [685, 4, 1, "", "negative"], [1156, 4, 1, "", "nextafter"], [1865, 4, 1, "", "nonzero"], [690, 4, 1, "", "not_equal"], [293, 4, 1, "", "one_hot"], [301, 4, 1, "", "ones_like"], [1477, 4, 1, "", "optimizer_update"], [1628, 4, 1, "", "outer"], [1162, 4, 1, "", "pad"], [1738, 4, 1, "", "permute_dims"], [1633, 4, 1, "", "pinv"], [695, 4, 1, "", "positive"], [700, 4, 1, "", "pow"], [1939, 4, 1, "", "prod"], [1638, 4, 1, "", "qr"], [1167, 4, 1, "", "quantile"], [705, 4, 1, "", "rad2deg"], [1828, 4, 1, "", "randint"], [1833, 4, 1, "", "random_normal"], [1838, 4, 1, "", "random_uniform"], [710, 4, 1, "", "reciprocal"], [215, 4, 1, "", "relu"], [715, 4, 1, "", "remainder"], [1743, 4, 1, "", "repeat"], [1748, 4, 1, "", "reshape"], [404, 4, 1, "", "result_type"], [1753, 4, 1, "", "roll"], [1176, 4, 1, "", "rot90"], [720, 4, 1, "", "round"], [1551, 4, 1, "", "scaled_dot_product_attention"], [1387, 4, 1, "", "scatter_flat"], [1392, 4, 1, "", "scatter_nd"], [1902, 4, 1, "", "searchsorted"], [1844, 4, 1, "", "shuffle"], [220, 4, 1, "", "sigmoid"], [725, 4, 1, "", "sign"], [1183, 4, 1, "", "signbit"], [730, 4, 1, "", "sin"], [1188, 4, 1, "", "sinc"], [735, 4, 1, "", "sinh"], [1643, 4, 1, "", "slogdet"], [225, 4, 1, "", "softmax"], [230, 4, 1, "", "softplus"], [1648, 4, 1, "", "solve"], [1907, 4, 1, "", "sort"], [1707, 4, 1, "", "sparse_cross_entropy"], [1758, 4, 1, "", "split"], [740, 4, 1, "", "sqrt"], [745, 4, 1, "", "square"], [1763, 4, 1, "", "squeeze"], [1408, 4, 1, "", "stable_divide"], [1413, 4, 1, "", "stable_pow"], [1768, 4, 1, "", "stack"], [1944, 4, 1, "", "std"], [1483, 4, 1, "", "stop_gradient"], [751, 4, 1, "", "subtract"], [1949, 4, 1, "", "sum"], [1419, 4, 1, "", "supports_inplace_updates"], [1654, 4, 1, "", "svd"], [1659, 4, 1, "", "svdvals"], [1774, 4, 1, "", "swapaxes"], [1208, 4, 1, "", "take_along_axis"], [756, 4, 1, "", "tan"], [761, 4, 1, "", "tanh"], [1667, 4, 1, "", "tensorsolve"], [1779, 4, 1, "", "tile"], [446, 4, 1, "", "to_device"], [1425, 4, 1, "", "to_list"], [1430, 4, 1, "", "to_numpy"], [1435, 4, 1, "", "to_scalar"], [1213, 4, 1, "", "top_k"], [1672, 4, 1, "", "trace"], [1217, 4, 1, "", "trapz"], [307, 4, 1, "", "tril"], [312, 4, 1, "", "triu"], [766, 4, 1, "", "trunc"], [771, 4, 1, "", "trunc_divide"], [1877, 4, 1, "", "unique_all"], [1882, 4, 1, "", "unique_counts"], [1887, 4, 1, "", "unique_inverse"], [1892, 4, 1, "", "unique_values"], [1229, 4, 1, "", "unravel_index"], [1784, 4, 1, "", "unstack"], [1447, 4, 1, "", "value_is_nan"], [1677, 4, 1, "", "vander"], [1954, 4, 1, "", "var"], [1682, 4, 1, "", "vecdot"], [1687, 4, 1, "", "vector_norm"], [1692, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1239, 4, 1, "", "vsplit"], [1244, 4, 1, "", "vstack"], [1871, 4, 1, "", "where"], [1249, 4, 1, "", "xlogy"], [1789, 4, 1, "", "zero_pad"], [320, 4, 1, "", "zeros_like"], [1254, 4, 1, "", "zeta"]], "ivy.array.conversions": [[51, 4, 1, "", "args_to_ivy"], [52, 4, 1, "", "args_to_native"], [53, 4, 1, "", "to_ivy"], [54, 4, 1, "", "to_native"]], "ivy.array.creation": [[56, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[56, 2, 1, "", "asarray"], [56, 2, 1, "", "copy_array"], [56, 2, 1, "", "empty_like"], [56, 2, 1, "", "from_dlpack"], [56, 2, 1, "", "full_like"], [56, 2, 1, "", "linspace"], [56, 2, 1, "", "logspace"], [56, 2, 1, "", "meshgrid"], [56, 2, 1, "", "native_array"], [56, 2, 1, "", "one_hot"], [56, 2, 1, "", "ones_like"], [56, 2, 1, "", "tril"], [56, 2, 1, "", "triu"], [56, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[58, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[58, 2, 1, "", "astype"], [58, 2, 1, "", "broadcast_arrays"], [58, 2, 1, "", "broadcast_to"], [58, 2, 1, "", "can_cast"], [58, 2, 1, "", "dtype"], [58, 2, 1, "", "finfo"], [58, 2, 1, "", "iinfo"], [58, 2, 1, "", "is_bool_dtype"], [58, 2, 1, "", "is_float_dtype"], [58, 2, 1, "", "is_int_dtype"], [58, 2, 1, "", "is_uint_dtype"], [58, 2, 1, "", "result_type"]], "ivy.array.device": [[60, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[60, 2, 1, "", "dev"], [60, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[62, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[62, 2, 1, "", "abs"], [62, 2, 1, "", "acos"], [62, 2, 1, "", "acosh"], [62, 2, 1, "", "add"], [62, 2, 1, "", "asin"], [62, 2, 1, "", "asinh"], [62, 2, 1, "", "atan"], [62, 2, 1, "", "atan2"], [62, 2, 1, "", "atanh"], [62, 2, 1, "", "bitwise_and"], [62, 2, 1, "", "bitwise_invert"], [62, 2, 1, "", "bitwise_left_shift"], [62, 2, 1, "", "bitwise_or"], [62, 2, 1, "", "bitwise_right_shift"], [62, 2, 1, "", "bitwise_xor"], [62, 2, 1, "", "ceil"], [62, 2, 1, "", "cos"], [62, 2, 1, "", "cosh"], [62, 2, 1, "", "deg2rad"], [62, 2, 1, "", "divide"], [62, 2, 1, "", "equal"], [62, 2, 1, "", "erf"], [62, 2, 1, "", "exp"], [62, 2, 1, "", "expm1"], [62, 2, 1, "", "floor"], [62, 2, 1, "", "floor_divide"], [62, 2, 1, "", "greater"], [62, 2, 1, "", "greater_equal"], [62, 2, 1, "", "isfinite"], [62, 2, 1, "", "isinf"], [62, 2, 1, "", "isnan"], [62, 2, 1, "", "isreal"], [62, 2, 1, "", "less"], [62, 2, 1, "", "less_equal"], [62, 2, 1, "", "log"], [62, 2, 1, "", "log10"], [62, 2, 1, "", "log1p"], [62, 2, 1, "", "log2"], [62, 2, 1, "", "logaddexp"], [62, 2, 1, "", "logical_and"], [62, 2, 1, "", "logical_not"], [62, 2, 1, "", "logical_or"], [62, 2, 1, "", "logical_xor"], [62, 2, 1, "", "maximum"], [62, 2, 1, "", "minimum"], [62, 2, 1, "", "multiply"], [62, 2, 1, "", "negative"], [62, 2, 1, "", "not_equal"], [62, 2, 1, "", "positive"], [62, 2, 1, "", "pow"], [62, 2, 1, "", "rad2deg"], [62, 2, 1, "", "reciprocal"], [62, 2, 1, "", "remainder"], [62, 2, 1, "", "round"], [62, 2, 1, "", "sign"], [62, 2, 1, "", "sin"], [62, 2, 1, "", "sinh"], [62, 2, 1, "", "sqrt"], [62, 2, 1, "", "square"], [62, 2, 1, "", "subtract"], [62, 2, 1, "", "tan"], [62, 2, 1, "", "tanh"], [62, 2, 1, "", "trunc"], [62, 2, 1, "", "trunc_divide"]], "ivy.array.experimental": [[63, 1, 1, "", "ArrayWithActivationsExperimental"], [63, 1, 1, "", "ArrayWithConversionsExperimental"], [63, 1, 1, "", "ArrayWithCreationExperimental"], [63, 1, 1, "", "ArrayWithData_typeExperimental"], [63, 1, 1, "", "ArrayWithDeviceExperimental"], [63, 1, 1, "", "ArrayWithElementWiseExperimental"], [63, 1, 1, "", "ArrayWithGeneralExperimental"], [63, 1, 1, "", "ArrayWithGradientsExperimental"], [63, 1, 1, "", "ArrayWithImageExperimental"], [63, 1, 1, "", "ArrayWithLayersExperimental"], [63, 1, 1, "", "ArrayWithLinearAlgebraExperimental"], [63, 1, 1, "", "ArrayWithLossesExperimental"], [63, 1, 1, "", "ArrayWithManipulationExperimental"], [63, 1, 1, "", "ArrayWithNormsExperimental"], [63, 1, 1, "", "ArrayWithRandomExperimental"], [63, 1, 1, "", "ArrayWithSearchingExperimental"], [63, 1, 1, "", "ArrayWithSetExperimental"], [63, 1, 1, "", "ArrayWithSortingExperimental"], [63, 1, 1, "", "ArrayWithStatisticalExperimental"], [63, 1, 1, "", "ArrayWithUtilityExperimental"]], "ivy.array.experimental.ArrayWithActivationsExperimental": [[63, 2, 1, "", "logit"]], "ivy.array.experimental.ArrayWithElementWiseExperimental": [[63, 2, 1, "", "allclose"], [63, 2, 1, "", "angle"], [63, 2, 1, "", "copysign"], [63, 2, 1, "", "count_nonzero"], [63, 2, 1, "", "diff"], [63, 2, 1, "", "exp2"], [63, 2, 1, "", "fix"], [63, 2, 1, "", "float_power"], [63, 2, 1, "", "fmax"], [63, 2, 1, "", "fmod"], [63, 2, 1, "", "gcd"], [63, 2, 1, "", "gradient"], [63, 2, 1, "", "isclose"], [63, 2, 1, "", "isneginf"], [63, 2, 1, "", "isposinf"], [63, 2, 1, "", "lcm"], [63, 2, 1, "", "logaddexp2"], [63, 2, 1, "", "nan_to_num"], [63, 2, 1, "", "nansum"], [63, 2, 1, "", "nextafter"], [63, 2, 1, "", "signbit"], [63, 2, 1, "", "sinc"], [63, 2, 1, "", "trapz"], [63, 2, 1, "", "xlogy"], [63, 2, 1, "", "zeta"]], "ivy.array.experimental.ArrayWithGeneralExperimental": [[63, 2, 1, "", "isin"]], "ivy.array.experimental.ArrayWithLayersExperimental": [[63, 2, 1, "", "avg_pool1d"], [63, 2, 1, "", "avg_pool2d"], [63, 2, 1, "", "avg_pool3d"], [63, 2, 1, "", "dct"], [63, 2, 1, "", "max_pool1d"], [63, 2, 1, "", "max_pool2d"], [63, 2, 1, "", "max_pool3d"]], "ivy.array.experimental.ArrayWithLinearAlgebraExperimental": [[63, 2, 1, "", "diagflat"], [63, 2, 1, "", "eig"], [63, 2, 1, "", "kron"], [63, 2, 1, "", "matrix_exp"], [63, 2, 1, "", "multi_dot"]], "ivy.array.experimental.ArrayWithManipulationExperimental": [[63, 2, 1, "", "atleast_1d"], [63, 2, 1, "", "atleast_2d"], [63, 2, 1, "", "atleast_3d"], [63, 2, 1, "", "dsplit"], [63, 2, 1, "", "dstack"], [63, 2, 1, "", "flatten"], [63, 2, 1, "", "fliplr"], [63, 2, 1, "", "flipud"], [63, 2, 1, "", "heaviside"], [63, 2, 1, "", "hsplit"], [63, 2, 1, "", "hstack"], [63, 2, 1, "", "i0"], [63, 2, 1, "", "moveaxis"], [63, 2, 1, "", "pad"], [63, 2, 1, "", "rot90"], [63, 2, 1, "", "take_along_axis"], [63, 2, 1, "", "top_k"], [63, 2, 1, "", "vsplit"], [63, 2, 1, "", "vstack"]], "ivy.array.experimental.ArrayWithRandomExperimental": [[63, 2, 1, "", "beta"], [63, 2, 1, "", "dirichlet"], [63, 2, 1, "", "gamma"]], "ivy.array.experimental.ArrayWithSortingExperimental": [[63, 2, 1, "", "msort"]], "ivy.array.experimental.ArrayWithStatisticalExperimental": [[63, 2, 1, "", "median"], [63, 2, 1, "", "nanmean"], [63, 2, 1, "", "quantile"], [63, 2, 1, "", "unravel_index"]], "ivy.array.general": [[65, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[65, 2, 1, "", "all_equal"], [65, 2, 1, "", "array_equal"], [65, 2, 1, "", "assert_supports_inplace"], [65, 2, 1, "", "clip_matrix_norm"], [65, 2, 1, "", "clip_vector_norm"], [65, 2, 1, "", "default"], [65, 2, 1, "", "einops_rearrange"], [65, 2, 1, "", "einops_reduce"], [65, 2, 1, "", "einops_repeat"], [65, 2, 1, "", "exists"], [65, 2, 1, "", "fourier_encode"], [65, 2, 1, "", "gather"], [65, 2, 1, "", "gather_nd"], [65, 2, 1, "", "get_num_dims"], [65, 2, 1, "", "has_nans"], [65, 2, 1, "", "inplace_decrement"], [65, 2, 1, "", "inplace_increment"], [65, 2, 1, "", "inplace_update"], [65, 2, 1, "", "is_array"], [65, 2, 1, "", "is_ivy_array"], [65, 2, 1, "", "is_ivy_container"], [65, 2, 1, "", "is_native_array"], [65, 2, 1, "", "scatter_flat"], [65, 2, 1, "", "scatter_nd"], [65, 2, 1, "", "stable_divide"], [65, 2, 1, "", "stable_pow"], [65, 2, 1, "", "supports_inplace_updates"], [65, 2, 1, "", "to_list"], [65, 2, 1, "", "to_numpy"], [65, 2, 1, "", "to_scalar"], [65, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[67, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[67, 2, 1, "", "adam_step"], [67, 2, 1, "", "adam_update"], [67, 2, 1, "", "gradient_descent_update"], [67, 2, 1, "", "lamb_update"], [67, 2, 1, "", "lars_update"], [67, 2, 1, "", "optimizer_update"], [67, 2, 1, "", "stop_gradient"]], "ivy.array.image": [[69, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[71, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[71, 2, 1, "", "conv1d"], [71, 2, 1, "", "conv1d_transpose"], [71, 2, 1, "", "conv2d"], [71, 2, 1, "", "conv3d"], [71, 2, 1, "", "conv3d_transpose"], [71, 2, 1, "", "depthwise_conv2d"], [71, 2, 1, "", "dropout"], [71, 2, 1, "", "dropout1d"], [71, 2, 1, "", "linear"], [71, 2, 1, "", "lstm_update"], [71, 2, 1, "", "multi_head_attention"], [71, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linear_algebra": [[73, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[73, 2, 1, "", "cholesky"], [73, 2, 1, "", "cross"], [73, 2, 1, "", "det"], [73, 2, 1, "", "diag"], [73, 2, 1, "", "diagonal"], [73, 2, 1, "", "eig"], [73, 2, 1, "", "eigh"], [73, 2, 1, "", "eigvalsh"], [73, 2, 1, "", "inner"], [73, 2, 1, "", "inv"], [73, 2, 1, "", "matmul"], [73, 2, 1, "", "matrix_norm"], [73, 2, 1, "", "matrix_power"], [73, 2, 1, "", "matrix_rank"], [73, 2, 1, "", "matrix_transpose"], [73, 2, 1, "", "outer"], [73, 2, 1, "", "pinv"], [73, 2, 1, "", "qr"], [73, 2, 1, "", "slogdet"], [73, 2, 1, "", "solve"], [73, 2, 1, "", "svd"], [73, 2, 1, "", "svdvals"], [73, 2, 1, "", "tensordot"], [73, 2, 1, "", "tensorsolve"], [73, 2, 1, "", "trace"], [73, 2, 1, "", "vander"], [73, 2, 1, "", "vecdot"], [73, 2, 1, "", "vector_norm"], [73, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[75, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[75, 2, 1, "", "binary_cross_entropy"], [75, 2, 1, "", "cross_entropy"], [75, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[77, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[77, 2, 1, "", "clip"], [77, 2, 1, "", "concat"], [77, 2, 1, "", "constant_pad"], [77, 2, 1, "", "expand_dims"], [77, 2, 1, "", "flip"], [77, 2, 1, "", "permute_dims"], [77, 2, 1, "", "repeat"], [77, 2, 1, "", "reshape"], [77, 2, 1, "", "roll"], [77, 2, 1, "", "split"], [77, 2, 1, "", "squeeze"], [77, 2, 1, "", "stack"], [77, 2, 1, "", "swapaxes"], [77, 2, 1, "", "tile"], [77, 2, 1, "", "unstack"], [77, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[79, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[79, 2, 1, "", "layer_norm"]], "ivy.array.random": [[81, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[81, 2, 1, "", "multinomial"], [81, 2, 1, "", "randint"], [81, 2, 1, "", "random_normal"], [81, 2, 1, "", "random_uniform"], [81, 2, 1, "", "shuffle"]], "ivy.array.searching": [[83, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[83, 2, 1, "", "argmax"], [83, 2, 1, "", "argmin"], [83, 2, 1, "", "argwhere"], [83, 2, 1, "", "nonzero"], [83, 2, 1, "", "where"]], "ivy.array.set": [[85, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[85, 2, 1, "", "unique_all"], [85, 2, 1, "", "unique_counts"], [85, 2, 1, "", "unique_inverse"], [85, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[87, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[87, 2, 1, "", "argsort"], [87, 2, 1, "", "searchsorted"], [87, 2, 1, "", "sort"]], "ivy.array.statistical": [[89, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[89, 2, 1, "", "cumprod"], [89, 2, 1, "", "cumsum"], [89, 2, 1, "", "einsum"], [89, 2, 1, "", "max"], [89, 2, 1, "", "mean"], [89, 2, 1, "", "min"], [89, 2, 1, "", "prod"], [89, 2, 1, "", "std"], [89, 2, 1, "", "sum"], [89, 2, 1, "", "var"]], "ivy.array.utility": [[91, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[91, 2, 1, "", "all"], [91, 2, 1, "", "any"]], "ivy.array.wrapping": [[93, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy.assertions": [[2, 4, 1, "", "check_all"], [3, 4, 1, "", "check_all_or_any_fn"], [4, 4, 1, "", "check_any"], [5, 4, 1, "", "check_elem_in_list"], [6, 4, 1, "", "check_equal"], [7, 4, 1, "", "check_exists"], [8, 4, 1, "", "check_false"], [9, 4, 1, "", "check_fill_value_and_dtype_are_compatible"], [10, 4, 1, "", "check_gather_input_valid"], [11, 4, 1, "", "check_gather_nd_input_valid"], [12, 4, 1, "", "check_greater"], [13, 4, 1, "", "check_inplace_sizes_valid"], [14, 4, 1, "", "check_isinstance"], [15, 4, 1, "", "check_less"], [16, 4, 1, "", "check_one_way_broadcastable"], [17, 4, 1, "", "check_shape"], [18, 4, 1, "", "check_true"]], "ivy.backend_handler": [[20, 1, 1, "", "ContextManager"], [21, 4, 1, "", "choose_random_backend"], [22, 4, 1, "", "clear_backend_stack"], [23, 4, 1, "", "current_backend"], [24, 4, 1, "", "fn_name_from_version_specific_fn_name"], [25, 4, 1, "", "get_backend"], [26, 4, 1, "", "set_backend"], [27, 4, 1, "", "set_backend_to_specific_version"], [28, 4, 1, "", "set_jax_backend"], [29, 4, 1, "", "set_numpy_backend"], [30, 4, 1, "", "set_tensorflow_backend"], [31, 4, 1, "", "set_torch_backend"], [32, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[20, 2, 1, "", "__init__"]], "ivy.container": [[95, 0, 0, "-", "activations"], [97, 0, 0, "-", "base"], [99, 0, 0, "-", "container"], [101, 0, 0, "-", "conversions"], [103, 0, 0, "-", "creation"], [105, 0, 0, "-", "data_type"], [107, 0, 0, "-", "device"], [109, 0, 0, "-", "elementwise"], [112, 0, 0, "-", "general"], [114, 0, 0, "-", "gradients"], [116, 0, 0, "-", "image"], [118, 0, 0, "-", "layers"], [120, 0, 0, "-", "linear_algebra"], [122, 0, 0, "-", "losses"], [124, 0, 0, "-", "manipulation"], [126, 0, 0, "-", "norms"], [128, 0, 0, "-", "random"], [130, 0, 0, "-", "searching"], [132, 0, 0, "-", "set"], [134, 0, 0, "-", "sorting"], [136, 0, 0, "-", "statistical"], [138, 0, 0, "-", "utility"], [140, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[96, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[96, 2, 1, "", "gelu"], [96, 2, 1, "", "leaky_relu"], [96, 2, 1, "", "log_softmax"], [96, 2, 1, "", "relu"], [96, 2, 1, "", "sigmoid"], [96, 2, 1, "", "softmax"], [96, 2, 1, "", "softplus"], [96, 2, 1, "", "static_gelu"], [96, 2, 1, "", "static_leaky_relu"], [96, 2, 1, "", "static_log_softmax"], [96, 2, 1, "", "static_relu"], [96, 2, 1, "", "static_sigmoid"], [96, 2, 1, "", "static_softmax"], [96, 2, 1, "", "static_softplus"]], "ivy.container.base": [[98, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[98, 2, 1, "", "__getitem__"], [98, 2, 1, "", "__init__"], [98, 2, 1, "", "__setitem__"], [98, 2, 1, "", "cont_all_false"], [98, 2, 1, "", "cont_all_key_chains"], [98, 2, 1, "", "cont_all_true"], [98, 2, 1, "", "cont_as_bools"], [98, 2, 1, "", "cont_assert_contains_sub_container"], [98, 2, 1, "", "cont_assert_contains_sub_structure"], [98, 2, 1, "", "cont_assert_identical"], [98, 2, 1, "", "cont_assert_identical_structure"], [98, 2, 1, "", "cont_at_key_chain"], [98, 2, 1, "", "cont_at_key_chains"], [98, 2, 1, "", "cont_at_keys"], [98, 2, 1, "", "cont_combine"], [98, 2, 1, "", "cont_common_key_chains"], [98, 3, 1, "", "cont_config"], [98, 2, 1, "", "cont_contains_sub_container"], [98, 2, 1, "", "cont_contains_sub_structure"], [98, 2, 1, "", "cont_copy"], [98, 2, 1, "", "cont_create_if_absent"], [98, 2, 1, "", "cont_cutoff_at_depth"], [98, 2, 1, "", "cont_cutoff_at_height"], [98, 2, 1, "", "cont_deep_copy"], [98, 3, 1, "", "cont_dev"], [98, 3, 1, "", "cont_dev_str"], [98, 2, 1, "", "cont_diff"], [98, 2, 1, "", "cont_duplicate_array_keychains"], [98, 2, 1, "", "cont_find_sub_container"], [98, 2, 1, "", "cont_find_sub_structure"], [98, 2, 1, "", "cont_flatten_key_chain"], [98, 2, 1, "", "cont_flatten_key_chains"], [98, 2, 1, "", "cont_format_key_chains"], [98, 2, 1, "", "cont_from_disk_as_hdf5"], [98, 2, 1, "", "cont_from_disk_as_json"], [98, 2, 1, "", "cont_from_disk_as_pickled"], [98, 2, 1, "", "cont_from_flat_list"], [98, 2, 1, "", "cont_handle_inplace"], [98, 2, 1, "", "cont_has_key"], [98, 2, 1, "", "cont_has_key_chain"], [98, 2, 1, "", "cont_identical"], [98, 2, 1, "", "cont_identical_array_shapes"], [98, 2, 1, "", "cont_identical_configs"], [98, 2, 1, "", "cont_identical_structure"], [98, 2, 1, "", "cont_if_exists"], [98, 2, 1, "", "cont_inplace_update"], [98, 3, 1, "", "cont_ivy"], [98, 2, 1, "", "cont_key_chains_containing"], [98, 2, 1, "", "cont_list_join"], [98, 2, 1, "", "cont_list_stack"], [98, 2, 1, "", "cont_map"], [98, 2, 1, "", "cont_map_sub_conts"], [98, 3, 1, "", "cont_max_depth"], [98, 2, 1, "", "cont_multi_map"], [98, 2, 1, "", "cont_multi_map_in_function"], [98, 2, 1, "", "cont_num_arrays"], [98, 2, 1, "", "cont_overwrite_at_key_chain"], [98, 2, 1, "", "cont_overwrite_at_key_chains"], [98, 2, 1, "", "cont_prune_empty"], [98, 2, 1, "", "cont_prune_key_chain"], [98, 2, 1, "", "cont_prune_key_chains"], [98, 2, 1, "", "cont_prune_key_from_key_chains"], [98, 2, 1, "", "cont_prune_keys"], [98, 2, 1, "", "cont_prune_keys_from_key_chains"], [98, 2, 1, "", "cont_reduce"], [98, 2, 1, "", "cont_remove_key_length_limit"], [98, 2, 1, "", "cont_remove_print_limit"], [98, 2, 1, "", "cont_reshape_like"], [98, 2, 1, "", "cont_restructure"], [98, 2, 1, "", "cont_restructure_key_chains"], [98, 2, 1, "", "cont_set_at_key_chain"], [98, 2, 1, "", "cont_set_at_key_chains"], [98, 2, 1, "", "cont_set_at_keys"], [98, 3, 1, "", "cont_shape"], [98, 3, 1, "", "cont_shapes"], [98, 2, 1, "", "cont_show"], [98, 2, 1, "", "cont_show_sub_container"], [98, 2, 1, "", "cont_size_ordered_arrays"], [98, 2, 1, "", "cont_slice_keys"], [98, 2, 1, "", "cont_slice_via_key"], [98, 2, 1, "", "cont_sort_by_key"], [98, 2, 1, "", "cont_structural_diff"], [98, 2, 1, "", "cont_to_dict"], [98, 2, 1, "", "cont_to_disk_as_hdf5"], [98, 2, 1, "", "cont_to_disk_as_json"], [98, 2, 1, "", "cont_to_disk_as_pickled"], [98, 2, 1, "", "cont_to_flat_list"], [98, 2, 1, "", "cont_to_iterator"], [98, 2, 1, "", "cont_to_iterator_keys"], [98, 2, 1, "", "cont_to_iterator_values"], [98, 2, 1, "", "cont_to_jsonable"], [98, 2, 1, "", "cont_to_nested_list"], [98, 2, 1, "", "cont_to_raw"], [98, 2, 1, "", "cont_trim_key"], [98, 2, 1, "", "cont_try_kc"], [98, 2, 1, "", "cont_unify"], [98, 2, 1, "", "cont_unstack_conts"], [98, 2, 1, "", "cont_update_config"], [98, 2, 1, "", "cont_with_default_key_color"], [98, 2, 1, "", "cont_with_entries_as_lists"], [98, 2, 1, "", "cont_with_ivy_backend"], [98, 2, 1, "", "cont_with_key_length_limit"], [98, 2, 1, "", "cont_with_print_indent"], [98, 2, 1, "", "cont_with_print_limit"], [98, 2, 1, "", "cont_with_print_line_spacing"], [98, 2, 1, "", "h5_file_size"], [98, 2, 1, "", "shuffle_h5_file"], [98, 2, 1, "", "split_conts"]], "ivy.container.container": [[100, 1, 1, "", "Container"]], "ivy.container.container.Container": [[100, 2, 1, "", "__abs__"], [100, 2, 1, "", "__add__"], [100, 2, 1, "", "__eq__"], [100, 2, 1, "", "__ge__"], [100, 2, 1, "", "__gt__"], [100, 2, 1, "", "__init__"], [100, 2, 1, "", "__le__"], [100, 2, 1, "", "__lt__"], [100, 2, 1, "", "__ne__"], [100, 2, 1, "", "__pow__"], [100, 2, 1, "", "__radd__"], [100, 2, 1, "", "__rrshift__"], [100, 2, 1, "", "__rshift__"], [100, 2, 1, "", "__rsub__"], [100, 2, 1, "", "__sub__"], [100, 2, 1, "", "__truediv__"], [100, 2, 1, "", "__xor__"], [100, 2, 1, "", "arange"], [100, 2, 1, "", "arg_info"], [100, 2, 1, "", "arg_names"], [100, 2, 1, "", "array"], [100, 2, 1, "", "array_equal"], [100, 2, 1, "", "as_ivy_dev"], [100, 2, 1, "", "as_ivy_dtype"], [100, 2, 1, "", "as_native_dev"], [100, 2, 1, "", "as_native_dtype"], [100, 2, 1, "", "asarray"], [100, 2, 1, "", "asarray_handle_nestable"], [100, 2, 1, "", "asarray_infer_device"], [100, 2, 1, "", "asarray_to_native_arrays_and_back"], [100, 2, 1, "", "cache_fn"], [100, 2, 1, "", "check_float"], [100, 2, 1, "", "clear_mem_on_dev"], [100, 2, 1, "", "closest_valid_dtype"], [100, 2, 1, "", "container_types"], [100, 2, 1, "", "conv"], [100, 2, 1, "", "conv_general_dilated"], [100, 2, 1, "", "conv_general_transpose"], [100, 2, 1, "", "copy_array"], [100, 2, 1, "", "current_backend"], [100, 2, 1, "", "current_backend_str"], [100, 2, 1, "", "deconv_length"], [100, 2, 1, "", "default"], [100, 2, 1, "", "default_device"], [100, 2, 1, "", "default_dtype"], [100, 2, 1, "", "default_float_dtype"], [100, 2, 1, "", "default_int_dtype"], [100, 2, 1, "", "default_uint_dtype"], [100, 2, 1, "", "deserialize"], [100, 2, 1, "", "dev_util"], [100, 2, 1, "", "dtype_bits"], [100, 2, 1, "", "empty"], [100, 2, 1, "", "execute_with_gradients"], [100, 2, 1, "", "exists"], [100, 2, 1, "", "eye"], [100, 2, 1, "", "full"], [100, 2, 1, "", "function_supported_devices"], [100, 2, 1, "", "function_supported_devices_and_dtypes"], [100, 2, 1, "", "function_supported_dtypes"], [100, 2, 1, "", "function_unsupported_devices"], [100, 2, 1, "", "function_unsupported_devices_and_dtypes"], [100, 2, 1, "", "function_unsupported_dtypes"], [100, 2, 1, "", "get_all_arrays_in_memory"], [100, 2, 1, "", "get_all_ivy_arrays_on_dev"], [100, 2, 1, "", "get_array_mode"], [100, 2, 1, "", "get_exception_trace_mode"], [100, 2, 1, "", "get_item"], [100, 2, 1, "", "get_min_base"], [100, 2, 1, "", "get_min_denominator"], [100, 2, 1, "", "get_nestable_mode"], [100, 2, 1, "", "get_queue_timeout"], [100, 2, 1, "", "get_referrers_recursive"], [100, 2, 1, "", "get_show_func_wrapper_trace_mode"], [100, 2, 1, "", "get_tmp_dir"], [100, 2, 1, "", "get_x_data_format"], [100, 2, 1, "", "gpu_is_available"], [100, 2, 1, "", "grad"], [100, 2, 1, "", "handle_array_like"], [100, 2, 1, "", "handle_exceptions"], [100, 2, 1, "", "handle_nestable"], [100, 2, 1, "", "handle_out_argument"], [100, 2, 1, "", "handle_padding"], [100, 2, 1, "", "infer_default_dtype"], [100, 2, 1, "", "infer_device"], [100, 2, 1, "", "infer_dtype"], [100, 2, 1, "", "inplace_arrays_supported"], [100, 2, 1, "", "inplace_variables_supported"], [100, 2, 1, "", "inputs_to_ivy_arrays"], [100, 2, 1, "", "inputs_to_native_arrays"], [100, 2, 1, "", "integer_arrays_to_float"], [100, 2, 1, "", "invalid_dtype"], [100, 2, 1, "", "is_ivy_container"], [100, 2, 1, "", "isscalar"], [100, 2, 1, "", "jac"], [100, 2, 1, "", "match_kwargs"], [100, 2, 1, "", "multiprocessing"], [100, 2, 1, "", "normalize_axis_tuple"], [100, 2, 1, "", "num_arrays_in_memory"], [100, 2, 1, "", "num_cpu_cores"], [100, 2, 1, "", "num_gpus"], [100, 2, 1, "", "num_ivy_arrays_on_dev"], [100, 2, 1, "", "ones"], [100, 2, 1, "", "outputs_to_ivy_arrays"], [100, 2, 1, "", "percent_used_mem_on_dev"], [100, 2, 1, "", "print_all_arrays_in_memory"], [100, 2, 1, "", "print_all_ivy_arrays_on_dev"], [100, 2, 1, "", "promote_types"], [100, 2, 1, "", "promote_types_of_inputs"], [100, 2, 1, "", "seed"], [100, 2, 1, "", "set_array_mode"], [100, 2, 1, "", "set_default_device"], [100, 2, 1, "", "set_default_dtype"], [100, 2, 1, "", "set_default_float_dtype"], [100, 2, 1, "", "set_default_int_dtype"], [100, 2, 1, "", "set_default_uint_dtype"], [100, 2, 1, "", "set_exception_trace_mode"], [100, 2, 1, "", "set_min_base"], [100, 2, 1, "", "set_min_denominator"], [100, 2, 1, "", "set_nestable_mode"], [100, 2, 1, "", "set_queue_timeout"], [100, 2, 1, "", "set_shape_array_mode"], [100, 2, 1, "", "set_show_func_wrapper_trace_mode"], [100, 2, 1, "", "set_split_factor"], [100, 2, 1, "", "set_tmp_dir"], [100, 2, 1, "", "set_with_grads"], [100, 2, 1, "", "shape_array_mode"], [100, 2, 1, "", "split_factor"], [100, 2, 1, "", "split_func_call"], [100, 2, 1, "", "static_adam_step"], [100, 2, 1, "", "static_adam_update"], [100, 2, 1, "", "static_arg_info"], [100, 2, 1, "", "static_arg_names"], [100, 2, 1, "", "static_array"], [100, 2, 1, "", "static_array_equal"], [100, 2, 1, "", "static_as_ivy_dev"], [100, 2, 1, "", "static_as_ivy_dtype"], [100, 2, 1, "", "static_as_native_dev"], [100, 2, 1, "", "static_as_native_dtype"], [100, 2, 1, "", "static_asarray_handle_nestable"], [100, 2, 1, "", "static_asarray_infer_device"], [100, 2, 1, "", "static_asarray_to_native_arrays_and_back"], [100, 2, 1, "", "static_cache_fn"], [100, 2, 1, "", "static_check_float"], [100, 2, 1, "", "static_clear_mem_on_dev"], [100, 2, 1, "", "static_closest_valid_dtype"], [100, 2, 1, "", "static_container_types"], [100, 2, 1, "", "static_conv"], [100, 2, 1, "", "static_conv_general_dilated"], [100, 2, 1, "", "static_conv_general_transpose"], [100, 2, 1, "", "static_copy_array"], [100, 2, 1, "", "static_current_backend"], [100, 2, 1, "", "static_current_backend_str"], [100, 2, 1, "", "static_deconv_length"], [100, 2, 1, "", "static_default"], [100, 2, 1, "", "static_default_device"], [100, 2, 1, "", "static_default_dtype"], [100, 2, 1, "", "static_default_int_dtype"], [100, 2, 1, "", "static_default_uint_dtype"], [100, 2, 1, "", "static_deserialize"], [100, 2, 1, "", "static_dev_util"], [100, 2, 1, "", "static_dtype_bits"], [100, 2, 1, "", "static_einsum"], [100, 2, 1, "", "static_empty"], [100, 2, 1, "", "static_execute_with_gradients"], [100, 2, 1, "", "static_exists"], [100, 2, 1, "", "static_full"], [100, 2, 1, "", "static_function_supported_devices"], [100, 2, 1, "", "static_function_supported_devices_and_dtypes"], [100, 2, 1, "", "static_function_unsupported_devices"], [100, 2, 1, "", "static_function_unsupported_devices_and_dtypes"], [100, 2, 1, "", "static_get"], [100, 2, 1, "", "static_get_all_arrays_in_memory"], [100, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [100, 2, 1, "", "static_get_array_mode"], [100, 2, 1, "", "static_get_exception_trace_mode"], [100, 2, 1, "", "static_get_item"], [100, 2, 1, "", "static_get_min_base"], [100, 2, 1, "", "static_get_min_denominator"], [100, 2, 1, "", "static_get_nestable_mode"], [100, 2, 1, "", "static_get_queue_timeout"], [100, 2, 1, "", "static_get_referrers_recursive"], [100, 2, 1, "", "static_get_show_func_wrapper_trace_mode"], [100, 2, 1, "", "static_get_tmp_dir"], [100, 2, 1, "", "static_get_x_data_format"], [100, 2, 1, "", "static_gpu_is_available"], [100, 2, 1, "", "static_grad"], [100, 2, 1, "", "static_gradient_descent_update"], [100, 2, 1, "", "static_handle_array_like"], [100, 2, 1, "", "static_handle_exceptions"], [100, 2, 1, "", "static_handle_nestable"], [100, 2, 1, "", "static_handle_out_argument"], [100, 2, 1, "", "static_handle_padding"], [100, 2, 1, "", "static_infer_default_dtype"], [100, 2, 1, "", "static_infer_device"], [100, 2, 1, "", "static_infer_dtype"], [100, 2, 1, "", "static_inplace_arrays_supported"], [100, 2, 1, "", "static_inplace_variables_supported"], [100, 2, 1, "", "static_inputs_to_ivy_arrays"], [100, 2, 1, "", "static_inputs_to_native_arrays"], [100, 2, 1, "", "static_integer_arrays_to_float"], [100, 2, 1, "", "static_invalid_dtype"], [100, 2, 1, "", "static_is_ivy_container"], [100, 2, 1, "", "static_isscalar"], [100, 2, 1, "", "static_jac"], [100, 2, 1, "", "static_lamb_update"], [100, 2, 1, "", "static_lars_update"], [100, 2, 1, "", "static_layer_norm"], [100, 2, 1, "", "static_match_kwargs"], [100, 2, 1, "", "static_max"], [100, 2, 1, "", "static_mean"], [100, 2, 1, "", "static_min"], [100, 2, 1, "", "static_multiprocessing"], [100, 2, 1, "", "static_normalize_axis_tuple"], [100, 2, 1, "", "static_num_arrays_in_memory"], [100, 2, 1, "", "static_num_cpu_cores"], [100, 2, 1, "", "static_num_gpus"], [100, 2, 1, "", "static_num_ivy_arrays_on_dev"], [100, 2, 1, "", "static_optimizer_update"], [100, 2, 1, "", "static_outputs_to_ivy_arrays"], [100, 2, 1, "", "static_percent_used_mem_on_dev"], [100, 2, 1, "", "static_print_all_arrays_in_memory"], [100, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [100, 2, 1, "", "static_promote_types"], [100, 2, 1, "", "static_promote_types_of_inputs"], [100, 2, 1, "", "static_seed"], [100, 2, 1, "", "static_set_array_mode"], [100, 2, 1, "", "static_set_default_device"], [100, 2, 1, "", "static_set_default_dtype"], [100, 2, 1, "", "static_set_default_float_dtype"], [100, 2, 1, "", "static_set_default_int_dtype"], [100, 2, 1, "", "static_set_default_uint_dtype"], [100, 2, 1, "", "static_set_exception_trace_mode"], [100, 2, 1, "", "static_set_min_base"], [100, 2, 1, "", "static_set_min_denominator"], [100, 2, 1, "", "static_set_nestable_mode"], [100, 2, 1, "", "static_set_queue_timeout"], [100, 2, 1, "", "static_set_shape_array_mode"], [100, 2, 1, "", "static_set_show_func_wrapper_trace_mode"], [100, 2, 1, "", "static_set_split_factor"], [100, 2, 1, "", "static_set_tmp_dir"], [100, 2, 1, "", "static_set_with_grads"], [100, 2, 1, "", "static_shape"], [100, 2, 1, "", "static_shape_array_mode"], [100, 2, 1, "", "static_split_factor"], [100, 2, 1, "", "static_split_func_call"], [100, 2, 1, "", "static_std"], [100, 2, 1, "", "static_tensorsolve"], [100, 2, 1, "", "static_to_ivy_shape"], [100, 2, 1, "", "static_to_native_arrays_and_back"], [100, 2, 1, "", "static_to_native_shape"], [100, 2, 1, "", "static_total_mem_on_dev"], [100, 2, 1, "", "static_tpu_is_available"], [100, 2, 1, "", "static_try_else_none"], [100, 2, 1, "", "static_type_promote_arrays"], [100, 2, 1, "", "static_unset_array_mode"], [100, 2, 1, "", "static_unset_default_device"], [100, 2, 1, "", "static_unset_default_dtype"], [100, 2, 1, "", "static_unset_default_float_dtype"], [100, 2, 1, "", "static_unset_default_int_dtype"], [100, 2, 1, "", "static_unset_default_uint_dtype"], [100, 2, 1, "", "static_unset_exception_trace_mode"], [100, 2, 1, "", "static_unset_nestable_mode"], [100, 2, 1, "", "static_unset_queue_timeout"], [100, 2, 1, "", "static_unset_shape_array_mode"], [100, 2, 1, "", "static_unset_show_func_wrapper_trace_mode"], [100, 2, 1, "", "static_unset_with_grads"], [100, 2, 1, "", "static_used_mem_on_dev"], [100, 2, 1, "", "static_valid_dtype"], [100, 2, 1, "", "static_value_and_grad"], [100, 2, 1, "", "static_vmap"], [100, 2, 1, "", "static_with_grads"], [100, 2, 1, "", "static_wraps"], [100, 2, 1, "", "to_ivy_shape"], [100, 2, 1, "", "to_native_arrays_and_back"], [100, 2, 1, "", "to_native_shape"], [100, 2, 1, "", "total_mem_on_dev"], [100, 2, 1, "", "tpu_is_available"], [100, 2, 1, "", "try_else_none"], [100, 2, 1, "", "type_promote_arrays"], [100, 2, 1, "", "unset_array_mode"], [100, 2, 1, "", "unset_default_device"], [100, 2, 1, "", "unset_default_dtype"], [100, 2, 1, "", "unset_default_float_dtype"], [100, 2, 1, "", "unset_default_int_dtype"], [100, 2, 1, "", "unset_default_uint_dtype"], [100, 2, 1, "", "unset_exception_trace_mode"], [100, 2, 1, "", "unset_nestable_mode"], [100, 2, 1, "", "unset_queue_timeout"], [100, 2, 1, "", "unset_shape_array_mode"], [100, 2, 1, "", "unset_show_func_wrapper_trace_mode"], [100, 2, 1, "", "unset_with_grads"], [100, 2, 1, "", "used_mem_on_dev"], [100, 2, 1, "", "valid_dtype"], [100, 2, 1, "", "value_and_grad"], [100, 2, 1, "", "vmap"], [100, 2, 1, "", "with_grads"], [100, 2, 1, "", "wraps"], [100, 2, 1, "", "zeros"]], "ivy.container.container_methods": [[456, 4, 1, "", "abs"], [461, 4, 1, "", "acos"], [466, 4, 1, "", "acosh"], [1455, 4, 1, "", "adam_step"], [1459, 4, 1, "", "adam_update"], [471, 4, 1, "", "add"], [1960, 4, 1, "", "all"], [1261, 4, 1, "", "all_equal"], [781, 4, 1, "", "allclose"], [786, 4, 1, "", "angle"], [1965, 4, 1, "", "any"], [1851, 4, 1, "", "argmax"], [1856, 4, 1, "", "argmin"], [1898, 4, 1, "", "argsort"], [1861, 4, 1, "", "argwhere"], [476, 4, 1, "", "asin"], [481, 4, 1, "", "asinh"], [1271, 4, 1, "", "assert_supports_inplace"], [332, 4, 1, "", "astype"], [486, 4, 1, "", "atan"], [491, 4, 1, "", "atan2"], [496, 4, 1, "", "atanh"], [791, 4, 1, "", "atleast_1d"], [796, 4, 1, "", "atleast_2d"], [801, 4, 1, "", "atleast_3d"], [806, 4, 1, "", "avg_pool1d"], [811, 4, 1, "", "avg_pool2d"], [816, 4, 1, "", "avg_pool3d"], [821, 4, 1, "", "beta"], [1698, 4, 1, "", "binary_cross_entropy"], [825, 4, 1, "", "binary_cross_entropy_with_logits"], [501, 4, 1, "", "bitwise_and"], [506, 4, 1, "", "bitwise_invert"], [511, 4, 1, "", "bitwise_left_shift"], [516, 4, 1, "", "bitwise_or"], [521, 4, 1, "", "bitwise_right_shift"], [526, 4, 1, "", "bitwise_xor"], [337, 4, 1, "", "broadcast_arrays"], [829, 4, 1, "", "broadcast_shapes"], [342, 4, 1, "", "broadcast_to"], [347, 4, 1, "", "can_cast"], [531, 4, 1, "", "ceil"], [1558, 4, 1, "", "cholesky"], [1714, 4, 1, "", "clip"], [1277, 4, 1, "", "clip_matrix_norm"], [1282, 4, 1, "", "clip_vector_norm"], [1719, 4, 1, "", "concat"], [1724, 4, 1, "", "constant_pad"], [1493, 4, 1, "", "conv1d"], [1498, 4, 1, "", "conv1d_transpose"], [1503, 4, 1, "", "conv2d"], [1507, 4, 1, "", "conv2d_transpose"], [1512, 4, 1, "", "conv3d"], [1517, 4, 1, "", "conv3d_transpose"], [836, 4, 1, "", "copysign"], [536, 4, 1, "", "cos"], [541, 4, 1, "", "cosh"], [841, 4, 1, "", "count_nonzero"], [1563, 4, 1, "", "cross"], [1703, 4, 1, "", "cross_entropy"], [1914, 4, 1, "", "cumprod"], [1919, 4, 1, "", "cumsum"], [856, 4, 1, "", "dct"], [546, 4, 1, "", "deg2rad"], [1525, 4, 1, "", "depthwise_conv2d"], [1568, 4, 1, "", "det"], [427, 4, 1, "", "dev"], [1573, 4, 1, "", "diag"], [862, 4, 1, "", "diagflat"], [1578, 4, 1, "", "diagonal"], [867, 4, 1, "", "diff"], [872, 4, 1, "", "dirichlet"], [551, 4, 1, "", "divide"], [1530, 4, 1, "", "dropout"], [878, 4, 1, "", "dsplit"], [883, 4, 1, "", "dstack"], [359, 4, 1, "", "dtype"], [888, 4, 1, "", "eig"], [1584, 4, 1, "", "eigh"], [1589, 4, 1, "", "eigvalsh"], [1292, 4, 1, "", "einops_rearrange"], [1297, 4, 1, "", "einops_reduce"], [1302, 4, 1, "", "einops_repeat"], [1924, 4, 1, "", "einsum"], [255, 4, 1, "", "empty_like"], [556, 4, 1, "", "equal"], [561, 4, 1, "", "erf"], [566, 4, 1, "", "exp"], [919, 4, 1, "", "exp2"], [1729, 4, 1, "", "expand_dims"], [571, 4, 1, "", "expm1"], [365, 4, 1, "", "finfo"], [925, 4, 1, "", "fix"], [930, 4, 1, "", "flatten"], [1734, 4, 1, "", "flip"], [935, 4, 1, "", "fliplr"], [940, 4, 1, "", "flipud"], [945, 4, 1, "", "float_power"], [576, 4, 1, "", "floor"], [581, 4, 1, "", "floor_divide"], [950, 4, 1, "", "fmax"], [955, 4, 1, "", "fmod"], [1310, 4, 1, "", "fourier_encode"], [263, 4, 1, "", "from_dlpack"], [269, 4, 1, "", "full_like"], [1317, 4, 1, "", "gather"], [1322, 4, 1, "", "gather_nd"], [963, 4, 1, "", "gcd"], [200, 4, 1, "", "gelu"], [1334, 4, 1, "", "get_num_dims"], [970, 4, 1, "", "gradient"], [1465, 4, 1, "", "gradient_descent_update"], [586, 4, 1, "", "greater"], [591, 4, 1, "", "greater_equal"], [975, 4, 1, "", "hamming_window"], [979, 4, 1, "", "hann_window"], [1343, 4, 1, "", "has_nans"], [984, 4, 1, "", "heaviside"], [989, 4, 1, "", "hsplit"], [994, 4, 1, "", "hstack"], [999, 4, 1, "", "i0"], [376, 4, 1, "", "iinfo"], [1594, 4, 1, "", "inner"], [1349, 4, 1, "", "inplace_decrement"], [1354, 4, 1, "", "inplace_increment"], [1359, 4, 1, "", "inplace_update"], [1599, 4, 1, "", "inv"], [1365, 4, 1, "", "is_array"], [383, 4, 1, "", "is_bool_dtype"], [388, 4, 1, "", "is_float_dtype"], [393, 4, 1, "", "is_int_dtype"], [1370, 4, 1, "", "is_ivy_array"], [1378, 4, 1, "", "is_native_array"], [398, 4, 1, "", "is_uint_dtype"], [1007, 4, 1, "", "isclose"], [596, 4, 1, "", "isfinite"], [1012, 4, 1, "", "isin"], [601, 4, 1, "", "isinf"], [606, 4, 1, "", "isnan"], [1017, 4, 1, "", "isneginf"], [1022, 4, 1, "", "isposinf"], [611, 4, 1, "", "isreal"], [1026, 4, 1, "", "kaiser_bessel_derived_window"], [1030, 4, 1, "", "kaiser_window"], [1035, 4, 1, "", "kron"], [1470, 4, 1, "", "lamb_update"], [1474, 4, 1, "", "lars_update"], [1819, 4, 1, "", "layer_norm"], [1050, 4, 1, "", "lcm"], [206, 4, 1, "", "leaky_relu"], [616, 4, 1, "", "less"], [621, 4, 1, "", "less_equal"], [1537, 4, 1, "", "linear"], [274, 4, 1, "", "linspace"], [626, 4, 1, "", "log"], [631, 4, 1, "", "log10"], [636, 4, 1, "", "log1p"], [641, 4, 1, "", "log2"], [211, 4, 1, "", "log_softmax"], [646, 4, 1, "", "logaddexp"], [1061, 4, 1, "", "logaddexp2"], [651, 4, 1, "", "logical_and"], [656, 4, 1, "", "logical_not"], [661, 4, 1, "", "logical_or"], [666, 4, 1, "", "logical_xor"], [1066, 4, 1, "", "logit"], [279, 4, 1, "", "logspace"], [1542, 4, 1, "", "lstm_update"], [1604, 4, 1, "", "matmul"], [1096, 4, 1, "", "matrix_exp"], [1609, 4, 1, "", "matrix_norm"], [1614, 4, 1, "", "matrix_power"], [1619, 4, 1, "", "matrix_rank"], [1624, 4, 1, "", "matrix_transpose"], [1928, 4, 1, "", "max"], [1101, 4, 1, "", "max_pool1d"], [1106, 4, 1, "", "max_pool2d"], [1111, 4, 1, "", "max_pool3d"], [671, 4, 1, "", "maximum"], [1932, 4, 1, "", "mean"], [1116, 4, 1, "", "median"], [284, 4, 1, "", "meshgrid"], [1936, 4, 1, "", "min"], [676, 4, 1, "", "minimum"], [1122, 4, 1, "", "moveaxis"], [1127, 4, 1, "", "msort"], [1132, 4, 1, "", "multi_dot"], [1547, 4, 1, "", "multi_head_attention"], [1824, 4, 1, "", "multinomial"], [681, 4, 1, "", "multiply"], [1137, 4, 1, "", "nan_to_num"], [1142, 4, 1, "", "nanmean"], [1147, 4, 1, "", "nansum"], [289, 4, 1, "", "native_array"], [686, 4, 1, "", "negative"], [1157, 4, 1, "", "nextafter"], [1866, 4, 1, "", "nonzero"], [691, 4, 1, "", "not_equal"], [294, 4, 1, "", "one_hot"], [302, 4, 1, "", "ones_like"], [1478, 4, 1, "", "optimizer_update"], [1629, 4, 1, "", "outer"], [1163, 4, 1, "", "pad"], [1739, 4, 1, "", "permute_dims"], [1634, 4, 1, "", "pinv"], [696, 4, 1, "", "positive"], [701, 4, 1, "", "pow"], [1940, 4, 1, "", "prod"], [1639, 4, 1, "", "qr"], [1168, 4, 1, "", "quantile"], [706, 4, 1, "", "rad2deg"], [1829, 4, 1, "", "randint"], [1834, 4, 1, "", "random_normal"], [1839, 4, 1, "", "random_uniform"], [711, 4, 1, "", "reciprocal"], [216, 4, 1, "", "relu"], [716, 4, 1, "", "remainder"], [1744, 4, 1, "", "repeat"], [1749, 4, 1, "", "reshape"], [405, 4, 1, "", "result_type"], [1754, 4, 1, "", "roll"], [1177, 4, 1, "", "rot90"], [721, 4, 1, "", "round"], [1552, 4, 1, "", "scaled_dot_product_attention"], [1388, 4, 1, "", "scatter_flat"], [1393, 4, 1, "", "scatter_nd"], [1903, 4, 1, "", "searchsorted"], [1845, 4, 1, "", "shuffle"], [221, 4, 1, "", "sigmoid"], [726, 4, 1, "", "sign"], [1184, 4, 1, "", "signbit"], [731, 4, 1, "", "sin"], [1189, 4, 1, "", "sinc"], [736, 4, 1, "", "sinh"], [1644, 4, 1, "", "slogdet"], [226, 4, 1, "", "softmax"], [231, 4, 1, "", "softplus"], [1649, 4, 1, "", "solve"], [1908, 4, 1, "", "sort"], [1708, 4, 1, "", "sparse_cross_entropy"], [1759, 4, 1, "", "split"], [741, 4, 1, "", "sqrt"], [746, 4, 1, "", "square"], [1764, 4, 1, "", "squeeze"], [1409, 4, 1, "", "stable_divide"], [1414, 4, 1, "", "stable_pow"], [1769, 4, 1, "", "stack"], [458, 4, 1, "", "static_abs"], [463, 4, 1, "", "static_acos"], [468, 4, 1, "", "static_acosh"], [473, 4, 1, "", "static_add"], [1962, 4, 1, "", "static_all"], [1263, 4, 1, "", "static_all_equal"], [783, 4, 1, "", "static_allclose"], [788, 4, 1, "", "static_angle"], [1967, 4, 1, "", "static_any"], [241, 4, 1, "", "static_arange"], [1853, 4, 1, "", "static_argmax"], [1858, 4, 1, "", "static_argmin"], [1900, 4, 1, "", "static_argsort"], [1863, 4, 1, "", "static_argwhere"], [245, 4, 1, "", "static_asarray"], [478, 4, 1, "", "static_asin"], [483, 4, 1, "", "static_asinh"], [1273, 4, 1, "", "static_assert_supports_inplace"], [334, 4, 1, "", "static_astype"], [488, 4, 1, "", "static_atan"], [493, 4, 1, "", "static_atan2"], [498, 4, 1, "", "static_atanh"], [793, 4, 1, "", "static_atleast_1d"], [798, 4, 1, "", "static_atleast_2d"], [803, 4, 1, "", "static_atleast_3d"], [808, 4, 1, "", "static_avg_pool1d"], [813, 4, 1, "", "static_avg_pool2d"], [818, 4, 1, "", "static_avg_pool3d"], [823, 4, 1, "", "static_beta"], [1700, 4, 1, "", "static_binary_cross_entropy"], [827, 4, 1, "", "static_binary_cross_entropy_with_logits"], [503, 4, 1, "", "static_bitwise_and"], [508, 4, 1, "", "static_bitwise_invert"], [513, 4, 1, "", "static_bitwise_left_shift"], [518, 4, 1, "", "static_bitwise_or"], [523, 4, 1, "", "static_bitwise_right_shift"], [528, 4, 1, "", "static_bitwise_xor"], [339, 4, 1, "", "static_broadcast_arrays"], [831, 4, 1, "", "static_broadcast_shapes"], [344, 4, 1, "", "static_broadcast_to"], [349, 4, 1, "", "static_can_cast"], [533, 4, 1, "", "static_ceil"], [1560, 4, 1, "", "static_cholesky"], [1716, 4, 1, "", "static_clip"], [1279, 4, 1, "", "static_clip_matrix_norm"], [1284, 4, 1, "", "static_clip_vector_norm"], [1721, 4, 1, "", "static_concat"], [1726, 4, 1, "", "static_constant_pad"], [1495, 4, 1, "", "static_conv1d"], [1500, 4, 1, "", "static_conv1d_transpose"], [1505, 4, 1, "", "static_conv2d"], [1509, 4, 1, "", "static_conv2d_transpose"], [1514, 4, 1, "", "static_conv3d"], [1519, 4, 1, "", "static_conv3d_transpose"], [838, 4, 1, "", "static_copysign"], [538, 4, 1, "", "static_cos"], [543, 4, 1, "", "static_cosh"], [843, 4, 1, "", "static_count_nonzero"], [1565, 4, 1, "", "static_cross"], [1705, 4, 1, "", "static_cross_entropy"], [1916, 4, 1, "", "static_cumprod"], [1921, 4, 1, "", "static_cumsum"], [858, 4, 1, "", "static_dct"], [355, 4, 1, "", "static_default_float_dtype"], [548, 4, 1, "", "static_deg2rad"], [1527, 4, 1, "", "static_depthwise_conv2d"], [1570, 4, 1, "", "static_det"], [429, 4, 1, "", "static_dev"], [1575, 4, 1, "", "static_diag"], [864, 4, 1, "", "static_diagflat"], [1580, 4, 1, "", "static_diagonal"], [869, 4, 1, "", "static_diff"], [874, 4, 1, "", "static_dirichlet"], [553, 4, 1, "", "static_divide"], [1532, 4, 1, "", "static_dropout"], [880, 4, 1, "", "static_dsplit"], [885, 4, 1, "", "static_dstack"], [361, 4, 1, "", "static_dtype"], [890, 4, 1, "", "static_eig"], [1586, 4, 1, "", "static_eigh"], [1591, 4, 1, "", "static_eigvalsh"], [1294, 4, 1, "", "static_einops_rearrange"], [1299, 4, 1, "", "static_einops_reduce"], [1304, 4, 1, "", "static_einops_repeat"], [257, 4, 1, "", "static_empty_like"], [558, 4, 1, "", "static_equal"], [563, 4, 1, "", "static_erf"], [568, 4, 1, "", "static_exp"], [921, 4, 1, "", "static_exp2"], [1731, 4, 1, "", "static_expand_dims"], [573, 4, 1, "", "static_expm1"], [260, 4, 1, "", "static_eye"], [367, 4, 1, "", "static_finfo"], [927, 4, 1, "", "static_fix"], [932, 4, 1, "", "static_flatten"], [1736, 4, 1, "", "static_flip"], [937, 4, 1, "", "static_fliplr"], [942, 4, 1, "", "static_flipud"], [947, 4, 1, "", "static_float_power"], [578, 4, 1, "", "static_floor"], [583, 4, 1, "", "static_floor_divide"], [952, 4, 1, "", "static_fmax"], [957, 4, 1, "", "static_fmod"], [1312, 4, 1, "", "static_fourier_encode"], [265, 4, 1, "", "static_from_dlpack"], [271, 4, 1, "", "static_full_like"], [370, 4, 1, "", "static_function_supported_dtypes"], [373, 4, 1, "", "static_function_unsupported_dtypes"], [1319, 4, 1, "", "static_gather"], [1324, 4, 1, "", "static_gather_nd"], [965, 4, 1, "", "static_gcd"], [202, 4, 1, "", "static_gelu"], [1336, 4, 1, "", "static_get_num_dims"], [972, 4, 1, "", "static_gradient"], [588, 4, 1, "", "static_greater"], [593, 4, 1, "", "static_greater_equal"], [977, 4, 1, "", "static_hamming_window"], [981, 4, 1, "", "static_hann_window"], [1345, 4, 1, "", "static_has_nans"], [986, 4, 1, "", "static_heaviside"], [991, 4, 1, "", "static_hsplit"], [996, 4, 1, "", "static_hstack"], [1001, 4, 1, "", "static_i0"], [378, 4, 1, "", "static_iinfo"], [1596, 4, 1, "", "static_inner"], [1351, 4, 1, "", "static_inplace_decrement"], [1356, 4, 1, "", "static_inplace_increment"], [1361, 4, 1, "", "static_inplace_update"], [1601, 4, 1, "", "static_inv"], [1367, 4, 1, "", "static_is_array"], [385, 4, 1, "", "static_is_bool_dtype"], [390, 4, 1, "", "static_is_float_dtype"], [395, 4, 1, "", "static_is_int_dtype"], [1372, 4, 1, "", "static_is_ivy_array"], [1380, 4, 1, "", "static_is_native_array"], [400, 4, 1, "", "static_is_uint_dtype"], [1009, 4, 1, "", "static_isclose"], [598, 4, 1, "", "static_isfinite"], [1014, 4, 1, "", "static_isin"], [603, 4, 1, "", "static_isinf"], [608, 4, 1, "", "static_isnan"], [1019, 4, 1, "", "static_isneginf"], [1024, 4, 1, "", "static_isposinf"], [613, 4, 1, "", "static_isreal"], [1028, 4, 1, "", "static_kaiser_bessel_derived_window"], [1032, 4, 1, "", "static_kaiser_window"], [1037, 4, 1, "", "static_kron"], [1052, 4, 1, "", "static_lcm"], [208, 4, 1, "", "static_leaky_relu"], [618, 4, 1, "", "static_less"], [623, 4, 1, "", "static_less_equal"], [1539, 4, 1, "", "static_linear"], [276, 4, 1, "", "static_linspace"], [628, 4, 1, "", "static_log"], [633, 4, 1, "", "static_log10"], [638, 4, 1, "", "static_log1p"], [643, 4, 1, "", "static_log2"], [213, 4, 1, "", "static_log_softmax"], [648, 4, 1, "", "static_logaddexp"], [1063, 4, 1, "", "static_logaddexp2"], [653, 4, 1, "", "static_logical_and"], [658, 4, 1, "", "static_logical_not"], [663, 4, 1, "", "static_logical_or"], [668, 4, 1, "", "static_logical_xor"], [1068, 4, 1, "", "static_logit"], [281, 4, 1, "", "static_logspace"], [1544, 4, 1, "", "static_lstm_update"], [1606, 4, 1, "", "static_matmul"], [1098, 4, 1, "", "static_matrix_exp"], [1611, 4, 1, "", "static_matrix_norm"], [1616, 4, 1, "", "static_matrix_power"], [1621, 4, 1, "", "static_matrix_rank"], [1626, 4, 1, "", "static_matrix_transpose"], [1103, 4, 1, "", "static_max_pool1d"], [1108, 4, 1, "", "static_max_pool2d"], [1113, 4, 1, "", "static_max_pool3d"], [673, 4, 1, "", "static_maximum"], [1118, 4, 1, "", "static_median"], [286, 4, 1, "", "static_meshgrid"], [678, 4, 1, "", "static_minimum"], [1124, 4, 1, "", "static_moveaxis"], [1129, 4, 1, "", "static_msort"], [1134, 4, 1, "", "static_multi_dot"], [1549, 4, 1, "", "static_multi_head_attention"], [1826, 4, 1, "", "static_multinomial"], [683, 4, 1, "", "static_multiply"], [1139, 4, 1, "", "static_nan_to_num"], [1144, 4, 1, "", "static_nanmean"], [1149, 4, 1, "", "static_nansum"], [291, 4, 1, "", "static_native_array"], [688, 4, 1, "", "static_negative"], [1159, 4, 1, "", "static_nextafter"], [1868, 4, 1, "", "static_nonzero"], [693, 4, 1, "", "static_not_equal"], [296, 4, 1, "", "static_one_hot"], [299, 4, 1, "", "static_ones"], [304, 4, 1, "", "static_ones_like"], [1631, 4, 1, "", "static_outer"], [1165, 4, 1, "", "static_pad"], [1741, 4, 1, "", "static_permute_dims"], [1636, 4, 1, "", "static_pinv"], [698, 4, 1, "", "static_positive"], [703, 4, 1, "", "static_pow"], [1942, 4, 1, "", "static_prod"], [1641, 4, 1, "", "static_qr"], [1170, 4, 1, "", "static_quantile"], [708, 4, 1, "", "static_rad2deg"], [1831, 4, 1, "", "static_randint"], [1836, 4, 1, "", "static_random_normal"], [1841, 4, 1, "", "static_random_uniform"], [713, 4, 1, "", "static_reciprocal"], [218, 4, 1, "", "static_relu"], [718, 4, 1, "", "static_remainder"], [1746, 4, 1, "", "static_repeat"], [1751, 4, 1, "", "static_reshape"], [407, 4, 1, "", "static_result_type"], [1756, 4, 1, "", "static_roll"], [1179, 4, 1, "", "static_rot90"], [723, 4, 1, "", "static_round"], [1554, 4, 1, "", "static_scaled_dot_product_attention"], [1390, 4, 1, "", "static_scatter_flat"], [1395, 4, 1, "", "static_scatter_nd"], [1905, 4, 1, "", "static_searchsorted"], [1847, 4, 1, "", "static_shuffle"], [223, 4, 1, "", "static_sigmoid"], [728, 4, 1, "", "static_sign"], [1186, 4, 1, "", "static_signbit"], [733, 4, 1, "", "static_sin"], [1191, 4, 1, "", "static_sinc"], [738, 4, 1, "", "static_sinh"], [1646, 4, 1, "", "static_slogdet"], [228, 4, 1, "", "static_softmax"], [233, 4, 1, "", "static_softplus"], [1651, 4, 1, "", "static_solve"], [1910, 4, 1, "", "static_sort"], [1710, 4, 1, "", "static_sparse_cross_entropy"], [1761, 4, 1, "", "static_split"], [743, 4, 1, "", "static_sqrt"], [748, 4, 1, "", "static_square"], [1766, 4, 1, "", "static_squeeze"], [1411, 4, 1, "", "static_stable_divide"], [1416, 4, 1, "", "static_stable_pow"], [1771, 4, 1, "", "static_stack"], [1482, 4, 1, "", "static_stop_gradient"], [750, 4, 1, "", "static_subtract"], [1948, 4, 1, "", "static_sum"], [1418, 4, 1, "", "static_supports_inplace_updates"], [1653, 4, 1, "", "static_svd"], [1658, 4, 1, "", "static_svdvals"], [1773, 4, 1, "", "static_swapaxes"], [1207, 4, 1, "", "static_take_along_axis"], [755, 4, 1, "", "static_tan"], [760, 4, 1, "", "static_tanh"], [1663, 4, 1, "", "static_tensordot"], [1778, 4, 1, "", "static_tile"], [445, 4, 1, "", "static_to_device"], [1424, 4, 1, "", "static_to_list"], [1429, 4, 1, "", "static_to_numpy"], [1434, 4, 1, "", "static_to_scalar"], [1212, 4, 1, "", "static_top_k"], [1671, 4, 1, "", "static_trace"], [306, 4, 1, "", "static_tril"], [1220, 4, 1, "", "static_tril_indices"], [311, 4, 1, "", "static_triu"], [1224, 4, 1, "", "static_triu_indices"], [765, 4, 1, "", "static_trunc"], [770, 4, 1, "", "static_trunc_divide"], [1876, 4, 1, "", "static_unique_all"], [1881, 4, 1, "", "static_unique_counts"], [1886, 4, 1, "", "static_unique_inverse"], [1891, 4, 1, "", "static_unique_values"], [1228, 4, 1, "", "static_unravel_index"], [1783, 4, 1, "", "static_unstack"], [1446, 4, 1, "", "static_value_is_nan"], [1676, 4, 1, "", "static_vander"], [1953, 4, 1, "", "static_var"], [1681, 4, 1, "", "static_vecdot"], [1686, 4, 1, "", "static_vector_norm"], [1691, 4, 1, "", "static_vector_to_skew_symmetric_matrix"], [1234, 4, 1, "", "static_vorbis_window"], [1238, 4, 1, "", "static_vsplit"], [1243, 4, 1, "", "static_vstack"], [1870, 4, 1, "", "static_where"], [1248, 4, 1, "", "static_xlogy"], [1788, 4, 1, "", "static_zero_pad"], [316, 4, 1, "", "static_zeros"], [319, 4, 1, "", "static_zeros_like"], [1253, 4, 1, "", "static_zeta"], [1945, 4, 1, "", "std"], [1484, 4, 1, "", "stop_gradient"], [752, 4, 1, "", "subtract"], [1950, 4, 1, "", "sum"], [1420, 4, 1, "", "supports_inplace_updates"], [1655, 4, 1, "", "svd"], [1660, 4, 1, "", "svdvals"], [1775, 4, 1, "", "swapaxes"], [1209, 4, 1, "", "take_along_axis"], [757, 4, 1, "", "tan"], [762, 4, 1, "", "tanh"], [1664, 4, 1, "", "tensordot"], [1668, 4, 1, "", "tensorsolve"], [1780, 4, 1, "", "tile"], [447, 4, 1, "", "to_device"], [1431, 4, 1, "", "to_numpy"], [1436, 4, 1, "", "to_scalar"], [1214, 4, 1, "", "top_k"], [1673, 4, 1, "", "trace"], [308, 4, 1, "", "tril"], [1221, 4, 1, "", "tril_indices"], [313, 4, 1, "", "triu"], [1225, 4, 1, "", "triu_indices"], [767, 4, 1, "", "trunc"], [772, 4, 1, "", "trunc_divide"], [1878, 4, 1, "", "unique_all"], [1883, 4, 1, "", "unique_counts"], [1888, 4, 1, "", "unique_inverse"], [1893, 4, 1, "", "unique_values"], [1230, 4, 1, "", "unravel_index"], [1785, 4, 1, "", "unstack"], [1448, 4, 1, "", "value_is_nan"], [1678, 4, 1, "", "vander"], [1955, 4, 1, "", "var"], [1683, 4, 1, "", "vecdot"], [1688, 4, 1, "", "vector_norm"], [1693, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1235, 4, 1, "", "vorbis_window"], [1240, 4, 1, "", "vsplit"], [1245, 4, 1, "", "vstack"], [1872, 4, 1, "", "where"], [1250, 4, 1, "", "xlogy"], [1790, 4, 1, "", "zero_pad"], [321, 4, 1, "", "zeros_like"], [1255, 4, 1, "", "zeta"]], "ivy.container.conversions": [[102, 1, 1, "", "ContainerWithConversions"]], "ivy.container.conversions.ContainerWithConversions": [[102, 2, 1, "", "static_to_ivy"], [102, 2, 1, "", "static_to_native"], [102, 2, 1, "", "to_ivy"], [102, 2, 1, "", "to_native"]], "ivy.container.creation": [[104, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[104, 2, 1, "", "empty_like"], [104, 2, 1, "", "from_dlpack"], [104, 2, 1, "", "full_like"], [104, 2, 1, "", "linspace"], [104, 2, 1, "", "logspace"], [104, 2, 1, "", "meshgrid"], [104, 2, 1, "", "native_array"], [104, 2, 1, "", "one_hot"], [104, 2, 1, "", "ones_like"], [104, 2, 1, "", "static_arange"], [104, 2, 1, "", "static_asarray"], [104, 2, 1, "", "static_empty_like"], [104, 2, 1, "", "static_eye"], [104, 2, 1, "", "static_from_dlpack"], [104, 2, 1, "", "static_full_like"], [104, 2, 1, "", "static_linspace"], [104, 2, 1, "", "static_logspace"], [104, 2, 1, "", "static_meshgrid"], [104, 2, 1, "", "static_native_array"], [104, 2, 1, "", "static_one_hot"], [104, 2, 1, "", "static_ones"], [104, 2, 1, "", "static_ones_like"], [104, 2, 1, "", "static_tril"], [104, 2, 1, "", "static_triu"], [104, 2, 1, "", "static_zeros"], [104, 2, 1, "", "static_zeros_like"], [104, 2, 1, "", "tril"], [104, 2, 1, "", "triu"], [104, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[106, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[106, 2, 1, "", "astype"], [106, 2, 1, "", "broadcast_arrays"], [106, 2, 1, "", "broadcast_to"], [106, 2, 1, "", "can_cast"], [106, 2, 1, "", "dtype"], [106, 2, 1, "", "finfo"], [106, 2, 1, "", "iinfo"], [106, 2, 1, "", "is_bool_dtype"], [106, 2, 1, "", "is_float_dtype"], [106, 2, 1, "", "is_int_dtype"], [106, 2, 1, "", "is_uint_dtype"], [106, 2, 1, "", "result_type"], [106, 2, 1, "", "static_astype"], [106, 2, 1, "", "static_broadcast_arrays"], [106, 2, 1, "", "static_broadcast_to"], [106, 2, 1, "", "static_can_cast"], [106, 2, 1, "", "static_default_float_dtype"], [106, 2, 1, "", "static_dtype"], [106, 2, 1, "", "static_finfo"], [106, 2, 1, "", "static_function_supported_dtypes"], [106, 2, 1, "", "static_function_unsupported_dtypes"], [106, 2, 1, "", "static_iinfo"], [106, 2, 1, "", "static_is_bool_dtype"], [106, 2, 1, "", "static_is_float_dtype"], [106, 2, 1, "", "static_is_int_dtype"], [106, 2, 1, "", "static_is_uint_dtype"], [106, 2, 1, "", "static_result_type"]], "ivy.container.device": [[108, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[108, 2, 1, "", "dev"], [108, 2, 1, "", "static_dev"], [108, 2, 1, "", "static_to_device"], [108, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[110, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[110, 2, 1, "", "abs"], [110, 2, 1, "", "acos"], [110, 2, 1, "", "acosh"], [110, 2, 1, "", "add"], [110, 2, 1, "", "asin"], [110, 2, 1, "", "asinh"], [110, 2, 1, "", "atan"], [110, 2, 1, "", "atan2"], [110, 2, 1, "", "atanh"], [110, 2, 1, "", "bitwise_and"], [110, 2, 1, "", "bitwise_invert"], [110, 2, 1, "", "bitwise_left_shift"], [110, 2, 1, "", "bitwise_or"], [110, 2, 1, "", "bitwise_right_shift"], [110, 2, 1, "", "bitwise_xor"], [110, 2, 1, "", "ceil"], [110, 2, 1, "", "cos"], [110, 2, 1, "", "cosh"], [110, 2, 1, "", "deg2rad"], [110, 2, 1, "", "divide"], [110, 2, 1, "", "equal"], [110, 2, 1, "", "erf"], [110, 2, 1, "", "exp"], [110, 2, 1, "", "expm1"], [110, 2, 1, "", "floor"], [110, 2, 1, "", "floor_divide"], [110, 2, 1, "", "greater"], [110, 2, 1, "", "greater_equal"], [110, 2, 1, "", "isfinite"], [110, 2, 1, "", "isinf"], [110, 2, 1, "", "isnan"], [110, 2, 1, "", "isreal"], [110, 2, 1, "", "less"], [110, 2, 1, "", "less_equal"], [110, 2, 1, "", "log"], [110, 2, 1, "", "log10"], [110, 2, 1, "", "log1p"], [110, 2, 1, "", "log2"], [110, 2, 1, "", "logaddexp"], [110, 2, 1, "", "logical_and"], [110, 2, 1, "", "logical_not"], [110, 2, 1, "", "logical_or"], [110, 2, 1, "", "logical_xor"], [110, 2, 1, "", "maximum"], [110, 2, 1, "", "minimum"], [110, 2, 1, "", "multiply"], [110, 2, 1, "", "negative"], [110, 2, 1, "", "not_equal"], [110, 2, 1, "", "positive"], [110, 2, 1, "", "pow"], [110, 2, 1, "", "rad2deg"], [110, 2, 1, "", "reciprocal"], [110, 2, 1, "", "remainder"], [110, 2, 1, "", "round"], [110, 2, 1, "", "sign"], [110, 2, 1, "", "sin"], [110, 2, 1, "", "sinh"], [110, 2, 1, "", "sqrt"], [110, 2, 1, "", "square"], [110, 2, 1, "", "static_abs"], [110, 2, 1, "", "static_acos"], [110, 2, 1, "", "static_acosh"], [110, 2, 1, "", "static_add"], [110, 2, 1, "", "static_asin"], [110, 2, 1, "", "static_asinh"], [110, 2, 1, "", "static_atan"], [110, 2, 1, "", "static_atan2"], [110, 2, 1, "", "static_atanh"], [110, 2, 1, "", "static_bitwise_and"], [110, 2, 1, "", "static_bitwise_invert"], [110, 2, 1, "", "static_bitwise_left_shift"], [110, 2, 1, "", "static_bitwise_or"], [110, 2, 1, "", "static_bitwise_right_shift"], [110, 2, 1, "", "static_bitwise_xor"], [110, 2, 1, "", "static_ceil"], [110, 2, 1, "", "static_cos"], [110, 2, 1, "", "static_cosh"], [110, 2, 1, "", "static_deg2rad"], [110, 2, 1, "", "static_divide"], [110, 2, 1, "", "static_equal"], [110, 2, 1, "", "static_erf"], [110, 2, 1, "", "static_exp"], [110, 2, 1, "", "static_expm1"], [110, 2, 1, "", "static_floor"], [110, 2, 1, "", "static_floor_divide"], [110, 2, 1, "", "static_greater"], [110, 2, 1, "", "static_greater_equal"], [110, 2, 1, "", "static_isfinite"], [110, 2, 1, "", "static_isinf"], [110, 2, 1, "", "static_isnan"], [110, 2, 1, "", "static_isreal"], [110, 2, 1, "", "static_less"], [110, 2, 1, "", "static_less_equal"], [110, 2, 1, "", "static_log"], [110, 2, 1, "", "static_log10"], [110, 2, 1, "", "static_log1p"], [110, 2, 1, "", "static_log2"], [110, 2, 1, "", "static_logaddexp"], [110, 2, 1, "", "static_logical_and"], [110, 2, 1, "", "static_logical_not"], [110, 2, 1, "", "static_logical_or"], [110, 2, 1, "", "static_logical_xor"], [110, 2, 1, "", "static_maximum"], [110, 2, 1, "", "static_minimum"], [110, 2, 1, "", "static_multiply"], [110, 2, 1, "", "static_negative"], [110, 2, 1, "", "static_not_equal"], [110, 2, 1, "", "static_positive"], [110, 2, 1, "", "static_pow"], [110, 2, 1, "", "static_rad2deg"], [110, 2, 1, "", "static_reciprocal"], [110, 2, 1, "", "static_remainder"], [110, 2, 1, "", "static_round"], [110, 2, 1, "", "static_sign"], [110, 2, 1, "", "static_sin"], [110, 2, 1, "", "static_sinh"], [110, 2, 1, "", "static_sqrt"], [110, 2, 1, "", "static_square"], [110, 2, 1, "", "static_subtract"], [110, 2, 1, "", "static_tan"], [110, 2, 1, "", "static_tanh"], [110, 2, 1, "", "static_trapz"], [110, 2, 1, "", "static_trunc"], [110, 2, 1, "", "static_trunc_divide"], [110, 2, 1, "", "subtract"], [110, 2, 1, "", "tan"], [110, 2, 1, "", "tanh"], [110, 2, 1, "", "trapz"], [110, 2, 1, "", "trunc"], [110, 2, 1, "", "trunc_divide"]], "ivy.container.experimental": [[111, 1, 1, "", "ContainerWithActivationExperimental"], [111, 1, 1, "", "ContainerWithConversionExperimental"], [111, 1, 1, "", "ContainerWithCreationExperimental"], [111, 1, 1, "", "ContainerWithData_typeExperimental"], [111, 1, 1, "", "ContainerWithDeviceExperimental"], [111, 1, 1, "", "ContainerWithElementWiseExperimental"], [111, 1, 1, "", "ContainerWithGeneralExperimental"], [111, 1, 1, "", "ContainerWithGradientsExperimental"], [111, 1, 1, "", "ContainerWithImageExperimental"], [111, 1, 1, "", "ContainerWithLayersExperimental"], [111, 1, 1, "", "ContainerWithLinearAlgebraExperimental"], [111, 1, 1, "", "ContainerWithLossesExperimental"], [111, 1, 1, "", "ContainerWithManipulationExperimental"], [111, 1, 1, "", "ContainerWithNormsExperimental"], [111, 1, 1, "", "ContainerWithRandomExperimental"], [111, 1, 1, "", "ContainerWithSearchingExperimental"], [111, 1, 1, "", "ContainerWithSetExperimental"], [111, 1, 1, "", "ContainerWithSortingExperimental"], [111, 1, 1, "", "ContainerWithStatisticalExperimental"], [111, 1, 1, "", "ContainerWithUtilityExperimental"]], "ivy.container.experimental.ContainerWithActivationExperimental": [[111, 2, 1, "", "logit"], [111, 2, 1, "", "static_logit"]], "ivy.container.experimental.ContainerWithCreationExperimental": [[111, 2, 1, "", "hamming_window"], [111, 2, 1, "", "hann_window"], [111, 2, 1, "", "kaiser_bessel_derived_window"], [111, 2, 1, "", "kaiser_window"], [111, 2, 1, "", "static_hamming_window"], [111, 2, 1, "", "static_hann_window"], [111, 2, 1, "", "static_kaiser_bessel_derived_window"], [111, 2, 1, "", "static_kaiser_window"], [111, 2, 1, "", "static_tril_indices"], [111, 2, 1, "", "static_triu_indices"], [111, 2, 1, "", "static_vorbis_window"], [111, 2, 1, "", "tril_indices"], [111, 2, 1, "", "triu_indices"], [111, 2, 1, "", "vorbis_window"]], "ivy.container.experimental.ContainerWithElementWiseExperimental": [[111, 2, 1, "", "allclose"], [111, 2, 1, "", "angle"], [111, 2, 1, "", "copysign"], [111, 2, 1, "", "count_nonzero"], [111, 2, 1, "", "diff"], [111, 2, 1, "", "exp2"], [111, 2, 1, "", "fix"], [111, 2, 1, "", "float_power"], [111, 2, 1, "", "fmax"], [111, 2, 1, "", "fmod"], [111, 2, 1, "", "gcd"], [111, 2, 1, "", "gradient"], [111, 2, 1, "", "isclose"], [111, 2, 1, "", "isneginf"], [111, 2, 1, "", "isposinf"], [111, 2, 1, "", "lcm"], [111, 2, 1, "", "logaddexp2"], [111, 2, 1, "", "nan_to_num"], [111, 2, 1, "", "nansum"], [111, 2, 1, "", "nextafter"], [111, 2, 1, "", "signbit"], [111, 2, 1, "", "sinc"], [111, 2, 1, "", "static_allclose"], [111, 2, 1, "", "static_angle"], [111, 2, 1, "", "static_copysign"], [111, 2, 1, "", "static_count_nonzero"], [111, 2, 1, "", "static_diff"], [111, 2, 1, "", "static_exp2"], [111, 2, 1, "", "static_fix"], [111, 2, 1, "", "static_float_power"], [111, 2, 1, "", "static_fmax"], [111, 2, 1, "", "static_fmod"], [111, 2, 1, "", "static_gcd"], [111, 2, 1, "", "static_gradient"], [111, 2, 1, "", "static_isclose"], [111, 2, 1, "", "static_isneginf"], [111, 2, 1, "", "static_isposinf"], [111, 2, 1, "", "static_lcm"], [111, 2, 1, "", "static_logaddexp2"], [111, 2, 1, "", "static_nan_to_num"], [111, 2, 1, "", "static_nansum"], [111, 2, 1, "", "static_nextafter"], [111, 2, 1, "", "static_signbit"], [111, 2, 1, "", "static_sinc"], [111, 2, 1, "", "static_xlogy"], [111, 2, 1, "", "static_zeta"], [111, 2, 1, "", "xlogy"], [111, 2, 1, "", "zeta"]], "ivy.container.experimental.ContainerWithGeneralExperimental": [[111, 2, 1, "", "isin"], [111, 2, 1, "", "static_isin"]], "ivy.container.experimental.ContainerWithLayersExperimental": [[111, 2, 1, "", "avg_pool1d"], [111, 2, 1, "", "avg_pool2d"], [111, 2, 1, "", "avg_pool3d"], [111, 2, 1, "", "dct"], [111, 2, 1, "", "max_pool1d"], [111, 2, 1, "", "max_pool2d"], [111, 2, 1, "", "max_pool3d"], [111, 2, 1, "", "static_avg_pool1d"], [111, 2, 1, "", "static_avg_pool2d"], [111, 2, 1, "", "static_avg_pool3d"], [111, 2, 1, "", "static_dct"], [111, 2, 1, "", "static_max_pool1d"], [111, 2, 1, "", "static_max_pool2d"], [111, 2, 1, "", "static_max_pool3d"]], "ivy.container.experimental.ContainerWithLinearAlgebraExperimental": [[111, 2, 1, "", "diagflat"], [111, 2, 1, "", "eig"], [111, 2, 1, "", "kron"], [111, 2, 1, "", "matrix_exp"], [111, 2, 1, "", "multi_dot"], [111, 2, 1, "", "static_diagflat"], [111, 2, 1, "", "static_eig"], [111, 2, 1, "", "static_kron"], [111, 2, 1, "", "static_matrix_exp"], [111, 2, 1, "", "static_multi_dot"]], "ivy.container.experimental.ContainerWithLossesExperimental": [[111, 2, 1, "", "binary_cross_entropy_with_logits"], [111, 2, 1, "", "static_binary_cross_entropy_with_logits"]], "ivy.container.experimental.ContainerWithManipulationExperimental": [[111, 2, 1, "", "atleast_1d"], [111, 2, 1, "", "atleast_2d"], [111, 2, 1, "", "atleast_3d"], [111, 2, 1, "", "broadcast_shapes"], [111, 2, 1, "", "dsplit"], [111, 2, 1, "", "dstack"], [111, 2, 1, "", "flatten"], [111, 2, 1, "", "fliplr"], [111, 2, 1, "", "flipud"], [111, 2, 1, "", "heaviside"], [111, 2, 1, "", "hsplit"], [111, 2, 1, "", "hstack"], [111, 2, 1, "", "i0"], [111, 2, 1, "", "moveaxis"], [111, 2, 1, "", "pad"], [111, 2, 1, "", "rot90"], [111, 2, 1, "", "static_atleast_1d"], [111, 2, 1, "", "static_atleast_2d"], [111, 2, 1, "", "static_atleast_3d"], [111, 2, 1, "", "static_broadcast_shapes"], [111, 2, 1, "", "static_dsplit"], [111, 2, 1, "", "static_dstack"], [111, 2, 1, "", "static_flatten"], [111, 2, 1, "", "static_fliplr"], [111, 2, 1, "", "static_flipud"], [111, 2, 1, "", "static_heaviside"], [111, 2, 1, "", "static_hsplit"], [111, 2, 1, "", "static_hstack"], [111, 2, 1, "", "static_i0"], [111, 2, 1, "", "static_moveaxis"], [111, 2, 1, "", "static_pad"], [111, 2, 1, "", "static_rot90"], [111, 2, 1, "", "static_take_along_axis"], [111, 2, 1, "", "static_top_k"], [111, 2, 1, "", "static_vsplit"], [111, 2, 1, "", "static_vstack"], [111, 2, 1, "", "take_along_axis"], [111, 2, 1, "", "top_k"], [111, 2, 1, "", "vsplit"], [111, 2, 1, "", "vstack"]], "ivy.container.experimental.ContainerWithRandomExperimental": [[111, 2, 1, "", "beta"], [111, 2, 1, "", "dirichlet"], [111, 2, 1, "", "static_beta"], [111, 2, 1, "", "static_dirichlet"]], "ivy.container.experimental.ContainerWithSortingExperimental": [[111, 2, 1, "", "msort"], [111, 2, 1, "", "static_msort"]], "ivy.container.experimental.ContainerWithStatisticalExperimental": [[111, 2, 1, "", "median"], [111, 2, 1, "", "nanmean"], [111, 2, 1, "", "quantile"], [111, 2, 1, "", "static_median"], [111, 2, 1, "", "static_nanmean"], [111, 2, 1, "", "static_quantile"], [111, 2, 1, "", "static_unravel_index"], [111, 2, 1, "", "unravel_index"]], "ivy.container.general": [[113, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[113, 2, 1, "", "all_equal"], [113, 2, 1, "", "assert_supports_inplace"], [113, 2, 1, "", "clip_matrix_norm"], [113, 2, 1, "", "clip_vector_norm"], [113, 2, 1, "", "einops_rearrange"], [113, 2, 1, "", "einops_reduce"], [113, 2, 1, "", "einops_repeat"], [113, 2, 1, "", "fourier_encode"], [113, 2, 1, "", "gather"], [113, 2, 1, "", "gather_nd"], [113, 2, 1, "", "get_num_dims"], [113, 2, 1, "", "has_nans"], [113, 2, 1, "", "inplace_decrement"], [113, 2, 1, "", "inplace_increment"], [113, 2, 1, "", "inplace_update"], [113, 2, 1, "", "is_array"], [113, 2, 1, "", "is_ivy_array"], [113, 2, 1, "", "is_native_array"], [113, 2, 1, "", "scatter_flat"], [113, 2, 1, "", "scatter_nd"], [113, 2, 1, "", "stable_divide"], [113, 2, 1, "", "stable_pow"], [113, 2, 1, "", "static_all_equal"], [113, 2, 1, "", "static_assert_supports_inplace"], [113, 2, 1, "", "static_clip_matrix_norm"], [113, 2, 1, "", "static_clip_vector_norm"], [113, 2, 1, "", "static_einops_rearrange"], [113, 2, 1, "", "static_einops_reduce"], [113, 2, 1, "", "static_einops_repeat"], [113, 2, 1, "", "static_fourier_encode"], [113, 2, 1, "", "static_gather"], [113, 2, 1, "", "static_gather_nd"], [113, 2, 1, "", "static_get_num_dims"], [113, 2, 1, "", "static_has_nans"], [113, 2, 1, "", "static_inplace_decrement"], [113, 2, 1, "", "static_inplace_increment"], [113, 2, 1, "", "static_inplace_update"], [113, 2, 1, "", "static_is_array"], [113, 2, 1, "", "static_is_ivy_array"], [113, 2, 1, "", "static_is_native_array"], [113, 2, 1, "", "static_scatter_flat"], [113, 2, 1, "", "static_scatter_nd"], [113, 2, 1, "", "static_stable_divide"], [113, 2, 1, "", "static_stable_pow"], [113, 2, 1, "", "static_supports_inplace_updates"], [113, 2, 1, "", "static_to_list"], [113, 2, 1, "", "static_to_numpy"], [113, 2, 1, "", "static_to_scalar"], [113, 2, 1, "", "static_value_is_nan"], [113, 2, 1, "", "supports_inplace_updates"], [113, 2, 1, "", "to_list"], [113, 2, 1, "", "to_numpy"], [113, 2, 1, "", "to_scalar"], [113, 2, 1, "", "value_is_nan"]], "ivy.container.gradients": [[115, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[115, 2, 1, "", "adam_step"], [115, 2, 1, "", "adam_update"], [115, 2, 1, "", "gradient_descent_update"], [115, 2, 1, "", "lamb_update"], [115, 2, 1, "", "lars_update"], [115, 2, 1, "", "optimizer_update"], [115, 2, 1, "", "static_stop_gradient"], [115, 2, 1, "", "stop_gradient"]], "ivy.container.image": [[117, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[119, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[119, 2, 1, "", "conv1d"], [119, 2, 1, "", "conv1d_transpose"], [119, 2, 1, "", "conv2d"], [119, 2, 1, "", "conv2d_transpose"], [119, 2, 1, "", "conv3d"], [119, 2, 1, "", "conv3d_transpose"], [119, 2, 1, "", "depthwise_conv2d"], [119, 2, 1, "", "dropout"], [119, 2, 1, "", "dropout1d"], [119, 2, 1, "", "linear"], [119, 2, 1, "", "lstm_update"], [119, 2, 1, "", "multi_head_attention"], [119, 2, 1, "", "scaled_dot_product_attention"], [119, 2, 1, "", "static_conv1d"], [119, 2, 1, "", "static_conv1d_transpose"], [119, 2, 1, "", "static_conv2d"], [119, 2, 1, "", "static_conv2d_transpose"], [119, 2, 1, "", "static_conv3d"], [119, 2, 1, "", "static_conv3d_transpose"], [119, 2, 1, "", "static_depthwise_conv2d"], [119, 2, 1, "", "static_dropout"], [119, 2, 1, "", "static_dropout1d"], [119, 2, 1, "", "static_linear"], [119, 2, 1, "", "static_lstm_update"], [119, 2, 1, "", "static_multi_head_attention"], [119, 2, 1, "", "static_scaled_dot_product_attention"]], "ivy.container.linear_algebra": [[121, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[121, 2, 1, "", "cholesky"], [121, 2, 1, "", "cross"], [121, 2, 1, "", "det"], [121, 2, 1, "", "diag"], [121, 2, 1, "", "diagonal"], [121, 2, 1, "", "eigh"], [121, 2, 1, "", "eigvalsh"], [121, 2, 1, "", "inner"], [121, 2, 1, "", "inv"], [121, 2, 1, "", "matmul"], [121, 2, 1, "", "matrix_norm"], [121, 2, 1, "", "matrix_power"], [121, 2, 1, "", "matrix_rank"], [121, 2, 1, "", "matrix_transpose"], [121, 2, 1, "", "outer"], [121, 2, 1, "", "pinv"], [121, 2, 1, "", "qr"], [121, 2, 1, "", "slogdet"], [121, 2, 1, "", "solve"], [121, 2, 1, "", "static_cholesky"], [121, 2, 1, "", "static_cross"], [121, 2, 1, "", "static_det"], [121, 2, 1, "", "static_diag"], [121, 2, 1, "", "static_diagonal"], [121, 2, 1, "", "static_eigh"], [121, 2, 1, "", "static_eigvalsh"], [121, 2, 1, "", "static_inner"], [121, 2, 1, "", "static_inv"], [121, 2, 1, "", "static_matmul"], [121, 2, 1, "", "static_matrix_norm"], [121, 2, 1, "", "static_matrix_power"], [121, 2, 1, "", "static_matrix_rank"], [121, 2, 1, "", "static_matrix_transpose"], [121, 2, 1, "", "static_outer"], [121, 2, 1, "", "static_pinv"], [121, 2, 1, "", "static_qr"], [121, 2, 1, "", "static_slogdet"], [121, 2, 1, "", "static_solve"], [121, 2, 1, "", "static_svd"], [121, 2, 1, "", "static_svdvals"], [121, 2, 1, "", "static_tensordot"], [121, 2, 1, "", "static_trace"], [121, 2, 1, "", "static_vander"], [121, 2, 1, "", "static_vecdot"], [121, 2, 1, "", "static_vector_norm"], [121, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [121, 2, 1, "", "svd"], [121, 2, 1, "", "svdvals"], [121, 2, 1, "", "tensordot"], [121, 2, 1, "", "tensorsolve"], [121, 2, 1, "", "trace"], [121, 2, 1, "", "vander"], [121, 2, 1, "", "vecdot"], [121, 2, 1, "", "vector_norm"], [121, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[123, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[123, 2, 1, "", "binary_cross_entropy"], [123, 2, 1, "", "cross_entropy"], [123, 2, 1, "", "sparse_cross_entropy"], [123, 2, 1, "", "static_binary_cross_entropy"], [123, 2, 1, "", "static_cross_entropy"], [123, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[125, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[125, 2, 1, "", "clip"], [125, 2, 1, "", "concat"], [125, 2, 1, "", "constant_pad"], [125, 2, 1, "", "expand_dims"], [125, 2, 1, "", "flip"], [125, 2, 1, "", "permute_dims"], [125, 2, 1, "", "repeat"], [125, 2, 1, "", "reshape"], [125, 2, 1, "", "roll"], [125, 2, 1, "", "split"], [125, 2, 1, "", "squeeze"], [125, 2, 1, "", "stack"], [125, 2, 1, "", "static_clip"], [125, 2, 1, "", "static_concat"], [125, 2, 1, "", "static_constant_pad"], [125, 2, 1, "", "static_expand_dims"], [125, 2, 1, "", "static_flip"], [125, 2, 1, "", "static_permute_dims"], [125, 2, 1, "", "static_repeat"], [125, 2, 1, "", "static_reshape"], [125, 2, 1, "", "static_roll"], [125, 2, 1, "", "static_split"], [125, 2, 1, "", "static_squeeze"], [125, 2, 1, "", "static_stack"], [125, 2, 1, "", "static_swapaxes"], [125, 2, 1, "", "static_tile"], [125, 2, 1, "", "static_unstack"], [125, 2, 1, "", "static_zero_pad"], [125, 2, 1, "", "swapaxes"], [125, 2, 1, "", "tile"], [125, 2, 1, "", "unstack"], [125, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[127, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[127, 2, 1, "", "layer_norm"]], "ivy.container.random": [[129, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[129, 2, 1, "", "multinomial"], [129, 2, 1, "", "randint"], [129, 2, 1, "", "random_normal"], [129, 2, 1, "", "random_uniform"], [129, 2, 1, "", "shuffle"], [129, 2, 1, "", "static_multinomial"], [129, 2, 1, "", "static_randint"], [129, 2, 1, "", "static_random_normal"], [129, 2, 1, "", "static_random_uniform"], [129, 2, 1, "", "static_shuffle"]], "ivy.container.searching": [[131, 1, 1, "", "ContainerWithSearching"]], "ivy.container.searching.ContainerWithSearching": [[131, 2, 1, "", "argmax"], [131, 2, 1, "", "argmin"], [131, 2, 1, "", "argwhere"], [131, 2, 1, "", "nonzero"], [131, 2, 1, "", "static_argmax"], [131, 2, 1, "", "static_argmin"], [131, 2, 1, "", "static_argwhere"], [131, 2, 1, "", "static_nonzero"], [131, 2, 1, "", "static_where"], [131, 2, 1, "", "where"]], "ivy.container.set": [[133, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[133, 2, 1, "", "static_unique_all"], [133, 2, 1, "", "static_unique_counts"], [133, 2, 1, "", "static_unique_inverse"], [133, 2, 1, "", "static_unique_values"], [133, 2, 1, "", "unique_all"], [133, 2, 1, "", "unique_counts"], [133, 2, 1, "", "unique_inverse"], [133, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[135, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[135, 2, 1, "", "argsort"], [135, 2, 1, "", "searchsorted"], [135, 2, 1, "", "sort"], [135, 2, 1, "", "static_argsort"], [135, 2, 1, "", "static_searchsorted"], [135, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[137, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[137, 2, 1, "", "cumprod"], [137, 2, 1, "", "cumsum"], [137, 2, 1, "", "einsum"], [137, 2, 1, "", "max"], [137, 2, 1, "", "mean"], [137, 2, 1, "", "min"], [137, 2, 1, "", "prod"], [137, 2, 1, "", "static_cumprod"], [137, 2, 1, "", "static_cumsum"], [137, 2, 1, "", "static_prod"], [137, 2, 1, "", "static_sum"], [137, 2, 1, "", "static_var"], [137, 2, 1, "", "std"], [137, 2, 1, "", "sum"], [137, 2, 1, "", "var"]], "ivy.container.utility": [[139, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[139, 2, 1, "", "all"], [139, 2, 1, "", "any"], [139, 2, 1, "", "static_all"], [139, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[141, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[183, 4, 1, "", "custom_handle_nestable"], [184, 4, 1, "", "handle_array_like"], [185, 4, 1, "", "handle_nans"], [186, 4, 1, "", "handle_nestable"], [187, 4, 1, "", "handle_out_argument"], [188, 4, 1, "", "infer_device"], [189, 4, 1, "", "infer_dtype"], [190, 4, 1, "", "inputs_to_ivy_arrays"], [191, 4, 1, "", "inputs_to_native_arrays"], [192, 4, 1, "", "integer_arrays_to_float"], [193, 4, 1, "", "outputs_to_ivy_arrays"], [194, 4, 1, "", "to_native_arrays_and_back"], [182, 4, 1, "", "with_supported_device_and_dtypes"], [182, 4, 1, "", "with_supported_devices"], [182, 4, 1, "", "with_supported_dtypes"], [182, 4, 1, "", "with_unsupported_device_and_dtypes"], [182, 4, 1, "", "with_unsupported_devices"], [182, 4, 1, "", "with_unsupported_dtypes"]], "ivy.functional.ivy": [[196, 0, 0, "-", "activations"], [234, 0, 0, "-", "compilation"], [236, 0, 0, "-", "constants"], [237, 0, 0, "-", "creation"], [323, 0, 0, "-", "data_type"], [418, 0, 0, "-", "device"], [453, 0, 0, "-", "elementwise"], [774, 0, 0, "-", "experimental"], [1258, 0, 0, "-", "general"], [1451, 0, 0, "-", "gradients"], [1489, 0, 0, "-", "layers"], [1555, 0, 0, "-", "linear_algebra"], [1695, 0, 0, "-", "losses"], [1711, 0, 0, "-", "manipulation"], [1792, 0, 0, "-", "meta"], [1796, 0, 0, "-", "nest"], [1816, 0, 0, "-", "norms"], [1821, 0, 0, "-", "random"], [1848, 0, 0, "-", "searching"], [1874, 0, 0, "-", "set"], [1895, 0, 0, "-", "sorting"], [1911, 0, 0, "-", "statistical"], [1957, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[197, 4, 1, "", "deserialize"], [201, 4, 1, "", "gelu"], [203, 4, 1, "", "get"], [207, 4, 1, "", "leaky_relu"], [212, 4, 1, "", "log_softmax"], [217, 4, 1, "", "relu"], [222, 4, 1, "", "sigmoid"], [227, 4, 1, "", "softmax"], [232, 4, 1, "", "softplus"]], "ivy.functional.ivy.compilation": [[235, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[236, 5, 1, "", "e"], [236, 5, 1, "", "inf"], [236, 5, 1, "", "nan"], [236, 5, 1, "", "newaxis"], [236, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[238, 1, 1, "", "NestedSequence"], [240, 4, 1, "", "arange"], [237, 4, 1, "", "array"], [244, 4, 1, "", "asarray"], [246, 4, 1, "", "asarray_handle_nestable"], [247, 4, 1, "", "asarray_infer_device"], [248, 4, 1, "", "asarray_to_native_arrays_and_back"], [251, 4, 1, "", "copy_array"], [252, 4, 1, "", "empty"], [256, 4, 1, "", "empty_like"], [259, 4, 1, "", "eye"], [264, 4, 1, "", "from_dlpack"], [266, 4, 1, "", "full"], [270, 4, 1, "", "full_like"], [275, 4, 1, "", "linspace"], [280, 4, 1, "", "logspace"], [285, 4, 1, "", "meshgrid"], [290, 4, 1, "", "native_array"], [295, 4, 1, "", "one_hot"], [298, 4, 1, "", "ones"], [303, 4, 1, "", "ones_like"], [309, 4, 1, "", "tril"], [314, 4, 1, "", "triu"], [317, 4, 1, "", "zeros"], [322, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.creation.NestedSequence": [[238, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type": [[324, 1, 1, "", "DefaultDtype"], [325, 1, 1, "", "DefaultFloatDtype"], [326, 1, 1, "", "DefaultIntDtype"], [327, 1, 1, "", "DefaultUintDtype"], [328, 4, 1, "", "as_ivy_dtype"], [329, 4, 1, "", "as_native_dtype"], [333, 4, 1, "", "astype"], [338, 4, 1, "", "broadcast_arrays"], [343, 4, 1, "", "broadcast_to"], [348, 4, 1, "", "can_cast"], [350, 4, 1, "", "check_float"], [351, 4, 1, "", "closest_valid_dtype"], [352, 4, 1, "", "default_dtype"], [354, 4, 1, "", "default_float_dtype"], [356, 4, 1, "", "default_int_dtype"], [357, 4, 1, "", "default_uint_dtype"], [360, 4, 1, "", "dtype"], [362, 4, 1, "", "dtype_bits"], [366, 4, 1, "", "finfo"], [369, 4, 1, "", "function_supported_dtypes"], [372, 4, 1, "", "function_unsupported_dtypes"], [377, 4, 1, "", "iinfo"], [379, 4, 1, "", "infer_default_dtype"], [380, 4, 1, "", "invalid_dtype"], [384, 4, 1, "", "is_bool_dtype"], [389, 4, 1, "", "is_float_dtype"], [394, 4, 1, "", "is_int_dtype"], [399, 4, 1, "", "is_uint_dtype"], [401, 4, 1, "", "promote_types"], [402, 4, 1, "", "promote_types_of_inputs"], [406, 4, 1, "", "result_type"], [408, 4, 1, "", "set_default_dtype"], [409, 4, 1, "", "set_default_float_dtype"], [410, 4, 1, "", "set_default_int_dtype"], [411, 4, 1, "", "set_default_uint_dtype"], [412, 4, 1, "", "type_promote_arrays"], [413, 4, 1, "", "unset_default_dtype"], [414, 4, 1, "", "unset_default_float_dtype"], [415, 4, 1, "", "unset_default_int_dtype"], [416, 4, 1, "", "unset_default_uint_dtype"], [417, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[324, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[325, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[326, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[327, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[419, 1, 1, "", "DefaultDevice"], [420, 1, 1, "", "Profiler"], [421, 4, 1, "", "as_ivy_dev"], [422, 4, 1, "", "as_native_dev"], [423, 4, 1, "", "clear_mem_on_dev"], [424, 4, 1, "", "default_device"], [428, 4, 1, "", "dev"], [430, 4, 1, "", "dev_util"], [431, 4, 1, "", "function_supported_devices"], [432, 4, 1, "", "function_unsupported_devices"], [433, 4, 1, "", "get_all_ivy_arrays_on_dev"], [434, 4, 1, "", "gpu_is_available"], [435, 4, 1, "", "num_cpu_cores"], [436, 4, 1, "", "num_gpus"], [437, 4, 1, "", "num_ivy_arrays_on_dev"], [438, 4, 1, "", "percent_used_mem_on_dev"], [439, 4, 1, "", "print_all_ivy_arrays_on_dev"], [440, 4, 1, "", "set_default_device"], [441, 4, 1, "", "set_split_factor"], [442, 4, 1, "", "split_factor"], [443, 4, 1, "", "split_func_call"], [448, 4, 1, "", "to_device"], [449, 4, 1, "", "total_mem_on_dev"], [450, 4, 1, "", "tpu_is_available"], [451, 4, 1, "", "unset_default_device"], [452, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[419, 2, 1, "", "__enter__"], [419, 2, 1, "", "__exit__"], [419, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[420, 2, 1, "", "__init__"], [420, 2, 1, "", "start"], [420, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[457, 4, 1, "", "abs"], [462, 4, 1, "", "acos"], [467, 4, 1, "", "acosh"], [472, 4, 1, "", "add"], [477, 4, 1, "", "asin"], [482, 4, 1, "", "asinh"], [487, 4, 1, "", "atan"], [492, 4, 1, "", "atan2"], [497, 4, 1, "", "atanh"], [502, 4, 1, "", "bitwise_and"], [507, 4, 1, "", "bitwise_invert"], [512, 4, 1, "", "bitwise_left_shift"], [517, 4, 1, "", "bitwise_or"], [522, 4, 1, "", "bitwise_right_shift"], [527, 4, 1, "", "bitwise_xor"], [532, 4, 1, "", "ceil"], [537, 4, 1, "", "cos"], [542, 4, 1, "", "cosh"], [547, 4, 1, "", "deg2rad"], [552, 4, 1, "", "divide"], [557, 4, 1, "", "equal"], [562, 4, 1, "", "erf"], [567, 4, 1, "", "exp"], [572, 4, 1, "", "expm1"], [577, 4, 1, "", "floor"], [582, 4, 1, "", "floor_divide"], [587, 4, 1, "", "greater"], [592, 4, 1, "", "greater_equal"], [597, 4, 1, "", "isfinite"], [602, 4, 1, "", "isinf"], [607, 4, 1, "", "isnan"], [612, 4, 1, "", "isreal"], [617, 4, 1, "", "less"], [622, 4, 1, "", "less_equal"], [627, 4, 1, "", "log"], [632, 4, 1, "", "log10"], [637, 4, 1, "", "log1p"], [642, 4, 1, "", "log2"], [647, 4, 1, "", "logaddexp"], [652, 4, 1, "", "logical_and"], [657, 4, 1, "", "logical_not"], [662, 4, 1, "", "logical_or"], [667, 4, 1, "", "logical_xor"], [672, 4, 1, "", "maximum"], [677, 4, 1, "", "minimum"], [682, 4, 1, "", "multiply"], [687, 4, 1, "", "negative"], [692, 4, 1, "", "not_equal"], [697, 4, 1, "", "positive"], [702, 4, 1, "", "pow"], [707, 4, 1, "", "rad2deg"], [712, 4, 1, "", "reciprocal"], [717, 4, 1, "", "remainder"], [722, 4, 1, "", "round"], [727, 4, 1, "", "sign"], [732, 4, 1, "", "sin"], [737, 4, 1, "", "sinh"], [742, 4, 1, "", "sqrt"], [747, 4, 1, "", "square"], [753, 4, 1, "", "subtract"], [758, 4, 1, "", "tan"], [763, 4, 1, "", "tanh"], [768, 4, 1, "", "trunc"], [773, 4, 1, "", "trunc_divide"]], "ivy.functional.ivy.experimental": [[775, 1, 1, "", "NativeSparseArray"], [776, 1, 1, "", "SparseArray"], [777, 0, 0, "-", "activations"], [782, 4, 1, "", "allclose"], [787, 4, 1, "", "angle"], [792, 4, 1, "", "atleast_1d"], [797, 4, 1, "", "atleast_2d"], [802, 4, 1, "", "atleast_3d"], [807, 4, 1, "", "avg_pool1d"], [812, 4, 1, "", "avg_pool2d"], [817, 4, 1, "", "avg_pool3d"], [822, 4, 1, "", "beta"], [826, 4, 1, "", "binary_cross_entropy_with_logits"], [830, 4, 1, "", "broadcast_shapes"], [832, 0, 0, "-", "compilation"], [833, 0, 0, "-", "constants"], [837, 4, 1, "", "copysign"], [842, 4, 1, "", "count_nonzero"], [844, 0, 0, "-", "creation"], [852, 0, 0, "-", "data_type"], [857, 4, 1, "", "dct"], [859, 0, 0, "-", "device"], [863, 4, 1, "", "diagflat"], [868, 4, 1, "", "diff"], [873, 4, 1, "", "dirichlet"], [875, 4, 1, "", "dropout1d"], [879, 4, 1, "", "dsplit"], [884, 4, 1, "", "dstack"], [889, 4, 1, "", "eig"], [891, 0, 0, "-", "elementwise"], [920, 4, 1, "", "exp2"], [922, 4, 1, "", "fft"], [926, 4, 1, "", "fix"], [931, 4, 1, "", "flatten"], [936, 4, 1, "", "fliplr"], [941, 4, 1, "", "flipud"], [946, 4, 1, "", "float_power"], [951, 4, 1, "", "fmax"], [956, 4, 1, "", "fmod"], [960, 4, 1, "", "gamma"], [964, 4, 1, "", "gcd"], [966, 0, 0, "-", "general"], [971, 4, 1, "", "gradient"], [973, 0, 0, "-", "gradients"], [976, 4, 1, "", "hamming_window"], [980, 4, 1, "", "hann_window"], [985, 4, 1, "", "heaviside"], [990, 4, 1, "", "hsplit"], [995, 4, 1, "", "hstack"], [1000, 4, 1, "", "i0"], [1002, 4, 1, "", "is_ivy_sparse_array"], [1003, 4, 1, "", "is_native_dtype"], [1004, 4, 1, "", "is_native_sparse_array"], [1008, 4, 1, "", "isclose"], [1013, 4, 1, "", "isin"], [1018, 4, 1, "", "isneginf"], [1023, 4, 1, "", "isposinf"], [1027, 4, 1, "", "kaiser_bessel_derived_window"], [1031, 4, 1, "", "kaiser_window"], [1036, 4, 1, "", "kron"], [1038, 0, 0, "-", "layers"], [1051, 4, 1, "", "lcm"], [1053, 0, 0, "-", "linear_algebra"], [1062, 4, 1, "", "logaddexp2"], [1067, 4, 1, "", "logit"], [1069, 0, 0, "-", "losses"], [1071, 0, 0, "-", "manipulation"], [1097, 4, 1, "", "matrix_exp"], [1102, 4, 1, "", "max_pool1d"], [1107, 4, 1, "", "max_pool2d"], [1112, 4, 1, "", "max_pool3d"], [1117, 4, 1, "", "median"], [1119, 0, 0, "-", "meta"], [1123, 4, 1, "", "moveaxis"], [1128, 4, 1, "", "msort"], [1133, 4, 1, "", "multi_dot"], [1138, 4, 1, "", "nan_to_num"], [1143, 4, 1, "", "nanmean"], [1148, 4, 1, "", "nansum"], [1150, 4, 1, "", "native_sparse_array"], [1151, 4, 1, "", "native_sparse_array_to_indices_values_and_shape"], [1152, 4, 1, "", "ndenumerate"], [1153, 4, 1, "", "ndindex"], [1154, 0, 0, "-", "nest"], [1158, 4, 1, "", "nextafter"], [1160, 0, 0, "-", "norms"], [1164, 4, 1, "", "pad"], [1169, 4, 1, "", "quantile"], [1171, 0, 0, "-", "random"], [1178, 4, 1, "", "rot90"], [1180, 0, 0, "-", "searching"], [1181, 0, 0, "-", "set"], [1185, 4, 1, "", "signbit"], [1190, 4, 1, "", "sinc"], [1192, 0, 0, "-", "sorting"], [1194, 0, 0, "-", "sparse_array"], [1201, 0, 0, "-", "statistical"], [1210, 4, 1, "", "take_along_axis"], [1215, 4, 1, "", "top_k"], [1218, 4, 1, "", "trapz"], [1222, 4, 1, "", "tril_indices"], [1226, 4, 1, "", "triu_indices"], [1231, 4, 1, "", "unravel_index"], [1232, 0, 0, "-", "utility"], [1236, 4, 1, "", "vorbis_window"], [1241, 4, 1, "", "vsplit"], [1246, 4, 1, "", "vstack"], [1251, 4, 1, "", "xlogy"], [1256, 4, 1, "", "zeta"]], "ivy.functional.ivy.experimental.SparseArray": [[776, 2, 1, "", "__init__"], [776, 3, 1, "", "coo_indices"], [776, 3, 1, "", "csc_ccol_indices"], [776, 3, 1, "", "csc_row_indices"], [776, 3, 1, "", "csr_col_indices"], [776, 3, 1, "", "csr_crow_indices"], [776, 3, 1, "", "data"], [776, 3, 1, "", "dense_shape"], [776, 2, 1, "", "to_dense_array"], [776, 3, 1, "", "values"]], "ivy.functional.ivy.experimental.activations": [[778, 4, 1, "", "logit"]], "ivy.functional.ivy.experimental.creation": [[845, 4, 1, "", "hamming_window"], [846, 4, 1, "", "hann_window"], [847, 4, 1, "", "kaiser_bessel_derived_window"], [848, 4, 1, "", "kaiser_window"], [849, 4, 1, "", "tril_indices"], [850, 4, 1, "", "triu_indices"], [851, 4, 1, "", "vorbis_window"]], "ivy.functional.ivy.experimental.data_type": [[853, 4, 1, "", "is_native_dtype"]], "ivy.functional.ivy.experimental.elementwise": [[892, 4, 1, "", "allclose"], [893, 4, 1, "", "angle"], [894, 4, 1, "", "copysign"], [895, 4, 1, "", "count_nonzero"], [896, 4, 1, "", "diff"], [897, 4, 1, "", "exp2"], [898, 4, 1, "", "fix"], [899, 4, 1, "", "float_power"], [900, 4, 1, "", "fmax"], [901, 4, 1, "", "fmod"], [902, 4, 1, "", "gcd"], [903, 4, 1, "", "gradient"], [904, 4, 1, "", "isclose"], [905, 4, 1, "", "isneginf"], [906, 4, 1, "", "isposinf"], [907, 4, 1, "", "lcm"], [908, 4, 1, "", "logaddexp2"], [909, 4, 1, "", "nan_to_num"], [910, 4, 1, "", "nansum"], [911, 4, 1, "", "nextafter"], [912, 4, 1, "", "signbit"], [913, 4, 1, "", "sinc"], [914, 4, 1, "", "trapz"], [915, 4, 1, "", "xlogy"], [916, 4, 1, "", "zeta"]], "ivy.functional.ivy.experimental.general": [[967, 4, 1, "", "isin"]], "ivy.functional.ivy.experimental.layers": [[1039, 4, 1, "", "avg_pool1d"], [1040, 4, 1, "", "avg_pool2d"], [1041, 4, 1, "", "avg_pool3d"], [1042, 4, 1, "", "dct"], [1043, 4, 1, "", "dropout1d"], [1044, 4, 1, "", "fft"], [1045, 4, 1, "", "max_pool1d"], [1046, 4, 1, "", "max_pool2d"], [1047, 4, 1, "", "max_pool3d"]], "ivy.functional.ivy.experimental.linear_algebra": [[1054, 4, 1, "", "diagflat"], [1055, 4, 1, "", "eig"], [1056, 4, 1, "", "kron"], [1057, 4, 1, "", "matrix_exp"], [1058, 4, 1, "", "multi_dot"]], "ivy.functional.ivy.experimental.losses": [[1070, 4, 1, "", "binary_cross_entropy_with_logits"]], "ivy.functional.ivy.experimental.manipulation": [[1072, 4, 1, "", "atleast_1d"], [1073, 4, 1, "", "atleast_2d"], [1074, 4, 1, "", "atleast_3d"], [1075, 4, 1, "", "broadcast_shapes"], [1076, 4, 1, "", "dsplit"], [1077, 4, 1, "", "dstack"], [1078, 4, 1, "", "flatten"], [1079, 4, 1, "", "fliplr"], [1080, 4, 1, "", "flipud"], [1081, 4, 1, "", "heaviside"], [1082, 4, 1, "", "hsplit"], [1083, 4, 1, "", "hstack"], [1084, 4, 1, "", "i0"], [1085, 4, 1, "", "moveaxis"], [1086, 4, 1, "", "ndenumerate"], [1087, 4, 1, "", "ndindex"], [1088, 4, 1, "", "pad"], [1089, 4, 1, "", "rot90"], [1090, 4, 1, "", "take_along_axis"], [1091, 4, 1, "", "top_k"], [1092, 4, 1, "", "vsplit"], [1093, 4, 1, "", "vstack"]], "ivy.functional.ivy.experimental.random": [[1172, 4, 1, "", "beta"], [1173, 4, 1, "", "dirichlet"], [1174, 4, 1, "", "gamma"]], "ivy.functional.ivy.experimental.sorting": [[1193, 4, 1, "", "msort"]], "ivy.functional.ivy.experimental.sparse_array": [[1195, 1, 1, "", "NativeSparseArray"], [1196, 1, 1, "", "SparseArray"], [1197, 4, 1, "", "is_ivy_sparse_array"], [1198, 4, 1, "", "is_native_sparse_array"], [1199, 4, 1, "", "native_sparse_array"], [1200, 4, 1, "", "native_sparse_array_to_indices_values_and_shape"]], "ivy.functional.ivy.experimental.sparse_array.SparseArray": [[1196, 2, 1, "", "__init__"], [1196, 3, 1, "", "coo_indices"], [1196, 3, 1, "", "csc_ccol_indices"], [1196, 3, 1, "", "csc_row_indices"], [1196, 3, 1, "", "csr_col_indices"], [1196, 3, 1, "", "csr_crow_indices"], [1196, 3, 1, "", "data"], [1196, 3, 1, "", "dense_shape"], [1196, 2, 1, "", "to_dense_array"], [1196, 3, 1, "", "values"]], "ivy.functional.ivy.experimental.statistical": [[1202, 4, 1, "", "median"], [1203, 4, 1, "", "nanmean"], [1204, 4, 1, "", "quantile"], [1205, 4, 1, "", "unravel_index"]], "ivy.functional.ivy.general": [[1262, 4, 1, "", "all_equal"], [1264, 4, 1, "", "arg_info"], [1265, 4, 1, "", "arg_names"], [1268, 4, 1, "", "array_equal"], [1272, 4, 1, "", "assert_supports_inplace"], [1274, 4, 1, "", "cache_fn"], [1278, 4, 1, "", "clip_matrix_norm"], [1283, 4, 1, "", "clip_vector_norm"], [1285, 4, 1, "", "container_types"], [1286, 4, 1, "", "current_backend_str"], [1289, 4, 1, "", "default"], [1293, 4, 1, "", "einops_rearrange"], [1298, 4, 1, "", "einops_reduce"], [1303, 4, 1, "", "einops_repeat"], [1307, 4, 1, "", "exists"], [1311, 4, 1, "", "fourier_encode"], [1313, 4, 1, "", "function_supported_devices_and_dtypes"], [1314, 4, 1, "", "function_unsupported_devices_and_dtypes"], [1318, 4, 1, "", "gather"], [1323, 4, 1, "", "gather_nd"], [1325, 4, 1, "", "get_all_arrays_in_memory"], [1326, 4, 1, "", "get_array_mode"], [1327, 4, 1, "", "get_exception_trace_mode"], [1328, 4, 1, "", "get_item"], [1329, 4, 1, "", "get_min_base"], [1330, 4, 1, "", "get_min_denominator"], [1331, 4, 1, "", "get_nestable_mode"], [1335, 4, 1, "", "get_num_dims"], [1337, 4, 1, "", "get_queue_timeout"], [1338, 4, 1, "", "get_referrers_recursive"], [1339, 4, 1, "", "get_show_func_wrapper_trace_mode"], [1340, 4, 1, "", "get_tmp_dir"], [1344, 4, 1, "", "has_nans"], [1346, 4, 1, "", "inplace_arrays_supported"], [1350, 4, 1, "", "inplace_decrement"], [1355, 4, 1, "", "inplace_increment"], [1360, 4, 1, "", "inplace_update"], [1362, 4, 1, "", "inplace_variables_supported"], [1366, 4, 1, "", "is_array"], [1371, 4, 1, "", "is_ivy_array"], [1375, 4, 1, "", "is_ivy_container"], [1379, 4, 1, "", "is_native_array"], [1381, 4, 1, "", "isscalar"], [1382, 4, 1, "", "match_kwargs"], [1383, 4, 1, "", "multiprocessing"], [1384, 4, 1, "", "num_arrays_in_memory"], [1385, 4, 1, "", "print_all_arrays_in_memory"], [1389, 4, 1, "", "scatter_flat"], [1394, 4, 1, "", "scatter_nd"], [1396, 4, 1, "", "set_array_mode"], [1397, 4, 1, "", "set_exception_trace_mode"], [1398, 4, 1, "", "set_min_base"], [1399, 4, 1, "", "set_min_denominator"], [1400, 4, 1, "", "set_nestable_mode"], [1401, 4, 1, "", "set_queue_timeout"], [1402, 4, 1, "", "set_shape_array_mode"], [1403, 4, 1, "", "set_show_func_wrapper_trace_mode"], [1404, 4, 1, "", "set_tmp_dir"], [1405, 4, 1, "", "shape"], [1406, 4, 1, "", "shape_array_mode"], [1410, 4, 1, "", "stable_divide"], [1415, 4, 1, "", "stable_pow"], [1421, 4, 1, "", "supports_inplace_updates"], [1422, 4, 1, "", "to_ivy_shape"], [1426, 4, 1, "", "to_list"], [1427, 4, 1, "", "to_native_shape"], [1432, 4, 1, "", "to_numpy"], [1437, 4, 1, "", "to_scalar"], [1438, 4, 1, "", "try_else_none"], [1439, 4, 1, "", "unset_array_mode"], [1440, 4, 1, "", "unset_exception_trace_mode"], [1441, 4, 1, "", "unset_nestable_mode"], [1442, 4, 1, "", "unset_queue_timeout"], [1443, 4, 1, "", "unset_shape_array_mode"], [1444, 4, 1, "", "unset_show_func_wrapper_trace_mode"], [1449, 4, 1, "", "value_is_nan"], [1450, 4, 1, "", "vmap"]], "ivy.functional.ivy.gradients": [[1452, 1, 1, "", "GradientTracking"], [1456, 4, 1, "", "adam_step"], [1460, 4, 1, "", "adam_update"], [1461, 4, 1, "", "execute_with_gradients"], [1462, 4, 1, "", "grad"], [1466, 4, 1, "", "gradient_descent_update"], [1467, 4, 1, "", "jac"], [1471, 4, 1, "", "lamb_update"], [1475, 4, 1, "", "lars_update"], [1479, 4, 1, "", "optimizer_update"], [1480, 4, 1, "", "set_with_grads"], [1485, 4, 1, "", "stop_gradient"], [1486, 4, 1, "", "unset_with_grads"], [1487, 4, 1, "", "value_and_grad"], [1488, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[1452, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[1490, 4, 1, "", "conv"], [1494, 4, 1, "", "conv1d"], [1499, 4, 1, "", "conv1d_transpose"], [1504, 4, 1, "", "conv2d"], [1508, 4, 1, "", "conv2d_transpose"], [1513, 4, 1, "", "conv3d"], [1518, 4, 1, "", "conv3d_transpose"], [1520, 4, 1, "", "conv_general_dilated"], [1521, 4, 1, "", "conv_general_transpose"], [1522, 4, 1, "", "deconv_length"], [1526, 4, 1, "", "depthwise_conv2d"], [1531, 4, 1, "", "dropout"], [1533, 4, 1, "", "get_x_data_format"], [1534, 4, 1, "", "handle_padding"], [1538, 4, 1, "", "linear"], [1543, 4, 1, "", "lstm_update"], [1548, 4, 1, "", "multi_head_attention"], [1553, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[1559, 4, 1, "", "cholesky"], [1564, 4, 1, "", "cross"], [1569, 4, 1, "", "det"], [1574, 4, 1, "", "diag"], [1579, 4, 1, "", "diagonal"], [1581, 4, 1, "", "eig"], [1585, 4, 1, "", "eigh"], [1590, 4, 1, "", "eigvalsh"], [1595, 4, 1, "", "inner"], [1600, 4, 1, "", "inv"], [1605, 4, 1, "", "matmul"], [1610, 4, 1, "", "matrix_norm"], [1615, 4, 1, "", "matrix_power"], [1620, 4, 1, "", "matrix_rank"], [1625, 4, 1, "", "matrix_transpose"], [1630, 4, 1, "", "outer"], [1635, 4, 1, "", "pinv"], [1640, 4, 1, "", "qr"], [1645, 4, 1, "", "slogdet"], [1650, 4, 1, "", "solve"], [1656, 4, 1, "", "svd"], [1661, 4, 1, "", "svdvals"], [1665, 4, 1, "", "tensordot"], [1669, 4, 1, "", "tensorsolve"], [1674, 4, 1, "", "trace"], [1679, 4, 1, "", "vander"], [1684, 4, 1, "", "vecdot"], [1689, 4, 1, "", "vector_norm"], [1694, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[1699, 4, 1, "", "binary_cross_entropy"], [1704, 4, 1, "", "cross_entropy"], [1709, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[1715, 4, 1, "", "clip"], [1720, 4, 1, "", "concat"], [1725, 4, 1, "", "constant_pad"], [1730, 4, 1, "", "expand_dims"], [1735, 4, 1, "", "flip"], [1740, 4, 1, "", "permute_dims"], [1745, 4, 1, "", "repeat"], [1750, 4, 1, "", "reshape"], [1755, 4, 1, "", "roll"], [1760, 4, 1, "", "split"], [1765, 4, 1, "", "squeeze"], [1770, 4, 1, "", "stack"], [1776, 4, 1, "", "swapaxes"], [1781, 4, 1, "", "tile"], [1786, 4, 1, "", "unstack"], [1791, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1793, 4, 1, "", "fomaml_step"], [1794, 4, 1, "", "maml_step"], [1795, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1797, 4, 1, "", "all_nested_indices"], [1798, 4, 1, "", "copy_nest"], [1799, 4, 1, "", "duplicate_array_index_chains"], [1800, 4, 1, "", "index_nest"], [1801, 4, 1, "", "insert_into_nest_at_index"], [1802, 4, 1, "", "insert_into_nest_at_indices"], [1803, 4, 1, "", "map"], [1804, 4, 1, "", "map_nest_at_index"], [1805, 4, 1, "", "map_nest_at_indices"], [1806, 4, 1, "", "multi_index_nest"], [1807, 4, 1, "", "nested_any"], [1808, 4, 1, "", "nested_argwhere"], [1809, 4, 1, "", "nested_map"], [1810, 4, 1, "", "nested_multi_map"], [1811, 4, 1, "", "prune_empty"], [1812, 4, 1, "", "prune_nest_at_index"], [1813, 4, 1, "", "prune_nest_at_indices"], [1814, 4, 1, "", "set_nest_at_index"], [1815, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1820, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1825, 4, 1, "", "multinomial"], [1830, 4, 1, "", "randint"], [1835, 4, 1, "", "random_normal"], [1840, 4, 1, "", "random_uniform"], [1842, 4, 1, "", "seed"], [1846, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1852, 4, 1, "", "argmax"], [1857, 4, 1, "", "argmin"], [1862, 4, 1, "", "argwhere"], [1867, 4, 1, "", "nonzero"], [1873, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1879, 4, 1, "", "unique_all"], [1884, 4, 1, "", "unique_counts"], [1889, 4, 1, "", "unique_inverse"], [1894, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1899, 4, 1, "", "argsort"], [1904, 4, 1, "", "searchsorted"], [1909, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1915, 4, 1, "", "cumprod"], [1920, 4, 1, "", "cumsum"], [1925, 4, 1, "", "einsum"], [1929, 4, 1, "", "max"], [1933, 4, 1, "", "mean"], [1937, 4, 1, "", "min"], [1941, 4, 1, "", "prod"], [1946, 4, 1, "", "std"], [1951, 4, 1, "", "sum"], [1956, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1961, 4, 1, "", "all"], [1966, 4, 1, "", "any"]], "ivy.inspection": [[1973, 4, 1, "", "add_array_specs"], [1974, 4, 1, "", "fn_array_spec"]], "ivy.nested_array": [[1975, 0, 0, "-", "nested_array"]], "ivy.nested_array.nested_array": [[1976, 1, 1, "", "NestedArray"]], "ivy.nested_array.nested_array.NestedArray": [[1976, 2, 1, "", "__init__"], [1976, 3, 1, "", "data"], [1976, 3, 1, "", "device"], [1976, 3, 1, "", "dtype"], [1976, 2, 1, "", "from_row_lengths"], [1976, 2, 1, "", "from_row_split"], [1976, 3, 1, "", "ndim"], [1976, 2, 1, "", "nested_array"], [1976, 2, 1, "", "reshape"], [1976, 3, 1, "", "shape"], [1976, 2, 1, "", "unbind"]], "ivy.stateful": [[1990, 0, 0, "-", "activations"], [1993, 0, 0, "-", "converters"], [1995, 0, 0, "-", "helpers"], [1997, 0, 0, "-", "initializers"], [2007, 0, 0, "-", "layers"], [2019, 0, 0, "-", "module"], [2023, 0, 0, "-", "norms"], [2025, 0, 0, "-", "optimizers"], [2031, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1991, 1, 1, "", "GEGLU"], [1992, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1991, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1992, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[1994, 4, 1, "", "to_ivy_module"]], "ivy.stateful.helpers": [[1996, 1, 1, "", "ModuleHelpers"]], "ivy.stateful.helpers.ModuleHelpers": [[1996, 2, 1, "", "check_submod_rets"], [1996, 2, 1, "", "get_mod_key"], [1996, 2, 1, "", "mod_depth"], [1996, 2, 1, "", "mod_height"], [1996, 2, 1, "", "mod_with_top_mod_key_chain"], [1996, 2, 1, "", "show_mod_in_top_mod"], [1996, 2, 1, "", "show_structure"], [1996, 2, 1, "", "show_v_in_top_v"], [1996, 2, 1, "", "sub_mods"], [1996, 2, 1, "", "track_submod_call_order"], [1996, 2, 1, "", "track_submod_rets"], [1996, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.initializers": [[1998, 1, 1, "", "Constant"], [1999, 1, 1, "", "FirstLayerSiren"], [2000, 1, 1, "", "GlorotUniform"], [2001, 1, 1, "", "Initializer"], [2002, 1, 1, "", "KaimingNormal"], [2003, 1, 1, "", "Ones"], [2004, 1, 1, "", "Siren"], [2005, 1, 1, "", "Uniform"], [2006, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1998, 2, 1, "", "__init__"], [1998, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1999, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[2000, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Initializer": [[2001, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.KaimingNormal": [[2002, 2, 1, "", "__init__"], [2002, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[2003, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[2004, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[2005, 2, 1, "", "__init__"], [2005, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[2006, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[2008, 1, 1, "", "Conv1D"], [2009, 1, 1, "", "Conv1DTranspose"], [2010, 1, 1, "", "Conv2D"], [2011, 1, 1, "", "Conv2DTranspose"], [2012, 1, 1, "", "Conv3D"], [2013, 1, 1, "", "Conv3DTranspose"], [2014, 1, 1, "", "DepthwiseConv2D"], [2015, 1, 1, "", "Dropout"], [2016, 1, 1, "", "LSTM"], [2017, 1, 1, "", "Linear"], [2018, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[2008, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[2009, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[2010, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[2011, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[2012, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[2013, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[2014, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[2015, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[2016, 2, 1, "", "__init__"], [2016, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[2017, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[2018, 2, 1, "", "__init__"]], "ivy.stateful.module": [[2020, 1, 1, "", "Module"], [2021, 1, 1, "", "MyTFModule"], [2022, 1, 1, "", "MyTorchModule"]], "ivy.stateful.module.Module": [[2020, 2, 1, "", "__call__"], [2020, 2, 1, "", "__init__"], [2020, 2, 1, "", "build"], [2020, 3, 1, "", "build_mode"], [2020, 3, 1, "", "built_"], [2020, 2, 1, "", "from_haiku_module"], [2020, 2, 1, "", "from_keras_module"], [2020, 2, 1, "", "from_torch_module"], [2020, 2, 1, "", "save_weights"], [2020, 2, 1, "", "to_haiku_module"], [2020, 2, 1, "", "to_keras_module"], [2020, 2, 1, "", "to_torch_module"]], "ivy.stateful.module.MyTFModule": [[2021, 2, 1, "", "__init__"], [2021, 2, 1, "", "call"]], "ivy.stateful.module.MyTorchModule": [[2022, 2, 1, "", "__init__"], [2022, 2, 1, "", "forward"], [2022, 6, 1, "", "training"]], "ivy.stateful.norms": [[2024, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[2024, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[2026, 1, 1, "", "Adam"], [2027, 1, 1, "", "LAMB"], [2028, 1, 1, "", "LARS"], [2029, 1, 1, "", "Optimizer"], [2030, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[2026, 2, 1, "", "__init__"], [2026, 2, 1, "", "set_state"], [2026, 3, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[2027, 2, 1, "", "__init__"], [2027, 2, 1, "", "set_state"], [2027, 3, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[2028, 2, 1, "", "__init__"], [2028, 2, 1, "", "set_state"], [2028, 3, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[2029, 2, 1, "", "__init__"], [2029, 2, 1, "", "set_state"], [2029, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[2030, 2, 1, "", "__init__"], [2030, 2, 1, "", "set_state"], [2030, 3, 1, "", "state"]], "ivy.stateful.sequential": [[2032, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[2032, 2, 1, "", "__init__"]], "ivy.verbosity": [[2125, 4, 1, "", "cprint"]], "ivy_tests.test_ivy.helpers": [[2034, 0, 0, "-", "assertions"], [2042, 0, 0, "-", "available_frameworks"], [2043, 0, 0, "-", "function_testing"], [2064, 0, 0, "-", "globals"], [2071, 0, 0, "-", "hypothesis_helpers"], [2104, 0, 0, "-", "structs"], [2106, 0, 0, "-", "test_parameter_flags"], [2116, 0, 0, "-", "testing_helpers"]], "ivy_tests.test_ivy.helpers.assertions": [[2035, 4, 1, "", "assert_all_close"], [2036, 4, 1, "", "assert_same_type_and_shape"], [2037, 4, 1, "", "check_unsupported_device"], [2038, 4, 1, "", "check_unsupported_device_and_dtype"], [2039, 4, 1, "", "check_unsupported_dtype"], [2040, 4, 1, "", "test_unsupported_function"], [2041, 4, 1, "", "value_test"]], "ivy_tests.test_ivy.helpers.function_testing": [[2044, 4, 1, "", "args_to_container"], [2045, 4, 1, "", "as_cont"], [2046, 4, 1, "", "as_lists"], [2047, 4, 1, "", "convtrue"], [2048, 4, 1, "", "create_args_kwargs"], [2049, 4, 1, "", "empty_func"], [2050, 4, 1, "", "flatten"], [2051, 4, 1, "", "flatten_and_to_np"], [2052, 4, 1, "", "flatten_fw_and_to_np"], [2053, 4, 1, "", "get_frontend_ret"], [2054, 4, 1, "", "get_ret_and_flattened_np_array"], [2055, 4, 1, "", "gradient_incompatible_function"], [2056, 4, 1, "", "gradient_test"], [2057, 4, 1, "", "gradient_unsupported_dtypes"], [2058, 4, 1, "", "kwargs_to_args_n_kwargs"], [2059, 4, 1, "", "test_frontend_function"], [2060, 4, 1, "", "test_frontend_method"], [2061, 4, 1, "", "test_function"], [2062, 4, 1, "", "test_method"], [2063, 4, 1, "", "var_fn"]], "ivy_tests.test_ivy.helpers.globals": [[2065, 1, 1, "", "InterruptedTest"], [2066, 1, 1, "", "TestData"], [2067, 4, 1, "", "setup_api_test"], [2068, 4, 1, "", "setup_frontend_test"], [2069, 4, 1, "", "teardown_api_test"], [2070, 4, 1, "", "teardown_frontend_test"]], "ivy_tests.test_ivy.helpers.globals.InterruptedTest": [[2065, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.globals.TestData": [[2066, 2, 1, "", "__init__"], [2066, 6, 1, "", "fn_name"], [2066, 6, 1, "", "fn_tree"], [2066, 6, 1, "", "supported_device_dtypes"], [2066, 6, 1, "", "test_fn"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers": [[2072, 0, 0, "-", "array_helpers"], [2086, 0, 0, "-", "dtype_helpers"], [2090, 0, 0, "-", "general_helpers"], [2100, 0, 0, "-", "number_helpers"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers": [[2073, 4, 1, "", "array_and_broadcastable_shape"], [2074, 4, 1, "", "array_bools"], [2075, 4, 1, "", "array_indices_axis"], [2076, 4, 1, "", "array_values"], [2077, 4, 1, "", "arrays_and_axes"], [2078, 4, 1, "", "arrays_for_pooling"], [2079, 4, 1, "", "broadcast_shapes"], [2080, 4, 1, "", "dtype_and_values"], [2081, 4, 1, "", "dtype_values_axis"], [2082, 4, 1, "", "list_of_length"], [2083, 4, 1, "", "lists"], [2084, 4, 1, "", "mutually_broadcastable_shapes"], [2085, 4, 1, "", "prod"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers": [[2087, 4, 1, "", "array_dtypes"], [2088, 4, 1, "", "get_castable_dtype"], [2089, 4, 1, "", "get_dtypes"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers": [[2091, 4, 1, "", "apply_safety_factor"], [2092, 4, 1, "", "get_axis"], [2093, 4, 1, "", "get_bounds"], [2094, 4, 1, "", "get_mean_std"], [2095, 4, 1, "", "get_shape"], [2096, 4, 1, "", "matrix_is_stable"], [2097, 4, 1, "", "reshape_shapes"], [2098, 4, 1, "", "subsets"], [2099, 4, 1, "", "x_and_filters"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers": [[2101, 4, 1, "", "floats"], [2102, 4, 1, "", "ints"], [2103, 4, 1, "", "number"]], "ivy_tests.test_ivy.helpers.structs": [[2105, 1, 1, "", "FrontendMethodData"]], "ivy_tests.test_ivy.helpers.structs.FrontendMethodData": [[2105, 2, 1, "", "__init__"], [2105, 6, 1, "", "framework_init_module"], [2105, 6, 1, "", "init_name"], [2105, 6, 1, "", "ivy_init_module"], [2105, 6, 1, "", "method_name"]], "ivy_tests.test_ivy.helpers.test_parameter_flags": [[2107, 1, 1, "", "AsVariableFlags"], [2108, 1, 1, "", "ContainerFlags"], [2109, 1, 1, "", "FunctionTestFlags"], [2110, 1, 1, "", "NativeArrayFlags"], [2111, 1, 1, "", "NumPositionalArg"], [2112, 1, 1, "", "NumPositionalArgFn"], [2113, 1, 1, "", "NumPositionalArgMethod"], [2114, 4, 1, "", "build_flag"], [2115, 4, 1, "", "function_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags": [[2109, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.testing_helpers": [[2117, 4, 1, "", "handle_frontend_method"], [2118, 4, 1, "", "handle_frontend_test"], [2119, 4, 1, "", "handle_method"], [2120, 4, 1, "", "handle_test"], [2121, 4, 1, "", "num_positional_args"], [2122, 4, 1, "", "num_positional_args_method"], [2123, 4, 1, "", "seed"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"assert": [1, 152, 2034], "check_al": 2, "check_all_or_any_fn": 3, "check_ani": 4, "check_elem_in_list": 5, "check_equ": 6, "check_exist": 7, "check_fals": 8, "check_fill_value_and_dtype_are_compat": 9, "check_gather_input_valid": 10, "check_gather_nd_input_valid": 11, "check_great": 12, "check_inplace_sizes_valid": 13, "check_isinst": 14, "check_less": 15, "check_one_way_broadcast": 16, "check_shap": 17, "check_tru": 18, "backend": [19, 145, 148, 161, 164, 181], "handler": [19, 164], "contextmanag": 20, "choose_random_backend": 21, "clear_backend_stack": 22, "current_backend": 23, "fn_name_from_version_specific_fn_nam": 24, "get_backend": 25, "set_backend": 26, "set_backend_to_specific_vers": 27, "set_jax_backend": 28, "set_numpy_backend": 29, "set_tensorflow_backend": 30, "set_torch_backend": 31, "unset_backend": 32, "background": [33, 1969], "ml": [34, 1983, 1987], "explos": 34, "standard": [35, 162, 1978, 1987], "skeptic": 35, "complimentari": 35, "v": [35, 181], "competit": 35, "do": [35, 160], "work": [35, 39, 1977], "The": [35, 43, 158, 166, 181], "arrai": [35, 45, 48, 143, 144, 147, 154, 166, 199, 205, 210, 215, 220, 225, 230, 243, 250, 254, 262, 268, 273, 278, 283, 288, 293, 301, 307, 312, 320, 331, 336, 341, 346, 364, 375, 382, 387, 392, 397, 404, 426, 446, 455, 460, 465, 470, 475, 480, 485, 490, 495, 500, 505, 510, 515, 520, 525, 530, 535, 540, 545, 550, 555, 560, 565, 570, 575, 580, 585, 590, 595, 600, 605, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655, 660, 665, 670, 675, 680, 685, 690, 695, 700, 705, 710, 715, 720, 725, 730, 735, 740, 745, 751, 756, 761, 766, 771, 780, 785, 790, 795, 800, 805, 810, 815, 820, 835, 840, 855, 861, 866, 871, 877, 882, 887, 918, 924, 929, 934, 939, 944, 949, 954, 959, 962, 969, 983, 988, 993, 998, 1006, 1011, 1016, 1021, 1034, 1049, 1060, 1065, 1095, 1100, 1105, 1110, 1115, 1121, 1126, 1131, 1136, 1141, 1146, 1156, 1162, 1167, 1176, 1183, 1188, 1194, 1208, 1213, 1217, 1229, 1239, 1244, 1249, 1254, 1260, 1267, 1270, 1276, 1281, 1288, 1291, 1296, 1301, 1306, 1309, 1316, 1321, 1333, 1342, 1348, 1353, 1358, 1364, 1369, 1374, 1377, 1387, 1392, 1408, 1413, 1419, 1425, 1430, 1435, 1447, 1454, 1458, 1464, 1469, 1473, 1477, 1483, 1492, 1497, 1502, 1511, 1516, 1524, 1529, 1536, 1541, 1546, 1551, 1557, 1562, 1567, 1572, 1577, 1583, 1588, 1593, 1598, 1603, 1608, 1613, 1618, 1623, 1628, 1633, 1638, 1643, 1648, 1654, 1659, 1667, 1672, 1677, 1682, 1687, 1692, 1697, 1702, 1707, 1713, 1718, 1723, 1728, 1733, 1738, 1743, 1748, 1753, 1758, 1763, 1768, 1774, 1779, 1784, 1789, 1818, 1823, 1828, 1833, 1838, 1844, 1850, 1855, 1860, 1865, 1871, 1877, 1882, 1887, 1892, 1897, 1902, 1907, 1913, 1918, 1923, 1927, 1931, 1935, 1939, 1944, 1949, 1954, 1959, 1964, 1975, 1978, 2072], "api": [35, 41, 43, 143, 146, 147, 161, 164, 166, 168, 169, 1978, 1985, 1987], "why": [36, 160], "unifi": [36, 166, 1983, 1987], "No": [36, 42], "more": [36, 42, 162], "re": [36, 160], "implement": 36, "infinit": 36, "shelf": 36, "life": 36, "contribut": [37, 1969], "appli": [38, 180], "librari": [38, 180], "introduct": [38, 158, 159], "exampl": [38, 150, 154, 159, 162], "ivi": [38, 41, 42, 43, 144, 147, 150, 152, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 199, 200, 201, 202, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 240, 241, 243, 244, 245, 250, 251, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 354, 355, 359, 360, 361, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 404, 405, 406, 407, 426, 427, 428, 429, 445, 446, 447, 448, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 745, 746, 747, 748, 750, 751, 752, 753, 755, 756, 757, 758, 760, 761, 762, 763, 765, 766, 767, 768, 770, 771, 772, 773, 780, 781, 782, 783, 785, 786, 787, 788, 790, 791, 792, 793, 795, 796, 797, 798, 800, 801, 802, 803, 805, 806, 807, 808, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 825, 826, 827, 829, 830, 831, 835, 836, 837, 838, 840, 841, 842, 843, 855, 856, 857, 858, 861, 862, 863, 864, 866, 867, 868, 869, 871, 872, 873, 874, 877, 878, 879, 880, 882, 883, 884, 885, 887, 888, 889, 890, 918, 919, 920, 921, 924, 925, 926, 927, 929, 930, 931, 932, 934, 935, 936, 937, 939, 940, 941, 942, 944, 945, 946, 947, 949, 950, 951, 952, 954, 955, 956, 957, 959, 960, 962, 963, 964, 965, 969, 970, 971, 972, 975, 976, 977, 979, 980, 981, 983, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1001, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1049, 1050, 1051, 1052, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1156, 1157, 1158, 1159, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1176, 1177, 1178, 1179, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1217, 1218, 1220, 1221, 1222, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1260, 1261, 1262, 1263, 1267, 1268, 1270, 1271, 1272, 1273, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1288, 1289, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1306, 1307, 1309, 1310, 1311, 1312, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1333, 1334, 1335, 1336, 1342, 1343, 1344, 1345, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1358, 1359, 1360, 1361, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1372, 1374, 1375, 1377, 1378, 1379, 1380, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1408, 1409, 1410, 1411, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1421, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1446, 1447, 1448, 1449, 1454, 1455, 1456, 1458, 1459, 1460, 1464, 1465, 1466, 1469, 1470, 1471, 1473, 1474, 1475, 1477, 1478, 1479, 1482, 1483, 1484, 1485, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1524, 1525, 1526, 1527, 1529, 1530, 1531, 1532, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1557, 1558, 1559, 1560, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1586, 1588, 1589, 1590, 1591, 1593, 1594, 1595, 1596, 1598, 1599, 1600, 1601, 1603, 1604, 1605, 1606, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1707, 1708, 1709, 1710, 1713, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1778, 1779, 1780, 1781, 1783, 1784, 1785, 1786, 1788, 1789, 1790, 1791, 1818, 1819, 1820, 1823, 1824, 1825, 1826, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1844, 1845, 1846, 1847, 1850, 1851, 1852, 1853, 1855, 1856, 1857, 1858, 1860, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1886, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1927, 1928, 1929, 1931, 1932, 1933, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1959, 1960, 1961, 1962, 1964, 1965, 1966, 1967, 1987], "robot": [38, 177, 180], "build": [39, 164], "doc": 39, "docker": [39, 42, 43], "dockerless": 39, "us": [39, 42, 143, 167], "miniconda": [39, 42], "venv": [39, 42], "document": 39, "pipelin": [39, 147, 160, 181], "make_doc": 39, "sh": 39, "entrypoint": 39, "_make_doc": 39, "generate_src_rst_fil": 39, "py": 39, "sphinx": 39, "correct_built_html_fil": 39, "remove_fil": 39, "help": [40, 43], "resourc": 40, "open": 41, "task": 41, "function": [41, 146, 148, 149, 152, 154, 155, 156, 158, 159, 160, 161, 164, 169, 181, 2043], "format": [41, 153, 1980, 1987], "checklist": 41, "frontend": [41, 145, 147, 158, 159, 169], "where": [41, 1869, 1871, 1872, 1873], "place": 41, "experiment": [41, 43, 63, 111, 774], "set": [42, 84, 132, 145, 1181, 1874], "up": 42, "clone": 42, "pycharm": [42, 43], "virtual": 42, "environ": 42, "interpret": 42, "window": 42, "maco": 42, "ubuntu": 42, "test": [42, 43, 143, 147, 159, 160, 2043, 2106, 2116], "detail": 42, "hypothesi": [42, 159, 160, 2071], "log": [42, 624, 625, 626, 627], "free": 42, "github": 42, "codespac": 42, "pre": [42, 153], "commit": [42, 43, 147, 153], "basic": [43, 158], "get": [43, 203], "todo": 43, "list": [43, 2083], "issu": 43, "manag": 43, "your": [43, 160], "fork": 43, "who": 43, "To": 43, "ask": 43, "With": 43, "command": 43, "line": 43, "browser": 43, "pull": [43, 147], "request": [43, 147], "small": 43, "often": 43, "interact": 43, "contain": [43, 94, 99, 146, 167, 200, 202, 206, 208, 211, 213, 216, 218, 221, 223, 226, 228, 231, 233, 241, 245, 255, 257, 260, 263, 265, 269, 271, 274, 276, 279, 281, 284, 286, 289, 291, 294, 296, 299, 302, 304, 306, 308, 311, 313, 316, 319, 321, 332, 334, 337, 339, 342, 344, 347, 349, 355, 359, 361, 365, 367, 370, 373, 376, 378, 383, 385, 388, 390, 393, 395, 398, 400, 405, 407, 427, 429, 445, 447, 456, 458, 461, 463, 466, 468, 471, 473, 476, 478, 481, 483, 486, 488, 491, 493, 496, 498, 501, 503, 506, 508, 511, 513, 516, 518, 521, 523, 526, 528, 531, 533, 536, 538, 541, 543, 546, 548, 551, 553, 556, 558, 561, 563, 566, 568, 571, 573, 576, 578, 581, 583, 586, 588, 591, 593, 596, 598, 601, 603, 606, 608, 611, 613, 616, 618, 621, 623, 626, 628, 631, 633, 636, 638, 641, 643, 646, 648, 651, 653, 656, 658, 661, 663, 666, 668, 671, 673, 676, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 825, 827, 829, 831, 836, 838, 841, 843, 856, 858, 862, 864, 867, 869, 872, 874, 878, 880, 883, 885, 888, 890, 919, 921, 925, 927, 930, 932, 935, 937, 940, 942, 945, 947, 950, 952, 955, 957, 963, 965, 970, 972, 975, 977, 979, 981, 984, 986, 989, 991, 994, 996, 999, 1001, 1007, 1009, 1012, 1014, 1017, 1019, 1022, 1024, 1026, 1028, 1030, 1032, 1035, 1037, 1050, 1052, 1061, 1063, 1066, 1068, 1096, 1098, 1101, 1103, 1106, 1108, 1111, 1113, 1116, 1118, 1122, 1124, 1127, 1129, 1132, 1134, 1137, 1139, 1142, 1144, 1147, 1149, 1157, 1159, 1163, 1165, 1168, 1170, 1177, 1179, 1184, 1186, 1189, 1191, 1207, 1209, 1212, 1214, 1220, 1221, 1224, 1225, 1228, 1230, 1234, 1235, 1238, 1240, 1243, 1245, 1248, 1250, 1253, 1255, 1261, 1263, 1271, 1273, 1277, 1279, 1282, 1284, 1292, 1294, 1297, 1299, 1302, 1304, 1310, 1312, 1317, 1319, 1322, 1324, 1334, 1336, 1343, 1345, 1349, 1351, 1354, 1356, 1359, 1361, 1365, 1367, 1370, 1372, 1378, 1380, 1388, 1390, 1393, 1395, 1409, 1411, 1414, 1416, 1418, 1420, 1424, 1429, 1431, 1434, 1436, 1446, 1448, 1455, 1459, 1465, 1470, 1474, 1478, 1482, 1484, 1493, 1495, 1498, 1500, 1503, 1505, 1507, 1509, 1512, 1514, 1517, 1519, 1525, 1527, 1530, 1532, 1537, 1539, 1542, 1544, 1547, 1549, 1552, 1554, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1584, 1586, 1589, 1591, 1594, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1616, 1619, 1621, 1624, 1626, 1629, 1631, 1634, 1636, 1639, 1641, 1644, 1646, 1649, 1651, 1653, 1655, 1658, 1660, 1663, 1664, 1668, 1671, 1673, 1676, 1678, 1681, 1683, 1686, 1688, 1691, 1693, 1698, 1700, 1703, 1705, 1708, 1710, 1714, 1716, 1719, 1721, 1724, 1726, 1729, 1731, 1734, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1773, 1775, 1778, 1780, 1783, 1785, 1788, 1790, 1819, 1824, 1826, 1829, 1831, 1834, 1836, 1839, 1841, 1845, 1847, 1851, 1853, 1856, 1858, 1861, 1863, 1866, 1868, 1870, 1872, 1876, 1878, 1881, 1883, 1886, 1888, 1891, 1893, 1898, 1900, 1903, 1905, 1908, 1910, 1914, 1916, 1919, 1921, 1924, 1928, 1932, 1936, 1940, 1942, 1945, 1948, 1950, 1953, 1955, 1960, 1962, 1965, 1967], "run": [43, 143, 160], "local": 43, "most": 43, "out": [43, 154, 157], "id": [43, 143], "data": [44, 57, 105, 148, 158, 160, 167, 181, 323, 852, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894], "class": [44, 152, 158, 166, 1989], "activ": [46, 95, 196, 777, 1990], "arraywithactiv": 47, "convers": [50, 101], "args_to_ivi": 51, "args_to_n": 52, "to_ivi": 53, "to_n": 54, "creation": [55, 103, 237, 844], "arraywithcr": 56, "type": [57, 105, 148, 155, 158, 181, 323, 852], "arraywithdatatyp": 58, "devic": [59, 107, 149, 154, 158, 418, 859], "arraywithdevic": 60, "elementwis": [61, 109, 453, 891], "arraywithelementwis": 62, "gener": [64, 112, 160, 162, 966, 1258, 2090], "arraywithgener": 65, "gradient": [66, 114, 903, 968, 969, 970, 971, 973, 1451], "arraywithgradi": 67, "imag": [68, 116], "arraywithimag": 69, "layer": [70, 118, 1038, 1489, 2007], "arraywithlay": 71, "linear": [72, 120, 1053, 1535, 1536, 1537, 1538, 1555, 2017], "algebra": [72, 120, 1053, 1555], "arraywithlinearalgebra": 73, "loss": [74, 122, 1069, 1695], "arraywithloss": 75, "manipul": [76, 124, 1071, 1711], "arraywithmanipul": 77, "norm": [78, 126, 1160, 1816, 2023], "arraywithnorm": 79, "random": [80, 128, 1171, 1821], "arraywithrandom": 81, "search": [82, 130, 1180, 1848], "arraywithsearch": 83, "arraywithset": 85, "sort": [86, 134, 1192, 1895, 1906, 1907, 1908, 1909], "arraywithsort": 87, "statist": [88, 136, 1201, 1911], "arraywithstatist": 89, "util": [90, 138, 1232, 1957], "arraywithutil": 91, "wrap": [92, 140, 156], "add_ivy_array_instance_method": 93, "containerwithactiv": 96, "base": 97, "containerbas": 98, "containerwithconvers": 102, "containerwithcr": 104, "containerwithdatatyp": 106, "containerwithdevic": 108, "containerwithelementwis": 110, "containerwithgener": 113, "containerwithgradi": 115, "containerwithimag": 117, "containerwithlay": 119, "containerwithlinearalgebra": 121, "containerwithloss": 123, "containerwithmanipul": 125, "containerwithnorm": 127, "containerwithrandom": 129, "containerwithsearch": 131, "containerwithset": 133, "containerwithsort": 135, "containerwithstatist": 137, "containerwithutil": 139, "add_ivy_container_instance_method": 141, "deep": 142, "dive": 142, "termin": 143, "regener": 143, "failur": 143, "skip": 143, "nativ": 144, "handl": [144, 152, 181], "version": [145, 161, 181], "support": [145, 148, 158, 181], "instanc": [146, 158, 159, 166], "method": [146, 158, 159, 166, 167], "static": 146, "special": [146, 158], "nestabl": [146, 154, 155], "continu": 147, "integr": [147, 160], "push": 147, "pr": 147, "trigger": 147, "core": 147, "nn": 147, "state": [147, 168, 181], "ci": 147, "schedul": 147, "cron": 147, "job": 147, "dashboard": 147, "modul": [148, 149, 168, 2019, 2020], "promot": [148, 158], "argument": [148, 149, 154, 157, 158], "other": [148, 149], "unsupport": 148, "bug": 148, "superset": [148, 162], "docstr": [150, 151], "tan": [150, 159, 754, 756, 757, 758], "roll": [150, 1752, 1753, 1754, 1755], "add": [150, 159, 469, 470, 471, 472, 1987], "except": 152, "configur": [152, 167], "mode": 152, "stack": [152, 1767, 1768, 1769, 1770], "trace": [152, 1670, 1672, 1673, 1674], "func_wrapp": 152, "prune": 152, "handle_except": 152, "decor": [152, 160], "lint": 153, "check": [153, 181], "hook": 153, "posit": [154, 694, 695, 696, 697], "keyword": 154, "input": 154, "dtype": [154, 358, 359, 360, 2086], "number": [154, 2100, 2103], "oper": [154, 166, 181], "integ": 154, "sequenc": 154, "primari": 155, "composit": [155, 158], "mix": 155, "standalon": 155, "conveni": 155, "inplac": 157, "updat": 157, "copi": 157, "unus": 158, "miss": 158, "complex": 158, "temporari": 158, "rule": 158, "numpi": [158, 1981], "cast": 158, "duplic": [158, 162], "polici": 158, "full": [159, 266], "alia": 159, "helper": [159, 160, 161, 1995, 2071, 2072, 2086, 2090, 2100, 2116], "write": 160, "own": 160, "strategi": 160, "we": 160, "need": 160, "how": 160, "effect": 160, "bonu": 160, "extend": [160, 162], "featur": 160, "self": 160, "consist": 160, "explicit": 160, "test_array_funct": 160, "fail": 160, "navig": 161, "code": 161, "categor": 161, "submodul": 161, "design": [161, 163, 1969], "pin": 161, "behaviour": 162, "what": [162, 1987], "i": 162, "A": 162, "non": 162, "when": 162, "too": 162, "much": 162, "balanc": 162, "effici": 162, "block": 164, "graph": [164, 169, 1982, 1987], "compil": [164, 169, 234, 235, 832, 1979, 1984, 1986, 1987], "framework": [165, 1981, 1984, 1987, 1988, 1989, 2042], "monkei": 166, "patch": 166, "construct": 167, "represent": 167, "recurs": 167, "built": 167, "ins": 167, "access": 167, "save": 167, "load": 167, "comparison": 167, "custom": [167, 181], "case": 167, "compartment": 167, "network": [167, 169], "weight": 167, "initi": [168, 1997, 2001], "optim": [168, 2025, 2029], "transpil": 169, "role": 169, "convert": [169, 1993], "model": [169, 176, 181], "builder": 171, "ecosystem": 172, "gym": [173, 180], "mech": 174, "memori": [175, 180], "vision": [178, 180], "extens": [179, 1969], "mechan": 180, "faq": 181, "maintain": 181, "dynam": 181, "size": 181, "shape": [181, 1405, 1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894], "gpu": 181, "deploy": 181, "control": 181, "flow": 181, "auto": 181, "differenti": 181, "replica": 181, "parallel": 181, "altern": 181, "structur": 181, "func": 182, "wrapper": [182, 1987, 1988], "custom_handle_nest": 183, "handle_array_lik": 184, "handle_nan": 185, "handle_nest": 186, "handle_out_argu": 187, "infer_devic": 188, "infer_dtyp": 189, "inputs_to_ivy_arrai": 190, "inputs_to_native_arrai": 191, "integer_arrays_to_float": 192, "outputs_to_ivy_arrai": 193, "to_native_arrays_and_back": 194, "deseri": 197, "gelu": [198, 199, 200, 201, 1992], "static_gelu": 202, "leaky_relu": [204, 205, 206, 207], "static_leaky_relu": 208, "log_softmax": [209, 210, 211, 212], "static_log_softmax": 213, "relu": [214, 215, 216, 217], "static_relu": 218, "sigmoid": [219, 220, 221, 222], "static_sigmoid": 223, "softmax": [224, 225, 226, 227], "static_softmax": 228, "softplu": [229, 230, 231, 232], "static_softplu": 233, "constant": [236, 833, 1998], "note": [237, 261, 264], "nestedsequ": 238, "arang": [239, 240], "static_arang": 241, "asarrai": [242, 243, 244], "static_asarrai": 245, "asarray_handle_nest": 246, "asarray_infer_devic": 247, "asarray_to_native_arrays_and_back": 248, "copy_arrai": [249, 250, 251], "empti": 252, "empty_lik": [253, 254, 255, 256], "static_empty_lik": 257, "ey": [258, 259], "static_ey": 260, "from_dlpack": [261, 262, 263, 264], "static_from_dlpack": 265, "full_lik": [267, 268, 269, 270], "static_full_lik": 271, "linspac": [272, 273, 274, 275], "static_linspac": 276, "logspac": [277, 278, 279, 280], "static_logspac": 281, "meshgrid": [282, 283, 284, 285], "static_meshgrid": 286, "native_arrai": [287, 288, 289, 290], "static_native_arrai": 291, "one_hot": [292, 293, 294, 295], "static_one_hot": 296, "ones": [297, 298], "static_on": 299, "ones_lik": [300, 301, 302, 303], "static_ones_lik": 304, "tril": [305, 307, 308, 309], "static_tril": 306, "triu": [310, 312, 313, 314], "static_triu": 311, "zero": [315, 317, 2006], "static_zero": 316, "zeros_lik": [318, 320, 321, 322], "static_zeros_lik": 319, "defaultdtyp": 324, "defaultfloatdtyp": 325, "defaultintdtyp": 326, "defaultuintdtyp": 327, "as_ivy_dtyp": 328, "as_native_dtyp": 329, "astyp": [330, 331, 332, 333], "static_astyp": 334, "broadcast_arrai": [335, 336, 337, 338], "static_broadcast_arrai": 339, "broadcast_to": [340, 341, 342, 343], "static_broadcast_to": 344, "can_cast": [345, 346, 347, 348], "static_can_cast": 349, "check_float": 350, "closest_valid_dtyp": 351, "default_dtyp": 352, "default_float_dtyp": [353, 354], "static_default_float_dtyp": 355, "default_int_dtyp": 356, "default_uint_dtyp": 357, "static_dtyp": 361, "dtype_bit": 362, "finfo": [363, 364, 365, 366], "static_finfo": 367, "function_supported_dtyp": [368, 369], "static_function_supported_dtyp": 370, "function_unsupported_dtyp": [371, 372], "static_function_unsupported_dtyp": 373, "iinfo": [374, 375, 376, 377], "static_iinfo": 378, "infer_default_dtyp": 379, "invalid_dtyp": 380, "is_bool_dtyp": [381, 382, 383, 384], "static_is_bool_dtyp": 385, "is_float_dtyp": [386, 387, 388, 389], "static_is_float_dtyp": 390, "is_int_dtyp": [391, 392, 393, 394], "static_is_int_dtyp": 395, "is_uint_dtyp": [396, 397, 398, 399], "static_is_uint_dtyp": 400, "promote_typ": 401, "promote_types_of_input": 402, "result_typ": [403, 404, 405, 406], "static_result_typ": 407, "set_default_dtyp": 408, "set_default_float_dtyp": 409, "set_default_int_dtyp": 410, "set_default_uint_dtyp": 411, "type_promote_arrai": 412, "unset_default_dtyp": 413, "unset_default_float_dtyp": 414, "unset_default_int_dtyp": 415, "unset_default_uint_dtyp": 416, "valid_dtyp": 417, "defaultdevic": 419, "profil": 420, "as_ivy_dev": 421, "as_native_dev": 422, "clear_mem_on_dev": 423, "default_devic": 424, "dev": [425, 426, 427, 428], "static_dev": 429, "dev_util": 430, "function_supported_devic": 431, "function_unsupported_devic": 432, "get_all_ivy_arrays_on_dev": 433, "gpu_is_avail": 434, "num_cpu_cor": 435, "num_gpu": 436, "num_ivy_arrays_on_dev": 437, "percent_used_mem_on_dev": 438, "print_all_ivy_arrays_on_dev": 439, "set_default_devic": 440, "set_split_factor": 441, "split_factor": 442, "split_func_cal": 443, "to_devic": [444, 446, 447, 448], "static_to_devic": 445, "total_mem_on_dev": 449, "tpu_is_avail": 450, "unset_default_devic": 451, "used_mem_on_dev": 452, "ab": [454, 455, 456, 457], "static_ab": 458, "aco": [459, 460, 461, 462], "static_aco": 463, "acosh": [464, 465, 466, 467], "static_acosh": 468, "static_add": 473, "asin": [474, 475, 476, 477], "static_asin": 478, "asinh": [479, 480, 481, 482], "static_asinh": 483, "atan": [484, 485, 486, 487], "static_atan": 488, "atan2": [489, 490, 491, 492], "static_atan2": 493, "atanh": [494, 495, 496, 497], "static_atanh": 498, "bitwise_and": [499, 500, 501, 502], "static_bitwise_and": 503, "bitwise_invert": [504, 505, 506, 507], "static_bitwise_invert": 508, "bitwise_left_shift": [509, 510, 511, 512], "static_bitwise_left_shift": 513, "bitwise_or": [514, 515, 516, 517], "static_bitwise_or": 518, "bitwise_right_shift": [519, 520, 521, 522], "static_bitwise_right_shift": 523, "bitwise_xor": [524, 525, 526, 527], "static_bitwise_xor": 528, "ceil": [529, 530, 531, 532], "static_ceil": 533, "co": [534, 535, 536, 537], "static_co": 538, "cosh": [539, 540, 541, 542], "static_cosh": 543, "deg2rad": [544, 545, 546, 547], "static_deg2rad": 548, "divid": [549, 550, 551, 552], "static_divid": 553, "equal": [554, 555, 556, 557], "static_equ": 558, "erf": [559, 560, 561, 562], "static_erf": 563, "exp": [564, 565, 566, 567], "static_exp": 568, "expm1": [569, 570, 571, 572], "static_expm1": 573, "floor": [574, 575, 576, 577], "static_floor": 578, "floor_divid": [579, 580, 581, 582], "static_floor_divid": 583, "greater": [584, 585, 586, 587], "static_great": 588, "greater_equ": [589, 590, 591, 592], "static_greater_equ": 593, "isfinit": [594, 595, 596, 597], "static_isfinit": 598, "isinf": [599, 600, 601, 602], "static_isinf": 603, "isnan": [604, 605, 606, 607], "static_isnan": 608, "isreal": [609, 610, 611, 612], "static_isr": 613, "less": [614, 615, 616, 617], "static_less": 618, "less_equ": [619, 620, 621, 622], "static_less_equ": 623, "static_log": 628, "log10": [629, 630, 631, 632], "static_log10": 633, "log1p": [634, 635, 636, 637], "static_log1p": 638, "log2": [639, 640, 641, 642], "static_log2": 643, "logaddexp": [644, 645, 646, 647], "static_logaddexp": 648, "logical_and": [649, 650, 651, 652], "static_logical_and": 653, "logical_not": [654, 655, 656, 657], "static_logical_not": 658, "logical_or": [659, 660, 661, 662], "static_logical_or": 663, "logical_xor": [664, 665, 666, 667], "static_logical_xor": 668, "maximum": [669, 670, 671, 672], "static_maximum": 673, "minimum": [674, 675, 676, 677], "static_minimum": 678, "multipli": [679, 680, 681, 682], "static_multipli": 683, "neg": [684, 685, 686, 687], "static_neg": 688, "not_equ": [689, 690, 691, 692], "static_not_equ": 693, "static_posit": 698, "pow": [699, 700, 701, 702], "static_pow": 703, "rad2deg": [704, 705, 706, 707], "static_rad2deg": 708, "reciproc": [709, 710, 711, 712], "static_reciproc": 713, "remaind": [714, 715, 716, 717], "static_remaind": 718, "round": [719, 720, 721, 722], "static_round": 723, "sign": [724, 725, 726, 727], "static_sign": 728, "sin": [729, 730, 731, 732], "static_sin": 733, "sinh": [734, 735, 736, 737], "static_sinh": 738, "sqrt": [739, 740, 741, 742], "static_sqrt": 743, "squar": [744, 745, 746, 747], "static_squar": 748, "subtract": [749, 751, 752, 753], "static_subtract": 750, "static_tan": 755, "tanh": [759, 761, 762, 763], "static_tanh": 760, "trunc": [764, 766, 767, 768], "static_trunc": 765, "trunc_divid": [769, 771, 772, 773], "static_trunc_divid": 770, "nativesparsearrai": [775, 1195], "sparsearrai": [776, 1196], "logit": [778, 1064, 1065, 1066, 1067], "allclos": [779, 780, 781, 782, 892], "static_allclos": 783, "angl": [784, 785, 786, 787, 893], "static_angl": 788, "atleast_1d": [789, 790, 791, 792, 1072], "static_atleast_1d": 793, "atleast_2d": [794, 795, 796, 797, 1073], "static_atleast_2d": 798, "atleast_3d": [799, 800, 801, 802, 1074], "static_atleast_3d": 803, "avg_pool1d": [804, 805, 806, 807, 1039], "static_avg_pool1d": 808, "avg_pool2d": [809, 810, 811, 812, 1040], "static_avg_pool2d": 813, "avg_pool3d": [814, 815, 816, 817, 1041], "static_avg_pool3d": 818, "beta": [819, 820, 821, 822, 1172], "static_beta": 823, "binary_cross_entropy_with_logit": [824, 825, 826, 1070], "static_binary_cross_entropy_with_logit": 827, "broadcast_shap": [828, 829, 830, 1075, 2079], "static_broadcast_shap": 831, "copysign": [834, 835, 836, 837, 894], "static_copysign": 838, "count_nonzero": [839, 840, 841, 842, 895], "static_count_nonzero": 843, "hamming_window": [845, 974, 975, 976], "hann_window": [846, 978, 979, 980], "kaiser_bessel_derived_window": [847, 1025, 1026, 1027], "kaiser_window": [848, 1029, 1030, 1031], "tril_indic": [849, 1219, 1221, 1222], "triu_indic": [850, 1223, 1225, 1226], "vorbis_window": [851, 1233, 1235, 1236], "is_native_dtyp": [853, 1003], "dct": [854, 855, 856, 857, 1042], "static_dct": 858, "diagflat": [860, 861, 862, 863, 1054], "static_diagflat": 864, "diff": [865, 866, 867, 868, 896], "static_diff": 869, "dirichlet": [870, 871, 872, 873, 1173], "static_dirichlet": 874, "dropout1d": [875, 1043], "dsplit": [876, 877, 878, 879, 1076], "static_dsplit": 880, "dstack": [881, 882, 883, 884, 1077], "static_dstack": 885, "eig": [886, 887, 888, 889, 1055, 1581], "static_eig": 890, "exp2": [897, 917, 918, 919, 920], "fix": [898, 923, 924, 925, 926], "float_pow": [899, 943, 944, 945, 946], "fmax": [900, 948, 949, 950, 951], "fmod": [901, 953, 954, 955, 956], "gcd": [902, 961, 962, 963, 964], "isclos": [904, 1005, 1006, 1007, 1008], "isneginf": [905, 1015, 1016, 1017, 1018], "isposinf": [906, 1020, 1021, 1022, 1023], "lcm": [907, 1048, 1049, 1050, 1051], "logaddexp2": [908, 1059, 1060, 1061, 1062], "nan_to_num": [909, 1135, 1136, 1137, 1138], "nansum": [910, 1145, 1146, 1147, 1148], "nextaft": [911, 1155, 1156, 1157, 1158], "signbit": [912, 1182, 1183, 1184, 1185], "sinc": [913, 1187, 1188, 1189, 1190], "trapz": [914, 1216, 1217, 1218], "xlogi": [915, 1247, 1249, 1250, 1251], "zeta": [916, 1252, 1254, 1255, 1256], "static_exp2": 921, "fft": [922, 1044], "static_fix": 927, "flatten": [928, 929, 930, 931, 1078, 2050], "static_flatten": 932, "fliplr": [933, 934, 935, 936, 1079], "static_fliplr": 937, "flipud": [938, 939, 940, 941, 1080], "static_flipud": 942, "static_float_pow": 947, "static_fmax": 952, "static_fmod": 957, "gamma": [958, 959, 960, 1174], "static_gcd": 965, "isin": [967, 1010, 1011, 1012, 1013], "static_gradi": 972, "static_hamming_window": 977, "static_hann_window": 981, "heavisid": [982, 983, 984, 985, 1081], "static_heavisid": 986, "hsplit": [987, 988, 989, 990, 1082], "static_hsplit": 991, "hstack": [992, 993, 994, 995, 1083], "static_hstack": 996, "i0": [997, 998, 999, 1000, 1084], "static_i0": 1001, "is_ivy_sparse_arrai": [1002, 1197], "is_native_sparse_arrai": [1004, 1198], "static_isclos": 1009, "static_isin": 1014, "static_isneginf": 1019, "static_isposinf": 1024, "static_kaiser_bessel_derived_window": 1028, "static_kaiser_window": 1032, "kron": [1033, 1034, 1035, 1036, 1056], "static_kron": 1037, "max_pool1d": [1045, 1099, 1100, 1101, 1102], "max_pool2d": [1046, 1104, 1105, 1106, 1107], "max_pool3d": [1047, 1109, 1110, 1111, 1112], "static_lcm": 1052, "matrix_exp": [1057, 1094, 1095, 1096, 1097], "multi_dot": [1058, 1130, 1131, 1132, 1133], "static_logaddexp2": 1063, "static_logit": 1068, "moveaxi": [1085, 1120, 1121, 1122, 1123], "ndenumer": [1086, 1152], "ndindex": [1087, 1153], "pad": [1088, 1161, 1162, 1163, 1164], "rot90": [1089, 1175, 1176, 1177, 1178], "take_along_axi": [1090, 1206, 1208, 1209, 1210], "top_k": [1091, 1211, 1213, 1214, 1215], "vsplit": [1092, 1237, 1239, 1240, 1241], "vstack": [1093, 1242, 1244, 1245, 1246], "static_matrix_exp": 1098, "static_max_pool1d": 1103, "static_max_pool2d": 1108, "static_max_pool3d": 1113, "median": [1114, 1115, 1116, 1117, 1202], "static_median": 1118, "meta": [1119, 1792], "static_moveaxi": 1124, "msort": [1125, 1126, 1127, 1128, 1193], "static_msort": 1129, "static_multi_dot": 1134, "static_nan_to_num": 1139, "nanmean": [1140, 1141, 1142, 1143, 1203], "static_nanmean": 1144, "static_nansum": 1149, "native_sparse_arrai": [1150, 1199], "native_sparse_array_to_indices_values_and_shap": [1151, 1200], "nest": [1154, 1796, 1975], "static_nextaft": 1159, "static_pad": 1165, "quantil": [1166, 1167, 1168, 1169, 1204], "static_quantil": 1170, "static_rot90": 1179, "static_signbit": 1186, "static_sinc": 1191, "spars": 1194, "unravel_index": [1205, 1227, 1229, 1230, 1231], "static_take_along_axi": 1207, "static_top_k": 1212, "static_tril_indic": 1220, "static_triu_indic": 1224, "static_unravel_index": 1228, "static_vorbis_window": 1234, "static_vsplit": 1238, "static_vstack": 1243, "static_xlogi": 1248, "static_zeta": 1253, "paramet": [1258, 1396, 1397, 1400, 1402, 1403, 2106], "all_equ": [1259, 1260, 1261, 1262], "static_all_equ": 1263, "arg_info": 1264, "arg_nam": 1265, "array_equ": [1266, 1267, 1268], "assert_supports_inplac": [1269, 1270, 1271, 1272], "static_assert_supports_inplac": 1273, "cache_fn": 1274, "clip_matrix_norm": [1275, 1276, 1277, 1278], "static_clip_matrix_norm": 1279, "clip_vector_norm": [1280, 1281, 1282, 1283], "static_clip_vector_norm": 1284, "container_typ": 1285, "current_backend_str": 1286, "default": [1287, 1288, 1289], "einops_rearrang": [1290, 1291, 1292, 1293], "static_einops_rearrang": 1294, "einops_reduc": [1295, 1296, 1297, 1298], "static_einops_reduc": 1299, "einops_repeat": [1300, 1301, 1302, 1303], "static_einops_repeat": 1304, "exist": [1305, 1306, 1307], "fourier_encod": [1308, 1309, 1310, 1311], "static_fourier_encod": 1312, "function_supported_devices_and_dtyp": 1313, "function_unsupported_devices_and_dtyp": 1314, "gather": [1315, 1316, 1317, 1318], "static_gath": 1319, "gather_nd": [1320, 1321, 1322, 1323], "static_gather_nd": 1324, "get_all_arrays_in_memori": 1325, "get_array_mod": 1326, "get_exception_trace_mod": 1327, "get_item": 1328, "get_min_bas": 1329, "get_min_denomin": 1330, "get_nestable_mod": 1331, "get_num_dim": [1332, 1333, 1334, 1335], "static_get_num_dim": 1336, "get_queue_timeout": 1337, "get_referrers_recurs": 1338, "get_show_func_wrapper_trace_mod": 1339, "get_tmp_dir": 1340, "has_nan": [1341, 1342, 1343, 1344], "static_has_nan": 1345, "inplace_arrays_support": 1346, "inplace_decr": [1347, 1348, 1349, 1350], "static_inplace_decr": 1351, "inplace_incr": [1352, 1353, 1354, 1355], "static_inplace_incr": 1356, "inplace_upd": [1357, 1358, 1359, 1360], "static_inplace_upd": 1361, "inplace_variables_support": 1362, "is_arrai": [1363, 1364, 1365, 1366], "static_is_arrai": 1367, "is_ivy_arrai": [1368, 1369, 1370, 1371], "static_is_ivy_arrai": 1372, "is_ivy_contain": [1373, 1374, 1375], "is_native_arrai": [1376, 1377, 1378, 1379], "static_is_native_arrai": 1380, "isscalar": 1381, "match_kwarg": 1382, "multiprocess": 1383, "num_arrays_in_memori": 1384, "print_all_arrays_in_memori": 1385, "scatter_flat": [1386, 1387, 1388, 1389], "static_scatter_flat": 1390, "scatter_nd": [1391, 1392, 1393, 1394], "static_scatter_nd": 1395, "set_array_mod": 1396, "set_exception_trace_mod": 1397, "set_min_bas": 1398, "set_min_denomin": 1399, "set_nestable_mod": 1400, "set_queue_timeout": 1401, "set_shape_array_mod": 1402, "set_show_func_wrapper_trace_mod": 1403, "set_tmp_dir": 1404, "shape_array_mod": 1406, "stable_divid": [1407, 1408, 1409, 1410], "static_stable_divid": 1411, "stable_pow": [1412, 1413, 1414, 1415], "static_stable_pow": 1416, "supports_inplace_upd": [1417, 1419, 1420, 1421], "static_supports_inplace_upd": 1418, "to_ivy_shap": 1422, "to_list": [1423, 1425, 1426], "static_to_list": 1424, "to_native_shap": 1427, "to_numpi": [1428, 1430, 1431, 1432], "static_to_numpi": 1429, "to_scalar": [1433, 1435, 1436, 1437], "static_to_scalar": 1434, "try_else_non": 1438, "unset_array_mod": 1439, "unset_exception_trace_mod": 1440, "unset_nestable_mod": 1441, "unset_queue_timeout": 1442, "unset_shape_array_mod": 1443, "unset_show_func_wrapper_trace_mod": 1444, "value_is_nan": [1445, 1447, 1448, 1449], "static_value_is_nan": 1446, "vmap": 1450, "gradienttrack": 1452, "adam_step": [1453, 1454, 1455, 1456], "adam_upd": [1457, 1458, 1459, 1460], "execute_with_gradi": 1461, "grad": 1462, "gradient_descent_upd": [1463, 1464, 1465, 1466], "jac": 1467, "lamb_upd": [1468, 1469, 1470, 1471], "lars_upd": [1472, 1473, 1474, 1475], "optimizer_upd": [1476, 1477, 1478, 1479], "set_with_grad": 1480, "stop_gradi": [1481, 1483, 1484, 1485], "static_stop_gradi": 1482, "unset_with_grad": 1486, "value_and_grad": 1487, "with_grad": 1488, "conv": 1490, "conv1d": [1491, 1492, 1493, 1494, 2008], "static_conv1d": 1495, "conv1d_transpos": [1496, 1497, 1498, 1499], "static_conv1d_transpos": 1500, "conv2d": [1501, 1502, 1503, 1504, 2010], "static_conv2d": 1505, "conv2d_transpos": [1506, 1507, 1508], "static_conv2d_transpos": 1509, "conv3d": [1510, 1511, 1512, 1513, 2012], "static_conv3d": 1514, "conv3d_transpos": [1515, 1516, 1517, 1518], "static_conv3d_transpos": 1519, "conv_general_dil": 1520, "conv_general_transpos": 1521, "deconv_length": 1522, "depthwise_conv2d": [1523, 1524, 1525, 1526], "static_depthwise_conv2d": 1527, "dropout": [1528, 1529, 1530, 1531, 2015], "static_dropout": 1532, "get_x_data_format": 1533, "handle_pad": 1534, "static_linear": 1539, "lstm_updat": [1540, 1541, 1542, 1543], "static_lstm_upd": 1544, "multi_head_attent": [1545, 1546, 1547, 1548], "static_multi_head_attent": 1549, "scaled_dot_product_attent": [1550, 1551, 1552, 1553], "static_scaled_dot_product_attent": 1554, "choleski": [1556, 1557, 1558, 1559], "static_choleski": 1560, "cross": [1561, 1562, 1563, 1564], "static_cross": 1565, "det": [1566, 1567, 1568, 1569], "static_det": 1570, "diag": [1571, 1572, 1573, 1574], "static_diag": 1575, "diagon": [1576, 1577, 1578, 1579], "static_diagon": 1580, "eigh": [1582, 1583, 1584, 1585], "static_eigh": 1586, "eigvalsh": [1587, 1588, 1589, 1590], "static_eigvalsh": 1591, "inner": [1592, 1593, 1594, 1595], "static_inn": 1596, "inv": [1597, 1598, 1599, 1600], "static_inv": 1601, "matmul": [1602, 1603, 1604, 1605], "static_matmul": 1606, "matrix_norm": [1607, 1608, 1609, 1610], "static_matrix_norm": 1611, "matrix_pow": [1612, 1613, 1614, 1615], "static_matrix_pow": 1616, "matrix_rank": [1617, 1618, 1619, 1620], "static_matrix_rank": 1621, "matrix_transpos": [1622, 1623, 1624, 1625], "static_matrix_transpos": 1626, "outer": [1627, 1628, 1629, 1630], "static_out": 1631, "pinv": [1632, 1633, 1634, 1635], "static_pinv": 1636, "qr": [1637, 1638, 1639, 1640], "static_qr": 1641, "slogdet": [1642, 1643, 1644, 1645], "static_slogdet": 1646, "solv": [1647, 1648, 1649, 1650], "static_solv": 1651, "svd": [1652, 1654, 1655, 1656], "static_svd": 1653, "svdval": [1657, 1659, 1660, 1661], "static_svdv": 1658, "tensordot": [1662, 1664, 1665], "static_tensordot": 1663, "tensorsolv": [1666, 1667, 1668, 1669], "static_trac": 1671, "vander": [1675, 1677, 1678, 1679], "static_vand": 1676, "vecdot": [1680, 1682, 1683, 1684], "static_vecdot": 1681, "vector_norm": [1685, 1687, 1688, 1689], "static_vector_norm": 1686, "vector_to_skew_symmetric_matrix": [1690, 1692, 1693, 1694], "static_vector_to_skew_symmetric_matrix": 1691, "binary_cross_entropi": [1696, 1697, 1698, 1699], "static_binary_cross_entropi": 1700, "cross_entropi": [1701, 1702, 1703, 1704], "static_cross_entropi": 1705, "sparse_cross_entropi": [1706, 1707, 1708, 1709], "static_sparse_cross_entropi": 1710, "clip": [1712, 1713, 1714, 1715], "static_clip": 1716, "concat": [1717, 1718, 1719, 1720], "static_concat": 1721, "constant_pad": [1722, 1723, 1724, 1725], "static_constant_pad": 1726, "expand_dim": [1727, 1728, 1729, 1730], "static_expand_dim": 1731, "flip": [1732, 1733, 1734, 1735], "static_flip": 1736, "permute_dim": [1737, 1738, 1739, 1740], "static_permute_dim": 1741, "repeat": [1742, 1743, 1744, 1745], "static_repeat": 1746, "reshap": [1747, 1748, 1749, 1750], "static_reshap": 1751, "static_rol": 1756, "split": [1757, 1758, 1759, 1760], "static_split": 1761, "squeez": [1762, 1763, 1764, 1765], "static_squeez": 1766, "static_stack": 1771, "swapax": [1772, 1774, 1775, 1776], "static_swapax": 1773, "tile": [1777, 1779, 1780, 1781], "static_til": 1778, "unstack": [1782, 1784, 1785, 1786], "static_unstack": 1783, "zero_pad": [1787, 1789, 1790, 1791], "static_zero_pad": 1788, "fomaml_step": 1793, "maml_step": 1794, "reptile_step": 1795, "all_nested_indic": 1797, "copy_nest": 1798, "duplicate_array_index_chain": 1799, "index_nest": 1800, "insert_into_nest_at_index": 1801, "insert_into_nest_at_indic": 1802, "map": 1803, "map_nest_at_index": 1804, "map_nest_at_indic": 1805, "multi_index_nest": 1806, "nested_ani": 1807, "nested_argwher": 1808, "nested_map": 1809, "nested_multi_map": 1810, "prune_empti": 1811, "prune_nest_at_index": 1812, "prune_nest_at_indic": 1813, "set_nest_at_index": 1814, "set_nest_at_indic": 1815, "layer_norm": [1817, 1818, 1819, 1820], "multinomi": [1822, 1823, 1824, 1825], "static_multinomi": 1826, "randint": [1827, 1828, 1829, 1830], "static_randint": 1831, "random_norm": [1832, 1833, 1834, 1835], "static_random_norm": 1836, "random_uniform": [1837, 1838, 1839, 1840], "static_random_uniform": 1841, "seed": [1842, 2123], "shuffl": [1843, 1844, 1845, 1846], "static_shuffl": 1847, "argmax": [1849, 1850, 1851, 1852], "static_argmax": 1853, "argmin": [1854, 1855, 1856, 1857], "static_argmin": 1858, "argwher": [1859, 1860, 1861, 1862], "static_argwher": 1863, "nonzero": [1864, 1865, 1866, 1867], "static_nonzero": 1868, "static_wher": 1870, "depend": [1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894], "output": [1874, 1875, 1879, 1880, 1884, 1885, 1889, 1890, 1894], "unique_al": [1875, 1877, 1878, 1879], "static_unique_al": 1876, "unique_count": [1880, 1882, 1883, 1884], "static_unique_count": 1881, "unique_invers": [1885, 1887, 1888, 1889], "static_unique_invers": 1886, "unique_valu": [1890, 1892, 1893, 1894], "static_unique_valu": 1891, "argsort": [1896, 1897, 1898, 1899], "static_argsort": 1900, "searchsort": [1901, 1902, 1903, 1904], "static_searchsort": 1905, "static_sort": 1910, "cumprod": [1912, 1913, 1914, 1915], "static_cumprod": 1916, "cumsum": [1917, 1918, 1919, 1920], "static_cumsum": 1921, "einsum": [1922, 1923, 1924, 1925], "max": [1926, 1927, 1928, 1929], "mean": [1930, 1931, 1932, 1933], "min": [1934, 1935, 1936, 1937], "prod": [1938, 1939, 1940, 1941, 2085], "static_prod": 1942, "std": [1943, 1944, 1945, 1946], "sum": [1947, 1949, 1950, 1951], "static_sum": 1948, "var": [1952, 1954, 1955, 1956], "static_var": 1953, "all": [1958, 1959, 1960, 1961], "static_al": 1962, "ani": [1963, 1964, 1965, 1966], "static_ani": 1967, "glossari": 1968, "content": 1969, "overview": 1969, "quick": 1969, "start": 1969, "citat": 1969, "inspect": 1972, "add_array_spec": 1973, "fn_array_spec": 1974, "nestedarrai": 1976, "relat": 1977, "infrastructur": [1979, 1987], "llvm": 1979, "mlir": 1979, "oneapi": 1979, "exchang": [1980, 1987], "onnx": 1980, "nnef": 1980, "coreml": 1980, "matlab": 1981, "scipi": 1981, "torch": [1981, 1982], "scikit": 1981, "learn": 1981, "theano": 1981, "panda": 1981, "julia": 1981, "apach": [1981, 1984], "spark": 1981, "mllib": 1981, "caff": 1981, "chainer": 1981, "tensorflow": 1981, "1": 1981, "mxnet": 1981, "cntk": 1981, "pytorch": 1981, "flux": 1981, "jax": 1981, "2": 1981, "dex": 1981, "languag": 1981, "tracer": [1982, 1987], "tf": 1982, "jaxpr": 1982, "jit": 1982, "fx": 1982, "compani": [1983, 1987], "quansight": 1983, "modular": 1983, "octoml": 1983, "multi": [1984, 1987], "vendor": [1984, 1985, 1986, 1987], "tvm": 1984, "xla": 1984, "gcc": 1984, "specif": [1985, 1986, 1987], "tensorrt": 1985, "cuda": 1985, "icc": 1986, "icx": 1986, "nvcc": 1986, "doe": 1987, "eagerpi": 1988, "kera": 1988, "thinc": 1988, "tensorli": 1988, "neuropod": 1988, "geglu": 1991, "to_ivy_modul": 1994, "modulehelp": 1996, "firstlayersiren": 1999, "glorotuniform": 2000, "kaimingnorm": 2002, "Ones": 2003, "siren": 2004, "uniform": 2005, "conv1dtranspos": 2009, "conv2dtranspos": 2011, "conv3dtranspos": 2013, "depthwiseconv2d": 2014, "lstm": 2016, "multiheadattent": 2018, "mytfmodul": 2021, "mytorchmodul": 2022, "layernorm": 2024, "adam": 2026, "lamb": 2027, "lar": 2028, "sgd": 2030, "sequenti": [2031, 2032], "assert_all_clos": 2035, "assert_same_type_and_shap": 2036, "check_unsupported_devic": 2037, "check_unsupported_device_and_dtyp": 2038, "check_unsupported_dtyp": 2039, "test_unsupported_funct": 2040, "value_test": 2041, "avail": 2042, "args_to_contain": 2044, "as_cont": 2045, "as_list": 2046, "convtru": 2047, "create_args_kwarg": 2048, "empty_func": 2049, "flatten_and_to_np": 2051, "flatten_fw_and_to_np": 2052, "get_frontend_ret": 2053, "get_ret_and_flattened_np_arrai": 2054, "gradient_incompatible_funct": 2055, "gradient_test": 2056, "gradient_unsupported_dtyp": 2057, "kwargs_to_args_n_kwarg": 2058, "test_frontend_funct": 2059, "test_frontend_method": 2060, "test_funct": 2061, "test_method": 2062, "var_fn": 2063, "global": 2064, "interruptedtest": 2065, "testdata": 2066, "setup_api_test": 2067, "setup_frontend_test": 2068, "teardown_api_test": 2069, "teardown_frontend_test": 2070, "array_and_broadcastable_shap": 2073, "array_bool": 2074, "array_indices_axi": 2075, "array_valu": 2076, "arrays_and_ax": 2077, "arrays_for_pool": 2078, "dtype_and_valu": 2080, "dtype_values_axi": 2081, "list_of_length": 2082, "mutually_broadcastable_shap": 2084, "array_dtyp": 2087, "get_castable_dtyp": 2088, "get_dtyp": 2089, "apply_safety_factor": 2091, "get_axi": 2092, "get_bound": 2093, "get_mean_std": 2094, "get_shap": 2095, "matrix_is_st": 2096, "reshape_shap": 2097, "subset": 2098, "x_and_filt": 2099, "float": 2101, "int": 2102, "struct": 2104, "frontendmethoddata": 2105, "flag": 2106, "asvariableflag": 2107, "containerflag": 2108, "functiontestflag": 2109, "nativearrayflag": 2110, "numpositionalarg": 2111, "numpositionalargfn": 2112, "numpositionalargmethod": 2113, "build_flag": 2114, "function_flag": 2115, "handle_frontend_method": 2117, "handle_frontend_test": 2118, "handle_method": 2119, "handle_test": 2120, "num_positional_arg": 2121, "num_positional_args_method": 2122, "verbos": 2124, "cprint": 2125}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Assertions": [[1, "module-ivy.assertions"], [2034, "module-ivy_tests.test_ivy.helpers.assertions"]], "check_all": [[2, "check-all"]], "check_all_or_any_fn": [[3, "check-all-or-any-fn"]], "check_any": [[4, "check-any"]], "check_elem_in_list": [[5, "check-elem-in-list"]], "check_equal": [[6, "check-equal"]], "check_exists": [[7, "check-exists"]], "check_false": [[8, "check-false"]], "check_fill_value_and_dtype_are_compatible": [[9, "check-fill-value-and-dtype-are-compatible"]], "check_gather_input_valid": [[10, "check-gather-input-valid"]], "check_gather_nd_input_valid": [[11, "check-gather-nd-input-valid"]], "check_greater": [[12, "check-greater"]], "check_inplace_sizes_valid": [[13, "check-inplace-sizes-valid"]], "check_isinstance": [[14, "check-isinstance"]], "check_less": [[15, "check-less"]], "check_one_way_broadcastable": [[16, "check-one-way-broadcastable"]], "check_shape": [[17, "check-shape"]], "check_true": [[18, "check-true"]], "Backend handler": [[19, "module-ivy.backend_handler"]], "ContextManager": [[20, "contextmanager"]], "choose_random_backend": [[21, "choose-random-backend"]], "clear_backend_stack": [[22, "clear-backend-stack"]], "current_backend": [[23, "current-backend"]], "fn_name_from_version_specific_fn_name": [[24, "fn-name-from-version-specific-fn-name"]], "get_backend": [[25, "get-backend"]], "set_backend": [[26, "set-backend"]], "set_backend_to_specific_version": [[27, "set-backend-to-specific-version"]], "set_jax_backend": [[28, "set-jax-backend"]], "set_numpy_backend": [[29, "set-numpy-backend"]], "set_tensorflow_backend": [[30, "set-tensorflow-backend"]], "set_torch_backend": [[31, "set-torch-backend"]], "unset_backend": [[32, "unset-backend"]], "Background": [[33, "background"], [1969, "background"]], "ML Explosion": [[34, "ml-explosion"]], "Standardization": [[35, "standardization"]], "Skepticism": [[35, "skepticism"]], "Complimentary vs Competitive": [[35, "complimentary-vs-competitive"]], "Do Standards Work?": [[35, "do-standards-work"]], "The Array API Standard": [[35, "the-array-api-standard"]], "Why Unify?": [[36, "why-unify"]], "No More Re-implementations \ud83d\udea7": [[36, "no-more-re-implementations"]], "\u201cInfinite\u201d Shelf-Life \u2705": [[36, "infinite-shelf-life"]], "Contributing": [[37, "contributing"], [1969, "contributing"]], "Applied Libraries": [[38, "applied-libraries"], [180, "applied-libraries"]], "Introduction": [[38, "introduction"], [158, "introduction"], [159, "introduction"]], "Example - Ivy Robot": [[38, "example-ivy-robot"]], "Building the Docs": [[39, "building-the-docs"]], "Building the Docs with Docker": [[39, "building-the-docs-with-docker"]], "Dockerless Doc-building": [[39, "dockerless-doc-building"]], "Using miniconda": [[39, "using-miniconda"], [42, "using-miniconda"]], "Using venv": [[39, "using-venv"], [42, "using-venv"]], "Building the docs": [[39, "id1"]], "Working of the Documentation Building Pipeline": [[39, "working-of-the-documentation-building-pipeline"]], "make_docs.sh:": [[39, "make-docs-sh"]], "entrypoint.sh:": [[39, "entrypoint-sh"]], "_make_docs.sh:": [[39, "id2"]], "generate_src_rst_files.py:": [[39, "generate-src-rst-files-py"]], "sphinx-build.py": [[39, "sphinx-build-py"]], "correct_built_html_files.py": [[39, "correct-built-html-files-py"]], "remove_files.sh": [[39, "remove-files-sh"]], "Helpful Resources": [[40, "helpful-resources"]], "Open Tasks": [[41, "open-tasks"]], "Function Formatting": [[41, "function-formatting"]], "Formatting checklist": [[41, "formatting-checklist"]], "Frontend APIs": [[41, "frontend-apis"]], "Where to place a frontend function": [[41, "where-to-place-a-frontend-function"]], "Ivy Experimental API": [[41, "ivy-experimental-api"], [43, "ivy-experimental-api"]], "Setting Up": [[42, "setting-up"]], "Clone Ivy": [[42, "clone-ivy"]], "PyCharm": [[42, "pycharm"]], "Virtual environments - No Docker": [[42, "virtual-environments-no-docker"]], "Docker Interpreter with PyCharm": [[42, "docker-interpreter-with-pycharm"]], "Windows": [[42, "windows"], [42, "id6"]], "MacOS": [[42, "macos"]], "Ubuntu": [[42, "ubuntu"], [42, "id8"]], "Setting Up Testing": [[42, "setting-up-testing"]], "More Detailed Hypothesis Logs": [[42, "more-detailed-hypothesis-logs"]], "Setting up for Free": [[42, "setting-up-for-free"]], "GitHub Codespaces": [[42, "github-codespaces"]], "Pre-Commit": [[42, "pre-commit"]], "The Basics": [[43, "the-basics"]], "Getting Help": [[43, "getting-help"]], "ToDo List Issues": [[43, "todo-list-issues"]], "Managing Your Fork": [[43, "managing-your-fork"]], "Who To Ask": [[43, "who-to-ask"]], "With Command Line:": [[43, "with-command-line"]], "With Browser:": [[43, "with-browser"]], "Pull Requests": [[43, "pull-requests"]], "Small Commits Often": [[43, "small-commits-often"]], "Interactive Ivy Docker Container": [[43, "interactive-ivy-docker-container"]], "Running Tests Locally": [[43, "running-tests-locally"]], "With Docker": [[43, "with-docker"]], "Getting the most out of IDE": [[43, "getting-the-most-out-of-ide"]], "with PyCharm": [[43, "with-pycharm"]], "Data classes": [[44, "data-classes"]], "Array": [[45, "module-ivy.array.array"], [48, "module-ivy.array.array"]], "Activations": [[46, "module-ivy.array.activations"], [95, "module-ivy.container.activations"], [196, "module-ivy.functional.ivy.activations"], [777, "module-ivy.functional.ivy.experimental.activations"], [1990, "module-ivy.stateful.activations"]], "ArrayWithActivations": [[47, "arraywithactivations"]], "Conversions": [[50, "module-ivy.array.conversions"], [101, "module-ivy.container.conversions"]], "args_to_ivy": [[51, "args-to-ivy"]], "args_to_native": [[52, "args-to-native"]], "to_ivy": [[53, "to-ivy"]], "to_native": [[54, "to-native"]], "Creation": [[55, "module-ivy.array.creation"], [103, "module-ivy.container.creation"], [237, "module-ivy.functional.ivy.creation"], [844, "module-ivy.functional.ivy.experimental.creation"]], "ArrayWithCreation": [[56, "arraywithcreation"]], "Data type": [[57, "module-ivy.array.data_type"], [105, "module-ivy.container.data_type"], [323, "module-ivy.functional.ivy.data_type"], [852, "module-ivy.functional.ivy.experimental.data_type"]], "ArrayWithDataTypes": [[58, "arraywithdatatypes"]], "Device": [[59, "module-ivy.array.device"], [107, "module-ivy.container.device"], [418, "module-ivy.functional.ivy.device"], [859, "module-ivy.functional.ivy.experimental.device"]], "ArrayWithDevice": [[60, "arraywithdevice"]], "Elementwise": [[61, "module-ivy.array.elementwise"], [109, "module-ivy.container.elementwise"], [453, "module-ivy.functional.ivy.elementwise"], [891, "module-ivy.functional.ivy.experimental.elementwise"]], "ArrayWithElementwise": [[62, "arraywithelementwise"]], "Experimental": [[63, "experimental"], [111, "experimental"], [774, "module-ivy.functional.ivy.experimental"]], "General": [[64, "module-ivy.array.general"], [112, "module-ivy.container.general"], [966, "module-ivy.functional.ivy.experimental.general"], [1258, "module-ivy.functional.ivy.general"]], "ArrayWithGeneral": [[65, "arraywithgeneral"]], "Gradients": [[66, "module-ivy.array.gradients"], [114, "module-ivy.container.gradients"], [973, "module-ivy.functional.ivy.experimental.gradients"], [1451, "module-ivy.functional.ivy.gradients"]], "ArrayWithGradients": [[67, "arraywithgradients"]], "Image": [[68, "module-ivy.array.image"], [116, "module-ivy.container.image"]], "ArrayWithImage": [[69, "arraywithimage"]], "Layers": [[70, "module-ivy.array.layers"], [118, "module-ivy.container.layers"], [1038, "module-ivy.functional.ivy.experimental.layers"], [1489, "module-ivy.functional.ivy.layers"], [2007, "module-ivy.stateful.layers"]], "ArrayWithLayers": [[71, "arraywithlayers"]], "Linear algebra": [[72, "module-ivy.array.linear_algebra"], [120, "module-ivy.container.linear_algebra"], [1053, "module-ivy.functional.ivy.experimental.linear_algebra"], [1555, "module-ivy.functional.ivy.linear_algebra"]], "ArrayWithLinearAlgebra": [[73, "arraywithlinearalgebra"]], "Losses": [[74, "module-ivy.array.losses"], [122, "module-ivy.container.losses"], [1069, "module-ivy.functional.ivy.experimental.losses"], [1695, "module-ivy.functional.ivy.losses"]], "ArrayWithLosses": [[75, "arraywithlosses"]], "Manipulation": [[76, "module-ivy.array.manipulation"], [124, "module-ivy.container.manipulation"], [1071, "module-ivy.functional.ivy.experimental.manipulation"], [1711, "module-ivy.functional.ivy.manipulation"]], "ArrayWithManipulation": [[77, "arraywithmanipulation"]], "Norms": [[78, "module-ivy.array.norms"], [126, "module-ivy.container.norms"], [1160, "module-ivy.functional.ivy.experimental.norms"], [1816, "module-ivy.functional.ivy.norms"], [2023, "module-ivy.stateful.norms"]], "ArrayWithNorms": [[79, "arraywithnorms"]], "Random": [[80, "module-ivy.array.random"], [128, "module-ivy.container.random"], [1171, "module-ivy.functional.ivy.experimental.random"], [1821, "module-ivy.functional.ivy.random"]], "ArrayWithRandom": [[81, "arraywithrandom"]], "Searching": [[82, "module-ivy.array.searching"], [130, "module-ivy.container.searching"], [1180, "module-ivy.functional.ivy.experimental.searching"], [1848, "module-ivy.functional.ivy.searching"]], "ArrayWithSearching": [[83, "arraywithsearching"]], "Set": [[84, "module-ivy.array.set"], [132, "module-ivy.container.set"], [1181, "module-ivy.functional.ivy.experimental.set"], [1874, "module-ivy.functional.ivy.set"]], "ArrayWithSet": [[85, "arraywithset"]], "Sorting": [[86, "module-ivy.array.sorting"], [134, "module-ivy.container.sorting"], [1192, "module-ivy.functional.ivy.experimental.sorting"], [1895, "module-ivy.functional.ivy.sorting"]], "ArrayWithSorting": [[87, "arraywithsorting"]], "Statistical": [[88, "module-ivy.array.statistical"], [136, "module-ivy.container.statistical"], [1201, "module-ivy.functional.ivy.experimental.statistical"], [1911, "module-ivy.functional.ivy.statistical"]], "ArrayWithStatistical": [[89, "arraywithstatistical"]], "Utility": [[90, "module-ivy.array.utility"], [138, "module-ivy.container.utility"], [1232, "module-ivy.functional.ivy.experimental.utility"], [1957, "module-ivy.functional.ivy.utility"]], "ArrayWithUtility": [[91, "arraywithutility"]], "Wrapping": [[92, "module-ivy.array.wrapping"], [140, "module-ivy.container.wrapping"]], "add_ivy_array_instance_methods": [[93, "add-ivy-array-instance-methods"]], "Container": [[94, "module-ivy.container.container"], [99, "module-ivy.container.container"]], "ContainerWithActivations": [[96, "containerwithactivations"]], "Base": [[97, "module-ivy.container.base"]], "ContainerBase": [[98, "containerbase"]], "ContainerWithConversions": [[102, "containerwithconversions"]], "ContainerWithCreation": [[104, "containerwithcreation"]], "ContainerWithDataTypes": [[106, "containerwithdatatypes"]], "ContainerWithDevice": [[108, "containerwithdevice"]], "ContainerWithElementwise": [[110, "containerwithelementwise"]], "ContainerWithGeneral": [[113, "containerwithgeneral"]], "ContainerWithGradients": [[115, "containerwithgradients"]], "ContainerWithImage": [[117, "containerwithimage"]], "ContainerWithLayers": [[119, "containerwithlayers"]], "ContainerWithLinearAlgebra": [[121, "containerwithlinearalgebra"]], "ContainerWithLosses": [[123, "containerwithlosses"]], "ContainerWithManipulation": [[125, "containerwithmanipulation"]], "ContainerWithNorms": [[127, "containerwithnorms"]], "ContainerWithRandom": [[129, "containerwithrandom"]], "ContainerWithSearching": [[131, "containerwithsearching"]], "ContainerWithSet": [[133, "containerwithset"]], "ContainerWithSorting": [[135, "containerwithsorting"]], "ContainerWithStatistical": [[137, "containerwithstatistical"]], "ContainerWithUtility": [[139, "containerwithutility"]], "add_ivy_container_instance_methods": [[141, "add-ivy-container-instance-methods"]], "Deep Dive": [[142, "deep-dive"]], "Array API Tests": [[143, "array-api-tests"], [147, "array-api-tests"]], "Running the Tests": [[143, "running-the-tests"]], "Using Terminal": [[143, "using-terminal"]], "Using the IDE": [[143, "using-the-ide"]], "Regenerating Test Failures": [[143, "regenerating-test-failures"]], "Test Skipping": [[143, "test-skipping"]], "Arrays": [[144, "arrays"]], "Native Array": [[144, "native-array"]], "Ivy Array": [[144, "ivy-array"], [166, "ivy-array"]], "Array Handling": [[144, "array-handling"]], "Backend Setting": [[145, "backend-setting"]], "Backend and Frontend Version Support": [[145, "backend-and-frontend-version-support"]], "Containers": [[146, "containers"]], "Container Instance Methods": [[146, "container-instance-methods"]], "Container Static Methods": [[146, "container-static-methods"]], "API Static Methods": [[146, "api-static-methods"]], "API Instance Methods": [[146, "api-instance-methods"]], "API Special Methods": [[146, "api-special-methods"]], "Nestable Functions": [[146, "nestable-functions"], [154, "nestable-functions"], [155, "nestable-functions"]], "Continuous Integration": [[147, "continuous-integration"]], "Commit (Push/PR) Triggered Testing": [[147, "commit-push-pr-triggered-testing"]], "Ivy Tests": [[147, "ivy-tests"], [160, "ivy-tests"]], "Ivy Core Tests": [[147, "ivy-core-tests"]], "Ivy NN Tests": [[147, "ivy-nn-tests"]], "Ivy Stateful Tests": [[147, "ivy-stateful-tests"]], "Ivy Frontend Tests": [[147, "ivy-frontend-tests"], [159, "ivy-frontend-tests"]], "CI Pipeline \u27a1\ufe0f": [[147, "ci-pipeline"]], "Push": [[147, "push"]], "Pull Request": [[147, "pull-request"]], "Scheduled Tests (Cron Jobs)": [[147, "scheduled-tests-cron-jobs"]], "Dashboard": [[147, "dashboard"]], "Data Types": [[148, "data-types"]], "Data Type Module": [[148, "data-type-module"]], "Data Type Promotion": [[148, "data-type-promotion"]], "Arguments in other Functions": [[148, "arguments-in-other-functions"], [149, "arguments-in-other-functions"]], "Supported and Unsupported Data Types": [[148, "supported-and-unsupported-data-types"]], "Backend Data Type Bugs": [[148, "backend-data-type-bugs"]], "Superset Data Type Support": [[148, "superset-data-type-support"]], "Devices": [[149, "devices"]], "Device Module": [[149, "device-module"]], "Docstring Examples": [[150, "docstring-examples"]], "ivy.tan": [[150, "ivy-tan"], [758, "ivy-tan"]], "ivy.roll": [[150, "ivy-roll"], [1755, "ivy-roll"]], "ivy.add": [[150, "ivy-add"], [472, "ivy-add"]], "Docstrings": [[151, "docstrings"]], "Exception Handling": [[152, "exception-handling"]], "Ivy Exception Class": [[152, "ivy-exception-class"]], "Configurable Mode for Stack Trace": [[152, "configurable-mode-for-stack-trace"]], "Ivy func_wrapper Pruning": [[152, "ivy-func-wrapper-pruning"]], "@handle_exceptions Decorator": [[152, "handle-exceptions-decorator"]], "Assertion Function": [[152, "assertion-function"]], "Formatting": [[153, "formatting"]], "Lint Checks": [[153, "lint-checks"]], "Pre-Commit Hook": [[153, "pre-commit-hook"]], "Function Arguments": [[154, "function-arguments"]], "Examples": [[154, "examples"]], "Positional and Keyword Arguments": [[154, "positional-and-keyword-arguments"]], "Input Arrays": [[154, "input-arrays"]], "out Argument": [[154, "out-argument"]], "dtype and device arguments": [[154, "dtype-and-device-arguments"]], "Numbers in Operator Functions": [[154, "numbers-in-operator-functions"]], "Integer Sequences": [[154, "integer-sequences"]], "Function Types": [[155, "function-types"]], "Primary Functions": [[155, "primary-functions"]], "Compositional Functions": [[155, "compositional-functions"]], "Mixed Functions": [[155, "mixed-functions"]], "Standalone Functions": [[155, "standalone-functions"]], "Convenience Functions": [[155, "convenience-functions"]], "Function Wrapping": [[156, "function-wrapping"]], "Inplace Updates": [[157, "inplace-updates"]], "out argument": [[157, "out-argument"]], "copy argument": [[157, "copy-argument"]], "Ivy Frontends": [[158, "ivy-frontends"]], "The Frontend Basics": [[158, "the-frontend-basics"]], "Unused Arguments": [[158, "unused-arguments"]], "Compositions": [[158, "compositions"]], "Missing Ivy Functions and Complex Data Types": [[158, "missing-ivy-functions-and-complex-data-types"]], "Temporary Compositions": [[158, "temporary-compositions"]], "Supported Data Types and Devices": [[158, "supported-data-types-and-devices"]], "Classes and Instance Methods": [[158, "classes-and-instance-methods"]], "Frontend Data Type Promotion Rules": [[158, "frontend-data-type-promotion-rules"]], "NumPy Special Argument - Casting": [[158, "numpy-special-argument-casting"]], "Frontends Duplicate Policy": [[158, "frontends-duplicate-policy"]], "Frontend Test Examples": [[159, "frontend-test-examples"]], "ivy.tan()": [[159, "ivy-tan"]], "ivy.full()": [[159, "ivy-full"]], "Alias functions": [[159, "alias-functions"]], "Frontend Instance Method Tests": [[159, "frontend-instance-method-tests"]], "Frontend Instance Method Test Examples": [[159, "frontend-instance-method-test-examples"]], "ivy.add()": [[159, "ivy-add"]], "Hypothesis Helpers": [[159, "hypothesis-helpers"]], "Testing Pipeline": [[160, "testing-pipeline"]], "Hypothesis": [[160, "id2"]], "Data Generation": [[160, "id3"]], "Writing your own strategy": [[160, "writing-your-own-strategy"]], "Writing Hypothesis Test": [[160, "writing-hypothesis-test"]], "Ivy Test Decorators": [[160, "ivy-test-decorators"]], "Writing Ivy Tests": [[160, "writing-ivy-tests"]], "Integration of Strategies into Ivy Tests": [[160, "integration-of-strategies-into-ivy-tests"]], "Why do we need helper functions": [[160, "why-do-we-need-helper-functions"]], "How to write Hypothesis Tests effectively": [[160, "how-to-write-hypothesis-tests-effectively"]], "Bonus: Hypothesis\u2019 Extended Features": [[160, "bonus-hypothesis-extended-features"]], "Self-Consistent and Explicit Testing": [[160, "self-consistent-and-explicit-testing"]], "test_array_function": [[160, "id6"]], "Running Ivy Tests": [[160, "running-ivy-tests"]], "Re-Running Failed Ivy Tests": [[160, "re-running-failed-ivy-tests"]], "Navigating the Code": [[161, "navigating-the-code"]], "Categorization": [[161, "categorization"]], "Submodule Design": [[161, "submodule-design"]], "Ivy API": [[161, "ivy-api"]], "Backend API": [[161, "backend-api"]], "Submodule Helper Functions": [[161, "submodule-helper-functions"]], "Version Pinning": [[161, "version-pinning"]], "Superset Behaviour": [[162, "superset-behaviour"]], "Extending the Standard": [[162, "extending-the-standard"]], "What is the Superset?": [[162, "what-is-the-superset"]], "A Non-Duplicate Superset": [[162, "a-non-duplicate-superset"]], "What is not the Superset?": [[162, "what-is-not-the-superset"]], "When the Superset is Too Much": [[162, "when-the-superset-is-too-much"]], "Balancing Generalization with Efficiency": [[162, "balancing-generalization-with-efficiency"]], "More Examples": [[162, "more-examples"]], "Design": [[163, "design"], [1969, "design"]], "Building Blocks": [[164, "building-blocks"]], "Backend Functional APIs \u2705": [[164, "backend-functional-apis"]], "Ivy Functional API \u2705": [[164, "ivy-functional-api"]], "Backend Handler \u2705": [[164, "backend-handler"]], "Graph Compiler \ud83d\udea7": [[164, "graph-compiler"]], "Ivy as a Framework": [[165, "ivy-as-a-framework"]], "The Array Class": [[166, "the-array-class"]], "Unifying Operators": [[166, "unifying-operators"]], "API Monkey Patching": [[166, "api-monkey-patching"]], "Instance Methods": [[166, "instance-methods"]], "Ivy Container": [[167, "ivy-container"]], "Construction": [[167, "construction"]], "Representation": [[167, "representation"]], "Recursive Methods": [[167, "recursive-methods"]], "Built-ins": [[167, "built-ins"]], "Access": [[167, "access"]], "Saving and Loading": [[167, "saving-and-loading"]], "Comparisons": [[167, "comparisons"]], "Customized Representations": [[167, "customized-representations"]], "Use Cases": [[167, "use-cases"]], "Compartmentalization": [[167, "compartmentalization"]], "Configuration": [[167, "configuration"]], "Data loading": [[167, "data-loading"]], "Network weights": [[167, "network-weights"]], "Ivy Stateful API": [[168, "ivy-stateful-api"]], "Modules": [[168, "modules"]], "Initializers": [[168, "initializers"], [1997, "module-ivy.stateful.initializers"]], "Optimizers": [[168, "optimizers"], [2025, "module-ivy.stateful.optimizers"]], "Ivy as a Transpiler": [[169, "ivy-as-a-transpiler"]], "Frontend Functional APIs \ud83d\udea7": [[169, "frontend-functional-apis"]], "Role of the Graph Compiler \ud83d\udea7": [[169, "role-of-the-graph-compiler"]], "Converting Network Models \ud83d\udea7": [[169, "converting-network-models"]], "Ivy": [[170, "ivy"]], "Ivy builder": [[171, "ivy-builder"]], "Ivy ecosystem": [[172, "ivy-ecosystem"]], "Ivy gym": [[173, "ivy-gym"]], "Ivy mech": [[174, "ivy-mech"]], "Ivy memory": [[175, "ivy-memory"]], "Ivy models": [[176, "ivy-models"]], "Ivy robot": [[177, "ivy-robot"]], "Ivy vision": [[178, "ivy-vision"]], "Extensions": [[179, "extensions"], [1969, "extensions"]], "Ivy Mechanics": [[180, "ivy-mechanics"]], "Ivy Vision": [[180, "ivy-vision"]], "Ivy Robot": [[180, "ivy-robot"]], "Ivy Gym": [[180, "ivy-gym"]], "Ivy Memory": [[180, "ivy-memory"]], "FAQ": [[181, "faq"]], "Maintaining Backend Versions": [[181, "maintaining-backend-versions"]], "Dynamic Sizes": [[181, "dynamic-sizes"]], "Type and Shape Checking": [[181, "type-and-shape-checking"]], "GPU handling": [[181, "gpu-handling"]], "Model Deployment": [[181, "model-deployment"]], "Dynamic Control Flow": [[181, "dynamic-control-flow"]], "Auto-Differentiation": [[181, "auto-differentiation"]], "Replicas, and Data vs Model Parallelism": [[181, "replicas-and-data-vs-model-parallelism"]], "Support for Functions": [[181, "support-for-functions"]], "Alternative Data Structures": [[181, "alternative-data-structures"]], "Custom Operations": [[181, "custom-operations"]], "The Pipeline": [[181, "the-pipeline"]], "State": [[181, "state"]], "Func wrapper": [[182, "module-ivy.func_wrapper"]], "custom_handle_nestable": [[183, "custom-handle-nestable"]], "handle_array_like": [[184, "handle-array-like"]], "handle_nans": [[185, "handle-nans"]], "handle_nestable": [[186, "handle-nestable"]], "handle_out_argument": [[187, "handle-out-argument"]], "infer_device": [[188, "infer-device"]], "infer_dtype": [[189, "infer-dtype"]], "inputs_to_ivy_arrays": [[190, "inputs-to-ivy-arrays"]], "inputs_to_native_arrays": [[191, "inputs-to-native-arrays"]], "integer_arrays_to_float": [[192, "integer-arrays-to-float"]], "outputs_to_ivy_arrays": [[193, "outputs-to-ivy-arrays"]], "to_native_arrays_and_back": [[194, "to-native-arrays-and-back"]], "deserialize": [[197, "deserialize"]], "gelu": [[198, "gelu"]], "ivy.Array.gelu": [[199, "ivy-array-gelu"]], "ivy.Container.gelu": [[200, "ivy-container-gelu"]], "ivy.gelu": [[201, "ivy-gelu"]], "ivy.Container.static_gelu": [[202, "ivy-container-static-gelu"]], "get": [[203, "get"]], "leaky_relu": [[204, "leaky-relu"]], "ivy.Array.leaky_relu": [[205, "ivy-array-leaky-relu"]], "ivy.Container.leaky_relu": [[206, "ivy-container-leaky-relu"]], "ivy.leaky_relu": [[207, "ivy-leaky-relu"]], "ivy.Container.static_leaky_relu": [[208, "ivy-container-static-leaky-relu"]], "log_softmax": [[209, "log-softmax"]], "ivy.Array.log_softmax": [[210, "ivy-array-log-softmax"]], "ivy.Container.log_softmax": [[211, "ivy-container-log-softmax"]], "ivy.log_softmax": [[212, "ivy-log-softmax"]], "ivy.Container.static_log_softmax": [[213, "ivy-container-static-log-softmax"]], "relu": [[214, "relu"]], "ivy.Array.relu": [[215, "ivy-array-relu"]], "ivy.Container.relu": [[216, "ivy-container-relu"]], "ivy.relu": [[217, "ivy-relu"]], "ivy.Container.static_relu": [[218, "ivy-container-static-relu"]], "sigmoid": [[219, "sigmoid"]], "ivy.Array.sigmoid": [[220, "ivy-array-sigmoid"]], "ivy.Container.sigmoid": [[221, "ivy-container-sigmoid"]], "ivy.sigmoid": [[222, "ivy-sigmoid"]], "ivy.Container.static_sigmoid": [[223, "ivy-container-static-sigmoid"]], "softmax": [[224, "softmax"]], "ivy.Array.softmax": [[225, "ivy-array-softmax"]], "ivy.Container.softmax": [[226, "ivy-container-softmax"]], "ivy.softmax": [[227, "ivy-softmax"]], "ivy.Container.static_softmax": [[228, "ivy-container-static-softmax"]], "softplus": [[229, "softplus"]], "ivy.Array.softplus": [[230, "ivy-array-softplus"]], "ivy.Container.softplus": [[231, "ivy-container-softplus"]], "ivy.softplus": [[232, "ivy-softplus"]], "ivy.Container.static_softplus": [[233, "ivy-container-static-softplus"]], "Compilation": [[234, "module-ivy.functional.ivy.compilation"], [832, "module-ivy.functional.ivy.experimental.compilation"]], "compile": [[235, "compile"]], "Constants": [[236, "module-ivy.functional.ivy.constants"], [833, "module-ivy.functional.ivy.experimental.constants"]], "Note": [[237, null], [261, null], [264, null]], "NestedSequence": [[238, "nestedsequence"]], "arange": [[239, "arange"]], "ivy.arange": [[240, "ivy-arange"]], "ivy.Container.static_arange": [[241, "ivy-container-static-arange"]], "asarray": [[242, "asarray"]], "ivy.Array.asarray": [[243, "ivy-array-asarray"]], "ivy.asarray": [[244, "ivy-asarray"]], "ivy.Container.static_asarray": [[245, "ivy-container-static-asarray"]], "asarray_handle_nestable": [[246, "asarray-handle-nestable"]], "asarray_infer_device": [[247, "asarray-infer-device"]], "asarray_to_native_arrays_and_back": [[248, "asarray-to-native-arrays-and-back"]], "copy_array": [[249, "copy-array"]], "ivy.Array.copy_array": [[250, "ivy-array-copy-array"]], "ivy.copy_array": [[251, "ivy-copy-array"]], "empty": [[252, "empty"]], "empty_like": [[253, "empty-like"]], "ivy.Array.empty_like": [[254, "ivy-array-empty-like"]], "ivy.Container.empty_like": [[255, "ivy-container-empty-like"]], "ivy.empty_like": [[256, "ivy-empty-like"]], "ivy.Container.static_empty_like": [[257, "ivy-container-static-empty-like"]], "eye": [[258, "eye"]], "ivy.eye": [[259, "ivy-eye"]], "ivy.Container.static_eye": [[260, "ivy-container-static-eye"]], "from_dlpack": [[261, "from-dlpack"]], "ivy.Array.from_dlpack": [[262, "ivy-array-from-dlpack"]], "ivy.Container.from_dlpack": [[263, "ivy-container-from-dlpack"]], "ivy.from_dlpack": [[264, "ivy-from-dlpack"]], "ivy.Container.static_from_dlpack": [[265, "ivy-container-static-from-dlpack"]], "full": [[266, "full"]], "full_like": [[267, "full-like"]], "ivy.Array.full_like": [[268, "ivy-array-full-like"]], "ivy.Container.full_like": [[269, "ivy-container-full-like"]], "ivy.full_like": [[270, "ivy-full-like"]], "ivy.Container.static_full_like": [[271, "ivy-container-static-full-like"]], "linspace": [[272, "linspace"]], "ivy.Array.linspace": [[273, "ivy-array-linspace"]], "ivy.Container.linspace": [[274, "ivy-container-linspace"]], "ivy.linspace": [[275, "ivy-linspace"]], "ivy.Container.static_linspace": [[276, "ivy-container-static-linspace"]], "logspace": [[277, "logspace"]], "ivy.Array.logspace": [[278, "ivy-array-logspace"]], "ivy.Container.logspace": [[279, "ivy-container-logspace"]], "ivy.logspace": [[280, "ivy-logspace"]], "ivy.Container.static_logspace": [[281, "ivy-container-static-logspace"]], "meshgrid": [[282, "meshgrid"]], "ivy.Array.meshgrid": [[283, "ivy-array-meshgrid"]], "ivy.Container.meshgrid": [[284, "ivy-container-meshgrid"]], "ivy.meshgrid": [[285, "ivy-meshgrid"]], "ivy.Container.static_meshgrid": [[286, "ivy-container-static-meshgrid"]], "native_array": [[287, "native-array"]], "ivy.Array.native_array": [[288, "ivy-array-native-array"]], "ivy.Container.native_array": [[289, "ivy-container-native-array"]], "ivy.native_array": [[290, "ivy-native-array"]], "ivy.Container.static_native_array": [[291, "ivy-container-static-native-array"]], "one_hot": [[292, "one-hot"]], "ivy.Array.one_hot": [[293, "ivy-array-one-hot"]], "ivy.Container.one_hot": [[294, "ivy-container-one-hot"]], "ivy.one_hot": [[295, "ivy-one-hot"]], "ivy.Container.static_one_hot": [[296, "ivy-container-static-one-hot"]], "ones": [[297, "ones"]], "ivy.ones": [[298, "ivy-ones"]], "ivy.Container.static_ones": [[299, "ivy-container-static-ones"]], "ones_like": [[300, "ones-like"]], "ivy.Array.ones_like": [[301, "ivy-array-ones-like"]], "ivy.Container.ones_like": [[302, "ivy-container-ones-like"]], "ivy.ones_like": [[303, "ivy-ones-like"]], "ivy.Container.static_ones_like": [[304, "ivy-container-static-ones-like"]], "tril": [[305, "tril"]], "ivy.Container.static_tril": [[306, "ivy-container-static-tril"]], "ivy.Array.tril": [[307, "ivy-array-tril"]], "ivy.Container.tril": [[308, "ivy-container-tril"]], "ivy.tril": [[309, "ivy-tril"]], "triu": [[310, "triu"]], "ivy.Container.static_triu": [[311, "ivy-container-static-triu"]], "ivy.Array.triu": [[312, "ivy-array-triu"]], "ivy.Container.triu": [[313, "ivy-container-triu"]], "ivy.triu": [[314, "ivy-triu"]], "zeros": [[315, "zeros"]], "ivy.Container.static_zeros": [[316, "ivy-container-static-zeros"]], "ivy.zeros": [[317, "ivy-zeros"]], "zeros_like": [[318, "zeros-like"]], "ivy.Container.static_zeros_like": [[319, "ivy-container-static-zeros-like"]], "ivy.Array.zeros_like": [[320, "ivy-array-zeros-like"]], "ivy.Container.zeros_like": [[321, "ivy-container-zeros-like"]], "ivy.zeros_like": [[322, "ivy-zeros-like"]], "DefaultDtype": [[324, "defaultdtype"]], "DefaultFloatDtype": [[325, "defaultfloatdtype"]], "DefaultIntDtype": [[326, "defaultintdtype"]], "DefaultUintDtype": [[327, "defaultuintdtype"]], "as_ivy_dtype": [[328, "as-ivy-dtype"]], "as_native_dtype": [[329, "as-native-dtype"]], "astype": [[330, "astype"]], "ivy.Array.astype": [[331, "ivy-array-astype"]], "ivy.Container.astype": [[332, "ivy-container-astype"]], "ivy.astype": [[333, "ivy-astype"]], "ivy.Container.static_astype": [[334, "ivy-container-static-astype"]], "broadcast_arrays": [[335, "broadcast-arrays"]], "ivy.Array.broadcast_arrays": [[336, "ivy-array-broadcast-arrays"]], "ivy.Container.broadcast_arrays": [[337, "ivy-container-broadcast-arrays"]], "ivy.broadcast_arrays": [[338, "ivy-broadcast-arrays"]], "ivy.Container.static_broadcast_arrays": [[339, "ivy-container-static-broadcast-arrays"]], "broadcast_to": [[340, "broadcast-to"]], "ivy.Array.broadcast_to": [[341, "ivy-array-broadcast-to"]], "ivy.Container.broadcast_to": [[342, "ivy-container-broadcast-to"]], "ivy.broadcast_to": [[343, "ivy-broadcast-to"]], "ivy.Container.static_broadcast_to": [[344, "ivy-container-static-broadcast-to"]], "can_cast": [[345, "can-cast"]], "ivy.Array.can_cast": [[346, "ivy-array-can-cast"]], "ivy.Container.can_cast": [[347, "ivy-container-can-cast"]], "ivy.can_cast": [[348, "ivy-can-cast"]], "ivy.Container.static_can_cast": [[349, "ivy-container-static-can-cast"]], "check_float": [[350, "check-float"]], "closest_valid_dtype": [[351, "closest-valid-dtype"]], "default_dtype": [[352, "default-dtype"]], "default_float_dtype": [[353, "default-float-dtype"]], "ivy.default_float_dtype": [[354, "ivy-default-float-dtype"]], "ivy.Container.static_default_float_dtype": [[355, "ivy-container-static-default-float-dtype"]], "default_int_dtype": [[356, "default-int-dtype"]], "default_uint_dtype": [[357, "default-uint-dtype"]], "dtype": [[358, "dtype"]], "ivy.Container.dtype": [[359, "ivy-container-dtype"]], "ivy.dtype": [[360, "ivy-dtype"]], "ivy.Container.static_dtype": [[361, "ivy-container-static-dtype"]], "dtype_bits": [[362, "dtype-bits"]], "finfo": [[363, "finfo"]], "ivy.Array.finfo": [[364, "ivy-array-finfo"]], "ivy.Container.finfo": [[365, "ivy-container-finfo"]], "ivy.finfo": [[366, "ivy-finfo"]], "ivy.Container.static_finfo": [[367, "ivy-container-static-finfo"]], "function_supported_dtypes": [[368, "function-supported-dtypes"]], "ivy.function_supported_dtypes": [[369, "ivy-function-supported-dtypes"]], "ivy.Container.static_function_supported_dtypes": [[370, "ivy-container-static-function-supported-dtypes"]], "function_unsupported_dtypes": [[371, "function-unsupported-dtypes"]], "ivy.function_unsupported_dtypes": [[372, "ivy-function-unsupported-dtypes"]], "ivy.Container.static_function_unsupported_dtypes": [[373, "ivy-container-static-function-unsupported-dtypes"]], "iinfo": [[374, "iinfo"]], "ivy.Array.iinfo": [[375, "ivy-array-iinfo"]], "ivy.Container.iinfo": [[376, "ivy-container-iinfo"]], "ivy.iinfo": [[377, "ivy-iinfo"]], "ivy.Container.static_iinfo": [[378, "ivy-container-static-iinfo"]], "infer_default_dtype": [[379, "infer-default-dtype"]], "invalid_dtype": [[380, "invalid-dtype"]], "is_bool_dtype": [[381, "is-bool-dtype"]], "ivy.Array.is_bool_dtype": [[382, "ivy-array-is-bool-dtype"]], "ivy.Container.is_bool_dtype": [[383, "ivy-container-is-bool-dtype"]], "ivy.is_bool_dtype": [[384, "ivy-is-bool-dtype"]], "ivy.Container.static_is_bool_dtype": [[385, "ivy-container-static-is-bool-dtype"]], "is_float_dtype": [[386, "is-float-dtype"]], "ivy.Array.is_float_dtype": [[387, "ivy-array-is-float-dtype"]], "ivy.Container.is_float_dtype": [[388, "ivy-container-is-float-dtype"]], "ivy.is_float_dtype": [[389, "ivy-is-float-dtype"]], "ivy.Container.static_is_float_dtype": [[390, "ivy-container-static-is-float-dtype"]], "is_int_dtype": [[391, "is-int-dtype"]], "ivy.Array.is_int_dtype": [[392, "ivy-array-is-int-dtype"]], "ivy.Container.is_int_dtype": [[393, "ivy-container-is-int-dtype"]], "ivy.is_int_dtype": [[394, "ivy-is-int-dtype"]], "ivy.Container.static_is_int_dtype": [[395, "ivy-container-static-is-int-dtype"]], "is_uint_dtype": [[396, "is-uint-dtype"]], "ivy.Array.is_uint_dtype": [[397, "ivy-array-is-uint-dtype"]], "ivy.Container.is_uint_dtype": [[398, "ivy-container-is-uint-dtype"]], "ivy.is_uint_dtype": [[399, "ivy-is-uint-dtype"]], "ivy.Container.static_is_uint_dtype": [[400, "ivy-container-static-is-uint-dtype"]], "promote_types": [[401, "promote-types"]], "promote_types_of_inputs": [[402, "promote-types-of-inputs"]], "result_type": [[403, "result-type"]], "ivy.Array.result_type": [[404, "ivy-array-result-type"]], "ivy.Container.result_type": [[405, "ivy-container-result-type"]], "ivy.result_type": [[406, "ivy-result-type"]], "ivy.Container.static_result_type": [[407, "ivy-container-static-result-type"]], "set_default_dtype": [[408, "set-default-dtype"]], "set_default_float_dtype": [[409, "set-default-float-dtype"]], "set_default_int_dtype": [[410, "set-default-int-dtype"]], "set_default_uint_dtype": [[411, "set-default-uint-dtype"]], "type_promote_arrays": [[412, "type-promote-arrays"]], "unset_default_dtype": [[413, "unset-default-dtype"]], "unset_default_float_dtype": [[414, "unset-default-float-dtype"]], "unset_default_int_dtype": [[415, "unset-default-int-dtype"]], "unset_default_uint_dtype": [[416, "unset-default-uint-dtype"]], "valid_dtype": [[417, "valid-dtype"]], "DefaultDevice": [[419, "defaultdevice"]], "Profiler": [[420, "profiler"]], "as_ivy_dev": [[421, "as-ivy-dev"]], "as_native_dev": [[422, "as-native-dev"]], "clear_mem_on_dev": [[423, "clear-mem-on-dev"]], "default_device": [[424, "default-device"]], "dev": [[425, "dev"]], "ivy.Array.dev": [[426, "ivy-array-dev"]], "ivy.Container.dev": [[427, "ivy-container-dev"]], "ivy.dev": [[428, "ivy-dev"]], "ivy.Container.static_dev": [[429, "ivy-container-static-dev"]], "dev_util": [[430, "dev-util"]], "function_supported_devices": [[431, "function-supported-devices"]], "function_unsupported_devices": [[432, "function-unsupported-devices"]], "get_all_ivy_arrays_on_dev": [[433, "get-all-ivy-arrays-on-dev"]], "gpu_is_available": [[434, "gpu-is-available"]], "num_cpu_cores": [[435, "num-cpu-cores"]], "num_gpus": [[436, "num-gpus"]], "num_ivy_arrays_on_dev": [[437, "num-ivy-arrays-on-dev"]], "percent_used_mem_on_dev": [[438, "percent-used-mem-on-dev"]], "print_all_ivy_arrays_on_dev": [[439, "print-all-ivy-arrays-on-dev"]], "set_default_device": [[440, "set-default-device"]], "set_split_factor": [[441, "set-split-factor"]], "split_factor": [[442, "split-factor"]], "split_func_call": [[443, "split-func-call"]], "to_device": [[444, "to-device"]], "ivy.Container.static_to_device": [[445, "ivy-container-static-to-device"]], "ivy.Array.to_device": [[446, "ivy-array-to-device"]], "ivy.Container.to_device": [[447, "ivy-container-to-device"]], "ivy.to_device": [[448, "ivy-to-device"]], "total_mem_on_dev": [[449, "total-mem-on-dev"]], "tpu_is_available": [[450, "tpu-is-available"]], "unset_default_device": [[451, "unset-default-device"]], "used_mem_on_dev": [[452, "used-mem-on-dev"]], "abs": [[454, "abs"]], "ivy.Array.abs": [[455, "ivy-array-abs"]], "ivy.Container.abs": [[456, "ivy-container-abs"]], "ivy.abs": [[457, "ivy-abs"]], "ivy.Container.static_abs": [[458, "ivy-container-static-abs"]], "acos": [[459, "acos"]], "ivy.Array.acos": [[460, "ivy-array-acos"]], "ivy.Container.acos": [[461, "ivy-container-acos"]], "ivy.acos": [[462, "ivy-acos"]], "ivy.Container.static_acos": [[463, "ivy-container-static-acos"]], "acosh": [[464, "acosh"]], "ivy.Array.acosh": [[465, "ivy-array-acosh"]], "ivy.Container.acosh": [[466, "ivy-container-acosh"]], "ivy.acosh": [[467, "ivy-acosh"]], "ivy.Container.static_acosh": [[468, "ivy-container-static-acosh"]], "add": [[469, "add"]], "ivy.Array.add": [[470, "ivy-array-add"]], "ivy.Container.add": [[471, "ivy-container-add"]], "ivy.Container.static_add": [[473, "ivy-container-static-add"]], "asin": [[474, "asin"]], "ivy.Array.asin": [[475, "ivy-array-asin"]], "ivy.Container.asin": [[476, "ivy-container-asin"]], "ivy.asin": [[477, "ivy-asin"]], "ivy.Container.static_asin": [[478, "ivy-container-static-asin"]], "asinh": [[479, "asinh"]], "ivy.Array.asinh": [[480, "ivy-array-asinh"]], "ivy.Container.asinh": [[481, "ivy-container-asinh"]], "ivy.asinh": [[482, "ivy-asinh"]], "ivy.Container.static_asinh": [[483, "ivy-container-static-asinh"]], "atan": [[484, "atan"]], "ivy.Array.atan": [[485, "ivy-array-atan"]], "ivy.Container.atan": [[486, "ivy-container-atan"]], "ivy.atan": [[487, "ivy-atan"]], "ivy.Container.static_atan": [[488, "ivy-container-static-atan"]], "atan2": [[489, "atan2"]], "ivy.Array.atan2": [[490, "ivy-array-atan2"]], "ivy.Container.atan2": [[491, "ivy-container-atan2"]], "ivy.atan2": [[492, "ivy-atan2"]], "ivy.Container.static_atan2": [[493, "ivy-container-static-atan2"]], "atanh": [[494, "atanh"]], "ivy.Array.atanh": [[495, "ivy-array-atanh"]], "ivy.Container.atanh": [[496, "ivy-container-atanh"]], "ivy.atanh": [[497, "ivy-atanh"]], "ivy.Container.static_atanh": [[498, "ivy-container-static-atanh"]], "bitwise_and": [[499, "bitwise-and"]], "ivy.Array.bitwise_and": [[500, "ivy-array-bitwise-and"]], "ivy.Container.bitwise_and": [[501, "ivy-container-bitwise-and"]], "ivy.bitwise_and": [[502, "ivy-bitwise-and"]], "ivy.Container.static_bitwise_and": [[503, "ivy-container-static-bitwise-and"]], "bitwise_invert": [[504, "bitwise-invert"]], "ivy.Array.bitwise_invert": [[505, "ivy-array-bitwise-invert"]], "ivy.Container.bitwise_invert": [[506, "ivy-container-bitwise-invert"]], "ivy.bitwise_invert": [[507, "ivy-bitwise-invert"]], "ivy.Container.static_bitwise_invert": [[508, "ivy-container-static-bitwise-invert"]], "bitwise_left_shift": [[509, "bitwise-left-shift"]], "ivy.Array.bitwise_left_shift": [[510, "ivy-array-bitwise-left-shift"]], "ivy.Container.bitwise_left_shift": [[511, "ivy-container-bitwise-left-shift"]], "ivy.bitwise_left_shift": [[512, "ivy-bitwise-left-shift"]], "ivy.Container.static_bitwise_left_shift": [[513, "ivy-container-static-bitwise-left-shift"]], "bitwise_or": [[514, "bitwise-or"]], "ivy.Array.bitwise_or": [[515, "ivy-array-bitwise-or"]], "ivy.Container.bitwise_or": [[516, "ivy-container-bitwise-or"]], "ivy.bitwise_or": [[517, "ivy-bitwise-or"]], "ivy.Container.static_bitwise_or": [[518, "ivy-container-static-bitwise-or"]], "bitwise_right_shift": [[519, "bitwise-right-shift"]], "ivy.Array.bitwise_right_shift": [[520, "ivy-array-bitwise-right-shift"]], "ivy.Container.bitwise_right_shift": [[521, "ivy-container-bitwise-right-shift"]], "ivy.bitwise_right_shift": [[522, "ivy-bitwise-right-shift"]], "ivy.Container.static_bitwise_right_shift": [[523, "ivy-container-static-bitwise-right-shift"]], "bitwise_xor": [[524, "bitwise-xor"]], "ivy.Array.bitwise_xor": [[525, "ivy-array-bitwise-xor"]], "ivy.Container.bitwise_xor": [[526, "ivy-container-bitwise-xor"]], "ivy.bitwise_xor": [[527, "ivy-bitwise-xor"]], "ivy.Container.static_bitwise_xor": [[528, "ivy-container-static-bitwise-xor"]], "ceil": [[529, "ceil"]], "ivy.Array.ceil": [[530, "ivy-array-ceil"]], "ivy.Container.ceil": [[531, "ivy-container-ceil"]], "ivy.ceil": [[532, "ivy-ceil"]], "ivy.Container.static_ceil": [[533, "ivy-container-static-ceil"]], "cos": [[534, "cos"]], "ivy.Array.cos": [[535, "ivy-array-cos"]], "ivy.Container.cos": [[536, "ivy-container-cos"]], "ivy.cos": [[537, "ivy-cos"]], "ivy.Container.static_cos": [[538, "ivy-container-static-cos"]], "cosh": [[539, "cosh"]], "ivy.Array.cosh": [[540, "ivy-array-cosh"]], "ivy.Container.cosh": [[541, "ivy-container-cosh"]], "ivy.cosh": [[542, "ivy-cosh"]], "ivy.Container.static_cosh": [[543, "ivy-container-static-cosh"]], "deg2rad": [[544, "deg2rad"]], "ivy.Array.deg2rad": [[545, "ivy-array-deg2rad"]], "ivy.Container.deg2rad": [[546, "ivy-container-deg2rad"]], "ivy.deg2rad": [[547, "ivy-deg2rad"]], "ivy.Container.static_deg2rad": [[548, "ivy-container-static-deg2rad"]], "divide": [[549, "divide"]], "ivy.Array.divide": [[550, "ivy-array-divide"]], "ivy.Container.divide": [[551, "ivy-container-divide"]], "ivy.divide": [[552, "ivy-divide"]], "ivy.Container.static_divide": [[553, "ivy-container-static-divide"]], "equal": [[554, "equal"]], "ivy.Array.equal": [[555, "ivy-array-equal"]], "ivy.Container.equal": [[556, "ivy-container-equal"]], "ivy.equal": [[557, "ivy-equal"]], "ivy.Container.static_equal": [[558, "ivy-container-static-equal"]], "erf": [[559, "erf"]], "ivy.Array.erf": [[560, "ivy-array-erf"]], "ivy.Container.erf": [[561, "ivy-container-erf"]], "ivy.erf": [[562, "ivy-erf"]], "ivy.Container.static_erf": [[563, "ivy-container-static-erf"]], "exp": [[564, "exp"]], "ivy.Array.exp": [[565, "ivy-array-exp"]], "ivy.Container.exp": [[566, "ivy-container-exp"]], "ivy.exp": [[567, "ivy-exp"]], "ivy.Container.static_exp": [[568, "ivy-container-static-exp"]], "expm1": [[569, "expm1"]], "ivy.Array.expm1": [[570, "ivy-array-expm1"]], "ivy.Container.expm1": [[571, "ivy-container-expm1"]], "ivy.expm1": [[572, "ivy-expm1"]], "ivy.Container.static_expm1": [[573, "ivy-container-static-expm1"]], "floor": [[574, "floor"]], "ivy.Array.floor": [[575, "ivy-array-floor"]], "ivy.Container.floor": [[576, "ivy-container-floor"]], "ivy.floor": [[577, "ivy-floor"]], "ivy.Container.static_floor": [[578, "ivy-container-static-floor"]], "floor_divide": [[579, "floor-divide"]], "ivy.Array.floor_divide": [[580, "ivy-array-floor-divide"]], "ivy.Container.floor_divide": [[581, "ivy-container-floor-divide"]], "ivy.floor_divide": [[582, "ivy-floor-divide"]], "ivy.Container.static_floor_divide": [[583, "ivy-container-static-floor-divide"]], "greater": [[584, "greater"]], "ivy.Array.greater": [[585, "ivy-array-greater"]], "ivy.Container.greater": [[586, "ivy-container-greater"]], "ivy.greater": [[587, "ivy-greater"]], "ivy.Container.static_greater": [[588, "ivy-container-static-greater"]], "greater_equal": [[589, "greater-equal"]], "ivy.Array.greater_equal": [[590, "ivy-array-greater-equal"]], "ivy.Container.greater_equal": [[591, "ivy-container-greater-equal"]], "ivy.greater_equal": [[592, "ivy-greater-equal"]], "ivy.Container.static_greater_equal": [[593, "ivy-container-static-greater-equal"]], "isfinite": [[594, "isfinite"]], "ivy.Array.isfinite": [[595, "ivy-array-isfinite"]], "ivy.Container.isfinite": [[596, "ivy-container-isfinite"]], "ivy.isfinite": [[597, "ivy-isfinite"]], "ivy.Container.static_isfinite": [[598, "ivy-container-static-isfinite"]], "isinf": [[599, "isinf"]], "ivy.Array.isinf": [[600, "ivy-array-isinf"]], "ivy.Container.isinf": [[601, "ivy-container-isinf"]], "ivy.isinf": [[602, "ivy-isinf"]], "ivy.Container.static_isinf": [[603, "ivy-container-static-isinf"]], "isnan": [[604, "isnan"]], "ivy.Array.isnan": [[605, "ivy-array-isnan"]], "ivy.Container.isnan": [[606, "ivy-container-isnan"]], "ivy.isnan": [[607, "ivy-isnan"]], "ivy.Container.static_isnan": [[608, "ivy-container-static-isnan"]], "isreal": [[609, "isreal"]], "ivy.Array.isreal": [[610, "ivy-array-isreal"]], "ivy.Container.isreal": [[611, "ivy-container-isreal"]], "ivy.isreal": [[612, "ivy-isreal"]], "ivy.Container.static_isreal": [[613, "ivy-container-static-isreal"]], "less": [[614, "less"]], "ivy.Array.less": [[615, "ivy-array-less"]], "ivy.Container.less": [[616, "ivy-container-less"]], "ivy.less": [[617, "ivy-less"]], "ivy.Container.static_less": [[618, "ivy-container-static-less"]], "less_equal": [[619, "less-equal"]], "ivy.Array.less_equal": [[620, "ivy-array-less-equal"]], "ivy.Container.less_equal": [[621, "ivy-container-less-equal"]], "ivy.less_equal": [[622, "ivy-less-equal"]], "ivy.Container.static_less_equal": [[623, "ivy-container-static-less-equal"]], "log": [[624, "log"]], "ivy.Array.log": [[625, "ivy-array-log"]], "ivy.Container.log": [[626, "ivy-container-log"]], "ivy.log": [[627, "ivy-log"]], "ivy.Container.static_log": [[628, "ivy-container-static-log"]], "log10": [[629, "log10"]], "ivy.Array.log10": [[630, "ivy-array-log10"]], "ivy.Container.log10": [[631, "ivy-container-log10"]], "ivy.log10": [[632, "ivy-log10"]], "ivy.Container.static_log10": [[633, "ivy-container-static-log10"]], "log1p": [[634, "log1p"]], "ivy.Array.log1p": [[635, "ivy-array-log1p"]], "ivy.Container.log1p": [[636, "ivy-container-log1p"]], "ivy.log1p": [[637, "ivy-log1p"]], "ivy.Container.static_log1p": [[638, "ivy-container-static-log1p"]], "log2": [[639, "log2"]], "ivy.Array.log2": [[640, "ivy-array-log2"]], "ivy.Container.log2": [[641, "ivy-container-log2"]], "ivy.log2": [[642, "ivy-log2"]], "ivy.Container.static_log2": [[643, "ivy-container-static-log2"]], "logaddexp": [[644, "logaddexp"]], "ivy.Array.logaddexp": [[645, "ivy-array-logaddexp"]], "ivy.Container.logaddexp": [[646, "ivy-container-logaddexp"]], "ivy.logaddexp": [[647, "ivy-logaddexp"]], "ivy.Container.static_logaddexp": [[648, "ivy-container-static-logaddexp"]], "logical_and": [[649, "logical-and"]], "ivy.Array.logical_and": [[650, "ivy-array-logical-and"]], "ivy.Container.logical_and": [[651, "ivy-container-logical-and"]], "ivy.logical_and": [[652, "ivy-logical-and"]], "ivy.Container.static_logical_and": [[653, "ivy-container-static-logical-and"]], "logical_not": [[654, "logical-not"]], "ivy.Array.logical_not": [[655, "ivy-array-logical-not"]], "ivy.Container.logical_not": [[656, "ivy-container-logical-not"]], "ivy.logical_not": [[657, "ivy-logical-not"]], "ivy.Container.static_logical_not": [[658, "ivy-container-static-logical-not"]], "logical_or": [[659, "logical-or"]], "ivy.Array.logical_or": [[660, "ivy-array-logical-or"]], "ivy.Container.logical_or": [[661, "ivy-container-logical-or"]], "ivy.logical_or": [[662, "ivy-logical-or"]], "ivy.Container.static_logical_or": [[663, "ivy-container-static-logical-or"]], "logical_xor": [[664, "logical-xor"]], "ivy.Array.logical_xor": [[665, "ivy-array-logical-xor"]], "ivy.Container.logical_xor": [[666, "ivy-container-logical-xor"]], "ivy.logical_xor": [[667, "ivy-logical-xor"]], "ivy.Container.static_logical_xor": [[668, "ivy-container-static-logical-xor"]], "maximum": [[669, "maximum"]], "ivy.Array.maximum": [[670, "ivy-array-maximum"]], "ivy.Container.maximum": [[671, "ivy-container-maximum"]], "ivy.maximum": [[672, "ivy-maximum"]], "ivy.Container.static_maximum": [[673, "ivy-container-static-maximum"]], "minimum": [[674, "minimum"]], "ivy.Array.minimum": [[675, "ivy-array-minimum"]], "ivy.Container.minimum": [[676, "ivy-container-minimum"]], "ivy.minimum": [[677, "ivy-minimum"]], "ivy.Container.static_minimum": [[678, "ivy-container-static-minimum"]], "multiply": [[679, "multiply"]], "ivy.Array.multiply": [[680, "ivy-array-multiply"]], "ivy.Container.multiply": [[681, "ivy-container-multiply"]], "ivy.multiply": [[682, "ivy-multiply"]], "ivy.Container.static_multiply": [[683, "ivy-container-static-multiply"]], "negative": [[684, "negative"]], "ivy.Array.negative": [[685, "ivy-array-negative"]], "ivy.Container.negative": [[686, "ivy-container-negative"]], "ivy.negative": [[687, "ivy-negative"]], "ivy.Container.static_negative": [[688, "ivy-container-static-negative"]], "not_equal": [[689, "not-equal"]], "ivy.Array.not_equal": [[690, "ivy-array-not-equal"]], "ivy.Container.not_equal": [[691, "ivy-container-not-equal"]], "ivy.not_equal": [[692, "ivy-not-equal"]], "ivy.Container.static_not_equal": [[693, "ivy-container-static-not-equal"]], "positive": [[694, "positive"]], "ivy.Array.positive": [[695, "ivy-array-positive"]], "ivy.Container.positive": [[696, "ivy-container-positive"]], "ivy.positive": [[697, "ivy-positive"]], "ivy.Container.static_positive": [[698, "ivy-container-static-positive"]], "pow": [[699, "pow"]], "ivy.Array.pow": [[700, "ivy-array-pow"]], "ivy.Container.pow": [[701, "ivy-container-pow"]], "ivy.pow": [[702, "ivy-pow"]], "ivy.Container.static_pow": [[703, "ivy-container-static-pow"]], "rad2deg": [[704, "rad2deg"]], "ivy.Array.rad2deg": [[705, "ivy-array-rad2deg"]], "ivy.Container.rad2deg": [[706, "ivy-container-rad2deg"]], "ivy.rad2deg": [[707, "ivy-rad2deg"]], "ivy.Container.static_rad2deg": [[708, "ivy-container-static-rad2deg"]], "reciprocal": [[709, "reciprocal"]], "ivy.Array.reciprocal": [[710, "ivy-array-reciprocal"]], "ivy.Container.reciprocal": [[711, "ivy-container-reciprocal"]], "ivy.reciprocal": [[712, "ivy-reciprocal"]], "ivy.Container.static_reciprocal": [[713, "ivy-container-static-reciprocal"]], "remainder": [[714, "remainder"]], "ivy.Array.remainder": [[715, "ivy-array-remainder"]], "ivy.Container.remainder": [[716, "ivy-container-remainder"]], "ivy.remainder": [[717, "ivy-remainder"]], "ivy.Container.static_remainder": [[718, "ivy-container-static-remainder"]], "round": [[719, "round"]], "ivy.Array.round": [[720, "ivy-array-round"]], "ivy.Container.round": [[721, "ivy-container-round"]], "ivy.round": [[722, "ivy-round"]], "ivy.Container.static_round": [[723, "ivy-container-static-round"]], "sign": [[724, "sign"]], "ivy.Array.sign": [[725, "ivy-array-sign"]], "ivy.Container.sign": [[726, "ivy-container-sign"]], "ivy.sign": [[727, "ivy-sign"]], "ivy.Container.static_sign": [[728, "ivy-container-static-sign"]], "sin": [[729, "sin"]], "ivy.Array.sin": [[730, "ivy-array-sin"]], "ivy.Container.sin": [[731, "ivy-container-sin"]], "ivy.sin": [[732, "ivy-sin"]], "ivy.Container.static_sin": [[733, "ivy-container-static-sin"]], "sinh": [[734, "sinh"]], "ivy.Array.sinh": [[735, "ivy-array-sinh"]], "ivy.Container.sinh": [[736, "ivy-container-sinh"]], "ivy.sinh": [[737, "ivy-sinh"]], "ivy.Container.static_sinh": [[738, "ivy-container-static-sinh"]], "sqrt": [[739, "sqrt"]], "ivy.Array.sqrt": [[740, "ivy-array-sqrt"]], "ivy.Container.sqrt": [[741, "ivy-container-sqrt"]], "ivy.sqrt": [[742, "ivy-sqrt"]], "ivy.Container.static_sqrt": [[743, "ivy-container-static-sqrt"]], "square": [[744, "square"]], "ivy.Array.square": [[745, "ivy-array-square"]], "ivy.Container.square": [[746, "ivy-container-square"]], "ivy.square": [[747, "ivy-square"]], "ivy.Container.static_square": [[748, "ivy-container-static-square"]], "subtract": [[749, "subtract"]], "ivy.Container.static_subtract": [[750, "ivy-container-static-subtract"]], "ivy.Array.subtract": [[751, "ivy-array-subtract"]], "ivy.Container.subtract": [[752, "ivy-container-subtract"]], "ivy.subtract": [[753, "ivy-subtract"]], "tan": [[754, "tan"]], "ivy.Container.static_tan": [[755, "ivy-container-static-tan"]], "ivy.Array.tan": [[756, "ivy-array-tan"]], "ivy.Container.tan": [[757, "ivy-container-tan"]], "tanh": [[759, "tanh"]], "ivy.Container.static_tanh": [[760, "ivy-container-static-tanh"]], "ivy.Array.tanh": [[761, "ivy-array-tanh"]], "ivy.Container.tanh": [[762, "ivy-container-tanh"]], "ivy.tanh": [[763, "ivy-tanh"]], "trunc": [[764, "trunc"]], "ivy.Container.static_trunc": [[765, "ivy-container-static-trunc"]], "ivy.Array.trunc": [[766, "ivy-array-trunc"]], "ivy.Container.trunc": [[767, "ivy-container-trunc"]], "ivy.trunc": [[768, "ivy-trunc"]], "trunc_divide": [[769, "trunc-divide"]], "ivy.Container.static_trunc_divide": [[770, "ivy-container-static-trunc-divide"]], "ivy.Array.trunc_divide": [[771, "ivy-array-trunc-divide"]], "ivy.Container.trunc_divide": [[772, "ivy-container-trunc-divide"]], "ivy.trunc_divide": [[773, "ivy-trunc-divide"]], "NativeSparseArray": [[775, "nativesparsearray"], [1195, "nativesparsearray"]], "SparseArray": [[776, "sparsearray"], [1196, "sparsearray"]], "logit": [[778, "logit"], [1064, "logit"]], "allclose": [[779, "allclose"], [892, "allclose"]], "ivy.Array.allclose": [[780, "ivy-array-allclose"]], "ivy.Container.allclose": [[781, "ivy-container-allclose"]], "ivy.allclose": [[782, "ivy-allclose"]], "ivy.Container.static_allclose": [[783, "ivy-container-static-allclose"]], "angle": [[784, "angle"], [893, "angle"]], "ivy.Array.angle": [[785, "ivy-array-angle"]], "ivy.Container.angle": [[786, "ivy-container-angle"]], "ivy.angle": [[787, "ivy-angle"]], "ivy.Container.static_angle": [[788, "ivy-container-static-angle"]], "atleast_1d": [[789, "atleast-1d"], [1072, "atleast-1d"]], "ivy.Array.atleast_1d": [[790, "ivy-array-atleast-1d"]], "ivy.Container.atleast_1d": [[791, "ivy-container-atleast-1d"]], "ivy.atleast_1d": [[792, "ivy-atleast-1d"]], "ivy.Container.static_atleast_1d": [[793, "ivy-container-static-atleast-1d"]], "atleast_2d": [[794, "atleast-2d"], [1073, "atleast-2d"]], "ivy.Array.atleast_2d": [[795, "ivy-array-atleast-2d"]], "ivy.Container.atleast_2d": [[796, "ivy-container-atleast-2d"]], "ivy.atleast_2d": [[797, "ivy-atleast-2d"]], "ivy.Container.static_atleast_2d": [[798, "ivy-container-static-atleast-2d"]], "atleast_3d": [[799, "atleast-3d"], [1074, "atleast-3d"]], "ivy.Array.atleast_3d": [[800, "ivy-array-atleast-3d"]], "ivy.Container.atleast_3d": [[801, "ivy-container-atleast-3d"]], "ivy.atleast_3d": [[802, "ivy-atleast-3d"]], "ivy.Container.static_atleast_3d": [[803, "ivy-container-static-atleast-3d"]], "avg_pool1d": [[804, "avg-pool1d"], [1039, "avg-pool1d"]], "ivy.Array.avg_pool1d": [[805, "ivy-array-avg-pool1d"]], "ivy.Container.avg_pool1d": [[806, "ivy-container-avg-pool1d"]], "ivy.avg_pool1d": [[807, "ivy-avg-pool1d"]], "ivy.Container.static_avg_pool1d": [[808, "ivy-container-static-avg-pool1d"]], "avg_pool2d": [[809, "avg-pool2d"], [1040, "avg-pool2d"]], "ivy.Array.avg_pool2d": [[810, "ivy-array-avg-pool2d"]], "ivy.Container.avg_pool2d": [[811, "ivy-container-avg-pool2d"]], "ivy.avg_pool2d": [[812, "ivy-avg-pool2d"]], "ivy.Container.static_avg_pool2d": [[813, "ivy-container-static-avg-pool2d"]], "avg_pool3d": [[814, "avg-pool3d"], [1041, "avg-pool3d"]], "ivy.Array.avg_pool3d": [[815, "ivy-array-avg-pool3d"]], "ivy.Container.avg_pool3d": [[816, "ivy-container-avg-pool3d"]], "ivy.avg_pool3d": [[817, "ivy-avg-pool3d"]], "ivy.Container.static_avg_pool3d": [[818, "ivy-container-static-avg-pool3d"]], "beta": [[819, "beta"], [1172, "beta"]], "ivy.Array.beta": [[820, "ivy-array-beta"]], "ivy.Container.beta": [[821, "ivy-container-beta"]], "ivy.beta": [[822, "ivy-beta"]], "ivy.Container.static_beta": [[823, "ivy-container-static-beta"]], "binary_cross_entropy_with_logits": [[824, "binary-cross-entropy-with-logits"], [1070, "binary-cross-entropy-with-logits"]], "ivy.Container.binary_cross_entropy_with_logits": [[825, "ivy-container-binary-cross-entropy-with-logits"]], "ivy.binary_cross_entropy_with_logits": [[826, "ivy-binary-cross-entropy-with-logits"]], "ivy.Container.static_binary_cross_entropy_with_logits": [[827, "ivy-container-static-binary-cross-entropy-with-logits"]], "broadcast_shapes": [[828, "broadcast-shapes"], [1075, "broadcast-shapes"], [2079, "broadcast-shapes"]], "ivy.Container.broadcast_shapes": [[829, "ivy-container-broadcast-shapes"]], "ivy.broadcast_shapes": [[830, "ivy-broadcast-shapes"]], "ivy.Container.static_broadcast_shapes": [[831, "ivy-container-static-broadcast-shapes"]], "copysign": [[834, "copysign"], [894, "copysign"]], "ivy.Array.copysign": [[835, "ivy-array-copysign"]], "ivy.Container.copysign": [[836, "ivy-container-copysign"]], "ivy.copysign": [[837, "ivy-copysign"]], "ivy.Container.static_copysign": [[838, "ivy-container-static-copysign"]], "count_nonzero": [[839, "count-nonzero"], [895, "count-nonzero"]], "ivy.Array.count_nonzero": [[840, "ivy-array-count-nonzero"]], "ivy.Container.count_nonzero": [[841, "ivy-container-count-nonzero"]], "ivy.count_nonzero": [[842, "ivy-count-nonzero"]], "ivy.Container.static_count_nonzero": [[843, "ivy-container-static-count-nonzero"]], "hamming_window": [[845, "hamming-window"], [974, "hamming-window"]], "hann_window": [[846, "hann-window"], [978, "hann-window"]], "kaiser_bessel_derived_window": [[847, "kaiser-bessel-derived-window"], [1025, "kaiser-bessel-derived-window"]], "kaiser_window": [[848, "kaiser-window"], [1029, "kaiser-window"]], "tril_indices": [[849, "tril-indices"], [1219, "tril-indices"]], "triu_indices": [[850, "triu-indices"], [1223, "triu-indices"]], "vorbis_window": [[851, "vorbis-window"], [1233, "vorbis-window"]], "is_native_dtype": [[853, "is-native-dtype"], [1003, "is-native-dtype"]], "dct": [[854, "dct"], [1042, "dct"]], "ivy.Array.dct": [[855, "ivy-array-dct"]], "ivy.Container.dct": [[856, "ivy-container-dct"]], "ivy.dct": [[857, "ivy-dct"]], "ivy.Container.static_dct": [[858, "ivy-container-static-dct"]], "diagflat": [[860, "diagflat"], [1054, "diagflat"]], "ivy.Array.diagflat": [[861, "ivy-array-diagflat"]], "ivy.Container.diagflat": [[862, "ivy-container-diagflat"]], "ivy.diagflat": [[863, "ivy-diagflat"]], "ivy.Container.static_diagflat": [[864, "ivy-container-static-diagflat"]], "diff": [[865, "diff"], [896, "diff"]], "ivy.Array.diff": [[866, "ivy-array-diff"]], "ivy.Container.diff": [[867, "ivy-container-diff"]], "ivy.diff": [[868, "ivy-diff"]], "ivy.Container.static_diff": [[869, "ivy-container-static-diff"]], "dirichlet": [[870, "dirichlet"], [1173, "dirichlet"]], "ivy.Array.dirichlet": [[871, "ivy-array-dirichlet"]], "ivy.Container.dirichlet": [[872, "ivy-container-dirichlet"]], "ivy.dirichlet": [[873, "ivy-dirichlet"]], "ivy.Container.static_dirichlet": [[874, "ivy-container-static-dirichlet"]], "dropout1d": [[875, "dropout1d"], [1043, "dropout1d"]], "dsplit": [[876, "dsplit"], [1076, "dsplit"]], "ivy.Array.dsplit": [[877, "ivy-array-dsplit"]], "ivy.Container.dsplit": [[878, "ivy-container-dsplit"]], "ivy.dsplit": [[879, "ivy-dsplit"]], "ivy.Container.static_dsplit": [[880, "ivy-container-static-dsplit"]], "dstack": [[881, "dstack"], [1077, "dstack"]], "ivy.Array.dstack": [[882, "ivy-array-dstack"]], "ivy.Container.dstack": [[883, "ivy-container-dstack"]], "ivy.dstack": [[884, "ivy-dstack"]], "ivy.Container.static_dstack": [[885, "ivy-container-static-dstack"]], "eig": [[886, "eig"], [1055, "eig"], [1581, "eig"]], "ivy.Array.eig": [[887, "ivy-array-eig"]], "ivy.Container.eig": [[888, "ivy-container-eig"]], "ivy.eig": [[889, "ivy-eig"]], "ivy.Container.static_eig": [[890, "ivy-container-static-eig"]], "exp2": [[897, "exp2"], [917, "exp2"]], "fix": [[898, "fix"], [923, "fix"]], "float_power": [[899, "float-power"], [943, "float-power"]], "fmax": [[900, "fmax"], [948, "fmax"]], "fmod": [[901, "fmod"], [953, "fmod"]], "gcd": [[902, "gcd"], [961, "gcd"]], "gradient": [[903, "gradient"], [968, "gradient"]], "isclose": [[904, "isclose"], [1005, "isclose"]], "isneginf": [[905, "isneginf"], [1015, "isneginf"]], "isposinf": [[906, "isposinf"], [1020, "isposinf"]], "lcm": [[907, "lcm"], [1048, "lcm"]], "logaddexp2": [[908, "logaddexp2"], [1059, "logaddexp2"]], "nan_to_num": [[909, "nan-to-num"], [1135, "nan-to-num"]], "nansum": [[910, "nansum"], [1145, "nansum"]], "nextafter": [[911, "nextafter"], [1155, "nextafter"]], "signbit": [[912, "signbit"], [1182, "signbit"]], "sinc": [[913, "sinc"], [1187, "sinc"]], "trapz": [[914, "trapz"], [1216, "trapz"]], "xlogy": [[915, "xlogy"], [1247, "xlogy"]], "zeta": [[916, "zeta"], [1252, "zeta"]], "ivy.Array.exp2": [[918, "ivy-array-exp2"]], "ivy.Container.exp2": [[919, "ivy-container-exp2"]], "ivy.exp2": [[920, "ivy-exp2"]], "ivy.Container.static_exp2": [[921, "ivy-container-static-exp2"]], "fft": [[922, "fft"], [1044, "fft"]], "ivy.Array.fix": [[924, "ivy-array-fix"]], "ivy.Container.fix": [[925, "ivy-container-fix"]], "ivy.fix": [[926, "ivy-fix"]], "ivy.Container.static_fix": [[927, "ivy-container-static-fix"]], "flatten": [[928, "flatten"], [1078, "flatten"], [2050, "flatten"]], "ivy.Array.flatten": [[929, "ivy-array-flatten"]], "ivy.Container.flatten": [[930, "ivy-container-flatten"]], "ivy.flatten": [[931, "ivy-flatten"]], "ivy.Container.static_flatten": [[932, "ivy-container-static-flatten"]], "fliplr": [[933, "fliplr"], [1079, "fliplr"]], "ivy.Array.fliplr": [[934, "ivy-array-fliplr"]], "ivy.Container.fliplr": [[935, "ivy-container-fliplr"]], "ivy.fliplr": [[936, "ivy-fliplr"]], "ivy.Container.static_fliplr": [[937, "ivy-container-static-fliplr"]], "flipud": [[938, "flipud"], [1080, "flipud"]], "ivy.Array.flipud": [[939, "ivy-array-flipud"]], "ivy.Container.flipud": [[940, "ivy-container-flipud"]], "ivy.flipud": [[941, "ivy-flipud"]], "ivy.Container.static_flipud": [[942, "ivy-container-static-flipud"]], "ivy.Array.float_power": [[944, "ivy-array-float-power"]], "ivy.Container.float_power": [[945, "ivy-container-float-power"]], "ivy.float_power": [[946, "ivy-float-power"]], "ivy.Container.static_float_power": [[947, "ivy-container-static-float-power"]], "ivy.Array.fmax": [[949, "ivy-array-fmax"]], "ivy.Container.fmax": [[950, "ivy-container-fmax"]], "ivy.fmax": [[951, "ivy-fmax"]], "ivy.Container.static_fmax": [[952, "ivy-container-static-fmax"]], "ivy.Array.fmod": [[954, "ivy-array-fmod"]], "ivy.Container.fmod": [[955, "ivy-container-fmod"]], "ivy.fmod": [[956, "ivy-fmod"]], "ivy.Container.static_fmod": [[957, "ivy-container-static-fmod"]], "gamma": [[958, "gamma"], [1174, "gamma"]], "ivy.Array.gamma": [[959, "ivy-array-gamma"]], "ivy.gamma": [[960, "ivy-gamma"]], "ivy.Array.gcd": [[962, "ivy-array-gcd"]], "ivy.Container.gcd": [[963, "ivy-container-gcd"]], "ivy.gcd": [[964, "ivy-gcd"]], "ivy.Container.static_gcd": [[965, "ivy-container-static-gcd"]], "isin": [[967, "isin"], [1010, "isin"]], "ivy.Array.gradient": [[969, "ivy-array-gradient"]], "ivy.Container.gradient": [[970, "ivy-container-gradient"]], "ivy.gradient": [[971, "ivy-gradient"]], "ivy.Container.static_gradient": [[972, "ivy-container-static-gradient"]], "ivy.Container.hamming_window": [[975, "ivy-container-hamming-window"]], "ivy.hamming_window": [[976, "ivy-hamming-window"]], "ivy.Container.static_hamming_window": [[977, "ivy-container-static-hamming-window"]], "ivy.Container.hann_window": [[979, "ivy-container-hann-window"]], "ivy.hann_window": [[980, "ivy-hann-window"]], "ivy.Container.static_hann_window": [[981, "ivy-container-static-hann-window"]], "heaviside": [[982, "heaviside"], [1081, "heaviside"]], "ivy.Array.heaviside": [[983, "ivy-array-heaviside"]], "ivy.Container.heaviside": [[984, "ivy-container-heaviside"]], "ivy.heaviside": [[985, "ivy-heaviside"]], "ivy.Container.static_heaviside": [[986, "ivy-container-static-heaviside"]], "hsplit": [[987, "hsplit"], [1082, "hsplit"]], "ivy.Array.hsplit": [[988, "ivy-array-hsplit"]], "ivy.Container.hsplit": [[989, "ivy-container-hsplit"]], "ivy.hsplit": [[990, "ivy-hsplit"]], "ivy.Container.static_hsplit": [[991, "ivy-container-static-hsplit"]], "hstack": [[992, "hstack"], [1083, "hstack"]], "ivy.Array.hstack": [[993, "ivy-array-hstack"]], "ivy.Container.hstack": [[994, "ivy-container-hstack"]], "ivy.hstack": [[995, "ivy-hstack"]], "ivy.Container.static_hstack": [[996, "ivy-container-static-hstack"]], "i0": [[997, "i0"], [1084, "i0"]], "ivy.Array.i0": [[998, "ivy-array-i0"]], "ivy.Container.i0": [[999, "ivy-container-i0"]], "ivy.i0": [[1000, "ivy-i0"]], "ivy.Container.static_i0": [[1001, "ivy-container-static-i0"]], "is_ivy_sparse_array": [[1002, "is-ivy-sparse-array"], [1197, "is-ivy-sparse-array"]], "is_native_sparse_array": [[1004, "is-native-sparse-array"], [1198, "is-native-sparse-array"]], "ivy.Array.isclose": [[1006, "ivy-array-isclose"]], "ivy.Container.isclose": [[1007, "ivy-container-isclose"]], "ivy.isclose": [[1008, "ivy-isclose"]], "ivy.Container.static_isclose": [[1009, "ivy-container-static-isclose"]], "ivy.Array.isin": [[1011, "ivy-array-isin"]], "ivy.Container.isin": [[1012, "ivy-container-isin"]], "ivy.isin": [[1013, "ivy-isin"]], "ivy.Container.static_isin": [[1014, "ivy-container-static-isin"]], "ivy.Array.isneginf": [[1016, "ivy-array-isneginf"]], "ivy.Container.isneginf": [[1017, "ivy-container-isneginf"]], "ivy.isneginf": [[1018, "ivy-isneginf"]], "ivy.Container.static_isneginf": [[1019, "ivy-container-static-isneginf"]], "ivy.Array.isposinf": [[1021, "ivy-array-isposinf"]], "ivy.Container.isposinf": [[1022, "ivy-container-isposinf"]], "ivy.isposinf": [[1023, "ivy-isposinf"]], "ivy.Container.static_isposinf": [[1024, "ivy-container-static-isposinf"]], "ivy.Container.kaiser_bessel_derived_window": [[1026, "ivy-container-kaiser-bessel-derived-window"]], "ivy.kaiser_bessel_derived_window": [[1027, "ivy-kaiser-bessel-derived-window"]], "ivy.Container.static_kaiser_bessel_derived_window": [[1028, "ivy-container-static-kaiser-bessel-derived-window"]], "ivy.Container.kaiser_window": [[1030, "ivy-container-kaiser-window"]], "ivy.kaiser_window": [[1031, "ivy-kaiser-window"]], "ivy.Container.static_kaiser_window": [[1032, "ivy-container-static-kaiser-window"]], "kron": [[1033, "kron"], [1056, "kron"]], "ivy.Array.kron": [[1034, "ivy-array-kron"]], "ivy.Container.kron": [[1035, "ivy-container-kron"]], "ivy.kron": [[1036, "ivy-kron"]], "ivy.Container.static_kron": [[1037, "ivy-container-static-kron"]], "max_pool1d": [[1045, "max-pool1d"], [1099, "max-pool1d"]], "max_pool2d": [[1046, "max-pool2d"], [1104, "max-pool2d"]], "max_pool3d": [[1047, "max-pool3d"], [1109, "max-pool3d"]], "ivy.Array.lcm": [[1049, "ivy-array-lcm"]], "ivy.Container.lcm": [[1050, "ivy-container-lcm"]], "ivy.lcm": [[1051, "ivy-lcm"]], "ivy.Container.static_lcm": [[1052, "ivy-container-static-lcm"]], "matrix_exp": [[1057, "matrix-exp"], [1094, "matrix-exp"]], "multi_dot": [[1058, "multi-dot"], [1130, "multi-dot"]], "ivy.Array.logaddexp2": [[1060, "ivy-array-logaddexp2"]], "ivy.Container.logaddexp2": [[1061, "ivy-container-logaddexp2"]], "ivy.logaddexp2": [[1062, "ivy-logaddexp2"]], "ivy.Container.static_logaddexp2": [[1063, "ivy-container-static-logaddexp2"]], "ivy.Array.logit": [[1065, "ivy-array-logit"]], "ivy.Container.logit": [[1066, "ivy-container-logit"]], "ivy.logit": [[1067, "ivy-logit"]], "ivy.Container.static_logit": [[1068, "ivy-container-static-logit"]], "moveaxis": [[1085, "moveaxis"], [1120, "moveaxis"]], "ndenumerate": [[1086, "ndenumerate"], [1152, "ndenumerate"]], "ndindex": [[1087, "ndindex"], [1153, "ndindex"]], "pad": [[1088, "pad"], [1161, "pad"]], "rot90": [[1089, "rot90"], [1175, "rot90"]], "take_along_axis": [[1090, "take-along-axis"], [1206, "take-along-axis"]], "top_k": [[1091, "top-k"], [1211, "top-k"]], "vsplit": [[1092, "vsplit"], [1237, "vsplit"]], "vstack": [[1093, "vstack"], [1242, "vstack"]], "ivy.Array.matrix_exp": [[1095, "ivy-array-matrix-exp"]], "ivy.Container.matrix_exp": [[1096, "ivy-container-matrix-exp"]], "ivy.matrix_exp": [[1097, "ivy-matrix-exp"]], "ivy.Container.static_matrix_exp": [[1098, "ivy-container-static-matrix-exp"]], "ivy.Array.max_pool1d": [[1100, "ivy-array-max-pool1d"]], "ivy.Container.max_pool1d": [[1101, "ivy-container-max-pool1d"]], "ivy.max_pool1d": [[1102, "ivy-max-pool1d"]], "ivy.Container.static_max_pool1d": [[1103, "ivy-container-static-max-pool1d"]], "ivy.Array.max_pool2d": [[1105, "ivy-array-max-pool2d"]], "ivy.Container.max_pool2d": [[1106, "ivy-container-max-pool2d"]], "ivy.max_pool2d": [[1107, "ivy-max-pool2d"]], "ivy.Container.static_max_pool2d": [[1108, "ivy-container-static-max-pool2d"]], "ivy.Array.max_pool3d": [[1110, "ivy-array-max-pool3d"]], "ivy.Container.max_pool3d": [[1111, "ivy-container-max-pool3d"]], "ivy.max_pool3d": [[1112, "ivy-max-pool3d"]], "ivy.Container.static_max_pool3d": [[1113, "ivy-container-static-max-pool3d"]], "median": [[1114, "median"], [1202, "median"]], "ivy.Array.median": [[1115, "ivy-array-median"]], "ivy.Container.median": [[1116, "ivy-container-median"]], "ivy.median": [[1117, "ivy-median"]], "ivy.Container.static_median": [[1118, "ivy-container-static-median"]], "Meta": [[1119, "module-ivy.functional.ivy.experimental.meta"], [1792, "module-ivy.functional.ivy.meta"]], "ivy.Array.moveaxis": [[1121, "ivy-array-moveaxis"]], "ivy.Container.moveaxis": [[1122, "ivy-container-moveaxis"]], "ivy.moveaxis": [[1123, "ivy-moveaxis"]], "ivy.Container.static_moveaxis": [[1124, "ivy-container-static-moveaxis"]], "msort": [[1125, "msort"], [1193, "msort"]], "ivy.Array.msort": [[1126, "ivy-array-msort"]], "ivy.Container.msort": [[1127, "ivy-container-msort"]], "ivy.msort": [[1128, "ivy-msort"]], "ivy.Container.static_msort": [[1129, "ivy-container-static-msort"]], "ivy.Array.multi_dot": [[1131, "ivy-array-multi-dot"]], "ivy.Container.multi_dot": [[1132, "ivy-container-multi-dot"]], "ivy.multi_dot": [[1133, "ivy-multi-dot"]], "ivy.Container.static_multi_dot": [[1134, "ivy-container-static-multi-dot"]], "ivy.Array.nan_to_num": [[1136, "ivy-array-nan-to-num"]], "ivy.Container.nan_to_num": [[1137, "ivy-container-nan-to-num"]], "ivy.nan_to_num": [[1138, "ivy-nan-to-num"]], "ivy.Container.static_nan_to_num": [[1139, "ivy-container-static-nan-to-num"]], "nanmean": [[1140, "nanmean"], [1203, "nanmean"]], "ivy.Array.nanmean": [[1141, "ivy-array-nanmean"]], "ivy.Container.nanmean": [[1142, "ivy-container-nanmean"]], "ivy.nanmean": [[1143, "ivy-nanmean"]], "ivy.Container.static_nanmean": [[1144, "ivy-container-static-nanmean"]], "ivy.Array.nansum": [[1146, "ivy-array-nansum"]], "ivy.Container.nansum": [[1147, "ivy-container-nansum"]], "ivy.nansum": [[1148, "ivy-nansum"]], "ivy.Container.static_nansum": [[1149, "ivy-container-static-nansum"]], "native_sparse_array": [[1150, "native-sparse-array"], [1199, "native-sparse-array"]], "native_sparse_array_to_indices_values_and_shape": [[1151, "native-sparse-array-to-indices-values-and-shape"], [1200, "native-sparse-array-to-indices-values-and-shape"]], "Nest": [[1154, "module-ivy.functional.ivy.experimental.nest"], [1796, "module-ivy.functional.ivy.nest"]], "ivy.Array.nextafter": [[1156, "ivy-array-nextafter"]], "ivy.Container.nextafter": [[1157, "ivy-container-nextafter"]], "ivy.nextafter": [[1158, "ivy-nextafter"]], "ivy.Container.static_nextafter": [[1159, "ivy-container-static-nextafter"]], "ivy.Array.pad": [[1162, "ivy-array-pad"]], "ivy.Container.pad": [[1163, "ivy-container-pad"]], "ivy.pad": [[1164, "ivy-pad"]], "ivy.Container.static_pad": [[1165, "ivy-container-static-pad"]], "quantile": [[1166, "quantile"], [1204, "quantile"]], "ivy.Array.quantile": [[1167, "ivy-array-quantile"]], "ivy.Container.quantile": [[1168, "ivy-container-quantile"]], "ivy.quantile": [[1169, "ivy-quantile"]], "ivy.Container.static_quantile": [[1170, "ivy-container-static-quantile"]], "ivy.Array.rot90": [[1176, "ivy-array-rot90"]], "ivy.Container.rot90": [[1177, "ivy-container-rot90"]], "ivy.rot90": [[1178, "ivy-rot90"]], "ivy.Container.static_rot90": [[1179, "ivy-container-static-rot90"]], "ivy.Array.signbit": [[1183, "ivy-array-signbit"]], "ivy.Container.signbit": [[1184, "ivy-container-signbit"]], "ivy.signbit": [[1185, "ivy-signbit"]], "ivy.Container.static_signbit": [[1186, "ivy-container-static-signbit"]], "ivy.Array.sinc": [[1188, "ivy-array-sinc"]], "ivy.Container.sinc": [[1189, "ivy-container-sinc"]], "ivy.sinc": [[1190, "ivy-sinc"]], "ivy.Container.static_sinc": [[1191, "ivy-container-static-sinc"]], "Sparse array": [[1194, "module-ivy.functional.ivy.experimental.sparse_array"]], "unravel_index": [[1205, "unravel-index"], [1227, "unravel-index"]], "ivy.Container.static_take_along_axis": [[1207, "ivy-container-static-take-along-axis"]], "ivy.Array.take_along_axis": [[1208, "ivy-array-take-along-axis"]], "ivy.Container.take_along_axis": [[1209, "ivy-container-take-along-axis"]], "ivy.take_along_axis": [[1210, "ivy-take-along-axis"]], "ivy.Container.static_top_k": [[1212, "ivy-container-static-top-k"]], "ivy.Array.top_k": [[1213, "ivy-array-top-k"]], "ivy.Container.top_k": [[1214, "ivy-container-top-k"]], "ivy.top_k": [[1215, "ivy-top-k"]], "ivy.Array.trapz": [[1217, "ivy-array-trapz"]], "ivy.trapz": [[1218, "ivy-trapz"]], "ivy.Container.static_tril_indices": [[1220, "ivy-container-static-tril-indices"]], "ivy.Container.tril_indices": [[1221, "ivy-container-tril-indices"]], "ivy.tril_indices": [[1222, "ivy-tril-indices"]], "ivy.Container.static_triu_indices": [[1224, "ivy-container-static-triu-indices"]], "ivy.Container.triu_indices": [[1225, "ivy-container-triu-indices"]], "ivy.triu_indices": [[1226, "ivy-triu-indices"]], "ivy.Container.static_unravel_index": [[1228, "ivy-container-static-unravel-index"]], "ivy.Array.unravel_index": [[1229, "ivy-array-unravel-index"]], "ivy.Container.unravel_index": [[1230, "ivy-container-unravel-index"]], "ivy.unravel_index": [[1231, "ivy-unravel-index"]], "ivy.Container.static_vorbis_window": [[1234, "ivy-container-static-vorbis-window"]], "ivy.Container.vorbis_window": [[1235, "ivy-container-vorbis-window"]], "ivy.vorbis_window": [[1236, "ivy-vorbis-window"]], "ivy.Container.static_vsplit": [[1238, "ivy-container-static-vsplit"]], "ivy.Array.vsplit": [[1239, "ivy-array-vsplit"]], "ivy.Container.vsplit": [[1240, "ivy-container-vsplit"]], "ivy.vsplit": [[1241, "ivy-vsplit"]], "ivy.Container.static_vstack": [[1243, "ivy-container-static-vstack"]], "ivy.Array.vstack": [[1244, "ivy-array-vstack"]], "ivy.Container.vstack": [[1245, "ivy-container-vstack"]], "ivy.vstack": [[1246, "ivy-vstack"]], "ivy.Container.static_xlogy": [[1248, "ivy-container-static-xlogy"]], "ivy.Array.xlogy": [[1249, "ivy-array-xlogy"]], "ivy.Container.xlogy": [[1250, "ivy-container-xlogy"]], "ivy.xlogy": [[1251, "ivy-xlogy"]], "ivy.Container.static_zeta": [[1253, "ivy-container-static-zeta"]], "ivy.Array.zeta": [[1254, "ivy-array-zeta"]], "ivy.Container.zeta": [[1255, "ivy-container-zeta"]], "ivy.zeta": [[1256, "ivy-zeta"]], "Parameter": [[1258, "parameter"], [1258, "id1"], [1258, "id2"], [1258, "id3"], [1258, "id4"], [1396, "parameter"], [1397, "parameter"], [1400, "parameter"], [1402, "parameter"], [1403, "parameter"]], "all_equal": [[1259, "all-equal"]], "ivy.Array.all_equal": [[1260, "ivy-array-all-equal"]], "ivy.Container.all_equal": [[1261, "ivy-container-all-equal"]], "ivy.all_equal": [[1262, "ivy-all-equal"]], "ivy.Container.static_all_equal": [[1263, "ivy-container-static-all-equal"]], "arg_info": [[1264, "arg-info"]], "arg_names": [[1265, "arg-names"]], "array_equal": [[1266, "array-equal"]], "ivy.Array.array_equal": [[1267, "ivy-array-array-equal"]], "ivy.array_equal": [[1268, "ivy-array-equal"]], "assert_supports_inplace": [[1269, "assert-supports-inplace"]], "ivy.Array.assert_supports_inplace": [[1270, "ivy-array-assert-supports-inplace"]], "ivy.Container.assert_supports_inplace": [[1271, "ivy-container-assert-supports-inplace"]], "ivy.assert_supports_inplace": [[1272, "ivy-assert-supports-inplace"]], "ivy.Container.static_assert_supports_inplace": [[1273, "ivy-container-static-assert-supports-inplace"]], "cache_fn": [[1274, "cache-fn"]], "clip_matrix_norm": [[1275, "clip-matrix-norm"]], "ivy.Array.clip_matrix_norm": [[1276, "ivy-array-clip-matrix-norm"]], "ivy.Container.clip_matrix_norm": [[1277, "ivy-container-clip-matrix-norm"]], "ivy.clip_matrix_norm": [[1278, "ivy-clip-matrix-norm"]], "ivy.Container.static_clip_matrix_norm": [[1279, "ivy-container-static-clip-matrix-norm"]], "clip_vector_norm": [[1280, "clip-vector-norm"]], "ivy.Array.clip_vector_norm": [[1281, "ivy-array-clip-vector-norm"]], "ivy.Container.clip_vector_norm": [[1282, "ivy-container-clip-vector-norm"]], "ivy.clip_vector_norm": [[1283, "ivy-clip-vector-norm"]], "ivy.Container.static_clip_vector_norm": [[1284, "ivy-container-static-clip-vector-norm"]], "container_types": [[1285, "container-types"]], "current_backend_str": [[1286, "current-backend-str"]], "default": [[1287, "default"]], "ivy.Array.default": [[1288, "ivy-array-default"]], "ivy.default": [[1289, "ivy-default"]], "einops_rearrange": [[1290, "einops-rearrange"]], "ivy.Array.einops_rearrange": [[1291, "ivy-array-einops-rearrange"]], "ivy.Container.einops_rearrange": [[1292, "ivy-container-einops-rearrange"]], "ivy.einops_rearrange": [[1293, "ivy-einops-rearrange"]], "ivy.Container.static_einops_rearrange": [[1294, "ivy-container-static-einops-rearrange"]], "einops_reduce": [[1295, "einops-reduce"]], "ivy.Array.einops_reduce": [[1296, "ivy-array-einops-reduce"]], "ivy.Container.einops_reduce": [[1297, "ivy-container-einops-reduce"]], "ivy.einops_reduce": [[1298, "ivy-einops-reduce"]], "ivy.Container.static_einops_reduce": [[1299, "ivy-container-static-einops-reduce"]], "einops_repeat": [[1300, "einops-repeat"]], "ivy.Array.einops_repeat": [[1301, "ivy-array-einops-repeat"]], "ivy.Container.einops_repeat": [[1302, "ivy-container-einops-repeat"]], "ivy.einops_repeat": [[1303, "ivy-einops-repeat"]], "ivy.Container.static_einops_repeat": [[1304, "ivy-container-static-einops-repeat"]], "exists": [[1305, "exists"]], "ivy.Array.exists": [[1306, "ivy-array-exists"]], "ivy.exists": [[1307, "ivy-exists"]], "fourier_encode": [[1308, "fourier-encode"]], "ivy.Array.fourier_encode": [[1309, "ivy-array-fourier-encode"]], "ivy.Container.fourier_encode": [[1310, "ivy-container-fourier-encode"]], "ivy.fourier_encode": [[1311, "ivy-fourier-encode"]], "ivy.Container.static_fourier_encode": [[1312, "ivy-container-static-fourier-encode"]], "function_supported_devices_and_dtypes": [[1313, "function-supported-devices-and-dtypes"]], "function_unsupported_devices_and_dtypes": [[1314, "function-unsupported-devices-and-dtypes"]], "gather": [[1315, "gather"]], "ivy.Array.gather": [[1316, "ivy-array-gather"]], "ivy.Container.gather": [[1317, "ivy-container-gather"]], "ivy.gather": [[1318, "ivy-gather"]], "ivy.Container.static_gather": [[1319, "ivy-container-static-gather"]], "gather_nd": [[1320, "gather-nd"]], "ivy.Array.gather_nd": [[1321, "ivy-array-gather-nd"]], "ivy.Container.gather_nd": [[1322, "ivy-container-gather-nd"]], "ivy.gather_nd": [[1323, "ivy-gather-nd"]], "ivy.Container.static_gather_nd": [[1324, "ivy-container-static-gather-nd"]], "get_all_arrays_in_memory": [[1325, "get-all-arrays-in-memory"]], "get_array_mode": [[1326, "get-array-mode"]], "get_exception_trace_mode": [[1327, "get-exception-trace-mode"]], "get_item": [[1328, "get-item"]], "get_min_base": [[1329, "get-min-base"]], "get_min_denominator": [[1330, "get-min-denominator"]], "get_nestable_mode": [[1331, "get-nestable-mode"]], "get_num_dims": [[1332, "get-num-dims"]], "ivy.Array.get_num_dims": [[1333, "ivy-array-get-num-dims"]], "ivy.Container.get_num_dims": [[1334, "ivy-container-get-num-dims"]], "ivy.get_num_dims": [[1335, "ivy-get-num-dims"]], "ivy.Container.static_get_num_dims": [[1336, "ivy-container-static-get-num-dims"]], "get_queue_timeout": [[1337, "get-queue-timeout"]], "get_referrers_recursive": [[1338, "get-referrers-recursive"]], "get_show_func_wrapper_trace_mode": [[1339, "get-show-func-wrapper-trace-mode"]], "get_tmp_dir": [[1340, "get-tmp-dir"]], "has_nans": [[1341, "has-nans"]], "ivy.Array.has_nans": [[1342, "ivy-array-has-nans"]], "ivy.Container.has_nans": [[1343, "ivy-container-has-nans"]], "ivy.has_nans": [[1344, "ivy-has-nans"]], "ivy.Container.static_has_nans": [[1345, "ivy-container-static-has-nans"]], "inplace_arrays_supported": [[1346, "inplace-arrays-supported"]], "inplace_decrement": [[1347, "inplace-decrement"]], "ivy.Array.inplace_decrement": [[1348, "ivy-array-inplace-decrement"]], "ivy.Container.inplace_decrement": [[1349, "ivy-container-inplace-decrement"]], "ivy.inplace_decrement": [[1350, "ivy-inplace-decrement"]], "ivy.Container.static_inplace_decrement": [[1351, "ivy-container-static-inplace-decrement"]], "inplace_increment": [[1352, "inplace-increment"]], "ivy.Array.inplace_increment": [[1353, "ivy-array-inplace-increment"]], "ivy.Container.inplace_increment": [[1354, "ivy-container-inplace-increment"]], "ivy.inplace_increment": [[1355, "ivy-inplace-increment"]], "ivy.Container.static_inplace_increment": [[1356, "ivy-container-static-inplace-increment"]], "inplace_update": [[1357, "inplace-update"]], "ivy.Array.inplace_update": [[1358, "ivy-array-inplace-update"]], "ivy.Container.inplace_update": [[1359, "ivy-container-inplace-update"]], "ivy.inplace_update": [[1360, "ivy-inplace-update"]], "ivy.Container.static_inplace_update": [[1361, "ivy-container-static-inplace-update"]], "inplace_variables_supported": [[1362, "inplace-variables-supported"]], "is_array": [[1363, "is-array"]], "ivy.Array.is_array": [[1364, "ivy-array-is-array"]], "ivy.Container.is_array": [[1365, "ivy-container-is-array"]], "ivy.is_array": [[1366, "ivy-is-array"]], "ivy.Container.static_is_array": [[1367, "ivy-container-static-is-array"]], "is_ivy_array": [[1368, "is-ivy-array"]], "ivy.Array.is_ivy_array": [[1369, "ivy-array-is-ivy-array"]], "ivy.Container.is_ivy_array": [[1370, "ivy-container-is-ivy-array"]], "ivy.is_ivy_array": [[1371, "ivy-is-ivy-array"]], "ivy.Container.static_is_ivy_array": [[1372, "ivy-container-static-is-ivy-array"]], "is_ivy_container": [[1373, "is-ivy-container"]], "ivy.Array.is_ivy_container": [[1374, "ivy-array-is-ivy-container"]], "ivy.is_ivy_container": [[1375, "ivy-is-ivy-container"]], "is_native_array": [[1376, "is-native-array"]], "ivy.Array.is_native_array": [[1377, "ivy-array-is-native-array"]], "ivy.Container.is_native_array": [[1378, "ivy-container-is-native-array"]], "ivy.is_native_array": [[1379, "ivy-is-native-array"]], "ivy.Container.static_is_native_array": [[1380, "ivy-container-static-is-native-array"]], "isscalar": [[1381, "isscalar"]], "match_kwargs": [[1382, "match-kwargs"]], "multiprocessing": [[1383, "multiprocessing"]], "num_arrays_in_memory": [[1384, "num-arrays-in-memory"]], "print_all_arrays_in_memory": [[1385, "print-all-arrays-in-memory"]], "scatter_flat": [[1386, "scatter-flat"]], "ivy.Array.scatter_flat": [[1387, "ivy-array-scatter-flat"]], "ivy.Container.scatter_flat": [[1388, "ivy-container-scatter-flat"]], "ivy.scatter_flat": [[1389, "ivy-scatter-flat"]], "ivy.Container.static_scatter_flat": [[1390, "ivy-container-static-scatter-flat"]], "scatter_nd": [[1391, "scatter-nd"]], "ivy.Array.scatter_nd": [[1392, "ivy-array-scatter-nd"]], "ivy.Container.scatter_nd": [[1393, "ivy-container-scatter-nd"]], "ivy.scatter_nd": [[1394, "ivy-scatter-nd"]], "ivy.Container.static_scatter_nd": [[1395, "ivy-container-static-scatter-nd"]], "set_array_mode": [[1396, "set-array-mode"]], "set_exception_trace_mode": [[1397, "set-exception-trace-mode"]], "set_min_base": [[1398, "set-min-base"]], "set_min_denominator": [[1399, "set-min-denominator"]], "set_nestable_mode": [[1400, "set-nestable-mode"]], "set_queue_timeout": [[1401, "set-queue-timeout"]], "set_shape_array_mode": [[1402, "set-shape-array-mode"]], "set_show_func_wrapper_trace_mode": [[1403, "set-show-func-wrapper-trace-mode"]], "set_tmp_dir": [[1404, "set-tmp-dir"]], "shape": [[1405, "shape"]], "shape_array_mode": [[1406, "shape-array-mode"]], "stable_divide": [[1407, "stable-divide"]], "ivy.Array.stable_divide": [[1408, "ivy-array-stable-divide"]], "ivy.Container.stable_divide": [[1409, "ivy-container-stable-divide"]], "ivy.stable_divide": [[1410, "ivy-stable-divide"]], "ivy.Container.static_stable_divide": [[1411, "ivy-container-static-stable-divide"]], "stable_pow": [[1412, "stable-pow"]], "ivy.Array.stable_pow": [[1413, "ivy-array-stable-pow"]], "ivy.Container.stable_pow": [[1414, "ivy-container-stable-pow"]], "ivy.stable_pow": [[1415, "ivy-stable-pow"]], "ivy.Container.static_stable_pow": [[1416, "ivy-container-static-stable-pow"]], "supports_inplace_updates": [[1417, "supports-inplace-updates"]], "ivy.Container.static_supports_inplace_updates": [[1418, "ivy-container-static-supports-inplace-updates"]], "ivy.Array.supports_inplace_updates": [[1419, "ivy-array-supports-inplace-updates"]], "ivy.Container.supports_inplace_updates": [[1420, "ivy-container-supports-inplace-updates"]], "ivy.supports_inplace_updates": [[1421, "ivy-supports-inplace-updates"]], "to_ivy_shape": [[1422, "to-ivy-shape"]], "to_list": [[1423, "to-list"]], "ivy.Container.static_to_list": [[1424, "ivy-container-static-to-list"]], "ivy.Array.to_list": [[1425, "ivy-array-to-list"]], "ivy.to_list": [[1426, "ivy-to-list"]], "to_native_shape": [[1427, "to-native-shape"]], "to_numpy": [[1428, "to-numpy"]], "ivy.Container.static_to_numpy": [[1429, "ivy-container-static-to-numpy"]], "ivy.Array.to_numpy": [[1430, "ivy-array-to-numpy"]], "ivy.Container.to_numpy": [[1431, "ivy-container-to-numpy"]], "ivy.to_numpy": [[1432, "ivy-to-numpy"]], "to_scalar": [[1433, "to-scalar"]], "ivy.Container.static_to_scalar": [[1434, "ivy-container-static-to-scalar"]], "ivy.Array.to_scalar": [[1435, "ivy-array-to-scalar"]], "ivy.Container.to_scalar": [[1436, "ivy-container-to-scalar"]], "ivy.to_scalar": [[1437, "ivy-to-scalar"]], "try_else_none": [[1438, "try-else-none"]], "unset_array_mode": [[1439, "unset-array-mode"]], "unset_exception_trace_mode": [[1440, "unset-exception-trace-mode"]], "unset_nestable_mode": [[1441, "unset-nestable-mode"]], "unset_queue_timeout": [[1442, "unset-queue-timeout"]], "unset_shape_array_mode": [[1443, "unset-shape-array-mode"]], "unset_show_func_wrapper_trace_mode": [[1444, "unset-show-func-wrapper-trace-mode"]], "value_is_nan": [[1445, "value-is-nan"]], "ivy.Container.static_value_is_nan": [[1446, "ivy-container-static-value-is-nan"]], "ivy.Array.value_is_nan": [[1447, "ivy-array-value-is-nan"]], "ivy.Container.value_is_nan": [[1448, "ivy-container-value-is-nan"]], "ivy.value_is_nan": [[1449, "ivy-value-is-nan"]], "vmap": [[1450, "vmap"]], "GradientTracking": [[1452, "gradienttracking"]], "adam_step": [[1453, "adam-step"]], "ivy.Array.adam_step": [[1454, "ivy-array-adam-step"]], "ivy.Container.adam_step": [[1455, "ivy-container-adam-step"]], "ivy.adam_step": [[1456, "ivy-adam-step"]], "adam_update": [[1457, "adam-update"]], "ivy.Array.adam_update": [[1458, "ivy-array-adam-update"]], "ivy.Container.adam_update": [[1459, "ivy-container-adam-update"]], "ivy.adam_update": [[1460, "ivy-adam-update"]], "execute_with_gradients": [[1461, "execute-with-gradients"]], "grad": [[1462, "grad"]], "gradient_descent_update": [[1463, "gradient-descent-update"]], "ivy.Array.gradient_descent_update": [[1464, "ivy-array-gradient-descent-update"]], "ivy.Container.gradient_descent_update": [[1465, "ivy-container-gradient-descent-update"]], "ivy.gradient_descent_update": [[1466, "ivy-gradient-descent-update"]], "jac": [[1467, "jac"]], "lamb_update": [[1468, "lamb-update"]], "ivy.Array.lamb_update": [[1469, "ivy-array-lamb-update"]], "ivy.Container.lamb_update": [[1470, "ivy-container-lamb-update"]], "ivy.lamb_update": [[1471, "ivy-lamb-update"]], "lars_update": [[1472, "lars-update"]], "ivy.Array.lars_update": [[1473, "ivy-array-lars-update"]], "ivy.Container.lars_update": [[1474, "ivy-container-lars-update"]], "ivy.lars_update": [[1475, "ivy-lars-update"]], "optimizer_update": [[1476, "optimizer-update"]], "ivy.Array.optimizer_update": [[1477, "ivy-array-optimizer-update"]], "ivy.Container.optimizer_update": [[1478, "ivy-container-optimizer-update"]], "ivy.optimizer_update": [[1479, "ivy-optimizer-update"]], "set_with_grads": [[1480, "set-with-grads"]], "stop_gradient": [[1481, "stop-gradient"]], "ivy.Container.static_stop_gradient": [[1482, "ivy-container-static-stop-gradient"]], "ivy.Array.stop_gradient": [[1483, "ivy-array-stop-gradient"]], "ivy.Container.stop_gradient": [[1484, "ivy-container-stop-gradient"]], "ivy.stop_gradient": [[1485, "ivy-stop-gradient"]], "unset_with_grads": [[1486, "unset-with-grads"]], "value_and_grad": [[1487, "value-and-grad"]], "with_grads": [[1488, "with-grads"]], "conv": [[1490, "conv"]], "conv1d": [[1491, "conv1d"]], "ivy.Array.conv1d": [[1492, "ivy-array-conv1d"]], "ivy.Container.conv1d": [[1493, "ivy-container-conv1d"]], "ivy.conv1d": [[1494, "ivy-conv1d"]], "ivy.Container.static_conv1d": [[1495, "ivy-container-static-conv1d"]], "conv1d_transpose": [[1496, "conv1d-transpose"]], "ivy.Array.conv1d_transpose": [[1497, "ivy-array-conv1d-transpose"]], "ivy.Container.conv1d_transpose": [[1498, "ivy-container-conv1d-transpose"]], "ivy.conv1d_transpose": [[1499, "ivy-conv1d-transpose"]], "ivy.Container.static_conv1d_transpose": [[1500, "ivy-container-static-conv1d-transpose"]], "conv2d": [[1501, "conv2d"]], "ivy.Array.conv2d": [[1502, "ivy-array-conv2d"]], "ivy.Container.conv2d": [[1503, "ivy-container-conv2d"]], "ivy.conv2d": [[1504, "ivy-conv2d"]], "ivy.Container.static_conv2d": [[1505, "ivy-container-static-conv2d"]], "conv2d_transpose": [[1506, "conv2d-transpose"]], "ivy.Container.conv2d_transpose": [[1507, "ivy-container-conv2d-transpose"]], "ivy.conv2d_transpose": [[1508, "ivy-conv2d-transpose"]], "ivy.Container.static_conv2d_transpose": [[1509, "ivy-container-static-conv2d-transpose"]], "conv3d": [[1510, "conv3d"]], "ivy.Array.conv3d": [[1511, "ivy-array-conv3d"]], "ivy.Container.conv3d": [[1512, "ivy-container-conv3d"]], "ivy.conv3d": [[1513, "ivy-conv3d"]], "ivy.Container.static_conv3d": [[1514, "ivy-container-static-conv3d"]], "conv3d_transpose": [[1515, "conv3d-transpose"]], "ivy.Array.conv3d_transpose": [[1516, "ivy-array-conv3d-transpose"]], "ivy.Container.conv3d_transpose": [[1517, "ivy-container-conv3d-transpose"]], "ivy.conv3d_transpose": [[1518, "ivy-conv3d-transpose"]], "ivy.Container.static_conv3d_transpose": [[1519, "ivy-container-static-conv3d-transpose"]], "conv_general_dilated": [[1520, "conv-general-dilated"]], "conv_general_transpose": [[1521, "conv-general-transpose"]], "deconv_length": [[1522, "deconv-length"]], "depthwise_conv2d": [[1523, "depthwise-conv2d"]], "ivy.Array.depthwise_conv2d": [[1524, "ivy-array-depthwise-conv2d"]], "ivy.Container.depthwise_conv2d": [[1525, "ivy-container-depthwise-conv2d"]], "ivy.depthwise_conv2d": [[1526, "ivy-depthwise-conv2d"]], "ivy.Container.static_depthwise_conv2d": [[1527, "ivy-container-static-depthwise-conv2d"]], "dropout": [[1528, "dropout"]], "ivy.Array.dropout": [[1529, "ivy-array-dropout"]], "ivy.Container.dropout": [[1530, "ivy-container-dropout"]], "ivy.dropout": [[1531, "ivy-dropout"]], "ivy.Container.static_dropout": [[1532, "ivy-container-static-dropout"]], "get_x_data_format": [[1533, "get-x-data-format"]], "handle_padding": [[1534, "handle-padding"]], "linear": [[1535, "linear"]], "ivy.Array.linear": [[1536, "ivy-array-linear"]], "ivy.Container.linear": [[1537, "ivy-container-linear"]], "ivy.linear": [[1538, "ivy-linear"]], "ivy.Container.static_linear": [[1539, "ivy-container-static-linear"]], "lstm_update": [[1540, "lstm-update"]], "ivy.Array.lstm_update": [[1541, "ivy-array-lstm-update"]], "ivy.Container.lstm_update": [[1542, "ivy-container-lstm-update"]], "ivy.lstm_update": [[1543, "ivy-lstm-update"]], "ivy.Container.static_lstm_update": [[1544, "ivy-container-static-lstm-update"]], "multi_head_attention": [[1545, "multi-head-attention"]], "ivy.Array.multi_head_attention": [[1546, "ivy-array-multi-head-attention"]], "ivy.Container.multi_head_attention": [[1547, "ivy-container-multi-head-attention"]], "ivy.multi_head_attention": [[1548, "ivy-multi-head-attention"]], "ivy.Container.static_multi_head_attention": [[1549, "ivy-container-static-multi-head-attention"]], "scaled_dot_product_attention": [[1550, "scaled-dot-product-attention"]], "ivy.Array.scaled_dot_product_attention": [[1551, "ivy-array-scaled-dot-product-attention"]], "ivy.Container.scaled_dot_product_attention": [[1552, "ivy-container-scaled-dot-product-attention"]], "ivy.scaled_dot_product_attention": [[1553, "ivy-scaled-dot-product-attention"]], "ivy.Container.static_scaled_dot_product_attention": [[1554, "ivy-container-static-scaled-dot-product-attention"]], "cholesky": [[1556, "cholesky"]], "ivy.Array.cholesky": [[1557, "ivy-array-cholesky"]], "ivy.Container.cholesky": [[1558, "ivy-container-cholesky"]], "ivy.cholesky": [[1559, "ivy-cholesky"]], "ivy.Container.static_cholesky": [[1560, "ivy-container-static-cholesky"]], "cross": [[1561, "cross"]], "ivy.Array.cross": [[1562, "ivy-array-cross"]], "ivy.Container.cross": [[1563, "ivy-container-cross"]], "ivy.cross": [[1564, "ivy-cross"]], "ivy.Container.static_cross": [[1565, "ivy-container-static-cross"]], "det": [[1566, "det"]], "ivy.Array.det": [[1567, "ivy-array-det"]], "ivy.Container.det": [[1568, "ivy-container-det"]], "ivy.det": [[1569, "ivy-det"]], "ivy.Container.static_det": [[1570, "ivy-container-static-det"]], "diag": [[1571, "diag"]], "ivy.Array.diag": [[1572, "ivy-array-diag"]], "ivy.Container.diag": [[1573, "ivy-container-diag"]], "ivy.diag": [[1574, "ivy-diag"]], "ivy.Container.static_diag": [[1575, "ivy-container-static-diag"]], "diagonal": [[1576, "diagonal"]], "ivy.Array.diagonal": [[1577, "ivy-array-diagonal"]], "ivy.Container.diagonal": [[1578, "ivy-container-diagonal"]], "ivy.diagonal": [[1579, "ivy-diagonal"]], "ivy.Container.static_diagonal": [[1580, "ivy-container-static-diagonal"]], "eigh": [[1582, "eigh"]], "ivy.Array.eigh": [[1583, "ivy-array-eigh"]], "ivy.Container.eigh": [[1584, "ivy-container-eigh"]], "ivy.eigh": [[1585, "ivy-eigh"]], "ivy.Container.static_eigh": [[1586, "ivy-container-static-eigh"]], "eigvalsh": [[1587, "eigvalsh"]], "ivy.Array.eigvalsh": [[1588, "ivy-array-eigvalsh"]], "ivy.Container.eigvalsh": [[1589, "ivy-container-eigvalsh"]], "ivy.eigvalsh": [[1590, "ivy-eigvalsh"]], "ivy.Container.static_eigvalsh": [[1591, "ivy-container-static-eigvalsh"]], "inner": [[1592, "inner"]], "ivy.Array.inner": [[1593, "ivy-array-inner"]], "ivy.Container.inner": [[1594, "ivy-container-inner"]], "ivy.inner": [[1595, "ivy-inner"]], "ivy.Container.static_inner": [[1596, "ivy-container-static-inner"]], "inv": [[1597, "inv"]], "ivy.Array.inv": [[1598, "ivy-array-inv"]], "ivy.Container.inv": [[1599, "ivy-container-inv"]], "ivy.inv": [[1600, "ivy-inv"]], "ivy.Container.static_inv": [[1601, "ivy-container-static-inv"]], "matmul": [[1602, "matmul"]], "ivy.Array.matmul": [[1603, "ivy-array-matmul"]], "ivy.Container.matmul": [[1604, "ivy-container-matmul"]], "ivy.matmul": [[1605, "ivy-matmul"]], "ivy.Container.static_matmul": [[1606, "ivy-container-static-matmul"]], "matrix_norm": [[1607, "matrix-norm"]], "ivy.Array.matrix_norm": [[1608, "ivy-array-matrix-norm"]], "ivy.Container.matrix_norm": [[1609, "ivy-container-matrix-norm"]], "ivy.matrix_norm": [[1610, "ivy-matrix-norm"]], "ivy.Container.static_matrix_norm": [[1611, "ivy-container-static-matrix-norm"]], "matrix_power": [[1612, "matrix-power"]], "ivy.Array.matrix_power": [[1613, "ivy-array-matrix-power"]], "ivy.Container.matrix_power": [[1614, "ivy-container-matrix-power"]], "ivy.matrix_power": [[1615, "ivy-matrix-power"]], "ivy.Container.static_matrix_power": [[1616, "ivy-container-static-matrix-power"]], "matrix_rank": [[1617, "matrix-rank"]], "ivy.Array.matrix_rank": [[1618, "ivy-array-matrix-rank"]], "ivy.Container.matrix_rank": [[1619, "ivy-container-matrix-rank"]], "ivy.matrix_rank": [[1620, "ivy-matrix-rank"]], "ivy.Container.static_matrix_rank": [[1621, "ivy-container-static-matrix-rank"]], "matrix_transpose": [[1622, "matrix-transpose"]], "ivy.Array.matrix_transpose": [[1623, "ivy-array-matrix-transpose"]], "ivy.Container.matrix_transpose": [[1624, "ivy-container-matrix-transpose"]], "ivy.matrix_transpose": [[1625, "ivy-matrix-transpose"]], "ivy.Container.static_matrix_transpose": [[1626, "ivy-container-static-matrix-transpose"]], "outer": [[1627, "outer"]], "ivy.Array.outer": [[1628, "ivy-array-outer"]], "ivy.Container.outer": [[1629, "ivy-container-outer"]], "ivy.outer": [[1630, "ivy-outer"]], "ivy.Container.static_outer": [[1631, "ivy-container-static-outer"]], "pinv": [[1632, "pinv"]], "ivy.Array.pinv": [[1633, "ivy-array-pinv"]], "ivy.Container.pinv": [[1634, "ivy-container-pinv"]], "ivy.pinv": [[1635, "ivy-pinv"]], "ivy.Container.static_pinv": [[1636, "ivy-container-static-pinv"]], "qr": [[1637, "qr"]], "ivy.Array.qr": [[1638, "ivy-array-qr"]], "ivy.Container.qr": [[1639, "ivy-container-qr"]], "ivy.qr": [[1640, "ivy-qr"]], "ivy.Container.static_qr": [[1641, "ivy-container-static-qr"]], "slogdet": [[1642, "slogdet"]], "ivy.Array.slogdet": [[1643, "ivy-array-slogdet"]], "ivy.Container.slogdet": [[1644, "ivy-container-slogdet"]], "ivy.slogdet": [[1645, "ivy-slogdet"]], "ivy.Container.static_slogdet": [[1646, "ivy-container-static-slogdet"]], "solve": [[1647, "solve"]], "ivy.Array.solve": [[1648, "ivy-array-solve"]], "ivy.Container.solve": [[1649, "ivy-container-solve"]], "ivy.solve": [[1650, "ivy-solve"]], "ivy.Container.static_solve": [[1651, "ivy-container-static-solve"]], "svd": [[1652, "svd"]], "ivy.Container.static_svd": [[1653, "ivy-container-static-svd"]], "ivy.Array.svd": [[1654, "ivy-array-svd"]], "ivy.Container.svd": [[1655, "ivy-container-svd"]], "ivy.svd": [[1656, "ivy-svd"]], "svdvals": [[1657, "svdvals"]], "ivy.Container.static_svdvals": [[1658, "ivy-container-static-svdvals"]], "ivy.Array.svdvals": [[1659, "ivy-array-svdvals"]], "ivy.Container.svdvals": [[1660, "ivy-container-svdvals"]], "ivy.svdvals": [[1661, "ivy-svdvals"]], "tensordot": [[1662, "tensordot"]], "ivy.Container.static_tensordot": [[1663, "ivy-container-static-tensordot"]], "ivy.Container.tensordot": [[1664, "ivy-container-tensordot"]], "ivy.tensordot": [[1665, "ivy-tensordot"]], "tensorsolve": [[1666, "tensorsolve"]], "ivy.Array.tensorsolve": [[1667, "ivy-array-tensorsolve"]], "ivy.Container.tensorsolve": [[1668, "ivy-container-tensorsolve"]], "ivy.tensorsolve": [[1669, "ivy-tensorsolve"]], "trace": [[1670, "trace"]], "ivy.Container.static_trace": [[1671, "ivy-container-static-trace"]], "ivy.Array.trace": [[1672, "ivy-array-trace"]], "ivy.Container.trace": [[1673, "ivy-container-trace"]], "ivy.trace": [[1674, "ivy-trace"]], "vander": [[1675, "vander"]], "ivy.Container.static_vander": [[1676, "ivy-container-static-vander"]], "ivy.Array.vander": [[1677, "ivy-array-vander"]], "ivy.Container.vander": [[1678, "ivy-container-vander"]], "ivy.vander": [[1679, "ivy-vander"]], "vecdot": [[1680, "vecdot"]], "ivy.Container.static_vecdot": [[1681, "ivy-container-static-vecdot"]], "ivy.Array.vecdot": [[1682, "ivy-array-vecdot"]], "ivy.Container.vecdot": [[1683, "ivy-container-vecdot"]], "ivy.vecdot": [[1684, "ivy-vecdot"]], "vector_norm": [[1685, "vector-norm"]], "ivy.Container.static_vector_norm": [[1686, "ivy-container-static-vector-norm"]], "ivy.Array.vector_norm": [[1687, "ivy-array-vector-norm"]], "ivy.Container.vector_norm": [[1688, "ivy-container-vector-norm"]], "ivy.vector_norm": [[1689, "ivy-vector-norm"]], "vector_to_skew_symmetric_matrix": [[1690, "vector-to-skew-symmetric-matrix"]], "ivy.Container.static_vector_to_skew_symmetric_matrix": [[1691, "ivy-container-static-vector-to-skew-symmetric-matrix"]], "ivy.Array.vector_to_skew_symmetric_matrix": [[1692, "ivy-array-vector-to-skew-symmetric-matrix"]], "ivy.Container.vector_to_skew_symmetric_matrix": [[1693, "ivy-container-vector-to-skew-symmetric-matrix"]], "ivy.vector_to_skew_symmetric_matrix": [[1694, "ivy-vector-to-skew-symmetric-matrix"]], "binary_cross_entropy": [[1696, "binary-cross-entropy"]], "ivy.Array.binary_cross_entropy": [[1697, "ivy-array-binary-cross-entropy"]], "ivy.Container.binary_cross_entropy": [[1698, "ivy-container-binary-cross-entropy"]], "ivy.binary_cross_entropy": [[1699, "ivy-binary-cross-entropy"]], "ivy.Container.static_binary_cross_entropy": [[1700, "ivy-container-static-binary-cross-entropy"]], "cross_entropy": [[1701, "cross-entropy"]], "ivy.Array.cross_entropy": [[1702, "ivy-array-cross-entropy"]], "ivy.Container.cross_entropy": [[1703, "ivy-container-cross-entropy"]], "ivy.cross_entropy": [[1704, "ivy-cross-entropy"]], "ivy.Container.static_cross_entropy": [[1705, "ivy-container-static-cross-entropy"]], "sparse_cross_entropy": [[1706, "sparse-cross-entropy"]], "ivy.Array.sparse_cross_entropy": [[1707, "ivy-array-sparse-cross-entropy"]], "ivy.Container.sparse_cross_entropy": [[1708, "ivy-container-sparse-cross-entropy"]], "ivy.sparse_cross_entropy": [[1709, "ivy-sparse-cross-entropy"]], "ivy.Container.static_sparse_cross_entropy": [[1710, "ivy-container-static-sparse-cross-entropy"]], "clip": [[1712, "clip"]], "ivy.Array.clip": [[1713, "ivy-array-clip"]], "ivy.Container.clip": [[1714, "ivy-container-clip"]], "ivy.clip": [[1715, "ivy-clip"]], "ivy.Container.static_clip": [[1716, "ivy-container-static-clip"]], "concat": [[1717, "concat"]], "ivy.Array.concat": [[1718, "ivy-array-concat"]], "ivy.Container.concat": [[1719, "ivy-container-concat"]], "ivy.concat": [[1720, "ivy-concat"]], "ivy.Container.static_concat": [[1721, "ivy-container-static-concat"]], "constant_pad": [[1722, "constant-pad"]], "ivy.Array.constant_pad": [[1723, "ivy-array-constant-pad"]], "ivy.Container.constant_pad": [[1724, "ivy-container-constant-pad"]], "ivy.constant_pad": [[1725, "ivy-constant-pad"]], "ivy.Container.static_constant_pad": [[1726, "ivy-container-static-constant-pad"]], "expand_dims": [[1727, "expand-dims"]], "ivy.Array.expand_dims": [[1728, "ivy-array-expand-dims"]], "ivy.Container.expand_dims": [[1729, "ivy-container-expand-dims"]], "ivy.expand_dims": [[1730, "ivy-expand-dims"]], "ivy.Container.static_expand_dims": [[1731, "ivy-container-static-expand-dims"]], "flip": [[1732, "flip"]], "ivy.Array.flip": [[1733, "ivy-array-flip"]], "ivy.Container.flip": [[1734, "ivy-container-flip"]], "ivy.flip": [[1735, "ivy-flip"]], "ivy.Container.static_flip": [[1736, "ivy-container-static-flip"]], "permute_dims": [[1737, "permute-dims"]], "ivy.Array.permute_dims": [[1738, "ivy-array-permute-dims"]], "ivy.Container.permute_dims": [[1739, "ivy-container-permute-dims"]], "ivy.permute_dims": [[1740, "ivy-permute-dims"]], "ivy.Container.static_permute_dims": [[1741, "ivy-container-static-permute-dims"]], "repeat": [[1742, "repeat"]], "ivy.Array.repeat": [[1743, "ivy-array-repeat"]], "ivy.Container.repeat": [[1744, "ivy-container-repeat"]], "ivy.repeat": [[1745, "ivy-repeat"]], "ivy.Container.static_repeat": [[1746, "ivy-container-static-repeat"]], "reshape": [[1747, "reshape"]], "ivy.Array.reshape": [[1748, "ivy-array-reshape"]], "ivy.Container.reshape": [[1749, "ivy-container-reshape"]], "ivy.reshape": [[1750, "ivy-reshape"]], "ivy.Container.static_reshape": [[1751, "ivy-container-static-reshape"]], "roll": [[1752, "roll"]], "ivy.Array.roll": [[1753, "ivy-array-roll"]], "ivy.Container.roll": [[1754, "ivy-container-roll"]], "ivy.Container.static_roll": [[1756, "ivy-container-static-roll"]], "split": [[1757, "split"]], "ivy.Array.split": [[1758, "ivy-array-split"]], "ivy.Container.split": [[1759, "ivy-container-split"]], "ivy.split": [[1760, "ivy-split"]], "ivy.Container.static_split": [[1761, "ivy-container-static-split"]], "squeeze": [[1762, "squeeze"]], "ivy.Array.squeeze": [[1763, "ivy-array-squeeze"]], "ivy.Container.squeeze": [[1764, "ivy-container-squeeze"]], "ivy.squeeze": [[1765, "ivy-squeeze"]], "ivy.Container.static_squeeze": [[1766, "ivy-container-static-squeeze"]], "stack": [[1767, "stack"]], "ivy.Array.stack": [[1768, "ivy-array-stack"]], "ivy.Container.stack": [[1769, "ivy-container-stack"]], "ivy.stack": [[1770, "ivy-stack"]], "ivy.Container.static_stack": [[1771, "ivy-container-static-stack"]], "swapaxes": [[1772, "swapaxes"]], "ivy.Container.static_swapaxes": [[1773, "ivy-container-static-swapaxes"]], "ivy.Array.swapaxes": [[1774, "ivy-array-swapaxes"]], "ivy.Container.swapaxes": [[1775, "ivy-container-swapaxes"]], "ivy.swapaxes": [[1776, "ivy-swapaxes"]], "tile": [[1777, "tile"]], "ivy.Container.static_tile": [[1778, "ivy-container-static-tile"]], "ivy.Array.tile": [[1779, "ivy-array-tile"]], "ivy.Container.tile": [[1780, "ivy-container-tile"]], "ivy.tile": [[1781, "ivy-tile"]], "unstack": [[1782, "unstack"]], "ivy.Container.static_unstack": [[1783, "ivy-container-static-unstack"]], "ivy.Array.unstack": [[1784, "ivy-array-unstack"]], "ivy.Container.unstack": [[1785, "ivy-container-unstack"]], "ivy.unstack": [[1786, "ivy-unstack"]], "zero_pad": [[1787, "zero-pad"]], "ivy.Container.static_zero_pad": [[1788, "ivy-container-static-zero-pad"]], "ivy.Array.zero_pad": [[1789, "ivy-array-zero-pad"]], "ivy.Container.zero_pad": [[1790, "ivy-container-zero-pad"]], "ivy.zero_pad": [[1791, "ivy-zero-pad"]], "fomaml_step": [[1793, "fomaml-step"]], "maml_step": [[1794, "maml-step"]], "reptile_step": [[1795, "reptile-step"]], "all_nested_indices": [[1797, "all-nested-indices"]], "copy_nest": [[1798, "copy-nest"]], "duplicate_array_index_chains": [[1799, "duplicate-array-index-chains"]], "index_nest": [[1800, "index-nest"]], "insert_into_nest_at_index": [[1801, "insert-into-nest-at-index"]], "insert_into_nest_at_indices": [[1802, "insert-into-nest-at-indices"]], "map": [[1803, "map"]], "map_nest_at_index": [[1804, "map-nest-at-index"]], "map_nest_at_indices": [[1805, "map-nest-at-indices"]], "multi_index_nest": [[1806, "multi-index-nest"]], "nested_any": [[1807, "nested-any"]], "nested_argwhere": [[1808, "nested-argwhere"]], "nested_map": [[1809, "nested-map"]], "nested_multi_map": [[1810, "nested-multi-map"]], "prune_empty": [[1811, "prune-empty"]], "prune_nest_at_index": [[1812, "prune-nest-at-index"]], "prune_nest_at_indices": [[1813, "prune-nest-at-indices"]], "set_nest_at_index": [[1814, "set-nest-at-index"]], "set_nest_at_indices": [[1815, "set-nest-at-indices"]], "layer_norm": [[1817, "layer-norm"]], "ivy.Array.layer_norm": [[1818, "ivy-array-layer-norm"]], "ivy.Container.layer_norm": [[1819, "ivy-container-layer-norm"]], "ivy.layer_norm": [[1820, "ivy-layer-norm"]], "multinomial": [[1822, "multinomial"]], "ivy.Array.multinomial": [[1823, "ivy-array-multinomial"]], "ivy.Container.multinomial": [[1824, "ivy-container-multinomial"]], "ivy.multinomial": [[1825, "ivy-multinomial"]], "ivy.Container.static_multinomial": [[1826, "ivy-container-static-multinomial"]], "randint": [[1827, "randint"]], "ivy.Array.randint": [[1828, "ivy-array-randint"]], "ivy.Container.randint": [[1829, "ivy-container-randint"]], "ivy.randint": [[1830, "ivy-randint"]], "ivy.Container.static_randint": [[1831, "ivy-container-static-randint"]], "random_normal": [[1832, "random-normal"]], "ivy.Array.random_normal": [[1833, "ivy-array-random-normal"]], "ivy.Container.random_normal": [[1834, "ivy-container-random-normal"]], "ivy.random_normal": [[1835, "ivy-random-normal"]], "ivy.Container.static_random_normal": [[1836, "ivy-container-static-random-normal"]], "random_uniform": [[1837, "random-uniform"]], "ivy.Array.random_uniform": [[1838, "ivy-array-random-uniform"]], "ivy.Container.random_uniform": [[1839, "ivy-container-random-uniform"]], "ivy.random_uniform": [[1840, "ivy-random-uniform"]], "ivy.Container.static_random_uniform": [[1841, "ivy-container-static-random-uniform"]], "seed": [[1842, "seed"], [2123, "seed"]], "shuffle": [[1843, "shuffle"]], "ivy.Array.shuffle": [[1844, "ivy-array-shuffle"]], "ivy.Container.shuffle": [[1845, "ivy-container-shuffle"]], "ivy.shuffle": [[1846, "ivy-shuffle"]], "ivy.Container.static_shuffle": [[1847, "ivy-container-static-shuffle"]], "argmax": [[1849, "argmax"]], "ivy.Array.argmax": [[1850, "ivy-array-argmax"]], "ivy.Container.argmax": [[1851, "ivy-container-argmax"]], "ivy.argmax": [[1852, "ivy-argmax"]], "ivy.Container.static_argmax": [[1853, "ivy-container-static-argmax"]], "argmin": [[1854, "argmin"]], "ivy.Array.argmin": [[1855, "ivy-array-argmin"]], "ivy.Container.argmin": [[1856, "ivy-container-argmin"]], "ivy.argmin": [[1857, "ivy-argmin"]], "ivy.Container.static_argmin": [[1858, "ivy-container-static-argmin"]], "argwhere": [[1859, "argwhere"]], "ivy.Array.argwhere": [[1860, "ivy-array-argwhere"]], "ivy.Container.argwhere": [[1861, "ivy-container-argwhere"]], "ivy.argwhere": [[1862, "ivy-argwhere"]], "ivy.Container.static_argwhere": [[1863, "ivy-container-static-argwhere"]], "nonzero": [[1864, "nonzero"]], "ivy.Array.nonzero": [[1865, "ivy-array-nonzero"]], "ivy.Container.nonzero": [[1866, "ivy-container-nonzero"]], "ivy.nonzero": [[1867, "ivy-nonzero"]], "ivy.Container.static_nonzero": [[1868, "ivy-container-static-nonzero"]], "where": [[1869, "where"]], "ivy.Container.static_where": [[1870, "ivy-container-static-where"]], "ivy.Array.where": [[1871, "ivy-array-where"]], "ivy.Container.where": [[1872, "ivy-container-where"]], "ivy.where": [[1873, "ivy-where"]], "Data-dependent output shape": [[1874, null], [1874, null], [1874, null], [1874, null], [1875, null], [1879, null], [1880, null], [1884, null], [1885, null], [1889, null], [1890, null], [1894, null]], "unique_all": [[1875, "unique-all"]], "ivy.Container.static_unique_all": [[1876, "ivy-container-static-unique-all"]], "ivy.Array.unique_all": [[1877, "ivy-array-unique-all"]], "ivy.Container.unique_all": [[1878, "ivy-container-unique-all"]], "ivy.unique_all": [[1879, "ivy-unique-all"]], "unique_counts": [[1880, "unique-counts"]], "ivy.Container.static_unique_counts": [[1881, "ivy-container-static-unique-counts"]], "ivy.Array.unique_counts": [[1882, "ivy-array-unique-counts"]], "ivy.Container.unique_counts": [[1883, "ivy-container-unique-counts"]], "ivy.unique_counts": [[1884, "ivy-unique-counts"]], "unique_inverse": [[1885, "unique-inverse"]], "ivy.Container.static_unique_inverse": [[1886, "ivy-container-static-unique-inverse"]], "ivy.Array.unique_inverse": [[1887, "ivy-array-unique-inverse"]], "ivy.Container.unique_inverse": [[1888, "ivy-container-unique-inverse"]], "ivy.unique_inverse": [[1889, "ivy-unique-inverse"]], "unique_values": [[1890, "unique-values"]], "ivy.Container.static_unique_values": [[1891, "ivy-container-static-unique-values"]], "ivy.Array.unique_values": [[1892, "ivy-array-unique-values"]], "ivy.Container.unique_values": [[1893, "ivy-container-unique-values"]], "ivy.unique_values": [[1894, "ivy-unique-values"]], "argsort": [[1896, "argsort"]], "ivy.Array.argsort": [[1897, "ivy-array-argsort"]], "ivy.Container.argsort": [[1898, "ivy-container-argsort"]], "ivy.argsort": [[1899, "ivy-argsort"]], "ivy.Container.static_argsort": [[1900, "ivy-container-static-argsort"]], "searchsorted": [[1901, "searchsorted"]], "ivy.Array.searchsorted": [[1902, "ivy-array-searchsorted"]], "ivy.Container.searchsorted": [[1903, "ivy-container-searchsorted"]], "ivy.searchsorted": [[1904, "ivy-searchsorted"]], "ivy.Container.static_searchsorted": [[1905, "ivy-container-static-searchsorted"]], "sort": [[1906, "sort"]], "ivy.Array.sort": [[1907, "ivy-array-sort"]], "ivy.Container.sort": [[1908, "ivy-container-sort"]], "ivy.sort": [[1909, "ivy-sort"]], "ivy.Container.static_sort": [[1910, "ivy-container-static-sort"]], "cumprod": [[1912, "cumprod"]], "ivy.Array.cumprod": [[1913, "ivy-array-cumprod"]], "ivy.Container.cumprod": [[1914, "ivy-container-cumprod"]], "ivy.cumprod": [[1915, "ivy-cumprod"]], "ivy.Container.static_cumprod": [[1916, "ivy-container-static-cumprod"]], "cumsum": [[1917, "cumsum"]], "ivy.Array.cumsum": [[1918, "ivy-array-cumsum"]], "ivy.Container.cumsum": [[1919, "ivy-container-cumsum"]], "ivy.cumsum": [[1920, "ivy-cumsum"]], "ivy.Container.static_cumsum": [[1921, "ivy-container-static-cumsum"]], "einsum": [[1922, "einsum"]], "ivy.Array.einsum": [[1923, "ivy-array-einsum"]], "ivy.Container.einsum": [[1924, "ivy-container-einsum"]], "ivy.einsum": [[1925, "ivy-einsum"]], "max": [[1926, "max"]], "ivy.Array.max": [[1927, "ivy-array-max"]], "ivy.Container.max": [[1928, "ivy-container-max"]], "ivy.max": [[1929, "ivy-max"]], "mean": [[1930, "mean"]], "ivy.Array.mean": [[1931, "ivy-array-mean"]], "ivy.Container.mean": [[1932, "ivy-container-mean"]], "ivy.mean": [[1933, "ivy-mean"]], "min": [[1934, "min"]], "ivy.Array.min": [[1935, "ivy-array-min"]], "ivy.Container.min": [[1936, "ivy-container-min"]], "ivy.min": [[1937, "ivy-min"]], "prod": [[1938, "prod"], [2085, "prod"]], "ivy.Array.prod": [[1939, "ivy-array-prod"]], "ivy.Container.prod": [[1940, "ivy-container-prod"]], "ivy.prod": [[1941, "ivy-prod"]], "ivy.Container.static_prod": [[1942, "ivy-container-static-prod"]], "std": [[1943, "std"]], "ivy.Array.std": [[1944, "ivy-array-std"]], "ivy.Container.std": [[1945, "ivy-container-std"]], "ivy.std": [[1946, "ivy-std"]], "sum": [[1947, "sum"]], "ivy.Container.static_sum": [[1948, "ivy-container-static-sum"]], "ivy.Array.sum": [[1949, "ivy-array-sum"]], "ivy.Container.sum": [[1950, "ivy-container-sum"]], "ivy.sum": [[1951, "ivy-sum"]], "var": [[1952, "var"]], "ivy.Container.static_var": [[1953, "ivy-container-static-var"]], "ivy.Array.var": [[1954, "ivy-array-var"]], "ivy.Container.var": [[1955, "ivy-container-var"]], "ivy.var": [[1956, "ivy-var"]], "all": [[1958, "all"]], "ivy.Array.all": [[1959, "ivy-array-all"]], "ivy.Container.all": [[1960, "ivy-container-all"]], "ivy.all": [[1961, "ivy-all"]], "ivy.Container.static_all": [[1962, "ivy-container-static-all"]], "any": [[1963, "any"]], "ivy.Array.any": [[1964, "ivy-array-any"]], "ivy.Container.any": [[1965, "ivy-container-any"]], "ivy.any": [[1966, "ivy-any"]], "ivy.Container.static_any": [[1967, "ivy-container-static-any"]], "Glossary": [[1968, "glossary"]], "Contents": [[1969, "contents"]], "Overview": [[1969, "overview"]], "Quick Start": [[1969, "quick-start"]], "Citation": [[1969, "citation"]], "Inspection": [[1972, "module-ivy.inspection"]], "add_array_specs": [[1973, "add-array-specs"]], "fn_array_spec": [[1974, "fn-array-spec"]], "Nested array": [[1975, "module-ivy.nested_array.nested_array"]], "NestedArray": [[1976, "nestedarray"]], "Related Work": [[1977, "related-work"]], "API Standards": [[1978, "api-standards"], [1987, "api-standards"]], "Array API Standard": [[1978, "id1"]], "Compiler Infrastructure": [[1979, "compiler-infrastructure"], [1987, "compiler-infrastructure"]], "LLVM": [[1979, "id1"]], "MLIR": [[1979, "id2"]], "OneAPI": [[1979, "id3"]], "Exchange Formats": [[1980, "exchange-formats"], [1987, "exchange-formats"]], "ONNX onnx": [[1980, "onnx-onnx"]], "NNEF nnef": [[1980, "nnef-nnef"]], "CoreML coreml": [[1980, "coreml-coreml"]], "Frameworks": [[1981, "frameworks"], [1987, "frameworks"]], "MATLAB matlab": [[1981, "matlab-matlab"]], "SciPy scipy": [[1981, "scipy-scipy"]], "Torch torch": [[1981, "torch-torch"]], "NumPy numpy": [[1981, "numpy-numpy"]], "SciKit Learn scikit-learn": [[1981, "scikit-learn-scikit-learn"]], "Theano theano": [[1981, "theano-theano"]], "Pandas pandas": [[1981, "pandas-pandas"]], "Julia julia": [[1981, "julia-julia"]], "Apache Spark MLlib apache-spark-mllib": [[1981, "apache-spark-mllib-apache-spark-mllib"]], "Caffe caffe": [[1981, "caffe-caffe"]], "Chainer chainer": [[1981, "chainer-chainer"]], "TensorFlow 1 tensorflow-1": [[1981, "tensorflow-1-tensorflow-1"]], "MXNet mxnet": [[1981, "mxnet-mxnet"]], "CNTK cntk": [[1981, "cntk-cntk"]], "PyTorch pytorch": [[1981, "pytorch-pytorch"]], "Flux flux": [[1981, "flux-flux"]], "JAX jax": [[1981, "jax-jax"]], "TensorFlow 2 tensorflow-2": [[1981, "tensorflow-2-tensorflow-2"]], "DEX Language dex-language": [[1981, "dex-language-dex-language"]], "Graph Tracers": [[1982, "graph-tracers"], [1987, "graph-tracers"]], "tf.Graph": [[1982, "tf-graph"]], "Jaxpr": [[1982, "jaxpr"]], "torch.jit": [[1982, "torch-jit"]], "torch.fx": [[1982, "torch-fx"]], "ML-Unifying Companies": [[1983, "ml-unifying-companies"], [1987, "ml-unifying-companies"]], "Quansight": [[1983, "id1"]], "Modular": [[1983, "id2"]], "OctoML": [[1983, "id3"]], "Multi-Vendor Compiler Frameworks": [[1984, "multi-vendor-compiler-frameworks"], [1987, "multi-vendor-compiler-frameworks"]], "Apache TVM": [[1984, "apache-tvm"]], "XLA": [[1984, "xla"]], "GCC": [[1984, "gcc"]], "Vendor-Specific APIs": [[1985, "vendor-specific-apis"], [1987, "vendor-specific-apis"]], "TensorRT tensorrt": [[1985, "tensorrt-tensorrt"]], "CUDA cuda": [[1985, "cuda-cuda"]], "Vendor-Specific Compilers": [[1986, "vendor-specific-compilers"], [1987, "vendor-specific-compilers"]], "ICC": [[1986, "id1"]], "ICX": [[1986, "icx"]], "NVCC": [[1986, "nvcc"]], "What does Ivy Add?": [[1987, "what-does-ivy-add"]], "Wrapper Frameworks": [[1987, "wrapper-frameworks"], [1988, "wrapper-frameworks"]], "EagerPy eagerpy": [[1988, "eagerpy-eagerpy"]], "Keras keras": [[1988, "keras-keras"]], "Thinc thinc": [[1988, "thinc-thinc"]], "TensorLy tensorly": [[1988, "tensorly-tensorly"]], "NeuroPod": [[1988, "id1"]], "Framework classes": [[1989, "module-ivy.stateful"]], "GEGLU": [[1991, "geglu"]], "GELU": [[1992, "gelu"]], "Converters": [[1993, "module-ivy.stateful.converters"]], "to_ivy_module": [[1994, "to-ivy-module"]], "Helpers": [[1995, "module-ivy.stateful.helpers"]], "ModuleHelpers": [[1996, "modulehelpers"]], "Constant": [[1998, "constant"]], "FirstLayerSiren": [[1999, "firstlayersiren"]], "GlorotUniform": [[2000, "glorotuniform"]], "Initializer": [[2001, "initializer"]], "KaimingNormal": [[2002, "kaimingnormal"]], "Ones": [[2003, "ones"]], "Siren": [[2004, "siren"]], "Uniform": [[2005, "uniform"]], "Zeros": [[2006, "zeros"]], "Conv1D": [[2008, "conv1d"]], "Conv1DTranspose": [[2009, "conv1dtranspose"]], "Conv2D": [[2010, "conv2d"]], "Conv2DTranspose": [[2011, "conv2dtranspose"]], "Conv3D": [[2012, "conv3d"]], "Conv3DTranspose": [[2013, "conv3dtranspose"]], "DepthwiseConv2D": [[2014, "depthwiseconv2d"]], "Dropout": [[2015, "dropout"]], "LSTM": [[2016, "lstm"]], "Linear": [[2017, "linear"]], "MultiHeadAttention": [[2018, "multiheadattention"]], "Module": [[2019, "module-ivy.stateful.module"], [2020, "module"]], "MyTFModule": [[2021, "mytfmodule"]], "MyTorchModule": [[2022, "mytorchmodule"]], "LayerNorm": [[2024, "layernorm"]], "Adam": [[2026, "adam"]], "LAMB": [[2027, "lamb"]], "LARS": [[2028, "lars"]], "Optimizer": [[2029, "optimizer"]], "SGD": [[2030, "sgd"]], "Sequential": [[2031, "module-ivy.stateful.sequential"], [2032, "sequential"]], "assert_all_close": [[2035, "assert-all-close"]], "assert_same_type_and_shape": [[2036, "assert-same-type-and-shape"]], "check_unsupported_device": [[2037, "check-unsupported-device"]], "check_unsupported_device_and_dtype": [[2038, "check-unsupported-device-and-dtype"]], "check_unsupported_dtype": [[2039, "check-unsupported-dtype"]], "test_unsupported_function": [[2040, "test-unsupported-function"]], "value_test": [[2041, "value-test"]], "Available frameworks": [[2042, "module-ivy_tests.test_ivy.helpers.available_frameworks"]], "Function testing": [[2043, "module-ivy_tests.test_ivy.helpers.function_testing"]], "args_to_container": [[2044, "args-to-container"]], "as_cont": [[2045, "as-cont"]], "as_lists": [[2046, "as-lists"]], "convtrue": [[2047, "convtrue"]], "create_args_kwargs": [[2048, "create-args-kwargs"]], "empty_func": [[2049, "empty-func"]], "flatten_and_to_np": [[2051, "flatten-and-to-np"]], "flatten_fw_and_to_np": [[2052, "flatten-fw-and-to-np"]], "get_frontend_ret": [[2053, "get-frontend-ret"]], "get_ret_and_flattened_np_array": [[2054, "get-ret-and-flattened-np-array"]], "gradient_incompatible_function": [[2055, "gradient-incompatible-function"]], "gradient_test": [[2056, "gradient-test"]], "gradient_unsupported_dtypes": [[2057, "gradient-unsupported-dtypes"]], "kwargs_to_args_n_kwargs": [[2058, "kwargs-to-args-n-kwargs"]], "test_frontend_function": [[2059, "test-frontend-function"]], "test_frontend_method": [[2060, "test-frontend-method"]], "test_function": [[2061, "test-function"]], "test_method": [[2062, "test-method"]], "var_fn": [[2063, "var-fn"]], "Globals": [[2064, "module-ivy_tests.test_ivy.helpers.globals"]], "InterruptedTest": [[2065, "interruptedtest"]], "TestData": [[2066, "testdata"]], "setup_api_test": [[2067, "setup-api-test"]], "setup_frontend_test": [[2068, "setup-frontend-test"]], "teardown_api_test": [[2069, "teardown-api-test"]], "teardown_frontend_test": [[2070, "teardown-frontend-test"]], "Hypothesis helpers": [[2071, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"]], "Array helpers": [[2072, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers"]], "array_and_broadcastable_shape": [[2073, "array-and-broadcastable-shape"]], "array_bools": [[2074, "array-bools"]], "array_indices_axis": [[2075, "array-indices-axis"]], "array_values": [[2076, "array-values"]], "arrays_and_axes": [[2077, "arrays-and-axes"]], "arrays_for_pooling": [[2078, "arrays-for-pooling"]], "dtype_and_values": [[2080, "dtype-and-values"]], "dtype_values_axis": [[2081, "dtype-values-axis"]], "list_of_length": [[2082, "list-of-length"]], "lists": [[2083, "lists"]], "mutually_broadcastable_shapes": [[2084, "mutually-broadcastable-shapes"]], "Dtype helpers": [[2086, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers"]], "array_dtypes": [[2087, "array-dtypes"]], "get_castable_dtype": [[2088, "get-castable-dtype"]], "get_dtypes": [[2089, "get-dtypes"]], "General helpers": [[2090, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers"]], "apply_safety_factor": [[2091, "apply-safety-factor"]], "get_axis": [[2092, "get-axis"]], "get_bounds": [[2093, "get-bounds"]], "get_mean_std": [[2094, "get-mean-std"]], "get_shape": [[2095, "get-shape"]], "matrix_is_stable": [[2096, "matrix-is-stable"]], "reshape_shapes": [[2097, "reshape-shapes"]], "subsets": [[2098, "subsets"]], "x_and_filters": [[2099, "x-and-filters"]], "Number helpers": [[2100, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers"]], "floats": [[2101, "floats"]], "ints": [[2102, "ints"]], "number": [[2103, "number"]], "Structs": [[2104, "module-ivy_tests.test_ivy.helpers.structs"]], "FrontendMethodData": [[2105, "frontendmethoddata"]], "Test parameter flags": [[2106, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"]], "AsVariableFlags": [[2107, "asvariableflags"]], "ContainerFlags": [[2108, "containerflags"]], "FunctionTestFlags": [[2109, "functiontestflags"]], "NativeArrayFlags": [[2110, "nativearrayflags"]], "NumPositionalArg": [[2111, "numpositionalarg"]], "NumPositionalArgFn": [[2112, "numpositionalargfn"]], "NumPositionalArgMethod": [[2113, "numpositionalargmethod"]], "build_flag": [[2114, "build-flag"]], "function_flags": [[2115, "function-flags"]], "Testing helpers": [[2116, "module-ivy_tests.test_ivy.helpers.testing_helpers"]], "handle_frontend_method": [[2117, "handle-frontend-method"]], "handle_frontend_test": [[2118, "handle-frontend-test"]], "handle_method": [[2119, "handle-method"]], "handle_test": [[2120, "handle-test"]], "num_positional_args": [[2121, "num-positional-args"]], "num_positional_args_method": [[2122, "num-positional-args-method"]], "Verbosity": [[2124, "module-ivy.verbosity"]], "cprint": [[2125, "cprint"]]}, "indexentries": {"ivy._version": [[0, "module-ivy._version"]], "module": [[0, "module-ivy._version"], [1, "module-ivy.assertions"], [19, "module-ivy.backend_handler"], [45, "module-ivy.array.array"], [46, "module-ivy.array.activations"], [48, "module-ivy.array.array"], [50, "module-ivy.array.conversions"], [55, "module-ivy.array.creation"], [57, "module-ivy.array.data_type"], [59, "module-ivy.array.device"], [61, "module-ivy.array.elementwise"], [64, "module-ivy.array.general"], [66, "module-ivy.array.gradients"], [68, "module-ivy.array.image"], [70, "module-ivy.array.layers"], [72, "module-ivy.array.linear_algebra"], [74, "module-ivy.array.losses"], [76, "module-ivy.array.manipulation"], [78, "module-ivy.array.norms"], [80, "module-ivy.array.random"], [82, "module-ivy.array.searching"], [84, "module-ivy.array.set"], [86, "module-ivy.array.sorting"], [88, "module-ivy.array.statistical"], [90, "module-ivy.array.utility"], [92, "module-ivy.array.wrapping"], [94, "module-ivy.container.container"], [95, "module-ivy.container.activations"], [97, "module-ivy.container.base"], [99, "module-ivy.container.container"], [101, "module-ivy.container.conversions"], [103, "module-ivy.container.creation"], [105, "module-ivy.container.data_type"], [107, "module-ivy.container.device"], [109, "module-ivy.container.elementwise"], [112, "module-ivy.container.general"], [114, "module-ivy.container.gradients"], [116, "module-ivy.container.image"], [118, "module-ivy.container.layers"], [120, "module-ivy.container.linear_algebra"], [122, "module-ivy.container.losses"], [124, "module-ivy.container.manipulation"], [126, "module-ivy.container.norms"], [128, "module-ivy.container.random"], [130, "module-ivy.container.searching"], [132, "module-ivy.container.set"], [134, "module-ivy.container.sorting"], [136, "module-ivy.container.statistical"], [138, "module-ivy.container.utility"], [140, "module-ivy.container.wrapping"], [182, "module-ivy.func_wrapper"], [196, "module-ivy.functional.ivy.activations"], [234, "module-ivy.functional.ivy.compilation"], [236, "module-ivy.functional.ivy.constants"], [237, "module-ivy.functional.ivy.creation"], [323, "module-ivy.functional.ivy.data_type"], [418, "module-ivy.functional.ivy.device"], [453, "module-ivy.functional.ivy.elementwise"], [774, "module-ivy.functional.ivy.experimental"], [777, "module-ivy.functional.ivy.experimental.activations"], [832, "module-ivy.functional.ivy.experimental.compilation"], [833, "module-ivy.functional.ivy.experimental.constants"], [844, "module-ivy.functional.ivy.experimental.creation"], [852, "module-ivy.functional.ivy.experimental.data_type"], [859, "module-ivy.functional.ivy.experimental.device"], [891, "module-ivy.functional.ivy.experimental.elementwise"], [966, "module-ivy.functional.ivy.experimental.general"], [973, "module-ivy.functional.ivy.experimental.gradients"], [1038, "module-ivy.functional.ivy.experimental.layers"], [1053, "module-ivy.functional.ivy.experimental.linear_algebra"], [1069, "module-ivy.functional.ivy.experimental.losses"], [1071, "module-ivy.functional.ivy.experimental.manipulation"], [1119, "module-ivy.functional.ivy.experimental.meta"], [1154, "module-ivy.functional.ivy.experimental.nest"], [1160, "module-ivy.functional.ivy.experimental.norms"], [1171, "module-ivy.functional.ivy.experimental.random"], [1180, "module-ivy.functional.ivy.experimental.searching"], [1181, "module-ivy.functional.ivy.experimental.set"], [1192, "module-ivy.functional.ivy.experimental.sorting"], [1194, "module-ivy.functional.ivy.experimental.sparse_array"], [1201, "module-ivy.functional.ivy.experimental.statistical"], [1232, "module-ivy.functional.ivy.experimental.utility"], [1258, "module-ivy.functional.ivy.general"], [1451, "module-ivy.functional.ivy.gradients"], [1489, "module-ivy.functional.ivy.layers"], [1555, "module-ivy.functional.ivy.linear_algebra"], [1695, "module-ivy.functional.ivy.losses"], [1711, "module-ivy.functional.ivy.manipulation"], [1792, "module-ivy.functional.ivy.meta"], [1796, "module-ivy.functional.ivy.nest"], [1816, "module-ivy.functional.ivy.norms"], [1821, "module-ivy.functional.ivy.random"], [1848, "module-ivy.functional.ivy.searching"], [1874, "module-ivy.functional.ivy.set"], [1895, "module-ivy.functional.ivy.sorting"], [1911, "module-ivy.functional.ivy.statistical"], [1957, "module-ivy.functional.ivy.utility"], [1972, "module-ivy.inspection"], [1975, "module-ivy.nested_array.nested_array"], [1989, "module-ivy.stateful"], [1990, "module-ivy.stateful.activations"], [1993, "module-ivy.stateful.converters"], [1995, "module-ivy.stateful.helpers"], [1997, "module-ivy.stateful.initializers"], [2007, "module-ivy.stateful.layers"], [2019, "module-ivy.stateful.module"], [2023, "module-ivy.stateful.norms"], [2025, "module-ivy.stateful.optimizers"], [2031, "module-ivy.stateful.sequential"], [2034, "module-ivy_tests.test_ivy.helpers.assertions"], [2042, "module-ivy_tests.test_ivy.helpers.available_frameworks"], [2043, "module-ivy_tests.test_ivy.helpers.function_testing"], [2064, "module-ivy_tests.test_ivy.helpers.globals"], [2071, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"], [2072, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers"], [2086, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers"], [2090, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers"], [2100, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers"], [2104, "module-ivy_tests.test_ivy.helpers.structs"], [2106, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"], [2116, "module-ivy_tests.test_ivy.helpers.testing_helpers"], [2124, "module-ivy.verbosity"]], "check_all() (in module ivy.assertions)": [[1, "ivy.assertions.check_all"], [2, "ivy.assertions.check_all"]], "check_all_or_any_fn() (in module ivy.assertions)": [[1, "ivy.assertions.check_all_or_any_fn"], [3, "ivy.assertions.check_all_or_any_fn"]], "check_any() (in module ivy.assertions)": [[1, "ivy.assertions.check_any"], [4, "ivy.assertions.check_any"]], "check_elem_in_list() (in module ivy.assertions)": [[1, "ivy.assertions.check_elem_in_list"], [5, "ivy.assertions.check_elem_in_list"]], "check_equal() (in module ivy.assertions)": [[1, "ivy.assertions.check_equal"], [6, "ivy.assertions.check_equal"]], "check_exists() (in module ivy.assertions)": [[1, "ivy.assertions.check_exists"], [7, "ivy.assertions.check_exists"]], "check_false() (in module ivy.assertions)": [[1, "ivy.assertions.check_false"], [8, "ivy.assertions.check_false"]], "check_fill_value_and_dtype_are_compatible() (in module ivy.assertions)": [[1, "ivy.assertions.check_fill_value_and_dtype_are_compatible"], [9, "ivy.assertions.check_fill_value_and_dtype_are_compatible"]], "check_gather_input_valid() (in module ivy.assertions)": [[1, "ivy.assertions.check_gather_input_valid"], [10, "ivy.assertions.check_gather_input_valid"]], "check_gather_nd_input_valid() (in module ivy.assertions)": [[1, "ivy.assertions.check_gather_nd_input_valid"], [11, "ivy.assertions.check_gather_nd_input_valid"]], "check_greater() (in module ivy.assertions)": [[1, "ivy.assertions.check_greater"], [12, "ivy.assertions.check_greater"]], "check_inplace_sizes_valid() (in module ivy.assertions)": [[1, "ivy.assertions.check_inplace_sizes_valid"], [13, "ivy.assertions.check_inplace_sizes_valid"]], "check_isinstance() (in module ivy.assertions)": [[1, "ivy.assertions.check_isinstance"], [14, "ivy.assertions.check_isinstance"]], "check_less() (in module ivy.assertions)": [[1, "ivy.assertions.check_less"], [15, "ivy.assertions.check_less"]], "check_one_way_broadcastable() (in module ivy.assertions)": [[1, "ivy.assertions.check_one_way_broadcastable"], [16, "ivy.assertions.check_one_way_broadcastable"]], "check_shape() (in module ivy.assertions)": [[1, "ivy.assertions.check_shape"], [17, "ivy.assertions.check_shape"]], "check_true() (in module ivy.assertions)": [[1, "ivy.assertions.check_true"], [18, "ivy.assertions.check_true"]], "ivy.assertions": [[1, "module-ivy.assertions"]], "contextmanager (class in ivy.backend_handler)": [[19, "ivy.backend_handler.ContextManager"], [20, "ivy.backend_handler.ContextManager"]], "__init__() (ivy.backend_handler.contextmanager method)": [[19, "ivy.backend_handler.ContextManager.__init__"], [20, "ivy.backend_handler.ContextManager.__init__"]], "choose_random_backend() (in module ivy.backend_handler)": [[19, "ivy.backend_handler.choose_random_backend"], [21, "ivy.backend_handler.choose_random_backend"]], "clear_backend_stack() (in module ivy.backend_handler)": [[19, "ivy.backend_handler.clear_backend_stack"], [22, "ivy.backend_handler.clear_backend_stack"]], "current_backend() (in module ivy.backend_handler)": [[19, "ivy.backend_handler.current_backend"], [23, "ivy.backend_handler.current_backend"]], "fn_name_from_version_specific_fn_name() (in module ivy.backend_handler)": [[19, "ivy.backend_handler.fn_name_from_version_specific_fn_name"], [24, "ivy.backend_handler.fn_name_from_version_specific_fn_name"]], "get_backend() (in module ivy.backend_handler)": [[19, "ivy.backend_handler.get_backend"], [25, "ivy.backend_handler.get_backend"]], "ivy.backend_handler": [[19, "module-ivy.backend_handler"]], "set_backend() (in module ivy.backend_handler)": [[19, "ivy.backend_handler.set_backend"], [26, "ivy.backend_handler.set_backend"]], "set_backend_to_specific_version() (in module ivy.backend_handler)": [[19, "ivy.backend_handler.set_backend_to_specific_version"], [27, "ivy.backend_handler.set_backend_to_specific_version"]], "set_jax_backend() (in module ivy.backend_handler)": [[19, "ivy.backend_handler.set_jax_backend"], [28, "ivy.backend_handler.set_jax_backend"]], "set_numpy_backend() (in module ivy.backend_handler)": [[19, "ivy.backend_handler.set_numpy_backend"], [29, "ivy.backend_handler.set_numpy_backend"]], "set_tensorflow_backend() (in module ivy.backend_handler)": [[19, "ivy.backend_handler.set_tensorflow_backend"], [30, "ivy.backend_handler.set_tensorflow_backend"]], "set_torch_backend() (in module ivy.backend_handler)": [[19, "ivy.backend_handler.set_torch_backend"], [31, "ivy.backend_handler.set_torch_backend"]], "unset_backend() (in module ivy.backend_handler)": [[19, "ivy.backend_handler.unset_backend"], [32, "ivy.backend_handler.unset_backend"]], "array (class in ivy.array.array)": [[45, "ivy.array.array.Array"], [48, "ivy.array.array.Array"], [49, "ivy.array.array.Array"]], "t (ivy.array.array.array property)": [[45, "ivy.array.array.Array.T"], [48, "ivy.array.array.Array.T"], [49, "ivy.array.array.Array.T"]], "__abs__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__abs__"], [48, "ivy.array.array.Array.__abs__"], [49, "ivy.array.array.Array.__abs__"]], "__add__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__add__"], [48, "ivy.array.array.Array.__add__"], [49, "ivy.array.array.Array.__add__"]], "__eq__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__eq__"], [48, "ivy.array.array.Array.__eq__"], [49, "ivy.array.array.Array.__eq__"]], "__ge__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__ge__"], [48, "ivy.array.array.Array.__ge__"], [49, "ivy.array.array.Array.__ge__"]], "__gt__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__gt__"], [48, "ivy.array.array.Array.__gt__"], [49, "ivy.array.array.Array.__gt__"]], "__init__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__init__"], [48, "ivy.array.array.Array.__init__"], [49, "ivy.array.array.Array.__init__"]], "__le__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__le__"], [48, "ivy.array.array.Array.__le__"], [49, "ivy.array.array.Array.__le__"]], "__lt__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__lt__"], [48, "ivy.array.array.Array.__lt__"], [49, "ivy.array.array.Array.__lt__"]], "__ne__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__ne__"], [48, "ivy.array.array.Array.__ne__"], [49, "ivy.array.array.Array.__ne__"]], "__pow__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__pow__"], [48, "ivy.array.array.Array.__pow__"], [49, "ivy.array.array.Array.__pow__"]], "__radd__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__radd__"], [48, "ivy.array.array.Array.__radd__"], [49, "ivy.array.array.Array.__radd__"]], "__rrshift__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__rrshift__"], [48, "ivy.array.array.Array.__rrshift__"], [49, "ivy.array.array.Array.__rrshift__"]], "__rshift__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__rshift__"], [48, "ivy.array.array.Array.__rshift__"], [49, "ivy.array.array.Array.__rshift__"]], "__rsub__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__rsub__"], [48, "ivy.array.array.Array.__rsub__"], [49, "ivy.array.array.Array.__rsub__"]], "__sub__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__sub__"], [48, "ivy.array.array.Array.__sub__"], [49, "ivy.array.array.Array.__sub__"]], "__truediv__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__truediv__"], [48, "ivy.array.array.Array.__truediv__"], [49, "ivy.array.array.Array.__truediv__"]], "__xor__() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.__xor__"], [48, "ivy.array.array.Array.__xor__"], [49, "ivy.array.array.Array.__xor__"]], "arange() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.arange"], [48, "ivy.array.array.Array.arange"], [49, "ivy.array.array.Array.arange"]], "arg_info() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.arg_info"], [48, "ivy.array.array.Array.arg_info"], [49, "ivy.array.array.Array.arg_info"]], "arg_names() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.arg_names"], [48, "ivy.array.array.Array.arg_names"], [49, "ivy.array.array.Array.arg_names"]], "args_to_ivy() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.args_to_ivy"], [48, "ivy.array.array.Array.args_to_ivy"], [49, "ivy.array.array.Array.args_to_ivy"]], "args_to_native() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.args_to_native"], [48, "ivy.array.array.Array.args_to_native"], [49, "ivy.array.array.Array.args_to_native"]], "array() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.array"], [48, "ivy.array.array.Array.array"], [49, "ivy.array.array.Array.array"]], "as_ivy_dev() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.as_ivy_dev"], [48, "ivy.array.array.Array.as_ivy_dev"], [49, "ivy.array.array.Array.as_ivy_dev"]], "as_ivy_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.as_ivy_dtype"], [48, "ivy.array.array.Array.as_ivy_dtype"], [49, "ivy.array.array.Array.as_ivy_dtype"]], "as_native_dev() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.as_native_dev"], [48, "ivy.array.array.Array.as_native_dev"], [49, "ivy.array.array.Array.as_native_dev"]], "as_native_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.as_native_dtype"], [48, "ivy.array.array.Array.as_native_dtype"], [49, "ivy.array.array.Array.as_native_dtype"]], "asarray_handle_nestable() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.asarray_handle_nestable"], [48, "ivy.array.array.Array.asarray_handle_nestable"], [49, "ivy.array.array.Array.asarray_handle_nestable"]], "asarray_infer_device() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.asarray_infer_device"], [48, "ivy.array.array.Array.asarray_infer_device"], [49, "ivy.array.array.Array.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.asarray_to_native_arrays_and_back"], [48, "ivy.array.array.Array.asarray_to_native_arrays_and_back"], [49, "ivy.array.array.Array.asarray_to_native_arrays_and_back"]], "cache_fn() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.cache_fn"], [48, "ivy.array.array.Array.cache_fn"], [49, "ivy.array.array.Array.cache_fn"]], "check_float() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.check_float"], [48, "ivy.array.array.Array.check_float"], [49, "ivy.array.array.Array.check_float"]], "clear_mem_on_dev() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.clear_mem_on_dev"], [48, "ivy.array.array.Array.clear_mem_on_dev"], [49, "ivy.array.array.Array.clear_mem_on_dev"]], "closest_valid_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.closest_valid_dtype"], [48, "ivy.array.array.Array.closest_valid_dtype"], [49, "ivy.array.array.Array.closest_valid_dtype"]], "container_types() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.container_types"], [48, "ivy.array.array.Array.container_types"], [49, "ivy.array.array.Array.container_types"]], "conv() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.conv"], [48, "ivy.array.array.Array.conv"], [49, "ivy.array.array.Array.conv"]], "conv2d_transpose() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.conv2d_transpose"], [48, "ivy.array.array.Array.conv2d_transpose"], [49, "ivy.array.array.Array.conv2d_transpose"]], "conv_general_dilated() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.conv_general_dilated"], [48, "ivy.array.array.Array.conv_general_dilated"], [49, "ivy.array.array.Array.conv_general_dilated"]], "conv_general_transpose() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.conv_general_transpose"], [48, "ivy.array.array.Array.conv_general_transpose"], [49, "ivy.array.array.Array.conv_general_transpose"]], "current_backend() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.current_backend"], [48, "ivy.array.array.Array.current_backend"], [49, "ivy.array.array.Array.current_backend"]], "current_backend_str() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.current_backend_str"], [48, "ivy.array.array.Array.current_backend_str"], [49, "ivy.array.array.Array.current_backend_str"]], "data (ivy.array.array.array property)": [[45, "ivy.array.array.Array.data"], [48, "ivy.array.array.Array.data"], [49, "ivy.array.array.Array.data"]], "deconv_length() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.deconv_length"], [48, "ivy.array.array.Array.deconv_length"], [49, "ivy.array.array.Array.deconv_length"]], "default_device() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.default_device"], [48, "ivy.array.array.Array.default_device"], [49, "ivy.array.array.Array.default_device"]], "default_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.default_dtype"], [48, "ivy.array.array.Array.default_dtype"], [49, "ivy.array.array.Array.default_dtype"]], "default_float_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.default_float_dtype"], [48, "ivy.array.array.Array.default_float_dtype"], [49, "ivy.array.array.Array.default_float_dtype"]], "default_int_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.default_int_dtype"], [48, "ivy.array.array.Array.default_int_dtype"], [49, "ivy.array.array.Array.default_int_dtype"]], "default_uint_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.default_uint_dtype"], [48, "ivy.array.array.Array.default_uint_dtype"], [49, "ivy.array.array.Array.default_uint_dtype"]], "deserialize() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.deserialize"], [48, "ivy.array.array.Array.deserialize"], [49, "ivy.array.array.Array.deserialize"]], "dev_util() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.dev_util"], [48, "ivy.array.array.Array.dev_util"], [49, "ivy.array.array.Array.dev_util"]], "device (ivy.array.array.array property)": [[45, "ivy.array.array.Array.device"], [48, "ivy.array.array.Array.device"], [49, "ivy.array.array.Array.device"]], "dtype (ivy.array.array.array property)": [[45, "ivy.array.array.Array.dtype"], [48, "ivy.array.array.Array.dtype"], [49, "ivy.array.array.Array.dtype"]], "dtype_bits() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.dtype_bits"], [48, "ivy.array.array.Array.dtype_bits"], [49, "ivy.array.array.Array.dtype_bits"]], "empty() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.empty"], [48, "ivy.array.array.Array.empty"], [49, "ivy.array.array.Array.empty"]], "execute_with_gradients() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.execute_with_gradients"], [48, "ivy.array.array.Array.execute_with_gradients"], [49, "ivy.array.array.Array.execute_with_gradients"]], "eye() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.eye"], [48, "ivy.array.array.Array.eye"], [49, "ivy.array.array.Array.eye"]], "full() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.full"], [48, "ivy.array.array.Array.full"], [49, "ivy.array.array.Array.full"]], "function_supported_devices() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.function_supported_devices"], [48, "ivy.array.array.Array.function_supported_devices"], [49, "ivy.array.array.Array.function_supported_devices"]], "function_supported_devices_and_dtypes() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.function_supported_devices_and_dtypes"], [48, "ivy.array.array.Array.function_supported_devices_and_dtypes"], [49, "ivy.array.array.Array.function_supported_devices_and_dtypes"]], "function_supported_dtypes() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.function_supported_dtypes"], [48, "ivy.array.array.Array.function_supported_dtypes"], [49, "ivy.array.array.Array.function_supported_dtypes"]], "function_unsupported_devices() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.function_unsupported_devices"], [48, "ivy.array.array.Array.function_unsupported_devices"], [49, "ivy.array.array.Array.function_unsupported_devices"]], "function_unsupported_devices_and_dtypes() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.function_unsupported_devices_and_dtypes"], [48, "ivy.array.array.Array.function_unsupported_devices_and_dtypes"], [49, "ivy.array.array.Array.function_unsupported_devices_and_dtypes"]], "function_unsupported_dtypes() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.function_unsupported_dtypes"], [48, "ivy.array.array.Array.function_unsupported_dtypes"], [49, "ivy.array.array.Array.function_unsupported_dtypes"]], "get() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.get"], [48, "ivy.array.array.Array.get"], [49, "ivy.array.array.Array.get"]], "get_all_arrays_in_memory() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.get_all_arrays_in_memory"], [48, "ivy.array.array.Array.get_all_arrays_in_memory"], [49, "ivy.array.array.Array.get_all_arrays_in_memory"]], "get_all_ivy_arrays_on_dev() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.get_all_ivy_arrays_on_dev"], [48, "ivy.array.array.Array.get_all_ivy_arrays_on_dev"], [49, "ivy.array.array.Array.get_all_ivy_arrays_on_dev"]], "get_array_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.get_array_mode"], [48, "ivy.array.array.Array.get_array_mode"], [49, "ivy.array.array.Array.get_array_mode"]], "get_exception_trace_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.get_exception_trace_mode"], [48, "ivy.array.array.Array.get_exception_trace_mode"], [49, "ivy.array.array.Array.get_exception_trace_mode"]], "get_item() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.get_item"], [48, "ivy.array.array.Array.get_item"], [49, "ivy.array.array.Array.get_item"]], "get_min_base() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.get_min_base"], [48, "ivy.array.array.Array.get_min_base"], [49, "ivy.array.array.Array.get_min_base"]], "get_min_denominator() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.get_min_denominator"], [48, "ivy.array.array.Array.get_min_denominator"], [49, "ivy.array.array.Array.get_min_denominator"]], "get_nestable_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.get_nestable_mode"], [48, "ivy.array.array.Array.get_nestable_mode"], [49, "ivy.array.array.Array.get_nestable_mode"]], "get_queue_timeout() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.get_queue_timeout"], [48, "ivy.array.array.Array.get_queue_timeout"], [49, "ivy.array.array.Array.get_queue_timeout"]], "get_referrers_recursive() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.get_referrers_recursive"], [48, "ivy.array.array.Array.get_referrers_recursive"], [49, "ivy.array.array.Array.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.get_show_func_wrapper_trace_mode"], [48, "ivy.array.array.Array.get_show_func_wrapper_trace_mode"], [49, "ivy.array.array.Array.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.get_tmp_dir"], [48, "ivy.array.array.Array.get_tmp_dir"], [49, "ivy.array.array.Array.get_tmp_dir"]], "get_x_data_format() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.get_x_data_format"], [48, "ivy.array.array.Array.get_x_data_format"], [49, "ivy.array.array.Array.get_x_data_format"]], "gpu_is_available() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.gpu_is_available"], [48, "ivy.array.array.Array.gpu_is_available"], [49, "ivy.array.array.Array.gpu_is_available"]], "grad() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.grad"], [48, "ivy.array.array.Array.grad"], [49, "ivy.array.array.Array.grad"]], "handle_array_like() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.handle_array_like"], [48, "ivy.array.array.Array.handle_array_like"], [49, "ivy.array.array.Array.handle_array_like"]], "handle_exceptions() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.handle_exceptions"], [48, "ivy.array.array.Array.handle_exceptions"], [49, "ivy.array.array.Array.handle_exceptions"]], "handle_nestable() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.handle_nestable"], [48, "ivy.array.array.Array.handle_nestable"], [49, "ivy.array.array.Array.handle_nestable"]], "handle_out_argument() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.handle_out_argument"], [48, "ivy.array.array.Array.handle_out_argument"], [49, "ivy.array.array.Array.handle_out_argument"]], "handle_padding() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.handle_padding"], [48, "ivy.array.array.Array.handle_padding"], [49, "ivy.array.array.Array.handle_padding"]], "infer_default_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.infer_default_dtype"], [48, "ivy.array.array.Array.infer_default_dtype"], [49, "ivy.array.array.Array.infer_default_dtype"]], "infer_device() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.infer_device"], [48, "ivy.array.array.Array.infer_device"], [49, "ivy.array.array.Array.infer_device"]], "infer_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.infer_dtype"], [48, "ivy.array.array.Array.infer_dtype"], [49, "ivy.array.array.Array.infer_dtype"]], "inplace_arrays_supported() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.inplace_arrays_supported"], [48, "ivy.array.array.Array.inplace_arrays_supported"], [49, "ivy.array.array.Array.inplace_arrays_supported"]], "inplace_variables_supported() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.inplace_variables_supported"], [48, "ivy.array.array.Array.inplace_variables_supported"], [49, "ivy.array.array.Array.inplace_variables_supported"]], "inputs_to_ivy_arrays() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.inputs_to_ivy_arrays"], [48, "ivy.array.array.Array.inputs_to_ivy_arrays"], [49, "ivy.array.array.Array.inputs_to_ivy_arrays"]], "inputs_to_native_arrays() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.inputs_to_native_arrays"], [48, "ivy.array.array.Array.inputs_to_native_arrays"], [49, "ivy.array.array.Array.inputs_to_native_arrays"]], "integer_arrays_to_float() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.integer_arrays_to_float"], [48, "ivy.array.array.Array.integer_arrays_to_float"], [49, "ivy.array.array.Array.integer_arrays_to_float"]], "invalid_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.invalid_dtype"], [48, "ivy.array.array.Array.invalid_dtype"], [49, "ivy.array.array.Array.invalid_dtype"]], "isscalar() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.isscalar"], [48, "ivy.array.array.Array.isscalar"], [49, "ivy.array.array.Array.isscalar"]], "ivy.array.array": [[45, "module-ivy.array.array"], [48, "module-ivy.array.array"]], "jac() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.jac"], [48, "ivy.array.array.Array.jac"], [49, "ivy.array.array.Array.jac"]], "mt (ivy.array.array.array property)": [[45, "ivy.array.array.Array.mT"], [48, "ivy.array.array.Array.mT"], [49, "ivy.array.array.Array.mT"]], "match_kwargs() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.match_kwargs"], [48, "ivy.array.array.Array.match_kwargs"], [49, "ivy.array.array.Array.match_kwargs"]], "multiprocessing() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.multiprocessing"], [48, "ivy.array.array.Array.multiprocessing"], [49, "ivy.array.array.Array.multiprocessing"]], "ndim (ivy.array.array.array property)": [[45, "ivy.array.array.Array.ndim"], [48, "ivy.array.array.Array.ndim"], [49, "ivy.array.array.Array.ndim"]], "normalize_axis_tuple() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.normalize_axis_tuple"], [48, "ivy.array.array.Array.normalize_axis_tuple"], [49, "ivy.array.array.Array.normalize_axis_tuple"]], "num_arrays_in_memory() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.num_arrays_in_memory"], [48, "ivy.array.array.Array.num_arrays_in_memory"], [49, "ivy.array.array.Array.num_arrays_in_memory"]], "num_cpu_cores() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.num_cpu_cores"], [48, "ivy.array.array.Array.num_cpu_cores"], [49, "ivy.array.array.Array.num_cpu_cores"]], "num_gpus() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.num_gpus"], [48, "ivy.array.array.Array.num_gpus"], [49, "ivy.array.array.Array.num_gpus"]], "num_ivy_arrays_on_dev() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.num_ivy_arrays_on_dev"], [48, "ivy.array.array.Array.num_ivy_arrays_on_dev"], [49, "ivy.array.array.Array.num_ivy_arrays_on_dev"]], "ones() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.ones"], [48, "ivy.array.array.Array.ones"], [49, "ivy.array.array.Array.ones"]], "outputs_to_ivy_arrays() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.outputs_to_ivy_arrays"], [48, "ivy.array.array.Array.outputs_to_ivy_arrays"], [49, "ivy.array.array.Array.outputs_to_ivy_arrays"]], "percent_used_mem_on_dev() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.percent_used_mem_on_dev"], [48, "ivy.array.array.Array.percent_used_mem_on_dev"], [49, "ivy.array.array.Array.percent_used_mem_on_dev"]], "print_all_arrays_in_memory() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.print_all_arrays_in_memory"], [48, "ivy.array.array.Array.print_all_arrays_in_memory"], [49, "ivy.array.array.Array.print_all_arrays_in_memory"]], "print_all_ivy_arrays_on_dev() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.print_all_ivy_arrays_on_dev"], [48, "ivy.array.array.Array.print_all_ivy_arrays_on_dev"], [49, "ivy.array.array.Array.print_all_ivy_arrays_on_dev"]], "promote_types() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.promote_types"], [48, "ivy.array.array.Array.promote_types"], [49, "ivy.array.array.Array.promote_types"]], "promote_types_of_inputs() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.promote_types_of_inputs"], [48, "ivy.array.array.Array.promote_types_of_inputs"], [49, "ivy.array.array.Array.promote_types_of_inputs"]], "seed() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.seed"], [48, "ivy.array.array.Array.seed"], [49, "ivy.array.array.Array.seed"]], "set_array_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_array_mode"], [48, "ivy.array.array.Array.set_array_mode"], [49, "ivy.array.array.Array.set_array_mode"]], "set_default_device() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_default_device"], [48, "ivy.array.array.Array.set_default_device"], [49, "ivy.array.array.Array.set_default_device"]], "set_default_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_default_dtype"], [48, "ivy.array.array.Array.set_default_dtype"], [49, "ivy.array.array.Array.set_default_dtype"]], "set_default_float_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_default_float_dtype"], [48, "ivy.array.array.Array.set_default_float_dtype"], [49, "ivy.array.array.Array.set_default_float_dtype"]], "set_default_int_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_default_int_dtype"], [48, "ivy.array.array.Array.set_default_int_dtype"], [49, "ivy.array.array.Array.set_default_int_dtype"]], "set_default_uint_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_default_uint_dtype"], [48, "ivy.array.array.Array.set_default_uint_dtype"], [49, "ivy.array.array.Array.set_default_uint_dtype"]], "set_exception_trace_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_exception_trace_mode"], [48, "ivy.array.array.Array.set_exception_trace_mode"], [49, "ivy.array.array.Array.set_exception_trace_mode"]], "set_min_base() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_min_base"], [48, "ivy.array.array.Array.set_min_base"], [49, "ivy.array.array.Array.set_min_base"]], "set_min_denominator() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_min_denominator"], [48, "ivy.array.array.Array.set_min_denominator"], [49, "ivy.array.array.Array.set_min_denominator"]], "set_nestable_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_nestable_mode"], [48, "ivy.array.array.Array.set_nestable_mode"], [49, "ivy.array.array.Array.set_nestable_mode"]], "set_queue_timeout() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_queue_timeout"], [48, "ivy.array.array.Array.set_queue_timeout"], [49, "ivy.array.array.Array.set_queue_timeout"]], "set_shape_array_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_shape_array_mode"], [48, "ivy.array.array.Array.set_shape_array_mode"], [49, "ivy.array.array.Array.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_show_func_wrapper_trace_mode"], [48, "ivy.array.array.Array.set_show_func_wrapper_trace_mode"], [49, "ivy.array.array.Array.set_show_func_wrapper_trace_mode"]], "set_split_factor() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_split_factor"], [48, "ivy.array.array.Array.set_split_factor"], [49, "ivy.array.array.Array.set_split_factor"]], "set_tmp_dir() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_tmp_dir"], [48, "ivy.array.array.Array.set_tmp_dir"], [49, "ivy.array.array.Array.set_tmp_dir"]], "set_with_grads() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.set_with_grads"], [48, "ivy.array.array.Array.set_with_grads"], [49, "ivy.array.array.Array.set_with_grads"]], "shape (ivy.array.array.array property)": [[45, "ivy.array.array.Array.shape"], [48, "ivy.array.array.Array.shape"], [49, "ivy.array.array.Array.shape"]], "shape_array_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.shape_array_mode"], [48, "ivy.array.array.Array.shape_array_mode"], [49, "ivy.array.array.Array.shape_array_mode"]], "size (ivy.array.array.array property)": [[45, "ivy.array.array.Array.size"], [48, "ivy.array.array.Array.size"], [49, "ivy.array.array.Array.size"]], "split_factor() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.split_factor"], [48, "ivy.array.array.Array.split_factor"], [49, "ivy.array.array.Array.split_factor"]], "split_func_call() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.split_func_call"], [48, "ivy.array.array.Array.split_func_call"], [49, "ivy.array.array.Array.split_func_call"]], "to_ivy() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.to_ivy"], [48, "ivy.array.array.Array.to_ivy"], [49, "ivy.array.array.Array.to_ivy"]], "to_ivy_shape() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.to_ivy_shape"], [48, "ivy.array.array.Array.to_ivy_shape"], [49, "ivy.array.array.Array.to_ivy_shape"]], "to_native() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.to_native"], [48, "ivy.array.array.Array.to_native"], [49, "ivy.array.array.Array.to_native"]], "to_native_arrays_and_back() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.to_native_arrays_and_back"], [48, "ivy.array.array.Array.to_native_arrays_and_back"], [49, "ivy.array.array.Array.to_native_arrays_and_back"]], "to_native_shape() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.to_native_shape"], [48, "ivy.array.array.Array.to_native_shape"], [49, "ivy.array.array.Array.to_native_shape"]], "total_mem_on_dev() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.total_mem_on_dev"], [48, "ivy.array.array.Array.total_mem_on_dev"], [49, "ivy.array.array.Array.total_mem_on_dev"]], "tpu_is_available() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.tpu_is_available"], [48, "ivy.array.array.Array.tpu_is_available"], [49, "ivy.array.array.Array.tpu_is_available"]], "try_else_none() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.try_else_none"], [48, "ivy.array.array.Array.try_else_none"], [49, "ivy.array.array.Array.try_else_none"]], "type_promote_arrays() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.type_promote_arrays"], [48, "ivy.array.array.Array.type_promote_arrays"], [49, "ivy.array.array.Array.type_promote_arrays"]], "unset_array_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.unset_array_mode"], [48, "ivy.array.array.Array.unset_array_mode"], [49, "ivy.array.array.Array.unset_array_mode"]], "unset_default_device() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.unset_default_device"], [48, "ivy.array.array.Array.unset_default_device"], [49, "ivy.array.array.Array.unset_default_device"]], "unset_default_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.unset_default_dtype"], [48, "ivy.array.array.Array.unset_default_dtype"], [49, "ivy.array.array.Array.unset_default_dtype"]], "unset_default_float_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.unset_default_float_dtype"], [48, "ivy.array.array.Array.unset_default_float_dtype"], [49, "ivy.array.array.Array.unset_default_float_dtype"]], "unset_default_int_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.unset_default_int_dtype"], [48, "ivy.array.array.Array.unset_default_int_dtype"], [49, "ivy.array.array.Array.unset_default_int_dtype"]], "unset_default_uint_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.unset_default_uint_dtype"], [48, "ivy.array.array.Array.unset_default_uint_dtype"], [49, "ivy.array.array.Array.unset_default_uint_dtype"]], "unset_exception_trace_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.unset_exception_trace_mode"], [48, "ivy.array.array.Array.unset_exception_trace_mode"], [49, "ivy.array.array.Array.unset_exception_trace_mode"]], "unset_nestable_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.unset_nestable_mode"], [48, "ivy.array.array.Array.unset_nestable_mode"], [49, "ivy.array.array.Array.unset_nestable_mode"]], "unset_queue_timeout() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.unset_queue_timeout"], [48, "ivy.array.array.Array.unset_queue_timeout"], [49, "ivy.array.array.Array.unset_queue_timeout"]], "unset_shape_array_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.unset_shape_array_mode"], [48, "ivy.array.array.Array.unset_shape_array_mode"], [49, "ivy.array.array.Array.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.unset_show_func_wrapper_trace_mode"], [48, "ivy.array.array.Array.unset_show_func_wrapper_trace_mode"], [49, "ivy.array.array.Array.unset_show_func_wrapper_trace_mode"]], "unset_with_grads() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.unset_with_grads"], [48, "ivy.array.array.Array.unset_with_grads"], [49, "ivy.array.array.Array.unset_with_grads"]], "used_mem_on_dev() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.used_mem_on_dev"], [48, "ivy.array.array.Array.used_mem_on_dev"], [49, "ivy.array.array.Array.used_mem_on_dev"]], "valid_dtype() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.valid_dtype"], [48, "ivy.array.array.Array.valid_dtype"], [49, "ivy.array.array.Array.valid_dtype"]], "value_and_grad() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.value_and_grad"], [48, "ivy.array.array.Array.value_and_grad"], [49, "ivy.array.array.Array.value_and_grad"]], "vmap() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.vmap"], [48, "ivy.array.array.Array.vmap"], [49, "ivy.array.array.Array.vmap"]], "with_grads() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.with_grads"], [48, "ivy.array.array.Array.with_grads"], [49, "ivy.array.array.Array.with_grads"]], "wraps() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.wraps"], [48, "ivy.array.array.Array.wraps"], [49, "ivy.array.array.Array.wraps"]], "zeros() (ivy.array.array.array method)": [[45, "ivy.array.array.Array.zeros"], [48, "ivy.array.array.Array.zeros"], [49, "ivy.array.array.Array.zeros"]], "arraywithactivations (class in ivy.array.activations)": [[46, "ivy.array.activations.ArrayWithActivations"], [47, "ivy.array.activations.ArrayWithActivations"]], "gelu() (ivy.array.activations.arraywithactivations method)": [[46, "ivy.array.activations.ArrayWithActivations.gelu"], [47, "ivy.array.activations.ArrayWithActivations.gelu"]], "ivy.array.activations": [[46, "module-ivy.array.activations"]], "leaky_relu() (ivy.array.activations.arraywithactivations method)": [[46, "ivy.array.activations.ArrayWithActivations.leaky_relu"], [47, "ivy.array.activations.ArrayWithActivations.leaky_relu"]], "log_softmax() (ivy.array.activations.arraywithactivations method)": [[46, "ivy.array.activations.ArrayWithActivations.log_softmax"], [47, "ivy.array.activations.ArrayWithActivations.log_softmax"]], "relu() (ivy.array.activations.arraywithactivations method)": [[46, "ivy.array.activations.ArrayWithActivations.relu"], [47, "ivy.array.activations.ArrayWithActivations.relu"]], "sigmoid() (ivy.array.activations.arraywithactivations method)": [[46, "ivy.array.activations.ArrayWithActivations.sigmoid"], [47, "ivy.array.activations.ArrayWithActivations.sigmoid"]], "softmax() (ivy.array.activations.arraywithactivations method)": [[46, "ivy.array.activations.ArrayWithActivations.softmax"], [47, "ivy.array.activations.ArrayWithActivations.softmax"]], "softplus() (ivy.array.activations.arraywithactivations method)": [[46, "ivy.array.activations.ArrayWithActivations.softplus"], [47, "ivy.array.activations.ArrayWithActivations.softplus"]], "args_to_ivy() (in module ivy.array.conversions)": [[50, "ivy.array.conversions.args_to_ivy"], [51, "ivy.array.conversions.args_to_ivy"]], "args_to_native() (in module ivy.array.conversions)": [[50, "ivy.array.conversions.args_to_native"], [52, "ivy.array.conversions.args_to_native"]], "ivy.array.conversions": [[50, "module-ivy.array.conversions"]], "to_ivy() (in module ivy.array.conversions)": [[50, "ivy.array.conversions.to_ivy"], [53, "ivy.array.conversions.to_ivy"]], "to_native() (in module ivy.array.conversions)": [[50, "ivy.array.conversions.to_native"], [54, "ivy.array.conversions.to_native"]], "arraywithcreation (class in ivy.array.creation)": [[55, "ivy.array.creation.ArrayWithCreation"], [56, "ivy.array.creation.ArrayWithCreation"]], "asarray() (ivy.array.creation.arraywithcreation method)": [[55, "ivy.array.creation.ArrayWithCreation.asarray"], [56, "ivy.array.creation.ArrayWithCreation.asarray"]], "copy_array() (ivy.array.creation.arraywithcreation method)": [[55, "ivy.array.creation.ArrayWithCreation.copy_array"], [56, "ivy.array.creation.ArrayWithCreation.copy_array"]], "empty_like() (ivy.array.creation.arraywithcreation method)": [[55, "ivy.array.creation.ArrayWithCreation.empty_like"], [56, "ivy.array.creation.ArrayWithCreation.empty_like"]], "from_dlpack() (ivy.array.creation.arraywithcreation method)": [[55, "ivy.array.creation.ArrayWithCreation.from_dlpack"], [56, "ivy.array.creation.ArrayWithCreation.from_dlpack"]], "full_like() (ivy.array.creation.arraywithcreation method)": [[55, "ivy.array.creation.ArrayWithCreation.full_like"], [56, "ivy.array.creation.ArrayWithCreation.full_like"]], "ivy.array.creation": [[55, "module-ivy.array.creation"]], "linspace() (ivy.array.creation.arraywithcreation method)": [[55, "ivy.array.creation.ArrayWithCreation.linspace"], [56, "ivy.array.creation.ArrayWithCreation.linspace"]], "logspace() (ivy.array.creation.arraywithcreation method)": [[55, "ivy.array.creation.ArrayWithCreation.logspace"], [56, "ivy.array.creation.ArrayWithCreation.logspace"]], "meshgrid() (ivy.array.creation.arraywithcreation method)": [[55, "ivy.array.creation.ArrayWithCreation.meshgrid"], [56, "ivy.array.creation.ArrayWithCreation.meshgrid"]], "native_array() (ivy.array.creation.arraywithcreation method)": [[55, "ivy.array.creation.ArrayWithCreation.native_array"], [56, "ivy.array.creation.ArrayWithCreation.native_array"]], "one_hot() (ivy.array.creation.arraywithcreation method)": [[55, "ivy.array.creation.ArrayWithCreation.one_hot"], [56, "ivy.array.creation.ArrayWithCreation.one_hot"]], "ones_like() (ivy.array.creation.arraywithcreation method)": [[55, "ivy.array.creation.ArrayWithCreation.ones_like"], [56, "ivy.array.creation.ArrayWithCreation.ones_like"]], "tril() (ivy.array.creation.arraywithcreation method)": [[55, "ivy.array.creation.ArrayWithCreation.tril"], [56, "ivy.array.creation.ArrayWithCreation.tril"]], "triu() (ivy.array.creation.arraywithcreation method)": [[55, "ivy.array.creation.ArrayWithCreation.triu"], [56, "ivy.array.creation.ArrayWithCreation.triu"]], "zeros_like() (ivy.array.creation.arraywithcreation method)": [[55, "ivy.array.creation.ArrayWithCreation.zeros_like"], [56, "ivy.array.creation.ArrayWithCreation.zeros_like"]], "arraywithdatatypes (class in ivy.array.data_type)": [[57, "ivy.array.data_type.ArrayWithDataTypes"], [58, "ivy.array.data_type.ArrayWithDataTypes"]], "astype() (ivy.array.data_type.arraywithdatatypes method)": [[57, "ivy.array.data_type.ArrayWithDataTypes.astype"], [58, "ivy.array.data_type.ArrayWithDataTypes.astype"]], "broadcast_arrays() (ivy.array.data_type.arraywithdatatypes method)": [[57, "ivy.array.data_type.ArrayWithDataTypes.broadcast_arrays"], [58, "ivy.array.data_type.ArrayWithDataTypes.broadcast_arrays"]], "broadcast_to() (ivy.array.data_type.arraywithdatatypes method)": [[57, "ivy.array.data_type.ArrayWithDataTypes.broadcast_to"], [58, "ivy.array.data_type.ArrayWithDataTypes.broadcast_to"]], "can_cast() (ivy.array.data_type.arraywithdatatypes method)": [[57, "ivy.array.data_type.ArrayWithDataTypes.can_cast"], [58, "ivy.array.data_type.ArrayWithDataTypes.can_cast"]], "dtype() (ivy.array.data_type.arraywithdatatypes method)": [[57, "ivy.array.data_type.ArrayWithDataTypes.dtype"], [58, "ivy.array.data_type.ArrayWithDataTypes.dtype"]], "finfo() (ivy.array.data_type.arraywithdatatypes method)": [[57, "ivy.array.data_type.ArrayWithDataTypes.finfo"], [58, "ivy.array.data_type.ArrayWithDataTypes.finfo"]], "iinfo() (ivy.array.data_type.arraywithdatatypes method)": [[57, "ivy.array.data_type.ArrayWithDataTypes.iinfo"], [58, "ivy.array.data_type.ArrayWithDataTypes.iinfo"]], "is_bool_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[57, "ivy.array.data_type.ArrayWithDataTypes.is_bool_dtype"], [58, "ivy.array.data_type.ArrayWithDataTypes.is_bool_dtype"]], "is_float_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[57, "ivy.array.data_type.ArrayWithDataTypes.is_float_dtype"], [58, "ivy.array.data_type.ArrayWithDataTypes.is_float_dtype"]], "is_int_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[57, "ivy.array.data_type.ArrayWithDataTypes.is_int_dtype"], [58, "ivy.array.data_type.ArrayWithDataTypes.is_int_dtype"]], "is_uint_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[57, "ivy.array.data_type.ArrayWithDataTypes.is_uint_dtype"], [58, "ivy.array.data_type.ArrayWithDataTypes.is_uint_dtype"]], "ivy.array.data_type": [[57, "module-ivy.array.data_type"]], "result_type() (ivy.array.data_type.arraywithdatatypes method)": [[57, "ivy.array.data_type.ArrayWithDataTypes.result_type"], [58, "ivy.array.data_type.ArrayWithDataTypes.result_type"]], "arraywithdevice (class in ivy.array.device)": [[59, "ivy.array.device.ArrayWithDevice"], [60, "ivy.array.device.ArrayWithDevice"]], "dev() (ivy.array.device.arraywithdevice method)": [[59, "ivy.array.device.ArrayWithDevice.dev"], [60, "ivy.array.device.ArrayWithDevice.dev"]], "ivy.array.device": [[59, "module-ivy.array.device"]], "to_device() (ivy.array.device.arraywithdevice method)": [[59, "ivy.array.device.ArrayWithDevice.to_device"], [60, "ivy.array.device.ArrayWithDevice.to_device"]], "arraywithelementwise (class in ivy.array.elementwise)": [[61, "ivy.array.elementwise.ArrayWithElementwise"], [62, "ivy.array.elementwise.ArrayWithElementwise"]], "abs() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.abs"], [62, "ivy.array.elementwise.ArrayWithElementwise.abs"]], "acos() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.acos"], [62, "ivy.array.elementwise.ArrayWithElementwise.acos"]], "acosh() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.acosh"], [62, "ivy.array.elementwise.ArrayWithElementwise.acosh"]], "add() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.add"], [62, "ivy.array.elementwise.ArrayWithElementwise.add"]], "asin() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.asin"], [62, "ivy.array.elementwise.ArrayWithElementwise.asin"]], "asinh() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.asinh"], [62, "ivy.array.elementwise.ArrayWithElementwise.asinh"]], "atan() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.atan"], [62, "ivy.array.elementwise.ArrayWithElementwise.atan"]], "atan2() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.atan2"], [62, "ivy.array.elementwise.ArrayWithElementwise.atan2"]], "atanh() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.atanh"], [62, "ivy.array.elementwise.ArrayWithElementwise.atanh"]], "bitwise_and() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.bitwise_and"], [62, "ivy.array.elementwise.ArrayWithElementwise.bitwise_and"]], "bitwise_invert() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.bitwise_invert"], [62, "ivy.array.elementwise.ArrayWithElementwise.bitwise_invert"]], "bitwise_left_shift() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.bitwise_left_shift"], [62, "ivy.array.elementwise.ArrayWithElementwise.bitwise_left_shift"]], "bitwise_or() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.bitwise_or"], [62, "ivy.array.elementwise.ArrayWithElementwise.bitwise_or"]], "bitwise_right_shift() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.bitwise_right_shift"], [62, "ivy.array.elementwise.ArrayWithElementwise.bitwise_right_shift"]], "bitwise_xor() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.bitwise_xor"], [62, "ivy.array.elementwise.ArrayWithElementwise.bitwise_xor"]], "ceil() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.ceil"], [62, "ivy.array.elementwise.ArrayWithElementwise.ceil"]], "cos() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.cos"], [62, "ivy.array.elementwise.ArrayWithElementwise.cos"]], "cosh() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.cosh"], [62, "ivy.array.elementwise.ArrayWithElementwise.cosh"]], "deg2rad() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.deg2rad"], [62, "ivy.array.elementwise.ArrayWithElementwise.deg2rad"]], "divide() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.divide"], [62, "ivy.array.elementwise.ArrayWithElementwise.divide"]], "equal() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.equal"], [62, "ivy.array.elementwise.ArrayWithElementwise.equal"]], "erf() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.erf"], [62, "ivy.array.elementwise.ArrayWithElementwise.erf"]], "exp() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.exp"], [62, "ivy.array.elementwise.ArrayWithElementwise.exp"]], "expm1() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.expm1"], [62, "ivy.array.elementwise.ArrayWithElementwise.expm1"]], "floor() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.floor"], [62, "ivy.array.elementwise.ArrayWithElementwise.floor"]], "floor_divide() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.floor_divide"], [62, "ivy.array.elementwise.ArrayWithElementwise.floor_divide"]], "greater() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.greater"], [62, "ivy.array.elementwise.ArrayWithElementwise.greater"]], "greater_equal() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.greater_equal"], [62, "ivy.array.elementwise.ArrayWithElementwise.greater_equal"]], "isfinite() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.isfinite"], [62, "ivy.array.elementwise.ArrayWithElementwise.isfinite"]], "isinf() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.isinf"], [62, "ivy.array.elementwise.ArrayWithElementwise.isinf"]], "isnan() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.isnan"], [62, "ivy.array.elementwise.ArrayWithElementwise.isnan"]], "isreal() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.isreal"], [62, "ivy.array.elementwise.ArrayWithElementwise.isreal"]], "ivy.array.elementwise": [[61, "module-ivy.array.elementwise"]], "less() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.less"], [62, "ivy.array.elementwise.ArrayWithElementwise.less"]], "less_equal() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.less_equal"], [62, "ivy.array.elementwise.ArrayWithElementwise.less_equal"]], "log() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.log"], [62, "ivy.array.elementwise.ArrayWithElementwise.log"]], "log10() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.log10"], [62, "ivy.array.elementwise.ArrayWithElementwise.log10"]], "log1p() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.log1p"], [62, "ivy.array.elementwise.ArrayWithElementwise.log1p"]], "log2() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.log2"], [62, "ivy.array.elementwise.ArrayWithElementwise.log2"]], "logaddexp() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.logaddexp"], [62, "ivy.array.elementwise.ArrayWithElementwise.logaddexp"]], "logical_and() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.logical_and"], [62, "ivy.array.elementwise.ArrayWithElementwise.logical_and"]], "logical_not() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.logical_not"], [62, "ivy.array.elementwise.ArrayWithElementwise.logical_not"]], "logical_or() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.logical_or"], [62, "ivy.array.elementwise.ArrayWithElementwise.logical_or"]], "logical_xor() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.logical_xor"], [62, "ivy.array.elementwise.ArrayWithElementwise.logical_xor"]], "maximum() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.maximum"], [62, "ivy.array.elementwise.ArrayWithElementwise.maximum"]], "minimum() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.minimum"], [62, "ivy.array.elementwise.ArrayWithElementwise.minimum"]], "multiply() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.multiply"], [62, "ivy.array.elementwise.ArrayWithElementwise.multiply"]], "negative() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.negative"], [62, "ivy.array.elementwise.ArrayWithElementwise.negative"]], "not_equal() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.not_equal"], [62, "ivy.array.elementwise.ArrayWithElementwise.not_equal"]], "positive() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.positive"], [62, "ivy.array.elementwise.ArrayWithElementwise.positive"]], "pow() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.pow"], [62, "ivy.array.elementwise.ArrayWithElementwise.pow"]], "rad2deg() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.rad2deg"], [62, "ivy.array.elementwise.ArrayWithElementwise.rad2deg"]], "reciprocal() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.reciprocal"], [62, "ivy.array.elementwise.ArrayWithElementwise.reciprocal"]], "remainder() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.remainder"], [62, "ivy.array.elementwise.ArrayWithElementwise.remainder"]], "round() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.round"], [62, "ivy.array.elementwise.ArrayWithElementwise.round"]], "sign() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.sign"], [62, "ivy.array.elementwise.ArrayWithElementwise.sign"]], "sin() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.sin"], [62, "ivy.array.elementwise.ArrayWithElementwise.sin"]], "sinh() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.sinh"], [62, "ivy.array.elementwise.ArrayWithElementwise.sinh"]], "sqrt() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.sqrt"], [62, "ivy.array.elementwise.ArrayWithElementwise.sqrt"]], "square() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.square"], [62, "ivy.array.elementwise.ArrayWithElementwise.square"]], "subtract() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.subtract"], [62, "ivy.array.elementwise.ArrayWithElementwise.subtract"]], "tan() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.tan"], [62, "ivy.array.elementwise.ArrayWithElementwise.tan"]], "tanh() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.tanh"], [62, "ivy.array.elementwise.ArrayWithElementwise.tanh"]], "trunc() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.trunc"], [62, "ivy.array.elementwise.ArrayWithElementwise.trunc"]], "trunc_divide() (ivy.array.elementwise.arraywithelementwise method)": [[61, "ivy.array.elementwise.ArrayWithElementwise.trunc_divide"], [62, "ivy.array.elementwise.ArrayWithElementwise.trunc_divide"]], "arraywithactivationsexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithActivationsExperimental"]], "arraywithconversionsexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithConversionsExperimental"]], "arraywithcreationexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithCreationExperimental"]], "arraywithdata_typeexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithData_typeExperimental"]], "arraywithdeviceexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithDeviceExperimental"]], "arraywithelementwiseexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental"]], "arraywithgeneralexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithGeneralExperimental"]], "arraywithgradientsexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithGradientsExperimental"]], "arraywithimageexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithImageExperimental"]], "arraywithlayersexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithLayersExperimental"]], "arraywithlinearalgebraexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental"]], "arraywithlossesexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithLossesExperimental"]], "arraywithmanipulationexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental"]], "arraywithnormsexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithNormsExperimental"]], "arraywithrandomexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithRandomExperimental"]], "arraywithsearchingexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithSearchingExperimental"]], "arraywithsetexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithSetExperimental"]], "arraywithsortingexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithSortingExperimental"]], "arraywithstatisticalexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithStatisticalExperimental"]], "arraywithutilityexperimental (class in ivy.array.experimental)": [[63, "ivy.array.experimental.ArrayWithUtilityExperimental"]], "allclose() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.allclose"]], "angle() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.angle"]], "atleast_1d() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.atleast_1d"]], "atleast_2d() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.atleast_2d"]], "atleast_3d() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.atleast_3d"]], "avg_pool1d() (ivy.array.experimental.arraywithlayersexperimental method)": [[63, "ivy.array.experimental.ArrayWithLayersExperimental.avg_pool1d"]], "avg_pool2d() (ivy.array.experimental.arraywithlayersexperimental method)": [[63, "ivy.array.experimental.ArrayWithLayersExperimental.avg_pool2d"]], "avg_pool3d() (ivy.array.experimental.arraywithlayersexperimental method)": [[63, "ivy.array.experimental.ArrayWithLayersExperimental.avg_pool3d"]], "beta() (ivy.array.experimental.arraywithrandomexperimental method)": [[63, "ivy.array.experimental.ArrayWithRandomExperimental.beta"]], "copysign() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.copysign"]], "count_nonzero() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.count_nonzero"]], "dct() (ivy.array.experimental.arraywithlayersexperimental method)": [[63, "ivy.array.experimental.ArrayWithLayersExperimental.dct"]], "diagflat() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[63, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.diagflat"]], "diff() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.diff"]], "dirichlet() (ivy.array.experimental.arraywithrandomexperimental method)": [[63, "ivy.array.experimental.ArrayWithRandomExperimental.dirichlet"]], "dsplit() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.dsplit"]], "dstack() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.dstack"]], "eig() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[63, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.eig"]], "exp2() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.exp2"]], "fix() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.fix"]], "flatten() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.flatten"]], "fliplr() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.fliplr"]], "flipud() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.flipud"]], "float_power() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.float_power"]], "fmax() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.fmax"]], "fmod() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.fmod"]], "gamma() (ivy.array.experimental.arraywithrandomexperimental method)": [[63, "ivy.array.experimental.ArrayWithRandomExperimental.gamma"]], "gcd() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.gcd"]], "gradient() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.gradient"]], "heaviside() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.heaviside"]], "hsplit() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.hsplit"]], "hstack() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.hstack"]], "i0() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.i0"]], "isclose() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.isclose"]], "isin() (ivy.array.experimental.arraywithgeneralexperimental method)": [[63, "ivy.array.experimental.ArrayWithGeneralExperimental.isin"]], "isneginf() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.isneginf"]], "isposinf() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.isposinf"]], "kron() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[63, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.kron"]], "lcm() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.lcm"]], "logaddexp2() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.logaddexp2"]], "logit() (ivy.array.experimental.arraywithactivationsexperimental method)": [[63, "ivy.array.experimental.ArrayWithActivationsExperimental.logit"]], "matrix_exp() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[63, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.matrix_exp"]], "max_pool1d() (ivy.array.experimental.arraywithlayersexperimental method)": [[63, "ivy.array.experimental.ArrayWithLayersExperimental.max_pool1d"]], "max_pool2d() (ivy.array.experimental.arraywithlayersexperimental method)": [[63, "ivy.array.experimental.ArrayWithLayersExperimental.max_pool2d"]], "max_pool3d() (ivy.array.experimental.arraywithlayersexperimental method)": [[63, "ivy.array.experimental.ArrayWithLayersExperimental.max_pool3d"]], "median() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[63, "ivy.array.experimental.ArrayWithStatisticalExperimental.median"]], "moveaxis() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.moveaxis"]], "msort() (ivy.array.experimental.arraywithsortingexperimental method)": [[63, "ivy.array.experimental.ArrayWithSortingExperimental.msort"]], "multi_dot() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[63, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.multi_dot"]], "nan_to_num() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.nan_to_num"]], "nanmean() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[63, "ivy.array.experimental.ArrayWithStatisticalExperimental.nanmean"]], "nansum() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.nansum"]], "nextafter() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.nextafter"]], "pad() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.pad"]], "quantile() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[63, "ivy.array.experimental.ArrayWithStatisticalExperimental.quantile"]], "rot90() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.rot90"]], "signbit() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.signbit"]], "sinc() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.sinc"]], "take_along_axis() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.take_along_axis"]], "top_k() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.top_k"]], "trapz() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.trapz"]], "unravel_index() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[63, "ivy.array.experimental.ArrayWithStatisticalExperimental.unravel_index"]], "vsplit() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.vsplit"]], "vstack() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[63, "ivy.array.experimental.ArrayWithManipulationExperimental.vstack"]], "xlogy() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.xlogy"]], "zeta() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[63, "ivy.array.experimental.ArrayWithElementWiseExperimental.zeta"]], "arraywithgeneral (class in ivy.array.general)": [[64, "ivy.array.general.ArrayWithGeneral"], [65, "ivy.array.general.ArrayWithGeneral"]], "all_equal() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.all_equal"], [65, "ivy.array.general.ArrayWithGeneral.all_equal"]], "array_equal() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.array_equal"], [65, "ivy.array.general.ArrayWithGeneral.array_equal"]], "assert_supports_inplace() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.assert_supports_inplace"], [65, "ivy.array.general.ArrayWithGeneral.assert_supports_inplace"]], "clip_matrix_norm() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.clip_matrix_norm"], [65, "ivy.array.general.ArrayWithGeneral.clip_matrix_norm"]], "clip_vector_norm() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.clip_vector_norm"], [65, "ivy.array.general.ArrayWithGeneral.clip_vector_norm"]], "default() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.default"], [65, "ivy.array.general.ArrayWithGeneral.default"]], "einops_rearrange() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.einops_rearrange"], [65, "ivy.array.general.ArrayWithGeneral.einops_rearrange"]], "einops_reduce() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.einops_reduce"], [65, "ivy.array.general.ArrayWithGeneral.einops_reduce"]], "einops_repeat() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.einops_repeat"], [65, "ivy.array.general.ArrayWithGeneral.einops_repeat"]], "exists() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.exists"], [65, "ivy.array.general.ArrayWithGeneral.exists"]], "fourier_encode() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.fourier_encode"], [65, "ivy.array.general.ArrayWithGeneral.fourier_encode"]], "gather() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.gather"], [65, "ivy.array.general.ArrayWithGeneral.gather"]], "gather_nd() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.gather_nd"], [65, "ivy.array.general.ArrayWithGeneral.gather_nd"]], "get_num_dims() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.get_num_dims"], [65, "ivy.array.general.ArrayWithGeneral.get_num_dims"]], "has_nans() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.has_nans"], [65, "ivy.array.general.ArrayWithGeneral.has_nans"]], "inplace_decrement() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.inplace_decrement"], [65, "ivy.array.general.ArrayWithGeneral.inplace_decrement"]], "inplace_increment() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.inplace_increment"], [65, "ivy.array.general.ArrayWithGeneral.inplace_increment"]], "inplace_update() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.inplace_update"], [65, "ivy.array.general.ArrayWithGeneral.inplace_update"]], "is_array() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.is_array"], [65, "ivy.array.general.ArrayWithGeneral.is_array"]], "is_ivy_array() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.is_ivy_array"], [65, "ivy.array.general.ArrayWithGeneral.is_ivy_array"]], "is_ivy_container() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.is_ivy_container"], [65, "ivy.array.general.ArrayWithGeneral.is_ivy_container"]], "is_native_array() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.is_native_array"], [65, "ivy.array.general.ArrayWithGeneral.is_native_array"]], "ivy.array.general": [[64, "module-ivy.array.general"]], "scatter_flat() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.scatter_flat"], [65, "ivy.array.general.ArrayWithGeneral.scatter_flat"]], "scatter_nd() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.scatter_nd"], [65, "ivy.array.general.ArrayWithGeneral.scatter_nd"]], "stable_divide() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.stable_divide"], [65, "ivy.array.general.ArrayWithGeneral.stable_divide"]], "stable_pow() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.stable_pow"], [65, "ivy.array.general.ArrayWithGeneral.stable_pow"]], "supports_inplace_updates() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.supports_inplace_updates"], [65, "ivy.array.general.ArrayWithGeneral.supports_inplace_updates"]], "to_list() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.to_list"], [65, "ivy.array.general.ArrayWithGeneral.to_list"]], "to_numpy() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.to_numpy"], [65, "ivy.array.general.ArrayWithGeneral.to_numpy"]], "to_scalar() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.to_scalar"], [65, "ivy.array.general.ArrayWithGeneral.to_scalar"]], "value_is_nan() (ivy.array.general.arraywithgeneral method)": [[64, "ivy.array.general.ArrayWithGeneral.value_is_nan"], [65, "ivy.array.general.ArrayWithGeneral.value_is_nan"]], "arraywithgradients (class in ivy.array.gradients)": [[66, "ivy.array.gradients.ArrayWithGradients"], [67, "ivy.array.gradients.ArrayWithGradients"]], "adam_step() (ivy.array.gradients.arraywithgradients method)": [[66, "ivy.array.gradients.ArrayWithGradients.adam_step"], [67, "ivy.array.gradients.ArrayWithGradients.adam_step"]], "adam_update() (ivy.array.gradients.arraywithgradients method)": [[66, "ivy.array.gradients.ArrayWithGradients.adam_update"], [67, "ivy.array.gradients.ArrayWithGradients.adam_update"]], "gradient_descent_update() (ivy.array.gradients.arraywithgradients method)": [[66, "ivy.array.gradients.ArrayWithGradients.gradient_descent_update"], [67, "ivy.array.gradients.ArrayWithGradients.gradient_descent_update"]], "ivy.array.gradients": [[66, "module-ivy.array.gradients"]], "lamb_update() (ivy.array.gradients.arraywithgradients method)": [[66, "ivy.array.gradients.ArrayWithGradients.lamb_update"], [67, "ivy.array.gradients.ArrayWithGradients.lamb_update"]], "lars_update() (ivy.array.gradients.arraywithgradients method)": [[66, "ivy.array.gradients.ArrayWithGradients.lars_update"], [67, "ivy.array.gradients.ArrayWithGradients.lars_update"]], "optimizer_update() (ivy.array.gradients.arraywithgradients method)": [[66, "ivy.array.gradients.ArrayWithGradients.optimizer_update"], [67, "ivy.array.gradients.ArrayWithGradients.optimizer_update"]], "stop_gradient() (ivy.array.gradients.arraywithgradients method)": [[66, "ivy.array.gradients.ArrayWithGradients.stop_gradient"], [67, "ivy.array.gradients.ArrayWithGradients.stop_gradient"]], "arraywithimage (class in ivy.array.image)": [[68, "ivy.array.image.ArrayWithImage"], [69, "ivy.array.image.ArrayWithImage"]], "ivy.array.image": [[68, "module-ivy.array.image"]], "arraywithlayers (class in ivy.array.layers)": [[70, "ivy.array.layers.ArrayWithLayers"], [71, "ivy.array.layers.ArrayWithLayers"]], "conv1d() (ivy.array.layers.arraywithlayers method)": [[70, "ivy.array.layers.ArrayWithLayers.conv1d"], [71, "ivy.array.layers.ArrayWithLayers.conv1d"]], "conv1d_transpose() (ivy.array.layers.arraywithlayers method)": [[70, "ivy.array.layers.ArrayWithLayers.conv1d_transpose"], [71, "ivy.array.layers.ArrayWithLayers.conv1d_transpose"]], "conv2d() (ivy.array.layers.arraywithlayers method)": [[70, "ivy.array.layers.ArrayWithLayers.conv2d"], [71, "ivy.array.layers.ArrayWithLayers.conv2d"]], "conv3d() (ivy.array.layers.arraywithlayers method)": [[70, "ivy.array.layers.ArrayWithLayers.conv3d"], [71, "ivy.array.layers.ArrayWithLayers.conv3d"]], "conv3d_transpose() (ivy.array.layers.arraywithlayers method)": [[70, "ivy.array.layers.ArrayWithLayers.conv3d_transpose"], [71, "ivy.array.layers.ArrayWithLayers.conv3d_transpose"]], "depthwise_conv2d() (ivy.array.layers.arraywithlayers method)": [[70, "ivy.array.layers.ArrayWithLayers.depthwise_conv2d"], [71, "ivy.array.layers.ArrayWithLayers.depthwise_conv2d"]], "dropout() (ivy.array.layers.arraywithlayers method)": [[70, "ivy.array.layers.ArrayWithLayers.dropout"], [71, "ivy.array.layers.ArrayWithLayers.dropout"]], "dropout1d() (ivy.array.layers.arraywithlayers method)": [[70, "ivy.array.layers.ArrayWithLayers.dropout1d"], [71, "ivy.array.layers.ArrayWithLayers.dropout1d"]], "ivy.array.layers": [[70, "module-ivy.array.layers"]], "linear() (ivy.array.layers.arraywithlayers method)": [[70, "ivy.array.layers.ArrayWithLayers.linear"], [71, "ivy.array.layers.ArrayWithLayers.linear"]], "lstm_update() (ivy.array.layers.arraywithlayers method)": [[70, "ivy.array.layers.ArrayWithLayers.lstm_update"], [71, "ivy.array.layers.ArrayWithLayers.lstm_update"]], "multi_head_attention() (ivy.array.layers.arraywithlayers method)": [[70, "ivy.array.layers.ArrayWithLayers.multi_head_attention"], [71, "ivy.array.layers.ArrayWithLayers.multi_head_attention"]], "scaled_dot_product_attention() (ivy.array.layers.arraywithlayers method)": [[70, "ivy.array.layers.ArrayWithLayers.scaled_dot_product_attention"], [71, "ivy.array.layers.ArrayWithLayers.scaled_dot_product_attention"]], "arraywithlinearalgebra (class in ivy.array.linear_algebra)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra"]], "cholesky() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cholesky"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cholesky"]], "cross() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cross"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cross"]], "det() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.det"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.det"]], "diag() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diag"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diag"]], "diagonal() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diagonal"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diagonal"]], "eig() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eig"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eig"]], "eigh() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigh"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigh"]], "eigvalsh() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigvalsh"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigvalsh"]], "inner() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inner"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inner"]], "inv() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inv"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inv"]], "ivy.array.linear_algebra": [[72, "module-ivy.array.linear_algebra"]], "matmul() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matmul"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matmul"]], "matrix_norm() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_norm"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_norm"]], "matrix_power() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_power"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_power"]], "matrix_rank() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_rank"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_rank"]], "matrix_transpose() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_transpose"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_transpose"]], "outer() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.outer"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.outer"]], "pinv() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.pinv"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.pinv"]], "qr() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.qr"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.qr"]], "slogdet() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.slogdet"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.slogdet"]], "solve() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.solve"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.solve"]], "svd() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svd"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svd"]], "svdvals() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svdvals"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svdvals"]], "tensordot() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensordot"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensordot"]], "tensorsolve() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensorsolve"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensorsolve"]], "trace() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.trace"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.trace"]], "vander() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vander"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vander"]], "vecdot() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vecdot"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vecdot"]], "vector_norm() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_norm"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[72, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_to_skew_symmetric_matrix"], [73, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_to_skew_symmetric_matrix"]], "arraywithlosses (class in ivy.array.losses)": [[74, "ivy.array.losses.ArrayWithLosses"], [75, "ivy.array.losses.ArrayWithLosses"]], "binary_cross_entropy() (ivy.array.losses.arraywithlosses method)": [[74, "ivy.array.losses.ArrayWithLosses.binary_cross_entropy"], [75, "ivy.array.losses.ArrayWithLosses.binary_cross_entropy"]], "cross_entropy() (ivy.array.losses.arraywithlosses method)": [[74, "ivy.array.losses.ArrayWithLosses.cross_entropy"], [75, "ivy.array.losses.ArrayWithLosses.cross_entropy"]], "ivy.array.losses": [[74, "module-ivy.array.losses"]], "sparse_cross_entropy() (ivy.array.losses.arraywithlosses method)": [[74, "ivy.array.losses.ArrayWithLosses.sparse_cross_entropy"], [75, "ivy.array.losses.ArrayWithLosses.sparse_cross_entropy"]], "arraywithmanipulation (class in ivy.array.manipulation)": [[76, "ivy.array.manipulation.ArrayWithManipulation"], [77, "ivy.array.manipulation.ArrayWithManipulation"]], "clip() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.clip"], [77, "ivy.array.manipulation.ArrayWithManipulation.clip"]], "concat() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.concat"], [77, "ivy.array.manipulation.ArrayWithManipulation.concat"]], "constant_pad() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.constant_pad"], [77, "ivy.array.manipulation.ArrayWithManipulation.constant_pad"]], "expand_dims() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.expand_dims"], [77, "ivy.array.manipulation.ArrayWithManipulation.expand_dims"]], "flip() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.flip"], [77, "ivy.array.manipulation.ArrayWithManipulation.flip"]], "ivy.array.manipulation": [[76, "module-ivy.array.manipulation"]], "permute_dims() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.permute_dims"], [77, "ivy.array.manipulation.ArrayWithManipulation.permute_dims"]], "repeat() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.repeat"], [77, "ivy.array.manipulation.ArrayWithManipulation.repeat"]], "reshape() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.reshape"], [77, "ivy.array.manipulation.ArrayWithManipulation.reshape"]], "roll() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.roll"], [77, "ivy.array.manipulation.ArrayWithManipulation.roll"]], "split() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.split"], [77, "ivy.array.manipulation.ArrayWithManipulation.split"]], "squeeze() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.squeeze"], [77, "ivy.array.manipulation.ArrayWithManipulation.squeeze"]], "stack() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.stack"], [77, "ivy.array.manipulation.ArrayWithManipulation.stack"]], "swapaxes() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.swapaxes"], [77, "ivy.array.manipulation.ArrayWithManipulation.swapaxes"]], "tile() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.tile"], [77, "ivy.array.manipulation.ArrayWithManipulation.tile"]], "unstack() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.unstack"], [77, "ivy.array.manipulation.ArrayWithManipulation.unstack"]], "zero_pad() (ivy.array.manipulation.arraywithmanipulation method)": [[76, "ivy.array.manipulation.ArrayWithManipulation.zero_pad"], [77, "ivy.array.manipulation.ArrayWithManipulation.zero_pad"]], "arraywithnorms (class in ivy.array.norms)": [[78, "ivy.array.norms.ArrayWithNorms"], [79, "ivy.array.norms.ArrayWithNorms"]], "ivy.array.norms": [[78, "module-ivy.array.norms"]], "layer_norm() (ivy.array.norms.arraywithnorms method)": [[78, "ivy.array.norms.ArrayWithNorms.layer_norm"], [79, "ivy.array.norms.ArrayWithNorms.layer_norm"]], "arraywithrandom (class in ivy.array.random)": [[80, "ivy.array.random.ArrayWithRandom"], [81, "ivy.array.random.ArrayWithRandom"]], "ivy.array.random": [[80, "module-ivy.array.random"]], "multinomial() (ivy.array.random.arraywithrandom method)": [[80, "ivy.array.random.ArrayWithRandom.multinomial"], [81, "ivy.array.random.ArrayWithRandom.multinomial"]], "randint() (ivy.array.random.arraywithrandom method)": [[80, "ivy.array.random.ArrayWithRandom.randint"], [81, "ivy.array.random.ArrayWithRandom.randint"]], "random_normal() (ivy.array.random.arraywithrandom method)": [[80, "ivy.array.random.ArrayWithRandom.random_normal"], [81, "ivy.array.random.ArrayWithRandom.random_normal"]], "random_uniform() (ivy.array.random.arraywithrandom method)": [[80, "ivy.array.random.ArrayWithRandom.random_uniform"], [81, "ivy.array.random.ArrayWithRandom.random_uniform"]], "shuffle() (ivy.array.random.arraywithrandom method)": [[80, "ivy.array.random.ArrayWithRandom.shuffle"], [81, "ivy.array.random.ArrayWithRandom.shuffle"]], "arraywithsearching (class in ivy.array.searching)": [[82, "ivy.array.searching.ArrayWithSearching"], [83, "ivy.array.searching.ArrayWithSearching"]], "argmax() (ivy.array.searching.arraywithsearching method)": [[82, "ivy.array.searching.ArrayWithSearching.argmax"], [83, "ivy.array.searching.ArrayWithSearching.argmax"]], "argmin() (ivy.array.searching.arraywithsearching method)": [[82, "ivy.array.searching.ArrayWithSearching.argmin"], [83, "ivy.array.searching.ArrayWithSearching.argmin"]], "argwhere() (ivy.array.searching.arraywithsearching method)": [[82, "ivy.array.searching.ArrayWithSearching.argwhere"], [83, "ivy.array.searching.ArrayWithSearching.argwhere"]], "ivy.array.searching": [[82, "module-ivy.array.searching"]], "nonzero() (ivy.array.searching.arraywithsearching method)": [[82, "ivy.array.searching.ArrayWithSearching.nonzero"], [83, "ivy.array.searching.ArrayWithSearching.nonzero"]], "where() (ivy.array.searching.arraywithsearching method)": [[82, "ivy.array.searching.ArrayWithSearching.where"], [83, "ivy.array.searching.ArrayWithSearching.where"]], "arraywithset (class in ivy.array.set)": [[84, "ivy.array.set.ArrayWithSet"], [85, "ivy.array.set.ArrayWithSet"]], "ivy.array.set": [[84, "module-ivy.array.set"]], "unique_all() (ivy.array.set.arraywithset method)": [[84, "ivy.array.set.ArrayWithSet.unique_all"], [85, "ivy.array.set.ArrayWithSet.unique_all"]], "unique_counts() (ivy.array.set.arraywithset method)": [[84, "ivy.array.set.ArrayWithSet.unique_counts"], [85, "ivy.array.set.ArrayWithSet.unique_counts"]], "unique_inverse() (ivy.array.set.arraywithset method)": [[84, "ivy.array.set.ArrayWithSet.unique_inverse"], [85, "ivy.array.set.ArrayWithSet.unique_inverse"]], "unique_values() (ivy.array.set.arraywithset method)": [[84, "ivy.array.set.ArrayWithSet.unique_values"], [85, "ivy.array.set.ArrayWithSet.unique_values"]], "arraywithsorting (class in ivy.array.sorting)": [[86, "ivy.array.sorting.ArrayWithSorting"], [87, "ivy.array.sorting.ArrayWithSorting"]], "argsort() (ivy.array.sorting.arraywithsorting method)": [[86, "ivy.array.sorting.ArrayWithSorting.argsort"], [87, "ivy.array.sorting.ArrayWithSorting.argsort"]], "ivy.array.sorting": [[86, "module-ivy.array.sorting"]], "searchsorted() (ivy.array.sorting.arraywithsorting method)": [[86, "ivy.array.sorting.ArrayWithSorting.searchsorted"], [87, "ivy.array.sorting.ArrayWithSorting.searchsorted"]], "sort() (ivy.array.sorting.arraywithsorting method)": [[86, "ivy.array.sorting.ArrayWithSorting.sort"], [87, "ivy.array.sorting.ArrayWithSorting.sort"]], "arraywithstatistical (class in ivy.array.statistical)": [[88, "ivy.array.statistical.ArrayWithStatistical"], [89, "ivy.array.statistical.ArrayWithStatistical"]], "cumprod() (ivy.array.statistical.arraywithstatistical method)": [[88, "ivy.array.statistical.ArrayWithStatistical.cumprod"], [89, "ivy.array.statistical.ArrayWithStatistical.cumprod"]], "cumsum() (ivy.array.statistical.arraywithstatistical method)": [[88, "ivy.array.statistical.ArrayWithStatistical.cumsum"], [89, "ivy.array.statistical.ArrayWithStatistical.cumsum"]], "einsum() (ivy.array.statistical.arraywithstatistical method)": [[88, "ivy.array.statistical.ArrayWithStatistical.einsum"], [89, "ivy.array.statistical.ArrayWithStatistical.einsum"]], "ivy.array.statistical": [[88, "module-ivy.array.statistical"]], "max() (ivy.array.statistical.arraywithstatistical method)": [[88, "ivy.array.statistical.ArrayWithStatistical.max"], [89, "ivy.array.statistical.ArrayWithStatistical.max"]], "mean() (ivy.array.statistical.arraywithstatistical method)": [[88, "ivy.array.statistical.ArrayWithStatistical.mean"], [89, "ivy.array.statistical.ArrayWithStatistical.mean"]], "min() (ivy.array.statistical.arraywithstatistical method)": [[88, "ivy.array.statistical.ArrayWithStatistical.min"], [89, "ivy.array.statistical.ArrayWithStatistical.min"]], "prod() (ivy.array.statistical.arraywithstatistical method)": [[88, "ivy.array.statistical.ArrayWithStatistical.prod"], [89, "ivy.array.statistical.ArrayWithStatistical.prod"]], "std() (ivy.array.statistical.arraywithstatistical method)": [[88, "ivy.array.statistical.ArrayWithStatistical.std"], [89, "ivy.array.statistical.ArrayWithStatistical.std"]], "sum() (ivy.array.statistical.arraywithstatistical method)": [[88, "ivy.array.statistical.ArrayWithStatistical.sum"], [89, "ivy.array.statistical.ArrayWithStatistical.sum"]], "var() (ivy.array.statistical.arraywithstatistical method)": [[88, "ivy.array.statistical.ArrayWithStatistical.var"], [89, "ivy.array.statistical.ArrayWithStatistical.var"]], "arraywithutility (class in ivy.array.utility)": [[90, "ivy.array.utility.ArrayWithUtility"], [91, "ivy.array.utility.ArrayWithUtility"]], "all() (ivy.array.utility.arraywithutility method)": [[90, "ivy.array.utility.ArrayWithUtility.all"], [91, "ivy.array.utility.ArrayWithUtility.all"]], "any() (ivy.array.utility.arraywithutility method)": [[90, "ivy.array.utility.ArrayWithUtility.any"], [91, "ivy.array.utility.ArrayWithUtility.any"]], "ivy.array.utility": [[90, "module-ivy.array.utility"]], "add_ivy_array_instance_methods() (in module ivy.array.wrapping)": [[92, "ivy.array.wrapping.add_ivy_array_instance_methods"], [93, "ivy.array.wrapping.add_ivy_array_instance_methods"]], "ivy.array.wrapping": [[92, "module-ivy.array.wrapping"]], "container (class in ivy.container.container)": [[94, "ivy.container.container.Container"], [99, "ivy.container.container.Container"], [100, "ivy.container.container.Container"]], "__abs__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__abs__"], [99, "ivy.container.container.Container.__abs__"], [100, "ivy.container.container.Container.__abs__"]], "__add__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__add__"], [99, "ivy.container.container.Container.__add__"], [100, "ivy.container.container.Container.__add__"]], "__eq__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__eq__"], [99, "ivy.container.container.Container.__eq__"], [100, "ivy.container.container.Container.__eq__"]], "__ge__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__ge__"], [99, "ivy.container.container.Container.__ge__"], [100, "ivy.container.container.Container.__ge__"]], "__gt__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__gt__"], [99, "ivy.container.container.Container.__gt__"], [100, "ivy.container.container.Container.__gt__"]], "__init__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__init__"], [99, "ivy.container.container.Container.__init__"], [100, "ivy.container.container.Container.__init__"]], "__le__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__le__"], [99, "ivy.container.container.Container.__le__"], [100, "ivy.container.container.Container.__le__"]], "__lt__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__lt__"], [99, "ivy.container.container.Container.__lt__"], [100, "ivy.container.container.Container.__lt__"]], "__ne__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__ne__"], [99, "ivy.container.container.Container.__ne__"], [100, "ivy.container.container.Container.__ne__"]], "__pow__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__pow__"], [99, "ivy.container.container.Container.__pow__"], [100, "ivy.container.container.Container.__pow__"]], "__radd__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__radd__"], [99, "ivy.container.container.Container.__radd__"], [100, "ivy.container.container.Container.__radd__"]], "__rrshift__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__rrshift__"], [99, "ivy.container.container.Container.__rrshift__"], [100, "ivy.container.container.Container.__rrshift__"]], "__rshift__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__rshift__"], [99, "ivy.container.container.Container.__rshift__"], [100, "ivy.container.container.Container.__rshift__"]], "__rsub__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__rsub__"], [99, "ivy.container.container.Container.__rsub__"], [100, "ivy.container.container.Container.__rsub__"]], "__sub__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__sub__"], [99, "ivy.container.container.Container.__sub__"], [100, "ivy.container.container.Container.__sub__"]], "__truediv__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__truediv__"], [99, "ivy.container.container.Container.__truediv__"], [100, "ivy.container.container.Container.__truediv__"]], "__xor__() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.__xor__"], [99, "ivy.container.container.Container.__xor__"], [100, "ivy.container.container.Container.__xor__"]], "arange() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.arange"], [99, "ivy.container.container.Container.arange"], [100, "ivy.container.container.Container.arange"]], "arg_info() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.arg_info"], [99, "ivy.container.container.Container.arg_info"], [100, "ivy.container.container.Container.arg_info"]], "arg_names() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.arg_names"], [99, "ivy.container.container.Container.arg_names"], [100, "ivy.container.container.Container.arg_names"]], "array() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.array"], [99, "ivy.container.container.Container.array"], [100, "ivy.container.container.Container.array"]], "array_equal() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.array_equal"], [99, "ivy.container.container.Container.array_equal"], [100, "ivy.container.container.Container.array_equal"]], "as_ivy_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.as_ivy_dev"], [99, "ivy.container.container.Container.as_ivy_dev"], [100, "ivy.container.container.Container.as_ivy_dev"]], "as_ivy_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.as_ivy_dtype"], [99, "ivy.container.container.Container.as_ivy_dtype"], [100, "ivy.container.container.Container.as_ivy_dtype"]], "as_native_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.as_native_dev"], [99, "ivy.container.container.Container.as_native_dev"], [100, "ivy.container.container.Container.as_native_dev"]], "as_native_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.as_native_dtype"], [99, "ivy.container.container.Container.as_native_dtype"], [100, "ivy.container.container.Container.as_native_dtype"]], "asarray() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.asarray"], [99, "ivy.container.container.Container.asarray"], [100, "ivy.container.container.Container.asarray"]], "asarray_handle_nestable() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.asarray_handle_nestable"], [99, "ivy.container.container.Container.asarray_handle_nestable"], [100, "ivy.container.container.Container.asarray_handle_nestable"]], "asarray_infer_device() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.asarray_infer_device"], [99, "ivy.container.container.Container.asarray_infer_device"], [100, "ivy.container.container.Container.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.asarray_to_native_arrays_and_back"], [99, "ivy.container.container.Container.asarray_to_native_arrays_and_back"], [100, "ivy.container.container.Container.asarray_to_native_arrays_and_back"]], "cache_fn() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.cache_fn"], [99, "ivy.container.container.Container.cache_fn"], [100, "ivy.container.container.Container.cache_fn"]], "check_float() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.check_float"], [99, "ivy.container.container.Container.check_float"], [100, "ivy.container.container.Container.check_float"]], "clear_mem_on_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.clear_mem_on_dev"], [99, "ivy.container.container.Container.clear_mem_on_dev"], [100, "ivy.container.container.Container.clear_mem_on_dev"]], "closest_valid_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.closest_valid_dtype"], [99, "ivy.container.container.Container.closest_valid_dtype"], [100, "ivy.container.container.Container.closest_valid_dtype"]], "container_types() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.container_types"], [99, "ivy.container.container.Container.container_types"], [100, "ivy.container.container.Container.container_types"]], "conv() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.conv"], [99, "ivy.container.container.Container.conv"], [100, "ivy.container.container.Container.conv"]], "conv_general_dilated() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.conv_general_dilated"], [99, "ivy.container.container.Container.conv_general_dilated"], [100, "ivy.container.container.Container.conv_general_dilated"]], "conv_general_transpose() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.conv_general_transpose"], [99, "ivy.container.container.Container.conv_general_transpose"], [100, "ivy.container.container.Container.conv_general_transpose"]], "copy_array() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.copy_array"], [99, "ivy.container.container.Container.copy_array"], [100, "ivy.container.container.Container.copy_array"]], "current_backend() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.current_backend"], [99, "ivy.container.container.Container.current_backend"], [100, "ivy.container.container.Container.current_backend"]], "current_backend_str() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.current_backend_str"], [99, "ivy.container.container.Container.current_backend_str"], [100, "ivy.container.container.Container.current_backend_str"]], "deconv_length() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.deconv_length"], [99, "ivy.container.container.Container.deconv_length"], [100, "ivy.container.container.Container.deconv_length"]], "default() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.default"], [99, "ivy.container.container.Container.default"], [100, "ivy.container.container.Container.default"]], "default_device() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.default_device"], [99, "ivy.container.container.Container.default_device"], [100, "ivy.container.container.Container.default_device"]], "default_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.default_dtype"], [99, "ivy.container.container.Container.default_dtype"], [100, "ivy.container.container.Container.default_dtype"]], "default_float_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.default_float_dtype"], [99, "ivy.container.container.Container.default_float_dtype"], [100, "ivy.container.container.Container.default_float_dtype"]], "default_int_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.default_int_dtype"], [99, "ivy.container.container.Container.default_int_dtype"], [100, "ivy.container.container.Container.default_int_dtype"]], "default_uint_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.default_uint_dtype"], [99, "ivy.container.container.Container.default_uint_dtype"], [100, "ivy.container.container.Container.default_uint_dtype"]], "deserialize() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.deserialize"], [99, "ivy.container.container.Container.deserialize"], [100, "ivy.container.container.Container.deserialize"]], "dev_util() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.dev_util"], [99, "ivy.container.container.Container.dev_util"], [100, "ivy.container.container.Container.dev_util"]], "dtype_bits() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.dtype_bits"], [99, "ivy.container.container.Container.dtype_bits"], [100, "ivy.container.container.Container.dtype_bits"]], "empty() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.empty"], [99, "ivy.container.container.Container.empty"], [100, "ivy.container.container.Container.empty"]], "execute_with_gradients() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.execute_with_gradients"], [99, "ivy.container.container.Container.execute_with_gradients"], [100, "ivy.container.container.Container.execute_with_gradients"]], "exists() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.exists"], [99, "ivy.container.container.Container.exists"], [100, "ivy.container.container.Container.exists"]], "eye() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.eye"], [99, "ivy.container.container.Container.eye"], [100, "ivy.container.container.Container.eye"]], "full() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.full"], [99, "ivy.container.container.Container.full"], [100, "ivy.container.container.Container.full"]], "function_supported_devices() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.function_supported_devices"], [99, "ivy.container.container.Container.function_supported_devices"], [100, "ivy.container.container.Container.function_supported_devices"]], "function_supported_devices_and_dtypes() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.function_supported_devices_and_dtypes"], [99, "ivy.container.container.Container.function_supported_devices_and_dtypes"], [100, "ivy.container.container.Container.function_supported_devices_and_dtypes"]], "function_supported_dtypes() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.function_supported_dtypes"], [99, "ivy.container.container.Container.function_supported_dtypes"], [100, "ivy.container.container.Container.function_supported_dtypes"]], "function_unsupported_devices() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.function_unsupported_devices"], [99, "ivy.container.container.Container.function_unsupported_devices"], [100, "ivy.container.container.Container.function_unsupported_devices"]], "function_unsupported_devices_and_dtypes() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.function_unsupported_devices_and_dtypes"], [99, "ivy.container.container.Container.function_unsupported_devices_and_dtypes"], [100, "ivy.container.container.Container.function_unsupported_devices_and_dtypes"]], "function_unsupported_dtypes() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.function_unsupported_dtypes"], [99, "ivy.container.container.Container.function_unsupported_dtypes"], [100, "ivy.container.container.Container.function_unsupported_dtypes"]], "get_all_arrays_in_memory() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.get_all_arrays_in_memory"], [99, "ivy.container.container.Container.get_all_arrays_in_memory"], [100, "ivy.container.container.Container.get_all_arrays_in_memory"]], "get_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.get_all_ivy_arrays_on_dev"], [99, "ivy.container.container.Container.get_all_ivy_arrays_on_dev"], [100, "ivy.container.container.Container.get_all_ivy_arrays_on_dev"]], "get_array_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.get_array_mode"], [99, "ivy.container.container.Container.get_array_mode"], [100, "ivy.container.container.Container.get_array_mode"]], "get_exception_trace_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.get_exception_trace_mode"], [99, "ivy.container.container.Container.get_exception_trace_mode"], [100, "ivy.container.container.Container.get_exception_trace_mode"]], "get_item() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.get_item"], [99, "ivy.container.container.Container.get_item"], [100, "ivy.container.container.Container.get_item"]], "get_min_base() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.get_min_base"], [99, "ivy.container.container.Container.get_min_base"], [100, "ivy.container.container.Container.get_min_base"]], "get_min_denominator() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.get_min_denominator"], [99, "ivy.container.container.Container.get_min_denominator"], [100, "ivy.container.container.Container.get_min_denominator"]], "get_nestable_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.get_nestable_mode"], [99, "ivy.container.container.Container.get_nestable_mode"], [100, "ivy.container.container.Container.get_nestable_mode"]], "get_queue_timeout() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.get_queue_timeout"], [99, "ivy.container.container.Container.get_queue_timeout"], [100, "ivy.container.container.Container.get_queue_timeout"]], "get_referrers_recursive() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.get_referrers_recursive"], [99, "ivy.container.container.Container.get_referrers_recursive"], [100, "ivy.container.container.Container.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.get_show_func_wrapper_trace_mode"], [99, "ivy.container.container.Container.get_show_func_wrapper_trace_mode"], [100, "ivy.container.container.Container.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.get_tmp_dir"], [99, "ivy.container.container.Container.get_tmp_dir"], [100, "ivy.container.container.Container.get_tmp_dir"]], "get_x_data_format() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.get_x_data_format"], [99, "ivy.container.container.Container.get_x_data_format"], [100, "ivy.container.container.Container.get_x_data_format"]], "gpu_is_available() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.gpu_is_available"], [99, "ivy.container.container.Container.gpu_is_available"], [100, "ivy.container.container.Container.gpu_is_available"]], "grad() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.grad"], [99, "ivy.container.container.Container.grad"], [100, "ivy.container.container.Container.grad"]], "handle_array_like() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.handle_array_like"], [99, "ivy.container.container.Container.handle_array_like"], [100, "ivy.container.container.Container.handle_array_like"]], "handle_exceptions() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.handle_exceptions"], [99, "ivy.container.container.Container.handle_exceptions"], [100, "ivy.container.container.Container.handle_exceptions"]], "handle_nestable() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.handle_nestable"], [99, "ivy.container.container.Container.handle_nestable"], [100, "ivy.container.container.Container.handle_nestable"]], "handle_out_argument() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.handle_out_argument"], [99, "ivy.container.container.Container.handle_out_argument"], [100, "ivy.container.container.Container.handle_out_argument"]], "handle_padding() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.handle_padding"], [99, "ivy.container.container.Container.handle_padding"], [100, "ivy.container.container.Container.handle_padding"]], "infer_default_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.infer_default_dtype"], [99, "ivy.container.container.Container.infer_default_dtype"], [100, "ivy.container.container.Container.infer_default_dtype"]], "infer_device() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.infer_device"], [99, "ivy.container.container.Container.infer_device"], [100, "ivy.container.container.Container.infer_device"]], "infer_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.infer_dtype"], [99, "ivy.container.container.Container.infer_dtype"], [100, "ivy.container.container.Container.infer_dtype"]], "inplace_arrays_supported() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.inplace_arrays_supported"], [99, "ivy.container.container.Container.inplace_arrays_supported"], [100, "ivy.container.container.Container.inplace_arrays_supported"]], "inplace_variables_supported() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.inplace_variables_supported"], [99, "ivy.container.container.Container.inplace_variables_supported"], [100, "ivy.container.container.Container.inplace_variables_supported"]], "inputs_to_ivy_arrays() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.inputs_to_ivy_arrays"], [99, "ivy.container.container.Container.inputs_to_ivy_arrays"], [100, "ivy.container.container.Container.inputs_to_ivy_arrays"]], "inputs_to_native_arrays() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.inputs_to_native_arrays"], [99, "ivy.container.container.Container.inputs_to_native_arrays"], [100, "ivy.container.container.Container.inputs_to_native_arrays"]], "integer_arrays_to_float() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.integer_arrays_to_float"], [99, "ivy.container.container.Container.integer_arrays_to_float"], [100, "ivy.container.container.Container.integer_arrays_to_float"]], "invalid_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.invalid_dtype"], [99, "ivy.container.container.Container.invalid_dtype"], [100, "ivy.container.container.Container.invalid_dtype"]], "is_ivy_container() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.is_ivy_container"], [99, "ivy.container.container.Container.is_ivy_container"], [100, "ivy.container.container.Container.is_ivy_container"]], "isscalar() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.isscalar"], [99, "ivy.container.container.Container.isscalar"], [100, "ivy.container.container.Container.isscalar"]], "ivy.container.container": [[94, "module-ivy.container.container"], [99, "module-ivy.container.container"]], "jac() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.jac"], [99, "ivy.container.container.Container.jac"], [100, "ivy.container.container.Container.jac"]], "match_kwargs() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.match_kwargs"], [99, "ivy.container.container.Container.match_kwargs"], [100, "ivy.container.container.Container.match_kwargs"]], "multiprocessing() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.multiprocessing"], [99, "ivy.container.container.Container.multiprocessing"], [100, "ivy.container.container.Container.multiprocessing"]], "normalize_axis_tuple() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.normalize_axis_tuple"], [99, "ivy.container.container.Container.normalize_axis_tuple"], [100, "ivy.container.container.Container.normalize_axis_tuple"]], "num_arrays_in_memory() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.num_arrays_in_memory"], [99, "ivy.container.container.Container.num_arrays_in_memory"], [100, "ivy.container.container.Container.num_arrays_in_memory"]], "num_cpu_cores() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.num_cpu_cores"], [99, "ivy.container.container.Container.num_cpu_cores"], [100, "ivy.container.container.Container.num_cpu_cores"]], "num_gpus() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.num_gpus"], [99, "ivy.container.container.Container.num_gpus"], [100, "ivy.container.container.Container.num_gpus"]], "num_ivy_arrays_on_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.num_ivy_arrays_on_dev"], [99, "ivy.container.container.Container.num_ivy_arrays_on_dev"], [100, "ivy.container.container.Container.num_ivy_arrays_on_dev"]], "ones() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.ones"], [99, "ivy.container.container.Container.ones"], [100, "ivy.container.container.Container.ones"]], "outputs_to_ivy_arrays() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.outputs_to_ivy_arrays"], [99, "ivy.container.container.Container.outputs_to_ivy_arrays"], [100, "ivy.container.container.Container.outputs_to_ivy_arrays"]], "percent_used_mem_on_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.percent_used_mem_on_dev"], [99, "ivy.container.container.Container.percent_used_mem_on_dev"], [100, "ivy.container.container.Container.percent_used_mem_on_dev"]], "print_all_arrays_in_memory() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.print_all_arrays_in_memory"], [99, "ivy.container.container.Container.print_all_arrays_in_memory"], [100, "ivy.container.container.Container.print_all_arrays_in_memory"]], "print_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.print_all_ivy_arrays_on_dev"], [99, "ivy.container.container.Container.print_all_ivy_arrays_on_dev"], [100, "ivy.container.container.Container.print_all_ivy_arrays_on_dev"]], "promote_types() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.promote_types"], [99, "ivy.container.container.Container.promote_types"], [100, "ivy.container.container.Container.promote_types"]], "promote_types_of_inputs() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.promote_types_of_inputs"], [99, "ivy.container.container.Container.promote_types_of_inputs"], [100, "ivy.container.container.Container.promote_types_of_inputs"]], "seed() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.seed"], [99, "ivy.container.container.Container.seed"], [100, "ivy.container.container.Container.seed"]], "set_array_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_array_mode"], [99, "ivy.container.container.Container.set_array_mode"], [100, "ivy.container.container.Container.set_array_mode"]], "set_default_device() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_default_device"], [99, "ivy.container.container.Container.set_default_device"], [100, "ivy.container.container.Container.set_default_device"]], "set_default_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_default_dtype"], [99, "ivy.container.container.Container.set_default_dtype"], [100, "ivy.container.container.Container.set_default_dtype"]], "set_default_float_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_default_float_dtype"], [99, "ivy.container.container.Container.set_default_float_dtype"], [100, "ivy.container.container.Container.set_default_float_dtype"]], "set_default_int_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_default_int_dtype"], [99, "ivy.container.container.Container.set_default_int_dtype"], [100, "ivy.container.container.Container.set_default_int_dtype"]], "set_default_uint_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_default_uint_dtype"], [99, "ivy.container.container.Container.set_default_uint_dtype"], [100, "ivy.container.container.Container.set_default_uint_dtype"]], "set_exception_trace_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_exception_trace_mode"], [99, "ivy.container.container.Container.set_exception_trace_mode"], [100, "ivy.container.container.Container.set_exception_trace_mode"]], "set_min_base() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_min_base"], [99, "ivy.container.container.Container.set_min_base"], [100, "ivy.container.container.Container.set_min_base"]], "set_min_denominator() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_min_denominator"], [99, "ivy.container.container.Container.set_min_denominator"], [100, "ivy.container.container.Container.set_min_denominator"]], "set_nestable_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_nestable_mode"], [99, "ivy.container.container.Container.set_nestable_mode"], [100, "ivy.container.container.Container.set_nestable_mode"]], "set_queue_timeout() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_queue_timeout"], [99, "ivy.container.container.Container.set_queue_timeout"], [100, "ivy.container.container.Container.set_queue_timeout"]], "set_shape_array_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_shape_array_mode"], [99, "ivy.container.container.Container.set_shape_array_mode"], [100, "ivy.container.container.Container.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_show_func_wrapper_trace_mode"], [99, "ivy.container.container.Container.set_show_func_wrapper_trace_mode"], [100, "ivy.container.container.Container.set_show_func_wrapper_trace_mode"]], "set_split_factor() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_split_factor"], [99, "ivy.container.container.Container.set_split_factor"], [100, "ivy.container.container.Container.set_split_factor"]], "set_tmp_dir() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_tmp_dir"], [99, "ivy.container.container.Container.set_tmp_dir"], [100, "ivy.container.container.Container.set_tmp_dir"]], "set_with_grads() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.set_with_grads"], [99, "ivy.container.container.Container.set_with_grads"], [100, "ivy.container.container.Container.set_with_grads"]], "shape_array_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.shape_array_mode"], [99, "ivy.container.container.Container.shape_array_mode"], [100, "ivy.container.container.Container.shape_array_mode"]], "split_factor() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.split_factor"], [99, "ivy.container.container.Container.split_factor"], [100, "ivy.container.container.Container.split_factor"]], "split_func_call() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.split_func_call"], [99, "ivy.container.container.Container.split_func_call"], [100, "ivy.container.container.Container.split_func_call"]], "static_adam_step() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_adam_step"], [99, "ivy.container.container.Container.static_adam_step"], [100, "ivy.container.container.Container.static_adam_step"]], "static_adam_update() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_adam_update"], [99, "ivy.container.container.Container.static_adam_update"], [100, "ivy.container.container.Container.static_adam_update"]], "static_arg_info() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_arg_info"], [99, "ivy.container.container.Container.static_arg_info"], [100, "ivy.container.container.Container.static_arg_info"]], "static_arg_names() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_arg_names"], [99, "ivy.container.container.Container.static_arg_names"], [100, "ivy.container.container.Container.static_arg_names"]], "static_array() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_array"], [99, "ivy.container.container.Container.static_array"], [100, "ivy.container.container.Container.static_array"]], "static_array_equal() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_array_equal"], [99, "ivy.container.container.Container.static_array_equal"], [100, "ivy.container.container.Container.static_array_equal"]], "static_as_ivy_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_as_ivy_dev"], [99, "ivy.container.container.Container.static_as_ivy_dev"], [100, "ivy.container.container.Container.static_as_ivy_dev"]], "static_as_ivy_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_as_ivy_dtype"], [99, "ivy.container.container.Container.static_as_ivy_dtype"], [100, "ivy.container.container.Container.static_as_ivy_dtype"]], "static_as_native_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_as_native_dev"], [99, "ivy.container.container.Container.static_as_native_dev"], [100, "ivy.container.container.Container.static_as_native_dev"]], "static_as_native_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_as_native_dtype"], [99, "ivy.container.container.Container.static_as_native_dtype"], [100, "ivy.container.container.Container.static_as_native_dtype"]], "static_asarray_handle_nestable() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_asarray_handle_nestable"], [99, "ivy.container.container.Container.static_asarray_handle_nestable"], [100, "ivy.container.container.Container.static_asarray_handle_nestable"]], "static_asarray_infer_device() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_asarray_infer_device"], [99, "ivy.container.container.Container.static_asarray_infer_device"], [100, "ivy.container.container.Container.static_asarray_infer_device"]], "static_asarray_to_native_arrays_and_back() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_asarray_to_native_arrays_and_back"], [99, "ivy.container.container.Container.static_asarray_to_native_arrays_and_back"], [100, "ivy.container.container.Container.static_asarray_to_native_arrays_and_back"]], "static_cache_fn() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_cache_fn"], [99, "ivy.container.container.Container.static_cache_fn"], [100, "ivy.container.container.Container.static_cache_fn"]], "static_check_float() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_check_float"], [99, "ivy.container.container.Container.static_check_float"], [100, "ivy.container.container.Container.static_check_float"]], "static_clear_mem_on_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_clear_mem_on_dev"], [99, "ivy.container.container.Container.static_clear_mem_on_dev"], [100, "ivy.container.container.Container.static_clear_mem_on_dev"]], "static_closest_valid_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_closest_valid_dtype"], [99, "ivy.container.container.Container.static_closest_valid_dtype"], [100, "ivy.container.container.Container.static_closest_valid_dtype"]], "static_container_types() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_container_types"], [99, "ivy.container.container.Container.static_container_types"], [100, "ivy.container.container.Container.static_container_types"]], "static_conv() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_conv"], [99, "ivy.container.container.Container.static_conv"], [100, "ivy.container.container.Container.static_conv"]], "static_conv_general_dilated() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_conv_general_dilated"], [99, "ivy.container.container.Container.static_conv_general_dilated"], [100, "ivy.container.container.Container.static_conv_general_dilated"]], "static_conv_general_transpose() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_conv_general_transpose"], [99, "ivy.container.container.Container.static_conv_general_transpose"], [100, "ivy.container.container.Container.static_conv_general_transpose"]], "static_copy_array() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_copy_array"], [99, "ivy.container.container.Container.static_copy_array"], [100, "ivy.container.container.Container.static_copy_array"]], "static_current_backend() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_current_backend"], [99, "ivy.container.container.Container.static_current_backend"], [100, "ivy.container.container.Container.static_current_backend"]], "static_current_backend_str() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_current_backend_str"], [99, "ivy.container.container.Container.static_current_backend_str"], [100, "ivy.container.container.Container.static_current_backend_str"]], "static_deconv_length() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_deconv_length"], [99, "ivy.container.container.Container.static_deconv_length"], [100, "ivy.container.container.Container.static_deconv_length"]], "static_default() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_default"], [99, "ivy.container.container.Container.static_default"], [100, "ivy.container.container.Container.static_default"]], "static_default_device() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_default_device"], [99, "ivy.container.container.Container.static_default_device"], [100, "ivy.container.container.Container.static_default_device"]], "static_default_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_default_dtype"], [99, "ivy.container.container.Container.static_default_dtype"], [100, "ivy.container.container.Container.static_default_dtype"]], "static_default_int_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_default_int_dtype"], [99, "ivy.container.container.Container.static_default_int_dtype"], [100, "ivy.container.container.Container.static_default_int_dtype"]], "static_default_uint_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_default_uint_dtype"], [99, "ivy.container.container.Container.static_default_uint_dtype"], [100, "ivy.container.container.Container.static_default_uint_dtype"]], "static_deserialize() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_deserialize"], [99, "ivy.container.container.Container.static_deserialize"], [100, "ivy.container.container.Container.static_deserialize"]], "static_dev_util() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_dev_util"], [99, "ivy.container.container.Container.static_dev_util"], [100, "ivy.container.container.Container.static_dev_util"]], "static_dtype_bits() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_dtype_bits"], [99, "ivy.container.container.Container.static_dtype_bits"], [100, "ivy.container.container.Container.static_dtype_bits"]], "static_einsum() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_einsum"], [99, "ivy.container.container.Container.static_einsum"], [100, "ivy.container.container.Container.static_einsum"]], "static_empty() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_empty"], [99, "ivy.container.container.Container.static_empty"], [100, "ivy.container.container.Container.static_empty"]], "static_execute_with_gradients() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_execute_with_gradients"], [99, "ivy.container.container.Container.static_execute_with_gradients"], [100, "ivy.container.container.Container.static_execute_with_gradients"]], "static_exists() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_exists"], [99, "ivy.container.container.Container.static_exists"], [100, "ivy.container.container.Container.static_exists"]], "static_full() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_full"], [99, "ivy.container.container.Container.static_full"], [100, "ivy.container.container.Container.static_full"]], "static_function_supported_devices() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_function_supported_devices"], [99, "ivy.container.container.Container.static_function_supported_devices"], [100, "ivy.container.container.Container.static_function_supported_devices"]], "static_function_supported_devices_and_dtypes() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_function_supported_devices_and_dtypes"], [99, "ivy.container.container.Container.static_function_supported_devices_and_dtypes"], [100, "ivy.container.container.Container.static_function_supported_devices_and_dtypes"]], "static_function_unsupported_devices() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_function_unsupported_devices"], [99, "ivy.container.container.Container.static_function_unsupported_devices"], [100, "ivy.container.container.Container.static_function_unsupported_devices"]], "static_function_unsupported_devices_and_dtypes() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_function_unsupported_devices_and_dtypes"], [99, "ivy.container.container.Container.static_function_unsupported_devices_and_dtypes"], [100, "ivy.container.container.Container.static_function_unsupported_devices_and_dtypes"]], "static_get() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_get"], [99, "ivy.container.container.Container.static_get"], [100, "ivy.container.container.Container.static_get"]], "static_get_all_arrays_in_memory() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_get_all_arrays_in_memory"], [99, "ivy.container.container.Container.static_get_all_arrays_in_memory"], [100, "ivy.container.container.Container.static_get_all_arrays_in_memory"]], "static_get_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_get_all_ivy_arrays_on_dev"], [99, "ivy.container.container.Container.static_get_all_ivy_arrays_on_dev"], [100, "ivy.container.container.Container.static_get_all_ivy_arrays_on_dev"]], "static_get_array_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_get_array_mode"], [99, "ivy.container.container.Container.static_get_array_mode"], [100, "ivy.container.container.Container.static_get_array_mode"]], "static_get_exception_trace_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_get_exception_trace_mode"], [99, "ivy.container.container.Container.static_get_exception_trace_mode"], [100, "ivy.container.container.Container.static_get_exception_trace_mode"]], "static_get_item() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_get_item"], [99, "ivy.container.container.Container.static_get_item"], [100, "ivy.container.container.Container.static_get_item"]], "static_get_min_base() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_get_min_base"], [99, "ivy.container.container.Container.static_get_min_base"], [100, "ivy.container.container.Container.static_get_min_base"]], "static_get_min_denominator() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_get_min_denominator"], [99, "ivy.container.container.Container.static_get_min_denominator"], [100, "ivy.container.container.Container.static_get_min_denominator"]], "static_get_nestable_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_get_nestable_mode"], [99, "ivy.container.container.Container.static_get_nestable_mode"], [100, "ivy.container.container.Container.static_get_nestable_mode"]], "static_get_queue_timeout() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_get_queue_timeout"], [99, "ivy.container.container.Container.static_get_queue_timeout"], [100, "ivy.container.container.Container.static_get_queue_timeout"]], "static_get_referrers_recursive() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_get_referrers_recursive"], [99, "ivy.container.container.Container.static_get_referrers_recursive"], [100, "ivy.container.container.Container.static_get_referrers_recursive"]], "static_get_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_get_show_func_wrapper_trace_mode"], [99, "ivy.container.container.Container.static_get_show_func_wrapper_trace_mode"], [100, "ivy.container.container.Container.static_get_show_func_wrapper_trace_mode"]], "static_get_tmp_dir() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_get_tmp_dir"], [99, "ivy.container.container.Container.static_get_tmp_dir"], [100, "ivy.container.container.Container.static_get_tmp_dir"]], "static_get_x_data_format() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_get_x_data_format"], [99, "ivy.container.container.Container.static_get_x_data_format"], [100, "ivy.container.container.Container.static_get_x_data_format"]], "static_gpu_is_available() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_gpu_is_available"], [99, "ivy.container.container.Container.static_gpu_is_available"], [100, "ivy.container.container.Container.static_gpu_is_available"]], "static_grad() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_grad"], [99, "ivy.container.container.Container.static_grad"], [100, "ivy.container.container.Container.static_grad"]], "static_gradient_descent_update() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_gradient_descent_update"], [99, "ivy.container.container.Container.static_gradient_descent_update"], [100, "ivy.container.container.Container.static_gradient_descent_update"]], "static_handle_array_like() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_handle_array_like"], [99, "ivy.container.container.Container.static_handle_array_like"], [100, "ivy.container.container.Container.static_handle_array_like"]], "static_handle_exceptions() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_handle_exceptions"], [99, "ivy.container.container.Container.static_handle_exceptions"], [100, "ivy.container.container.Container.static_handle_exceptions"]], "static_handle_nestable() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_handle_nestable"], [99, "ivy.container.container.Container.static_handle_nestable"], [100, "ivy.container.container.Container.static_handle_nestable"]], "static_handle_out_argument() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_handle_out_argument"], [99, "ivy.container.container.Container.static_handle_out_argument"], [100, "ivy.container.container.Container.static_handle_out_argument"]], "static_handle_padding() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_handle_padding"], [99, "ivy.container.container.Container.static_handle_padding"], [100, "ivy.container.container.Container.static_handle_padding"]], "static_infer_default_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_infer_default_dtype"], [99, "ivy.container.container.Container.static_infer_default_dtype"], [100, "ivy.container.container.Container.static_infer_default_dtype"]], "static_infer_device() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_infer_device"], [99, "ivy.container.container.Container.static_infer_device"], [100, "ivy.container.container.Container.static_infer_device"]], "static_infer_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_infer_dtype"], [99, "ivy.container.container.Container.static_infer_dtype"], [100, "ivy.container.container.Container.static_infer_dtype"]], "static_inplace_arrays_supported() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_inplace_arrays_supported"], [99, "ivy.container.container.Container.static_inplace_arrays_supported"], [100, "ivy.container.container.Container.static_inplace_arrays_supported"]], "static_inplace_variables_supported() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_inplace_variables_supported"], [99, "ivy.container.container.Container.static_inplace_variables_supported"], [100, "ivy.container.container.Container.static_inplace_variables_supported"]], "static_inputs_to_ivy_arrays() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_inputs_to_ivy_arrays"], [99, "ivy.container.container.Container.static_inputs_to_ivy_arrays"], [100, "ivy.container.container.Container.static_inputs_to_ivy_arrays"]], "static_inputs_to_native_arrays() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_inputs_to_native_arrays"], [99, "ivy.container.container.Container.static_inputs_to_native_arrays"], [100, "ivy.container.container.Container.static_inputs_to_native_arrays"]], "static_integer_arrays_to_float() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_integer_arrays_to_float"], [99, "ivy.container.container.Container.static_integer_arrays_to_float"], [100, "ivy.container.container.Container.static_integer_arrays_to_float"]], "static_invalid_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_invalid_dtype"], [99, "ivy.container.container.Container.static_invalid_dtype"], [100, "ivy.container.container.Container.static_invalid_dtype"]], "static_is_ivy_container() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_is_ivy_container"], [99, "ivy.container.container.Container.static_is_ivy_container"], [100, "ivy.container.container.Container.static_is_ivy_container"]], "static_isscalar() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_isscalar"], [99, "ivy.container.container.Container.static_isscalar"], [100, "ivy.container.container.Container.static_isscalar"]], "static_jac() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_jac"], [99, "ivy.container.container.Container.static_jac"], [100, "ivy.container.container.Container.static_jac"]], "static_lamb_update() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_lamb_update"], [99, "ivy.container.container.Container.static_lamb_update"], [100, "ivy.container.container.Container.static_lamb_update"]], "static_lars_update() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_lars_update"], [99, "ivy.container.container.Container.static_lars_update"], [100, "ivy.container.container.Container.static_lars_update"]], "static_layer_norm() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_layer_norm"], [99, "ivy.container.container.Container.static_layer_norm"], [100, "ivy.container.container.Container.static_layer_norm"]], "static_match_kwargs() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_match_kwargs"], [99, "ivy.container.container.Container.static_match_kwargs"], [100, "ivy.container.container.Container.static_match_kwargs"]], "static_max() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_max"], [99, "ivy.container.container.Container.static_max"], [100, "ivy.container.container.Container.static_max"]], "static_mean() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_mean"], [99, "ivy.container.container.Container.static_mean"], [100, "ivy.container.container.Container.static_mean"]], "static_min() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_min"], [99, "ivy.container.container.Container.static_min"], [100, "ivy.container.container.Container.static_min"]], "static_multiprocessing() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_multiprocessing"], [99, "ivy.container.container.Container.static_multiprocessing"], [100, "ivy.container.container.Container.static_multiprocessing"]], "static_normalize_axis_tuple() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_normalize_axis_tuple"], [99, "ivy.container.container.Container.static_normalize_axis_tuple"], [100, "ivy.container.container.Container.static_normalize_axis_tuple"]], "static_num_arrays_in_memory() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_num_arrays_in_memory"], [99, "ivy.container.container.Container.static_num_arrays_in_memory"], [100, "ivy.container.container.Container.static_num_arrays_in_memory"]], "static_num_cpu_cores() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_num_cpu_cores"], [99, "ivy.container.container.Container.static_num_cpu_cores"], [100, "ivy.container.container.Container.static_num_cpu_cores"]], "static_num_gpus() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_num_gpus"], [99, "ivy.container.container.Container.static_num_gpus"], [100, "ivy.container.container.Container.static_num_gpus"]], "static_num_ivy_arrays_on_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_num_ivy_arrays_on_dev"], [99, "ivy.container.container.Container.static_num_ivy_arrays_on_dev"], [100, "ivy.container.container.Container.static_num_ivy_arrays_on_dev"]], "static_optimizer_update() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_optimizer_update"], [99, "ivy.container.container.Container.static_optimizer_update"], [100, "ivy.container.container.Container.static_optimizer_update"]], "static_outputs_to_ivy_arrays() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_outputs_to_ivy_arrays"], [99, "ivy.container.container.Container.static_outputs_to_ivy_arrays"], [100, "ivy.container.container.Container.static_outputs_to_ivy_arrays"]], "static_percent_used_mem_on_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_percent_used_mem_on_dev"], [99, "ivy.container.container.Container.static_percent_used_mem_on_dev"], [100, "ivy.container.container.Container.static_percent_used_mem_on_dev"]], "static_print_all_arrays_in_memory() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_print_all_arrays_in_memory"], [99, "ivy.container.container.Container.static_print_all_arrays_in_memory"], [100, "ivy.container.container.Container.static_print_all_arrays_in_memory"]], "static_print_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_print_all_ivy_arrays_on_dev"], [99, "ivy.container.container.Container.static_print_all_ivy_arrays_on_dev"], [100, "ivy.container.container.Container.static_print_all_ivy_arrays_on_dev"]], "static_promote_types() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_promote_types"], [99, "ivy.container.container.Container.static_promote_types"], [100, "ivy.container.container.Container.static_promote_types"]], "static_promote_types_of_inputs() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_promote_types_of_inputs"], [99, "ivy.container.container.Container.static_promote_types_of_inputs"], [100, "ivy.container.container.Container.static_promote_types_of_inputs"]], "static_seed() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_seed"], [99, "ivy.container.container.Container.static_seed"], [100, "ivy.container.container.Container.static_seed"]], "static_set_array_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_array_mode"], [99, "ivy.container.container.Container.static_set_array_mode"], [100, "ivy.container.container.Container.static_set_array_mode"]], "static_set_default_device() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_default_device"], [99, "ivy.container.container.Container.static_set_default_device"], [100, "ivy.container.container.Container.static_set_default_device"]], "static_set_default_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_default_dtype"], [99, "ivy.container.container.Container.static_set_default_dtype"], [100, "ivy.container.container.Container.static_set_default_dtype"]], "static_set_default_float_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_default_float_dtype"], [99, "ivy.container.container.Container.static_set_default_float_dtype"], [100, "ivy.container.container.Container.static_set_default_float_dtype"]], "static_set_default_int_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_default_int_dtype"], [99, "ivy.container.container.Container.static_set_default_int_dtype"], [100, "ivy.container.container.Container.static_set_default_int_dtype"]], "static_set_default_uint_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_default_uint_dtype"], [99, "ivy.container.container.Container.static_set_default_uint_dtype"], [100, "ivy.container.container.Container.static_set_default_uint_dtype"]], "static_set_exception_trace_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_exception_trace_mode"], [99, "ivy.container.container.Container.static_set_exception_trace_mode"], [100, "ivy.container.container.Container.static_set_exception_trace_mode"]], "static_set_min_base() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_min_base"], [99, "ivy.container.container.Container.static_set_min_base"], [100, "ivy.container.container.Container.static_set_min_base"]], "static_set_min_denominator() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_min_denominator"], [99, "ivy.container.container.Container.static_set_min_denominator"], [100, "ivy.container.container.Container.static_set_min_denominator"]], "static_set_nestable_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_nestable_mode"], [99, "ivy.container.container.Container.static_set_nestable_mode"], [100, "ivy.container.container.Container.static_set_nestable_mode"]], "static_set_queue_timeout() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_queue_timeout"], [99, "ivy.container.container.Container.static_set_queue_timeout"], [100, "ivy.container.container.Container.static_set_queue_timeout"]], "static_set_shape_array_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_shape_array_mode"], [99, "ivy.container.container.Container.static_set_shape_array_mode"], [100, "ivy.container.container.Container.static_set_shape_array_mode"]], "static_set_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_show_func_wrapper_trace_mode"], [99, "ivy.container.container.Container.static_set_show_func_wrapper_trace_mode"], [100, "ivy.container.container.Container.static_set_show_func_wrapper_trace_mode"]], "static_set_split_factor() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_split_factor"], [99, "ivy.container.container.Container.static_set_split_factor"], [100, "ivy.container.container.Container.static_set_split_factor"]], "static_set_tmp_dir() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_tmp_dir"], [99, "ivy.container.container.Container.static_set_tmp_dir"], [100, "ivy.container.container.Container.static_set_tmp_dir"]], "static_set_with_grads() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_set_with_grads"], [99, "ivy.container.container.Container.static_set_with_grads"], [100, "ivy.container.container.Container.static_set_with_grads"]], "static_shape() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_shape"], [99, "ivy.container.container.Container.static_shape"], [100, "ivy.container.container.Container.static_shape"]], "static_shape_array_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_shape_array_mode"], [99, "ivy.container.container.Container.static_shape_array_mode"], [100, "ivy.container.container.Container.static_shape_array_mode"]], "static_split_factor() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_split_factor"], [99, "ivy.container.container.Container.static_split_factor"], [100, "ivy.container.container.Container.static_split_factor"]], "static_split_func_call() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_split_func_call"], [99, "ivy.container.container.Container.static_split_func_call"], [100, "ivy.container.container.Container.static_split_func_call"]], "static_std() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_std"], [99, "ivy.container.container.Container.static_std"], [100, "ivy.container.container.Container.static_std"]], "static_tensorsolve() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_tensorsolve"], [99, "ivy.container.container.Container.static_tensorsolve"], [100, "ivy.container.container.Container.static_tensorsolve"]], "static_to_ivy_shape() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_to_ivy_shape"], [99, "ivy.container.container.Container.static_to_ivy_shape"], [100, "ivy.container.container.Container.static_to_ivy_shape"]], "static_to_native_arrays_and_back() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_to_native_arrays_and_back"], [99, "ivy.container.container.Container.static_to_native_arrays_and_back"], [100, "ivy.container.container.Container.static_to_native_arrays_and_back"]], "static_to_native_shape() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_to_native_shape"], [99, "ivy.container.container.Container.static_to_native_shape"], [100, "ivy.container.container.Container.static_to_native_shape"]], "static_total_mem_on_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_total_mem_on_dev"], [99, "ivy.container.container.Container.static_total_mem_on_dev"], [100, "ivy.container.container.Container.static_total_mem_on_dev"]], "static_tpu_is_available() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_tpu_is_available"], [99, "ivy.container.container.Container.static_tpu_is_available"], [100, "ivy.container.container.Container.static_tpu_is_available"]], "static_try_else_none() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_try_else_none"], [99, "ivy.container.container.Container.static_try_else_none"], [100, "ivy.container.container.Container.static_try_else_none"]], "static_type_promote_arrays() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_type_promote_arrays"], [99, "ivy.container.container.Container.static_type_promote_arrays"], [100, "ivy.container.container.Container.static_type_promote_arrays"]], "static_unset_array_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_unset_array_mode"], [99, "ivy.container.container.Container.static_unset_array_mode"], [100, "ivy.container.container.Container.static_unset_array_mode"]], "static_unset_default_device() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_unset_default_device"], [99, "ivy.container.container.Container.static_unset_default_device"], [100, "ivy.container.container.Container.static_unset_default_device"]], "static_unset_default_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_unset_default_dtype"], [99, "ivy.container.container.Container.static_unset_default_dtype"], [100, "ivy.container.container.Container.static_unset_default_dtype"]], "static_unset_default_float_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_unset_default_float_dtype"], [99, "ivy.container.container.Container.static_unset_default_float_dtype"], [100, "ivy.container.container.Container.static_unset_default_float_dtype"]], "static_unset_default_int_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_unset_default_int_dtype"], [99, "ivy.container.container.Container.static_unset_default_int_dtype"], [100, "ivy.container.container.Container.static_unset_default_int_dtype"]], "static_unset_default_uint_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_unset_default_uint_dtype"], [99, "ivy.container.container.Container.static_unset_default_uint_dtype"], [100, "ivy.container.container.Container.static_unset_default_uint_dtype"]], "static_unset_exception_trace_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_unset_exception_trace_mode"], [99, "ivy.container.container.Container.static_unset_exception_trace_mode"], [100, "ivy.container.container.Container.static_unset_exception_trace_mode"]], "static_unset_nestable_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_unset_nestable_mode"], [99, "ivy.container.container.Container.static_unset_nestable_mode"], [100, "ivy.container.container.Container.static_unset_nestable_mode"]], "static_unset_queue_timeout() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_unset_queue_timeout"], [99, "ivy.container.container.Container.static_unset_queue_timeout"], [100, "ivy.container.container.Container.static_unset_queue_timeout"]], "static_unset_shape_array_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_unset_shape_array_mode"], [99, "ivy.container.container.Container.static_unset_shape_array_mode"], [100, "ivy.container.container.Container.static_unset_shape_array_mode"]], "static_unset_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_unset_show_func_wrapper_trace_mode"], [99, "ivy.container.container.Container.static_unset_show_func_wrapper_trace_mode"], [100, "ivy.container.container.Container.static_unset_show_func_wrapper_trace_mode"]], "static_unset_with_grads() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_unset_with_grads"], [99, "ivy.container.container.Container.static_unset_with_grads"], [100, "ivy.container.container.Container.static_unset_with_grads"]], "static_used_mem_on_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_used_mem_on_dev"], [99, "ivy.container.container.Container.static_used_mem_on_dev"], [100, "ivy.container.container.Container.static_used_mem_on_dev"]], "static_valid_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_valid_dtype"], [99, "ivy.container.container.Container.static_valid_dtype"], [100, "ivy.container.container.Container.static_valid_dtype"]], "static_value_and_grad() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_value_and_grad"], [99, "ivy.container.container.Container.static_value_and_grad"], [100, "ivy.container.container.Container.static_value_and_grad"]], "static_vmap() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_vmap"], [99, "ivy.container.container.Container.static_vmap"], [100, "ivy.container.container.Container.static_vmap"]], "static_with_grads() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_with_grads"], [99, "ivy.container.container.Container.static_with_grads"], [100, "ivy.container.container.Container.static_with_grads"]], "static_wraps() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.static_wraps"], [99, "ivy.container.container.Container.static_wraps"], [100, "ivy.container.container.Container.static_wraps"]], "to_ivy_shape() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.to_ivy_shape"], [99, "ivy.container.container.Container.to_ivy_shape"], [100, "ivy.container.container.Container.to_ivy_shape"]], "to_native_arrays_and_back() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.to_native_arrays_and_back"], [99, "ivy.container.container.Container.to_native_arrays_and_back"], [100, "ivy.container.container.Container.to_native_arrays_and_back"]], "to_native_shape() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.to_native_shape"], [99, "ivy.container.container.Container.to_native_shape"], [100, "ivy.container.container.Container.to_native_shape"]], "total_mem_on_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.total_mem_on_dev"], [99, "ivy.container.container.Container.total_mem_on_dev"], [100, "ivy.container.container.Container.total_mem_on_dev"]], "tpu_is_available() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.tpu_is_available"], [99, "ivy.container.container.Container.tpu_is_available"], [100, "ivy.container.container.Container.tpu_is_available"]], "try_else_none() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.try_else_none"], [99, "ivy.container.container.Container.try_else_none"], [100, "ivy.container.container.Container.try_else_none"]], "type_promote_arrays() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.type_promote_arrays"], [99, "ivy.container.container.Container.type_promote_arrays"], [100, "ivy.container.container.Container.type_promote_arrays"]], "unset_array_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.unset_array_mode"], [99, "ivy.container.container.Container.unset_array_mode"], [100, "ivy.container.container.Container.unset_array_mode"]], "unset_default_device() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.unset_default_device"], [99, "ivy.container.container.Container.unset_default_device"], [100, "ivy.container.container.Container.unset_default_device"]], "unset_default_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.unset_default_dtype"], [99, "ivy.container.container.Container.unset_default_dtype"], [100, "ivy.container.container.Container.unset_default_dtype"]], "unset_default_float_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.unset_default_float_dtype"], [99, "ivy.container.container.Container.unset_default_float_dtype"], [100, "ivy.container.container.Container.unset_default_float_dtype"]], "unset_default_int_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.unset_default_int_dtype"], [99, "ivy.container.container.Container.unset_default_int_dtype"], [100, "ivy.container.container.Container.unset_default_int_dtype"]], "unset_default_uint_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.unset_default_uint_dtype"], [99, "ivy.container.container.Container.unset_default_uint_dtype"], [100, "ivy.container.container.Container.unset_default_uint_dtype"]], "unset_exception_trace_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.unset_exception_trace_mode"], [99, "ivy.container.container.Container.unset_exception_trace_mode"], [100, "ivy.container.container.Container.unset_exception_trace_mode"]], "unset_nestable_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.unset_nestable_mode"], [99, "ivy.container.container.Container.unset_nestable_mode"], [100, "ivy.container.container.Container.unset_nestable_mode"]], "unset_queue_timeout() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.unset_queue_timeout"], [99, "ivy.container.container.Container.unset_queue_timeout"], [100, "ivy.container.container.Container.unset_queue_timeout"]], "unset_shape_array_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.unset_shape_array_mode"], [99, "ivy.container.container.Container.unset_shape_array_mode"], [100, "ivy.container.container.Container.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.unset_show_func_wrapper_trace_mode"], [99, "ivy.container.container.Container.unset_show_func_wrapper_trace_mode"], [100, "ivy.container.container.Container.unset_show_func_wrapper_trace_mode"]], "unset_with_grads() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.unset_with_grads"], [99, "ivy.container.container.Container.unset_with_grads"], [100, "ivy.container.container.Container.unset_with_grads"]], "used_mem_on_dev() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.used_mem_on_dev"], [99, "ivy.container.container.Container.used_mem_on_dev"], [100, "ivy.container.container.Container.used_mem_on_dev"]], "valid_dtype() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.valid_dtype"], [99, "ivy.container.container.Container.valid_dtype"], [100, "ivy.container.container.Container.valid_dtype"]], "value_and_grad() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.value_and_grad"], [99, "ivy.container.container.Container.value_and_grad"], [100, "ivy.container.container.Container.value_and_grad"]], "vmap() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.vmap"], [99, "ivy.container.container.Container.vmap"], [100, "ivy.container.container.Container.vmap"]], "with_grads() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.with_grads"], [99, "ivy.container.container.Container.with_grads"], [100, "ivy.container.container.Container.with_grads"]], "wraps() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.wraps"], [99, "ivy.container.container.Container.wraps"], [100, "ivy.container.container.Container.wraps"]], "zeros() (ivy.container.container.container method)": [[94, "ivy.container.container.Container.zeros"], [99, "ivy.container.container.Container.zeros"], [100, "ivy.container.container.Container.zeros"]], "containerwithactivations (class in ivy.container.activations)": [[95, "ivy.container.activations.ContainerWithActivations"], [96, "ivy.container.activations.ContainerWithActivations"]], "gelu() (ivy.container.activations.containerwithactivations method)": [[95, "ivy.container.activations.ContainerWithActivations.gelu"], [96, "ivy.container.activations.ContainerWithActivations.gelu"]], "ivy.container.activations": [[95, "module-ivy.container.activations"]], "leaky_relu() (ivy.container.activations.containerwithactivations method)": [[95, "ivy.container.activations.ContainerWithActivations.leaky_relu"], [96, "ivy.container.activations.ContainerWithActivations.leaky_relu"]], "log_softmax() (ivy.container.activations.containerwithactivations method)": [[95, "ivy.container.activations.ContainerWithActivations.log_softmax"], [96, "ivy.container.activations.ContainerWithActivations.log_softmax"]], "relu() (ivy.container.activations.containerwithactivations method)": [[95, "ivy.container.activations.ContainerWithActivations.relu"], [96, "ivy.container.activations.ContainerWithActivations.relu"]], "sigmoid() (ivy.container.activations.containerwithactivations method)": [[95, "ivy.container.activations.ContainerWithActivations.sigmoid"], [96, "ivy.container.activations.ContainerWithActivations.sigmoid"]], "softmax() (ivy.container.activations.containerwithactivations method)": [[95, "ivy.container.activations.ContainerWithActivations.softmax"], [96, "ivy.container.activations.ContainerWithActivations.softmax"]], "softplus() (ivy.container.activations.containerwithactivations method)": [[95, "ivy.container.activations.ContainerWithActivations.softplus"], [96, "ivy.container.activations.ContainerWithActivations.softplus"]], "static_gelu() (ivy.container.activations.containerwithactivations static method)": [[95, "ivy.container.activations.ContainerWithActivations.static_gelu"], [96, "ivy.container.activations.ContainerWithActivations.static_gelu"]], "static_leaky_relu() (ivy.container.activations.containerwithactivations static method)": [[95, "ivy.container.activations.ContainerWithActivations.static_leaky_relu"], [96, "ivy.container.activations.ContainerWithActivations.static_leaky_relu"]], "static_log_softmax() (ivy.container.activations.containerwithactivations static method)": [[95, "ivy.container.activations.ContainerWithActivations.static_log_softmax"], [96, "ivy.container.activations.ContainerWithActivations.static_log_softmax"]], "static_relu() (ivy.container.activations.containerwithactivations static method)": [[95, "ivy.container.activations.ContainerWithActivations.static_relu"], [96, "ivy.container.activations.ContainerWithActivations.static_relu"]], "static_sigmoid() (ivy.container.activations.containerwithactivations static method)": [[95, "ivy.container.activations.ContainerWithActivations.static_sigmoid"], [96, "ivy.container.activations.ContainerWithActivations.static_sigmoid"]], "static_softmax() (ivy.container.activations.containerwithactivations static method)": [[95, "ivy.container.activations.ContainerWithActivations.static_softmax"], [96, "ivy.container.activations.ContainerWithActivations.static_softmax"]], "static_softplus() (ivy.container.activations.containerwithactivations static method)": [[95, "ivy.container.activations.ContainerWithActivations.static_softplus"], [96, "ivy.container.activations.ContainerWithActivations.static_softplus"]], "containerbase (class in ivy.container.base)": [[97, "ivy.container.base.ContainerBase"], [98, "ivy.container.base.ContainerBase"]], "__getitem__() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.__getitem__"], [98, "ivy.container.base.ContainerBase.__getitem__"]], "__init__() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.__init__"], [98, "ivy.container.base.ContainerBase.__init__"]], "__setitem__() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.__setitem__"], [98, "ivy.container.base.ContainerBase.__setitem__"]], "cont_all_false() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_all_false"], [98, "ivy.container.base.ContainerBase.cont_all_false"]], "cont_all_key_chains() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_all_key_chains"], [98, "ivy.container.base.ContainerBase.cont_all_key_chains"]], "cont_all_true() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_all_true"], [98, "ivy.container.base.ContainerBase.cont_all_true"]], "cont_as_bools() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_as_bools"], [98, "ivy.container.base.ContainerBase.cont_as_bools"]], "cont_assert_contains_sub_container() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_assert_contains_sub_container"], [98, "ivy.container.base.ContainerBase.cont_assert_contains_sub_container"]], "cont_assert_contains_sub_structure() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_assert_contains_sub_structure"], [98, "ivy.container.base.ContainerBase.cont_assert_contains_sub_structure"]], "cont_assert_identical() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_assert_identical"], [98, "ivy.container.base.ContainerBase.cont_assert_identical"]], "cont_assert_identical_structure() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_assert_identical_structure"], [98, "ivy.container.base.ContainerBase.cont_assert_identical_structure"]], "cont_at_key_chain() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_at_key_chain"], [98, "ivy.container.base.ContainerBase.cont_at_key_chain"]], "cont_at_key_chains() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_at_key_chains"], [98, "ivy.container.base.ContainerBase.cont_at_key_chains"]], "cont_at_keys() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_at_keys"], [98, "ivy.container.base.ContainerBase.cont_at_keys"]], "cont_combine() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_combine"], [98, "ivy.container.base.ContainerBase.cont_combine"]], "cont_common_key_chains() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_common_key_chains"], [98, "ivy.container.base.ContainerBase.cont_common_key_chains"]], "cont_config (ivy.container.base.containerbase property)": [[97, "ivy.container.base.ContainerBase.cont_config"], [98, "ivy.container.base.ContainerBase.cont_config"]], "cont_contains_sub_container() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_contains_sub_container"], [98, "ivy.container.base.ContainerBase.cont_contains_sub_container"]], "cont_contains_sub_structure() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_contains_sub_structure"], [98, "ivy.container.base.ContainerBase.cont_contains_sub_structure"]], "cont_copy() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_copy"], [98, "ivy.container.base.ContainerBase.cont_copy"]], "cont_create_if_absent() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_create_if_absent"], [98, "ivy.container.base.ContainerBase.cont_create_if_absent"]], "cont_cutoff_at_depth() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_cutoff_at_depth"], [98, "ivy.container.base.ContainerBase.cont_cutoff_at_depth"]], "cont_cutoff_at_height() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_cutoff_at_height"], [98, "ivy.container.base.ContainerBase.cont_cutoff_at_height"]], "cont_deep_copy() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_deep_copy"], [98, "ivy.container.base.ContainerBase.cont_deep_copy"]], "cont_dev (ivy.container.base.containerbase property)": [[97, "ivy.container.base.ContainerBase.cont_dev"], [98, "ivy.container.base.ContainerBase.cont_dev"]], "cont_dev_str (ivy.container.base.containerbase property)": [[97, "ivy.container.base.ContainerBase.cont_dev_str"], [98, "ivy.container.base.ContainerBase.cont_dev_str"]], "cont_diff() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_diff"], [98, "ivy.container.base.ContainerBase.cont_diff"]], "cont_duplicate_array_keychains() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_duplicate_array_keychains"], [98, "ivy.container.base.ContainerBase.cont_duplicate_array_keychains"]], "cont_find_sub_container() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_find_sub_container"], [98, "ivy.container.base.ContainerBase.cont_find_sub_container"]], "cont_find_sub_structure() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_find_sub_structure"], [98, "ivy.container.base.ContainerBase.cont_find_sub_structure"]], "cont_flatten_key_chain() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_flatten_key_chain"], [98, "ivy.container.base.ContainerBase.cont_flatten_key_chain"]], "cont_flatten_key_chains() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_flatten_key_chains"], [98, "ivy.container.base.ContainerBase.cont_flatten_key_chains"]], "cont_format_key_chains() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_format_key_chains"], [98, "ivy.container.base.ContainerBase.cont_format_key_chains"]], "cont_from_disk_as_hdf5() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_from_disk_as_hdf5"], [98, "ivy.container.base.ContainerBase.cont_from_disk_as_hdf5"]], "cont_from_disk_as_json() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_from_disk_as_json"], [98, "ivy.container.base.ContainerBase.cont_from_disk_as_json"]], "cont_from_disk_as_pickled() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_from_disk_as_pickled"], [98, "ivy.container.base.ContainerBase.cont_from_disk_as_pickled"]], "cont_from_flat_list() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_from_flat_list"], [98, "ivy.container.base.ContainerBase.cont_from_flat_list"]], "cont_handle_inplace() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_handle_inplace"], [98, "ivy.container.base.ContainerBase.cont_handle_inplace"]], "cont_has_key() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_has_key"], [98, "ivy.container.base.ContainerBase.cont_has_key"]], "cont_has_key_chain() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_has_key_chain"], [98, "ivy.container.base.ContainerBase.cont_has_key_chain"]], "cont_identical() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_identical"], [98, "ivy.container.base.ContainerBase.cont_identical"]], "cont_identical_array_shapes() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_identical_array_shapes"], [98, "ivy.container.base.ContainerBase.cont_identical_array_shapes"]], "cont_identical_configs() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_identical_configs"], [98, "ivy.container.base.ContainerBase.cont_identical_configs"]], "cont_identical_structure() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_identical_structure"], [98, "ivy.container.base.ContainerBase.cont_identical_structure"]], "cont_if_exists() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_if_exists"], [98, "ivy.container.base.ContainerBase.cont_if_exists"]], "cont_inplace_update() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_inplace_update"], [98, "ivy.container.base.ContainerBase.cont_inplace_update"]], "cont_ivy (ivy.container.base.containerbase property)": [[97, "ivy.container.base.ContainerBase.cont_ivy"], [98, "ivy.container.base.ContainerBase.cont_ivy"]], "cont_key_chains_containing() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_key_chains_containing"], [98, "ivy.container.base.ContainerBase.cont_key_chains_containing"]], "cont_list_join() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_list_join"], [98, "ivy.container.base.ContainerBase.cont_list_join"]], "cont_list_stack() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_list_stack"], [98, "ivy.container.base.ContainerBase.cont_list_stack"]], "cont_map() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_map"], [98, "ivy.container.base.ContainerBase.cont_map"]], "cont_map_sub_conts() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_map_sub_conts"], [98, "ivy.container.base.ContainerBase.cont_map_sub_conts"]], "cont_max_depth (ivy.container.base.containerbase property)": [[97, "ivy.container.base.ContainerBase.cont_max_depth"], [98, "ivy.container.base.ContainerBase.cont_max_depth"]], "cont_multi_map() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_multi_map"], [98, "ivy.container.base.ContainerBase.cont_multi_map"]], "cont_multi_map_in_function() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_multi_map_in_function"], [98, "ivy.container.base.ContainerBase.cont_multi_map_in_function"]], "cont_num_arrays() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_num_arrays"], [98, "ivy.container.base.ContainerBase.cont_num_arrays"]], "cont_overwrite_at_key_chain() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chain"], [98, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chain"]], "cont_overwrite_at_key_chains() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chains"], [98, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chains"]], "cont_prune_empty() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_prune_empty"], [98, "ivy.container.base.ContainerBase.cont_prune_empty"]], "cont_prune_key_chain() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_prune_key_chain"], [98, "ivy.container.base.ContainerBase.cont_prune_key_chain"]], "cont_prune_key_chains() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_prune_key_chains"], [98, "ivy.container.base.ContainerBase.cont_prune_key_chains"]], "cont_prune_key_from_key_chains() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_prune_key_from_key_chains"], [98, "ivy.container.base.ContainerBase.cont_prune_key_from_key_chains"]], "cont_prune_keys() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_prune_keys"], [98, "ivy.container.base.ContainerBase.cont_prune_keys"]], "cont_prune_keys_from_key_chains() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_prune_keys_from_key_chains"], [98, "ivy.container.base.ContainerBase.cont_prune_keys_from_key_chains"]], "cont_reduce() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_reduce"], [98, "ivy.container.base.ContainerBase.cont_reduce"]], "cont_remove_key_length_limit() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_remove_key_length_limit"], [98, "ivy.container.base.ContainerBase.cont_remove_key_length_limit"]], "cont_remove_print_limit() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_remove_print_limit"], [98, "ivy.container.base.ContainerBase.cont_remove_print_limit"]], "cont_reshape_like() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_reshape_like"], [98, "ivy.container.base.ContainerBase.cont_reshape_like"]], "cont_restructure() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_restructure"], [98, "ivy.container.base.ContainerBase.cont_restructure"]], "cont_restructure_key_chains() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_restructure_key_chains"], [98, "ivy.container.base.ContainerBase.cont_restructure_key_chains"]], "cont_set_at_key_chain() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_set_at_key_chain"], [98, "ivy.container.base.ContainerBase.cont_set_at_key_chain"]], "cont_set_at_key_chains() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_set_at_key_chains"], [98, "ivy.container.base.ContainerBase.cont_set_at_key_chains"]], "cont_set_at_keys() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_set_at_keys"], [98, "ivy.container.base.ContainerBase.cont_set_at_keys"]], "cont_shape (ivy.container.base.containerbase property)": [[97, "ivy.container.base.ContainerBase.cont_shape"], [98, "ivy.container.base.ContainerBase.cont_shape"]], "cont_shapes (ivy.container.base.containerbase property)": [[97, "ivy.container.base.ContainerBase.cont_shapes"], [98, "ivy.container.base.ContainerBase.cont_shapes"]], "cont_show() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_show"], [98, "ivy.container.base.ContainerBase.cont_show"]], "cont_show_sub_container() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_show_sub_container"], [98, "ivy.container.base.ContainerBase.cont_show_sub_container"]], "cont_size_ordered_arrays() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_size_ordered_arrays"], [98, "ivy.container.base.ContainerBase.cont_size_ordered_arrays"]], "cont_slice_keys() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_slice_keys"], [98, "ivy.container.base.ContainerBase.cont_slice_keys"]], "cont_slice_via_key() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_slice_via_key"], [98, "ivy.container.base.ContainerBase.cont_slice_via_key"]], "cont_sort_by_key() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_sort_by_key"], [98, "ivy.container.base.ContainerBase.cont_sort_by_key"]], "cont_structural_diff() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_structural_diff"], [98, "ivy.container.base.ContainerBase.cont_structural_diff"]], "cont_to_dict() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_to_dict"], [98, "ivy.container.base.ContainerBase.cont_to_dict"]], "cont_to_disk_as_hdf5() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_to_disk_as_hdf5"], [98, "ivy.container.base.ContainerBase.cont_to_disk_as_hdf5"]], "cont_to_disk_as_json() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_to_disk_as_json"], [98, "ivy.container.base.ContainerBase.cont_to_disk_as_json"]], "cont_to_disk_as_pickled() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_to_disk_as_pickled"], [98, "ivy.container.base.ContainerBase.cont_to_disk_as_pickled"]], "cont_to_flat_list() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_to_flat_list"], [98, "ivy.container.base.ContainerBase.cont_to_flat_list"]], "cont_to_iterator() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_to_iterator"], [98, "ivy.container.base.ContainerBase.cont_to_iterator"]], "cont_to_iterator_keys() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_to_iterator_keys"], [98, "ivy.container.base.ContainerBase.cont_to_iterator_keys"]], "cont_to_iterator_values() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_to_iterator_values"], [98, "ivy.container.base.ContainerBase.cont_to_iterator_values"]], "cont_to_jsonable() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_to_jsonable"], [98, "ivy.container.base.ContainerBase.cont_to_jsonable"]], "cont_to_nested_list() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_to_nested_list"], [98, "ivy.container.base.ContainerBase.cont_to_nested_list"]], "cont_to_raw() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_to_raw"], [98, "ivy.container.base.ContainerBase.cont_to_raw"]], "cont_trim_key() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_trim_key"], [98, "ivy.container.base.ContainerBase.cont_trim_key"]], "cont_try_kc() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_try_kc"], [98, "ivy.container.base.ContainerBase.cont_try_kc"]], "cont_unify() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.cont_unify"], [98, "ivy.container.base.ContainerBase.cont_unify"]], "cont_unstack_conts() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_unstack_conts"], [98, "ivy.container.base.ContainerBase.cont_unstack_conts"]], "cont_update_config() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_update_config"], [98, "ivy.container.base.ContainerBase.cont_update_config"]], "cont_with_default_key_color() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_with_default_key_color"], [98, "ivy.container.base.ContainerBase.cont_with_default_key_color"]], "cont_with_entries_as_lists() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_with_entries_as_lists"], [98, "ivy.container.base.ContainerBase.cont_with_entries_as_lists"]], "cont_with_ivy_backend() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_with_ivy_backend"], [98, "ivy.container.base.ContainerBase.cont_with_ivy_backend"]], "cont_with_key_length_limit() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_with_key_length_limit"], [98, "ivy.container.base.ContainerBase.cont_with_key_length_limit"]], "cont_with_print_indent() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_with_print_indent"], [98, "ivy.container.base.ContainerBase.cont_with_print_indent"]], "cont_with_print_limit() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_with_print_limit"], [98, "ivy.container.base.ContainerBase.cont_with_print_limit"]], "cont_with_print_line_spacing() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.cont_with_print_line_spacing"], [98, "ivy.container.base.ContainerBase.cont_with_print_line_spacing"]], "h5_file_size() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.h5_file_size"], [98, "ivy.container.base.ContainerBase.h5_file_size"]], "ivy.container.base": [[97, "module-ivy.container.base"]], "shuffle_h5_file() (ivy.container.base.containerbase static method)": [[97, "ivy.container.base.ContainerBase.shuffle_h5_file"], [98, "ivy.container.base.ContainerBase.shuffle_h5_file"]], "split_conts() (ivy.container.base.containerbase method)": [[97, "ivy.container.base.ContainerBase.split_conts"], [98, "ivy.container.base.ContainerBase.split_conts"]], "containerwithconversions (class in ivy.container.conversions)": [[101, "ivy.container.conversions.ContainerWithConversions"], [102, "ivy.container.conversions.ContainerWithConversions"]], "ivy.container.conversions": [[101, "module-ivy.container.conversions"]], "static_to_ivy() (ivy.container.conversions.containerwithconversions static method)": [[101, "ivy.container.conversions.ContainerWithConversions.static_to_ivy"], [102, "ivy.container.conversions.ContainerWithConversions.static_to_ivy"]], "static_to_native() (ivy.container.conversions.containerwithconversions static method)": [[101, "ivy.container.conversions.ContainerWithConversions.static_to_native"], [102, "ivy.container.conversions.ContainerWithConversions.static_to_native"]], "to_ivy() (ivy.container.conversions.containerwithconversions method)": [[101, "ivy.container.conversions.ContainerWithConversions.to_ivy"], [102, "ivy.container.conversions.ContainerWithConversions.to_ivy"]], "to_native() (ivy.container.conversions.containerwithconversions method)": [[101, "ivy.container.conversions.ContainerWithConversions.to_native"], [102, "ivy.container.conversions.ContainerWithConversions.to_native"]], "containerwithcreation (class in ivy.container.creation)": [[103, "ivy.container.creation.ContainerWithCreation"], [104, "ivy.container.creation.ContainerWithCreation"]], "empty_like() (ivy.container.creation.containerwithcreation method)": [[103, "ivy.container.creation.ContainerWithCreation.empty_like"], [104, "ivy.container.creation.ContainerWithCreation.empty_like"]], "from_dlpack() (ivy.container.creation.containerwithcreation method)": [[103, "ivy.container.creation.ContainerWithCreation.from_dlpack"], [104, "ivy.container.creation.ContainerWithCreation.from_dlpack"]], "full_like() (ivy.container.creation.containerwithcreation method)": [[103, "ivy.container.creation.ContainerWithCreation.full_like"], [104, "ivy.container.creation.ContainerWithCreation.full_like"]], "ivy.container.creation": [[103, "module-ivy.container.creation"]], "linspace() (ivy.container.creation.containerwithcreation method)": [[103, "ivy.container.creation.ContainerWithCreation.linspace"], [104, "ivy.container.creation.ContainerWithCreation.linspace"]], "logspace() (ivy.container.creation.containerwithcreation method)": [[103, "ivy.container.creation.ContainerWithCreation.logspace"], [104, "ivy.container.creation.ContainerWithCreation.logspace"]], "meshgrid() (ivy.container.creation.containerwithcreation method)": [[103, "ivy.container.creation.ContainerWithCreation.meshgrid"], [104, "ivy.container.creation.ContainerWithCreation.meshgrid"]], "native_array() (ivy.container.creation.containerwithcreation method)": [[103, "ivy.container.creation.ContainerWithCreation.native_array"], [104, "ivy.container.creation.ContainerWithCreation.native_array"]], "one_hot() (ivy.container.creation.containerwithcreation method)": [[103, "ivy.container.creation.ContainerWithCreation.one_hot"], [104, "ivy.container.creation.ContainerWithCreation.one_hot"]], "ones_like() (ivy.container.creation.containerwithcreation method)": [[103, "ivy.container.creation.ContainerWithCreation.ones_like"], [104, "ivy.container.creation.ContainerWithCreation.ones_like"]], "static_arange() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_arange"], [104, "ivy.container.creation.ContainerWithCreation.static_arange"]], "static_asarray() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_asarray"], [104, "ivy.container.creation.ContainerWithCreation.static_asarray"]], "static_empty_like() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_empty_like"], [104, "ivy.container.creation.ContainerWithCreation.static_empty_like"]], "static_eye() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_eye"], [104, "ivy.container.creation.ContainerWithCreation.static_eye"]], "static_from_dlpack() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_from_dlpack"], [104, "ivy.container.creation.ContainerWithCreation.static_from_dlpack"]], "static_full_like() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_full_like"], [104, "ivy.container.creation.ContainerWithCreation.static_full_like"]], "static_linspace() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_linspace"], [104, "ivy.container.creation.ContainerWithCreation.static_linspace"]], "static_logspace() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_logspace"], [104, "ivy.container.creation.ContainerWithCreation.static_logspace"]], "static_meshgrid() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_meshgrid"], [104, "ivy.container.creation.ContainerWithCreation.static_meshgrid"]], "static_native_array() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_native_array"], [104, "ivy.container.creation.ContainerWithCreation.static_native_array"]], "static_one_hot() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_one_hot"], [104, "ivy.container.creation.ContainerWithCreation.static_one_hot"]], "static_ones() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_ones"], [104, "ivy.container.creation.ContainerWithCreation.static_ones"]], "static_ones_like() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_ones_like"], [104, "ivy.container.creation.ContainerWithCreation.static_ones_like"]], "static_tril() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_tril"], [104, "ivy.container.creation.ContainerWithCreation.static_tril"]], "static_triu() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_triu"], [104, "ivy.container.creation.ContainerWithCreation.static_triu"]], "static_zeros() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_zeros"], [104, "ivy.container.creation.ContainerWithCreation.static_zeros"]], "static_zeros_like() (ivy.container.creation.containerwithcreation static method)": [[103, "ivy.container.creation.ContainerWithCreation.static_zeros_like"], [104, "ivy.container.creation.ContainerWithCreation.static_zeros_like"]], "tril() (ivy.container.creation.containerwithcreation method)": [[103, "ivy.container.creation.ContainerWithCreation.tril"], [104, "ivy.container.creation.ContainerWithCreation.tril"]], "triu() (ivy.container.creation.containerwithcreation method)": [[103, "ivy.container.creation.ContainerWithCreation.triu"], [104, "ivy.container.creation.ContainerWithCreation.triu"]], "zeros_like() (ivy.container.creation.containerwithcreation method)": [[103, "ivy.container.creation.ContainerWithCreation.zeros_like"], [104, "ivy.container.creation.ContainerWithCreation.zeros_like"]], "containerwithdatatypes (class in ivy.container.data_type)": [[105, "ivy.container.data_type.ContainerWithDataTypes"], [106, "ivy.container.data_type.ContainerWithDataTypes"]], "astype() (ivy.container.data_type.containerwithdatatypes method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.astype"], [106, "ivy.container.data_type.ContainerWithDataTypes.astype"]], "broadcast_arrays() (ivy.container.data_type.containerwithdatatypes method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.broadcast_arrays"], [106, "ivy.container.data_type.ContainerWithDataTypes.broadcast_arrays"]], "broadcast_to() (ivy.container.data_type.containerwithdatatypes method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.broadcast_to"], [106, "ivy.container.data_type.ContainerWithDataTypes.broadcast_to"]], "can_cast() (ivy.container.data_type.containerwithdatatypes method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.can_cast"], [106, "ivy.container.data_type.ContainerWithDataTypes.can_cast"]], "dtype() (ivy.container.data_type.containerwithdatatypes method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.dtype"], [106, "ivy.container.data_type.ContainerWithDataTypes.dtype"]], "finfo() (ivy.container.data_type.containerwithdatatypes method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.finfo"], [106, "ivy.container.data_type.ContainerWithDataTypes.finfo"]], "iinfo() (ivy.container.data_type.containerwithdatatypes method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.iinfo"], [106, "ivy.container.data_type.ContainerWithDataTypes.iinfo"]], "is_bool_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.is_bool_dtype"], [106, "ivy.container.data_type.ContainerWithDataTypes.is_bool_dtype"]], "is_float_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.is_float_dtype"], [106, "ivy.container.data_type.ContainerWithDataTypes.is_float_dtype"]], "is_int_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.is_int_dtype"], [106, "ivy.container.data_type.ContainerWithDataTypes.is_int_dtype"]], "is_uint_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.is_uint_dtype"], [106, "ivy.container.data_type.ContainerWithDataTypes.is_uint_dtype"]], "ivy.container.data_type": [[105, "module-ivy.container.data_type"]], "result_type() (ivy.container.data_type.containerwithdatatypes method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.result_type"], [106, "ivy.container.data_type.ContainerWithDataTypes.result_type"]], "static_astype() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_astype"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_astype"]], "static_broadcast_arrays() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_arrays"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_arrays"]], "static_broadcast_to() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_to"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_to"]], "static_can_cast() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_can_cast"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_can_cast"]], "static_default_float_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_default_float_dtype"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_default_float_dtype"]], "static_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_dtype"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_dtype"]], "static_finfo() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_finfo"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_finfo"]], "static_function_supported_dtypes() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_function_supported_dtypes"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_function_supported_dtypes"]], "static_function_unsupported_dtypes() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_function_unsupported_dtypes"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_function_unsupported_dtypes"]], "static_iinfo() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_iinfo"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_iinfo"]], "static_is_bool_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_is_bool_dtype"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_is_bool_dtype"]], "static_is_float_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_is_float_dtype"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_is_float_dtype"]], "static_is_int_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_is_int_dtype"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_is_int_dtype"]], "static_is_uint_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_is_uint_dtype"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_is_uint_dtype"]], "static_result_type() (ivy.container.data_type.containerwithdatatypes static method)": [[105, "ivy.container.data_type.ContainerWithDataTypes.static_result_type"], [106, "ivy.container.data_type.ContainerWithDataTypes.static_result_type"]], "containerwithdevice (class in ivy.container.device)": [[107, "ivy.container.device.ContainerWithDevice"], [108, "ivy.container.device.ContainerWithDevice"]], "dev() (ivy.container.device.containerwithdevice method)": [[107, "ivy.container.device.ContainerWithDevice.dev"], [108, "ivy.container.device.ContainerWithDevice.dev"]], "ivy.container.device": [[107, "module-ivy.container.device"]], "static_dev() (ivy.container.device.containerwithdevice static method)": [[107, "ivy.container.device.ContainerWithDevice.static_dev"], [108, "ivy.container.device.ContainerWithDevice.static_dev"]], "static_to_device() (ivy.container.device.containerwithdevice static method)": [[107, "ivy.container.device.ContainerWithDevice.static_to_device"], [108, "ivy.container.device.ContainerWithDevice.static_to_device"]], "to_device() (ivy.container.device.containerwithdevice method)": [[107, "ivy.container.device.ContainerWithDevice.to_device"], [108, "ivy.container.device.ContainerWithDevice.to_device"]], "containerwithelementwise (class in ivy.container.elementwise)": [[109, "ivy.container.elementwise.ContainerWithElementwise"], [110, "ivy.container.elementwise.ContainerWithElementwise"]], "abs() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.abs"], [110, "ivy.container.elementwise.ContainerWithElementwise.abs"]], "acos() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.acos"], [110, "ivy.container.elementwise.ContainerWithElementwise.acos"]], "acosh() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.acosh"], [110, "ivy.container.elementwise.ContainerWithElementwise.acosh"]], "add() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.add"], [110, "ivy.container.elementwise.ContainerWithElementwise.add"]], "asin() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.asin"], [110, "ivy.container.elementwise.ContainerWithElementwise.asin"]], "asinh() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.asinh"], [110, "ivy.container.elementwise.ContainerWithElementwise.asinh"]], "atan() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.atan"], [110, "ivy.container.elementwise.ContainerWithElementwise.atan"]], "atan2() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.atan2"], [110, "ivy.container.elementwise.ContainerWithElementwise.atan2"]], "atanh() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.atanh"], [110, "ivy.container.elementwise.ContainerWithElementwise.atanh"]], "bitwise_and() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.bitwise_and"], [110, "ivy.container.elementwise.ContainerWithElementwise.bitwise_and"]], "bitwise_invert() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.bitwise_invert"], [110, "ivy.container.elementwise.ContainerWithElementwise.bitwise_invert"]], "bitwise_left_shift() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.bitwise_left_shift"], [110, "ivy.container.elementwise.ContainerWithElementwise.bitwise_left_shift"]], "bitwise_or() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.bitwise_or"], [110, "ivy.container.elementwise.ContainerWithElementwise.bitwise_or"]], "bitwise_right_shift() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.bitwise_right_shift"], [110, "ivy.container.elementwise.ContainerWithElementwise.bitwise_right_shift"]], "bitwise_xor() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.bitwise_xor"], [110, "ivy.container.elementwise.ContainerWithElementwise.bitwise_xor"]], "ceil() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.ceil"], [110, "ivy.container.elementwise.ContainerWithElementwise.ceil"]], "cos() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.cos"], [110, "ivy.container.elementwise.ContainerWithElementwise.cos"]], "cosh() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.cosh"], [110, "ivy.container.elementwise.ContainerWithElementwise.cosh"]], "deg2rad() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.deg2rad"], [110, "ivy.container.elementwise.ContainerWithElementwise.deg2rad"]], "divide() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.divide"], [110, "ivy.container.elementwise.ContainerWithElementwise.divide"]], "equal() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.equal"], [110, "ivy.container.elementwise.ContainerWithElementwise.equal"]], "erf() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.erf"], [110, "ivy.container.elementwise.ContainerWithElementwise.erf"]], "exp() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.exp"], [110, "ivy.container.elementwise.ContainerWithElementwise.exp"]], "expm1() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.expm1"], [110, "ivy.container.elementwise.ContainerWithElementwise.expm1"]], "floor() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.floor"], [110, "ivy.container.elementwise.ContainerWithElementwise.floor"]], "floor_divide() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.floor_divide"], [110, "ivy.container.elementwise.ContainerWithElementwise.floor_divide"]], "greater() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.greater"], [110, "ivy.container.elementwise.ContainerWithElementwise.greater"]], "greater_equal() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.greater_equal"], [110, "ivy.container.elementwise.ContainerWithElementwise.greater_equal"]], "isfinite() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.isfinite"], [110, "ivy.container.elementwise.ContainerWithElementwise.isfinite"]], "isinf() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.isinf"], [110, "ivy.container.elementwise.ContainerWithElementwise.isinf"]], "isnan() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.isnan"], [110, "ivy.container.elementwise.ContainerWithElementwise.isnan"]], "isreal() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.isreal"], [110, "ivy.container.elementwise.ContainerWithElementwise.isreal"]], "ivy.container.elementwise": [[109, "module-ivy.container.elementwise"]], "less() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.less"], [110, "ivy.container.elementwise.ContainerWithElementwise.less"]], "less_equal() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.less_equal"], [110, "ivy.container.elementwise.ContainerWithElementwise.less_equal"]], "log() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.log"], [110, "ivy.container.elementwise.ContainerWithElementwise.log"]], "log10() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.log10"], [110, "ivy.container.elementwise.ContainerWithElementwise.log10"]], "log1p() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.log1p"], [110, "ivy.container.elementwise.ContainerWithElementwise.log1p"]], "log2() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.log2"], [110, "ivy.container.elementwise.ContainerWithElementwise.log2"]], "logaddexp() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.logaddexp"], [110, "ivy.container.elementwise.ContainerWithElementwise.logaddexp"]], "logical_and() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.logical_and"], [110, "ivy.container.elementwise.ContainerWithElementwise.logical_and"]], "logical_not() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.logical_not"], [110, "ivy.container.elementwise.ContainerWithElementwise.logical_not"]], "logical_or() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.logical_or"], [110, "ivy.container.elementwise.ContainerWithElementwise.logical_or"]], "logical_xor() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.logical_xor"], [110, "ivy.container.elementwise.ContainerWithElementwise.logical_xor"]], "maximum() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.maximum"], [110, "ivy.container.elementwise.ContainerWithElementwise.maximum"]], "minimum() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.minimum"], [110, "ivy.container.elementwise.ContainerWithElementwise.minimum"]], "multiply() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.multiply"], [110, "ivy.container.elementwise.ContainerWithElementwise.multiply"]], "negative() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.negative"], [110, "ivy.container.elementwise.ContainerWithElementwise.negative"]], "not_equal() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.not_equal"], [110, "ivy.container.elementwise.ContainerWithElementwise.not_equal"]], "positive() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.positive"], [110, "ivy.container.elementwise.ContainerWithElementwise.positive"]], "pow() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.pow"], [110, "ivy.container.elementwise.ContainerWithElementwise.pow"]], "rad2deg() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.rad2deg"], [110, "ivy.container.elementwise.ContainerWithElementwise.rad2deg"]], "reciprocal() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.reciprocal"], [110, "ivy.container.elementwise.ContainerWithElementwise.reciprocal"]], "remainder() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.remainder"], [110, "ivy.container.elementwise.ContainerWithElementwise.remainder"]], "round() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.round"], [110, "ivy.container.elementwise.ContainerWithElementwise.round"]], "sign() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.sign"], [110, "ivy.container.elementwise.ContainerWithElementwise.sign"]], "sin() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.sin"], [110, "ivy.container.elementwise.ContainerWithElementwise.sin"]], "sinh() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.sinh"], [110, "ivy.container.elementwise.ContainerWithElementwise.sinh"]], "sqrt() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.sqrt"], [110, "ivy.container.elementwise.ContainerWithElementwise.sqrt"]], "square() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.square"], [110, "ivy.container.elementwise.ContainerWithElementwise.square"]], "static_abs() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_abs"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_abs"]], "static_acos() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_acos"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_acos"]], "static_acosh() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_acosh"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_acosh"]], "static_add() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_add"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_add"]], "static_asin() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_asin"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_asin"]], "static_asinh() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_asinh"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_asinh"]], "static_atan() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_atan"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_atan"]], "static_atan2() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_atan2"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_atan2"]], "static_atanh() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_atanh"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_atanh"]], "static_bitwise_and() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_and"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_and"]], "static_bitwise_invert() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_invert"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_invert"]], "static_bitwise_left_shift() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_left_shift"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_left_shift"]], "static_bitwise_or() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_or"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_or"]], "static_bitwise_right_shift() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_right_shift"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_right_shift"]], "static_bitwise_xor() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_xor"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_xor"]], "static_ceil() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_ceil"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_ceil"]], "static_cos() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_cos"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_cos"]], "static_cosh() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_cosh"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_cosh"]], "static_deg2rad() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_deg2rad"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_deg2rad"]], "static_divide() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_divide"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_divide"]], "static_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_equal"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_equal"]], "static_erf() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_erf"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_erf"]], "static_exp() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_exp"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_exp"]], "static_expm1() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_expm1"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_expm1"]], "static_floor() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_floor"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_floor"]], "static_floor_divide() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_floor_divide"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_floor_divide"]], "static_greater() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_greater"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_greater"]], "static_greater_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_greater_equal"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_greater_equal"]], "static_isfinite() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_isfinite"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_isfinite"]], "static_isinf() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_isinf"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_isinf"]], "static_isnan() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_isnan"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_isnan"]], "static_isreal() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_isreal"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_isreal"]], "static_less() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_less"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_less"]], "static_less_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_less_equal"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_less_equal"]], "static_log() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_log"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_log"]], "static_log10() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_log10"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_log10"]], "static_log1p() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_log1p"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_log1p"]], "static_log2() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_log2"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_log2"]], "static_logaddexp() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_logaddexp"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_logaddexp"]], "static_logical_and() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_logical_and"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_logical_and"]], "static_logical_not() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_logical_not"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_logical_not"]], "static_logical_or() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_logical_or"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_logical_or"]], "static_logical_xor() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_logical_xor"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_logical_xor"]], "static_maximum() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_maximum"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_maximum"]], "static_minimum() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_minimum"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_minimum"]], "static_multiply() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_multiply"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_multiply"]], "static_negative() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_negative"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_negative"]], "static_not_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_not_equal"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_not_equal"]], "static_positive() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_positive"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_positive"]], "static_pow() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_pow"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_pow"]], "static_rad2deg() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_rad2deg"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_rad2deg"]], "static_reciprocal() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_reciprocal"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_reciprocal"]], "static_remainder() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_remainder"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_remainder"]], "static_round() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_round"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_round"]], "static_sign() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_sign"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_sign"]], "static_sin() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_sin"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_sin"]], "static_sinh() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_sinh"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_sinh"]], "static_sqrt() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_sqrt"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_sqrt"]], "static_square() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_square"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_square"]], "static_subtract() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_subtract"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_subtract"]], "static_tan() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_tan"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_tan"]], "static_tanh() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_tanh"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_tanh"]], "static_trapz() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_trapz"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_trapz"]], "static_trunc() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_trunc"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_trunc"]], "static_trunc_divide() (ivy.container.elementwise.containerwithelementwise static method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.static_trunc_divide"], [110, "ivy.container.elementwise.ContainerWithElementwise.static_trunc_divide"]], "subtract() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.subtract"], [110, "ivy.container.elementwise.ContainerWithElementwise.subtract"]], "tan() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.tan"], [110, "ivy.container.elementwise.ContainerWithElementwise.tan"]], "tanh() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.tanh"], [110, "ivy.container.elementwise.ContainerWithElementwise.tanh"]], "trapz() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.trapz"], [110, "ivy.container.elementwise.ContainerWithElementwise.trapz"]], "trunc() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.trunc"], [110, "ivy.container.elementwise.ContainerWithElementwise.trunc"]], "trunc_divide() (ivy.container.elementwise.containerwithelementwise method)": [[109, "ivy.container.elementwise.ContainerWithElementwise.trunc_divide"], [110, "ivy.container.elementwise.ContainerWithElementwise.trunc_divide"]], "containerwithactivationexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithActivationExperimental"]], "containerwithconversionexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithConversionExperimental"]], "containerwithcreationexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental"]], "containerwithdata_typeexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithData_typeExperimental"]], "containerwithdeviceexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithDeviceExperimental"]], "containerwithelementwiseexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental"]], "containerwithgeneralexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithGeneralExperimental"]], "containerwithgradientsexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithGradientsExperimental"]], "containerwithimageexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithImageExperimental"]], "containerwithlayersexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental"]], "containerwithlinearalgebraexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental"]], "containerwithlossesexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithLossesExperimental"]], "containerwithmanipulationexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental"]], "containerwithnormsexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithNormsExperimental"]], "containerwithrandomexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithRandomExperimental"]], "containerwithsearchingexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithSearchingExperimental"]], "containerwithsetexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithSetExperimental"]], "containerwithsortingexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithSortingExperimental"]], "containerwithstatisticalexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithStatisticalExperimental"]], "containerwithutilityexperimental (class in ivy.container.experimental)": [[111, "ivy.container.experimental.ContainerWithUtilityExperimental"]], "allclose() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.allclose"]], "angle() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.angle"]], "atleast_1d() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.atleast_1d"]], "atleast_2d() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.atleast_2d"]], "atleast_3d() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.atleast_3d"]], "avg_pool1d() (ivy.container.experimental.containerwithlayersexperimental method)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental.avg_pool1d"]], "avg_pool2d() (ivy.container.experimental.containerwithlayersexperimental method)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental.avg_pool2d"]], "avg_pool3d() (ivy.container.experimental.containerwithlayersexperimental method)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental.avg_pool3d"]], "beta() (ivy.container.experimental.containerwithrandomexperimental method)": [[111, "ivy.container.experimental.ContainerWithRandomExperimental.beta"]], "binary_cross_entropy_with_logits() (ivy.container.experimental.containerwithlossesexperimental method)": [[111, "ivy.container.experimental.ContainerWithLossesExperimental.binary_cross_entropy_with_logits"]], "broadcast_shapes() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.broadcast_shapes"]], "copysign() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.copysign"]], "count_nonzero() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.count_nonzero"]], "dct() (ivy.container.experimental.containerwithlayersexperimental method)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental.dct"]], "diagflat() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[111, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.diagflat"]], "diff() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.diff"]], "dirichlet() (ivy.container.experimental.containerwithrandomexperimental method)": [[111, "ivy.container.experimental.ContainerWithRandomExperimental.dirichlet"]], "dsplit() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.dsplit"]], "dstack() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.dstack"]], "eig() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[111, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.eig"]], "exp2() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.exp2"]], "fix() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.fix"]], "flatten() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.flatten"]], "fliplr() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.fliplr"]], "flipud() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.flipud"]], "float_power() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.float_power"]], "fmax() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.fmax"]], "fmod() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.fmod"]], "gcd() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.gcd"]], "gradient() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.gradient"]], "hamming_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental.hamming_window"]], "hann_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental.hann_window"]], "heaviside() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.heaviside"]], "hsplit() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.hsplit"]], "hstack() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.hstack"]], "i0() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.i0"]], "isclose() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.isclose"]], "isin() (ivy.container.experimental.containerwithgeneralexperimental method)": [[111, "ivy.container.experimental.ContainerWithGeneralExperimental.isin"]], "isneginf() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.isneginf"]], "isposinf() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.isposinf"]], "kaiser_bessel_derived_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental.kaiser_bessel_derived_window"]], "kaiser_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental.kaiser_window"]], "kron() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[111, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.kron"]], "lcm() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.lcm"]], "logaddexp2() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.logaddexp2"]], "logit() (ivy.container.experimental.containerwithactivationexperimental method)": [[111, "ivy.container.experimental.ContainerWithActivationExperimental.logit"]], "matrix_exp() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[111, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.matrix_exp"]], "max_pool1d() (ivy.container.experimental.containerwithlayersexperimental method)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental.max_pool1d"]], "max_pool2d() (ivy.container.experimental.containerwithlayersexperimental method)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental.max_pool2d"]], "max_pool3d() (ivy.container.experimental.containerwithlayersexperimental method)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental.max_pool3d"]], "median() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[111, "ivy.container.experimental.ContainerWithStatisticalExperimental.median"]], "moveaxis() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.moveaxis"]], "msort() (ivy.container.experimental.containerwithsortingexperimental method)": [[111, "ivy.container.experimental.ContainerWithSortingExperimental.msort"]], "multi_dot() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[111, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.multi_dot"]], "nan_to_num() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.nan_to_num"]], "nanmean() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[111, "ivy.container.experimental.ContainerWithStatisticalExperimental.nanmean"]], "nansum() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.nansum"]], "nextafter() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.nextafter"]], "pad() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.pad"]], "quantile() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[111, "ivy.container.experimental.ContainerWithStatisticalExperimental.quantile"]], "rot90() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.rot90"]], "signbit() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.signbit"]], "sinc() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.sinc"]], "static_allclose() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_allclose"]], "static_angle() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_angle"]], "static_atleast_1d() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_atleast_1d"]], "static_atleast_2d() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_atleast_2d"]], "static_atleast_3d() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_atleast_3d"]], "static_avg_pool1d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental.static_avg_pool1d"]], "static_avg_pool2d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental.static_avg_pool2d"]], "static_avg_pool3d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental.static_avg_pool3d"]], "static_beta() (ivy.container.experimental.containerwithrandomexperimental static method)": [[111, "ivy.container.experimental.ContainerWithRandomExperimental.static_beta"]], "static_binary_cross_entropy_with_logits() (ivy.container.experimental.containerwithlossesexperimental static method)": [[111, "ivy.container.experimental.ContainerWithLossesExperimental.static_binary_cross_entropy_with_logits"]], "static_broadcast_shapes() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_broadcast_shapes"]], "static_copysign() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_copysign"]], "static_count_nonzero() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_count_nonzero"]], "static_dct() (ivy.container.experimental.containerwithlayersexperimental static method)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental.static_dct"]], "static_diagflat() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[111, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_diagflat"]], "static_diff() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_diff"]], "static_dirichlet() (ivy.container.experimental.containerwithrandomexperimental static method)": [[111, "ivy.container.experimental.ContainerWithRandomExperimental.static_dirichlet"]], "static_dsplit() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_dsplit"]], "static_dstack() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_dstack"]], "static_eig() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[111, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_eig"]], "static_exp2() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_exp2"]], "static_fix() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fix"]], "static_flatten() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_flatten"]], "static_fliplr() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_fliplr"]], "static_flipud() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_flipud"]], "static_float_power() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_float_power"]], "static_fmax() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fmax"]], "static_fmod() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fmod"]], "static_gcd() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_gcd"]], "static_gradient() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_gradient"]], "static_hamming_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental.static_hamming_window"]], "static_hann_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental.static_hann_window"]], "static_heaviside() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_heaviside"]], "static_hsplit() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_hsplit"]], "static_hstack() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_hstack"]], "static_i0() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_i0"]], "static_isclose() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_isclose"]], "static_isin() (ivy.container.experimental.containerwithgeneralexperimental static method)": [[111, "ivy.container.experimental.ContainerWithGeneralExperimental.static_isin"]], "static_isneginf() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_isneginf"]], "static_isposinf() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_isposinf"]], "static_kaiser_bessel_derived_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental.static_kaiser_bessel_derived_window"]], "static_kaiser_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental.static_kaiser_window"]], "static_kron() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[111, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_kron"]], "static_lcm() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_lcm"]], "static_logaddexp2() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_logaddexp2"]], "static_logit() (ivy.container.experimental.containerwithactivationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithActivationExperimental.static_logit"]], "static_matrix_exp() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[111, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_matrix_exp"]], "static_max_pool1d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental.static_max_pool1d"]], "static_max_pool2d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental.static_max_pool2d"]], "static_max_pool3d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[111, "ivy.container.experimental.ContainerWithLayersExperimental.static_max_pool3d"]], "static_median() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[111, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_median"]], "static_moveaxis() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_moveaxis"]], "static_msort() (ivy.container.experimental.containerwithsortingexperimental static method)": [[111, "ivy.container.experimental.ContainerWithSortingExperimental.static_msort"]], "static_multi_dot() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[111, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_multi_dot"]], "static_nan_to_num() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_nan_to_num"]], "static_nanmean() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[111, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_nanmean"]], "static_nansum() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_nansum"]], "static_nextafter() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_nextafter"]], "static_pad() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_pad"]], "static_quantile() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[111, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_quantile"]], "static_rot90() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_rot90"]], "static_signbit() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_signbit"]], "static_sinc() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_sinc"]], "static_take_along_axis() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_take_along_axis"]], "static_top_k() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_top_k"]], "static_tril_indices() (ivy.container.experimental.containerwithcreationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental.static_tril_indices"]], "static_triu_indices() (ivy.container.experimental.containerwithcreationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental.static_triu_indices"]], "static_unravel_index() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[111, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_unravel_index"]], "static_vorbis_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental.static_vorbis_window"]], "static_vsplit() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_vsplit"]], "static_vstack() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.static_vstack"]], "static_xlogy() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_xlogy"]], "static_zeta() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_zeta"]], "take_along_axis() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.take_along_axis"]], "top_k() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.top_k"]], "tril_indices() (ivy.container.experimental.containerwithcreationexperimental method)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental.tril_indices"]], "triu_indices() (ivy.container.experimental.containerwithcreationexperimental method)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental.triu_indices"]], "unravel_index() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[111, "ivy.container.experimental.ContainerWithStatisticalExperimental.unravel_index"]], "vorbis_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[111, "ivy.container.experimental.ContainerWithCreationExperimental.vorbis_window"]], "vsplit() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.vsplit"]], "vstack() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[111, "ivy.container.experimental.ContainerWithManipulationExperimental.vstack"]], "xlogy() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.xlogy"]], "zeta() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[111, "ivy.container.experimental.ContainerWithElementWiseExperimental.zeta"]], "containerwithgeneral (class in ivy.container.general)": [[112, "ivy.container.general.ContainerWithGeneral"], [113, "ivy.container.general.ContainerWithGeneral"]], "all_equal() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.all_equal"], [113, "ivy.container.general.ContainerWithGeneral.all_equal"]], "assert_supports_inplace() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.assert_supports_inplace"], [113, "ivy.container.general.ContainerWithGeneral.assert_supports_inplace"]], "clip_matrix_norm() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.clip_matrix_norm"], [113, "ivy.container.general.ContainerWithGeneral.clip_matrix_norm"]], "clip_vector_norm() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.clip_vector_norm"], [113, "ivy.container.general.ContainerWithGeneral.clip_vector_norm"]], "einops_rearrange() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.einops_rearrange"], [113, "ivy.container.general.ContainerWithGeneral.einops_rearrange"]], "einops_reduce() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.einops_reduce"], [113, "ivy.container.general.ContainerWithGeneral.einops_reduce"]], "einops_repeat() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.einops_repeat"], [113, "ivy.container.general.ContainerWithGeneral.einops_repeat"]], "fourier_encode() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.fourier_encode"], [113, "ivy.container.general.ContainerWithGeneral.fourier_encode"]], "gather() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.gather"], [113, "ivy.container.general.ContainerWithGeneral.gather"]], "gather_nd() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.gather_nd"], [113, "ivy.container.general.ContainerWithGeneral.gather_nd"]], "get_num_dims() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.get_num_dims"], [113, "ivy.container.general.ContainerWithGeneral.get_num_dims"]], "has_nans() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.has_nans"], [113, "ivy.container.general.ContainerWithGeneral.has_nans"]], "inplace_decrement() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.inplace_decrement"], [113, "ivy.container.general.ContainerWithGeneral.inplace_decrement"]], "inplace_increment() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.inplace_increment"], [113, "ivy.container.general.ContainerWithGeneral.inplace_increment"]], "inplace_update() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.inplace_update"], [113, "ivy.container.general.ContainerWithGeneral.inplace_update"]], "is_array() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.is_array"], [113, "ivy.container.general.ContainerWithGeneral.is_array"]], "is_ivy_array() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.is_ivy_array"], [113, "ivy.container.general.ContainerWithGeneral.is_ivy_array"]], "is_native_array() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.is_native_array"], [113, "ivy.container.general.ContainerWithGeneral.is_native_array"]], "ivy.container.general": [[112, "module-ivy.container.general"]], "scatter_flat() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.scatter_flat"], [113, "ivy.container.general.ContainerWithGeneral.scatter_flat"]], "scatter_nd() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.scatter_nd"], [113, "ivy.container.general.ContainerWithGeneral.scatter_nd"]], "stable_divide() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.stable_divide"], [113, "ivy.container.general.ContainerWithGeneral.stable_divide"]], "stable_pow() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.stable_pow"], [113, "ivy.container.general.ContainerWithGeneral.stable_pow"]], "static_all_equal() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_all_equal"], [113, "ivy.container.general.ContainerWithGeneral.static_all_equal"]], "static_assert_supports_inplace() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_assert_supports_inplace"], [113, "ivy.container.general.ContainerWithGeneral.static_assert_supports_inplace"]], "static_clip_matrix_norm() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_clip_matrix_norm"], [113, "ivy.container.general.ContainerWithGeneral.static_clip_matrix_norm"]], "static_clip_vector_norm() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_clip_vector_norm"], [113, "ivy.container.general.ContainerWithGeneral.static_clip_vector_norm"]], "static_einops_rearrange() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_einops_rearrange"], [113, "ivy.container.general.ContainerWithGeneral.static_einops_rearrange"]], "static_einops_reduce() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_einops_reduce"], [113, "ivy.container.general.ContainerWithGeneral.static_einops_reduce"]], "static_einops_repeat() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_einops_repeat"], [113, "ivy.container.general.ContainerWithGeneral.static_einops_repeat"]], "static_fourier_encode() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_fourier_encode"], [113, "ivy.container.general.ContainerWithGeneral.static_fourier_encode"]], "static_gather() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_gather"], [113, "ivy.container.general.ContainerWithGeneral.static_gather"]], "static_gather_nd() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_gather_nd"], [113, "ivy.container.general.ContainerWithGeneral.static_gather_nd"]], "static_get_num_dims() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_get_num_dims"], [113, "ivy.container.general.ContainerWithGeneral.static_get_num_dims"]], "static_has_nans() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_has_nans"], [113, "ivy.container.general.ContainerWithGeneral.static_has_nans"]], "static_inplace_decrement() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_inplace_decrement"], [113, "ivy.container.general.ContainerWithGeneral.static_inplace_decrement"]], "static_inplace_increment() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_inplace_increment"], [113, "ivy.container.general.ContainerWithGeneral.static_inplace_increment"]], "static_inplace_update() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_inplace_update"], [113, "ivy.container.general.ContainerWithGeneral.static_inplace_update"]], "static_is_array() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_is_array"], [113, "ivy.container.general.ContainerWithGeneral.static_is_array"]], "static_is_ivy_array() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_is_ivy_array"], [113, "ivy.container.general.ContainerWithGeneral.static_is_ivy_array"]], "static_is_native_array() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_is_native_array"], [113, "ivy.container.general.ContainerWithGeneral.static_is_native_array"]], "static_scatter_flat() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_scatter_flat"], [113, "ivy.container.general.ContainerWithGeneral.static_scatter_flat"]], "static_scatter_nd() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_scatter_nd"], [113, "ivy.container.general.ContainerWithGeneral.static_scatter_nd"]], "static_stable_divide() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_stable_divide"], [113, "ivy.container.general.ContainerWithGeneral.static_stable_divide"]], "static_stable_pow() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_stable_pow"], [113, "ivy.container.general.ContainerWithGeneral.static_stable_pow"]], "static_supports_inplace_updates() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_supports_inplace_updates"], [113, "ivy.container.general.ContainerWithGeneral.static_supports_inplace_updates"]], "static_to_list() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_to_list"], [113, "ivy.container.general.ContainerWithGeneral.static_to_list"]], "static_to_numpy() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_to_numpy"], [113, "ivy.container.general.ContainerWithGeneral.static_to_numpy"]], "static_to_scalar() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_to_scalar"], [113, "ivy.container.general.ContainerWithGeneral.static_to_scalar"]], "static_value_is_nan() (ivy.container.general.containerwithgeneral static method)": [[112, "ivy.container.general.ContainerWithGeneral.static_value_is_nan"], [113, "ivy.container.general.ContainerWithGeneral.static_value_is_nan"]], "supports_inplace_updates() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.supports_inplace_updates"], [113, "ivy.container.general.ContainerWithGeneral.supports_inplace_updates"]], "to_list() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.to_list"], [113, "ivy.container.general.ContainerWithGeneral.to_list"]], "to_numpy() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.to_numpy"], [113, "ivy.container.general.ContainerWithGeneral.to_numpy"]], "to_scalar() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.to_scalar"], [113, "ivy.container.general.ContainerWithGeneral.to_scalar"]], "value_is_nan() (ivy.container.general.containerwithgeneral method)": [[112, "ivy.container.general.ContainerWithGeneral.value_is_nan"], [113, "ivy.container.general.ContainerWithGeneral.value_is_nan"]], "containerwithgradients (class in ivy.container.gradients)": [[114, "ivy.container.gradients.ContainerWithGradients"], [115, "ivy.container.gradients.ContainerWithGradients"]], "adam_step() (ivy.container.gradients.containerwithgradients method)": [[114, "ivy.container.gradients.ContainerWithGradients.adam_step"], [115, "ivy.container.gradients.ContainerWithGradients.adam_step"]], "adam_update() (ivy.container.gradients.containerwithgradients method)": [[114, "ivy.container.gradients.ContainerWithGradients.adam_update"], [115, "ivy.container.gradients.ContainerWithGradients.adam_update"]], "gradient_descent_update() (ivy.container.gradients.containerwithgradients method)": [[114, "ivy.container.gradients.ContainerWithGradients.gradient_descent_update"], [115, "ivy.container.gradients.ContainerWithGradients.gradient_descent_update"]], "ivy.container.gradients": [[114, "module-ivy.container.gradients"]], "lamb_update() (ivy.container.gradients.containerwithgradients method)": [[114, "ivy.container.gradients.ContainerWithGradients.lamb_update"], [115, "ivy.container.gradients.ContainerWithGradients.lamb_update"]], "lars_update() (ivy.container.gradients.containerwithgradients method)": [[114, "ivy.container.gradients.ContainerWithGradients.lars_update"], [115, "ivy.container.gradients.ContainerWithGradients.lars_update"]], "optimizer_update() (ivy.container.gradients.containerwithgradients method)": [[114, "ivy.container.gradients.ContainerWithGradients.optimizer_update"], [115, "ivy.container.gradients.ContainerWithGradients.optimizer_update"]], "static_stop_gradient() (ivy.container.gradients.containerwithgradients static method)": [[114, "ivy.container.gradients.ContainerWithGradients.static_stop_gradient"], [115, "ivy.container.gradients.ContainerWithGradients.static_stop_gradient"]], "stop_gradient() (ivy.container.gradients.containerwithgradients method)": [[114, "ivy.container.gradients.ContainerWithGradients.stop_gradient"], [115, "ivy.container.gradients.ContainerWithGradients.stop_gradient"]], "containerwithimage (class in ivy.container.image)": [[116, "ivy.container.image.ContainerWithImage"], [117, "ivy.container.image.ContainerWithImage"]], "ivy.container.image": [[116, "module-ivy.container.image"]], "containerwithlayers (class in ivy.container.layers)": [[118, "ivy.container.layers.ContainerWithLayers"], [119, "ivy.container.layers.ContainerWithLayers"]], "conv1d() (ivy.container.layers.containerwithlayers method)": [[118, "ivy.container.layers.ContainerWithLayers.conv1d"], [119, "ivy.container.layers.ContainerWithLayers.conv1d"]], "conv1d_transpose() (ivy.container.layers.containerwithlayers method)": [[118, "ivy.container.layers.ContainerWithLayers.conv1d_transpose"], [119, "ivy.container.layers.ContainerWithLayers.conv1d_transpose"]], "conv2d() (ivy.container.layers.containerwithlayers method)": [[118, "ivy.container.layers.ContainerWithLayers.conv2d"], [119, "ivy.container.layers.ContainerWithLayers.conv2d"]], "conv2d_transpose() (ivy.container.layers.containerwithlayers method)": [[118, "ivy.container.layers.ContainerWithLayers.conv2d_transpose"], [119, "ivy.container.layers.ContainerWithLayers.conv2d_transpose"]], "conv3d() (ivy.container.layers.containerwithlayers method)": [[118, "ivy.container.layers.ContainerWithLayers.conv3d"], [119, "ivy.container.layers.ContainerWithLayers.conv3d"]], "conv3d_transpose() (ivy.container.layers.containerwithlayers method)": [[118, "ivy.container.layers.ContainerWithLayers.conv3d_transpose"], [119, "ivy.container.layers.ContainerWithLayers.conv3d_transpose"]], "depthwise_conv2d() (ivy.container.layers.containerwithlayers method)": [[118, "ivy.container.layers.ContainerWithLayers.depthwise_conv2d"], [119, "ivy.container.layers.ContainerWithLayers.depthwise_conv2d"]], "dropout() (ivy.container.layers.containerwithlayers method)": [[118, "ivy.container.layers.ContainerWithLayers.dropout"], [119, "ivy.container.layers.ContainerWithLayers.dropout"]], "dropout1d() (ivy.container.layers.containerwithlayers method)": [[118, "ivy.container.layers.ContainerWithLayers.dropout1d"], [119, "ivy.container.layers.ContainerWithLayers.dropout1d"]], "ivy.container.layers": [[118, "module-ivy.container.layers"]], "linear() (ivy.container.layers.containerwithlayers method)": [[118, "ivy.container.layers.ContainerWithLayers.linear"], [119, "ivy.container.layers.ContainerWithLayers.linear"]], "lstm_update() (ivy.container.layers.containerwithlayers method)": [[118, "ivy.container.layers.ContainerWithLayers.lstm_update"], [119, "ivy.container.layers.ContainerWithLayers.lstm_update"]], "multi_head_attention() (ivy.container.layers.containerwithlayers method)": [[118, "ivy.container.layers.ContainerWithLayers.multi_head_attention"], [119, "ivy.container.layers.ContainerWithLayers.multi_head_attention"]], "scaled_dot_product_attention() (ivy.container.layers.containerwithlayers method)": [[118, "ivy.container.layers.ContainerWithLayers.scaled_dot_product_attention"], [119, "ivy.container.layers.ContainerWithLayers.scaled_dot_product_attention"]], "static_conv1d() (ivy.container.layers.containerwithlayers static method)": [[118, "ivy.container.layers.ContainerWithLayers.static_conv1d"], [119, "ivy.container.layers.ContainerWithLayers.static_conv1d"]], "static_conv1d_transpose() (ivy.container.layers.containerwithlayers static method)": [[118, "ivy.container.layers.ContainerWithLayers.static_conv1d_transpose"], [119, "ivy.container.layers.ContainerWithLayers.static_conv1d_transpose"]], "static_conv2d() (ivy.container.layers.containerwithlayers static method)": [[118, "ivy.container.layers.ContainerWithLayers.static_conv2d"], [119, "ivy.container.layers.ContainerWithLayers.static_conv2d"]], "static_conv2d_transpose() (ivy.container.layers.containerwithlayers static method)": [[118, "ivy.container.layers.ContainerWithLayers.static_conv2d_transpose"], [119, "ivy.container.layers.ContainerWithLayers.static_conv2d_transpose"]], "static_conv3d() (ivy.container.layers.containerwithlayers static method)": [[118, "ivy.container.layers.ContainerWithLayers.static_conv3d"], [119, "ivy.container.layers.ContainerWithLayers.static_conv3d"]], "static_conv3d_transpose() (ivy.container.layers.containerwithlayers static method)": [[118, "ivy.container.layers.ContainerWithLayers.static_conv3d_transpose"], [119, "ivy.container.layers.ContainerWithLayers.static_conv3d_transpose"]], "static_depthwise_conv2d() (ivy.container.layers.containerwithlayers static method)": [[118, "ivy.container.layers.ContainerWithLayers.static_depthwise_conv2d"], [119, "ivy.container.layers.ContainerWithLayers.static_depthwise_conv2d"]], "static_dropout() (ivy.container.layers.containerwithlayers static method)": [[118, "ivy.container.layers.ContainerWithLayers.static_dropout"], [119, "ivy.container.layers.ContainerWithLayers.static_dropout"]], "static_dropout1d() (ivy.container.layers.containerwithlayers static method)": [[118, "ivy.container.layers.ContainerWithLayers.static_dropout1d"], [119, "ivy.container.layers.ContainerWithLayers.static_dropout1d"]], "static_linear() (ivy.container.layers.containerwithlayers static method)": [[118, "ivy.container.layers.ContainerWithLayers.static_linear"], [119, "ivy.container.layers.ContainerWithLayers.static_linear"]], "static_lstm_update() (ivy.container.layers.containerwithlayers static method)": [[118, "ivy.container.layers.ContainerWithLayers.static_lstm_update"], [119, "ivy.container.layers.ContainerWithLayers.static_lstm_update"]], "static_multi_head_attention() (ivy.container.layers.containerwithlayers static method)": [[118, "ivy.container.layers.ContainerWithLayers.static_multi_head_attention"], [119, "ivy.container.layers.ContainerWithLayers.static_multi_head_attention"]], "static_scaled_dot_product_attention() (ivy.container.layers.containerwithlayers static method)": [[118, "ivy.container.layers.ContainerWithLayers.static_scaled_dot_product_attention"], [119, "ivy.container.layers.ContainerWithLayers.static_scaled_dot_product_attention"]], "containerwithlinearalgebra (class in ivy.container.linear_algebra)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra"]], "cholesky() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cholesky"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cholesky"]], "cross() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cross"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cross"]], "det() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.det"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.det"]], "diag() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diag"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diag"]], "diagonal() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diagonal"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diagonal"]], "eigh() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigh"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigh"]], "eigvalsh() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigvalsh"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigvalsh"]], "inner() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inner"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inner"]], "inv() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inv"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inv"]], "ivy.container.linear_algebra": [[120, "module-ivy.container.linear_algebra"]], "matmul() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matmul"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matmul"]], "matrix_norm() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_norm"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_norm"]], "matrix_power() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_power"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_power"]], "matrix_rank() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_rank"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_rank"]], "matrix_transpose() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_transpose"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_transpose"]], "outer() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.outer"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.outer"]], "pinv() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.pinv"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.pinv"]], "qr() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.qr"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.qr"]], "slogdet() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.slogdet"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.slogdet"]], "solve() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.solve"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.solve"]], "static_cholesky() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cholesky"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cholesky"]], "static_cross() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cross"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cross"]], "static_det() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_det"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_det"]], "static_diag() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diag"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diag"]], "static_diagonal() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diagonal"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diagonal"]], "static_eigh() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigh"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigh"]], "static_eigvalsh() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigvalsh"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigvalsh"]], "static_inner() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inner"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inner"]], "static_inv() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inv"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inv"]], "static_matmul() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matmul"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matmul"]], "static_matrix_norm() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_norm"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_norm"]], "static_matrix_power() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_power"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_power"]], "static_matrix_rank() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_rank"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_rank"]], "static_matrix_transpose() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_transpose"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_transpose"]], "static_outer() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_outer"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_outer"]], "static_pinv() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_pinv"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_pinv"]], "static_qr() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_qr"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_qr"]], "static_slogdet() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_slogdet"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_slogdet"]], "static_solve() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_solve"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_solve"]], "static_svd() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svd"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svd"]], "static_svdvals() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svdvals"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svdvals"]], "static_tensordot() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_tensordot"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_tensordot"]], "static_trace() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_trace"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_trace"]], "static_vander() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vander"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vander"]], "static_vecdot() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vecdot"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vecdot"]], "static_vector_norm() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_norm"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_norm"]], "static_vector_to_skew_symmetric_matrix() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_to_skew_symmetric_matrix"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_to_skew_symmetric_matrix"]], "svd() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svd"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svd"]], "svdvals() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svdvals"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svdvals"]], "tensordot() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensordot"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensordot"]], "tensorsolve() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensorsolve"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensorsolve"]], "trace() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.trace"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.trace"]], "vander() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vander"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vander"]], "vecdot() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vecdot"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vecdot"]], "vector_norm() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_norm"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[120, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_to_skew_symmetric_matrix"], [121, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_to_skew_symmetric_matrix"]], "containerwithlosses (class in ivy.container.losses)": [[122, "ivy.container.losses.ContainerWithLosses"], [123, "ivy.container.losses.ContainerWithLosses"]], "binary_cross_entropy() (ivy.container.losses.containerwithlosses method)": [[122, "ivy.container.losses.ContainerWithLosses.binary_cross_entropy"], [123, "ivy.container.losses.ContainerWithLosses.binary_cross_entropy"]], "cross_entropy() (ivy.container.losses.containerwithlosses method)": [[122, "ivy.container.losses.ContainerWithLosses.cross_entropy"], [123, "ivy.container.losses.ContainerWithLosses.cross_entropy"]], "ivy.container.losses": [[122, "module-ivy.container.losses"]], "sparse_cross_entropy() (ivy.container.losses.containerwithlosses method)": [[122, "ivy.container.losses.ContainerWithLosses.sparse_cross_entropy"], [123, "ivy.container.losses.ContainerWithLosses.sparse_cross_entropy"]], "static_binary_cross_entropy() (ivy.container.losses.containerwithlosses static method)": [[122, "ivy.container.losses.ContainerWithLosses.static_binary_cross_entropy"], [123, "ivy.container.losses.ContainerWithLosses.static_binary_cross_entropy"]], "static_cross_entropy() (ivy.container.losses.containerwithlosses static method)": [[122, "ivy.container.losses.ContainerWithLosses.static_cross_entropy"], [123, "ivy.container.losses.ContainerWithLosses.static_cross_entropy"]], "static_sparse_cross_entropy() (ivy.container.losses.containerwithlosses static method)": [[122, "ivy.container.losses.ContainerWithLosses.static_sparse_cross_entropy"], [123, "ivy.container.losses.ContainerWithLosses.static_sparse_cross_entropy"]], "containerwithmanipulation (class in ivy.container.manipulation)": [[124, "ivy.container.manipulation.ContainerWithManipulation"], [125, "ivy.container.manipulation.ContainerWithManipulation"]], "clip() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.clip"], [125, "ivy.container.manipulation.ContainerWithManipulation.clip"]], "concat() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.concat"], [125, "ivy.container.manipulation.ContainerWithManipulation.concat"]], "constant_pad() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.constant_pad"], [125, "ivy.container.manipulation.ContainerWithManipulation.constant_pad"]], "expand_dims() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.expand_dims"], [125, "ivy.container.manipulation.ContainerWithManipulation.expand_dims"]], "flip() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.flip"], [125, "ivy.container.manipulation.ContainerWithManipulation.flip"]], "ivy.container.manipulation": [[124, "module-ivy.container.manipulation"]], "permute_dims() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.permute_dims"], [125, "ivy.container.manipulation.ContainerWithManipulation.permute_dims"]], "repeat() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.repeat"], [125, "ivy.container.manipulation.ContainerWithManipulation.repeat"]], "reshape() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.reshape"], [125, "ivy.container.manipulation.ContainerWithManipulation.reshape"]], "roll() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.roll"], [125, "ivy.container.manipulation.ContainerWithManipulation.roll"]], "split() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.split"], [125, "ivy.container.manipulation.ContainerWithManipulation.split"]], "squeeze() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.squeeze"], [125, "ivy.container.manipulation.ContainerWithManipulation.squeeze"]], "stack() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.stack"], [125, "ivy.container.manipulation.ContainerWithManipulation.stack"]], "static_clip() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_clip"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_clip"]], "static_concat() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_concat"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_concat"]], "static_constant_pad() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_constant_pad"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_constant_pad"]], "static_expand_dims() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_expand_dims"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_expand_dims"]], "static_flip() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_flip"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_flip"]], "static_permute_dims() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_permute_dims"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_permute_dims"]], "static_repeat() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_repeat"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_repeat"]], "static_reshape() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_reshape"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_reshape"]], "static_roll() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_roll"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_roll"]], "static_split() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_split"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_split"]], "static_squeeze() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_squeeze"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_squeeze"]], "static_stack() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_stack"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_stack"]], "static_swapaxes() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_swapaxes"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_swapaxes"]], "static_tile() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_tile"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_tile"]], "static_unstack() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_unstack"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_unstack"]], "static_zero_pad() (ivy.container.manipulation.containerwithmanipulation static method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.static_zero_pad"], [125, "ivy.container.manipulation.ContainerWithManipulation.static_zero_pad"]], "swapaxes() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.swapaxes"], [125, "ivy.container.manipulation.ContainerWithManipulation.swapaxes"]], "tile() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.tile"], [125, "ivy.container.manipulation.ContainerWithManipulation.tile"]], "unstack() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.unstack"], [125, "ivy.container.manipulation.ContainerWithManipulation.unstack"]], "zero_pad() (ivy.container.manipulation.containerwithmanipulation method)": [[124, "ivy.container.manipulation.ContainerWithManipulation.zero_pad"], [125, "ivy.container.manipulation.ContainerWithManipulation.zero_pad"]], "containerwithnorms (class in ivy.container.norms)": [[126, "ivy.container.norms.ContainerWithNorms"], [127, "ivy.container.norms.ContainerWithNorms"]], "ivy.container.norms": [[126, "module-ivy.container.norms"]], "layer_norm() (ivy.container.norms.containerwithnorms method)": [[126, "ivy.container.norms.ContainerWithNorms.layer_norm"], [127, "ivy.container.norms.ContainerWithNorms.layer_norm"]], "containerwithrandom (class in ivy.container.random)": [[128, "ivy.container.random.ContainerWithRandom"], [129, "ivy.container.random.ContainerWithRandom"]], "ivy.container.random": [[128, "module-ivy.container.random"]], "multinomial() (ivy.container.random.containerwithrandom method)": [[128, "ivy.container.random.ContainerWithRandom.multinomial"], [129, "ivy.container.random.ContainerWithRandom.multinomial"]], "randint() (ivy.container.random.containerwithrandom method)": [[128, "ivy.container.random.ContainerWithRandom.randint"], [129, "ivy.container.random.ContainerWithRandom.randint"]], "random_normal() (ivy.container.random.containerwithrandom method)": [[128, "ivy.container.random.ContainerWithRandom.random_normal"], [129, "ivy.container.random.ContainerWithRandom.random_normal"]], "random_uniform() (ivy.container.random.containerwithrandom method)": [[128, "ivy.container.random.ContainerWithRandom.random_uniform"], [129, "ivy.container.random.ContainerWithRandom.random_uniform"]], "shuffle() (ivy.container.random.containerwithrandom method)": [[128, "ivy.container.random.ContainerWithRandom.shuffle"], [129, "ivy.container.random.ContainerWithRandom.shuffle"]], "static_multinomial() (ivy.container.random.containerwithrandom static method)": [[128, "ivy.container.random.ContainerWithRandom.static_multinomial"], [129, "ivy.container.random.ContainerWithRandom.static_multinomial"]], "static_randint() (ivy.container.random.containerwithrandom static method)": [[128, "ivy.container.random.ContainerWithRandom.static_randint"], [129, "ivy.container.random.ContainerWithRandom.static_randint"]], "static_random_normal() (ivy.container.random.containerwithrandom static method)": [[128, "ivy.container.random.ContainerWithRandom.static_random_normal"], [129, "ivy.container.random.ContainerWithRandom.static_random_normal"]], "static_random_uniform() (ivy.container.random.containerwithrandom static method)": [[128, "ivy.container.random.ContainerWithRandom.static_random_uniform"], [129, "ivy.container.random.ContainerWithRandom.static_random_uniform"]], "static_shuffle() (ivy.container.random.containerwithrandom static method)": [[128, "ivy.container.random.ContainerWithRandom.static_shuffle"], [129, "ivy.container.random.ContainerWithRandom.static_shuffle"]], "containerwithsearching (class in ivy.container.searching)": [[130, "ivy.container.searching.ContainerWithSearching"], [131, "ivy.container.searching.ContainerWithSearching"]], "argmax() (ivy.container.searching.containerwithsearching method)": [[130, "ivy.container.searching.ContainerWithSearching.argmax"], [131, "ivy.container.searching.ContainerWithSearching.argmax"]], "argmin() (ivy.container.searching.containerwithsearching method)": [[130, "ivy.container.searching.ContainerWithSearching.argmin"], [131, "ivy.container.searching.ContainerWithSearching.argmin"]], "argwhere() (ivy.container.searching.containerwithsearching method)": [[130, "ivy.container.searching.ContainerWithSearching.argwhere"], [131, "ivy.container.searching.ContainerWithSearching.argwhere"]], "ivy.container.searching": [[130, "module-ivy.container.searching"]], "nonzero() (ivy.container.searching.containerwithsearching method)": [[130, "ivy.container.searching.ContainerWithSearching.nonzero"], [131, "ivy.container.searching.ContainerWithSearching.nonzero"]], "static_argmax() (ivy.container.searching.containerwithsearching static method)": [[130, "ivy.container.searching.ContainerWithSearching.static_argmax"], [131, "ivy.container.searching.ContainerWithSearching.static_argmax"]], "static_argmin() (ivy.container.searching.containerwithsearching static method)": [[130, "ivy.container.searching.ContainerWithSearching.static_argmin"], [131, "ivy.container.searching.ContainerWithSearching.static_argmin"]], "static_argwhere() (ivy.container.searching.containerwithsearching static method)": [[130, "ivy.container.searching.ContainerWithSearching.static_argwhere"], [131, "ivy.container.searching.ContainerWithSearching.static_argwhere"]], "static_nonzero() (ivy.container.searching.containerwithsearching static method)": [[130, "ivy.container.searching.ContainerWithSearching.static_nonzero"], [131, "ivy.container.searching.ContainerWithSearching.static_nonzero"]], "static_where() (ivy.container.searching.containerwithsearching static method)": [[130, "ivy.container.searching.ContainerWithSearching.static_where"], [131, "ivy.container.searching.ContainerWithSearching.static_where"]], "where() (ivy.container.searching.containerwithsearching method)": [[130, "ivy.container.searching.ContainerWithSearching.where"], [131, "ivy.container.searching.ContainerWithSearching.where"]], "containerwithset (class in ivy.container.set)": [[132, "ivy.container.set.ContainerWithSet"], [133, "ivy.container.set.ContainerWithSet"]], "ivy.container.set": [[132, "module-ivy.container.set"]], "static_unique_all() (ivy.container.set.containerwithset static method)": [[132, "ivy.container.set.ContainerWithSet.static_unique_all"], [133, "ivy.container.set.ContainerWithSet.static_unique_all"]], "static_unique_counts() (ivy.container.set.containerwithset static method)": [[132, "ivy.container.set.ContainerWithSet.static_unique_counts"], [133, "ivy.container.set.ContainerWithSet.static_unique_counts"]], "static_unique_inverse() (ivy.container.set.containerwithset static method)": [[132, "ivy.container.set.ContainerWithSet.static_unique_inverse"], [133, "ivy.container.set.ContainerWithSet.static_unique_inverse"]], "static_unique_values() (ivy.container.set.containerwithset static method)": [[132, "ivy.container.set.ContainerWithSet.static_unique_values"], [133, "ivy.container.set.ContainerWithSet.static_unique_values"]], "unique_all() (ivy.container.set.containerwithset method)": [[132, "ivy.container.set.ContainerWithSet.unique_all"], [133, "ivy.container.set.ContainerWithSet.unique_all"]], "unique_counts() (ivy.container.set.containerwithset method)": [[132, "ivy.container.set.ContainerWithSet.unique_counts"], [133, "ivy.container.set.ContainerWithSet.unique_counts"]], "unique_inverse() (ivy.container.set.containerwithset method)": [[132, "ivy.container.set.ContainerWithSet.unique_inverse"], [133, "ivy.container.set.ContainerWithSet.unique_inverse"]], "unique_values() (ivy.container.set.containerwithset method)": [[132, "ivy.container.set.ContainerWithSet.unique_values"], [133, "ivy.container.set.ContainerWithSet.unique_values"]], "containerwithsorting (class in ivy.container.sorting)": [[134, "ivy.container.sorting.ContainerWithSorting"], [135, "ivy.container.sorting.ContainerWithSorting"]], "argsort() (ivy.container.sorting.containerwithsorting method)": [[134, "ivy.container.sorting.ContainerWithSorting.argsort"], [135, "ivy.container.sorting.ContainerWithSorting.argsort"]], "ivy.container.sorting": [[134, "module-ivy.container.sorting"]], "searchsorted() (ivy.container.sorting.containerwithsorting method)": [[134, "ivy.container.sorting.ContainerWithSorting.searchsorted"], [135, "ivy.container.sorting.ContainerWithSorting.searchsorted"]], "sort() (ivy.container.sorting.containerwithsorting method)": [[134, "ivy.container.sorting.ContainerWithSorting.sort"], [135, "ivy.container.sorting.ContainerWithSorting.sort"]], "static_argsort() (ivy.container.sorting.containerwithsorting static method)": [[134, "ivy.container.sorting.ContainerWithSorting.static_argsort"], [135, "ivy.container.sorting.ContainerWithSorting.static_argsort"]], "static_searchsorted() (ivy.container.sorting.containerwithsorting static method)": [[134, "ivy.container.sorting.ContainerWithSorting.static_searchsorted"], [135, "ivy.container.sorting.ContainerWithSorting.static_searchsorted"]], "static_sort() (ivy.container.sorting.containerwithsorting static method)": [[134, "ivy.container.sorting.ContainerWithSorting.static_sort"], [135, "ivy.container.sorting.ContainerWithSorting.static_sort"]], "containerwithstatistical (class in ivy.container.statistical)": [[136, "ivy.container.statistical.ContainerWithStatistical"], [137, "ivy.container.statistical.ContainerWithStatistical"]], "cumprod() (ivy.container.statistical.containerwithstatistical method)": [[136, "ivy.container.statistical.ContainerWithStatistical.cumprod"], [137, "ivy.container.statistical.ContainerWithStatistical.cumprod"]], "cumsum() (ivy.container.statistical.containerwithstatistical method)": [[136, "ivy.container.statistical.ContainerWithStatistical.cumsum"], [137, "ivy.container.statistical.ContainerWithStatistical.cumsum"]], "einsum() (ivy.container.statistical.containerwithstatistical method)": [[136, "ivy.container.statistical.ContainerWithStatistical.einsum"], [137, "ivy.container.statistical.ContainerWithStatistical.einsum"]], "ivy.container.statistical": [[136, "module-ivy.container.statistical"]], "max() (ivy.container.statistical.containerwithstatistical method)": [[136, "ivy.container.statistical.ContainerWithStatistical.max"], [137, "ivy.container.statistical.ContainerWithStatistical.max"]], "mean() (ivy.container.statistical.containerwithstatistical method)": [[136, "ivy.container.statistical.ContainerWithStatistical.mean"], [137, "ivy.container.statistical.ContainerWithStatistical.mean"]], "min() (ivy.container.statistical.containerwithstatistical method)": [[136, "ivy.container.statistical.ContainerWithStatistical.min"], [137, "ivy.container.statistical.ContainerWithStatistical.min"]], "prod() (ivy.container.statistical.containerwithstatistical method)": [[136, "ivy.container.statistical.ContainerWithStatistical.prod"], [137, "ivy.container.statistical.ContainerWithStatistical.prod"]], "static_cumprod() (ivy.container.statistical.containerwithstatistical static method)": [[136, "ivy.container.statistical.ContainerWithStatistical.static_cumprod"], [137, "ivy.container.statistical.ContainerWithStatistical.static_cumprod"]], "static_cumsum() (ivy.container.statistical.containerwithstatistical static method)": [[136, "ivy.container.statistical.ContainerWithStatistical.static_cumsum"], [137, "ivy.container.statistical.ContainerWithStatistical.static_cumsum"]], "static_prod() (ivy.container.statistical.containerwithstatistical static method)": [[136, "ivy.container.statistical.ContainerWithStatistical.static_prod"], [137, "ivy.container.statistical.ContainerWithStatistical.static_prod"]], "static_sum() (ivy.container.statistical.containerwithstatistical static method)": [[136, "ivy.container.statistical.ContainerWithStatistical.static_sum"], [137, "ivy.container.statistical.ContainerWithStatistical.static_sum"]], "static_var() (ivy.container.statistical.containerwithstatistical static method)": [[136, "ivy.container.statistical.ContainerWithStatistical.static_var"], [137, "ivy.container.statistical.ContainerWithStatistical.static_var"]], "std() (ivy.container.statistical.containerwithstatistical method)": [[136, "ivy.container.statistical.ContainerWithStatistical.std"], [137, "ivy.container.statistical.ContainerWithStatistical.std"]], "sum() (ivy.container.statistical.containerwithstatistical method)": [[136, "ivy.container.statistical.ContainerWithStatistical.sum"], [137, "ivy.container.statistical.ContainerWithStatistical.sum"]], "var() (ivy.container.statistical.containerwithstatistical method)": [[136, "ivy.container.statistical.ContainerWithStatistical.var"], [137, "ivy.container.statistical.ContainerWithStatistical.var"]], "containerwithutility (class in ivy.container.utility)": [[138, "ivy.container.utility.ContainerWithUtility"], [139, "ivy.container.utility.ContainerWithUtility"]], "all() (ivy.container.utility.containerwithutility method)": [[138, "ivy.container.utility.ContainerWithUtility.all"], [139, "ivy.container.utility.ContainerWithUtility.all"]], "any() (ivy.container.utility.containerwithutility method)": [[138, "ivy.container.utility.ContainerWithUtility.any"], [139, "ivy.container.utility.ContainerWithUtility.any"]], "ivy.container.utility": [[138, "module-ivy.container.utility"]], "static_all() (ivy.container.utility.containerwithutility static method)": [[138, "ivy.container.utility.ContainerWithUtility.static_all"], [139, "ivy.container.utility.ContainerWithUtility.static_all"]], "static_any() (ivy.container.utility.containerwithutility static method)": [[138, "ivy.container.utility.ContainerWithUtility.static_any"], [139, "ivy.container.utility.ContainerWithUtility.static_any"]], "add_ivy_container_instance_methods() (in module ivy.container.wrapping)": [[140, "ivy.container.wrapping.add_ivy_container_instance_methods"], [141, "ivy.container.wrapping.add_ivy_container_instance_methods"]], "ivy.container.wrapping": [[140, "module-ivy.container.wrapping"]], "custom_handle_nestable() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.custom_handle_nestable"], [183, "ivy.func_wrapper.custom_handle_nestable"]], "handle_array_like() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.handle_array_like"], [184, "ivy.func_wrapper.handle_array_like"]], "handle_nans() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.handle_nans"], [185, "ivy.func_wrapper.handle_nans"]], "handle_nestable() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.handle_nestable"], [186, "ivy.func_wrapper.handle_nestable"]], "handle_out_argument() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.handle_out_argument"], [187, "ivy.func_wrapper.handle_out_argument"]], "infer_device() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.infer_device"], [188, "ivy.func_wrapper.infer_device"]], "infer_dtype() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.infer_dtype"], [189, "ivy.func_wrapper.infer_dtype"]], "inputs_to_ivy_arrays() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.inputs_to_ivy_arrays"], [190, "ivy.func_wrapper.inputs_to_ivy_arrays"]], "inputs_to_native_arrays() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.inputs_to_native_arrays"], [191, "ivy.func_wrapper.inputs_to_native_arrays"]], "integer_arrays_to_float() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.integer_arrays_to_float"], [192, "ivy.func_wrapper.integer_arrays_to_float"]], "ivy.func_wrapper": [[182, "module-ivy.func_wrapper"]], "outputs_to_ivy_arrays() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.outputs_to_ivy_arrays"], [193, "ivy.func_wrapper.outputs_to_ivy_arrays"]], "to_native_arrays_and_back() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.to_native_arrays_and_back"], [194, "ivy.func_wrapper.to_native_arrays_and_back"]], "with_supported_device_and_dtypes() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.with_supported_device_and_dtypes"]], "with_supported_devices() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.with_supported_devices"]], "with_supported_dtypes() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.with_supported_dtypes"]], "with_unsupported_device_and_dtypes() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.with_unsupported_device_and_dtypes"]], "with_unsupported_devices() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.with_unsupported_devices"]], "with_unsupported_dtypes() (in module ivy.func_wrapper)": [[182, "ivy.func_wrapper.with_unsupported_dtypes"]], "deserialize() (in module ivy.functional.ivy.activations)": [[196, "ivy.functional.ivy.activations.deserialize"], [197, "ivy.functional.ivy.activations.deserialize"]], "gelu() (in module ivy.functional.ivy.activations)": [[196, "ivy.functional.ivy.activations.gelu"], [198, "ivy.functional.ivy.activations.gelu"], [201, "ivy.functional.ivy.activations.gelu"]], "get() (in module ivy.functional.ivy.activations)": [[196, "ivy.functional.ivy.activations.get"], [203, "ivy.functional.ivy.activations.get"]], "ivy.functional.ivy.activations": [[196, "module-ivy.functional.ivy.activations"]], "leaky_relu() (in module ivy.functional.ivy.activations)": [[196, "ivy.functional.ivy.activations.leaky_relu"], [204, "ivy.functional.ivy.activations.leaky_relu"], [207, "ivy.functional.ivy.activations.leaky_relu"]], "log_softmax() (in module ivy.functional.ivy.activations)": [[196, "ivy.functional.ivy.activations.log_softmax"], [209, "ivy.functional.ivy.activations.log_softmax"], [212, "ivy.functional.ivy.activations.log_softmax"]], "relu() (in module ivy.functional.ivy.activations)": [[196, "ivy.functional.ivy.activations.relu"], [214, "ivy.functional.ivy.activations.relu"], [217, "ivy.functional.ivy.activations.relu"]], "sigmoid() (in module ivy.functional.ivy.activations)": [[196, "ivy.functional.ivy.activations.sigmoid"], [219, "ivy.functional.ivy.activations.sigmoid"], [222, "ivy.functional.ivy.activations.sigmoid"]], "softmax() (in module ivy.functional.ivy.activations)": [[196, "ivy.functional.ivy.activations.softmax"], [224, "ivy.functional.ivy.activations.softmax"], [227, "ivy.functional.ivy.activations.softmax"]], "softplus() (in module ivy.functional.ivy.activations)": [[196, "ivy.functional.ivy.activations.softplus"], [229, "ivy.functional.ivy.activations.softplus"], [232, "ivy.functional.ivy.activations.softplus"]], "gelu() (in module ivy.array.array_methods)": [[198, "ivy.array.array_methods.gelu"], [199, "ivy.array.array_methods.gelu"]], "gelu() (in module ivy.container.container_methods)": [[198, "ivy.container.container_methods.gelu"], [200, "ivy.container.container_methods.gelu"]], "static_gelu() (in module ivy.container.container_methods)": [[198, "ivy.container.container_methods.static_gelu"], [202, "ivy.container.container_methods.static_gelu"]], "leaky_relu() (in module ivy.array.array_methods)": [[204, "ivy.array.array_methods.leaky_relu"], [205, "ivy.array.array_methods.leaky_relu"]], "leaky_relu() (in module ivy.container.container_methods)": [[204, "ivy.container.container_methods.leaky_relu"], [206, "ivy.container.container_methods.leaky_relu"]], "static_leaky_relu() (in module ivy.container.container_methods)": [[204, "ivy.container.container_methods.static_leaky_relu"], [208, "ivy.container.container_methods.static_leaky_relu"]], "log_softmax() (in module ivy.array.array_methods)": [[209, "ivy.array.array_methods.log_softmax"], [210, "ivy.array.array_methods.log_softmax"]], "log_softmax() (in module ivy.container.container_methods)": [[209, "ivy.container.container_methods.log_softmax"], [211, "ivy.container.container_methods.log_softmax"]], "static_log_softmax() (in module ivy.container.container_methods)": [[209, "ivy.container.container_methods.static_log_softmax"], [213, "ivy.container.container_methods.static_log_softmax"]], "relu() (in module ivy.array.array_methods)": [[214, "ivy.array.array_methods.relu"], [215, "ivy.array.array_methods.relu"]], "relu() (in module ivy.container.container_methods)": [[214, "ivy.container.container_methods.relu"], [216, "ivy.container.container_methods.relu"]], "static_relu() (in module ivy.container.container_methods)": [[214, "ivy.container.container_methods.static_relu"], [218, "ivy.container.container_methods.static_relu"]], "sigmoid() (in module ivy.array.array_methods)": [[219, "ivy.array.array_methods.sigmoid"], [220, "ivy.array.array_methods.sigmoid"]], "sigmoid() (in module ivy.container.container_methods)": [[219, "ivy.container.container_methods.sigmoid"], [221, "ivy.container.container_methods.sigmoid"]], "static_sigmoid() (in module ivy.container.container_methods)": [[219, "ivy.container.container_methods.static_sigmoid"], [223, "ivy.container.container_methods.static_sigmoid"]], "softmax() (in module ivy.array.array_methods)": [[224, "ivy.array.array_methods.softmax"], [225, "ivy.array.array_methods.softmax"]], "softmax() (in module ivy.container.container_methods)": [[224, "ivy.container.container_methods.softmax"], [226, "ivy.container.container_methods.softmax"]], "static_softmax() (in module ivy.container.container_methods)": [[224, "ivy.container.container_methods.static_softmax"], [228, "ivy.container.container_methods.static_softmax"]], "softplus() (in module ivy.array.array_methods)": [[229, "ivy.array.array_methods.softplus"], [230, "ivy.array.array_methods.softplus"]], "softplus() (in module ivy.container.container_methods)": [[229, "ivy.container.container_methods.softplus"], [231, "ivy.container.container_methods.softplus"]], "static_softplus() (in module ivy.container.container_methods)": [[229, "ivy.container.container_methods.static_softplus"], [233, "ivy.container.container_methods.static_softplus"]], "compile() (in module ivy.functional.ivy.compilation)": [[234, "ivy.functional.ivy.compilation.compile"], [235, "ivy.functional.ivy.compilation.compile"]], "ivy.functional.ivy.compilation": [[234, "module-ivy.functional.ivy.compilation"]], "e (in module ivy.functional.ivy.constants)": [[236, "ivy.functional.ivy.constants.e"]], "inf (in module ivy.functional.ivy.constants)": [[236, "ivy.functional.ivy.constants.inf"]], "ivy.functional.ivy.constants": [[236, "module-ivy.functional.ivy.constants"]], "nan (in module ivy.functional.ivy.constants)": [[236, "ivy.functional.ivy.constants.nan"]], "newaxis (in module ivy.functional.ivy.constants)": [[236, "ivy.functional.ivy.constants.newaxis"]], "pi (in module ivy.functional.ivy.constants)": [[236, "ivy.functional.ivy.constants.pi"]], "nestedsequence (class in ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.NestedSequence"], [238, "ivy.functional.ivy.creation.NestedSequence"]], "__init__() (ivy.functional.ivy.creation.nestedsequence method)": [[237, "ivy.functional.ivy.creation.NestedSequence.__init__"], [238, "ivy.functional.ivy.creation.NestedSequence.__init__"]], "arange() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.arange"], [239, "ivy.functional.ivy.creation.arange"], [240, "ivy.functional.ivy.creation.arange"]], "array() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.array"]], "asarray() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.asarray"], [242, "ivy.functional.ivy.creation.asarray"], [244, "ivy.functional.ivy.creation.asarray"]], "asarray_handle_nestable() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.asarray_handle_nestable"], [246, "ivy.functional.ivy.creation.asarray_handle_nestable"]], "asarray_infer_device() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.asarray_infer_device"], [247, "ivy.functional.ivy.creation.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.asarray_to_native_arrays_and_back"], [248, "ivy.functional.ivy.creation.asarray_to_native_arrays_and_back"]], "copy_array() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.copy_array"], [249, "ivy.functional.ivy.creation.copy_array"], [251, "ivy.functional.ivy.creation.copy_array"]], "empty() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.empty"], [252, "ivy.functional.ivy.creation.empty"]], "empty_like() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.empty_like"], [253, "ivy.functional.ivy.creation.empty_like"], [256, "ivy.functional.ivy.creation.empty_like"]], "eye() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.eye"], [258, "ivy.functional.ivy.creation.eye"], [259, "ivy.functional.ivy.creation.eye"]], "from_dlpack() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.from_dlpack"], [261, "ivy.functional.ivy.creation.from_dlpack"], [264, "ivy.functional.ivy.creation.from_dlpack"]], "full() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.full"], [266, "ivy.functional.ivy.creation.full"]], "full_like() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.full_like"], [267, "ivy.functional.ivy.creation.full_like"], [270, "ivy.functional.ivy.creation.full_like"]], "ivy.functional.ivy.creation": [[237, "module-ivy.functional.ivy.creation"]], "linspace() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.linspace"], [272, "ivy.functional.ivy.creation.linspace"], [275, "ivy.functional.ivy.creation.linspace"]], "logspace() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.logspace"], [277, "ivy.functional.ivy.creation.logspace"], [280, "ivy.functional.ivy.creation.logspace"]], "meshgrid() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.meshgrid"], [282, "ivy.functional.ivy.creation.meshgrid"], [285, "ivy.functional.ivy.creation.meshgrid"]], "native_array() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.native_array"], [287, "ivy.functional.ivy.creation.native_array"], [290, "ivy.functional.ivy.creation.native_array"]], "one_hot() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.one_hot"], [292, "ivy.functional.ivy.creation.one_hot"], [295, "ivy.functional.ivy.creation.one_hot"]], "ones() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.ones"], [297, "ivy.functional.ivy.creation.ones"], [298, "ivy.functional.ivy.creation.ones"]], "ones_like() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.ones_like"], [300, "ivy.functional.ivy.creation.ones_like"], [303, "ivy.functional.ivy.creation.ones_like"]], "tril() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.tril"], [305, "ivy.functional.ivy.creation.tril"], [309, "ivy.functional.ivy.creation.tril"]], "triu() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.triu"], [310, "ivy.functional.ivy.creation.triu"], [314, "ivy.functional.ivy.creation.triu"]], "zeros() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.zeros"], [315, "ivy.functional.ivy.creation.zeros"], [317, "ivy.functional.ivy.creation.zeros"]], "zeros_like() (in module ivy.functional.ivy.creation)": [[237, "ivy.functional.ivy.creation.zeros_like"], [318, "ivy.functional.ivy.creation.zeros_like"], [322, "ivy.functional.ivy.creation.zeros_like"]], "static_arange() (in module ivy.container.container_methods)": [[239, "ivy.container.container_methods.static_arange"], [241, "ivy.container.container_methods.static_arange"]], "asarray() (in module ivy.array.array_methods)": [[242, "ivy.array.array_methods.asarray"], [243, "ivy.array.array_methods.asarray"]], "static_asarray() (in module ivy.container.container_methods)": [[242, "ivy.container.container_methods.static_asarray"], [245, "ivy.container.container_methods.static_asarray"]], "copy_array() (in module ivy.array.array_methods)": [[249, "ivy.array.array_methods.copy_array"], [250, "ivy.array.array_methods.copy_array"]], "empty_like() (in module ivy.array.array_methods)": [[253, "ivy.array.array_methods.empty_like"], [254, "ivy.array.array_methods.empty_like"]], "empty_like() (in module ivy.container.container_methods)": [[253, "ivy.container.container_methods.empty_like"], [255, "ivy.container.container_methods.empty_like"]], "static_empty_like() (in module ivy.container.container_methods)": [[253, "ivy.container.container_methods.static_empty_like"], [257, "ivy.container.container_methods.static_empty_like"]], "static_eye() (in module ivy.container.container_methods)": [[258, "ivy.container.container_methods.static_eye"], [260, "ivy.container.container_methods.static_eye"]], "from_dlpack() (in module ivy.array.array_methods)": [[261, "ivy.array.array_methods.from_dlpack"], [262, "ivy.array.array_methods.from_dlpack"]], "from_dlpack() (in module ivy.container.container_methods)": [[261, "ivy.container.container_methods.from_dlpack"], [263, "ivy.container.container_methods.from_dlpack"]], "static_from_dlpack() (in module ivy.container.container_methods)": [[261, "ivy.container.container_methods.static_from_dlpack"], [265, "ivy.container.container_methods.static_from_dlpack"]], "full_like() (in module ivy.array.array_methods)": [[267, "ivy.array.array_methods.full_like"], [268, "ivy.array.array_methods.full_like"]], "full_like() (in module ivy.container.container_methods)": [[267, "ivy.container.container_methods.full_like"], [269, "ivy.container.container_methods.full_like"]], "static_full_like() (in module ivy.container.container_methods)": [[267, "ivy.container.container_methods.static_full_like"], [271, "ivy.container.container_methods.static_full_like"]], "linspace() (in module ivy.array.array_methods)": [[272, "ivy.array.array_methods.linspace"], [273, "ivy.array.array_methods.linspace"]], "linspace() (in module ivy.container.container_methods)": [[272, "ivy.container.container_methods.linspace"], [274, "ivy.container.container_methods.linspace"]], "static_linspace() (in module ivy.container.container_methods)": [[272, "ivy.container.container_methods.static_linspace"], [276, "ivy.container.container_methods.static_linspace"]], "logspace() (in module ivy.array.array_methods)": [[277, "ivy.array.array_methods.logspace"], [278, "ivy.array.array_methods.logspace"]], "logspace() (in module ivy.container.container_methods)": [[277, "ivy.container.container_methods.logspace"], [279, "ivy.container.container_methods.logspace"]], "static_logspace() (in module ivy.container.container_methods)": [[277, "ivy.container.container_methods.static_logspace"], [281, "ivy.container.container_methods.static_logspace"]], "meshgrid() (in module ivy.array.array_methods)": [[282, "ivy.array.array_methods.meshgrid"], [283, "ivy.array.array_methods.meshgrid"]], "meshgrid() (in module ivy.container.container_methods)": [[282, "ivy.container.container_methods.meshgrid"], [284, "ivy.container.container_methods.meshgrid"]], "static_meshgrid() (in module ivy.container.container_methods)": [[282, "ivy.container.container_methods.static_meshgrid"], [286, "ivy.container.container_methods.static_meshgrid"]], "native_array() (in module ivy.array.array_methods)": [[287, "ivy.array.array_methods.native_array"], [288, "ivy.array.array_methods.native_array"]], "native_array() (in module ivy.container.container_methods)": [[287, "ivy.container.container_methods.native_array"], [289, "ivy.container.container_methods.native_array"]], "static_native_array() (in module ivy.container.container_methods)": [[287, "ivy.container.container_methods.static_native_array"], [291, "ivy.container.container_methods.static_native_array"]], "one_hot() (in module ivy.array.array_methods)": [[292, "ivy.array.array_methods.one_hot"], [293, "ivy.array.array_methods.one_hot"]], "one_hot() (in module ivy.container.container_methods)": [[292, "ivy.container.container_methods.one_hot"], [294, "ivy.container.container_methods.one_hot"]], "static_one_hot() (in module ivy.container.container_methods)": [[292, "ivy.container.container_methods.static_one_hot"], [296, "ivy.container.container_methods.static_one_hot"]], "static_ones() (in module ivy.container.container_methods)": [[297, "ivy.container.container_methods.static_ones"], [299, "ivy.container.container_methods.static_ones"]], "ones_like() (in module ivy.array.array_methods)": [[300, "ivy.array.array_methods.ones_like"], [301, "ivy.array.array_methods.ones_like"]], "ones_like() (in module ivy.container.container_methods)": [[300, "ivy.container.container_methods.ones_like"], [302, "ivy.container.container_methods.ones_like"]], "static_ones_like() (in module ivy.container.container_methods)": [[300, "ivy.container.container_methods.static_ones_like"], [304, "ivy.container.container_methods.static_ones_like"]], "static_tril() (in module ivy.container.container_methods)": [[305, "ivy.container.container_methods.static_tril"], [306, "ivy.container.container_methods.static_tril"]], "tril() (in module ivy.array.array_methods)": [[305, "ivy.array.array_methods.tril"], [307, "ivy.array.array_methods.tril"]], "tril() (in module ivy.container.container_methods)": [[305, "ivy.container.container_methods.tril"], [308, "ivy.container.container_methods.tril"]], "static_triu() (in module ivy.container.container_methods)": [[310, "ivy.container.container_methods.static_triu"], [311, "ivy.container.container_methods.static_triu"]], "triu() (in module ivy.array.array_methods)": [[310, "ivy.array.array_methods.triu"], [312, "ivy.array.array_methods.triu"]], "triu() (in module ivy.container.container_methods)": [[310, "ivy.container.container_methods.triu"], [313, "ivy.container.container_methods.triu"]], "static_zeros() (in module ivy.container.container_methods)": [[315, "ivy.container.container_methods.static_zeros"], [316, "ivy.container.container_methods.static_zeros"]], "static_zeros_like() (in module ivy.container.container_methods)": [[318, "ivy.container.container_methods.static_zeros_like"], [319, "ivy.container.container_methods.static_zeros_like"]], "zeros_like() (in module ivy.array.array_methods)": [[318, "ivy.array.array_methods.zeros_like"], [320, "ivy.array.array_methods.zeros_like"]], "zeros_like() (in module ivy.container.container_methods)": [[318, "ivy.container.container_methods.zeros_like"], [321, "ivy.container.container_methods.zeros_like"]], "defaultdtype (class in ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.DefaultDtype"], [324, "ivy.functional.ivy.data_type.DefaultDtype"]], "defaultfloatdtype (class in ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.DefaultFloatDtype"], [325, "ivy.functional.ivy.data_type.DefaultFloatDtype"]], "defaultintdtype (class in ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.DefaultIntDtype"], [326, "ivy.functional.ivy.data_type.DefaultIntDtype"]], "defaultuintdtype (class in ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.DefaultUintDtype"], [327, "ivy.functional.ivy.data_type.DefaultUintDtype"]], "__init__() (ivy.functional.ivy.data_type.defaultdtype method)": [[323, "ivy.functional.ivy.data_type.DefaultDtype.__init__"], [324, "ivy.functional.ivy.data_type.DefaultDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultfloatdtype method)": [[323, "ivy.functional.ivy.data_type.DefaultFloatDtype.__init__"], [325, "ivy.functional.ivy.data_type.DefaultFloatDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultintdtype method)": [[323, "ivy.functional.ivy.data_type.DefaultIntDtype.__init__"], [326, "ivy.functional.ivy.data_type.DefaultIntDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultuintdtype method)": [[323, "ivy.functional.ivy.data_type.DefaultUintDtype.__init__"], [327, "ivy.functional.ivy.data_type.DefaultUintDtype.__init__"]], "as_ivy_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.as_ivy_dtype"], [328, "ivy.functional.ivy.data_type.as_ivy_dtype"]], "as_native_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.as_native_dtype"], [329, "ivy.functional.ivy.data_type.as_native_dtype"]], "astype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.astype"], [330, "ivy.functional.ivy.data_type.astype"], [333, "ivy.functional.ivy.data_type.astype"]], "broadcast_arrays() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.broadcast_arrays"], [335, "ivy.functional.ivy.data_type.broadcast_arrays"], [338, "ivy.functional.ivy.data_type.broadcast_arrays"]], "broadcast_to() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.broadcast_to"], [340, "ivy.functional.ivy.data_type.broadcast_to"], [343, "ivy.functional.ivy.data_type.broadcast_to"]], "can_cast() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.can_cast"], [345, "ivy.functional.ivy.data_type.can_cast"], [348, "ivy.functional.ivy.data_type.can_cast"]], "check_float() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.check_float"], [350, "ivy.functional.ivy.data_type.check_float"]], "closest_valid_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.closest_valid_dtype"], [351, "ivy.functional.ivy.data_type.closest_valid_dtype"]], "default_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.default_dtype"], [352, "ivy.functional.ivy.data_type.default_dtype"]], "default_float_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.default_float_dtype"], [353, "ivy.functional.ivy.data_type.default_float_dtype"], [354, "ivy.functional.ivy.data_type.default_float_dtype"]], "default_int_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.default_int_dtype"], [356, "ivy.functional.ivy.data_type.default_int_dtype"]], "default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.default_uint_dtype"], [357, "ivy.functional.ivy.data_type.default_uint_dtype"]], "dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.dtype"], [358, "ivy.functional.ivy.data_type.dtype"], [360, "ivy.functional.ivy.data_type.dtype"]], "dtype_bits() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.dtype_bits"], [362, "ivy.functional.ivy.data_type.dtype_bits"]], "finfo() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.finfo"], [363, "ivy.functional.ivy.data_type.finfo"], [366, "ivy.functional.ivy.data_type.finfo"]], "function_supported_dtypes() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.function_supported_dtypes"], [368, "ivy.functional.ivy.data_type.function_supported_dtypes"], [369, "ivy.functional.ivy.data_type.function_supported_dtypes"]], "function_unsupported_dtypes() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.function_unsupported_dtypes"], [371, "ivy.functional.ivy.data_type.function_unsupported_dtypes"], [372, "ivy.functional.ivy.data_type.function_unsupported_dtypes"]], "iinfo() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.iinfo"], [374, "ivy.functional.ivy.data_type.iinfo"], [377, "ivy.functional.ivy.data_type.iinfo"]], "infer_default_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.infer_default_dtype"], [379, "ivy.functional.ivy.data_type.infer_default_dtype"]], "invalid_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.invalid_dtype"], [380, "ivy.functional.ivy.data_type.invalid_dtype"]], "is_bool_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.is_bool_dtype"], [381, "ivy.functional.ivy.data_type.is_bool_dtype"], [384, "ivy.functional.ivy.data_type.is_bool_dtype"]], "is_float_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.is_float_dtype"], [386, "ivy.functional.ivy.data_type.is_float_dtype"], [389, "ivy.functional.ivy.data_type.is_float_dtype"]], "is_int_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.is_int_dtype"], [391, "ivy.functional.ivy.data_type.is_int_dtype"], [394, "ivy.functional.ivy.data_type.is_int_dtype"]], "is_uint_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.is_uint_dtype"], [396, "ivy.functional.ivy.data_type.is_uint_dtype"], [399, "ivy.functional.ivy.data_type.is_uint_dtype"]], "ivy.functional.ivy.data_type": [[323, "module-ivy.functional.ivy.data_type"]], "promote_types() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.promote_types"], [401, "ivy.functional.ivy.data_type.promote_types"]], "promote_types_of_inputs() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.promote_types_of_inputs"], [402, "ivy.functional.ivy.data_type.promote_types_of_inputs"]], "result_type() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.result_type"], [403, "ivy.functional.ivy.data_type.result_type"], [406, "ivy.functional.ivy.data_type.result_type"]], "set_default_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.set_default_dtype"], [408, "ivy.functional.ivy.data_type.set_default_dtype"]], "set_default_float_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.set_default_float_dtype"], [409, "ivy.functional.ivy.data_type.set_default_float_dtype"]], "set_default_int_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.set_default_int_dtype"], [410, "ivy.functional.ivy.data_type.set_default_int_dtype"]], "set_default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.set_default_uint_dtype"], [411, "ivy.functional.ivy.data_type.set_default_uint_dtype"]], "type_promote_arrays() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.type_promote_arrays"], [412, "ivy.functional.ivy.data_type.type_promote_arrays"]], "unset_default_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.unset_default_dtype"], [413, "ivy.functional.ivy.data_type.unset_default_dtype"]], "unset_default_float_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.unset_default_float_dtype"], [414, "ivy.functional.ivy.data_type.unset_default_float_dtype"]], "unset_default_int_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.unset_default_int_dtype"], [415, "ivy.functional.ivy.data_type.unset_default_int_dtype"]], "unset_default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.unset_default_uint_dtype"], [416, "ivy.functional.ivy.data_type.unset_default_uint_dtype"]], "valid_dtype() (in module ivy.functional.ivy.data_type)": [[323, "ivy.functional.ivy.data_type.valid_dtype"], [417, "ivy.functional.ivy.data_type.valid_dtype"]], "astype() (in module ivy.array.array_methods)": [[330, "ivy.array.array_methods.astype"], [331, "ivy.array.array_methods.astype"]], "astype() (in module ivy.container.container_methods)": [[330, "ivy.container.container_methods.astype"], [332, "ivy.container.container_methods.astype"]], "static_astype() (in module ivy.container.container_methods)": [[330, "ivy.container.container_methods.static_astype"], [334, "ivy.container.container_methods.static_astype"]], "broadcast_arrays() (in module ivy.array.array_methods)": [[335, "ivy.array.array_methods.broadcast_arrays"], [336, "ivy.array.array_methods.broadcast_arrays"]], "broadcast_arrays() (in module ivy.container.container_methods)": [[335, "ivy.container.container_methods.broadcast_arrays"], [337, "ivy.container.container_methods.broadcast_arrays"]], "static_broadcast_arrays() (in module ivy.container.container_methods)": [[335, "ivy.container.container_methods.static_broadcast_arrays"], [339, "ivy.container.container_methods.static_broadcast_arrays"]], "broadcast_to() (in module ivy.array.array_methods)": [[340, "ivy.array.array_methods.broadcast_to"], [341, "ivy.array.array_methods.broadcast_to"]], "broadcast_to() (in module ivy.container.container_methods)": [[340, "ivy.container.container_methods.broadcast_to"], [342, "ivy.container.container_methods.broadcast_to"]], "static_broadcast_to() (in module ivy.container.container_methods)": [[340, "ivy.container.container_methods.static_broadcast_to"], [344, "ivy.container.container_methods.static_broadcast_to"]], "can_cast() (in module ivy.array.array_methods)": [[345, "ivy.array.array_methods.can_cast"], [346, "ivy.array.array_methods.can_cast"]], "can_cast() (in module ivy.container.container_methods)": [[345, "ivy.container.container_methods.can_cast"], [347, "ivy.container.container_methods.can_cast"]], "static_can_cast() (in module ivy.container.container_methods)": [[345, "ivy.container.container_methods.static_can_cast"], [349, "ivy.container.container_methods.static_can_cast"]], "static_default_float_dtype() (in module ivy.container.container_methods)": [[353, "ivy.container.container_methods.static_default_float_dtype"], [355, "ivy.container.container_methods.static_default_float_dtype"]], "dtype() (in module ivy.container.container_methods)": [[358, "ivy.container.container_methods.dtype"], [359, "ivy.container.container_methods.dtype"]], "static_dtype() (in module ivy.container.container_methods)": [[358, "ivy.container.container_methods.static_dtype"], [361, "ivy.container.container_methods.static_dtype"]], "finfo() (in module ivy.array.array_methods)": [[363, "ivy.array.array_methods.finfo"], [364, "ivy.array.array_methods.finfo"]], "finfo() (in module ivy.container.container_methods)": [[363, "ivy.container.container_methods.finfo"], [365, "ivy.container.container_methods.finfo"]], "static_finfo() (in module ivy.container.container_methods)": [[363, "ivy.container.container_methods.static_finfo"], [367, "ivy.container.container_methods.static_finfo"]], "static_function_supported_dtypes() (in module ivy.container.container_methods)": [[368, "ivy.container.container_methods.static_function_supported_dtypes"], [370, "ivy.container.container_methods.static_function_supported_dtypes"]], "static_function_unsupported_dtypes() (in module ivy.container.container_methods)": [[371, "ivy.container.container_methods.static_function_unsupported_dtypes"], [373, "ivy.container.container_methods.static_function_unsupported_dtypes"]], "iinfo() (in module ivy.array.array_methods)": [[374, "ivy.array.array_methods.iinfo"], [375, "ivy.array.array_methods.iinfo"]], "iinfo() (in module ivy.container.container_methods)": [[374, "ivy.container.container_methods.iinfo"], [376, "ivy.container.container_methods.iinfo"]], "static_iinfo() (in module ivy.container.container_methods)": [[374, "ivy.container.container_methods.static_iinfo"], [378, "ivy.container.container_methods.static_iinfo"]], "is_bool_dtype() (in module ivy.array.array_methods)": [[381, "ivy.array.array_methods.is_bool_dtype"], [382, "ivy.array.array_methods.is_bool_dtype"]], "is_bool_dtype() (in module ivy.container.container_methods)": [[381, "ivy.container.container_methods.is_bool_dtype"], [383, "ivy.container.container_methods.is_bool_dtype"]], "static_is_bool_dtype() (in module ivy.container.container_methods)": [[381, "ivy.container.container_methods.static_is_bool_dtype"], [385, "ivy.container.container_methods.static_is_bool_dtype"]], "is_float_dtype() (in module ivy.array.array_methods)": [[386, "ivy.array.array_methods.is_float_dtype"], [387, "ivy.array.array_methods.is_float_dtype"]], "is_float_dtype() (in module ivy.container.container_methods)": [[386, "ivy.container.container_methods.is_float_dtype"], [388, "ivy.container.container_methods.is_float_dtype"]], "static_is_float_dtype() (in module ivy.container.container_methods)": [[386, "ivy.container.container_methods.static_is_float_dtype"], [390, "ivy.container.container_methods.static_is_float_dtype"]], "is_int_dtype() (in module ivy.array.array_methods)": [[391, "ivy.array.array_methods.is_int_dtype"], [392, "ivy.array.array_methods.is_int_dtype"]], "is_int_dtype() (in module ivy.container.container_methods)": [[391, "ivy.container.container_methods.is_int_dtype"], [393, "ivy.container.container_methods.is_int_dtype"]], "static_is_int_dtype() (in module ivy.container.container_methods)": [[391, "ivy.container.container_methods.static_is_int_dtype"], [395, "ivy.container.container_methods.static_is_int_dtype"]], "is_uint_dtype() (in module ivy.array.array_methods)": [[396, "ivy.array.array_methods.is_uint_dtype"], [397, "ivy.array.array_methods.is_uint_dtype"]], "is_uint_dtype() (in module ivy.container.container_methods)": [[396, "ivy.container.container_methods.is_uint_dtype"], [398, "ivy.container.container_methods.is_uint_dtype"]], "static_is_uint_dtype() (in module ivy.container.container_methods)": [[396, "ivy.container.container_methods.static_is_uint_dtype"], [400, "ivy.container.container_methods.static_is_uint_dtype"]], "result_type() (in module ivy.array.array_methods)": [[403, "ivy.array.array_methods.result_type"], [404, "ivy.array.array_methods.result_type"]], "result_type() (in module ivy.container.container_methods)": [[403, "ivy.container.container_methods.result_type"], [405, "ivy.container.container_methods.result_type"]], "static_result_type() (in module ivy.container.container_methods)": [[403, "ivy.container.container_methods.static_result_type"], [407, "ivy.container.container_methods.static_result_type"]], "defaultdevice (class in ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.DefaultDevice"], [419, "ivy.functional.ivy.device.DefaultDevice"]], "profiler (class in ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.Profiler"], [420, "ivy.functional.ivy.device.Profiler"]], "__enter__() (ivy.functional.ivy.device.defaultdevice method)": [[418, "ivy.functional.ivy.device.DefaultDevice.__enter__"], [419, "ivy.functional.ivy.device.DefaultDevice.__enter__"]], "__exit__() (ivy.functional.ivy.device.defaultdevice method)": [[418, "ivy.functional.ivy.device.DefaultDevice.__exit__"], [419, "ivy.functional.ivy.device.DefaultDevice.__exit__"]], "__init__() (ivy.functional.ivy.device.defaultdevice method)": [[418, "ivy.functional.ivy.device.DefaultDevice.__init__"], [419, "ivy.functional.ivy.device.DefaultDevice.__init__"]], "__init__() (ivy.functional.ivy.device.profiler method)": [[418, "ivy.functional.ivy.device.Profiler.__init__"], [420, "ivy.functional.ivy.device.Profiler.__init__"]], "as_ivy_dev() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.as_ivy_dev"], [421, "ivy.functional.ivy.device.as_ivy_dev"]], "as_native_dev() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.as_native_dev"], [422, "ivy.functional.ivy.device.as_native_dev"]], "clear_mem_on_dev() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.clear_mem_on_dev"], [423, "ivy.functional.ivy.device.clear_mem_on_dev"]], "default_device() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.default_device"], [424, "ivy.functional.ivy.device.default_device"]], "dev() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.dev"], [425, "ivy.functional.ivy.device.dev"], [428, "ivy.functional.ivy.device.dev"]], "dev_util() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.dev_util"], [430, "ivy.functional.ivy.device.dev_util"]], "function_supported_devices() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.function_supported_devices"], [431, "ivy.functional.ivy.device.function_supported_devices"]], "function_unsupported_devices() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.function_unsupported_devices"], [432, "ivy.functional.ivy.device.function_unsupported_devices"]], "get_all_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.get_all_ivy_arrays_on_dev"], [433, "ivy.functional.ivy.device.get_all_ivy_arrays_on_dev"]], "gpu_is_available() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.gpu_is_available"], [434, "ivy.functional.ivy.device.gpu_is_available"]], "ivy.functional.ivy.device": [[418, "module-ivy.functional.ivy.device"]], "num_cpu_cores() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.num_cpu_cores"], [435, "ivy.functional.ivy.device.num_cpu_cores"]], "num_gpus() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.num_gpus"], [436, "ivy.functional.ivy.device.num_gpus"]], "num_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.num_ivy_arrays_on_dev"], [437, "ivy.functional.ivy.device.num_ivy_arrays_on_dev"]], "percent_used_mem_on_dev() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.percent_used_mem_on_dev"], [438, "ivy.functional.ivy.device.percent_used_mem_on_dev"]], "print_all_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.print_all_ivy_arrays_on_dev"], [439, "ivy.functional.ivy.device.print_all_ivy_arrays_on_dev"]], "set_default_device() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.set_default_device"], [440, "ivy.functional.ivy.device.set_default_device"]], "set_split_factor() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.set_split_factor"], [441, "ivy.functional.ivy.device.set_split_factor"]], "split_factor() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.split_factor"], [442, "ivy.functional.ivy.device.split_factor"]], "split_func_call() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.split_func_call"], [443, "ivy.functional.ivy.device.split_func_call"]], "start() (ivy.functional.ivy.device.profiler method)": [[418, "ivy.functional.ivy.device.Profiler.start"], [420, "ivy.functional.ivy.device.Profiler.start"]], "stop() (ivy.functional.ivy.device.profiler method)": [[418, "ivy.functional.ivy.device.Profiler.stop"], [420, "ivy.functional.ivy.device.Profiler.stop"]], "to_device() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.to_device"], [444, "ivy.functional.ivy.device.to_device"], [448, "ivy.functional.ivy.device.to_device"]], "total_mem_on_dev() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.total_mem_on_dev"], [449, "ivy.functional.ivy.device.total_mem_on_dev"]], "tpu_is_available() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.tpu_is_available"], [450, "ivy.functional.ivy.device.tpu_is_available"]], "unset_default_device() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.unset_default_device"], [451, "ivy.functional.ivy.device.unset_default_device"]], "used_mem_on_dev() (in module ivy.functional.ivy.device)": [[418, "ivy.functional.ivy.device.used_mem_on_dev"], [452, "ivy.functional.ivy.device.used_mem_on_dev"]], "dev() (in module ivy.array.array_methods)": [[425, "ivy.array.array_methods.dev"], [426, "ivy.array.array_methods.dev"]], "dev() (in module ivy.container.container_methods)": [[425, "ivy.container.container_methods.dev"], [427, "ivy.container.container_methods.dev"]], "static_dev() (in module ivy.container.container_methods)": [[425, "ivy.container.container_methods.static_dev"], [429, "ivy.container.container_methods.static_dev"]], "static_to_device() (in module ivy.container.container_methods)": [[444, "ivy.container.container_methods.static_to_device"], [445, "ivy.container.container_methods.static_to_device"]], "to_device() (in module ivy.array.array_methods)": [[444, "ivy.array.array_methods.to_device"], [446, "ivy.array.array_methods.to_device"]], "to_device() (in module ivy.container.container_methods)": [[444, "ivy.container.container_methods.to_device"], [447, "ivy.container.container_methods.to_device"]], "abs() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.abs"], [454, "ivy.functional.ivy.elementwise.abs"], [457, "ivy.functional.ivy.elementwise.abs"]], "acos() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.acos"], [459, "ivy.functional.ivy.elementwise.acos"], [462, "ivy.functional.ivy.elementwise.acos"]], "acosh() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.acosh"], [464, "ivy.functional.ivy.elementwise.acosh"], [467, "ivy.functional.ivy.elementwise.acosh"]], "add() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.add"], [469, "ivy.functional.ivy.elementwise.add"], [472, "ivy.functional.ivy.elementwise.add"]], "asin() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.asin"], [474, "ivy.functional.ivy.elementwise.asin"], [477, "ivy.functional.ivy.elementwise.asin"]], "asinh() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.asinh"], [479, "ivy.functional.ivy.elementwise.asinh"], [482, "ivy.functional.ivy.elementwise.asinh"]], "atan() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.atan"], [484, "ivy.functional.ivy.elementwise.atan"], [487, "ivy.functional.ivy.elementwise.atan"]], "atan2() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.atan2"], [489, "ivy.functional.ivy.elementwise.atan2"], [492, "ivy.functional.ivy.elementwise.atan2"]], "atanh() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.atanh"], [494, "ivy.functional.ivy.elementwise.atanh"], [497, "ivy.functional.ivy.elementwise.atanh"]], "bitwise_and() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.bitwise_and"], [499, "ivy.functional.ivy.elementwise.bitwise_and"], [502, "ivy.functional.ivy.elementwise.bitwise_and"]], "bitwise_invert() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.bitwise_invert"], [504, "ivy.functional.ivy.elementwise.bitwise_invert"], [507, "ivy.functional.ivy.elementwise.bitwise_invert"]], "bitwise_left_shift() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.bitwise_left_shift"], [509, "ivy.functional.ivy.elementwise.bitwise_left_shift"], [512, "ivy.functional.ivy.elementwise.bitwise_left_shift"]], "bitwise_or() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.bitwise_or"], [514, "ivy.functional.ivy.elementwise.bitwise_or"], [517, "ivy.functional.ivy.elementwise.bitwise_or"]], "bitwise_right_shift() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.bitwise_right_shift"], [519, "ivy.functional.ivy.elementwise.bitwise_right_shift"], [522, "ivy.functional.ivy.elementwise.bitwise_right_shift"]], "bitwise_xor() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.bitwise_xor"], [524, "ivy.functional.ivy.elementwise.bitwise_xor"], [527, "ivy.functional.ivy.elementwise.bitwise_xor"]], "ceil() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.ceil"], [529, "ivy.functional.ivy.elementwise.ceil"], [532, "ivy.functional.ivy.elementwise.ceil"]], "cos() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.cos"], [534, "ivy.functional.ivy.elementwise.cos"], [537, "ivy.functional.ivy.elementwise.cos"]], "cosh() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.cosh"], [539, "ivy.functional.ivy.elementwise.cosh"], [542, "ivy.functional.ivy.elementwise.cosh"]], "deg2rad() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.deg2rad"], [544, "ivy.functional.ivy.elementwise.deg2rad"], [547, "ivy.functional.ivy.elementwise.deg2rad"]], "divide() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.divide"], [549, "ivy.functional.ivy.elementwise.divide"], [552, "ivy.functional.ivy.elementwise.divide"]], "equal() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.equal"], [554, "ivy.functional.ivy.elementwise.equal"], [557, "ivy.functional.ivy.elementwise.equal"]], "erf() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.erf"], [559, "ivy.functional.ivy.elementwise.erf"], [562, "ivy.functional.ivy.elementwise.erf"]], "exp() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.exp"], [564, "ivy.functional.ivy.elementwise.exp"], [567, "ivy.functional.ivy.elementwise.exp"]], "expm1() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.expm1"], [569, "ivy.functional.ivy.elementwise.expm1"], [572, "ivy.functional.ivy.elementwise.expm1"]], "floor() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.floor"], [574, "ivy.functional.ivy.elementwise.floor"], [577, "ivy.functional.ivy.elementwise.floor"]], "floor_divide() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.floor_divide"], [579, "ivy.functional.ivy.elementwise.floor_divide"], [582, "ivy.functional.ivy.elementwise.floor_divide"]], "greater() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.greater"], [584, "ivy.functional.ivy.elementwise.greater"], [587, "ivy.functional.ivy.elementwise.greater"]], "greater_equal() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.greater_equal"], [589, "ivy.functional.ivy.elementwise.greater_equal"], [592, "ivy.functional.ivy.elementwise.greater_equal"]], "isfinite() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.isfinite"], [594, "ivy.functional.ivy.elementwise.isfinite"], [597, "ivy.functional.ivy.elementwise.isfinite"]], "isinf() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.isinf"], [599, "ivy.functional.ivy.elementwise.isinf"], [602, "ivy.functional.ivy.elementwise.isinf"]], "isnan() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.isnan"], [604, "ivy.functional.ivy.elementwise.isnan"], [607, "ivy.functional.ivy.elementwise.isnan"]], "isreal() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.isreal"], [609, "ivy.functional.ivy.elementwise.isreal"], [612, "ivy.functional.ivy.elementwise.isreal"]], "ivy.functional.ivy.elementwise": [[453, "module-ivy.functional.ivy.elementwise"]], "less() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.less"], [614, "ivy.functional.ivy.elementwise.less"], [617, "ivy.functional.ivy.elementwise.less"]], "less_equal() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.less_equal"], [619, "ivy.functional.ivy.elementwise.less_equal"], [622, "ivy.functional.ivy.elementwise.less_equal"]], "log() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.log"], [624, "ivy.functional.ivy.elementwise.log"], [627, "ivy.functional.ivy.elementwise.log"]], "log10() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.log10"], [629, "ivy.functional.ivy.elementwise.log10"], [632, "ivy.functional.ivy.elementwise.log10"]], "log1p() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.log1p"], [634, "ivy.functional.ivy.elementwise.log1p"], [637, "ivy.functional.ivy.elementwise.log1p"]], "log2() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.log2"], [639, "ivy.functional.ivy.elementwise.log2"], [642, "ivy.functional.ivy.elementwise.log2"]], "logaddexp() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.logaddexp"], [644, "ivy.functional.ivy.elementwise.logaddexp"], [647, "ivy.functional.ivy.elementwise.logaddexp"]], "logical_and() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.logical_and"], [649, "ivy.functional.ivy.elementwise.logical_and"], [652, "ivy.functional.ivy.elementwise.logical_and"]], "logical_not() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.logical_not"], [654, "ivy.functional.ivy.elementwise.logical_not"], [657, "ivy.functional.ivy.elementwise.logical_not"]], "logical_or() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.logical_or"], [659, "ivy.functional.ivy.elementwise.logical_or"], [662, "ivy.functional.ivy.elementwise.logical_or"]], "logical_xor() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.logical_xor"], [664, "ivy.functional.ivy.elementwise.logical_xor"], [667, "ivy.functional.ivy.elementwise.logical_xor"]], "maximum() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.maximum"], [669, "ivy.functional.ivy.elementwise.maximum"], [672, "ivy.functional.ivy.elementwise.maximum"]], "minimum() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.minimum"], [674, "ivy.functional.ivy.elementwise.minimum"], [677, "ivy.functional.ivy.elementwise.minimum"]], "multiply() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.multiply"], [679, "ivy.functional.ivy.elementwise.multiply"], [682, "ivy.functional.ivy.elementwise.multiply"]], "negative() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.negative"], [684, "ivy.functional.ivy.elementwise.negative"], [687, "ivy.functional.ivy.elementwise.negative"]], "not_equal() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.not_equal"], [689, "ivy.functional.ivy.elementwise.not_equal"], [692, "ivy.functional.ivy.elementwise.not_equal"]], "positive() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.positive"], [694, "ivy.functional.ivy.elementwise.positive"], [697, "ivy.functional.ivy.elementwise.positive"]], "pow() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.pow"], [699, "ivy.functional.ivy.elementwise.pow"], [702, "ivy.functional.ivy.elementwise.pow"]], "rad2deg() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.rad2deg"], [704, "ivy.functional.ivy.elementwise.rad2deg"], [707, "ivy.functional.ivy.elementwise.rad2deg"]], "reciprocal() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.reciprocal"], [709, "ivy.functional.ivy.elementwise.reciprocal"], [712, "ivy.functional.ivy.elementwise.reciprocal"]], "remainder() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.remainder"], [714, "ivy.functional.ivy.elementwise.remainder"], [717, "ivy.functional.ivy.elementwise.remainder"]], "round() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.round"], [719, "ivy.functional.ivy.elementwise.round"], [722, "ivy.functional.ivy.elementwise.round"]], "sign() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.sign"], [724, "ivy.functional.ivy.elementwise.sign"], [727, "ivy.functional.ivy.elementwise.sign"]], "sin() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.sin"], [729, "ivy.functional.ivy.elementwise.sin"], [732, "ivy.functional.ivy.elementwise.sin"]], "sinh() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.sinh"], [734, "ivy.functional.ivy.elementwise.sinh"], [737, "ivy.functional.ivy.elementwise.sinh"]], "sqrt() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.sqrt"], [739, "ivy.functional.ivy.elementwise.sqrt"], [742, "ivy.functional.ivy.elementwise.sqrt"]], "square() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.square"], [744, "ivy.functional.ivy.elementwise.square"], [747, "ivy.functional.ivy.elementwise.square"]], "subtract() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.subtract"], [749, "ivy.functional.ivy.elementwise.subtract"], [753, "ivy.functional.ivy.elementwise.subtract"]], "tan() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.tan"], [754, "ivy.functional.ivy.elementwise.tan"], [758, "ivy.functional.ivy.elementwise.tan"]], "tanh() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.tanh"], [759, "ivy.functional.ivy.elementwise.tanh"], [763, "ivy.functional.ivy.elementwise.tanh"]], "trunc() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.trunc"], [764, "ivy.functional.ivy.elementwise.trunc"], [768, "ivy.functional.ivy.elementwise.trunc"]], "trunc_divide() (in module ivy.functional.ivy.elementwise)": [[453, "ivy.functional.ivy.elementwise.trunc_divide"], [769, "ivy.functional.ivy.elementwise.trunc_divide"], [773, "ivy.functional.ivy.elementwise.trunc_divide"]], "abs() (in module ivy.array.array_methods)": [[454, "ivy.array.array_methods.abs"], [455, "ivy.array.array_methods.abs"]], "abs() (in module ivy.container.container_methods)": [[454, "ivy.container.container_methods.abs"], [456, "ivy.container.container_methods.abs"]], "static_abs() (in module ivy.container.container_methods)": [[454, "ivy.container.container_methods.static_abs"], [458, "ivy.container.container_methods.static_abs"]], "acos() (in module ivy.array.array_methods)": [[459, "ivy.array.array_methods.acos"], [460, "ivy.array.array_methods.acos"]], "acos() (in module ivy.container.container_methods)": [[459, "ivy.container.container_methods.acos"], [461, "ivy.container.container_methods.acos"]], "static_acos() (in module ivy.container.container_methods)": [[459, "ivy.container.container_methods.static_acos"], [463, "ivy.container.container_methods.static_acos"]], "acosh() (in module ivy.array.array_methods)": [[464, "ivy.array.array_methods.acosh"], [465, "ivy.array.array_methods.acosh"]], "acosh() (in module ivy.container.container_methods)": [[464, "ivy.container.container_methods.acosh"], [466, "ivy.container.container_methods.acosh"]], "static_acosh() (in module ivy.container.container_methods)": [[464, "ivy.container.container_methods.static_acosh"], [468, "ivy.container.container_methods.static_acosh"]], "add() (in module ivy.array.array_methods)": [[469, "ivy.array.array_methods.add"], [470, "ivy.array.array_methods.add"]], "add() (in module ivy.container.container_methods)": [[469, "ivy.container.container_methods.add"], [471, "ivy.container.container_methods.add"]], "static_add() (in module ivy.container.container_methods)": [[469, "ivy.container.container_methods.static_add"], [473, "ivy.container.container_methods.static_add"]], "asin() (in module ivy.array.array_methods)": [[474, "ivy.array.array_methods.asin"], [475, "ivy.array.array_methods.asin"]], "asin() (in module ivy.container.container_methods)": [[474, "ivy.container.container_methods.asin"], [476, "ivy.container.container_methods.asin"]], "static_asin() (in module ivy.container.container_methods)": [[474, "ivy.container.container_methods.static_asin"], [478, "ivy.container.container_methods.static_asin"]], "asinh() (in module ivy.array.array_methods)": [[479, "ivy.array.array_methods.asinh"], [480, "ivy.array.array_methods.asinh"]], "asinh() (in module ivy.container.container_methods)": [[479, "ivy.container.container_methods.asinh"], [481, "ivy.container.container_methods.asinh"]], "static_asinh() (in module ivy.container.container_methods)": [[479, "ivy.container.container_methods.static_asinh"], [483, "ivy.container.container_methods.static_asinh"]], "atan() (in module ivy.array.array_methods)": [[484, "ivy.array.array_methods.atan"], [485, "ivy.array.array_methods.atan"]], "atan() (in module ivy.container.container_methods)": [[484, "ivy.container.container_methods.atan"], [486, "ivy.container.container_methods.atan"]], "static_atan() (in module ivy.container.container_methods)": [[484, "ivy.container.container_methods.static_atan"], [488, "ivy.container.container_methods.static_atan"]], "atan2() (in module ivy.array.array_methods)": [[489, "ivy.array.array_methods.atan2"], [490, "ivy.array.array_methods.atan2"]], "atan2() (in module ivy.container.container_methods)": [[489, "ivy.container.container_methods.atan2"], [491, "ivy.container.container_methods.atan2"]], "static_atan2() (in module ivy.container.container_methods)": [[489, "ivy.container.container_methods.static_atan2"], [493, "ivy.container.container_methods.static_atan2"]], "atanh() (in module ivy.array.array_methods)": [[494, "ivy.array.array_methods.atanh"], [495, "ivy.array.array_methods.atanh"]], "atanh() (in module ivy.container.container_methods)": [[494, "ivy.container.container_methods.atanh"], [496, "ivy.container.container_methods.atanh"]], "static_atanh() (in module ivy.container.container_methods)": [[494, "ivy.container.container_methods.static_atanh"], [498, "ivy.container.container_methods.static_atanh"]], "bitwise_and() (in module ivy.array.array_methods)": [[499, "ivy.array.array_methods.bitwise_and"], [500, "ivy.array.array_methods.bitwise_and"]], "bitwise_and() (in module ivy.container.container_methods)": [[499, "ivy.container.container_methods.bitwise_and"], [501, "ivy.container.container_methods.bitwise_and"]], "static_bitwise_and() (in module ivy.container.container_methods)": [[499, "ivy.container.container_methods.static_bitwise_and"], [503, "ivy.container.container_methods.static_bitwise_and"]], "bitwise_invert() (in module ivy.array.array_methods)": [[504, "ivy.array.array_methods.bitwise_invert"], [505, "ivy.array.array_methods.bitwise_invert"]], "bitwise_invert() (in module ivy.container.container_methods)": [[504, "ivy.container.container_methods.bitwise_invert"], [506, "ivy.container.container_methods.bitwise_invert"]], "static_bitwise_invert() (in module ivy.container.container_methods)": [[504, "ivy.container.container_methods.static_bitwise_invert"], [508, "ivy.container.container_methods.static_bitwise_invert"]], "bitwise_left_shift() (in module ivy.array.array_methods)": [[509, "ivy.array.array_methods.bitwise_left_shift"], [510, "ivy.array.array_methods.bitwise_left_shift"]], "bitwise_left_shift() (in module ivy.container.container_methods)": [[509, "ivy.container.container_methods.bitwise_left_shift"], [511, "ivy.container.container_methods.bitwise_left_shift"]], "static_bitwise_left_shift() (in module ivy.container.container_methods)": [[509, "ivy.container.container_methods.static_bitwise_left_shift"], [513, "ivy.container.container_methods.static_bitwise_left_shift"]], "bitwise_or() (in module ivy.array.array_methods)": [[514, "ivy.array.array_methods.bitwise_or"], [515, "ivy.array.array_methods.bitwise_or"]], "bitwise_or() (in module ivy.container.container_methods)": [[514, "ivy.container.container_methods.bitwise_or"], [516, "ivy.container.container_methods.bitwise_or"]], "static_bitwise_or() (in module ivy.container.container_methods)": [[514, "ivy.container.container_methods.static_bitwise_or"], [518, "ivy.container.container_methods.static_bitwise_or"]], "bitwise_right_shift() (in module ivy.array.array_methods)": [[519, "ivy.array.array_methods.bitwise_right_shift"], [520, "ivy.array.array_methods.bitwise_right_shift"]], "bitwise_right_shift() (in module ivy.container.container_methods)": [[519, "ivy.container.container_methods.bitwise_right_shift"], [521, "ivy.container.container_methods.bitwise_right_shift"]], "static_bitwise_right_shift() (in module ivy.container.container_methods)": [[519, "ivy.container.container_methods.static_bitwise_right_shift"], [523, "ivy.container.container_methods.static_bitwise_right_shift"]], "bitwise_xor() (in module ivy.array.array_methods)": [[524, "ivy.array.array_methods.bitwise_xor"], [525, "ivy.array.array_methods.bitwise_xor"]], "bitwise_xor() (in module ivy.container.container_methods)": [[524, "ivy.container.container_methods.bitwise_xor"], [526, "ivy.container.container_methods.bitwise_xor"]], "static_bitwise_xor() (in module ivy.container.container_methods)": [[524, "ivy.container.container_methods.static_bitwise_xor"], [528, "ivy.container.container_methods.static_bitwise_xor"]], "ceil() (in module ivy.array.array_methods)": [[529, "ivy.array.array_methods.ceil"], [530, "ivy.array.array_methods.ceil"]], "ceil() (in module ivy.container.container_methods)": [[529, "ivy.container.container_methods.ceil"], [531, "ivy.container.container_methods.ceil"]], "static_ceil() (in module ivy.container.container_methods)": [[529, "ivy.container.container_methods.static_ceil"], [533, "ivy.container.container_methods.static_ceil"]], "cos() (in module ivy.array.array_methods)": [[534, "ivy.array.array_methods.cos"], [535, "ivy.array.array_methods.cos"]], "cos() (in module ivy.container.container_methods)": [[534, "ivy.container.container_methods.cos"], [536, "ivy.container.container_methods.cos"]], "static_cos() (in module ivy.container.container_methods)": [[534, "ivy.container.container_methods.static_cos"], [538, "ivy.container.container_methods.static_cos"]], "cosh() (in module ivy.array.array_methods)": [[539, "ivy.array.array_methods.cosh"], [540, "ivy.array.array_methods.cosh"]], "cosh() (in module ivy.container.container_methods)": [[539, "ivy.container.container_methods.cosh"], [541, "ivy.container.container_methods.cosh"]], "static_cosh() (in module ivy.container.container_methods)": [[539, "ivy.container.container_methods.static_cosh"], [543, "ivy.container.container_methods.static_cosh"]], "deg2rad() (in module ivy.array.array_methods)": [[544, "ivy.array.array_methods.deg2rad"], [545, "ivy.array.array_methods.deg2rad"]], "deg2rad() (in module ivy.container.container_methods)": [[544, "ivy.container.container_methods.deg2rad"], [546, "ivy.container.container_methods.deg2rad"]], "static_deg2rad() (in module ivy.container.container_methods)": [[544, "ivy.container.container_methods.static_deg2rad"], [548, "ivy.container.container_methods.static_deg2rad"]], "divide() (in module ivy.array.array_methods)": [[549, "ivy.array.array_methods.divide"], [550, "ivy.array.array_methods.divide"]], "divide() (in module ivy.container.container_methods)": [[549, "ivy.container.container_methods.divide"], [551, "ivy.container.container_methods.divide"]], "static_divide() (in module ivy.container.container_methods)": [[549, "ivy.container.container_methods.static_divide"], [553, "ivy.container.container_methods.static_divide"]], "equal() (in module ivy.array.array_methods)": [[554, "ivy.array.array_methods.equal"], [555, "ivy.array.array_methods.equal"]], "equal() (in module ivy.container.container_methods)": [[554, "ivy.container.container_methods.equal"], [556, "ivy.container.container_methods.equal"]], "static_equal() (in module ivy.container.container_methods)": [[554, "ivy.container.container_methods.static_equal"], [558, "ivy.container.container_methods.static_equal"]], "erf() (in module ivy.array.array_methods)": [[559, "ivy.array.array_methods.erf"], [560, "ivy.array.array_methods.erf"]], "erf() (in module ivy.container.container_methods)": [[559, "ivy.container.container_methods.erf"], [561, "ivy.container.container_methods.erf"]], "static_erf() (in module ivy.container.container_methods)": [[559, "ivy.container.container_methods.static_erf"], [563, "ivy.container.container_methods.static_erf"]], "exp() (in module ivy.array.array_methods)": [[564, "ivy.array.array_methods.exp"], [565, "ivy.array.array_methods.exp"]], "exp() (in module ivy.container.container_methods)": [[564, "ivy.container.container_methods.exp"], [566, "ivy.container.container_methods.exp"]], "static_exp() (in module ivy.container.container_methods)": [[564, "ivy.container.container_methods.static_exp"], [568, "ivy.container.container_methods.static_exp"]], "expm1() (in module ivy.array.array_methods)": [[569, "ivy.array.array_methods.expm1"], [570, "ivy.array.array_methods.expm1"]], "expm1() (in module ivy.container.container_methods)": [[569, "ivy.container.container_methods.expm1"], [571, "ivy.container.container_methods.expm1"]], "static_expm1() (in module ivy.container.container_methods)": [[569, "ivy.container.container_methods.static_expm1"], [573, "ivy.container.container_methods.static_expm1"]], "floor() (in module ivy.array.array_methods)": [[574, "ivy.array.array_methods.floor"], [575, "ivy.array.array_methods.floor"]], "floor() (in module ivy.container.container_methods)": [[574, "ivy.container.container_methods.floor"], [576, "ivy.container.container_methods.floor"]], "static_floor() (in module ivy.container.container_methods)": [[574, "ivy.container.container_methods.static_floor"], [578, "ivy.container.container_methods.static_floor"]], "floor_divide() (in module ivy.array.array_methods)": [[579, "ivy.array.array_methods.floor_divide"], [580, "ivy.array.array_methods.floor_divide"]], "floor_divide() (in module ivy.container.container_methods)": [[579, "ivy.container.container_methods.floor_divide"], [581, "ivy.container.container_methods.floor_divide"]], "static_floor_divide() (in module ivy.container.container_methods)": [[579, "ivy.container.container_methods.static_floor_divide"], [583, "ivy.container.container_methods.static_floor_divide"]], "greater() (in module ivy.array.array_methods)": [[584, "ivy.array.array_methods.greater"], [585, "ivy.array.array_methods.greater"]], "greater() (in module ivy.container.container_methods)": [[584, "ivy.container.container_methods.greater"], [586, "ivy.container.container_methods.greater"]], "static_greater() (in module ivy.container.container_methods)": [[584, "ivy.container.container_methods.static_greater"], [588, "ivy.container.container_methods.static_greater"]], "greater_equal() (in module ivy.array.array_methods)": [[589, "ivy.array.array_methods.greater_equal"], [590, "ivy.array.array_methods.greater_equal"]], "greater_equal() (in module ivy.container.container_methods)": [[589, "ivy.container.container_methods.greater_equal"], [591, "ivy.container.container_methods.greater_equal"]], "static_greater_equal() (in module ivy.container.container_methods)": [[589, "ivy.container.container_methods.static_greater_equal"], [593, "ivy.container.container_methods.static_greater_equal"]], "isfinite() (in module ivy.array.array_methods)": [[594, "ivy.array.array_methods.isfinite"], [595, "ivy.array.array_methods.isfinite"]], "isfinite() (in module ivy.container.container_methods)": [[594, "ivy.container.container_methods.isfinite"], [596, "ivy.container.container_methods.isfinite"]], "static_isfinite() (in module ivy.container.container_methods)": [[594, "ivy.container.container_methods.static_isfinite"], [598, "ivy.container.container_methods.static_isfinite"]], "isinf() (in module ivy.array.array_methods)": [[599, "ivy.array.array_methods.isinf"], [600, "ivy.array.array_methods.isinf"]], "isinf() (in module ivy.container.container_methods)": [[599, "ivy.container.container_methods.isinf"], [601, "ivy.container.container_methods.isinf"]], "static_isinf() (in module ivy.container.container_methods)": [[599, "ivy.container.container_methods.static_isinf"], [603, "ivy.container.container_methods.static_isinf"]], "isnan() (in module ivy.array.array_methods)": [[604, "ivy.array.array_methods.isnan"], [605, "ivy.array.array_methods.isnan"]], "isnan() (in module ivy.container.container_methods)": [[604, "ivy.container.container_methods.isnan"], [606, "ivy.container.container_methods.isnan"]], "static_isnan() (in module ivy.container.container_methods)": [[604, "ivy.container.container_methods.static_isnan"], [608, "ivy.container.container_methods.static_isnan"]], "isreal() (in module ivy.array.array_methods)": [[609, "ivy.array.array_methods.isreal"], [610, "ivy.array.array_methods.isreal"]], "isreal() (in module ivy.container.container_methods)": [[609, "ivy.container.container_methods.isreal"], [611, "ivy.container.container_methods.isreal"]], "static_isreal() (in module ivy.container.container_methods)": [[609, "ivy.container.container_methods.static_isreal"], [613, "ivy.container.container_methods.static_isreal"]], "less() (in module ivy.array.array_methods)": [[614, "ivy.array.array_methods.less"], [615, "ivy.array.array_methods.less"]], "less() (in module ivy.container.container_methods)": [[614, "ivy.container.container_methods.less"], [616, "ivy.container.container_methods.less"]], "static_less() (in module ivy.container.container_methods)": [[614, "ivy.container.container_methods.static_less"], [618, "ivy.container.container_methods.static_less"]], "less_equal() (in module ivy.array.array_methods)": [[619, "ivy.array.array_methods.less_equal"], [620, "ivy.array.array_methods.less_equal"]], "less_equal() (in module ivy.container.container_methods)": [[619, "ivy.container.container_methods.less_equal"], [621, "ivy.container.container_methods.less_equal"]], "static_less_equal() (in module ivy.container.container_methods)": [[619, "ivy.container.container_methods.static_less_equal"], [623, "ivy.container.container_methods.static_less_equal"]], "log() (in module ivy.array.array_methods)": [[624, "ivy.array.array_methods.log"], [625, "ivy.array.array_methods.log"]], "log() (in module ivy.container.container_methods)": [[624, "ivy.container.container_methods.log"], [626, "ivy.container.container_methods.log"]], "static_log() (in module ivy.container.container_methods)": [[624, "ivy.container.container_methods.static_log"], [628, "ivy.container.container_methods.static_log"]], "log10() (in module ivy.array.array_methods)": [[629, "ivy.array.array_methods.log10"], [630, "ivy.array.array_methods.log10"]], "log10() (in module ivy.container.container_methods)": [[629, "ivy.container.container_methods.log10"], [631, "ivy.container.container_methods.log10"]], "static_log10() (in module ivy.container.container_methods)": [[629, "ivy.container.container_methods.static_log10"], [633, "ivy.container.container_methods.static_log10"]], "log1p() (in module ivy.array.array_methods)": [[634, "ivy.array.array_methods.log1p"], [635, "ivy.array.array_methods.log1p"]], "log1p() (in module ivy.container.container_methods)": [[634, "ivy.container.container_methods.log1p"], [636, "ivy.container.container_methods.log1p"]], "static_log1p() (in module ivy.container.container_methods)": [[634, "ivy.container.container_methods.static_log1p"], [638, "ivy.container.container_methods.static_log1p"]], "log2() (in module ivy.array.array_methods)": [[639, "ivy.array.array_methods.log2"], [640, "ivy.array.array_methods.log2"]], "log2() (in module ivy.container.container_methods)": [[639, "ivy.container.container_methods.log2"], [641, "ivy.container.container_methods.log2"]], "static_log2() (in module ivy.container.container_methods)": [[639, "ivy.container.container_methods.static_log2"], [643, "ivy.container.container_methods.static_log2"]], "logaddexp() (in module ivy.array.array_methods)": [[644, "ivy.array.array_methods.logaddexp"], [645, "ivy.array.array_methods.logaddexp"]], "logaddexp() (in module ivy.container.container_methods)": [[644, "ivy.container.container_methods.logaddexp"], [646, "ivy.container.container_methods.logaddexp"]], "static_logaddexp() (in module ivy.container.container_methods)": [[644, "ivy.container.container_methods.static_logaddexp"], [648, "ivy.container.container_methods.static_logaddexp"]], "logical_and() (in module ivy.array.array_methods)": [[649, "ivy.array.array_methods.logical_and"], [650, "ivy.array.array_methods.logical_and"]], "logical_and() (in module ivy.container.container_methods)": [[649, "ivy.container.container_methods.logical_and"], [651, "ivy.container.container_methods.logical_and"]], "static_logical_and() (in module ivy.container.container_methods)": [[649, "ivy.container.container_methods.static_logical_and"], [653, "ivy.container.container_methods.static_logical_and"]], "logical_not() (in module ivy.array.array_methods)": [[654, "ivy.array.array_methods.logical_not"], [655, "ivy.array.array_methods.logical_not"]], "logical_not() (in module ivy.container.container_methods)": [[654, "ivy.container.container_methods.logical_not"], [656, "ivy.container.container_methods.logical_not"]], "static_logical_not() (in module ivy.container.container_methods)": [[654, "ivy.container.container_methods.static_logical_not"], [658, "ivy.container.container_methods.static_logical_not"]], "logical_or() (in module ivy.array.array_methods)": [[659, "ivy.array.array_methods.logical_or"], [660, "ivy.array.array_methods.logical_or"]], "logical_or() (in module ivy.container.container_methods)": [[659, "ivy.container.container_methods.logical_or"], [661, "ivy.container.container_methods.logical_or"]], "static_logical_or() (in module ivy.container.container_methods)": [[659, "ivy.container.container_methods.static_logical_or"], [663, "ivy.container.container_methods.static_logical_or"]], "logical_xor() (in module ivy.array.array_methods)": [[664, "ivy.array.array_methods.logical_xor"], [665, "ivy.array.array_methods.logical_xor"]], "logical_xor() (in module ivy.container.container_methods)": [[664, "ivy.container.container_methods.logical_xor"], [666, "ivy.container.container_methods.logical_xor"]], "static_logical_xor() (in module ivy.container.container_methods)": [[664, "ivy.container.container_methods.static_logical_xor"], [668, "ivy.container.container_methods.static_logical_xor"]], "maximum() (in module ivy.array.array_methods)": [[669, "ivy.array.array_methods.maximum"], [670, "ivy.array.array_methods.maximum"]], "maximum() (in module ivy.container.container_methods)": [[669, "ivy.container.container_methods.maximum"], [671, "ivy.container.container_methods.maximum"]], "static_maximum() (in module ivy.container.container_methods)": [[669, "ivy.container.container_methods.static_maximum"], [673, "ivy.container.container_methods.static_maximum"]], "minimum() (in module ivy.array.array_methods)": [[674, "ivy.array.array_methods.minimum"], [675, "ivy.array.array_methods.minimum"]], "minimum() (in module ivy.container.container_methods)": [[674, "ivy.container.container_methods.minimum"], [676, "ivy.container.container_methods.minimum"]], "static_minimum() (in module ivy.container.container_methods)": [[674, "ivy.container.container_methods.static_minimum"], [678, "ivy.container.container_methods.static_minimum"]], "multiply() (in module ivy.array.array_methods)": [[679, "ivy.array.array_methods.multiply"], [680, "ivy.array.array_methods.multiply"]], "multiply() (in module ivy.container.container_methods)": [[679, "ivy.container.container_methods.multiply"], [681, "ivy.container.container_methods.multiply"]], "static_multiply() (in module ivy.container.container_methods)": [[679, "ivy.container.container_methods.static_multiply"], [683, "ivy.container.container_methods.static_multiply"]], "negative() (in module ivy.array.array_methods)": [[684, "ivy.array.array_methods.negative"], [685, "ivy.array.array_methods.negative"]], "negative() (in module ivy.container.container_methods)": [[684, "ivy.container.container_methods.negative"], [686, "ivy.container.container_methods.negative"]], "static_negative() (in module ivy.container.container_methods)": [[684, "ivy.container.container_methods.static_negative"], [688, "ivy.container.container_methods.static_negative"]], "not_equal() (in module ivy.array.array_methods)": [[689, "ivy.array.array_methods.not_equal"], [690, "ivy.array.array_methods.not_equal"]], "not_equal() (in module ivy.container.container_methods)": [[689, "ivy.container.container_methods.not_equal"], [691, "ivy.container.container_methods.not_equal"]], "static_not_equal() (in module ivy.container.container_methods)": [[689, "ivy.container.container_methods.static_not_equal"], [693, "ivy.container.container_methods.static_not_equal"]], "positive() (in module ivy.array.array_methods)": [[694, "ivy.array.array_methods.positive"], [695, "ivy.array.array_methods.positive"]], "positive() (in module ivy.container.container_methods)": [[694, "ivy.container.container_methods.positive"], [696, "ivy.container.container_methods.positive"]], "static_positive() (in module ivy.container.container_methods)": [[694, "ivy.container.container_methods.static_positive"], [698, "ivy.container.container_methods.static_positive"]], "pow() (in module ivy.array.array_methods)": [[699, "ivy.array.array_methods.pow"], [700, "ivy.array.array_methods.pow"]], "pow() (in module ivy.container.container_methods)": [[699, "ivy.container.container_methods.pow"], [701, "ivy.container.container_methods.pow"]], "static_pow() (in module ivy.container.container_methods)": [[699, "ivy.container.container_methods.static_pow"], [703, "ivy.container.container_methods.static_pow"]], "rad2deg() (in module ivy.array.array_methods)": [[704, "ivy.array.array_methods.rad2deg"], [705, "ivy.array.array_methods.rad2deg"]], "rad2deg() (in module ivy.container.container_methods)": [[704, "ivy.container.container_methods.rad2deg"], [706, "ivy.container.container_methods.rad2deg"]], "static_rad2deg() (in module ivy.container.container_methods)": [[704, "ivy.container.container_methods.static_rad2deg"], [708, "ivy.container.container_methods.static_rad2deg"]], "reciprocal() (in module ivy.array.array_methods)": [[709, "ivy.array.array_methods.reciprocal"], [710, "ivy.array.array_methods.reciprocal"]], "reciprocal() (in module ivy.container.container_methods)": [[709, "ivy.container.container_methods.reciprocal"], [711, "ivy.container.container_methods.reciprocal"]], "static_reciprocal() (in module ivy.container.container_methods)": [[709, "ivy.container.container_methods.static_reciprocal"], [713, "ivy.container.container_methods.static_reciprocal"]], "remainder() (in module ivy.array.array_methods)": [[714, "ivy.array.array_methods.remainder"], [715, "ivy.array.array_methods.remainder"]], "remainder() (in module ivy.container.container_methods)": [[714, "ivy.container.container_methods.remainder"], [716, "ivy.container.container_methods.remainder"]], "static_remainder() (in module ivy.container.container_methods)": [[714, "ivy.container.container_methods.static_remainder"], [718, "ivy.container.container_methods.static_remainder"]], "round() (in module ivy.array.array_methods)": [[719, "ivy.array.array_methods.round"], [720, "ivy.array.array_methods.round"]], "round() (in module ivy.container.container_methods)": [[719, "ivy.container.container_methods.round"], [721, "ivy.container.container_methods.round"]], "static_round() (in module ivy.container.container_methods)": [[719, "ivy.container.container_methods.static_round"], [723, "ivy.container.container_methods.static_round"]], "sign() (in module ivy.array.array_methods)": [[724, "ivy.array.array_methods.sign"], [725, "ivy.array.array_methods.sign"]], "sign() (in module ivy.container.container_methods)": [[724, "ivy.container.container_methods.sign"], [726, "ivy.container.container_methods.sign"]], "static_sign() (in module ivy.container.container_methods)": [[724, "ivy.container.container_methods.static_sign"], [728, "ivy.container.container_methods.static_sign"]], "sin() (in module ivy.array.array_methods)": [[729, "ivy.array.array_methods.sin"], [730, "ivy.array.array_methods.sin"]], "sin() (in module ivy.container.container_methods)": [[729, "ivy.container.container_methods.sin"], [731, "ivy.container.container_methods.sin"]], "static_sin() (in module ivy.container.container_methods)": [[729, "ivy.container.container_methods.static_sin"], [733, "ivy.container.container_methods.static_sin"]], "sinh() (in module ivy.array.array_methods)": [[734, "ivy.array.array_methods.sinh"], [735, "ivy.array.array_methods.sinh"]], "sinh() (in module ivy.container.container_methods)": [[734, "ivy.container.container_methods.sinh"], [736, "ivy.container.container_methods.sinh"]], "static_sinh() (in module ivy.container.container_methods)": [[734, "ivy.container.container_methods.static_sinh"], [738, "ivy.container.container_methods.static_sinh"]], "sqrt() (in module ivy.array.array_methods)": [[739, "ivy.array.array_methods.sqrt"], [740, "ivy.array.array_methods.sqrt"]], "sqrt() (in module ivy.container.container_methods)": [[739, "ivy.container.container_methods.sqrt"], [741, "ivy.container.container_methods.sqrt"]], "static_sqrt() (in module ivy.container.container_methods)": [[739, "ivy.container.container_methods.static_sqrt"], [743, "ivy.container.container_methods.static_sqrt"]], "square() (in module ivy.array.array_methods)": [[744, "ivy.array.array_methods.square"], [745, "ivy.array.array_methods.square"]], "square() (in module ivy.container.container_methods)": [[744, "ivy.container.container_methods.square"], [746, "ivy.container.container_methods.square"]], "static_square() (in module ivy.container.container_methods)": [[744, "ivy.container.container_methods.static_square"], [748, "ivy.container.container_methods.static_square"]], "static_subtract() (in module ivy.container.container_methods)": [[749, "ivy.container.container_methods.static_subtract"], [750, "ivy.container.container_methods.static_subtract"]], "subtract() (in module ivy.array.array_methods)": [[749, "ivy.array.array_methods.subtract"], [751, "ivy.array.array_methods.subtract"]], "subtract() (in module ivy.container.container_methods)": [[749, "ivy.container.container_methods.subtract"], [752, "ivy.container.container_methods.subtract"]], "static_tan() (in module ivy.container.container_methods)": [[754, "ivy.container.container_methods.static_tan"], [755, "ivy.container.container_methods.static_tan"]], "tan() (in module ivy.array.array_methods)": [[754, "ivy.array.array_methods.tan"], [756, "ivy.array.array_methods.tan"]], "tan() (in module ivy.container.container_methods)": [[754, "ivy.container.container_methods.tan"], [757, "ivy.container.container_methods.tan"]], "static_tanh() (in module ivy.container.container_methods)": [[759, "ivy.container.container_methods.static_tanh"], [760, "ivy.container.container_methods.static_tanh"]], "tanh() (in module ivy.array.array_methods)": [[759, "ivy.array.array_methods.tanh"], [761, "ivy.array.array_methods.tanh"]], "tanh() (in module ivy.container.container_methods)": [[759, "ivy.container.container_methods.tanh"], [762, "ivy.container.container_methods.tanh"]], "static_trunc() (in module ivy.container.container_methods)": [[764, "ivy.container.container_methods.static_trunc"], [765, "ivy.container.container_methods.static_trunc"]], "trunc() (in module ivy.array.array_methods)": [[764, "ivy.array.array_methods.trunc"], [766, "ivy.array.array_methods.trunc"]], "trunc() (in module ivy.container.container_methods)": [[764, "ivy.container.container_methods.trunc"], [767, "ivy.container.container_methods.trunc"]], "static_trunc_divide() (in module ivy.container.container_methods)": [[769, "ivy.container.container_methods.static_trunc_divide"], [770, "ivy.container.container_methods.static_trunc_divide"]], "trunc_divide() (in module ivy.array.array_methods)": [[769, "ivy.array.array_methods.trunc_divide"], [771, "ivy.array.array_methods.trunc_divide"]], "trunc_divide() (in module ivy.container.container_methods)": [[769, "ivy.container.container_methods.trunc_divide"], [772, "ivy.container.container_methods.trunc_divide"]], "ivy.functional.ivy.experimental": [[774, "module-ivy.functional.ivy.experimental"]], "nativesparsearray (class in ivy.functional.ivy.experimental)": [[775, "ivy.functional.ivy.experimental.NativeSparseArray"]], "sparsearray (class in ivy.functional.ivy.experimental)": [[776, "ivy.functional.ivy.experimental.SparseArray"]], "__init__() (ivy.functional.ivy.experimental.sparsearray method)": [[776, "ivy.functional.ivy.experimental.SparseArray.__init__"]], "coo_indices (ivy.functional.ivy.experimental.sparsearray property)": [[776, "ivy.functional.ivy.experimental.SparseArray.coo_indices"]], "csc_ccol_indices (ivy.functional.ivy.experimental.sparsearray property)": [[776, "ivy.functional.ivy.experimental.SparseArray.csc_ccol_indices"]], "csc_row_indices (ivy.functional.ivy.experimental.sparsearray property)": [[776, "ivy.functional.ivy.experimental.SparseArray.csc_row_indices"]], "csr_col_indices (ivy.functional.ivy.experimental.sparsearray property)": [[776, "ivy.functional.ivy.experimental.SparseArray.csr_col_indices"]], "csr_crow_indices (ivy.functional.ivy.experimental.sparsearray property)": [[776, "ivy.functional.ivy.experimental.SparseArray.csr_crow_indices"]], "data (ivy.functional.ivy.experimental.sparsearray property)": [[776, "ivy.functional.ivy.experimental.SparseArray.data"]], "dense_shape (ivy.functional.ivy.experimental.sparsearray property)": [[776, "ivy.functional.ivy.experimental.SparseArray.dense_shape"]], "to_dense_array() (ivy.functional.ivy.experimental.sparsearray method)": [[776, "ivy.functional.ivy.experimental.SparseArray.to_dense_array"]], "values (ivy.functional.ivy.experimental.sparsearray property)": [[776, "ivy.functional.ivy.experimental.SparseArray.values"]], "ivy.functional.ivy.experimental.activations": [[777, "module-ivy.functional.ivy.experimental.activations"]], "logit() (in module ivy.functional.ivy.experimental.activations)": [[777, "ivy.functional.ivy.experimental.activations.logit"], [778, "ivy.functional.ivy.experimental.activations.logit"]], "allclose() (in module ivy.array.array_methods)": [[779, "ivy.array.array_methods.allclose"], [780, "ivy.array.array_methods.allclose"]], "allclose() (in module ivy.container.container_methods)": [[779, "ivy.container.container_methods.allclose"], [781, "ivy.container.container_methods.allclose"]], "allclose() (in module ivy.functional.ivy.experimental)": [[779, "ivy.functional.ivy.experimental.allclose"], [782, "ivy.functional.ivy.experimental.allclose"]], "static_allclose() (in module ivy.container.container_methods)": [[779, "ivy.container.container_methods.static_allclose"], [783, "ivy.container.container_methods.static_allclose"]], "angle() (in module ivy.array.array_methods)": [[784, "ivy.array.array_methods.angle"], [785, "ivy.array.array_methods.angle"]], "angle() (in module ivy.container.container_methods)": [[784, "ivy.container.container_methods.angle"], [786, "ivy.container.container_methods.angle"]], "angle() (in module ivy.functional.ivy.experimental)": [[784, "ivy.functional.ivy.experimental.angle"], [787, "ivy.functional.ivy.experimental.angle"]], "static_angle() (in module ivy.container.container_methods)": [[784, "ivy.container.container_methods.static_angle"], [788, "ivy.container.container_methods.static_angle"]], "atleast_1d() (in module ivy.array.array_methods)": [[789, "ivy.array.array_methods.atleast_1d"], [790, "ivy.array.array_methods.atleast_1d"]], "atleast_1d() (in module ivy.container.container_methods)": [[789, "ivy.container.container_methods.atleast_1d"], [791, "ivy.container.container_methods.atleast_1d"]], "atleast_1d() (in module ivy.functional.ivy.experimental)": [[789, "ivy.functional.ivy.experimental.atleast_1d"], [792, "ivy.functional.ivy.experimental.atleast_1d"]], "static_atleast_1d() (in module ivy.container.container_methods)": [[789, "ivy.container.container_methods.static_atleast_1d"], [793, "ivy.container.container_methods.static_atleast_1d"]], "atleast_2d() (in module ivy.array.array_methods)": [[794, "ivy.array.array_methods.atleast_2d"], [795, "ivy.array.array_methods.atleast_2d"]], "atleast_2d() (in module ivy.container.container_methods)": [[794, "ivy.container.container_methods.atleast_2d"], [796, "ivy.container.container_methods.atleast_2d"]], "atleast_2d() (in module ivy.functional.ivy.experimental)": [[794, "ivy.functional.ivy.experimental.atleast_2d"], [797, "ivy.functional.ivy.experimental.atleast_2d"]], "static_atleast_2d() (in module ivy.container.container_methods)": [[794, "ivy.container.container_methods.static_atleast_2d"], [798, "ivy.container.container_methods.static_atleast_2d"]], "atleast_3d() (in module ivy.array.array_methods)": [[799, "ivy.array.array_methods.atleast_3d"], [800, "ivy.array.array_methods.atleast_3d"]], "atleast_3d() (in module ivy.container.container_methods)": [[799, "ivy.container.container_methods.atleast_3d"], [801, "ivy.container.container_methods.atleast_3d"]], "atleast_3d() (in module ivy.functional.ivy.experimental)": [[799, "ivy.functional.ivy.experimental.atleast_3d"], [802, "ivy.functional.ivy.experimental.atleast_3d"]], "static_atleast_3d() (in module ivy.container.container_methods)": [[799, "ivy.container.container_methods.static_atleast_3d"], [803, "ivy.container.container_methods.static_atleast_3d"]], "avg_pool1d() (in module ivy.array.array_methods)": [[804, "ivy.array.array_methods.avg_pool1d"], [805, "ivy.array.array_methods.avg_pool1d"]], "avg_pool1d() (in module ivy.container.container_methods)": [[804, "ivy.container.container_methods.avg_pool1d"], [806, "ivy.container.container_methods.avg_pool1d"]], "avg_pool1d() (in module ivy.functional.ivy.experimental)": [[804, "ivy.functional.ivy.experimental.avg_pool1d"], [807, "ivy.functional.ivy.experimental.avg_pool1d"]], "static_avg_pool1d() (in module ivy.container.container_methods)": [[804, "ivy.container.container_methods.static_avg_pool1d"], [808, "ivy.container.container_methods.static_avg_pool1d"]], "avg_pool2d() (in module ivy.array.array_methods)": [[809, "ivy.array.array_methods.avg_pool2d"], [810, "ivy.array.array_methods.avg_pool2d"]], "avg_pool2d() (in module ivy.container.container_methods)": [[809, "ivy.container.container_methods.avg_pool2d"], [811, "ivy.container.container_methods.avg_pool2d"]], "avg_pool2d() (in module ivy.functional.ivy.experimental)": [[809, "ivy.functional.ivy.experimental.avg_pool2d"], [812, "ivy.functional.ivy.experimental.avg_pool2d"]], "static_avg_pool2d() (in module ivy.container.container_methods)": [[809, "ivy.container.container_methods.static_avg_pool2d"], [813, "ivy.container.container_methods.static_avg_pool2d"]], "avg_pool3d() (in module ivy.array.array_methods)": [[814, "ivy.array.array_methods.avg_pool3d"], [815, "ivy.array.array_methods.avg_pool3d"]], "avg_pool3d() (in module ivy.container.container_methods)": [[814, "ivy.container.container_methods.avg_pool3d"], [816, "ivy.container.container_methods.avg_pool3d"]], "avg_pool3d() (in module ivy.functional.ivy.experimental)": [[814, "ivy.functional.ivy.experimental.avg_pool3d"], [817, "ivy.functional.ivy.experimental.avg_pool3d"]], "static_avg_pool3d() (in module ivy.container.container_methods)": [[814, "ivy.container.container_methods.static_avg_pool3d"], [818, "ivy.container.container_methods.static_avg_pool3d"]], "beta() (in module ivy.array.array_methods)": [[819, "ivy.array.array_methods.beta"], [820, "ivy.array.array_methods.beta"]], "beta() (in module ivy.container.container_methods)": [[819, "ivy.container.container_methods.beta"], [821, "ivy.container.container_methods.beta"]], "beta() (in module ivy.functional.ivy.experimental)": [[819, "ivy.functional.ivy.experimental.beta"], [822, "ivy.functional.ivy.experimental.beta"]], "static_beta() (in module ivy.container.container_methods)": [[819, "ivy.container.container_methods.static_beta"], [823, "ivy.container.container_methods.static_beta"]], "binary_cross_entropy_with_logits() (in module ivy.container.container_methods)": [[824, "ivy.container.container_methods.binary_cross_entropy_with_logits"], [825, "ivy.container.container_methods.binary_cross_entropy_with_logits"]], "binary_cross_entropy_with_logits() (in module ivy.functional.ivy.experimental)": [[824, "ivy.functional.ivy.experimental.binary_cross_entropy_with_logits"], [826, "ivy.functional.ivy.experimental.binary_cross_entropy_with_logits"]], "static_binary_cross_entropy_with_logits() (in module ivy.container.container_methods)": [[824, "ivy.container.container_methods.static_binary_cross_entropy_with_logits"], [827, "ivy.container.container_methods.static_binary_cross_entropy_with_logits"]], "broadcast_shapes() (in module ivy.container.container_methods)": [[828, "ivy.container.container_methods.broadcast_shapes"], [829, "ivy.container.container_methods.broadcast_shapes"]], "broadcast_shapes() (in module ivy.functional.ivy.experimental)": [[828, "ivy.functional.ivy.experimental.broadcast_shapes"], [830, "ivy.functional.ivy.experimental.broadcast_shapes"]], "static_broadcast_shapes() (in module ivy.container.container_methods)": [[828, "ivy.container.container_methods.static_broadcast_shapes"], [831, "ivy.container.container_methods.static_broadcast_shapes"]], "ivy.functional.ivy.experimental.compilation": [[832, "module-ivy.functional.ivy.experimental.compilation"]], "ivy.functional.ivy.experimental.constants": [[833, "module-ivy.functional.ivy.experimental.constants"]], "copysign() (in module ivy.array.array_methods)": [[834, "ivy.array.array_methods.copysign"], [835, "ivy.array.array_methods.copysign"]], "copysign() (in module ivy.container.container_methods)": [[834, "ivy.container.container_methods.copysign"], [836, "ivy.container.container_methods.copysign"]], "copysign() (in module ivy.functional.ivy.experimental)": [[834, "ivy.functional.ivy.experimental.copysign"], [837, "ivy.functional.ivy.experimental.copysign"]], "static_copysign() (in module ivy.container.container_methods)": [[834, "ivy.container.container_methods.static_copysign"], [838, "ivy.container.container_methods.static_copysign"]], "count_nonzero() (in module ivy.array.array_methods)": [[839, "ivy.array.array_methods.count_nonzero"], [840, "ivy.array.array_methods.count_nonzero"]], "count_nonzero() (in module ivy.container.container_methods)": [[839, "ivy.container.container_methods.count_nonzero"], [841, "ivy.container.container_methods.count_nonzero"]], "count_nonzero() (in module ivy.functional.ivy.experimental)": [[839, "ivy.functional.ivy.experimental.count_nonzero"], [842, "ivy.functional.ivy.experimental.count_nonzero"]], "static_count_nonzero() (in module ivy.container.container_methods)": [[839, "ivy.container.container_methods.static_count_nonzero"], [843, "ivy.container.container_methods.static_count_nonzero"]], "hamming_window() (in module ivy.functional.ivy.experimental.creation)": [[844, "ivy.functional.ivy.experimental.creation.hamming_window"], [845, "ivy.functional.ivy.experimental.creation.hamming_window"]], "hann_window() (in module ivy.functional.ivy.experimental.creation)": [[844, "ivy.functional.ivy.experimental.creation.hann_window"], [846, "ivy.functional.ivy.experimental.creation.hann_window"]], "ivy.functional.ivy.experimental.creation": [[844, "module-ivy.functional.ivy.experimental.creation"]], "kaiser_bessel_derived_window() (in module ivy.functional.ivy.experimental.creation)": [[844, "ivy.functional.ivy.experimental.creation.kaiser_bessel_derived_window"], [847, "ivy.functional.ivy.experimental.creation.kaiser_bessel_derived_window"]], "kaiser_window() (in module ivy.functional.ivy.experimental.creation)": [[844, "ivy.functional.ivy.experimental.creation.kaiser_window"], [848, "ivy.functional.ivy.experimental.creation.kaiser_window"]], "tril_indices() (in module ivy.functional.ivy.experimental.creation)": [[844, "ivy.functional.ivy.experimental.creation.tril_indices"], [849, "ivy.functional.ivy.experimental.creation.tril_indices"]], "triu_indices() (in module ivy.functional.ivy.experimental.creation)": [[844, "ivy.functional.ivy.experimental.creation.triu_indices"], [850, "ivy.functional.ivy.experimental.creation.triu_indices"]], "vorbis_window() (in module ivy.functional.ivy.experimental.creation)": [[844, "ivy.functional.ivy.experimental.creation.vorbis_window"], [851, "ivy.functional.ivy.experimental.creation.vorbis_window"]], "is_native_dtype() (in module ivy.functional.ivy.experimental.data_type)": [[852, "ivy.functional.ivy.experimental.data_type.is_native_dtype"], [853, "ivy.functional.ivy.experimental.data_type.is_native_dtype"]], "ivy.functional.ivy.experimental.data_type": [[852, "module-ivy.functional.ivy.experimental.data_type"]], "dct() (in module ivy.array.array_methods)": [[854, "ivy.array.array_methods.dct"], [855, "ivy.array.array_methods.dct"]], "dct() (in module ivy.container.container_methods)": [[854, "ivy.container.container_methods.dct"], [856, "ivy.container.container_methods.dct"]], "dct() (in module ivy.functional.ivy.experimental)": [[854, "ivy.functional.ivy.experimental.dct"], [857, "ivy.functional.ivy.experimental.dct"]], "static_dct() (in module ivy.container.container_methods)": [[854, "ivy.container.container_methods.static_dct"], [858, "ivy.container.container_methods.static_dct"]], "ivy.functional.ivy.experimental.device": [[859, "module-ivy.functional.ivy.experimental.device"]], "diagflat() (in module ivy.array.array_methods)": [[860, "ivy.array.array_methods.diagflat"], [861, "ivy.array.array_methods.diagflat"]], "diagflat() (in module ivy.container.container_methods)": [[860, "ivy.container.container_methods.diagflat"], [862, "ivy.container.container_methods.diagflat"]], "diagflat() (in module ivy.functional.ivy.experimental)": [[860, "ivy.functional.ivy.experimental.diagflat"], [863, "ivy.functional.ivy.experimental.diagflat"]], "static_diagflat() (in module ivy.container.container_methods)": [[860, "ivy.container.container_methods.static_diagflat"], [864, "ivy.container.container_methods.static_diagflat"]], "diff() (in module ivy.array.array_methods)": [[865, "ivy.array.array_methods.diff"], [866, "ivy.array.array_methods.diff"]], "diff() (in module ivy.container.container_methods)": [[865, "ivy.container.container_methods.diff"], [867, "ivy.container.container_methods.diff"]], "diff() (in module ivy.functional.ivy.experimental)": [[865, "ivy.functional.ivy.experimental.diff"], [868, "ivy.functional.ivy.experimental.diff"]], "static_diff() (in module ivy.container.container_methods)": [[865, "ivy.container.container_methods.static_diff"], [869, "ivy.container.container_methods.static_diff"]], "dirichlet() (in module ivy.array.array_methods)": [[870, "ivy.array.array_methods.dirichlet"], [871, "ivy.array.array_methods.dirichlet"]], "dirichlet() (in module ivy.container.container_methods)": [[870, "ivy.container.container_methods.dirichlet"], [872, "ivy.container.container_methods.dirichlet"]], "dirichlet() (in module ivy.functional.ivy.experimental)": [[870, "ivy.functional.ivy.experimental.dirichlet"], [873, "ivy.functional.ivy.experimental.dirichlet"]], "static_dirichlet() (in module ivy.container.container_methods)": [[870, "ivy.container.container_methods.static_dirichlet"], [874, "ivy.container.container_methods.static_dirichlet"]], "dropout1d() (in module ivy.functional.ivy.experimental)": [[875, "ivy.functional.ivy.experimental.dropout1d"]], "dsplit() (in module ivy.array.array_methods)": [[876, "ivy.array.array_methods.dsplit"], [877, "ivy.array.array_methods.dsplit"]], "dsplit() (in module ivy.container.container_methods)": [[876, "ivy.container.container_methods.dsplit"], [878, "ivy.container.container_methods.dsplit"]], "dsplit() (in module ivy.functional.ivy.experimental)": [[876, "ivy.functional.ivy.experimental.dsplit"], [879, "ivy.functional.ivy.experimental.dsplit"]], "static_dsplit() (in module ivy.container.container_methods)": [[876, "ivy.container.container_methods.static_dsplit"], [880, "ivy.container.container_methods.static_dsplit"]], "dstack() (in module ivy.array.array_methods)": [[881, "ivy.array.array_methods.dstack"], [882, "ivy.array.array_methods.dstack"]], "dstack() (in module ivy.container.container_methods)": [[881, "ivy.container.container_methods.dstack"], [883, "ivy.container.container_methods.dstack"]], "dstack() (in module ivy.functional.ivy.experimental)": [[881, "ivy.functional.ivy.experimental.dstack"], [884, "ivy.functional.ivy.experimental.dstack"]], "static_dstack() (in module ivy.container.container_methods)": [[881, "ivy.container.container_methods.static_dstack"], [885, "ivy.container.container_methods.static_dstack"]], "eig() (in module ivy.array.array_methods)": [[886, "ivy.array.array_methods.eig"], [887, "ivy.array.array_methods.eig"]], "eig() (in module ivy.container.container_methods)": [[886, "ivy.container.container_methods.eig"], [888, "ivy.container.container_methods.eig"]], "eig() (in module ivy.functional.ivy.experimental)": [[886, "ivy.functional.ivy.experimental.eig"], [889, "ivy.functional.ivy.experimental.eig"]], "static_eig() (in module ivy.container.container_methods)": [[886, "ivy.container.container_methods.static_eig"], [890, "ivy.container.container_methods.static_eig"]], "allclose() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.allclose"], [892, "ivy.functional.ivy.experimental.elementwise.allclose"]], "angle() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.angle"], [893, "ivy.functional.ivy.experimental.elementwise.angle"]], "copysign() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.copysign"], [894, "ivy.functional.ivy.experimental.elementwise.copysign"]], "count_nonzero() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.count_nonzero"], [895, "ivy.functional.ivy.experimental.elementwise.count_nonzero"]], "diff() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.diff"], [896, "ivy.functional.ivy.experimental.elementwise.diff"]], "exp2() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.exp2"], [897, "ivy.functional.ivy.experimental.elementwise.exp2"]], "fix() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.fix"], [898, "ivy.functional.ivy.experimental.elementwise.fix"]], "float_power() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.float_power"], [899, "ivy.functional.ivy.experimental.elementwise.float_power"]], "fmax() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.fmax"], [900, "ivy.functional.ivy.experimental.elementwise.fmax"]], "fmod() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.fmod"], [901, "ivy.functional.ivy.experimental.elementwise.fmod"]], "gcd() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.gcd"], [902, "ivy.functional.ivy.experimental.elementwise.gcd"]], "gradient() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.gradient"], [903, "ivy.functional.ivy.experimental.elementwise.gradient"]], "isclose() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.isclose"], [904, "ivy.functional.ivy.experimental.elementwise.isclose"]], "isneginf() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.isneginf"], [905, "ivy.functional.ivy.experimental.elementwise.isneginf"]], "isposinf() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.isposinf"], [906, "ivy.functional.ivy.experimental.elementwise.isposinf"]], "ivy.functional.ivy.experimental.elementwise": [[891, "module-ivy.functional.ivy.experimental.elementwise"]], "lcm() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.lcm"], [907, "ivy.functional.ivy.experimental.elementwise.lcm"]], "logaddexp2() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.logaddexp2"], [908, "ivy.functional.ivy.experimental.elementwise.logaddexp2"]], "nan_to_num() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.nan_to_num"], [909, "ivy.functional.ivy.experimental.elementwise.nan_to_num"]], "nansum() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.nansum"], [910, "ivy.functional.ivy.experimental.elementwise.nansum"]], "nextafter() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.nextafter"], [911, "ivy.functional.ivy.experimental.elementwise.nextafter"]], "signbit() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.signbit"], [912, "ivy.functional.ivy.experimental.elementwise.signbit"]], "sinc() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.sinc"], [913, "ivy.functional.ivy.experimental.elementwise.sinc"]], "trapz() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.trapz"], [914, "ivy.functional.ivy.experimental.elementwise.trapz"]], "xlogy() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.xlogy"], [915, "ivy.functional.ivy.experimental.elementwise.xlogy"]], "zeta() (in module ivy.functional.ivy.experimental.elementwise)": [[891, "ivy.functional.ivy.experimental.elementwise.zeta"], [916, "ivy.functional.ivy.experimental.elementwise.zeta"]], "exp2() (in module ivy.array.array_methods)": [[917, "ivy.array.array_methods.exp2"], [918, "ivy.array.array_methods.exp2"]], "exp2() (in module ivy.container.container_methods)": [[917, "ivy.container.container_methods.exp2"], [919, "ivy.container.container_methods.exp2"]], "exp2() (in module ivy.functional.ivy.experimental)": [[917, "ivy.functional.ivy.experimental.exp2"], [920, "ivy.functional.ivy.experimental.exp2"]], "static_exp2() (in module ivy.container.container_methods)": [[917, "ivy.container.container_methods.static_exp2"], [921, "ivy.container.container_methods.static_exp2"]], "fft() (in module ivy.functional.ivy.experimental)": [[922, "ivy.functional.ivy.experimental.fft"]], "fix() (in module ivy.array.array_methods)": [[923, "ivy.array.array_methods.fix"], [924, "ivy.array.array_methods.fix"]], "fix() (in module ivy.container.container_methods)": [[923, "ivy.container.container_methods.fix"], [925, "ivy.container.container_methods.fix"]], "fix() (in module ivy.functional.ivy.experimental)": [[923, "ivy.functional.ivy.experimental.fix"], [926, "ivy.functional.ivy.experimental.fix"]], "static_fix() (in module ivy.container.container_methods)": [[923, "ivy.container.container_methods.static_fix"], [927, "ivy.container.container_methods.static_fix"]], "flatten() (in module ivy.array.array_methods)": [[928, "ivy.array.array_methods.flatten"], [929, "ivy.array.array_methods.flatten"]], "flatten() (in module ivy.container.container_methods)": [[928, "ivy.container.container_methods.flatten"], [930, "ivy.container.container_methods.flatten"]], "flatten() (in module ivy.functional.ivy.experimental)": [[928, "ivy.functional.ivy.experimental.flatten"], [931, "ivy.functional.ivy.experimental.flatten"]], "static_flatten() (in module ivy.container.container_methods)": [[928, "ivy.container.container_methods.static_flatten"], [932, "ivy.container.container_methods.static_flatten"]], "fliplr() (in module ivy.array.array_methods)": [[933, "ivy.array.array_methods.fliplr"], [934, "ivy.array.array_methods.fliplr"]], "fliplr() (in module ivy.container.container_methods)": [[933, "ivy.container.container_methods.fliplr"], [935, "ivy.container.container_methods.fliplr"]], "fliplr() (in module ivy.functional.ivy.experimental)": [[933, "ivy.functional.ivy.experimental.fliplr"], [936, "ivy.functional.ivy.experimental.fliplr"]], "static_fliplr() (in module ivy.container.container_methods)": [[933, "ivy.container.container_methods.static_fliplr"], [937, "ivy.container.container_methods.static_fliplr"]], "flipud() (in module ivy.array.array_methods)": [[938, "ivy.array.array_methods.flipud"], [939, "ivy.array.array_methods.flipud"]], "flipud() (in module ivy.container.container_methods)": [[938, "ivy.container.container_methods.flipud"], [940, "ivy.container.container_methods.flipud"]], "flipud() (in module ivy.functional.ivy.experimental)": [[938, "ivy.functional.ivy.experimental.flipud"], [941, "ivy.functional.ivy.experimental.flipud"]], "static_flipud() (in module ivy.container.container_methods)": [[938, "ivy.container.container_methods.static_flipud"], [942, "ivy.container.container_methods.static_flipud"]], "float_power() (in module ivy.array.array_methods)": [[943, "ivy.array.array_methods.float_power"], [944, "ivy.array.array_methods.float_power"]], "float_power() (in module ivy.container.container_methods)": [[943, "ivy.container.container_methods.float_power"], [945, "ivy.container.container_methods.float_power"]], "float_power() (in module ivy.functional.ivy.experimental)": [[943, "ivy.functional.ivy.experimental.float_power"], [946, "ivy.functional.ivy.experimental.float_power"]], "static_float_power() (in module ivy.container.container_methods)": [[943, "ivy.container.container_methods.static_float_power"], [947, "ivy.container.container_methods.static_float_power"]], "fmax() (in module ivy.array.array_methods)": [[948, "ivy.array.array_methods.fmax"], [949, "ivy.array.array_methods.fmax"]], "fmax() (in module ivy.container.container_methods)": [[948, "ivy.container.container_methods.fmax"], [950, "ivy.container.container_methods.fmax"]], "fmax() (in module ivy.functional.ivy.experimental)": [[948, "ivy.functional.ivy.experimental.fmax"], [951, "ivy.functional.ivy.experimental.fmax"]], "static_fmax() (in module ivy.container.container_methods)": [[948, "ivy.container.container_methods.static_fmax"], [952, "ivy.container.container_methods.static_fmax"]], "fmod() (in module ivy.array.array_methods)": [[953, "ivy.array.array_methods.fmod"], [954, "ivy.array.array_methods.fmod"]], "fmod() (in module ivy.container.container_methods)": [[953, "ivy.container.container_methods.fmod"], [955, "ivy.container.container_methods.fmod"]], "fmod() (in module ivy.functional.ivy.experimental)": [[953, "ivy.functional.ivy.experimental.fmod"], [956, "ivy.functional.ivy.experimental.fmod"]], "static_fmod() (in module ivy.container.container_methods)": [[953, "ivy.container.container_methods.static_fmod"], [957, "ivy.container.container_methods.static_fmod"]], "gamma() (in module ivy.array.array_methods)": [[958, "ivy.array.array_methods.gamma"], [959, "ivy.array.array_methods.gamma"]], "gamma() (in module ivy.functional.ivy.experimental)": [[958, "ivy.functional.ivy.experimental.gamma"], [960, "ivy.functional.ivy.experimental.gamma"]], "gcd() (in module ivy.array.array_methods)": [[961, "ivy.array.array_methods.gcd"], [962, "ivy.array.array_methods.gcd"]], "gcd() (in module ivy.container.container_methods)": [[961, "ivy.container.container_methods.gcd"], [963, "ivy.container.container_methods.gcd"]], "gcd() (in module ivy.functional.ivy.experimental)": [[961, "ivy.functional.ivy.experimental.gcd"], [964, "ivy.functional.ivy.experimental.gcd"]], "static_gcd() (in module ivy.container.container_methods)": [[961, "ivy.container.container_methods.static_gcd"], [965, "ivy.container.container_methods.static_gcd"]], "isin() (in module ivy.functional.ivy.experimental.general)": [[966, "ivy.functional.ivy.experimental.general.isin"], [967, "ivy.functional.ivy.experimental.general.isin"]], "ivy.functional.ivy.experimental.general": [[966, "module-ivy.functional.ivy.experimental.general"]], "gradient() (in module ivy.array.array_methods)": [[968, "ivy.array.array_methods.gradient"], [969, "ivy.array.array_methods.gradient"]], "gradient() (in module ivy.container.container_methods)": [[968, "ivy.container.container_methods.gradient"], [970, "ivy.container.container_methods.gradient"]], "gradient() (in module ivy.functional.ivy.experimental)": [[968, "ivy.functional.ivy.experimental.gradient"], [971, "ivy.functional.ivy.experimental.gradient"]], "static_gradient() (in module ivy.container.container_methods)": [[968, "ivy.container.container_methods.static_gradient"], [972, "ivy.container.container_methods.static_gradient"]], "ivy.functional.ivy.experimental.gradients": [[973, "module-ivy.functional.ivy.experimental.gradients"]], "hamming_window() (in module ivy.container.container_methods)": [[974, "ivy.container.container_methods.hamming_window"], [975, "ivy.container.container_methods.hamming_window"]], "hamming_window() (in module ivy.functional.ivy.experimental)": [[974, "ivy.functional.ivy.experimental.hamming_window"], [976, "ivy.functional.ivy.experimental.hamming_window"]], "static_hamming_window() (in module ivy.container.container_methods)": [[974, "ivy.container.container_methods.static_hamming_window"], [977, "ivy.container.container_methods.static_hamming_window"]], "hann_window() (in module ivy.container.container_methods)": [[978, "ivy.container.container_methods.hann_window"], [979, "ivy.container.container_methods.hann_window"]], "hann_window() (in module ivy.functional.ivy.experimental)": [[978, "ivy.functional.ivy.experimental.hann_window"], [980, "ivy.functional.ivy.experimental.hann_window"]], "static_hann_window() (in module ivy.container.container_methods)": [[978, "ivy.container.container_methods.static_hann_window"], [981, "ivy.container.container_methods.static_hann_window"]], "heaviside() (in module ivy.array.array_methods)": [[982, "ivy.array.array_methods.heaviside"], [983, "ivy.array.array_methods.heaviside"]], "heaviside() (in module ivy.container.container_methods)": [[982, "ivy.container.container_methods.heaviside"], [984, "ivy.container.container_methods.heaviside"]], "heaviside() (in module ivy.functional.ivy.experimental)": [[982, "ivy.functional.ivy.experimental.heaviside"], [985, "ivy.functional.ivy.experimental.heaviside"]], "static_heaviside() (in module ivy.container.container_methods)": [[982, "ivy.container.container_methods.static_heaviside"], [986, "ivy.container.container_methods.static_heaviside"]], "hsplit() (in module ivy.array.array_methods)": [[987, "ivy.array.array_methods.hsplit"], [988, "ivy.array.array_methods.hsplit"]], "hsplit() (in module ivy.container.container_methods)": [[987, "ivy.container.container_methods.hsplit"], [989, "ivy.container.container_methods.hsplit"]], "hsplit() (in module ivy.functional.ivy.experimental)": [[987, "ivy.functional.ivy.experimental.hsplit"], [990, "ivy.functional.ivy.experimental.hsplit"]], "static_hsplit() (in module ivy.container.container_methods)": [[987, "ivy.container.container_methods.static_hsplit"], [991, "ivy.container.container_methods.static_hsplit"]], "hstack() (in module ivy.array.array_methods)": [[992, "ivy.array.array_methods.hstack"], [993, "ivy.array.array_methods.hstack"]], "hstack() (in module ivy.container.container_methods)": [[992, "ivy.container.container_methods.hstack"], [994, "ivy.container.container_methods.hstack"]], "hstack() (in module ivy.functional.ivy.experimental)": [[992, "ivy.functional.ivy.experimental.hstack"], [995, "ivy.functional.ivy.experimental.hstack"]], "static_hstack() (in module ivy.container.container_methods)": [[992, "ivy.container.container_methods.static_hstack"], [996, "ivy.container.container_methods.static_hstack"]], "i0() (in module ivy.array.array_methods)": [[997, "ivy.array.array_methods.i0"], [998, "ivy.array.array_methods.i0"]], "i0() (in module ivy.container.container_methods)": [[997, "ivy.container.container_methods.i0"], [999, "ivy.container.container_methods.i0"]], "i0() (in module ivy.functional.ivy.experimental)": [[997, "ivy.functional.ivy.experimental.i0"], [1000, "ivy.functional.ivy.experimental.i0"]], "static_i0() (in module ivy.container.container_methods)": [[997, "ivy.container.container_methods.static_i0"], [1001, "ivy.container.container_methods.static_i0"]], "is_ivy_sparse_array() (in module ivy.functional.ivy.experimental)": [[1002, "ivy.functional.ivy.experimental.is_ivy_sparse_array"]], "is_native_dtype() (in module ivy.functional.ivy.experimental)": [[1003, "ivy.functional.ivy.experimental.is_native_dtype"]], "is_native_sparse_array() (in module ivy.functional.ivy.experimental)": [[1004, "ivy.functional.ivy.experimental.is_native_sparse_array"]], "isclose() (in module ivy.array.array_methods)": [[1005, "ivy.array.array_methods.isclose"], [1006, "ivy.array.array_methods.isclose"]], "isclose() (in module ivy.container.container_methods)": [[1005, "ivy.container.container_methods.isclose"], [1007, "ivy.container.container_methods.isclose"]], "isclose() (in module ivy.functional.ivy.experimental)": [[1005, "ivy.functional.ivy.experimental.isclose"], [1008, "ivy.functional.ivy.experimental.isclose"]], "static_isclose() (in module ivy.container.container_methods)": [[1005, "ivy.container.container_methods.static_isclose"], [1009, "ivy.container.container_methods.static_isclose"]], "isin() (in module ivy.array.array_methods)": [[1010, "ivy.array.array_methods.isin"], [1011, "ivy.array.array_methods.isin"]], "isin() (in module ivy.container.container_methods)": [[1010, "ivy.container.container_methods.isin"], [1012, "ivy.container.container_methods.isin"]], "isin() (in module ivy.functional.ivy.experimental)": [[1010, "ivy.functional.ivy.experimental.isin"], [1013, "ivy.functional.ivy.experimental.isin"]], "static_isin() (in module ivy.container.container_methods)": [[1010, "ivy.container.container_methods.static_isin"], [1014, "ivy.container.container_methods.static_isin"]], "isneginf() (in module ivy.array.array_methods)": [[1015, "ivy.array.array_methods.isneginf"], [1016, "ivy.array.array_methods.isneginf"]], "isneginf() (in module ivy.container.container_methods)": [[1015, "ivy.container.container_methods.isneginf"], [1017, "ivy.container.container_methods.isneginf"]], "isneginf() (in module ivy.functional.ivy.experimental)": [[1015, "ivy.functional.ivy.experimental.isneginf"], [1018, "ivy.functional.ivy.experimental.isneginf"]], "static_isneginf() (in module ivy.container.container_methods)": [[1015, "ivy.container.container_methods.static_isneginf"], [1019, "ivy.container.container_methods.static_isneginf"]], "isposinf() (in module ivy.array.array_methods)": [[1020, "ivy.array.array_methods.isposinf"], [1021, "ivy.array.array_methods.isposinf"]], "isposinf() (in module ivy.container.container_methods)": [[1020, "ivy.container.container_methods.isposinf"], [1022, "ivy.container.container_methods.isposinf"]], "isposinf() (in module ivy.functional.ivy.experimental)": [[1020, "ivy.functional.ivy.experimental.isposinf"], [1023, "ivy.functional.ivy.experimental.isposinf"]], "static_isposinf() (in module ivy.container.container_methods)": [[1020, "ivy.container.container_methods.static_isposinf"], [1024, "ivy.container.container_methods.static_isposinf"]], "kaiser_bessel_derived_window() (in module ivy.container.container_methods)": [[1025, "ivy.container.container_methods.kaiser_bessel_derived_window"], [1026, "ivy.container.container_methods.kaiser_bessel_derived_window"]], "kaiser_bessel_derived_window() (in module ivy.functional.ivy.experimental)": [[1025, "ivy.functional.ivy.experimental.kaiser_bessel_derived_window"], [1027, "ivy.functional.ivy.experimental.kaiser_bessel_derived_window"]], "static_kaiser_bessel_derived_window() (in module ivy.container.container_methods)": [[1025, "ivy.container.container_methods.static_kaiser_bessel_derived_window"], [1028, "ivy.container.container_methods.static_kaiser_bessel_derived_window"]], "kaiser_window() (in module ivy.container.container_methods)": [[1029, "ivy.container.container_methods.kaiser_window"], [1030, "ivy.container.container_methods.kaiser_window"]], "kaiser_window() (in module ivy.functional.ivy.experimental)": [[1029, "ivy.functional.ivy.experimental.kaiser_window"], [1031, "ivy.functional.ivy.experimental.kaiser_window"]], "static_kaiser_window() (in module ivy.container.container_methods)": [[1029, "ivy.container.container_methods.static_kaiser_window"], [1032, "ivy.container.container_methods.static_kaiser_window"]], "kron() (in module ivy.array.array_methods)": [[1033, "ivy.array.array_methods.kron"], [1034, "ivy.array.array_methods.kron"]], "kron() (in module ivy.container.container_methods)": [[1033, "ivy.container.container_methods.kron"], [1035, "ivy.container.container_methods.kron"]], "kron() (in module ivy.functional.ivy.experimental)": [[1033, "ivy.functional.ivy.experimental.kron"], [1036, "ivy.functional.ivy.experimental.kron"]], "static_kron() (in module ivy.container.container_methods)": [[1033, "ivy.container.container_methods.static_kron"], [1037, "ivy.container.container_methods.static_kron"]], "avg_pool1d() (in module ivy.functional.ivy.experimental.layers)": [[1038, "ivy.functional.ivy.experimental.layers.avg_pool1d"], [1039, "ivy.functional.ivy.experimental.layers.avg_pool1d"]], "avg_pool2d() (in module ivy.functional.ivy.experimental.layers)": [[1038, "ivy.functional.ivy.experimental.layers.avg_pool2d"], [1040, "ivy.functional.ivy.experimental.layers.avg_pool2d"]], "avg_pool3d() (in module ivy.functional.ivy.experimental.layers)": [[1038, "ivy.functional.ivy.experimental.layers.avg_pool3d"], [1041, "ivy.functional.ivy.experimental.layers.avg_pool3d"]], "dct() (in module ivy.functional.ivy.experimental.layers)": [[1038, "ivy.functional.ivy.experimental.layers.dct"], [1042, "ivy.functional.ivy.experimental.layers.dct"]], "dropout1d() (in module ivy.functional.ivy.experimental.layers)": [[1038, "ivy.functional.ivy.experimental.layers.dropout1d"], [1043, "ivy.functional.ivy.experimental.layers.dropout1d"]], "fft() (in module ivy.functional.ivy.experimental.layers)": [[1038, "ivy.functional.ivy.experimental.layers.fft"], [1044, "ivy.functional.ivy.experimental.layers.fft"]], "ivy.functional.ivy.experimental.layers": [[1038, "module-ivy.functional.ivy.experimental.layers"]], "max_pool1d() (in module ivy.functional.ivy.experimental.layers)": [[1038, "ivy.functional.ivy.experimental.layers.max_pool1d"], [1045, "ivy.functional.ivy.experimental.layers.max_pool1d"]], "max_pool2d() (in module ivy.functional.ivy.experimental.layers)": [[1038, "ivy.functional.ivy.experimental.layers.max_pool2d"], [1046, "ivy.functional.ivy.experimental.layers.max_pool2d"]], "max_pool3d() (in module ivy.functional.ivy.experimental.layers)": [[1038, "ivy.functional.ivy.experimental.layers.max_pool3d"], [1047, "ivy.functional.ivy.experimental.layers.max_pool3d"]], "lcm() (in module ivy.array.array_methods)": [[1048, "ivy.array.array_methods.lcm"], [1049, "ivy.array.array_methods.lcm"]], "lcm() (in module ivy.container.container_methods)": [[1048, "ivy.container.container_methods.lcm"], [1050, "ivy.container.container_methods.lcm"]], "lcm() (in module ivy.functional.ivy.experimental)": [[1048, "ivy.functional.ivy.experimental.lcm"], [1051, "ivy.functional.ivy.experimental.lcm"]], "static_lcm() (in module ivy.container.container_methods)": [[1048, "ivy.container.container_methods.static_lcm"], [1052, "ivy.container.container_methods.static_lcm"]], "diagflat() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1053, "ivy.functional.ivy.experimental.linear_algebra.diagflat"], [1054, "ivy.functional.ivy.experimental.linear_algebra.diagflat"]], "eig() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1053, "ivy.functional.ivy.experimental.linear_algebra.eig"], [1055, "ivy.functional.ivy.experimental.linear_algebra.eig"]], "ivy.functional.ivy.experimental.linear_algebra": [[1053, "module-ivy.functional.ivy.experimental.linear_algebra"]], "kron() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1053, "ivy.functional.ivy.experimental.linear_algebra.kron"], [1056, "ivy.functional.ivy.experimental.linear_algebra.kron"]], "matrix_exp() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1053, "ivy.functional.ivy.experimental.linear_algebra.matrix_exp"], [1057, "ivy.functional.ivy.experimental.linear_algebra.matrix_exp"]], "multi_dot() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1053, "ivy.functional.ivy.experimental.linear_algebra.multi_dot"], [1058, "ivy.functional.ivy.experimental.linear_algebra.multi_dot"]], "logaddexp2() (in module ivy.array.array_methods)": [[1059, "ivy.array.array_methods.logaddexp2"], [1060, "ivy.array.array_methods.logaddexp2"]], "logaddexp2() (in module ivy.container.container_methods)": [[1059, "ivy.container.container_methods.logaddexp2"], [1061, "ivy.container.container_methods.logaddexp2"]], "logaddexp2() (in module ivy.functional.ivy.experimental)": [[1059, "ivy.functional.ivy.experimental.logaddexp2"], [1062, "ivy.functional.ivy.experimental.logaddexp2"]], "static_logaddexp2() (in module ivy.container.container_methods)": [[1059, "ivy.container.container_methods.static_logaddexp2"], [1063, "ivy.container.container_methods.static_logaddexp2"]], "logit() (in module ivy.array.array_methods)": [[1064, "ivy.array.array_methods.logit"], [1065, "ivy.array.array_methods.logit"]], "logit() (in module ivy.container.container_methods)": [[1064, "ivy.container.container_methods.logit"], [1066, "ivy.container.container_methods.logit"]], "logit() (in module ivy.functional.ivy.experimental)": [[1064, "ivy.functional.ivy.experimental.logit"], [1067, "ivy.functional.ivy.experimental.logit"]], "static_logit() (in module ivy.container.container_methods)": [[1064, "ivy.container.container_methods.static_logit"], [1068, "ivy.container.container_methods.static_logit"]], "binary_cross_entropy_with_logits() (in module ivy.functional.ivy.experimental.losses)": [[1069, "ivy.functional.ivy.experimental.losses.binary_cross_entropy_with_logits"], [1070, "ivy.functional.ivy.experimental.losses.binary_cross_entropy_with_logits"]], "ivy.functional.ivy.experimental.losses": [[1069, "module-ivy.functional.ivy.experimental.losses"]], "atleast_1d() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.atleast_1d"], [1072, "ivy.functional.ivy.experimental.manipulation.atleast_1d"]], "atleast_2d() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.atleast_2d"], [1073, "ivy.functional.ivy.experimental.manipulation.atleast_2d"]], "atleast_3d() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.atleast_3d"], [1074, "ivy.functional.ivy.experimental.manipulation.atleast_3d"]], "broadcast_shapes() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.broadcast_shapes"], [1075, "ivy.functional.ivy.experimental.manipulation.broadcast_shapes"]], "dsplit() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.dsplit"], [1076, "ivy.functional.ivy.experimental.manipulation.dsplit"]], "dstack() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.dstack"], [1077, "ivy.functional.ivy.experimental.manipulation.dstack"]], "flatten() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.flatten"], [1078, "ivy.functional.ivy.experimental.manipulation.flatten"]], "fliplr() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.fliplr"], [1079, "ivy.functional.ivy.experimental.manipulation.fliplr"]], "flipud() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.flipud"], [1080, "ivy.functional.ivy.experimental.manipulation.flipud"]], "heaviside() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.heaviside"], [1081, "ivy.functional.ivy.experimental.manipulation.heaviside"]], "hsplit() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.hsplit"], [1082, "ivy.functional.ivy.experimental.manipulation.hsplit"]], "hstack() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.hstack"], [1083, "ivy.functional.ivy.experimental.manipulation.hstack"]], "i0() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.i0"], [1084, "ivy.functional.ivy.experimental.manipulation.i0"]], "ivy.functional.ivy.experimental.manipulation": [[1071, "module-ivy.functional.ivy.experimental.manipulation"]], "moveaxis() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.moveaxis"], [1085, "ivy.functional.ivy.experimental.manipulation.moveaxis"]], "ndenumerate() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.ndenumerate"], [1086, "ivy.functional.ivy.experimental.manipulation.ndenumerate"]], "ndindex() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.ndindex"], [1087, "ivy.functional.ivy.experimental.manipulation.ndindex"]], "pad() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.pad"], [1088, "ivy.functional.ivy.experimental.manipulation.pad"]], "rot90() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.rot90"], [1089, "ivy.functional.ivy.experimental.manipulation.rot90"]], "take_along_axis() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.take_along_axis"], [1090, "ivy.functional.ivy.experimental.manipulation.take_along_axis"]], "top_k() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.top_k"], [1091, "ivy.functional.ivy.experimental.manipulation.top_k"]], "vsplit() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.vsplit"], [1092, "ivy.functional.ivy.experimental.manipulation.vsplit"]], "vstack() (in module ivy.functional.ivy.experimental.manipulation)": [[1071, "ivy.functional.ivy.experimental.manipulation.vstack"], [1093, "ivy.functional.ivy.experimental.manipulation.vstack"]], "matrix_exp() (in module ivy.array.array_methods)": [[1094, "ivy.array.array_methods.matrix_exp"], [1095, "ivy.array.array_methods.matrix_exp"]], "matrix_exp() (in module ivy.container.container_methods)": [[1094, "ivy.container.container_methods.matrix_exp"], [1096, "ivy.container.container_methods.matrix_exp"]], "matrix_exp() (in module ivy.functional.ivy.experimental)": [[1094, "ivy.functional.ivy.experimental.matrix_exp"], [1097, "ivy.functional.ivy.experimental.matrix_exp"]], "static_matrix_exp() (in module ivy.container.container_methods)": [[1094, "ivy.container.container_methods.static_matrix_exp"], [1098, "ivy.container.container_methods.static_matrix_exp"]], "max_pool1d() (in module ivy.array.array_methods)": [[1099, "ivy.array.array_methods.max_pool1d"], [1100, "ivy.array.array_methods.max_pool1d"]], "max_pool1d() (in module ivy.container.container_methods)": [[1099, "ivy.container.container_methods.max_pool1d"], [1101, "ivy.container.container_methods.max_pool1d"]], "max_pool1d() (in module ivy.functional.ivy.experimental)": [[1099, "ivy.functional.ivy.experimental.max_pool1d"], [1102, "ivy.functional.ivy.experimental.max_pool1d"]], "static_max_pool1d() (in module ivy.container.container_methods)": [[1099, "ivy.container.container_methods.static_max_pool1d"], [1103, "ivy.container.container_methods.static_max_pool1d"]], "max_pool2d() (in module ivy.array.array_methods)": [[1104, "ivy.array.array_methods.max_pool2d"], [1105, "ivy.array.array_methods.max_pool2d"]], "max_pool2d() (in module ivy.container.container_methods)": [[1104, "ivy.container.container_methods.max_pool2d"], [1106, "ivy.container.container_methods.max_pool2d"]], "max_pool2d() (in module ivy.functional.ivy.experimental)": [[1104, "ivy.functional.ivy.experimental.max_pool2d"], [1107, "ivy.functional.ivy.experimental.max_pool2d"]], "static_max_pool2d() (in module ivy.container.container_methods)": [[1104, "ivy.container.container_methods.static_max_pool2d"], [1108, "ivy.container.container_methods.static_max_pool2d"]], "max_pool3d() (in module ivy.array.array_methods)": [[1109, "ivy.array.array_methods.max_pool3d"], [1110, "ivy.array.array_methods.max_pool3d"]], "max_pool3d() (in module ivy.container.container_methods)": [[1109, "ivy.container.container_methods.max_pool3d"], [1111, "ivy.container.container_methods.max_pool3d"]], "max_pool3d() (in module ivy.functional.ivy.experimental)": [[1109, "ivy.functional.ivy.experimental.max_pool3d"], [1112, "ivy.functional.ivy.experimental.max_pool3d"]], "static_max_pool3d() (in module ivy.container.container_methods)": [[1109, "ivy.container.container_methods.static_max_pool3d"], [1113, "ivy.container.container_methods.static_max_pool3d"]], "median() (in module ivy.array.array_methods)": [[1114, "ivy.array.array_methods.median"], [1115, "ivy.array.array_methods.median"]], "median() (in module ivy.container.container_methods)": [[1114, "ivy.container.container_methods.median"], [1116, "ivy.container.container_methods.median"]], "median() (in module ivy.functional.ivy.experimental)": [[1114, "ivy.functional.ivy.experimental.median"], [1117, "ivy.functional.ivy.experimental.median"]], "static_median() (in module ivy.container.container_methods)": [[1114, "ivy.container.container_methods.static_median"], [1118, "ivy.container.container_methods.static_median"]], "ivy.functional.ivy.experimental.meta": [[1119, "module-ivy.functional.ivy.experimental.meta"]], "moveaxis() (in module ivy.array.array_methods)": [[1120, "ivy.array.array_methods.moveaxis"], [1121, "ivy.array.array_methods.moveaxis"]], "moveaxis() (in module ivy.container.container_methods)": [[1120, "ivy.container.container_methods.moveaxis"], [1122, "ivy.container.container_methods.moveaxis"]], "moveaxis() (in module ivy.functional.ivy.experimental)": [[1120, "ivy.functional.ivy.experimental.moveaxis"], [1123, "ivy.functional.ivy.experimental.moveaxis"]], "static_moveaxis() (in module ivy.container.container_methods)": [[1120, "ivy.container.container_methods.static_moveaxis"], [1124, "ivy.container.container_methods.static_moveaxis"]], "msort() (in module ivy.array.array_methods)": [[1125, "ivy.array.array_methods.msort"], [1126, "ivy.array.array_methods.msort"]], "msort() (in module ivy.container.container_methods)": [[1125, "ivy.container.container_methods.msort"], [1127, "ivy.container.container_methods.msort"]], "msort() (in module ivy.functional.ivy.experimental)": [[1125, "ivy.functional.ivy.experimental.msort"], [1128, "ivy.functional.ivy.experimental.msort"]], "static_msort() (in module ivy.container.container_methods)": [[1125, "ivy.container.container_methods.static_msort"], [1129, "ivy.container.container_methods.static_msort"]], "multi_dot() (in module ivy.array.array_methods)": [[1130, "ivy.array.array_methods.multi_dot"], [1131, "ivy.array.array_methods.multi_dot"]], "multi_dot() (in module ivy.container.container_methods)": [[1130, "ivy.container.container_methods.multi_dot"], [1132, "ivy.container.container_methods.multi_dot"]], "multi_dot() (in module ivy.functional.ivy.experimental)": [[1130, "ivy.functional.ivy.experimental.multi_dot"], [1133, "ivy.functional.ivy.experimental.multi_dot"]], "static_multi_dot() (in module ivy.container.container_methods)": [[1130, "ivy.container.container_methods.static_multi_dot"], [1134, "ivy.container.container_methods.static_multi_dot"]], "nan_to_num() (in module ivy.array.array_methods)": [[1135, "ivy.array.array_methods.nan_to_num"], [1136, "ivy.array.array_methods.nan_to_num"]], "nan_to_num() (in module ivy.container.container_methods)": [[1135, "ivy.container.container_methods.nan_to_num"], [1137, "ivy.container.container_methods.nan_to_num"]], "nan_to_num() (in module ivy.functional.ivy.experimental)": [[1135, "ivy.functional.ivy.experimental.nan_to_num"], [1138, "ivy.functional.ivy.experimental.nan_to_num"]], "static_nan_to_num() (in module ivy.container.container_methods)": [[1135, "ivy.container.container_methods.static_nan_to_num"], [1139, "ivy.container.container_methods.static_nan_to_num"]], "nanmean() (in module ivy.array.array_methods)": [[1140, "ivy.array.array_methods.nanmean"], [1141, "ivy.array.array_methods.nanmean"]], "nanmean() (in module ivy.container.container_methods)": [[1140, "ivy.container.container_methods.nanmean"], [1142, "ivy.container.container_methods.nanmean"]], "nanmean() (in module ivy.functional.ivy.experimental)": [[1140, "ivy.functional.ivy.experimental.nanmean"], [1143, "ivy.functional.ivy.experimental.nanmean"]], "static_nanmean() (in module ivy.container.container_methods)": [[1140, "ivy.container.container_methods.static_nanmean"], [1144, "ivy.container.container_methods.static_nanmean"]], "nansum() (in module ivy.array.array_methods)": [[1145, "ivy.array.array_methods.nansum"], [1146, "ivy.array.array_methods.nansum"]], "nansum() (in module ivy.container.container_methods)": [[1145, "ivy.container.container_methods.nansum"], [1147, "ivy.container.container_methods.nansum"]], "nansum() (in module ivy.functional.ivy.experimental)": [[1145, "ivy.functional.ivy.experimental.nansum"], [1148, "ivy.functional.ivy.experimental.nansum"]], "static_nansum() (in module ivy.container.container_methods)": [[1145, "ivy.container.container_methods.static_nansum"], [1149, "ivy.container.container_methods.static_nansum"]], "native_sparse_array() (in module ivy.functional.ivy.experimental)": [[1150, "ivy.functional.ivy.experimental.native_sparse_array"]], "native_sparse_array_to_indices_values_and_shape() (in module ivy.functional.ivy.experimental)": [[1151, "ivy.functional.ivy.experimental.native_sparse_array_to_indices_values_and_shape"]], "ndenumerate() (in module ivy.functional.ivy.experimental)": [[1152, "ivy.functional.ivy.experimental.ndenumerate"]], "ndindex() (in module ivy.functional.ivy.experimental)": [[1153, "ivy.functional.ivy.experimental.ndindex"]], "ivy.functional.ivy.experimental.nest": [[1154, "module-ivy.functional.ivy.experimental.nest"]], "nextafter() (in module ivy.array.array_methods)": [[1155, "ivy.array.array_methods.nextafter"], [1156, "ivy.array.array_methods.nextafter"]], "nextafter() (in module ivy.container.container_methods)": [[1155, "ivy.container.container_methods.nextafter"], [1157, "ivy.container.container_methods.nextafter"]], "nextafter() (in module ivy.functional.ivy.experimental)": [[1155, "ivy.functional.ivy.experimental.nextafter"], [1158, "ivy.functional.ivy.experimental.nextafter"]], "static_nextafter() (in module ivy.container.container_methods)": [[1155, "ivy.container.container_methods.static_nextafter"], [1159, "ivy.container.container_methods.static_nextafter"]], "ivy.functional.ivy.experimental.norms": [[1160, "module-ivy.functional.ivy.experimental.norms"]], "pad() (in module ivy.array.array_methods)": [[1161, "ivy.array.array_methods.pad"], [1162, "ivy.array.array_methods.pad"]], "pad() (in module ivy.container.container_methods)": [[1161, "ivy.container.container_methods.pad"], [1163, "ivy.container.container_methods.pad"]], "pad() (in module ivy.functional.ivy.experimental)": [[1161, "ivy.functional.ivy.experimental.pad"], [1164, "ivy.functional.ivy.experimental.pad"]], "static_pad() (in module ivy.container.container_methods)": [[1161, "ivy.container.container_methods.static_pad"], [1165, "ivy.container.container_methods.static_pad"]], "quantile() (in module ivy.array.array_methods)": [[1166, "ivy.array.array_methods.quantile"], [1167, "ivy.array.array_methods.quantile"]], "quantile() (in module ivy.container.container_methods)": [[1166, "ivy.container.container_methods.quantile"], [1168, "ivy.container.container_methods.quantile"]], "quantile() (in module ivy.functional.ivy.experimental)": [[1166, "ivy.functional.ivy.experimental.quantile"], [1169, "ivy.functional.ivy.experimental.quantile"]], "static_quantile() (in module ivy.container.container_methods)": [[1166, "ivy.container.container_methods.static_quantile"], [1170, "ivy.container.container_methods.static_quantile"]], "beta() (in module ivy.functional.ivy.experimental.random)": [[1171, "ivy.functional.ivy.experimental.random.beta"], [1172, "ivy.functional.ivy.experimental.random.beta"]], "dirichlet() (in module ivy.functional.ivy.experimental.random)": [[1171, "ivy.functional.ivy.experimental.random.dirichlet"], [1173, "ivy.functional.ivy.experimental.random.dirichlet"]], "gamma() (in module ivy.functional.ivy.experimental.random)": [[1171, "ivy.functional.ivy.experimental.random.gamma"], [1174, "ivy.functional.ivy.experimental.random.gamma"]], "ivy.functional.ivy.experimental.random": [[1171, "module-ivy.functional.ivy.experimental.random"]], "rot90() (in module ivy.array.array_methods)": [[1175, "ivy.array.array_methods.rot90"], [1176, "ivy.array.array_methods.rot90"]], "rot90() (in module ivy.container.container_methods)": [[1175, "ivy.container.container_methods.rot90"], [1177, "ivy.container.container_methods.rot90"]], "rot90() (in module ivy.functional.ivy.experimental)": [[1175, "ivy.functional.ivy.experimental.rot90"], [1178, "ivy.functional.ivy.experimental.rot90"]], "static_rot90() (in module ivy.container.container_methods)": [[1175, "ivy.container.container_methods.static_rot90"], [1179, "ivy.container.container_methods.static_rot90"]], "ivy.functional.ivy.experimental.searching": [[1180, "module-ivy.functional.ivy.experimental.searching"]], "ivy.functional.ivy.experimental.set": [[1181, "module-ivy.functional.ivy.experimental.set"]], "signbit() (in module ivy.array.array_methods)": [[1182, "ivy.array.array_methods.signbit"], [1183, "ivy.array.array_methods.signbit"]], "signbit() (in module ivy.container.container_methods)": [[1182, "ivy.container.container_methods.signbit"], [1184, "ivy.container.container_methods.signbit"]], "signbit() (in module ivy.functional.ivy.experimental)": [[1182, "ivy.functional.ivy.experimental.signbit"], [1185, "ivy.functional.ivy.experimental.signbit"]], "static_signbit() (in module ivy.container.container_methods)": [[1182, "ivy.container.container_methods.static_signbit"], [1186, "ivy.container.container_methods.static_signbit"]], "sinc() (in module ivy.array.array_methods)": [[1187, "ivy.array.array_methods.sinc"], [1188, "ivy.array.array_methods.sinc"]], "sinc() (in module ivy.container.container_methods)": [[1187, "ivy.container.container_methods.sinc"], [1189, "ivy.container.container_methods.sinc"]], "sinc() (in module ivy.functional.ivy.experimental)": [[1187, "ivy.functional.ivy.experimental.sinc"], [1190, "ivy.functional.ivy.experimental.sinc"]], "static_sinc() (in module ivy.container.container_methods)": [[1187, "ivy.container.container_methods.static_sinc"], [1191, "ivy.container.container_methods.static_sinc"]], "ivy.functional.ivy.experimental.sorting": [[1192, "module-ivy.functional.ivy.experimental.sorting"]], "msort() (in module ivy.functional.ivy.experimental.sorting)": [[1192, "ivy.functional.ivy.experimental.sorting.msort"], [1193, "ivy.functional.ivy.experimental.sorting.msort"]], "nativesparsearray (class in ivy.functional.ivy.experimental.sparse_array)": [[1194, "ivy.functional.ivy.experimental.sparse_array.NativeSparseArray"], [1195, "ivy.functional.ivy.experimental.sparse_array.NativeSparseArray"]], "sparsearray (class in ivy.functional.ivy.experimental.sparse_array)": [[1194, "ivy.functional.ivy.experimental.sparse_array.SparseArray"], [1196, "ivy.functional.ivy.experimental.sparse_array.SparseArray"]], "__init__() (ivy.functional.ivy.experimental.sparse_array.sparsearray method)": [[1194, "ivy.functional.ivy.experimental.sparse_array.SparseArray.__init__"], [1196, "ivy.functional.ivy.experimental.sparse_array.SparseArray.__init__"]], "coo_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1194, "ivy.functional.ivy.experimental.sparse_array.SparseArray.coo_indices"], [1196, "ivy.functional.ivy.experimental.sparse_array.SparseArray.coo_indices"]], "csc_ccol_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1194, "ivy.functional.ivy.experimental.sparse_array.SparseArray.csc_ccol_indices"], [1196, "ivy.functional.ivy.experimental.sparse_array.SparseArray.csc_ccol_indices"]], "csc_row_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1194, "ivy.functional.ivy.experimental.sparse_array.SparseArray.csc_row_indices"], [1196, "ivy.functional.ivy.experimental.sparse_array.SparseArray.csc_row_indices"]], "csr_col_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1194, "ivy.functional.ivy.experimental.sparse_array.SparseArray.csr_col_indices"], [1196, "ivy.functional.ivy.experimental.sparse_array.SparseArray.csr_col_indices"]], "csr_crow_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1194, "ivy.functional.ivy.experimental.sparse_array.SparseArray.csr_crow_indices"], [1196, "ivy.functional.ivy.experimental.sparse_array.SparseArray.csr_crow_indices"]], "data (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1194, "ivy.functional.ivy.experimental.sparse_array.SparseArray.data"], [1196, "ivy.functional.ivy.experimental.sparse_array.SparseArray.data"]], "dense_shape (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1194, "ivy.functional.ivy.experimental.sparse_array.SparseArray.dense_shape"], [1196, "ivy.functional.ivy.experimental.sparse_array.SparseArray.dense_shape"]], "is_ivy_sparse_array() (in module ivy.functional.ivy.experimental.sparse_array)": [[1194, "ivy.functional.ivy.experimental.sparse_array.is_ivy_sparse_array"], [1197, "ivy.functional.ivy.experimental.sparse_array.is_ivy_sparse_array"]], "is_native_sparse_array() (in module ivy.functional.ivy.experimental.sparse_array)": [[1194, "ivy.functional.ivy.experimental.sparse_array.is_native_sparse_array"], [1198, "ivy.functional.ivy.experimental.sparse_array.is_native_sparse_array"]], "ivy.functional.ivy.experimental.sparse_array": [[1194, "module-ivy.functional.ivy.experimental.sparse_array"]], "native_sparse_array() (in module ivy.functional.ivy.experimental.sparse_array)": [[1194, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array"], [1199, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array"]], "native_sparse_array_to_indices_values_and_shape() (in module ivy.functional.ivy.experimental.sparse_array)": [[1194, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array_to_indices_values_and_shape"], [1200, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array_to_indices_values_and_shape"]], "to_dense_array() (ivy.functional.ivy.experimental.sparse_array.sparsearray method)": [[1194, "ivy.functional.ivy.experimental.sparse_array.SparseArray.to_dense_array"], [1196, "ivy.functional.ivy.experimental.sparse_array.SparseArray.to_dense_array"]], "values (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1194, "ivy.functional.ivy.experimental.sparse_array.SparseArray.values"], [1196, "ivy.functional.ivy.experimental.sparse_array.SparseArray.values"]], "ivy.functional.ivy.experimental.statistical": [[1201, "module-ivy.functional.ivy.experimental.statistical"]], "median() (in module ivy.functional.ivy.experimental.statistical)": [[1201, "ivy.functional.ivy.experimental.statistical.median"], [1202, "ivy.functional.ivy.experimental.statistical.median"]], "nanmean() (in module ivy.functional.ivy.experimental.statistical)": [[1201, "ivy.functional.ivy.experimental.statistical.nanmean"], [1203, "ivy.functional.ivy.experimental.statistical.nanmean"]], "quantile() (in module ivy.functional.ivy.experimental.statistical)": [[1201, "ivy.functional.ivy.experimental.statistical.quantile"], [1204, "ivy.functional.ivy.experimental.statistical.quantile"]], "unravel_index() (in module ivy.functional.ivy.experimental.statistical)": [[1201, "ivy.functional.ivy.experimental.statistical.unravel_index"], [1205, "ivy.functional.ivy.experimental.statistical.unravel_index"]], "static_take_along_axis() (in module ivy.container.container_methods)": [[1206, "ivy.container.container_methods.static_take_along_axis"], [1207, "ivy.container.container_methods.static_take_along_axis"]], "take_along_axis() (in module ivy.array.array_methods)": [[1206, "ivy.array.array_methods.take_along_axis"], [1208, "ivy.array.array_methods.take_along_axis"]], "take_along_axis() (in module ivy.container.container_methods)": [[1206, "ivy.container.container_methods.take_along_axis"], [1209, "ivy.container.container_methods.take_along_axis"]], "take_along_axis() (in module ivy.functional.ivy.experimental)": [[1206, "ivy.functional.ivy.experimental.take_along_axis"], [1210, "ivy.functional.ivy.experimental.take_along_axis"]], "static_top_k() (in module ivy.container.container_methods)": [[1211, "ivy.container.container_methods.static_top_k"], [1212, "ivy.container.container_methods.static_top_k"]], "top_k() (in module ivy.array.array_methods)": [[1211, "ivy.array.array_methods.top_k"], [1213, "ivy.array.array_methods.top_k"]], "top_k() (in module ivy.container.container_methods)": [[1211, "ivy.container.container_methods.top_k"], [1214, "ivy.container.container_methods.top_k"]], "top_k() (in module ivy.functional.ivy.experimental)": [[1211, "ivy.functional.ivy.experimental.top_k"], [1215, "ivy.functional.ivy.experimental.top_k"]], "trapz() (in module ivy.array.array_methods)": [[1216, "ivy.array.array_methods.trapz"], [1217, "ivy.array.array_methods.trapz"]], "trapz() (in module ivy.functional.ivy.experimental)": [[1216, "ivy.functional.ivy.experimental.trapz"], [1218, "ivy.functional.ivy.experimental.trapz"]], "static_tril_indices() (in module ivy.container.container_methods)": [[1219, "ivy.container.container_methods.static_tril_indices"], [1220, "ivy.container.container_methods.static_tril_indices"]], "tril_indices() (in module ivy.container.container_methods)": [[1219, "ivy.container.container_methods.tril_indices"], [1221, "ivy.container.container_methods.tril_indices"]], "tril_indices() (in module ivy.functional.ivy.experimental)": [[1219, "ivy.functional.ivy.experimental.tril_indices"], [1222, "ivy.functional.ivy.experimental.tril_indices"]], "static_triu_indices() (in module ivy.container.container_methods)": [[1223, "ivy.container.container_methods.static_triu_indices"], [1224, "ivy.container.container_methods.static_triu_indices"]], "triu_indices() (in module ivy.container.container_methods)": [[1223, "ivy.container.container_methods.triu_indices"], [1225, "ivy.container.container_methods.triu_indices"]], "triu_indices() (in module ivy.functional.ivy.experimental)": [[1223, "ivy.functional.ivy.experimental.triu_indices"], [1226, "ivy.functional.ivy.experimental.triu_indices"]], "static_unravel_index() (in module ivy.container.container_methods)": [[1227, "ivy.container.container_methods.static_unravel_index"], [1228, "ivy.container.container_methods.static_unravel_index"]], "unravel_index() (in module ivy.array.array_methods)": [[1227, "ivy.array.array_methods.unravel_index"], [1229, "ivy.array.array_methods.unravel_index"]], "unravel_index() (in module ivy.container.container_methods)": [[1227, "ivy.container.container_methods.unravel_index"], [1230, "ivy.container.container_methods.unravel_index"]], "unravel_index() (in module ivy.functional.ivy.experimental)": [[1227, "ivy.functional.ivy.experimental.unravel_index"], [1231, "ivy.functional.ivy.experimental.unravel_index"]], "ivy.functional.ivy.experimental.utility": [[1232, "module-ivy.functional.ivy.experimental.utility"]], "static_vorbis_window() (in module ivy.container.container_methods)": [[1233, "ivy.container.container_methods.static_vorbis_window"], [1234, "ivy.container.container_methods.static_vorbis_window"]], "vorbis_window() (in module ivy.container.container_methods)": [[1233, "ivy.container.container_methods.vorbis_window"], [1235, "ivy.container.container_methods.vorbis_window"]], "vorbis_window() (in module ivy.functional.ivy.experimental)": [[1233, "ivy.functional.ivy.experimental.vorbis_window"], [1236, "ivy.functional.ivy.experimental.vorbis_window"]], "static_vsplit() (in module ivy.container.container_methods)": [[1237, "ivy.container.container_methods.static_vsplit"], [1238, "ivy.container.container_methods.static_vsplit"]], "vsplit() (in module ivy.array.array_methods)": [[1237, "ivy.array.array_methods.vsplit"], [1239, "ivy.array.array_methods.vsplit"]], "vsplit() (in module ivy.container.container_methods)": [[1237, "ivy.container.container_methods.vsplit"], [1240, "ivy.container.container_methods.vsplit"]], "vsplit() (in module ivy.functional.ivy.experimental)": [[1237, "ivy.functional.ivy.experimental.vsplit"], [1241, "ivy.functional.ivy.experimental.vsplit"]], "static_vstack() (in module ivy.container.container_methods)": [[1242, "ivy.container.container_methods.static_vstack"], [1243, "ivy.container.container_methods.static_vstack"]], "vstack() (in module ivy.array.array_methods)": [[1242, "ivy.array.array_methods.vstack"], [1244, "ivy.array.array_methods.vstack"]], "vstack() (in module ivy.container.container_methods)": [[1242, "ivy.container.container_methods.vstack"], [1245, "ivy.container.container_methods.vstack"]], "vstack() (in module ivy.functional.ivy.experimental)": [[1242, "ivy.functional.ivy.experimental.vstack"], [1246, "ivy.functional.ivy.experimental.vstack"]], "static_xlogy() (in module ivy.container.container_methods)": [[1247, "ivy.container.container_methods.static_xlogy"], [1248, "ivy.container.container_methods.static_xlogy"]], "xlogy() (in module ivy.array.array_methods)": [[1247, "ivy.array.array_methods.xlogy"], [1249, "ivy.array.array_methods.xlogy"]], "xlogy() (in module ivy.container.container_methods)": [[1247, "ivy.container.container_methods.xlogy"], [1250, "ivy.container.container_methods.xlogy"]], "xlogy() (in module ivy.functional.ivy.experimental)": [[1247, "ivy.functional.ivy.experimental.xlogy"], [1251, "ivy.functional.ivy.experimental.xlogy"]], "static_zeta() (in module ivy.container.container_methods)": [[1252, "ivy.container.container_methods.static_zeta"], [1253, "ivy.container.container_methods.static_zeta"]], "zeta() (in module ivy.array.array_methods)": [[1252, "ivy.array.array_methods.zeta"], [1254, "ivy.array.array_methods.zeta"]], "zeta() (in module ivy.container.container_methods)": [[1252, "ivy.container.container_methods.zeta"], [1255, "ivy.container.container_methods.zeta"]], "zeta() (in module ivy.functional.ivy.experimental)": [[1252, "ivy.functional.ivy.experimental.zeta"], [1256, "ivy.functional.ivy.experimental.zeta"]], "all_equal() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.all_equal"], [1259, "ivy.functional.ivy.general.all_equal"], [1262, "ivy.functional.ivy.general.all_equal"]], "arg_info() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.arg_info"], [1264, "ivy.functional.ivy.general.arg_info"]], "arg_names() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.arg_names"], [1265, "ivy.functional.ivy.general.arg_names"]], "array_equal() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.array_equal"], [1266, "ivy.functional.ivy.general.array_equal"], [1268, "ivy.functional.ivy.general.array_equal"]], "assert_supports_inplace() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.assert_supports_inplace"], [1269, "ivy.functional.ivy.general.assert_supports_inplace"], [1272, "ivy.functional.ivy.general.assert_supports_inplace"]], "cache_fn() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.cache_fn"], [1274, "ivy.functional.ivy.general.cache_fn"]], "clip_matrix_norm() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.clip_matrix_norm"], [1275, "ivy.functional.ivy.general.clip_matrix_norm"], [1278, "ivy.functional.ivy.general.clip_matrix_norm"]], "clip_vector_norm() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.clip_vector_norm"], [1280, "ivy.functional.ivy.general.clip_vector_norm"], [1283, "ivy.functional.ivy.general.clip_vector_norm"]], "container_types() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.container_types"], [1285, "ivy.functional.ivy.general.container_types"]], "current_backend_str() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.current_backend_str"], [1286, "ivy.functional.ivy.general.current_backend_str"]], "default() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.default"], [1287, "ivy.functional.ivy.general.default"], [1289, "ivy.functional.ivy.general.default"]], "einops_rearrange() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.einops_rearrange"], [1290, "ivy.functional.ivy.general.einops_rearrange"], [1293, "ivy.functional.ivy.general.einops_rearrange"]], "einops_reduce() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.einops_reduce"], [1295, "ivy.functional.ivy.general.einops_reduce"], [1298, "ivy.functional.ivy.general.einops_reduce"]], "einops_repeat() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.einops_repeat"], [1300, "ivy.functional.ivy.general.einops_repeat"], [1303, "ivy.functional.ivy.general.einops_repeat"]], "exists() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.exists"], [1305, "ivy.functional.ivy.general.exists"], [1307, "ivy.functional.ivy.general.exists"]], "fourier_encode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.fourier_encode"], [1308, "ivy.functional.ivy.general.fourier_encode"], [1311, "ivy.functional.ivy.general.fourier_encode"]], "function_supported_devices_and_dtypes() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.function_supported_devices_and_dtypes"], [1313, "ivy.functional.ivy.general.function_supported_devices_and_dtypes"]], "function_unsupported_devices_and_dtypes() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.function_unsupported_devices_and_dtypes"], [1314, "ivy.functional.ivy.general.function_unsupported_devices_and_dtypes"]], "gather() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.gather"], [1315, "ivy.functional.ivy.general.gather"], [1318, "ivy.functional.ivy.general.gather"]], "gather_nd() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.gather_nd"], [1320, "ivy.functional.ivy.general.gather_nd"], [1323, "ivy.functional.ivy.general.gather_nd"]], "get_all_arrays_in_memory() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.get_all_arrays_in_memory"], [1325, "ivy.functional.ivy.general.get_all_arrays_in_memory"]], "get_array_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.get_array_mode"], [1326, "ivy.functional.ivy.general.get_array_mode"]], "get_exception_trace_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.get_exception_trace_mode"], [1327, "ivy.functional.ivy.general.get_exception_trace_mode"]], "get_item() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.get_item"], [1328, "ivy.functional.ivy.general.get_item"]], "get_min_base() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.get_min_base"], [1329, "ivy.functional.ivy.general.get_min_base"]], "get_min_denominator() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.get_min_denominator"], [1330, "ivy.functional.ivy.general.get_min_denominator"]], "get_nestable_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.get_nestable_mode"], [1331, "ivy.functional.ivy.general.get_nestable_mode"]], "get_num_dims() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.get_num_dims"], [1332, "ivy.functional.ivy.general.get_num_dims"], [1335, "ivy.functional.ivy.general.get_num_dims"]], "get_queue_timeout() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.get_queue_timeout"], [1337, "ivy.functional.ivy.general.get_queue_timeout"]], "get_referrers_recursive() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.get_referrers_recursive"], [1338, "ivy.functional.ivy.general.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.get_show_func_wrapper_trace_mode"], [1339, "ivy.functional.ivy.general.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.get_tmp_dir"], [1340, "ivy.functional.ivy.general.get_tmp_dir"]], "has_nans() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.has_nans"], [1341, "ivy.functional.ivy.general.has_nans"], [1344, "ivy.functional.ivy.general.has_nans"]], "inplace_arrays_supported() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.inplace_arrays_supported"], [1346, "ivy.functional.ivy.general.inplace_arrays_supported"]], "inplace_decrement() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.inplace_decrement"], [1347, "ivy.functional.ivy.general.inplace_decrement"], [1350, "ivy.functional.ivy.general.inplace_decrement"]], "inplace_increment() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.inplace_increment"], [1352, "ivy.functional.ivy.general.inplace_increment"], [1355, "ivy.functional.ivy.general.inplace_increment"]], "inplace_update() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.inplace_update"], [1357, "ivy.functional.ivy.general.inplace_update"], [1360, "ivy.functional.ivy.general.inplace_update"]], "inplace_variables_supported() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.inplace_variables_supported"], [1362, "ivy.functional.ivy.general.inplace_variables_supported"]], "is_array() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.is_array"], [1363, "ivy.functional.ivy.general.is_array"], [1366, "ivy.functional.ivy.general.is_array"]], "is_ivy_array() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.is_ivy_array"], [1368, "ivy.functional.ivy.general.is_ivy_array"], [1371, "ivy.functional.ivy.general.is_ivy_array"]], "is_ivy_container() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.is_ivy_container"], [1373, "ivy.functional.ivy.general.is_ivy_container"], [1375, "ivy.functional.ivy.general.is_ivy_container"]], "is_native_array() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.is_native_array"], [1376, "ivy.functional.ivy.general.is_native_array"], [1379, "ivy.functional.ivy.general.is_native_array"]], "isscalar() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.isscalar"], [1381, "ivy.functional.ivy.general.isscalar"]], "ivy.functional.ivy.general": [[1258, "module-ivy.functional.ivy.general"]], "match_kwargs() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.match_kwargs"], [1382, "ivy.functional.ivy.general.match_kwargs"]], "multiprocessing() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.multiprocessing"], [1383, "ivy.functional.ivy.general.multiprocessing"]], "num_arrays_in_memory() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.num_arrays_in_memory"], [1384, "ivy.functional.ivy.general.num_arrays_in_memory"]], "print_all_arrays_in_memory() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.print_all_arrays_in_memory"], [1385, "ivy.functional.ivy.general.print_all_arrays_in_memory"]], "scatter_flat() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.scatter_flat"], [1386, "ivy.functional.ivy.general.scatter_flat"], [1389, "ivy.functional.ivy.general.scatter_flat"]], "scatter_nd() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.scatter_nd"], [1391, "ivy.functional.ivy.general.scatter_nd"], [1394, "ivy.functional.ivy.general.scatter_nd"]], "set_array_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.set_array_mode"], [1396, "ivy.functional.ivy.general.set_array_mode"]], "set_exception_trace_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.set_exception_trace_mode"], [1397, "ivy.functional.ivy.general.set_exception_trace_mode"]], "set_min_base() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.set_min_base"], [1398, "ivy.functional.ivy.general.set_min_base"]], "set_min_denominator() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.set_min_denominator"], [1399, "ivy.functional.ivy.general.set_min_denominator"]], "set_nestable_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.set_nestable_mode"], [1400, "ivy.functional.ivy.general.set_nestable_mode"]], "set_queue_timeout() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.set_queue_timeout"], [1401, "ivy.functional.ivy.general.set_queue_timeout"]], "set_shape_array_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.set_shape_array_mode"], [1402, "ivy.functional.ivy.general.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.set_show_func_wrapper_trace_mode"], [1403, "ivy.functional.ivy.general.set_show_func_wrapper_trace_mode"]], "set_tmp_dir() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.set_tmp_dir"], [1404, "ivy.functional.ivy.general.set_tmp_dir"]], "shape() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.shape"], [1405, "ivy.functional.ivy.general.shape"]], "shape_array_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.shape_array_mode"], [1406, "ivy.functional.ivy.general.shape_array_mode"]], "stable_divide() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.stable_divide"], [1407, "ivy.functional.ivy.general.stable_divide"], [1410, "ivy.functional.ivy.general.stable_divide"]], "stable_pow() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.stable_pow"], [1412, "ivy.functional.ivy.general.stable_pow"], [1415, "ivy.functional.ivy.general.stable_pow"]], "supports_inplace_updates() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.supports_inplace_updates"], [1417, "ivy.functional.ivy.general.supports_inplace_updates"], [1421, "ivy.functional.ivy.general.supports_inplace_updates"]], "to_ivy_shape() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.to_ivy_shape"], [1422, "ivy.functional.ivy.general.to_ivy_shape"]], "to_list() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.to_list"], [1423, "ivy.functional.ivy.general.to_list"], [1426, "ivy.functional.ivy.general.to_list"]], "to_native_shape() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.to_native_shape"], [1427, "ivy.functional.ivy.general.to_native_shape"]], "to_numpy() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.to_numpy"], [1428, "ivy.functional.ivy.general.to_numpy"], [1432, "ivy.functional.ivy.general.to_numpy"]], "to_scalar() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.to_scalar"], [1433, "ivy.functional.ivy.general.to_scalar"], [1437, "ivy.functional.ivy.general.to_scalar"]], "try_else_none() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.try_else_none"], [1438, "ivy.functional.ivy.general.try_else_none"]], "unset_array_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.unset_array_mode"], [1439, "ivy.functional.ivy.general.unset_array_mode"]], "unset_exception_trace_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.unset_exception_trace_mode"], [1440, "ivy.functional.ivy.general.unset_exception_trace_mode"]], "unset_nestable_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.unset_nestable_mode"], [1441, "ivy.functional.ivy.general.unset_nestable_mode"]], "unset_queue_timeout() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.unset_queue_timeout"], [1442, "ivy.functional.ivy.general.unset_queue_timeout"]], "unset_shape_array_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.unset_shape_array_mode"], [1443, "ivy.functional.ivy.general.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.unset_show_func_wrapper_trace_mode"], [1444, "ivy.functional.ivy.general.unset_show_func_wrapper_trace_mode"]], "value_is_nan() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.value_is_nan"], [1445, "ivy.functional.ivy.general.value_is_nan"], [1449, "ivy.functional.ivy.general.value_is_nan"]], "vmap() (in module ivy.functional.ivy.general)": [[1258, "ivy.functional.ivy.general.vmap"], [1450, "ivy.functional.ivy.general.vmap"]], "all_equal() (in module ivy.array.array_methods)": [[1259, "ivy.array.array_methods.all_equal"], [1260, "ivy.array.array_methods.all_equal"]], "all_equal() (in module ivy.container.container_methods)": [[1259, "ivy.container.container_methods.all_equal"], [1261, "ivy.container.container_methods.all_equal"]], "static_all_equal() (in module ivy.container.container_methods)": [[1259, "ivy.container.container_methods.static_all_equal"], [1263, "ivy.container.container_methods.static_all_equal"]], "array_equal() (in module ivy.array.array_methods)": [[1266, "ivy.array.array_methods.array_equal"], [1267, "ivy.array.array_methods.array_equal"]], "assert_supports_inplace() (in module ivy.array.array_methods)": [[1269, "ivy.array.array_methods.assert_supports_inplace"], [1270, "ivy.array.array_methods.assert_supports_inplace"]], "assert_supports_inplace() (in module ivy.container.container_methods)": [[1269, "ivy.container.container_methods.assert_supports_inplace"], [1271, "ivy.container.container_methods.assert_supports_inplace"]], "static_assert_supports_inplace() (in module ivy.container.container_methods)": [[1269, "ivy.container.container_methods.static_assert_supports_inplace"], [1273, "ivy.container.container_methods.static_assert_supports_inplace"]], "clip_matrix_norm() (in module ivy.array.array_methods)": [[1275, "ivy.array.array_methods.clip_matrix_norm"], [1276, "ivy.array.array_methods.clip_matrix_norm"]], "clip_matrix_norm() (in module ivy.container.container_methods)": [[1275, "ivy.container.container_methods.clip_matrix_norm"], [1277, "ivy.container.container_methods.clip_matrix_norm"]], "static_clip_matrix_norm() (in module ivy.container.container_methods)": [[1275, "ivy.container.container_methods.static_clip_matrix_norm"], [1279, "ivy.container.container_methods.static_clip_matrix_norm"]], "clip_vector_norm() (in module ivy.array.array_methods)": [[1280, "ivy.array.array_methods.clip_vector_norm"], [1281, "ivy.array.array_methods.clip_vector_norm"]], "clip_vector_norm() (in module ivy.container.container_methods)": [[1280, "ivy.container.container_methods.clip_vector_norm"], [1282, "ivy.container.container_methods.clip_vector_norm"]], "static_clip_vector_norm() (in module ivy.container.container_methods)": [[1280, "ivy.container.container_methods.static_clip_vector_norm"], [1284, "ivy.container.container_methods.static_clip_vector_norm"]], "default() (in module ivy.array.array_methods)": [[1287, "ivy.array.array_methods.default"], [1288, "ivy.array.array_methods.default"]], "einops_rearrange() (in module ivy.array.array_methods)": [[1290, "ivy.array.array_methods.einops_rearrange"], [1291, "ivy.array.array_methods.einops_rearrange"]], "einops_rearrange() (in module ivy.container.container_methods)": [[1290, "ivy.container.container_methods.einops_rearrange"], [1292, "ivy.container.container_methods.einops_rearrange"]], "static_einops_rearrange() (in module ivy.container.container_methods)": [[1290, "ivy.container.container_methods.static_einops_rearrange"], [1294, "ivy.container.container_methods.static_einops_rearrange"]], "einops_reduce() (in module ivy.array.array_methods)": [[1295, "ivy.array.array_methods.einops_reduce"], [1296, "ivy.array.array_methods.einops_reduce"]], "einops_reduce() (in module ivy.container.container_methods)": [[1295, "ivy.container.container_methods.einops_reduce"], [1297, "ivy.container.container_methods.einops_reduce"]], "static_einops_reduce() (in module ivy.container.container_methods)": [[1295, "ivy.container.container_methods.static_einops_reduce"], [1299, "ivy.container.container_methods.static_einops_reduce"]], "einops_repeat() (in module ivy.array.array_methods)": [[1300, "ivy.array.array_methods.einops_repeat"], [1301, "ivy.array.array_methods.einops_repeat"]], "einops_repeat() (in module ivy.container.container_methods)": [[1300, "ivy.container.container_methods.einops_repeat"], [1302, "ivy.container.container_methods.einops_repeat"]], "static_einops_repeat() (in module ivy.container.container_methods)": [[1300, "ivy.container.container_methods.static_einops_repeat"], [1304, "ivy.container.container_methods.static_einops_repeat"]], "exists() (in module ivy.array.array_methods)": [[1305, "ivy.array.array_methods.exists"], [1306, "ivy.array.array_methods.exists"]], "fourier_encode() (in module ivy.array.array_methods)": [[1308, "ivy.array.array_methods.fourier_encode"], [1309, "ivy.array.array_methods.fourier_encode"]], "fourier_encode() (in module ivy.container.container_methods)": [[1308, "ivy.container.container_methods.fourier_encode"], [1310, "ivy.container.container_methods.fourier_encode"]], "static_fourier_encode() (in module ivy.container.container_methods)": [[1308, "ivy.container.container_methods.static_fourier_encode"], [1312, "ivy.container.container_methods.static_fourier_encode"]], "gather() (in module ivy.array.array_methods)": [[1315, "ivy.array.array_methods.gather"], [1316, "ivy.array.array_methods.gather"]], "gather() (in module ivy.container.container_methods)": [[1315, "ivy.container.container_methods.gather"], [1317, "ivy.container.container_methods.gather"]], "static_gather() (in module ivy.container.container_methods)": [[1315, "ivy.container.container_methods.static_gather"], [1319, "ivy.container.container_methods.static_gather"]], "gather_nd() (in module ivy.array.array_methods)": [[1320, "ivy.array.array_methods.gather_nd"], [1321, "ivy.array.array_methods.gather_nd"]], "gather_nd() (in module ivy.container.container_methods)": [[1320, "ivy.container.container_methods.gather_nd"], [1322, "ivy.container.container_methods.gather_nd"]], "static_gather_nd() (in module ivy.container.container_methods)": [[1320, "ivy.container.container_methods.static_gather_nd"], [1324, "ivy.container.container_methods.static_gather_nd"]], "get_num_dims() (in module ivy.array.array_methods)": [[1332, "ivy.array.array_methods.get_num_dims"], [1333, "ivy.array.array_methods.get_num_dims"]], "get_num_dims() (in module ivy.container.container_methods)": [[1332, "ivy.container.container_methods.get_num_dims"], [1334, "ivy.container.container_methods.get_num_dims"]], "static_get_num_dims() (in module ivy.container.container_methods)": [[1332, "ivy.container.container_methods.static_get_num_dims"], [1336, "ivy.container.container_methods.static_get_num_dims"]], "has_nans() (in module ivy.array.array_methods)": [[1341, "ivy.array.array_methods.has_nans"], [1342, "ivy.array.array_methods.has_nans"]], "has_nans() (in module ivy.container.container_methods)": [[1341, "ivy.container.container_methods.has_nans"], [1343, "ivy.container.container_methods.has_nans"]], "static_has_nans() (in module ivy.container.container_methods)": [[1341, "ivy.container.container_methods.static_has_nans"], [1345, "ivy.container.container_methods.static_has_nans"]], "inplace_decrement() (in module ivy.array.array_methods)": [[1347, "ivy.array.array_methods.inplace_decrement"], [1348, "ivy.array.array_methods.inplace_decrement"]], "inplace_decrement() (in module ivy.container.container_methods)": [[1347, "ivy.container.container_methods.inplace_decrement"], [1349, "ivy.container.container_methods.inplace_decrement"]], "static_inplace_decrement() (in module ivy.container.container_methods)": [[1347, "ivy.container.container_methods.static_inplace_decrement"], [1351, "ivy.container.container_methods.static_inplace_decrement"]], "inplace_increment() (in module ivy.array.array_methods)": [[1352, "ivy.array.array_methods.inplace_increment"], [1353, "ivy.array.array_methods.inplace_increment"]], "inplace_increment() (in module ivy.container.container_methods)": [[1352, "ivy.container.container_methods.inplace_increment"], [1354, "ivy.container.container_methods.inplace_increment"]], "static_inplace_increment() (in module ivy.container.container_methods)": [[1352, "ivy.container.container_methods.static_inplace_increment"], [1356, "ivy.container.container_methods.static_inplace_increment"]], "inplace_update() (in module ivy.array.array_methods)": [[1357, "ivy.array.array_methods.inplace_update"], [1358, "ivy.array.array_methods.inplace_update"]], "inplace_update() (in module ivy.container.container_methods)": [[1357, "ivy.container.container_methods.inplace_update"], [1359, "ivy.container.container_methods.inplace_update"]], "static_inplace_update() (in module ivy.container.container_methods)": [[1357, "ivy.container.container_methods.static_inplace_update"], [1361, "ivy.container.container_methods.static_inplace_update"]], "is_array() (in module ivy.array.array_methods)": [[1363, "ivy.array.array_methods.is_array"], [1364, "ivy.array.array_methods.is_array"]], "is_array() (in module ivy.container.container_methods)": [[1363, "ivy.container.container_methods.is_array"], [1365, "ivy.container.container_methods.is_array"]], "static_is_array() (in module ivy.container.container_methods)": [[1363, "ivy.container.container_methods.static_is_array"], [1367, "ivy.container.container_methods.static_is_array"]], "is_ivy_array() (in module ivy.array.array_methods)": [[1368, "ivy.array.array_methods.is_ivy_array"], [1369, "ivy.array.array_methods.is_ivy_array"]], "is_ivy_array() (in module ivy.container.container_methods)": [[1368, "ivy.container.container_methods.is_ivy_array"], [1370, "ivy.container.container_methods.is_ivy_array"]], "static_is_ivy_array() (in module ivy.container.container_methods)": [[1368, "ivy.container.container_methods.static_is_ivy_array"], [1372, "ivy.container.container_methods.static_is_ivy_array"]], "is_ivy_container() (in module ivy.array.array_methods)": [[1373, "ivy.array.array_methods.is_ivy_container"], [1374, "ivy.array.array_methods.is_ivy_container"]], "is_native_array() (in module ivy.array.array_methods)": [[1376, "ivy.array.array_methods.is_native_array"], [1377, "ivy.array.array_methods.is_native_array"]], "is_native_array() (in module ivy.container.container_methods)": [[1376, "ivy.container.container_methods.is_native_array"], [1378, "ivy.container.container_methods.is_native_array"]], "static_is_native_array() (in module ivy.container.container_methods)": [[1376, "ivy.container.container_methods.static_is_native_array"], [1380, "ivy.container.container_methods.static_is_native_array"]], "scatter_flat() (in module ivy.array.array_methods)": [[1386, "ivy.array.array_methods.scatter_flat"], [1387, "ivy.array.array_methods.scatter_flat"]], "scatter_flat() (in module ivy.container.container_methods)": [[1386, "ivy.container.container_methods.scatter_flat"], [1388, "ivy.container.container_methods.scatter_flat"]], "static_scatter_flat() (in module ivy.container.container_methods)": [[1386, "ivy.container.container_methods.static_scatter_flat"], [1390, "ivy.container.container_methods.static_scatter_flat"]], "scatter_nd() (in module ivy.array.array_methods)": [[1391, "ivy.array.array_methods.scatter_nd"], [1392, "ivy.array.array_methods.scatter_nd"]], "scatter_nd() (in module ivy.container.container_methods)": [[1391, "ivy.container.container_methods.scatter_nd"], [1393, "ivy.container.container_methods.scatter_nd"]], "static_scatter_nd() (in module ivy.container.container_methods)": [[1391, "ivy.container.container_methods.static_scatter_nd"], [1395, "ivy.container.container_methods.static_scatter_nd"]], "stable_divide() (in module ivy.array.array_methods)": [[1407, "ivy.array.array_methods.stable_divide"], [1408, "ivy.array.array_methods.stable_divide"]], "stable_divide() (in module ivy.container.container_methods)": [[1407, "ivy.container.container_methods.stable_divide"], [1409, "ivy.container.container_methods.stable_divide"]], "static_stable_divide() (in module ivy.container.container_methods)": [[1407, "ivy.container.container_methods.static_stable_divide"], [1411, "ivy.container.container_methods.static_stable_divide"]], "stable_pow() (in module ivy.array.array_methods)": [[1412, "ivy.array.array_methods.stable_pow"], [1413, "ivy.array.array_methods.stable_pow"]], "stable_pow() (in module ivy.container.container_methods)": [[1412, "ivy.container.container_methods.stable_pow"], [1414, "ivy.container.container_methods.stable_pow"]], "static_stable_pow() (in module ivy.container.container_methods)": [[1412, "ivy.container.container_methods.static_stable_pow"], [1416, "ivy.container.container_methods.static_stable_pow"]], "static_supports_inplace_updates() (in module ivy.container.container_methods)": [[1417, "ivy.container.container_methods.static_supports_inplace_updates"], [1418, "ivy.container.container_methods.static_supports_inplace_updates"]], "supports_inplace_updates() (in module ivy.array.array_methods)": [[1417, "ivy.array.array_methods.supports_inplace_updates"], [1419, "ivy.array.array_methods.supports_inplace_updates"]], "supports_inplace_updates() (in module ivy.container.container_methods)": [[1417, "ivy.container.container_methods.supports_inplace_updates"], [1420, "ivy.container.container_methods.supports_inplace_updates"]], "static_to_list() (in module ivy.container.container_methods)": [[1423, "ivy.container.container_methods.static_to_list"], [1424, "ivy.container.container_methods.static_to_list"]], "to_list() (in module ivy.array.array_methods)": [[1423, "ivy.array.array_methods.to_list"], [1425, "ivy.array.array_methods.to_list"]], "static_to_numpy() (in module ivy.container.container_methods)": [[1428, "ivy.container.container_methods.static_to_numpy"], [1429, "ivy.container.container_methods.static_to_numpy"]], "to_numpy() (in module ivy.array.array_methods)": [[1428, "ivy.array.array_methods.to_numpy"], [1430, "ivy.array.array_methods.to_numpy"]], "to_numpy() (in module ivy.container.container_methods)": [[1428, "ivy.container.container_methods.to_numpy"], [1431, "ivy.container.container_methods.to_numpy"]], "static_to_scalar() (in module ivy.container.container_methods)": [[1433, "ivy.container.container_methods.static_to_scalar"], [1434, "ivy.container.container_methods.static_to_scalar"]], "to_scalar() (in module ivy.array.array_methods)": [[1433, "ivy.array.array_methods.to_scalar"], [1435, "ivy.array.array_methods.to_scalar"]], "to_scalar() (in module ivy.container.container_methods)": [[1433, "ivy.container.container_methods.to_scalar"], [1436, "ivy.container.container_methods.to_scalar"]], "static_value_is_nan() (in module ivy.container.container_methods)": [[1445, "ivy.container.container_methods.static_value_is_nan"], [1446, "ivy.container.container_methods.static_value_is_nan"]], "value_is_nan() (in module ivy.array.array_methods)": [[1445, "ivy.array.array_methods.value_is_nan"], [1447, "ivy.array.array_methods.value_is_nan"]], "value_is_nan() (in module ivy.container.container_methods)": [[1445, "ivy.container.container_methods.value_is_nan"], [1448, "ivy.container.container_methods.value_is_nan"]], "gradienttracking (class in ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.GradientTracking"], [1452, "ivy.functional.ivy.gradients.GradientTracking"]], "__init__() (ivy.functional.ivy.gradients.gradienttracking method)": [[1451, "ivy.functional.ivy.gradients.GradientTracking.__init__"], [1452, "ivy.functional.ivy.gradients.GradientTracking.__init__"]], "adam_step() (in module ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.adam_step"], [1453, "ivy.functional.ivy.gradients.adam_step"], [1456, "ivy.functional.ivy.gradients.adam_step"]], "adam_update() (in module ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.adam_update"], [1457, "ivy.functional.ivy.gradients.adam_update"], [1460, "ivy.functional.ivy.gradients.adam_update"]], "execute_with_gradients() (in module ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.execute_with_gradients"], [1461, "ivy.functional.ivy.gradients.execute_with_gradients"]], "grad() (in module ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.grad"], [1462, "ivy.functional.ivy.gradients.grad"]], "gradient_descent_update() (in module ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.gradient_descent_update"], [1463, "ivy.functional.ivy.gradients.gradient_descent_update"], [1466, "ivy.functional.ivy.gradients.gradient_descent_update"]], "ivy.functional.ivy.gradients": [[1451, "module-ivy.functional.ivy.gradients"]], "jac() (in module ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.jac"], [1467, "ivy.functional.ivy.gradients.jac"]], "lamb_update() (in module ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.lamb_update"], [1468, "ivy.functional.ivy.gradients.lamb_update"], [1471, "ivy.functional.ivy.gradients.lamb_update"]], "lars_update() (in module ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.lars_update"], [1472, "ivy.functional.ivy.gradients.lars_update"], [1475, "ivy.functional.ivy.gradients.lars_update"]], "optimizer_update() (in module ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.optimizer_update"], [1476, "ivy.functional.ivy.gradients.optimizer_update"], [1479, "ivy.functional.ivy.gradients.optimizer_update"]], "set_with_grads() (in module ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.set_with_grads"], [1480, "ivy.functional.ivy.gradients.set_with_grads"]], "stop_gradient() (in module ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.stop_gradient"], [1481, "ivy.functional.ivy.gradients.stop_gradient"], [1485, "ivy.functional.ivy.gradients.stop_gradient"]], "unset_with_grads() (in module ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.unset_with_grads"], [1486, "ivy.functional.ivy.gradients.unset_with_grads"]], "value_and_grad() (in module ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.value_and_grad"], [1487, "ivy.functional.ivy.gradients.value_and_grad"]], "with_grads() (in module ivy.functional.ivy.gradients)": [[1451, "ivy.functional.ivy.gradients.with_grads"], [1488, "ivy.functional.ivy.gradients.with_grads"]], "adam_step() (in module ivy.array.array_methods)": [[1453, "ivy.array.array_methods.adam_step"], [1454, "ivy.array.array_methods.adam_step"]], "adam_step() (in module ivy.container.container_methods)": [[1453, "ivy.container.container_methods.adam_step"], [1455, "ivy.container.container_methods.adam_step"]], "adam_update() (in module ivy.array.array_methods)": [[1457, "ivy.array.array_methods.adam_update"], [1458, "ivy.array.array_methods.adam_update"]], "adam_update() (in module ivy.container.container_methods)": [[1457, "ivy.container.container_methods.adam_update"], [1459, "ivy.container.container_methods.adam_update"]], "gradient_descent_update() (in module ivy.array.array_methods)": [[1463, "ivy.array.array_methods.gradient_descent_update"], [1464, "ivy.array.array_methods.gradient_descent_update"]], "gradient_descent_update() (in module ivy.container.container_methods)": [[1463, "ivy.container.container_methods.gradient_descent_update"], [1465, "ivy.container.container_methods.gradient_descent_update"]], "lamb_update() (in module ivy.array.array_methods)": [[1468, "ivy.array.array_methods.lamb_update"], [1469, "ivy.array.array_methods.lamb_update"]], "lamb_update() (in module ivy.container.container_methods)": [[1468, "ivy.container.container_methods.lamb_update"], [1470, "ivy.container.container_methods.lamb_update"]], "lars_update() (in module ivy.array.array_methods)": [[1472, "ivy.array.array_methods.lars_update"], [1473, "ivy.array.array_methods.lars_update"]], "lars_update() (in module ivy.container.container_methods)": [[1472, "ivy.container.container_methods.lars_update"], [1474, "ivy.container.container_methods.lars_update"]], "optimizer_update() (in module ivy.array.array_methods)": [[1476, "ivy.array.array_methods.optimizer_update"], [1477, "ivy.array.array_methods.optimizer_update"]], "optimizer_update() (in module ivy.container.container_methods)": [[1476, "ivy.container.container_methods.optimizer_update"], [1478, "ivy.container.container_methods.optimizer_update"]], "static_stop_gradient() (in module ivy.container.container_methods)": [[1481, "ivy.container.container_methods.static_stop_gradient"], [1482, "ivy.container.container_methods.static_stop_gradient"]], "stop_gradient() (in module ivy.array.array_methods)": [[1481, "ivy.array.array_methods.stop_gradient"], [1483, "ivy.array.array_methods.stop_gradient"]], "stop_gradient() (in module ivy.container.container_methods)": [[1481, "ivy.container.container_methods.stop_gradient"], [1484, "ivy.container.container_methods.stop_gradient"]], "conv() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.conv"], [1490, "ivy.functional.ivy.layers.conv"]], "conv1d() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.conv1d"], [1491, "ivy.functional.ivy.layers.conv1d"], [1494, "ivy.functional.ivy.layers.conv1d"]], "conv1d_transpose() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.conv1d_transpose"], [1496, "ivy.functional.ivy.layers.conv1d_transpose"], [1499, "ivy.functional.ivy.layers.conv1d_transpose"]], "conv2d() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.conv2d"], [1501, "ivy.functional.ivy.layers.conv2d"], [1504, "ivy.functional.ivy.layers.conv2d"]], "conv2d_transpose() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.conv2d_transpose"], [1506, "ivy.functional.ivy.layers.conv2d_transpose"], [1508, "ivy.functional.ivy.layers.conv2d_transpose"]], "conv3d() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.conv3d"], [1510, "ivy.functional.ivy.layers.conv3d"], [1513, "ivy.functional.ivy.layers.conv3d"]], "conv3d_transpose() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.conv3d_transpose"], [1515, "ivy.functional.ivy.layers.conv3d_transpose"], [1518, "ivy.functional.ivy.layers.conv3d_transpose"]], "conv_general_dilated() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.conv_general_dilated"], [1520, "ivy.functional.ivy.layers.conv_general_dilated"]], "conv_general_transpose() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.conv_general_transpose"], [1521, "ivy.functional.ivy.layers.conv_general_transpose"]], "deconv_length() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.deconv_length"], [1522, "ivy.functional.ivy.layers.deconv_length"]], "depthwise_conv2d() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.depthwise_conv2d"], [1523, "ivy.functional.ivy.layers.depthwise_conv2d"], [1526, "ivy.functional.ivy.layers.depthwise_conv2d"]], "dropout() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.dropout"], [1528, "ivy.functional.ivy.layers.dropout"], [1531, "ivy.functional.ivy.layers.dropout"]], "get_x_data_format() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.get_x_data_format"], [1533, "ivy.functional.ivy.layers.get_x_data_format"]], "handle_padding() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.handle_padding"], [1534, "ivy.functional.ivy.layers.handle_padding"]], "ivy.functional.ivy.layers": [[1489, "module-ivy.functional.ivy.layers"]], "linear() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.linear"], [1535, "ivy.functional.ivy.layers.linear"], [1538, "ivy.functional.ivy.layers.linear"]], "lstm_update() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.lstm_update"], [1540, "ivy.functional.ivy.layers.lstm_update"], [1543, "ivy.functional.ivy.layers.lstm_update"]], "multi_head_attention() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.multi_head_attention"], [1545, "ivy.functional.ivy.layers.multi_head_attention"], [1548, "ivy.functional.ivy.layers.multi_head_attention"]], "scaled_dot_product_attention() (in module ivy.functional.ivy.layers)": [[1489, "ivy.functional.ivy.layers.scaled_dot_product_attention"], [1550, "ivy.functional.ivy.layers.scaled_dot_product_attention"], [1553, "ivy.functional.ivy.layers.scaled_dot_product_attention"]], "conv1d() (in module ivy.array.array_methods)": [[1491, "ivy.array.array_methods.conv1d"], [1492, "ivy.array.array_methods.conv1d"]], "conv1d() (in module ivy.container.container_methods)": [[1491, "ivy.container.container_methods.conv1d"], [1493, "ivy.container.container_methods.conv1d"]], "static_conv1d() (in module ivy.container.container_methods)": [[1491, "ivy.container.container_methods.static_conv1d"], [1495, "ivy.container.container_methods.static_conv1d"]], "conv1d_transpose() (in module ivy.array.array_methods)": [[1496, "ivy.array.array_methods.conv1d_transpose"], [1497, "ivy.array.array_methods.conv1d_transpose"]], "conv1d_transpose() (in module ivy.container.container_methods)": [[1496, "ivy.container.container_methods.conv1d_transpose"], [1498, "ivy.container.container_methods.conv1d_transpose"]], "static_conv1d_transpose() (in module ivy.container.container_methods)": [[1496, "ivy.container.container_methods.static_conv1d_transpose"], [1500, "ivy.container.container_methods.static_conv1d_transpose"]], "conv2d() (in module ivy.array.array_methods)": [[1501, "ivy.array.array_methods.conv2d"], [1502, "ivy.array.array_methods.conv2d"]], "conv2d() (in module ivy.container.container_methods)": [[1501, "ivy.container.container_methods.conv2d"], [1503, "ivy.container.container_methods.conv2d"]], "static_conv2d() (in module ivy.container.container_methods)": [[1501, "ivy.container.container_methods.static_conv2d"], [1505, "ivy.container.container_methods.static_conv2d"]], "conv2d_transpose() (in module ivy.container.container_methods)": [[1506, "ivy.container.container_methods.conv2d_transpose"], [1507, "ivy.container.container_methods.conv2d_transpose"]], "static_conv2d_transpose() (in module ivy.container.container_methods)": [[1506, "ivy.container.container_methods.static_conv2d_transpose"], [1509, "ivy.container.container_methods.static_conv2d_transpose"]], "conv3d() (in module ivy.array.array_methods)": [[1510, "ivy.array.array_methods.conv3d"], [1511, "ivy.array.array_methods.conv3d"]], "conv3d() (in module ivy.container.container_methods)": [[1510, "ivy.container.container_methods.conv3d"], [1512, "ivy.container.container_methods.conv3d"]], "static_conv3d() (in module ivy.container.container_methods)": [[1510, "ivy.container.container_methods.static_conv3d"], [1514, "ivy.container.container_methods.static_conv3d"]], "conv3d_transpose() (in module ivy.array.array_methods)": [[1515, "ivy.array.array_methods.conv3d_transpose"], [1516, "ivy.array.array_methods.conv3d_transpose"]], "conv3d_transpose() (in module ivy.container.container_methods)": [[1515, "ivy.container.container_methods.conv3d_transpose"], [1517, "ivy.container.container_methods.conv3d_transpose"]], "static_conv3d_transpose() (in module ivy.container.container_methods)": [[1515, "ivy.container.container_methods.static_conv3d_transpose"], [1519, "ivy.container.container_methods.static_conv3d_transpose"]], "depthwise_conv2d() (in module ivy.array.array_methods)": [[1523, "ivy.array.array_methods.depthwise_conv2d"], [1524, "ivy.array.array_methods.depthwise_conv2d"]], "depthwise_conv2d() (in module ivy.container.container_methods)": [[1523, "ivy.container.container_methods.depthwise_conv2d"], [1525, "ivy.container.container_methods.depthwise_conv2d"]], "static_depthwise_conv2d() (in module ivy.container.container_methods)": [[1523, "ivy.container.container_methods.static_depthwise_conv2d"], [1527, "ivy.container.container_methods.static_depthwise_conv2d"]], "dropout() (in module ivy.array.array_methods)": [[1528, "ivy.array.array_methods.dropout"], [1529, "ivy.array.array_methods.dropout"]], "dropout() (in module ivy.container.container_methods)": [[1528, "ivy.container.container_methods.dropout"], [1530, "ivy.container.container_methods.dropout"]], "static_dropout() (in module ivy.container.container_methods)": [[1528, "ivy.container.container_methods.static_dropout"], [1532, "ivy.container.container_methods.static_dropout"]], "linear() (in module ivy.array.array_methods)": [[1535, "ivy.array.array_methods.linear"], [1536, "ivy.array.array_methods.linear"]], "linear() (in module ivy.container.container_methods)": [[1535, "ivy.container.container_methods.linear"], [1537, "ivy.container.container_methods.linear"]], "static_linear() (in module ivy.container.container_methods)": [[1535, "ivy.container.container_methods.static_linear"], [1539, "ivy.container.container_methods.static_linear"]], "lstm_update() (in module ivy.array.array_methods)": [[1540, "ivy.array.array_methods.lstm_update"], [1541, "ivy.array.array_methods.lstm_update"]], "lstm_update() (in module ivy.container.container_methods)": [[1540, "ivy.container.container_methods.lstm_update"], [1542, "ivy.container.container_methods.lstm_update"]], "static_lstm_update() (in module ivy.container.container_methods)": [[1540, "ivy.container.container_methods.static_lstm_update"], [1544, "ivy.container.container_methods.static_lstm_update"]], "multi_head_attention() (in module ivy.array.array_methods)": [[1545, "ivy.array.array_methods.multi_head_attention"], [1546, "ivy.array.array_methods.multi_head_attention"]], "multi_head_attention() (in module ivy.container.container_methods)": [[1545, "ivy.container.container_methods.multi_head_attention"], [1547, "ivy.container.container_methods.multi_head_attention"]], "static_multi_head_attention() (in module ivy.container.container_methods)": [[1545, "ivy.container.container_methods.static_multi_head_attention"], [1549, "ivy.container.container_methods.static_multi_head_attention"]], "scaled_dot_product_attention() (in module ivy.array.array_methods)": [[1550, "ivy.array.array_methods.scaled_dot_product_attention"], [1551, "ivy.array.array_methods.scaled_dot_product_attention"]], "scaled_dot_product_attention() (in module ivy.container.container_methods)": [[1550, "ivy.container.container_methods.scaled_dot_product_attention"], [1552, "ivy.container.container_methods.scaled_dot_product_attention"]], "static_scaled_dot_product_attention() (in module ivy.container.container_methods)": [[1550, "ivy.container.container_methods.static_scaled_dot_product_attention"], [1554, "ivy.container.container_methods.static_scaled_dot_product_attention"]], "cholesky() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.cholesky"], [1556, "ivy.functional.ivy.linear_algebra.cholesky"], [1559, "ivy.functional.ivy.linear_algebra.cholesky"]], "cross() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.cross"], [1561, "ivy.functional.ivy.linear_algebra.cross"], [1564, "ivy.functional.ivy.linear_algebra.cross"]], "det() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.det"], [1566, "ivy.functional.ivy.linear_algebra.det"], [1569, "ivy.functional.ivy.linear_algebra.det"]], "diag() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.diag"], [1571, "ivy.functional.ivy.linear_algebra.diag"], [1574, "ivy.functional.ivy.linear_algebra.diag"]], "diagonal() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.diagonal"], [1576, "ivy.functional.ivy.linear_algebra.diagonal"], [1579, "ivy.functional.ivy.linear_algebra.diagonal"]], "eig() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.eig"], [1581, "ivy.functional.ivy.linear_algebra.eig"]], "eigh() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.eigh"], [1582, "ivy.functional.ivy.linear_algebra.eigh"], [1585, "ivy.functional.ivy.linear_algebra.eigh"]], "eigvalsh() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.eigvalsh"], [1587, "ivy.functional.ivy.linear_algebra.eigvalsh"], [1590, "ivy.functional.ivy.linear_algebra.eigvalsh"]], "inner() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.inner"], [1592, "ivy.functional.ivy.linear_algebra.inner"], [1595, "ivy.functional.ivy.linear_algebra.inner"]], "inv() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.inv"], [1597, "ivy.functional.ivy.linear_algebra.inv"], [1600, "ivy.functional.ivy.linear_algebra.inv"]], "ivy.functional.ivy.linear_algebra": [[1555, "module-ivy.functional.ivy.linear_algebra"]], "matmul() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.matmul"], [1602, "ivy.functional.ivy.linear_algebra.matmul"], [1605, "ivy.functional.ivy.linear_algebra.matmul"]], "matrix_norm() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.matrix_norm"], [1607, "ivy.functional.ivy.linear_algebra.matrix_norm"], [1610, "ivy.functional.ivy.linear_algebra.matrix_norm"]], "matrix_power() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.matrix_power"], [1612, "ivy.functional.ivy.linear_algebra.matrix_power"], [1615, "ivy.functional.ivy.linear_algebra.matrix_power"]], "matrix_rank() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.matrix_rank"], [1617, "ivy.functional.ivy.linear_algebra.matrix_rank"], [1620, "ivy.functional.ivy.linear_algebra.matrix_rank"]], "matrix_transpose() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.matrix_transpose"], [1622, "ivy.functional.ivy.linear_algebra.matrix_transpose"], [1625, "ivy.functional.ivy.linear_algebra.matrix_transpose"]], "outer() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.outer"], [1627, "ivy.functional.ivy.linear_algebra.outer"], [1630, "ivy.functional.ivy.linear_algebra.outer"]], "pinv() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.pinv"], [1632, "ivy.functional.ivy.linear_algebra.pinv"], [1635, "ivy.functional.ivy.linear_algebra.pinv"]], "qr() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.qr"], [1637, "ivy.functional.ivy.linear_algebra.qr"], [1640, "ivy.functional.ivy.linear_algebra.qr"]], "slogdet() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.slogdet"], [1642, "ivy.functional.ivy.linear_algebra.slogdet"], [1645, "ivy.functional.ivy.linear_algebra.slogdet"]], "solve() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.solve"], [1647, "ivy.functional.ivy.linear_algebra.solve"], [1650, "ivy.functional.ivy.linear_algebra.solve"]], "svd() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.svd"], [1652, "ivy.functional.ivy.linear_algebra.svd"], [1656, "ivy.functional.ivy.linear_algebra.svd"]], "svdvals() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.svdvals"], [1657, "ivy.functional.ivy.linear_algebra.svdvals"], [1661, "ivy.functional.ivy.linear_algebra.svdvals"]], "tensordot() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.tensordot"], [1662, "ivy.functional.ivy.linear_algebra.tensordot"], [1665, "ivy.functional.ivy.linear_algebra.tensordot"]], "tensorsolve() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.tensorsolve"], [1666, "ivy.functional.ivy.linear_algebra.tensorsolve"], [1669, "ivy.functional.ivy.linear_algebra.tensorsolve"]], "trace() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.trace"], [1670, "ivy.functional.ivy.linear_algebra.trace"], [1674, "ivy.functional.ivy.linear_algebra.trace"]], "vander() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.vander"], [1675, "ivy.functional.ivy.linear_algebra.vander"], [1679, "ivy.functional.ivy.linear_algebra.vander"]], "vecdot() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.vecdot"], [1680, "ivy.functional.ivy.linear_algebra.vecdot"], [1684, "ivy.functional.ivy.linear_algebra.vecdot"]], "vector_norm() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.vector_norm"], [1685, "ivy.functional.ivy.linear_algebra.vector_norm"], [1689, "ivy.functional.ivy.linear_algebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (in module ivy.functional.ivy.linear_algebra)": [[1555, "ivy.functional.ivy.linear_algebra.vector_to_skew_symmetric_matrix"], [1690, "ivy.functional.ivy.linear_algebra.vector_to_skew_symmetric_matrix"], [1694, "ivy.functional.ivy.linear_algebra.vector_to_skew_symmetric_matrix"]], "cholesky() (in module ivy.array.array_methods)": [[1556, "ivy.array.array_methods.cholesky"], [1557, "ivy.array.array_methods.cholesky"]], "cholesky() (in module ivy.container.container_methods)": [[1556, "ivy.container.container_methods.cholesky"], [1558, "ivy.container.container_methods.cholesky"]], "static_cholesky() (in module ivy.container.container_methods)": [[1556, "ivy.container.container_methods.static_cholesky"], [1560, "ivy.container.container_methods.static_cholesky"]], "cross() (in module ivy.array.array_methods)": [[1561, "ivy.array.array_methods.cross"], [1562, "ivy.array.array_methods.cross"]], "cross() (in module ivy.container.container_methods)": [[1561, "ivy.container.container_methods.cross"], [1563, "ivy.container.container_methods.cross"]], "static_cross() (in module ivy.container.container_methods)": [[1561, "ivy.container.container_methods.static_cross"], [1565, "ivy.container.container_methods.static_cross"]], "det() (in module ivy.array.array_methods)": [[1566, "ivy.array.array_methods.det"], [1567, "ivy.array.array_methods.det"]], "det() (in module ivy.container.container_methods)": [[1566, "ivy.container.container_methods.det"], [1568, "ivy.container.container_methods.det"]], "static_det() (in module ivy.container.container_methods)": [[1566, "ivy.container.container_methods.static_det"], [1570, "ivy.container.container_methods.static_det"]], "diag() (in module ivy.array.array_methods)": [[1571, "ivy.array.array_methods.diag"], [1572, "ivy.array.array_methods.diag"]], "diag() (in module ivy.container.container_methods)": [[1571, "ivy.container.container_methods.diag"], [1573, "ivy.container.container_methods.diag"]], "static_diag() (in module ivy.container.container_methods)": [[1571, "ivy.container.container_methods.static_diag"], [1575, "ivy.container.container_methods.static_diag"]], "diagonal() (in module ivy.array.array_methods)": [[1576, "ivy.array.array_methods.diagonal"], [1577, "ivy.array.array_methods.diagonal"]], "diagonal() (in module ivy.container.container_methods)": [[1576, "ivy.container.container_methods.diagonal"], [1578, "ivy.container.container_methods.diagonal"]], "static_diagonal() (in module ivy.container.container_methods)": [[1576, "ivy.container.container_methods.static_diagonal"], [1580, "ivy.container.container_methods.static_diagonal"]], "eigh() (in module ivy.array.array_methods)": [[1582, "ivy.array.array_methods.eigh"], [1583, "ivy.array.array_methods.eigh"]], "eigh() (in module ivy.container.container_methods)": [[1582, "ivy.container.container_methods.eigh"], [1584, "ivy.container.container_methods.eigh"]], "static_eigh() (in module ivy.container.container_methods)": [[1582, "ivy.container.container_methods.static_eigh"], [1586, "ivy.container.container_methods.static_eigh"]], "eigvalsh() (in module ivy.array.array_methods)": [[1587, "ivy.array.array_methods.eigvalsh"], [1588, "ivy.array.array_methods.eigvalsh"]], "eigvalsh() (in module ivy.container.container_methods)": [[1587, "ivy.container.container_methods.eigvalsh"], [1589, "ivy.container.container_methods.eigvalsh"]], "static_eigvalsh() (in module ivy.container.container_methods)": [[1587, "ivy.container.container_methods.static_eigvalsh"], [1591, "ivy.container.container_methods.static_eigvalsh"]], "inner() (in module ivy.array.array_methods)": [[1592, "ivy.array.array_methods.inner"], [1593, "ivy.array.array_methods.inner"]], "inner() (in module ivy.container.container_methods)": [[1592, "ivy.container.container_methods.inner"], [1594, "ivy.container.container_methods.inner"]], "static_inner() (in module ivy.container.container_methods)": [[1592, "ivy.container.container_methods.static_inner"], [1596, "ivy.container.container_methods.static_inner"]], "inv() (in module ivy.array.array_methods)": [[1597, "ivy.array.array_methods.inv"], [1598, "ivy.array.array_methods.inv"]], "inv() (in module ivy.container.container_methods)": [[1597, "ivy.container.container_methods.inv"], [1599, "ivy.container.container_methods.inv"]], "static_inv() (in module ivy.container.container_methods)": [[1597, "ivy.container.container_methods.static_inv"], [1601, "ivy.container.container_methods.static_inv"]], "matmul() (in module ivy.array.array_methods)": [[1602, "ivy.array.array_methods.matmul"], [1603, "ivy.array.array_methods.matmul"]], "matmul() (in module ivy.container.container_methods)": [[1602, "ivy.container.container_methods.matmul"], [1604, "ivy.container.container_methods.matmul"]], "static_matmul() (in module ivy.container.container_methods)": [[1602, "ivy.container.container_methods.static_matmul"], [1606, "ivy.container.container_methods.static_matmul"]], "matrix_norm() (in module ivy.array.array_methods)": [[1607, "ivy.array.array_methods.matrix_norm"], [1608, "ivy.array.array_methods.matrix_norm"]], "matrix_norm() (in module ivy.container.container_methods)": [[1607, "ivy.container.container_methods.matrix_norm"], [1609, "ivy.container.container_methods.matrix_norm"]], "static_matrix_norm() (in module ivy.container.container_methods)": [[1607, "ivy.container.container_methods.static_matrix_norm"], [1611, "ivy.container.container_methods.static_matrix_norm"]], "matrix_power() (in module ivy.array.array_methods)": [[1612, "ivy.array.array_methods.matrix_power"], [1613, "ivy.array.array_methods.matrix_power"]], "matrix_power() (in module ivy.container.container_methods)": [[1612, "ivy.container.container_methods.matrix_power"], [1614, "ivy.container.container_methods.matrix_power"]], "static_matrix_power() (in module ivy.container.container_methods)": [[1612, "ivy.container.container_methods.static_matrix_power"], [1616, "ivy.container.container_methods.static_matrix_power"]], "matrix_rank() (in module ivy.array.array_methods)": [[1617, "ivy.array.array_methods.matrix_rank"], [1618, "ivy.array.array_methods.matrix_rank"]], "matrix_rank() (in module ivy.container.container_methods)": [[1617, "ivy.container.container_methods.matrix_rank"], [1619, "ivy.container.container_methods.matrix_rank"]], "static_matrix_rank() (in module ivy.container.container_methods)": [[1617, "ivy.container.container_methods.static_matrix_rank"], [1621, "ivy.container.container_methods.static_matrix_rank"]], "matrix_transpose() (in module ivy.array.array_methods)": [[1622, "ivy.array.array_methods.matrix_transpose"], [1623, "ivy.array.array_methods.matrix_transpose"]], "matrix_transpose() (in module ivy.container.container_methods)": [[1622, "ivy.container.container_methods.matrix_transpose"], [1624, "ivy.container.container_methods.matrix_transpose"]], "static_matrix_transpose() (in module ivy.container.container_methods)": [[1622, "ivy.container.container_methods.static_matrix_transpose"], [1626, "ivy.container.container_methods.static_matrix_transpose"]], "outer() (in module ivy.array.array_methods)": [[1627, "ivy.array.array_methods.outer"], [1628, "ivy.array.array_methods.outer"]], "outer() (in module ivy.container.container_methods)": [[1627, "ivy.container.container_methods.outer"], [1629, "ivy.container.container_methods.outer"]], "static_outer() (in module ivy.container.container_methods)": [[1627, "ivy.container.container_methods.static_outer"], [1631, "ivy.container.container_methods.static_outer"]], "pinv() (in module ivy.array.array_methods)": [[1632, "ivy.array.array_methods.pinv"], [1633, "ivy.array.array_methods.pinv"]], "pinv() (in module ivy.container.container_methods)": [[1632, "ivy.container.container_methods.pinv"], [1634, "ivy.container.container_methods.pinv"]], "static_pinv() (in module ivy.container.container_methods)": [[1632, "ivy.container.container_methods.static_pinv"], [1636, "ivy.container.container_methods.static_pinv"]], "qr() (in module ivy.array.array_methods)": [[1637, "ivy.array.array_methods.qr"], [1638, "ivy.array.array_methods.qr"]], "qr() (in module ivy.container.container_methods)": [[1637, "ivy.container.container_methods.qr"], [1639, "ivy.container.container_methods.qr"]], "static_qr() (in module ivy.container.container_methods)": [[1637, "ivy.container.container_methods.static_qr"], [1641, "ivy.container.container_methods.static_qr"]], "slogdet() (in module ivy.array.array_methods)": [[1642, "ivy.array.array_methods.slogdet"], [1643, "ivy.array.array_methods.slogdet"]], "slogdet() (in module ivy.container.container_methods)": [[1642, "ivy.container.container_methods.slogdet"], [1644, "ivy.container.container_methods.slogdet"]], "static_slogdet() (in module ivy.container.container_methods)": [[1642, "ivy.container.container_methods.static_slogdet"], [1646, "ivy.container.container_methods.static_slogdet"]], "solve() (in module ivy.array.array_methods)": [[1647, "ivy.array.array_methods.solve"], [1648, "ivy.array.array_methods.solve"]], "solve() (in module ivy.container.container_methods)": [[1647, "ivy.container.container_methods.solve"], [1649, "ivy.container.container_methods.solve"]], "static_solve() (in module ivy.container.container_methods)": [[1647, "ivy.container.container_methods.static_solve"], [1651, "ivy.container.container_methods.static_solve"]], "static_svd() (in module ivy.container.container_methods)": [[1652, "ivy.container.container_methods.static_svd"], [1653, "ivy.container.container_methods.static_svd"]], "svd() (in module ivy.array.array_methods)": [[1652, "ivy.array.array_methods.svd"], [1654, "ivy.array.array_methods.svd"]], "svd() (in module ivy.container.container_methods)": [[1652, "ivy.container.container_methods.svd"], [1655, "ivy.container.container_methods.svd"]], "static_svdvals() (in module ivy.container.container_methods)": [[1657, "ivy.container.container_methods.static_svdvals"], [1658, "ivy.container.container_methods.static_svdvals"]], "svdvals() (in module ivy.array.array_methods)": [[1657, "ivy.array.array_methods.svdvals"], [1659, "ivy.array.array_methods.svdvals"]], "svdvals() (in module ivy.container.container_methods)": [[1657, "ivy.container.container_methods.svdvals"], [1660, "ivy.container.container_methods.svdvals"]], "static_tensordot() (in module ivy.container.container_methods)": [[1662, "ivy.container.container_methods.static_tensordot"], [1663, "ivy.container.container_methods.static_tensordot"]], "tensordot() (in module ivy.container.container_methods)": [[1662, "ivy.container.container_methods.tensordot"], [1664, "ivy.container.container_methods.tensordot"]], "tensorsolve() (in module ivy.array.array_methods)": [[1666, "ivy.array.array_methods.tensorsolve"], [1667, "ivy.array.array_methods.tensorsolve"]], "tensorsolve() (in module ivy.container.container_methods)": [[1666, "ivy.container.container_methods.tensorsolve"], [1668, "ivy.container.container_methods.tensorsolve"]], "static_trace() (in module ivy.container.container_methods)": [[1670, "ivy.container.container_methods.static_trace"], [1671, "ivy.container.container_methods.static_trace"]], "trace() (in module ivy.array.array_methods)": [[1670, "ivy.array.array_methods.trace"], [1672, "ivy.array.array_methods.trace"]], "trace() (in module ivy.container.container_methods)": [[1670, "ivy.container.container_methods.trace"], [1673, "ivy.container.container_methods.trace"]], "static_vander() (in module ivy.container.container_methods)": [[1675, "ivy.container.container_methods.static_vander"], [1676, "ivy.container.container_methods.static_vander"]], "vander() (in module ivy.array.array_methods)": [[1675, "ivy.array.array_methods.vander"], [1677, "ivy.array.array_methods.vander"]], "vander() (in module ivy.container.container_methods)": [[1675, "ivy.container.container_methods.vander"], [1678, "ivy.container.container_methods.vander"]], "static_vecdot() (in module ivy.container.container_methods)": [[1680, "ivy.container.container_methods.static_vecdot"], [1681, "ivy.container.container_methods.static_vecdot"]], "vecdot() (in module ivy.array.array_methods)": [[1680, "ivy.array.array_methods.vecdot"], [1682, "ivy.array.array_methods.vecdot"]], "vecdot() (in module ivy.container.container_methods)": [[1680, "ivy.container.container_methods.vecdot"], [1683, "ivy.container.container_methods.vecdot"]], "static_vector_norm() (in module ivy.container.container_methods)": [[1685, "ivy.container.container_methods.static_vector_norm"], [1686, "ivy.container.container_methods.static_vector_norm"]], "vector_norm() (in module ivy.array.array_methods)": [[1685, "ivy.array.array_methods.vector_norm"], [1687, "ivy.array.array_methods.vector_norm"]], "vector_norm() (in module ivy.container.container_methods)": [[1685, "ivy.container.container_methods.vector_norm"], [1688, "ivy.container.container_methods.vector_norm"]], "static_vector_to_skew_symmetric_matrix() (in module ivy.container.container_methods)": [[1690, "ivy.container.container_methods.static_vector_to_skew_symmetric_matrix"], [1691, "ivy.container.container_methods.static_vector_to_skew_symmetric_matrix"]], "vector_to_skew_symmetric_matrix() (in module ivy.array.array_methods)": [[1690, "ivy.array.array_methods.vector_to_skew_symmetric_matrix"], [1692, "ivy.array.array_methods.vector_to_skew_symmetric_matrix"]], "vector_to_skew_symmetric_matrix() (in module ivy.container.container_methods)": [[1690, "ivy.container.container_methods.vector_to_skew_symmetric_matrix"], [1693, "ivy.container.container_methods.vector_to_skew_symmetric_matrix"]], "binary_cross_entropy() (in module ivy.functional.ivy.losses)": [[1695, "ivy.functional.ivy.losses.binary_cross_entropy"], [1696, "ivy.functional.ivy.losses.binary_cross_entropy"], [1699, "ivy.functional.ivy.losses.binary_cross_entropy"]], "cross_entropy() (in module ivy.functional.ivy.losses)": [[1695, "ivy.functional.ivy.losses.cross_entropy"], [1701, "ivy.functional.ivy.losses.cross_entropy"], [1704, "ivy.functional.ivy.losses.cross_entropy"]], "ivy.functional.ivy.losses": [[1695, "module-ivy.functional.ivy.losses"]], "sparse_cross_entropy() (in module ivy.functional.ivy.losses)": [[1695, "ivy.functional.ivy.losses.sparse_cross_entropy"], [1706, "ivy.functional.ivy.losses.sparse_cross_entropy"], [1709, "ivy.functional.ivy.losses.sparse_cross_entropy"]], "binary_cross_entropy() (in module ivy.array.array_methods)": [[1696, "ivy.array.array_methods.binary_cross_entropy"], [1697, "ivy.array.array_methods.binary_cross_entropy"]], "binary_cross_entropy() (in module ivy.container.container_methods)": [[1696, "ivy.container.container_methods.binary_cross_entropy"], [1698, "ivy.container.container_methods.binary_cross_entropy"]], "static_binary_cross_entropy() (in module ivy.container.container_methods)": [[1696, "ivy.container.container_methods.static_binary_cross_entropy"], [1700, "ivy.container.container_methods.static_binary_cross_entropy"]], "cross_entropy() (in module ivy.array.array_methods)": [[1701, "ivy.array.array_methods.cross_entropy"], [1702, "ivy.array.array_methods.cross_entropy"]], "cross_entropy() (in module ivy.container.container_methods)": [[1701, "ivy.container.container_methods.cross_entropy"], [1703, "ivy.container.container_methods.cross_entropy"]], "static_cross_entropy() (in module ivy.container.container_methods)": [[1701, "ivy.container.container_methods.static_cross_entropy"], [1705, "ivy.container.container_methods.static_cross_entropy"]], "sparse_cross_entropy() (in module ivy.array.array_methods)": [[1706, "ivy.array.array_methods.sparse_cross_entropy"], [1707, "ivy.array.array_methods.sparse_cross_entropy"]], "sparse_cross_entropy() (in module ivy.container.container_methods)": [[1706, "ivy.container.container_methods.sparse_cross_entropy"], [1708, "ivy.container.container_methods.sparse_cross_entropy"]], "static_sparse_cross_entropy() (in module ivy.container.container_methods)": [[1706, "ivy.container.container_methods.static_sparse_cross_entropy"], [1710, "ivy.container.container_methods.static_sparse_cross_entropy"]], "clip() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.clip"], [1712, "ivy.functional.ivy.manipulation.clip"], [1715, "ivy.functional.ivy.manipulation.clip"]], "concat() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.concat"], [1717, "ivy.functional.ivy.manipulation.concat"], [1720, "ivy.functional.ivy.manipulation.concat"]], "constant_pad() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.constant_pad"], [1722, "ivy.functional.ivy.manipulation.constant_pad"], [1725, "ivy.functional.ivy.manipulation.constant_pad"]], "expand_dims() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.expand_dims"], [1727, "ivy.functional.ivy.manipulation.expand_dims"], [1730, "ivy.functional.ivy.manipulation.expand_dims"]], "flip() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.flip"], [1732, "ivy.functional.ivy.manipulation.flip"], [1735, "ivy.functional.ivy.manipulation.flip"]], "ivy.functional.ivy.manipulation": [[1711, "module-ivy.functional.ivy.manipulation"]], "permute_dims() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.permute_dims"], [1737, "ivy.functional.ivy.manipulation.permute_dims"], [1740, "ivy.functional.ivy.manipulation.permute_dims"]], "repeat() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.repeat"], [1742, "ivy.functional.ivy.manipulation.repeat"], [1745, "ivy.functional.ivy.manipulation.repeat"]], "reshape() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.reshape"], [1747, "ivy.functional.ivy.manipulation.reshape"], [1750, "ivy.functional.ivy.manipulation.reshape"]], "roll() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.roll"], [1752, "ivy.functional.ivy.manipulation.roll"], [1755, "ivy.functional.ivy.manipulation.roll"]], "split() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.split"], [1757, "ivy.functional.ivy.manipulation.split"], [1760, "ivy.functional.ivy.manipulation.split"]], "squeeze() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.squeeze"], [1762, "ivy.functional.ivy.manipulation.squeeze"], [1765, "ivy.functional.ivy.manipulation.squeeze"]], "stack() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.stack"], [1767, "ivy.functional.ivy.manipulation.stack"], [1770, "ivy.functional.ivy.manipulation.stack"]], "swapaxes() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.swapaxes"], [1772, "ivy.functional.ivy.manipulation.swapaxes"], [1776, "ivy.functional.ivy.manipulation.swapaxes"]], "tile() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.tile"], [1777, "ivy.functional.ivy.manipulation.tile"], [1781, "ivy.functional.ivy.manipulation.tile"]], "unstack() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.unstack"], [1782, "ivy.functional.ivy.manipulation.unstack"], [1786, "ivy.functional.ivy.manipulation.unstack"]], "zero_pad() (in module ivy.functional.ivy.manipulation)": [[1711, "ivy.functional.ivy.manipulation.zero_pad"], [1787, "ivy.functional.ivy.manipulation.zero_pad"], [1791, "ivy.functional.ivy.manipulation.zero_pad"]], "clip() (in module ivy.array.array_methods)": [[1712, "ivy.array.array_methods.clip"], [1713, "ivy.array.array_methods.clip"]], "clip() (in module ivy.container.container_methods)": [[1712, "ivy.container.container_methods.clip"], [1714, "ivy.container.container_methods.clip"]], "static_clip() (in module ivy.container.container_methods)": [[1712, "ivy.container.container_methods.static_clip"], [1716, "ivy.container.container_methods.static_clip"]], "concat() (in module ivy.array.array_methods)": [[1717, "ivy.array.array_methods.concat"], [1718, "ivy.array.array_methods.concat"]], "concat() (in module ivy.container.container_methods)": [[1717, "ivy.container.container_methods.concat"], [1719, "ivy.container.container_methods.concat"]], "static_concat() (in module ivy.container.container_methods)": [[1717, "ivy.container.container_methods.static_concat"], [1721, "ivy.container.container_methods.static_concat"]], "constant_pad() (in module ivy.array.array_methods)": [[1722, "ivy.array.array_methods.constant_pad"], [1723, "ivy.array.array_methods.constant_pad"]], "constant_pad() (in module ivy.container.container_methods)": [[1722, "ivy.container.container_methods.constant_pad"], [1724, "ivy.container.container_methods.constant_pad"]], "static_constant_pad() (in module ivy.container.container_methods)": [[1722, "ivy.container.container_methods.static_constant_pad"], [1726, "ivy.container.container_methods.static_constant_pad"]], "expand_dims() (in module ivy.array.array_methods)": [[1727, "ivy.array.array_methods.expand_dims"], [1728, "ivy.array.array_methods.expand_dims"]], "expand_dims() (in module ivy.container.container_methods)": [[1727, "ivy.container.container_methods.expand_dims"], [1729, "ivy.container.container_methods.expand_dims"]], "static_expand_dims() (in module ivy.container.container_methods)": [[1727, "ivy.container.container_methods.static_expand_dims"], [1731, "ivy.container.container_methods.static_expand_dims"]], "flip() (in module ivy.array.array_methods)": [[1732, "ivy.array.array_methods.flip"], [1733, "ivy.array.array_methods.flip"]], "flip() (in module ivy.container.container_methods)": [[1732, "ivy.container.container_methods.flip"], [1734, "ivy.container.container_methods.flip"]], "static_flip() (in module ivy.container.container_methods)": [[1732, "ivy.container.container_methods.static_flip"], [1736, "ivy.container.container_methods.static_flip"]], "permute_dims() (in module ivy.array.array_methods)": [[1737, "ivy.array.array_methods.permute_dims"], [1738, "ivy.array.array_methods.permute_dims"]], "permute_dims() (in module ivy.container.container_methods)": [[1737, "ivy.container.container_methods.permute_dims"], [1739, "ivy.container.container_methods.permute_dims"]], "static_permute_dims() (in module ivy.container.container_methods)": [[1737, "ivy.container.container_methods.static_permute_dims"], [1741, "ivy.container.container_methods.static_permute_dims"]], "repeat() (in module ivy.array.array_methods)": [[1742, "ivy.array.array_methods.repeat"], [1743, "ivy.array.array_methods.repeat"]], "repeat() (in module ivy.container.container_methods)": [[1742, "ivy.container.container_methods.repeat"], [1744, "ivy.container.container_methods.repeat"]], "static_repeat() (in module ivy.container.container_methods)": [[1742, "ivy.container.container_methods.static_repeat"], [1746, "ivy.container.container_methods.static_repeat"]], "reshape() (in module ivy.array.array_methods)": [[1747, "ivy.array.array_methods.reshape"], [1748, "ivy.array.array_methods.reshape"]], "reshape() (in module ivy.container.container_methods)": [[1747, "ivy.container.container_methods.reshape"], [1749, "ivy.container.container_methods.reshape"]], "static_reshape() (in module ivy.container.container_methods)": [[1747, "ivy.container.container_methods.static_reshape"], [1751, "ivy.container.container_methods.static_reshape"]], "roll() (in module ivy.array.array_methods)": [[1752, "ivy.array.array_methods.roll"], [1753, "ivy.array.array_methods.roll"]], "roll() (in module ivy.container.container_methods)": [[1752, "ivy.container.container_methods.roll"], [1754, "ivy.container.container_methods.roll"]], "static_roll() (in module ivy.container.container_methods)": [[1752, "ivy.container.container_methods.static_roll"], [1756, "ivy.container.container_methods.static_roll"]], "split() (in module ivy.array.array_methods)": [[1757, "ivy.array.array_methods.split"], [1758, "ivy.array.array_methods.split"]], "split() (in module ivy.container.container_methods)": [[1757, "ivy.container.container_methods.split"], [1759, "ivy.container.container_methods.split"]], "static_split() (in module ivy.container.container_methods)": [[1757, "ivy.container.container_methods.static_split"], [1761, "ivy.container.container_methods.static_split"]], "squeeze() (in module ivy.array.array_methods)": [[1762, "ivy.array.array_methods.squeeze"], [1763, "ivy.array.array_methods.squeeze"]], "squeeze() (in module ivy.container.container_methods)": [[1762, "ivy.container.container_methods.squeeze"], [1764, "ivy.container.container_methods.squeeze"]], "static_squeeze() (in module ivy.container.container_methods)": [[1762, "ivy.container.container_methods.static_squeeze"], [1766, "ivy.container.container_methods.static_squeeze"]], "stack() (in module ivy.array.array_methods)": [[1767, "ivy.array.array_methods.stack"], [1768, "ivy.array.array_methods.stack"]], "stack() (in module ivy.container.container_methods)": [[1767, "ivy.container.container_methods.stack"], [1769, "ivy.container.container_methods.stack"]], "static_stack() (in module ivy.container.container_methods)": [[1767, "ivy.container.container_methods.static_stack"], [1771, "ivy.container.container_methods.static_stack"]], "static_swapaxes() (in module ivy.container.container_methods)": [[1772, "ivy.container.container_methods.static_swapaxes"], [1773, "ivy.container.container_methods.static_swapaxes"]], "swapaxes() (in module ivy.array.array_methods)": [[1772, "ivy.array.array_methods.swapaxes"], [1774, "ivy.array.array_methods.swapaxes"]], "swapaxes() (in module ivy.container.container_methods)": [[1772, "ivy.container.container_methods.swapaxes"], [1775, "ivy.container.container_methods.swapaxes"]], "static_tile() (in module ivy.container.container_methods)": [[1777, "ivy.container.container_methods.static_tile"], [1778, "ivy.container.container_methods.static_tile"]], "tile() (in module ivy.array.array_methods)": [[1777, "ivy.array.array_methods.tile"], [1779, "ivy.array.array_methods.tile"]], "tile() (in module ivy.container.container_methods)": [[1777, "ivy.container.container_methods.tile"], [1780, "ivy.container.container_methods.tile"]], "static_unstack() (in module ivy.container.container_methods)": [[1782, "ivy.container.container_methods.static_unstack"], [1783, "ivy.container.container_methods.static_unstack"]], "unstack() (in module ivy.array.array_methods)": [[1782, "ivy.array.array_methods.unstack"], [1784, "ivy.array.array_methods.unstack"]], "unstack() (in module ivy.container.container_methods)": [[1782, "ivy.container.container_methods.unstack"], [1785, "ivy.container.container_methods.unstack"]], "static_zero_pad() (in module ivy.container.container_methods)": [[1787, "ivy.container.container_methods.static_zero_pad"], [1788, "ivy.container.container_methods.static_zero_pad"]], "zero_pad() (in module ivy.array.array_methods)": [[1787, "ivy.array.array_methods.zero_pad"], [1789, "ivy.array.array_methods.zero_pad"]], "zero_pad() (in module ivy.container.container_methods)": [[1787, "ivy.container.container_methods.zero_pad"], [1790, "ivy.container.container_methods.zero_pad"]], "fomaml_step() (in module ivy.functional.ivy.meta)": [[1792, "ivy.functional.ivy.meta.fomaml_step"], [1793, "ivy.functional.ivy.meta.fomaml_step"]], "ivy.functional.ivy.meta": [[1792, "module-ivy.functional.ivy.meta"]], "maml_step() (in module ivy.functional.ivy.meta)": [[1792, "ivy.functional.ivy.meta.maml_step"], [1794, "ivy.functional.ivy.meta.maml_step"]], "reptile_step() (in module ivy.functional.ivy.meta)": [[1792, "ivy.functional.ivy.meta.reptile_step"], [1795, "ivy.functional.ivy.meta.reptile_step"]], "all_nested_indices() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.all_nested_indices"], [1797, "ivy.functional.ivy.nest.all_nested_indices"]], "copy_nest() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.copy_nest"], [1798, "ivy.functional.ivy.nest.copy_nest"]], "duplicate_array_index_chains() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.duplicate_array_index_chains"], [1799, "ivy.functional.ivy.nest.duplicate_array_index_chains"]], "index_nest() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.index_nest"], [1800, "ivy.functional.ivy.nest.index_nest"]], "insert_into_nest_at_index() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.insert_into_nest_at_index"], [1801, "ivy.functional.ivy.nest.insert_into_nest_at_index"]], "insert_into_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.insert_into_nest_at_indices"], [1802, "ivy.functional.ivy.nest.insert_into_nest_at_indices"]], "ivy.functional.ivy.nest": [[1796, "module-ivy.functional.ivy.nest"]], "map() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.map"], [1803, "ivy.functional.ivy.nest.map"]], "map_nest_at_index() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.map_nest_at_index"], [1804, "ivy.functional.ivy.nest.map_nest_at_index"]], "map_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.map_nest_at_indices"], [1805, "ivy.functional.ivy.nest.map_nest_at_indices"]], "multi_index_nest() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.multi_index_nest"], [1806, "ivy.functional.ivy.nest.multi_index_nest"]], "nested_any() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.nested_any"], [1807, "ivy.functional.ivy.nest.nested_any"]], "nested_argwhere() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.nested_argwhere"], [1808, "ivy.functional.ivy.nest.nested_argwhere"]], "nested_map() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.nested_map"], [1809, "ivy.functional.ivy.nest.nested_map"]], "nested_multi_map() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.nested_multi_map"], [1810, "ivy.functional.ivy.nest.nested_multi_map"]], "prune_empty() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.prune_empty"], [1811, "ivy.functional.ivy.nest.prune_empty"]], "prune_nest_at_index() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.prune_nest_at_index"], [1812, "ivy.functional.ivy.nest.prune_nest_at_index"]], "prune_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.prune_nest_at_indices"], [1813, "ivy.functional.ivy.nest.prune_nest_at_indices"]], "set_nest_at_index() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.set_nest_at_index"], [1814, "ivy.functional.ivy.nest.set_nest_at_index"]], "set_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1796, "ivy.functional.ivy.nest.set_nest_at_indices"], [1815, "ivy.functional.ivy.nest.set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1816, "module-ivy.functional.ivy.norms"]], "layer_norm() (in module ivy.functional.ivy.norms)": [[1816, "ivy.functional.ivy.norms.layer_norm"], [1817, "ivy.functional.ivy.norms.layer_norm"], [1820, "ivy.functional.ivy.norms.layer_norm"]], "layer_norm() (in module ivy.array.array_methods)": [[1817, "ivy.array.array_methods.layer_norm"], [1818, "ivy.array.array_methods.layer_norm"]], "layer_norm() (in module ivy.container.container_methods)": [[1817, "ivy.container.container_methods.layer_norm"], [1819, "ivy.container.container_methods.layer_norm"]], "ivy.functional.ivy.random": [[1821, "module-ivy.functional.ivy.random"]], "multinomial() (in module ivy.functional.ivy.random)": [[1821, "ivy.functional.ivy.random.multinomial"], [1822, "ivy.functional.ivy.random.multinomial"], [1825, "ivy.functional.ivy.random.multinomial"]], "randint() (in module ivy.functional.ivy.random)": [[1821, "ivy.functional.ivy.random.randint"], [1827, "ivy.functional.ivy.random.randint"], [1830, "ivy.functional.ivy.random.randint"]], "random_normal() (in module ivy.functional.ivy.random)": [[1821, "ivy.functional.ivy.random.random_normal"], [1832, "ivy.functional.ivy.random.random_normal"], [1835, "ivy.functional.ivy.random.random_normal"]], "random_uniform() (in module ivy.functional.ivy.random)": [[1821, "ivy.functional.ivy.random.random_uniform"], [1837, "ivy.functional.ivy.random.random_uniform"], [1840, "ivy.functional.ivy.random.random_uniform"]], "seed() (in module ivy.functional.ivy.random)": [[1821, "ivy.functional.ivy.random.seed"], [1842, "ivy.functional.ivy.random.seed"]], "shuffle() (in module ivy.functional.ivy.random)": [[1821, "ivy.functional.ivy.random.shuffle"], [1843, "ivy.functional.ivy.random.shuffle"], [1846, "ivy.functional.ivy.random.shuffle"]], "multinomial() (in module ivy.array.array_methods)": [[1822, "ivy.array.array_methods.multinomial"], [1823, "ivy.array.array_methods.multinomial"]], "multinomial() (in module ivy.container.container_methods)": [[1822, "ivy.container.container_methods.multinomial"], [1824, "ivy.container.container_methods.multinomial"]], "static_multinomial() (in module ivy.container.container_methods)": [[1822, "ivy.container.container_methods.static_multinomial"], [1826, "ivy.container.container_methods.static_multinomial"]], "randint() (in module ivy.array.array_methods)": [[1827, "ivy.array.array_methods.randint"], [1828, "ivy.array.array_methods.randint"]], "randint() (in module ivy.container.container_methods)": [[1827, "ivy.container.container_methods.randint"], [1829, "ivy.container.container_methods.randint"]], "static_randint() (in module ivy.container.container_methods)": [[1827, "ivy.container.container_methods.static_randint"], [1831, "ivy.container.container_methods.static_randint"]], "random_normal() (in module ivy.array.array_methods)": [[1832, "ivy.array.array_methods.random_normal"], [1833, "ivy.array.array_methods.random_normal"]], "random_normal() (in module ivy.container.container_methods)": [[1832, "ivy.container.container_methods.random_normal"], [1834, "ivy.container.container_methods.random_normal"]], "static_random_normal() (in module ivy.container.container_methods)": [[1832, "ivy.container.container_methods.static_random_normal"], [1836, "ivy.container.container_methods.static_random_normal"]], "random_uniform() (in module ivy.array.array_methods)": [[1837, "ivy.array.array_methods.random_uniform"], [1838, "ivy.array.array_methods.random_uniform"]], "random_uniform() (in module ivy.container.container_methods)": [[1837, "ivy.container.container_methods.random_uniform"], [1839, "ivy.container.container_methods.random_uniform"]], "static_random_uniform() (in module ivy.container.container_methods)": [[1837, "ivy.container.container_methods.static_random_uniform"], [1841, "ivy.container.container_methods.static_random_uniform"]], "shuffle() (in module ivy.array.array_methods)": [[1843, "ivy.array.array_methods.shuffle"], [1844, "ivy.array.array_methods.shuffle"]], "shuffle() (in module ivy.container.container_methods)": [[1843, "ivy.container.container_methods.shuffle"], [1845, "ivy.container.container_methods.shuffle"]], "static_shuffle() (in module ivy.container.container_methods)": [[1843, "ivy.container.container_methods.static_shuffle"], [1847, "ivy.container.container_methods.static_shuffle"]], "argmax() (in module ivy.functional.ivy.searching)": [[1848, "ivy.functional.ivy.searching.argmax"], [1849, "ivy.functional.ivy.searching.argmax"], [1852, "ivy.functional.ivy.searching.argmax"]], "argmin() (in module ivy.functional.ivy.searching)": [[1848, "ivy.functional.ivy.searching.argmin"], [1854, "ivy.functional.ivy.searching.argmin"], [1857, "ivy.functional.ivy.searching.argmin"]], "argwhere() (in module ivy.functional.ivy.searching)": [[1848, "ivy.functional.ivy.searching.argwhere"], [1859, "ivy.functional.ivy.searching.argwhere"], [1862, "ivy.functional.ivy.searching.argwhere"]], "ivy.functional.ivy.searching": [[1848, "module-ivy.functional.ivy.searching"]], "nonzero() (in module ivy.functional.ivy.searching)": [[1848, "ivy.functional.ivy.searching.nonzero"], [1864, "ivy.functional.ivy.searching.nonzero"], [1867, "ivy.functional.ivy.searching.nonzero"]], "where() (in module ivy.functional.ivy.searching)": [[1848, "ivy.functional.ivy.searching.where"], [1869, "ivy.functional.ivy.searching.where"], [1873, "ivy.functional.ivy.searching.where"]], "argmax() (in module ivy.array.array_methods)": [[1849, "ivy.array.array_methods.argmax"], [1850, "ivy.array.array_methods.argmax"]], "argmax() (in module ivy.container.container_methods)": [[1849, "ivy.container.container_methods.argmax"], [1851, "ivy.container.container_methods.argmax"]], "static_argmax() (in module ivy.container.container_methods)": [[1849, "ivy.container.container_methods.static_argmax"], [1853, "ivy.container.container_methods.static_argmax"]], "argmin() (in module ivy.array.array_methods)": [[1854, "ivy.array.array_methods.argmin"], [1855, "ivy.array.array_methods.argmin"]], "argmin() (in module ivy.container.container_methods)": [[1854, "ivy.container.container_methods.argmin"], [1856, "ivy.container.container_methods.argmin"]], "static_argmin() (in module ivy.container.container_methods)": [[1854, "ivy.container.container_methods.static_argmin"], [1858, "ivy.container.container_methods.static_argmin"]], "argwhere() (in module ivy.array.array_methods)": [[1859, "ivy.array.array_methods.argwhere"], [1860, "ivy.array.array_methods.argwhere"]], "argwhere() (in module ivy.container.container_methods)": [[1859, "ivy.container.container_methods.argwhere"], [1861, "ivy.container.container_methods.argwhere"]], "static_argwhere() (in module ivy.container.container_methods)": [[1859, "ivy.container.container_methods.static_argwhere"], [1863, "ivy.container.container_methods.static_argwhere"]], "nonzero() (in module ivy.array.array_methods)": [[1864, "ivy.array.array_methods.nonzero"], [1865, "ivy.array.array_methods.nonzero"]], "nonzero() (in module ivy.container.container_methods)": [[1864, "ivy.container.container_methods.nonzero"], [1866, "ivy.container.container_methods.nonzero"]], "static_nonzero() (in module ivy.container.container_methods)": [[1864, "ivy.container.container_methods.static_nonzero"], [1868, "ivy.container.container_methods.static_nonzero"]], "static_where() (in module ivy.container.container_methods)": [[1869, "ivy.container.container_methods.static_where"], [1870, "ivy.container.container_methods.static_where"]], "where() (in module ivy.array.array_methods)": [[1869, "ivy.array.array_methods.where"], [1871, "ivy.array.array_methods.where"]], "where() (in module ivy.container.container_methods)": [[1869, "ivy.container.container_methods.where"], [1872, "ivy.container.container_methods.where"]], "ivy.functional.ivy.set": [[1874, "module-ivy.functional.ivy.set"]], "unique_all() (in module ivy.functional.ivy.set)": [[1874, "ivy.functional.ivy.set.unique_all"], [1875, "ivy.functional.ivy.set.unique_all"], [1879, "ivy.functional.ivy.set.unique_all"]], "unique_counts() (in module ivy.functional.ivy.set)": [[1874, "ivy.functional.ivy.set.unique_counts"], [1880, "ivy.functional.ivy.set.unique_counts"], [1884, "ivy.functional.ivy.set.unique_counts"]], "unique_inverse() (in module ivy.functional.ivy.set)": [[1874, "ivy.functional.ivy.set.unique_inverse"], [1885, "ivy.functional.ivy.set.unique_inverse"], [1889, "ivy.functional.ivy.set.unique_inverse"]], "unique_values() (in module ivy.functional.ivy.set)": [[1874, "ivy.functional.ivy.set.unique_values"], [1890, "ivy.functional.ivy.set.unique_values"], [1894, "ivy.functional.ivy.set.unique_values"]], "static_unique_all() (in module ivy.container.container_methods)": [[1875, "ivy.container.container_methods.static_unique_all"], [1876, "ivy.container.container_methods.static_unique_all"]], "unique_all() (in module ivy.array.array_methods)": [[1875, "ivy.array.array_methods.unique_all"], [1877, "ivy.array.array_methods.unique_all"]], "unique_all() (in module ivy.container.container_methods)": [[1875, "ivy.container.container_methods.unique_all"], [1878, "ivy.container.container_methods.unique_all"]], "static_unique_counts() (in module ivy.container.container_methods)": [[1880, "ivy.container.container_methods.static_unique_counts"], [1881, "ivy.container.container_methods.static_unique_counts"]], "unique_counts() (in module ivy.array.array_methods)": [[1880, "ivy.array.array_methods.unique_counts"], [1882, "ivy.array.array_methods.unique_counts"]], "unique_counts() (in module ivy.container.container_methods)": [[1880, "ivy.container.container_methods.unique_counts"], [1883, "ivy.container.container_methods.unique_counts"]], "static_unique_inverse() (in module ivy.container.container_methods)": [[1885, "ivy.container.container_methods.static_unique_inverse"], [1886, "ivy.container.container_methods.static_unique_inverse"]], "unique_inverse() (in module ivy.array.array_methods)": [[1885, "ivy.array.array_methods.unique_inverse"], [1887, "ivy.array.array_methods.unique_inverse"]], "unique_inverse() (in module ivy.container.container_methods)": [[1885, "ivy.container.container_methods.unique_inverse"], [1888, "ivy.container.container_methods.unique_inverse"]], "static_unique_values() (in module ivy.container.container_methods)": [[1890, "ivy.container.container_methods.static_unique_values"], [1891, "ivy.container.container_methods.static_unique_values"]], "unique_values() (in module ivy.array.array_methods)": [[1890, "ivy.array.array_methods.unique_values"], [1892, "ivy.array.array_methods.unique_values"]], "unique_values() (in module ivy.container.container_methods)": [[1890, "ivy.container.container_methods.unique_values"], [1893, "ivy.container.container_methods.unique_values"]], "argsort() (in module ivy.functional.ivy.sorting)": [[1895, "ivy.functional.ivy.sorting.argsort"], [1896, "ivy.functional.ivy.sorting.argsort"], [1899, "ivy.functional.ivy.sorting.argsort"]], "ivy.functional.ivy.sorting": [[1895, "module-ivy.functional.ivy.sorting"]], "searchsorted() (in module ivy.functional.ivy.sorting)": [[1895, "ivy.functional.ivy.sorting.searchsorted"], [1901, "ivy.functional.ivy.sorting.searchsorted"], [1904, "ivy.functional.ivy.sorting.searchsorted"]], "sort() (in module ivy.functional.ivy.sorting)": [[1895, "ivy.functional.ivy.sorting.sort"], [1906, "ivy.functional.ivy.sorting.sort"], [1909, "ivy.functional.ivy.sorting.sort"]], "argsort() (in module ivy.array.array_methods)": [[1896, "ivy.array.array_methods.argsort"], [1897, "ivy.array.array_methods.argsort"]], "argsort() (in module ivy.container.container_methods)": [[1896, "ivy.container.container_methods.argsort"], [1898, "ivy.container.container_methods.argsort"]], "static_argsort() (in module ivy.container.container_methods)": [[1896, "ivy.container.container_methods.static_argsort"], [1900, "ivy.container.container_methods.static_argsort"]], "searchsorted() (in module ivy.array.array_methods)": [[1901, "ivy.array.array_methods.searchsorted"], [1902, "ivy.array.array_methods.searchsorted"]], "searchsorted() (in module ivy.container.container_methods)": [[1901, "ivy.container.container_methods.searchsorted"], [1903, "ivy.container.container_methods.searchsorted"]], "static_searchsorted() (in module ivy.container.container_methods)": [[1901, "ivy.container.container_methods.static_searchsorted"], [1905, "ivy.container.container_methods.static_searchsorted"]], "sort() (in module ivy.array.array_methods)": [[1906, "ivy.array.array_methods.sort"], [1907, "ivy.array.array_methods.sort"]], "sort() (in module ivy.container.container_methods)": [[1906, "ivy.container.container_methods.sort"], [1908, "ivy.container.container_methods.sort"]], "static_sort() (in module ivy.container.container_methods)": [[1906, "ivy.container.container_methods.static_sort"], [1910, "ivy.container.container_methods.static_sort"]], "cumprod() (in module ivy.functional.ivy.statistical)": [[1911, "ivy.functional.ivy.statistical.cumprod"], [1912, "ivy.functional.ivy.statistical.cumprod"], [1915, "ivy.functional.ivy.statistical.cumprod"]], "cumsum() (in module ivy.functional.ivy.statistical)": [[1911, "ivy.functional.ivy.statistical.cumsum"], [1917, "ivy.functional.ivy.statistical.cumsum"], [1920, "ivy.functional.ivy.statistical.cumsum"]], "einsum() (in module ivy.functional.ivy.statistical)": [[1911, "ivy.functional.ivy.statistical.einsum"], [1922, "ivy.functional.ivy.statistical.einsum"], [1925, "ivy.functional.ivy.statistical.einsum"]], "ivy.functional.ivy.statistical": [[1911, "module-ivy.functional.ivy.statistical"]], "max() (in module ivy.functional.ivy.statistical)": [[1911, "ivy.functional.ivy.statistical.max"], [1926, "ivy.functional.ivy.statistical.max"], [1929, "ivy.functional.ivy.statistical.max"]], "mean() (in module ivy.functional.ivy.statistical)": [[1911, "ivy.functional.ivy.statistical.mean"], [1930, "ivy.functional.ivy.statistical.mean"], [1933, "ivy.functional.ivy.statistical.mean"]], "min() (in module ivy.functional.ivy.statistical)": [[1911, "ivy.functional.ivy.statistical.min"], [1934, "ivy.functional.ivy.statistical.min"], [1937, "ivy.functional.ivy.statistical.min"]], "prod() (in module ivy.functional.ivy.statistical)": [[1911, "ivy.functional.ivy.statistical.prod"], [1938, "ivy.functional.ivy.statistical.prod"], [1941, "ivy.functional.ivy.statistical.prod"]], "std() (in module ivy.functional.ivy.statistical)": [[1911, "ivy.functional.ivy.statistical.std"], [1943, "ivy.functional.ivy.statistical.std"], [1946, "ivy.functional.ivy.statistical.std"]], "sum() (in module ivy.functional.ivy.statistical)": [[1911, "ivy.functional.ivy.statistical.sum"], [1947, "ivy.functional.ivy.statistical.sum"], [1951, "ivy.functional.ivy.statistical.sum"]], "var() (in module ivy.functional.ivy.statistical)": [[1911, "ivy.functional.ivy.statistical.var"], [1952, "ivy.functional.ivy.statistical.var"], [1956, "ivy.functional.ivy.statistical.var"]], "cumprod() (in module ivy.array.array_methods)": [[1912, "ivy.array.array_methods.cumprod"], [1913, "ivy.array.array_methods.cumprod"]], "cumprod() (in module ivy.container.container_methods)": [[1912, "ivy.container.container_methods.cumprod"], [1914, "ivy.container.container_methods.cumprod"]], "static_cumprod() (in module ivy.container.container_methods)": [[1912, "ivy.container.container_methods.static_cumprod"], [1916, "ivy.container.container_methods.static_cumprod"]], "cumsum() (in module ivy.array.array_methods)": [[1917, "ivy.array.array_methods.cumsum"], [1918, "ivy.array.array_methods.cumsum"]], "cumsum() (in module ivy.container.container_methods)": [[1917, "ivy.container.container_methods.cumsum"], [1919, "ivy.container.container_methods.cumsum"]], "static_cumsum() (in module ivy.container.container_methods)": [[1917, "ivy.container.container_methods.static_cumsum"], [1921, "ivy.container.container_methods.static_cumsum"]], "einsum() (in module ivy.array.array_methods)": [[1922, "ivy.array.array_methods.einsum"], [1923, "ivy.array.array_methods.einsum"]], "einsum() (in module ivy.container.container_methods)": [[1922, "ivy.container.container_methods.einsum"], [1924, "ivy.container.container_methods.einsum"]], "max() (in module ivy.array.array_methods)": [[1926, "ivy.array.array_methods.max"], [1927, "ivy.array.array_methods.max"]], "max() (in module ivy.container.container_methods)": [[1926, "ivy.container.container_methods.max"], [1928, "ivy.container.container_methods.max"]], "mean() (in module ivy.array.array_methods)": [[1930, "ivy.array.array_methods.mean"], [1931, "ivy.array.array_methods.mean"]], "mean() (in module ivy.container.container_methods)": [[1930, "ivy.container.container_methods.mean"], [1932, "ivy.container.container_methods.mean"]], "min() (in module ivy.array.array_methods)": [[1934, "ivy.array.array_methods.min"], [1935, "ivy.array.array_methods.min"]], "min() (in module ivy.container.container_methods)": [[1934, "ivy.container.container_methods.min"], [1936, "ivy.container.container_methods.min"]], "prod() (in module ivy.array.array_methods)": [[1938, "ivy.array.array_methods.prod"], [1939, "ivy.array.array_methods.prod"]], "prod() (in module ivy.container.container_methods)": [[1938, "ivy.container.container_methods.prod"], [1940, "ivy.container.container_methods.prod"]], "static_prod() (in module ivy.container.container_methods)": [[1938, "ivy.container.container_methods.static_prod"], [1942, "ivy.container.container_methods.static_prod"]], "std() (in module ivy.array.array_methods)": [[1943, "ivy.array.array_methods.std"], [1944, "ivy.array.array_methods.std"]], "std() (in module ivy.container.container_methods)": [[1943, "ivy.container.container_methods.std"], [1945, "ivy.container.container_methods.std"]], "static_sum() (in module ivy.container.container_methods)": [[1947, "ivy.container.container_methods.static_sum"], [1948, "ivy.container.container_methods.static_sum"]], "sum() (in module ivy.array.array_methods)": [[1947, "ivy.array.array_methods.sum"], [1949, "ivy.array.array_methods.sum"]], "sum() (in module ivy.container.container_methods)": [[1947, "ivy.container.container_methods.sum"], [1950, "ivy.container.container_methods.sum"]], "static_var() (in module ivy.container.container_methods)": [[1952, "ivy.container.container_methods.static_var"], [1953, "ivy.container.container_methods.static_var"]], "var() (in module ivy.array.array_methods)": [[1952, "ivy.array.array_methods.var"], [1954, "ivy.array.array_methods.var"]], "var() (in module ivy.container.container_methods)": [[1952, "ivy.container.container_methods.var"], [1955, "ivy.container.container_methods.var"]], "all() (in module ivy.functional.ivy.utility)": [[1957, "ivy.functional.ivy.utility.all"], [1958, "ivy.functional.ivy.utility.all"], [1961, "ivy.functional.ivy.utility.all"]], "any() (in module ivy.functional.ivy.utility)": [[1957, "ivy.functional.ivy.utility.any"], [1963, "ivy.functional.ivy.utility.any"], [1966, "ivy.functional.ivy.utility.any"]], "ivy.functional.ivy.utility": [[1957, "module-ivy.functional.ivy.utility"]], "all() (in module ivy.array.array_methods)": [[1958, "ivy.array.array_methods.all"], [1959, "ivy.array.array_methods.all"]], "all() (in module ivy.container.container_methods)": [[1958, "ivy.container.container_methods.all"], [1960, "ivy.container.container_methods.all"]], "static_all() (in module ivy.container.container_methods)": [[1958, "ivy.container.container_methods.static_all"], [1962, "ivy.container.container_methods.static_all"]], "any() (in module ivy.array.array_methods)": [[1963, "ivy.array.array_methods.any"], [1964, "ivy.array.array_methods.any"]], "any() (in module ivy.container.container_methods)": [[1963, "ivy.container.container_methods.any"], [1965, "ivy.container.container_methods.any"]], "static_any() (in module ivy.container.container_methods)": [[1963, "ivy.container.container_methods.static_any"], [1967, "ivy.container.container_methods.static_any"]], "applied libraries": [[1968, "term-Applied-Libraries"]], "automatic code conversions": [[1968, "term-Automatic-Code-Conversions"]], "backend handler": [[1968, "term-Backend-Handler"]], "compositional functions": [[1968, "term-Compositional-Functions"]], "convenience functions": [[1968, "term-Convenience-Functions"]], "framework": [[1968, "term-Framework"]], "framework handler": [[1968, "term-Framework-Handler"]], "graph compiler": [[1968, "term-Graph-Compiler"]], "ivy array": [[1968, "term-Ivy-Array"]], "ivy backends": [[1968, "term-Ivy-Backends"]], "ivy builder": [[1968, "term-Ivy-Builder"]], "ivy compiler": [[1968, "term-Ivy-Compiler"]], "ivy container": [[1968, "term-Ivy-Container"]], "ivy frontends": [[1968, "term-Ivy-Frontends"]], "ivy functional api": [[1968, "term-Ivy-Functional-API"]], "ivy graph compiler": [[1968, "term-Ivy-Graph-Compiler"]], "ivy transpiler": [[1968, "term-Ivy-Transpiler"]], "mixed functions": [[1968, "term-Mixed-Functions"]], "native array": [[1968, "term-Native-Array"]], "nestable functions": [[1968, "term-Nestable-Functions"]], "pipeline": [[1968, "term-Pipeline"]], "primary functions": [[1968, "term-Primary-Functions"]], "standalone functions": [[1968, "term-Standalone-Functions"]], "submodule helper functions": [[1968, "term-Submodule-Helper-Functions"]], "add_array_specs() (in module ivy.inspection)": [[1972, "ivy.inspection.add_array_specs"], [1973, "ivy.inspection.add_array_specs"]], "fn_array_spec() (in module ivy.inspection)": [[1972, "ivy.inspection.fn_array_spec"], [1974, "ivy.inspection.fn_array_spec"]], "ivy.inspection": [[1972, "module-ivy.inspection"]], "nestedarray (class in ivy.nested_array.nested_array)": [[1975, "ivy.nested_array.nested_array.NestedArray"], [1976, "ivy.nested_array.nested_array.NestedArray"]], "__init__() (ivy.nested_array.nested_array.nestedarray method)": [[1975, "ivy.nested_array.nested_array.NestedArray.__init__"], [1976, "ivy.nested_array.nested_array.NestedArray.__init__"]], "data (ivy.nested_array.nested_array.nestedarray property)": [[1975, "ivy.nested_array.nested_array.NestedArray.data"], [1976, "ivy.nested_array.nested_array.NestedArray.data"]], "device (ivy.nested_array.nested_array.nestedarray property)": [[1975, "ivy.nested_array.nested_array.NestedArray.device"], [1976, "ivy.nested_array.nested_array.NestedArray.device"]], "dtype (ivy.nested_array.nested_array.nestedarray property)": [[1975, "ivy.nested_array.nested_array.NestedArray.dtype"], [1976, "ivy.nested_array.nested_array.NestedArray.dtype"]], "from_row_lengths() (ivy.nested_array.nested_array.nestedarray class method)": [[1975, "ivy.nested_array.nested_array.NestedArray.from_row_lengths"], [1976, "ivy.nested_array.nested_array.NestedArray.from_row_lengths"]], "from_row_split() (ivy.nested_array.nested_array.nestedarray class method)": [[1975, "ivy.nested_array.nested_array.NestedArray.from_row_split"], [1976, "ivy.nested_array.nested_array.NestedArray.from_row_split"]], "ivy.nested_array.nested_array": [[1975, "module-ivy.nested_array.nested_array"]], "ndim (ivy.nested_array.nested_array.nestedarray property)": [[1975, "ivy.nested_array.nested_array.NestedArray.ndim"], [1976, "ivy.nested_array.nested_array.NestedArray.ndim"]], "nested_array() (ivy.nested_array.nested_array.nestedarray class method)": [[1975, "ivy.nested_array.nested_array.NestedArray.nested_array"], [1976, "ivy.nested_array.nested_array.NestedArray.nested_array"]], "reshape() (ivy.nested_array.nested_array.nestedarray method)": [[1975, "ivy.nested_array.nested_array.NestedArray.reshape"], [1976, "ivy.nested_array.nested_array.NestedArray.reshape"]], "shape (ivy.nested_array.nested_array.nestedarray property)": [[1975, "ivy.nested_array.nested_array.NestedArray.shape"], [1976, "ivy.nested_array.nested_array.NestedArray.shape"]], "unbind() (ivy.nested_array.nested_array.nestedarray method)": [[1975, "ivy.nested_array.nested_array.NestedArray.unbind"], [1976, "ivy.nested_array.nested_array.NestedArray.unbind"]], "ivy.stateful": [[1989, "module-ivy.stateful"]], "geglu (class in ivy.stateful.activations)": [[1990, "ivy.stateful.activations.GEGLU"], [1991, "ivy.stateful.activations.GEGLU"]], "gelu (class in ivy.stateful.activations)": [[1990, "ivy.stateful.activations.GELU"], [1992, "ivy.stateful.activations.GELU"]], "__init__() (ivy.stateful.activations.geglu method)": [[1990, "ivy.stateful.activations.GEGLU.__init__"], [1991, "ivy.stateful.activations.GEGLU.__init__"]], "__init__() (ivy.stateful.activations.gelu method)": [[1990, "ivy.stateful.activations.GELU.__init__"], [1992, "ivy.stateful.activations.GELU.__init__"]], "ivy.stateful.activations": [[1990, "module-ivy.stateful.activations"]], "ivy.stateful.converters": [[1993, "module-ivy.stateful.converters"]], "to_ivy_module() (in module ivy.stateful.converters)": [[1993, "ivy.stateful.converters.to_ivy_module"], [1994, "ivy.stateful.converters.to_ivy_module"]], "modulehelpers (class in ivy.stateful.helpers)": [[1995, "ivy.stateful.helpers.ModuleHelpers"], [1996, "ivy.stateful.helpers.ModuleHelpers"]], "check_submod_rets() (ivy.stateful.helpers.modulehelpers method)": [[1995, "ivy.stateful.helpers.ModuleHelpers.check_submod_rets"], [1996, "ivy.stateful.helpers.ModuleHelpers.check_submod_rets"]], "get_mod_key() (ivy.stateful.helpers.modulehelpers method)": [[1995, "ivy.stateful.helpers.ModuleHelpers.get_mod_key"], [1996, "ivy.stateful.helpers.ModuleHelpers.get_mod_key"]], "ivy.stateful.helpers": [[1995, "module-ivy.stateful.helpers"]], "mod_depth() (ivy.stateful.helpers.modulehelpers method)": [[1995, "ivy.stateful.helpers.ModuleHelpers.mod_depth"], [1996, "ivy.stateful.helpers.ModuleHelpers.mod_depth"]], "mod_height() (ivy.stateful.helpers.modulehelpers method)": [[1995, "ivy.stateful.helpers.ModuleHelpers.mod_height"], [1996, "ivy.stateful.helpers.ModuleHelpers.mod_height"]], "mod_with_top_mod_key_chain() (ivy.stateful.helpers.modulehelpers method)": [[1995, "ivy.stateful.helpers.ModuleHelpers.mod_with_top_mod_key_chain"], [1996, "ivy.stateful.helpers.ModuleHelpers.mod_with_top_mod_key_chain"]], "show_mod_in_top_mod() (ivy.stateful.helpers.modulehelpers method)": [[1995, "ivy.stateful.helpers.ModuleHelpers.show_mod_in_top_mod"], [1996, "ivy.stateful.helpers.ModuleHelpers.show_mod_in_top_mod"]], "show_structure() (ivy.stateful.helpers.modulehelpers method)": [[1995, "ivy.stateful.helpers.ModuleHelpers.show_structure"], [1996, "ivy.stateful.helpers.ModuleHelpers.show_structure"]], "show_v_in_top_v() (ivy.stateful.helpers.modulehelpers method)": [[1995, "ivy.stateful.helpers.ModuleHelpers.show_v_in_top_v"], [1996, "ivy.stateful.helpers.ModuleHelpers.show_v_in_top_v"]], "sub_mods() (ivy.stateful.helpers.modulehelpers method)": [[1995, "ivy.stateful.helpers.ModuleHelpers.sub_mods"], [1996, "ivy.stateful.helpers.ModuleHelpers.sub_mods"]], "track_submod_call_order() (ivy.stateful.helpers.modulehelpers method)": [[1995, "ivy.stateful.helpers.ModuleHelpers.track_submod_call_order"], [1996, "ivy.stateful.helpers.ModuleHelpers.track_submod_call_order"]], "track_submod_rets() (ivy.stateful.helpers.modulehelpers method)": [[1995, "ivy.stateful.helpers.ModuleHelpers.track_submod_rets"], [1996, "ivy.stateful.helpers.ModuleHelpers.track_submod_rets"]], "v_with_top_v_key_chains() (ivy.stateful.helpers.modulehelpers method)": [[1995, "ivy.stateful.helpers.ModuleHelpers.v_with_top_v_key_chains"], [1996, "ivy.stateful.helpers.ModuleHelpers.v_with_top_v_key_chains"]], "constant (class in ivy.stateful.initializers)": [[1997, "ivy.stateful.initializers.Constant"], [1998, "ivy.stateful.initializers.Constant"]], "firstlayersiren (class in ivy.stateful.initializers)": [[1997, "ivy.stateful.initializers.FirstLayerSiren"], [1999, "ivy.stateful.initializers.FirstLayerSiren"]], "glorotuniform (class in ivy.stateful.initializers)": [[1997, "ivy.stateful.initializers.GlorotUniform"], [2000, "ivy.stateful.initializers.GlorotUniform"]], "initializer (class in ivy.stateful.initializers)": [[1997, "ivy.stateful.initializers.Initializer"], [2001, "ivy.stateful.initializers.Initializer"]], "kaimingnormal (class in ivy.stateful.initializers)": [[1997, "ivy.stateful.initializers.KaimingNormal"], [2002, "ivy.stateful.initializers.KaimingNormal"]], "ones (class in ivy.stateful.initializers)": [[1997, "ivy.stateful.initializers.Ones"], [2003, "ivy.stateful.initializers.Ones"]], "siren (class in ivy.stateful.initializers)": [[1997, "ivy.stateful.initializers.Siren"], [2004, "ivy.stateful.initializers.Siren"]], "uniform (class in ivy.stateful.initializers)": [[1997, "ivy.stateful.initializers.Uniform"], [2005, "ivy.stateful.initializers.Uniform"]], "zeros (class in ivy.stateful.initializers)": [[1997, "ivy.stateful.initializers.Zeros"], [2006, "ivy.stateful.initializers.Zeros"]], "__init__() (ivy.stateful.initializers.constant method)": [[1997, "ivy.stateful.initializers.Constant.__init__"], [1998, "ivy.stateful.initializers.Constant.__init__"]], "__init__() (ivy.stateful.initializers.firstlayersiren method)": [[1997, "ivy.stateful.initializers.FirstLayerSiren.__init__"], [1999, "ivy.stateful.initializers.FirstLayerSiren.__init__"]], "__init__() (ivy.stateful.initializers.glorotuniform method)": [[1997, "ivy.stateful.initializers.GlorotUniform.__init__"], [2000, "ivy.stateful.initializers.GlorotUniform.__init__"]], "__init__() (ivy.stateful.initializers.kaimingnormal method)": [[1997, "ivy.stateful.initializers.KaimingNormal.__init__"], [2002, "ivy.stateful.initializers.KaimingNormal.__init__"]], "__init__() (ivy.stateful.initializers.ones method)": [[1997, "ivy.stateful.initializers.Ones.__init__"], [2003, "ivy.stateful.initializers.Ones.__init__"]], "__init__() (ivy.stateful.initializers.siren method)": [[1997, "ivy.stateful.initializers.Siren.__init__"], [2004, "ivy.stateful.initializers.Siren.__init__"]], "__init__() (ivy.stateful.initializers.uniform method)": [[1997, "ivy.stateful.initializers.Uniform.__init__"], [2005, "ivy.stateful.initializers.Uniform.__init__"]], "__init__() (ivy.stateful.initializers.zeros method)": [[1997, "ivy.stateful.initializers.Zeros.__init__"], [2006, "ivy.stateful.initializers.Zeros.__init__"]], "create_variables() (ivy.stateful.initializers.constant method)": [[1997, "ivy.stateful.initializers.Constant.create_variables"], [1998, "ivy.stateful.initializers.Constant.create_variables"]], "create_variables() (ivy.stateful.initializers.initializer method)": [[1997, "ivy.stateful.initializers.Initializer.create_variables"], [2001, "ivy.stateful.initializers.Initializer.create_variables"]], "create_variables() (ivy.stateful.initializers.kaimingnormal method)": [[1997, "ivy.stateful.initializers.KaimingNormal.create_variables"], [2002, "ivy.stateful.initializers.KaimingNormal.create_variables"]], "create_variables() (ivy.stateful.initializers.uniform method)": [[1997, "ivy.stateful.initializers.Uniform.create_variables"], [2005, "ivy.stateful.initializers.Uniform.create_variables"]], "ivy.stateful.initializers": [[1997, "module-ivy.stateful.initializers"]], "conv1d (class in ivy.stateful.layers)": [[2007, "ivy.stateful.layers.Conv1D"], [2008, "ivy.stateful.layers.Conv1D"]], "conv1dtranspose (class in ivy.stateful.layers)": [[2007, "ivy.stateful.layers.Conv1DTranspose"], [2009, "ivy.stateful.layers.Conv1DTranspose"]], "conv2d (class in ivy.stateful.layers)": [[2007, "ivy.stateful.layers.Conv2D"], [2010, "ivy.stateful.layers.Conv2D"]], "conv2dtranspose (class in ivy.stateful.layers)": [[2007, "ivy.stateful.layers.Conv2DTranspose"], [2011, "ivy.stateful.layers.Conv2DTranspose"]], "conv3d (class in ivy.stateful.layers)": [[2007, "ivy.stateful.layers.Conv3D"], [2012, "ivy.stateful.layers.Conv3D"]], "conv3dtranspose (class in ivy.stateful.layers)": [[2007, "ivy.stateful.layers.Conv3DTranspose"], [2013, "ivy.stateful.layers.Conv3DTranspose"]], "depthwiseconv2d (class in ivy.stateful.layers)": [[2007, "ivy.stateful.layers.DepthwiseConv2D"], [2014, "ivy.stateful.layers.DepthwiseConv2D"]], "dropout (class in ivy.stateful.layers)": [[2007, "ivy.stateful.layers.Dropout"], [2015, "ivy.stateful.layers.Dropout"]], "lstm (class in ivy.stateful.layers)": [[2007, "ivy.stateful.layers.LSTM"], [2016, "ivy.stateful.layers.LSTM"]], "linear (class in ivy.stateful.layers)": [[2007, "ivy.stateful.layers.Linear"], [2017, "ivy.stateful.layers.Linear"]], "multiheadattention (class in ivy.stateful.layers)": [[2007, "ivy.stateful.layers.MultiHeadAttention"], [2018, "ivy.stateful.layers.MultiHeadAttention"]], "__init__() (ivy.stateful.layers.conv1d method)": [[2007, "ivy.stateful.layers.Conv1D.__init__"], [2008, "ivy.stateful.layers.Conv1D.__init__"]], "__init__() (ivy.stateful.layers.conv1dtranspose method)": [[2007, "ivy.stateful.layers.Conv1DTranspose.__init__"], [2009, "ivy.stateful.layers.Conv1DTranspose.__init__"]], "__init__() (ivy.stateful.layers.conv2d method)": [[2007, "ivy.stateful.layers.Conv2D.__init__"], [2010, "ivy.stateful.layers.Conv2D.__init__"]], "__init__() (ivy.stateful.layers.conv2dtranspose method)": [[2007, "ivy.stateful.layers.Conv2DTranspose.__init__"], [2011, "ivy.stateful.layers.Conv2DTranspose.__init__"]], "__init__() (ivy.stateful.layers.conv3d method)": [[2007, "ivy.stateful.layers.Conv3D.__init__"], [2012, "ivy.stateful.layers.Conv3D.__init__"]], "__init__() (ivy.stateful.layers.conv3dtranspose method)": [[2007, "ivy.stateful.layers.Conv3DTranspose.__init__"], [2013, "ivy.stateful.layers.Conv3DTranspose.__init__"]], "__init__() (ivy.stateful.layers.depthwiseconv2d method)": [[2007, "ivy.stateful.layers.DepthwiseConv2D.__init__"], [2014, "ivy.stateful.layers.DepthwiseConv2D.__init__"]], "__init__() (ivy.stateful.layers.dropout method)": [[2007, "ivy.stateful.layers.Dropout.__init__"], [2015, "ivy.stateful.layers.Dropout.__init__"]], "__init__() (ivy.stateful.layers.lstm method)": [[2007, "ivy.stateful.layers.LSTM.__init__"], [2016, "ivy.stateful.layers.LSTM.__init__"]], "__init__() (ivy.stateful.layers.linear method)": [[2007, "ivy.stateful.layers.Linear.__init__"], [2017, "ivy.stateful.layers.Linear.__init__"]], "__init__() (ivy.stateful.layers.multiheadattention method)": [[2007, "ivy.stateful.layers.MultiHeadAttention.__init__"], [2018, "ivy.stateful.layers.MultiHeadAttention.__init__"]], "get_initial_state() (ivy.stateful.layers.lstm method)": [[2007, "ivy.stateful.layers.LSTM.get_initial_state"], [2016, "ivy.stateful.layers.LSTM.get_initial_state"]], "ivy.stateful.layers": [[2007, "module-ivy.stateful.layers"]], "module (class in ivy.stateful.module)": [[2019, "ivy.stateful.module.Module"], [2020, "ivy.stateful.module.Module"]], "mytfmodule (class in ivy.stateful.module)": [[2019, "ivy.stateful.module.MyTFModule"], [2021, "ivy.stateful.module.MyTFModule"]], "mytorchmodule (class in ivy.stateful.module)": [[2019, "ivy.stateful.module.MyTorchModule"], [2022, "ivy.stateful.module.MyTorchModule"]], "__call__() (ivy.stateful.module.module method)": [[2019, "ivy.stateful.module.Module.__call__"], [2020, "ivy.stateful.module.Module.__call__"]], "__init__() (ivy.stateful.module.module method)": [[2019, "ivy.stateful.module.Module.__init__"], [2020, "ivy.stateful.module.Module.__init__"]], "__init__() (ivy.stateful.module.mytfmodule method)": [[2019, "ivy.stateful.module.MyTFModule.__init__"], [2021, "ivy.stateful.module.MyTFModule.__init__"]], "__init__() (ivy.stateful.module.mytorchmodule method)": [[2019, "ivy.stateful.module.MyTorchModule.__init__"], [2022, "ivy.stateful.module.MyTorchModule.__init__"]], "build() (ivy.stateful.module.module method)": [[2019, "ivy.stateful.module.Module.build"], [2020, "ivy.stateful.module.Module.build"]], "build_mode (ivy.stateful.module.module property)": [[2019, "ivy.stateful.module.Module.build_mode"], [2020, "ivy.stateful.module.Module.build_mode"]], "built_ (ivy.stateful.module.module property)": [[2019, "ivy.stateful.module.Module.built_"], [2020, "ivy.stateful.module.Module.built_"]], "call() (ivy.stateful.module.mytfmodule method)": [[2019, "ivy.stateful.module.MyTFModule.call"], [2021, "ivy.stateful.module.MyTFModule.call"]], "forward() (ivy.stateful.module.mytorchmodule method)": [[2019, "ivy.stateful.module.MyTorchModule.forward"], [2022, "ivy.stateful.module.MyTorchModule.forward"]], "from_haiku_module() (ivy.stateful.module.module static method)": [[2019, "ivy.stateful.module.Module.from_haiku_module"], [2020, "ivy.stateful.module.Module.from_haiku_module"]], "from_keras_module() (ivy.stateful.module.module static method)": [[2019, "ivy.stateful.module.Module.from_keras_module"], [2020, "ivy.stateful.module.Module.from_keras_module"]], "from_torch_module() (ivy.stateful.module.module static method)": [[2019, "ivy.stateful.module.Module.from_torch_module"], [2020, "ivy.stateful.module.Module.from_torch_module"]], "ivy.stateful.module": [[2019, "module-ivy.stateful.module"]], "save_weights() (ivy.stateful.module.module method)": [[2019, "ivy.stateful.module.Module.save_weights"], [2020, "ivy.stateful.module.Module.save_weights"]], "to_haiku_module() (ivy.stateful.module.module method)": [[2019, "ivy.stateful.module.Module.to_haiku_module"], [2020, "ivy.stateful.module.Module.to_haiku_module"]], "to_keras_module() (ivy.stateful.module.module method)": [[2019, "ivy.stateful.module.Module.to_keras_module"], [2020, "ivy.stateful.module.Module.to_keras_module"]], "to_torch_module() (ivy.stateful.module.module method)": [[2019, "ivy.stateful.module.Module.to_torch_module"], [2020, "ivy.stateful.module.Module.to_torch_module"]], "training (ivy.stateful.module.mytorchmodule attribute)": [[2019, "ivy.stateful.module.MyTorchModule.training"], [2022, "ivy.stateful.module.MyTorchModule.training"]], "layernorm (class in ivy.stateful.norms)": [[2023, "ivy.stateful.norms.LayerNorm"], [2024, "ivy.stateful.norms.LayerNorm"]], "__init__() (ivy.stateful.norms.layernorm method)": [[2023, "ivy.stateful.norms.LayerNorm.__init__"], [2024, "ivy.stateful.norms.LayerNorm.__init__"]], "ivy.stateful.norms": [[2023, "module-ivy.stateful.norms"]], "adam (class in ivy.stateful.optimizers)": [[2025, "ivy.stateful.optimizers.Adam"], [2026, "ivy.stateful.optimizers.Adam"]], "lamb (class in ivy.stateful.optimizers)": [[2025, "ivy.stateful.optimizers.LAMB"], [2027, "ivy.stateful.optimizers.LAMB"]], "lars (class in ivy.stateful.optimizers)": [[2025, "ivy.stateful.optimizers.LARS"], [2028, "ivy.stateful.optimizers.LARS"]], "optimizer (class in ivy.stateful.optimizers)": [[2025, "ivy.stateful.optimizers.Optimizer"], [2029, "ivy.stateful.optimizers.Optimizer"]], "sgd (class in ivy.stateful.optimizers)": [[2025, "ivy.stateful.optimizers.SGD"], [2030, "ivy.stateful.optimizers.SGD"]], "__init__() (ivy.stateful.optimizers.adam method)": [[2025, "ivy.stateful.optimizers.Adam.__init__"], [2026, "ivy.stateful.optimizers.Adam.__init__"]], "__init__() (ivy.stateful.optimizers.lamb method)": [[2025, "ivy.stateful.optimizers.LAMB.__init__"], [2027, "ivy.stateful.optimizers.LAMB.__init__"]], "__init__() (ivy.stateful.optimizers.lars method)": [[2025, "ivy.stateful.optimizers.LARS.__init__"], [2028, "ivy.stateful.optimizers.LARS.__init__"]], "__init__() (ivy.stateful.optimizers.optimizer method)": [[2025, "ivy.stateful.optimizers.Optimizer.__init__"], [2029, "ivy.stateful.optimizers.Optimizer.__init__"]], "__init__() (ivy.stateful.optimizers.sgd method)": [[2025, "ivy.stateful.optimizers.SGD.__init__"], [2030, "ivy.stateful.optimizers.SGD.__init__"]], "ivy.stateful.optimizers": [[2025, "module-ivy.stateful.optimizers"]], "set_state() (ivy.stateful.optimizers.adam method)": [[2025, "ivy.stateful.optimizers.Adam.set_state"], [2026, "ivy.stateful.optimizers.Adam.set_state"]], "set_state() (ivy.stateful.optimizers.lamb method)": [[2025, "ivy.stateful.optimizers.LAMB.set_state"], [2027, "ivy.stateful.optimizers.LAMB.set_state"]], "set_state() (ivy.stateful.optimizers.lars method)": [[2025, "ivy.stateful.optimizers.LARS.set_state"], [2028, "ivy.stateful.optimizers.LARS.set_state"]], "set_state() (ivy.stateful.optimizers.optimizer method)": [[2025, "ivy.stateful.optimizers.Optimizer.set_state"], [2029, "ivy.stateful.optimizers.Optimizer.set_state"]], "set_state() (ivy.stateful.optimizers.sgd method)": [[2025, "ivy.stateful.optimizers.SGD.set_state"], [2030, "ivy.stateful.optimizers.SGD.set_state"]], "state (ivy.stateful.optimizers.adam property)": [[2025, "ivy.stateful.optimizers.Adam.state"], [2026, "ivy.stateful.optimizers.Adam.state"]], "state (ivy.stateful.optimizers.lamb property)": [[2025, "ivy.stateful.optimizers.LAMB.state"], [2027, "ivy.stateful.optimizers.LAMB.state"]], "state (ivy.stateful.optimizers.lars property)": [[2025, "ivy.stateful.optimizers.LARS.state"], [2028, "ivy.stateful.optimizers.LARS.state"]], "state (ivy.stateful.optimizers.sgd property)": [[2025, "ivy.stateful.optimizers.SGD.state"], [2030, "ivy.stateful.optimizers.SGD.state"]], "step() (ivy.stateful.optimizers.optimizer method)": [[2025, "ivy.stateful.optimizers.Optimizer.step"], [2029, "ivy.stateful.optimizers.Optimizer.step"]], "sequential (class in ivy.stateful.sequential)": [[2031, "ivy.stateful.sequential.Sequential"], [2032, "ivy.stateful.sequential.Sequential"]], "__init__() (ivy.stateful.sequential.sequential method)": [[2031, "ivy.stateful.sequential.Sequential.__init__"], [2032, "ivy.stateful.sequential.Sequential.__init__"]], "ivy.stateful.sequential": [[2031, "module-ivy.stateful.sequential"]], "assert_all_close() (in module ivy_tests.test_ivy.helpers.assertions)": [[2034, "ivy_tests.test_ivy.helpers.assertions.assert_all_close"], [2035, "ivy_tests.test_ivy.helpers.assertions.assert_all_close"]], "assert_same_type_and_shape() (in module ivy_tests.test_ivy.helpers.assertions)": [[2034, "ivy_tests.test_ivy.helpers.assertions.assert_same_type_and_shape"], [2036, "ivy_tests.test_ivy.helpers.assertions.assert_same_type_and_shape"]], "check_unsupported_device() (in module ivy_tests.test_ivy.helpers.assertions)": [[2034, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device"], [2037, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device"]], "check_unsupported_device_and_dtype() (in module ivy_tests.test_ivy.helpers.assertions)": [[2034, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device_and_dtype"], [2038, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device_and_dtype"]], "check_unsupported_dtype() (in module ivy_tests.test_ivy.helpers.assertions)": [[2034, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_dtype"], [2039, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_dtype"]], "ivy_tests.test_ivy.helpers.assertions": [[2034, "module-ivy_tests.test_ivy.helpers.assertions"]], "test_unsupported_function() (in module ivy_tests.test_ivy.helpers.assertions)": [[2034, "ivy_tests.test_ivy.helpers.assertions.test_unsupported_function"], [2040, "ivy_tests.test_ivy.helpers.assertions.test_unsupported_function"]], "value_test() (in module ivy_tests.test_ivy.helpers.assertions)": [[2034, "ivy_tests.test_ivy.helpers.assertions.value_test"], [2041, "ivy_tests.test_ivy.helpers.assertions.value_test"]], "ivy_tests.test_ivy.helpers.available_frameworks": [[2042, "module-ivy_tests.test_ivy.helpers.available_frameworks"]], "args_to_container() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.args_to_container"], [2044, "ivy_tests.test_ivy.helpers.function_testing.args_to_container"]], "as_cont() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.as_cont"], [2045, "ivy_tests.test_ivy.helpers.function_testing.as_cont"]], "as_lists() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.as_lists"], [2046, "ivy_tests.test_ivy.helpers.function_testing.as_lists"]], "convtrue() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.convtrue"], [2047, "ivy_tests.test_ivy.helpers.function_testing.convtrue"]], "create_args_kwargs() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.create_args_kwargs"], [2048, "ivy_tests.test_ivy.helpers.function_testing.create_args_kwargs"]], "empty_func() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.empty_func"], [2049, "ivy_tests.test_ivy.helpers.function_testing.empty_func"]], "flatten() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.flatten"], [2050, "ivy_tests.test_ivy.helpers.function_testing.flatten"]], "flatten_and_to_np() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.flatten_and_to_np"], [2051, "ivy_tests.test_ivy.helpers.function_testing.flatten_and_to_np"]], "flatten_fw_and_to_np() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.flatten_fw_and_to_np"], [2052, "ivy_tests.test_ivy.helpers.function_testing.flatten_fw_and_to_np"]], "get_frontend_ret() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.get_frontend_ret"], [2053, "ivy_tests.test_ivy.helpers.function_testing.get_frontend_ret"]], "get_ret_and_flattened_np_array() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.get_ret_and_flattened_np_array"], [2054, "ivy_tests.test_ivy.helpers.function_testing.get_ret_and_flattened_np_array"]], "gradient_incompatible_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.gradient_incompatible_function"], [2055, "ivy_tests.test_ivy.helpers.function_testing.gradient_incompatible_function"]], "gradient_test() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.gradient_test"], [2056, "ivy_tests.test_ivy.helpers.function_testing.gradient_test"]], "gradient_unsupported_dtypes() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.gradient_unsupported_dtypes"], [2057, "ivy_tests.test_ivy.helpers.function_testing.gradient_unsupported_dtypes"]], "ivy_tests.test_ivy.helpers.function_testing": [[2043, "module-ivy_tests.test_ivy.helpers.function_testing"]], "kwargs_to_args_n_kwargs() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.kwargs_to_args_n_kwargs"], [2058, "ivy_tests.test_ivy.helpers.function_testing.kwargs_to_args_n_kwargs"]], "test_frontend_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_function"], [2059, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_function"]], "test_frontend_method() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_method"], [2060, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_method"]], "test_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.test_function"], [2061, "ivy_tests.test_ivy.helpers.function_testing.test_function"]], "test_method() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.test_method"], [2062, "ivy_tests.test_ivy.helpers.function_testing.test_method"]], "var_fn() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2043, "ivy_tests.test_ivy.helpers.function_testing.var_fn"], [2063, "ivy_tests.test_ivy.helpers.function_testing.var_fn"]], "interruptedtest": [[2064, "ivy_tests.test_ivy.helpers.globals.InterruptedTest"]], "testdata (class in ivy_tests.test_ivy.helpers.globals)": [[2064, "ivy_tests.test_ivy.helpers.globals.TestData"], [2066, "ivy_tests.test_ivy.helpers.globals.TestData"]], "__init__() (ivy_tests.test_ivy.helpers.globals.interruptedtest method)": [[2064, "ivy_tests.test_ivy.helpers.globals.InterruptedTest.__init__"], [2065, "ivy_tests.test_ivy.helpers.globals.InterruptedTest.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.globals.testdata method)": [[2064, "ivy_tests.test_ivy.helpers.globals.TestData.__init__"], [2066, "ivy_tests.test_ivy.helpers.globals.TestData.__init__"]], "fn_name (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2064, "ivy_tests.test_ivy.helpers.globals.TestData.fn_name"], [2066, "ivy_tests.test_ivy.helpers.globals.TestData.fn_name"]], "fn_tree (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2064, "ivy_tests.test_ivy.helpers.globals.TestData.fn_tree"], [2066, "ivy_tests.test_ivy.helpers.globals.TestData.fn_tree"]], "ivy_tests.test_ivy.helpers.globals": [[2064, "module-ivy_tests.test_ivy.helpers.globals"]], "setup_api_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2064, "ivy_tests.test_ivy.helpers.globals.setup_api_test"], [2067, "ivy_tests.test_ivy.helpers.globals.setup_api_test"]], "setup_frontend_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2064, "ivy_tests.test_ivy.helpers.globals.setup_frontend_test"], [2068, "ivy_tests.test_ivy.helpers.globals.setup_frontend_test"]], "supported_device_dtypes (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2064, "ivy_tests.test_ivy.helpers.globals.TestData.supported_device_dtypes"], [2066, "ivy_tests.test_ivy.helpers.globals.TestData.supported_device_dtypes"]], "teardown_api_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2064, "ivy_tests.test_ivy.helpers.globals.teardown_api_test"], [2069, "ivy_tests.test_ivy.helpers.globals.teardown_api_test"]], "teardown_frontend_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2064, "ivy_tests.test_ivy.helpers.globals.teardown_frontend_test"], [2070, "ivy_tests.test_ivy.helpers.globals.teardown_frontend_test"]], "test_fn (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2064, "ivy_tests.test_ivy.helpers.globals.TestData.test_fn"], [2066, "ivy_tests.test_ivy.helpers.globals.TestData.test_fn"]], "interruptedtest (class in ivy_tests.test_ivy.helpers.globals)": [[2065, "ivy_tests.test_ivy.helpers.globals.InterruptedTest"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers": [[2071, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"]], "array_and_broadcastable_shape() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2072, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_and_broadcastable_shape"], [2073, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_and_broadcastable_shape"]], "array_bools() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2072, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_bools"], [2074, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_bools"]], "array_indices_axis() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2072, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_indices_axis"], [2075, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_indices_axis"]], "array_values() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2072, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_values"], [2076, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_values"]], "arrays_and_axes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2072, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_and_axes"], [2077, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_and_axes"]], "arrays_for_pooling() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2072, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_for_pooling"], [2078, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_for_pooling"]], "broadcast_shapes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2072, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.broadcast_shapes"], [2079, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.broadcast_shapes"]], "dtype_and_values() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2072, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_and_values"], [2080, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_and_values"]], "dtype_values_axis() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2072, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_values_axis"], [2081, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_values_axis"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers": [[2072, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers"]], "list_of_length() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2072, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.list_of_length"], [2082, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.list_of_length"]], "lists() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2072, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.lists"], [2083, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.lists"]], "mutually_broadcastable_shapes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2072, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.mutually_broadcastable_shapes"], [2084, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.mutually_broadcastable_shapes"]], "prod() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2072, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.prod"], [2085, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.prod"]], "array_dtypes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers)": [[2086, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.array_dtypes"], [2087, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.array_dtypes"]], "get_castable_dtype() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers)": [[2086, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_castable_dtype"], [2088, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_castable_dtype"]], "get_dtypes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers)": [[2086, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_dtypes"], [2089, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_dtypes"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers": [[2086, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers"]], "apply_safety_factor() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2090, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.apply_safety_factor"], [2091, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.apply_safety_factor"]], "get_axis() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2090, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_axis"], [2092, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_axis"]], "get_bounds() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2090, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_bounds"], [2093, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_bounds"]], "get_mean_std() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2090, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_mean_std"], [2094, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_mean_std"]], "get_shape() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2090, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_shape"], [2095, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_shape"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers": [[2090, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers"]], "matrix_is_stable() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2090, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.matrix_is_stable"], [2096, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.matrix_is_stable"]], "reshape_shapes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2090, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.reshape_shapes"], [2097, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.reshape_shapes"]], "subsets() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2090, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.subsets"], [2098, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.subsets"]], "x_and_filters() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2090, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.x_and_filters"], [2099, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.x_and_filters"]], "floats() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers)": [[2100, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.floats"], [2101, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.floats"]], "ints() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers)": [[2100, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.ints"], [2102, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.ints"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers": [[2100, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers"]], "number() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers)": [[2100, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.number"], [2103, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.number"]], "frontendmethoddata (class in ivy_tests.test_ivy.helpers.structs)": [[2104, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData"], [2105, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData"]], "__init__() (ivy_tests.test_ivy.helpers.structs.frontendmethoddata method)": [[2104, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.__init__"], [2105, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.__init__"]], "framework_init_module (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2104, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.framework_init_module"], [2105, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.framework_init_module"]], "init_name (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2104, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.init_name"], [2105, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.init_name"]], "ivy_init_module (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2104, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.ivy_init_module"], [2105, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.ivy_init_module"]], "ivy_tests.test_ivy.helpers.structs": [[2104, "module-ivy_tests.test_ivy.helpers.structs"]], "method_name (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2104, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.method_name"], [2105, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.method_name"]], "asvariableflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2106, "ivy_tests.test_ivy.helpers.test_parameter_flags.AsVariableFlags"], [2107, "ivy_tests.test_ivy.helpers.test_parameter_flags.AsVariableFlags"]], "containerflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2106, "ivy_tests.test_ivy.helpers.test_parameter_flags.ContainerFlags"], [2108, "ivy_tests.test_ivy.helpers.test_parameter_flags.ContainerFlags"]], "functiontestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2106, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags"], [2109, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags"]], "nativearrayflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2106, "ivy_tests.test_ivy.helpers.test_parameter_flags.NativeArrayFlags"], [2110, "ivy_tests.test_ivy.helpers.test_parameter_flags.NativeArrayFlags"]], "numpositionalarg (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2106, "ivy_tests.test_ivy.helpers.test_parameter_flags.NumPositionalArg"], [2111, "ivy_tests.test_ivy.helpers.test_parameter_flags.NumPositionalArg"]], "numpositionalargfn (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2106, "ivy_tests.test_ivy.helpers.test_parameter_flags.NumPositionalArgFn"], [2112, "ivy_tests.test_ivy.helpers.test_parameter_flags.NumPositionalArgFn"]], "numpositionalargmethod (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2106, "ivy_tests.test_ivy.helpers.test_parameter_flags.NumPositionalArgMethod"], [2113, "ivy_tests.test_ivy.helpers.test_parameter_flags.NumPositionalArgMethod"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.functiontestflags method)": [[2106, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags.__init__"], [2109, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags.__init__"]], "build_flag() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2106, "ivy_tests.test_ivy.helpers.test_parameter_flags.build_flag"], [2114, "ivy_tests.test_ivy.helpers.test_parameter_flags.build_flag"]], "function_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2106, "ivy_tests.test_ivy.helpers.test_parameter_flags.function_flags"], [2115, "ivy_tests.test_ivy.helpers.test_parameter_flags.function_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags": [[2106, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"]], "handle_frontend_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2116, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_method"], [2117, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_method"]], "handle_frontend_test() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2116, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_test"], [2118, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_test"]], "handle_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2116, "ivy_tests.test_ivy.helpers.testing_helpers.handle_method"], [2119, "ivy_tests.test_ivy.helpers.testing_helpers.handle_method"]], "handle_test() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2116, "ivy_tests.test_ivy.helpers.testing_helpers.handle_test"], [2120, "ivy_tests.test_ivy.helpers.testing_helpers.handle_test"]], "ivy_tests.test_ivy.helpers.testing_helpers": [[2116, "module-ivy_tests.test_ivy.helpers.testing_helpers"]], "num_positional_args() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2116, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args"], [2121, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args"]], "num_positional_args_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2116, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args_method"], [2122, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args_method"]], "seed() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2116, "ivy_tests.test_ivy.helpers.testing_helpers.seed"], [2123, "ivy_tests.test_ivy.helpers.testing_helpers.seed"]], "cprint() (in module ivy.verbosity)": [[2124, "ivy.verbosity.cprint"], [2125, "ivy.verbosity.cprint"]], "ivy.verbosity": [[2124, "module-ivy.verbosity"]]}})