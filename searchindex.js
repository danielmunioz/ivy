Search.setIndex({"docnames": ["_version", "assertions", "assertions/check_all", "assertions/check_all_or_any_fn", "assertions/check_any", "assertions/check_elem_in_list", "assertions/check_equal", "assertions/check_exists", "assertions/check_false", "assertions/check_fill_value_and_dtype_are_compatible", "assertions/check_gather_input_valid", "assertions/check_gather_nd_input_valid", "assertions/check_greater", "assertions/check_inplace_sizes_valid", "assertions/check_isinstance", "assertions/check_less", "assertions/check_one_way_broadcastable", "assertions/check_shape", "assertions/check_true", "backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/fn_name_from_version_specific_fn_name", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/set_backend_to_specific_version", "backend_handler/set_jax_backend", "backend_handler/set_numpy_backend", "backend_handler/set_tensorflow_backend", "backend_handler/set_torch_backend", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/applied_libraries", "contributing/building_the_docs", "contributing/helpful_resources", "contributing/open_tasks", "contributing/setting_up", "contributing/the_basics", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/experimental", "data_classes/array/experimental/activations", "data_classes/array/experimental/activations/ArrayWithActivationsExperimental", "data_classes/array/experimental/array_methods", "data_classes/array/experimental/array_methods/avg_pool3d", "data_classes/array/experimental/array_methods/dct", "data_classes/array/experimental/array_methods/diagflat", "data_classes/array/experimental/array_methods/dirichlet", "data_classes/array/experimental/array_methods/exp2", "data_classes/array/experimental/array_methods/flatten", "data_classes/array/experimental/array_methods/fliplr", "data_classes/array/experimental/array_methods/flipud", "data_classes/array/experimental/array_methods/float_power", "data_classes/array/experimental/array_methods/fmax", "data_classes/array/experimental/array_methods/fmod", "data_classes/array/experimental/array_methods/gcd", "data_classes/array/experimental/array_methods/heaviside", "data_classes/array/experimental/array_methods/hstack", "data_classes/array/experimental/array_methods/i0", "data_classes/array/experimental/array_methods/isclose", "data_classes/array/experimental/array_methods/isneginf", "data_classes/array/experimental/array_methods/isposinf", "data_classes/array/experimental/array_methods/kron", "data_classes/array/experimental/array_methods/lcm", "data_classes/array/experimental/array_methods/logaddexp2", "data_classes/array/experimental/array_methods/max_pool1d", "data_classes/array/experimental/array_methods/max_pool2d", "data_classes/array/experimental/array_methods/max_pool3d", "data_classes/array/experimental/array_methods/median", "data_classes/array/experimental/array_methods/moveaxis", "data_classes/array/experimental/array_methods/msort", "data_classes/array/experimental/array_methods/nan_to_num", "data_classes/array/experimental/array_methods/nansum", "data_classes/array/experimental/array_methods/pad", "data_classes/array/experimental/array_methods/rot90", "data_classes/array/experimental/array_methods/sinc", "data_classes/array/experimental/array_methods/top_k", "data_classes/array/experimental/array_methods/trapz", "data_classes/array/experimental/array_methods/vstack", "data_classes/array/experimental/conversions", "data_classes/array/experimental/conversions/ArrayWithConversionsExperimental", "data_classes/array/experimental/creation", "data_classes/array/experimental/creation/ArrayWithCreationExperimental", "data_classes/array/experimental/data_type", "data_classes/array/experimental/data_type/ArrayWithData_typeExperimental", "data_classes/array/experimental/device", "data_classes/array/experimental/device/ArrayWithDeviceExperimental", "data_classes/array/experimental/elementwise", "data_classes/array/experimental/elementwise/ArrayWithElementWiseExperimental", "data_classes/array/experimental/general", "data_classes/array/experimental/general/ArrayWithGeneralExperimental", "data_classes/array/experimental/gradients", "data_classes/array/experimental/gradients/ArrayWithGradientsExperimental", "data_classes/array/experimental/image", "data_classes/array/experimental/image/ArrayWithImageExperimental", "data_classes/array/experimental/layers", "data_classes/array/experimental/layers/ArrayWithLayersExperimental", "data_classes/array/experimental/linalg", "data_classes/array/experimental/linalg/ArrayWithLinalgExperimental", "data_classes/array/experimental/losses", "data_classes/array/experimental/losses/ArrayWithLossesExperimental", "data_classes/array/experimental/manipulation", "data_classes/array/experimental/manipulation/ArrayWithManipulationExperimental", "data_classes/array/experimental/norms", "data_classes/array/experimental/norms/ArrayWithNormsExperimental", "data_classes/array/experimental/random", "data_classes/array/experimental/random/ArrayWithRandomExperimental", "data_classes/array/experimental/searching", "data_classes/array/experimental/searching/ArrayWithSearchingExperimental", "data_classes/array/experimental/set", "data_classes/array/experimental/set/ArrayWithSetExperimental", "data_classes/array/experimental/sorting", "data_classes/array/experimental/sorting/ArrayWithSortingExperimental", "data_classes/array/experimental/statistical", "data_classes/array/experimental/statistical/ArrayWithStatisticalExperimental", "data_classes/array/experimental/utility", "data_classes/array/experimental/utility/ArrayWithUtilityExperimental", "data_classes/array/extensions", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linalg", "data_classes/array/linalg/ArrayWithLinalg", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/experimental", "data_classes/container/experimental/activations", "data_classes/container/experimental/activations/ContainerWithActivationExperimental", "data_classes/container/experimental/container_methods", "data_classes/container/experimental/container_methods/avg_pool2d", "data_classes/container/experimental/container_methods/avg_pool3d", "data_classes/container/experimental/container_methods/dct", "data_classes/container/experimental/container_methods/diagflat", "data_classes/container/experimental/container_methods/dirichlet", "data_classes/container/experimental/container_methods/exp2", "data_classes/container/experimental/container_methods/flatten", "data_classes/container/experimental/container_methods/fliplr", "data_classes/container/experimental/container_methods/flipud", "data_classes/container/experimental/container_methods/float_power", "data_classes/container/experimental/container_methods/fmax", "data_classes/container/experimental/container_methods/fmod", "data_classes/container/experimental/container_methods/gcd", "data_classes/container/experimental/container_methods/hamming_window", "data_classes/container/experimental/container_methods/hann_window", "data_classes/container/experimental/container_methods/heaviside", "data_classes/container/experimental/container_methods/hstack", "data_classes/container/experimental/container_methods/i0", "data_classes/container/experimental/container_methods/isclose", "data_classes/container/experimental/container_methods/isneginf", "data_classes/container/experimental/container_methods/isposinf", "data_classes/container/experimental/container_methods/kaiser_bessel_derived_window", "data_classes/container/experimental/container_methods/kaiser_window", "data_classes/container/experimental/container_methods/kron", "data_classes/container/experimental/container_methods/lcm", "data_classes/container/experimental/container_methods/logaddexp2", "data_classes/container/experimental/container_methods/max_pool1d", "data_classes/container/experimental/container_methods/max_pool2d", "data_classes/container/experimental/container_methods/max_pool3d", "data_classes/container/experimental/container_methods/median", "data_classes/container/experimental/container_methods/moveaxis", "data_classes/container/experimental/container_methods/msort", "data_classes/container/experimental/container_methods/nan_to_num", "data_classes/container/experimental/container_methods/nansum", "data_classes/container/experimental/container_methods/pad", "data_classes/container/experimental/container_methods/rot90", "data_classes/container/experimental/container_methods/sinc", "data_classes/container/experimental/container_methods/static_avg_pool2d", "data_classes/container/experimental/container_methods/static_avg_pool3d", "data_classes/container/experimental/container_methods/static_dct", "data_classes/container/experimental/container_methods/static_diagflat", "data_classes/container/experimental/container_methods/static_dirichlet", "data_classes/container/experimental/container_methods/static_exp2", "data_classes/container/experimental/container_methods/static_flatten", "data_classes/container/experimental/container_methods/static_fliplr", "data_classes/container/experimental/container_methods/static_flipud", "data_classes/container/experimental/container_methods/static_float_power", "data_classes/container/experimental/container_methods/static_fmax", "data_classes/container/experimental/container_methods/static_fmod", "data_classes/container/experimental/container_methods/static_gcd", "data_classes/container/experimental/container_methods/static_hamming_window", "data_classes/container/experimental/container_methods/static_hann_window", "data_classes/container/experimental/container_methods/static_heaviside", "data_classes/container/experimental/container_methods/static_hstack", "data_classes/container/experimental/container_methods/static_i0", "data_classes/container/experimental/container_methods/static_isclose", "data_classes/container/experimental/container_methods/static_isneginf", "data_classes/container/experimental/container_methods/static_isposinf", "data_classes/container/experimental/container_methods/static_kaiser_bessel_derived_window", "data_classes/container/experimental/container_methods/static_kaiser_window", "data_classes/container/experimental/container_methods/static_kron", "data_classes/container/experimental/container_methods/static_lcm", "data_classes/container/experimental/container_methods/static_logaddexp2", "data_classes/container/experimental/container_methods/static_max_pool1d", "data_classes/container/experimental/container_methods/static_max_pool2d", "data_classes/container/experimental/container_methods/static_max_pool3d", "data_classes/container/experimental/container_methods/static_median", "data_classes/container/experimental/container_methods/static_moveaxis", "data_classes/container/experimental/container_methods/static_msort", "data_classes/container/experimental/container_methods/static_nan_to_num", "data_classes/container/experimental/container_methods/static_nansum", "data_classes/container/experimental/container_methods/static_pad", "data_classes/container/experimental/container_methods/static_rot90", "data_classes/container/experimental/container_methods/static_sinc", "data_classes/container/experimental/container_methods/static_top_k", "data_classes/container/experimental/container_methods/static_triu_indices", "data_classes/container/experimental/container_methods/static_vstack", "data_classes/container/experimental/container_methods/top_k", "data_classes/container/experimental/container_methods/triu_indices", "data_classes/container/experimental/container_methods/vstack", "data_classes/container/experimental/conversions", "data_classes/container/experimental/conversions/ContainerWithConversionExperimental", "data_classes/container/experimental/creation", "data_classes/container/experimental/creation/ContainerWithCreationExperimental", "data_classes/container/experimental/data_type", "data_classes/container/experimental/data_type/ContainerWithData_typeExperimental", "data_classes/container/experimental/device", "data_classes/container/experimental/device/ContainerWithDeviceExperimental", "data_classes/container/experimental/elementwise", "data_classes/container/experimental/elementwise/ContainerWithElementWiseExperimental", "data_classes/container/experimental/general", "data_classes/container/experimental/general/ContainerWithGeneralExperimental", "data_classes/container/experimental/gradients", "data_classes/container/experimental/gradients/ContainerWithGradientsExperimental", "data_classes/container/experimental/image", "data_classes/container/experimental/image/ContainerWithImageExperimental", "data_classes/container/experimental/layers", "data_classes/container/experimental/layers/ContainerWithLayersExperimental", "data_classes/container/experimental/linalg", "data_classes/container/experimental/linalg/ContainerWithLinalgExperimental", "data_classes/container/experimental/losses", "data_classes/container/experimental/losses/ContainerWithLossesExperimental", "data_classes/container/experimental/manipulation", "data_classes/container/experimental/manipulation/ContainerWithManipulationExperimental", "data_classes/container/experimental/norms", "data_classes/container/experimental/norms/ContainerWithNormsExperimental", "data_classes/container/experimental/random", "data_classes/container/experimental/random/ContainerWithRandomExperimental", "data_classes/container/experimental/searching", "data_classes/container/experimental/searching/ContainerWithSearchingExperimental", "data_classes/container/experimental/set", "data_classes/container/experimental/set/ContainerWithSetExperimental", "data_classes/container/experimental/sorting", "data_classes/container/experimental/sorting/ContainerWithSortingExperimental", "data_classes/container/experimental/statistical", "data_classes/container/experimental/statistical/ContainerWithStatisticalExperimental", "data_classes/container/experimental/utility", "data_classes/container/experimental/utility/ContainerWithUtilityExperimental", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linalg", "data_classes/container/linalg/ContainerWithLinalg", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/array_api_tests", "deep_dive/arrays", "deep_dive/backend_setting", "deep_dive/containers", "deep_dive/continuous_integration", "deep_dive/data_types", "deep_dive/devices", "deep_dive/docstring_examples", "deep_dive/docstrings", "deep_dive/exception_handling", "deep_dive/formatting", "deep_dive/function_arguments", "deep_dive/function_types", "deep_dive/function_wrapping", "deep_dive/inplace_updates", "deep_dive/ivy_frontends", "deep_dive/ivy_frontends_tests", "deep_dive/ivy_tests", "deep_dive/navigating_the_code", "deep_dive/superset_behaviour", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/from_zero_dim_arrays_to_float", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/experimental", "functional/experimental/activations", "functional/experimental/compilation", "functional/experimental/constants", "functional/experimental/creation", "functional/experimental/creation/hamming_window", "functional/experimental/creation/hann_window", "functional/experimental/creation/kaiser_bessel_derived_window", "functional/experimental/creation/kaiser_window", "functional/experimental/creation/triu_indices", "functional/experimental/creation/vorbis_window", "functional/experimental/data_type", "functional/experimental/device", "functional/experimental/elementwise", "functional/experimental/elementwise/exp2", "functional/experimental/elementwise/float_power", "functional/experimental/elementwise/fmax", "functional/experimental/elementwise/fmod", "functional/experimental/elementwise/gcd", "functional/experimental/elementwise/isclose", "functional/experimental/elementwise/isneginf", "functional/experimental/elementwise/isposinf", "functional/experimental/elementwise/lcm", "functional/experimental/elementwise/logaddexp2", "functional/experimental/elementwise/nan_to_num", "functional/experimental/elementwise/nansum", "functional/experimental/elementwise/sinc", "functional/experimental/elementwise/trapz", "functional/experimental/general", "functional/experimental/gradients", "functional/experimental/layers", "functional/experimental/layers/avg_pool2d", "functional/experimental/layers/avg_pool3d", "functional/experimental/layers/dct", "functional/experimental/layers/max_pool1d", "functional/experimental/layers/max_pool2d", "functional/experimental/layers/max_pool3d", "functional/experimental/linalg", "functional/experimental/linalg/diagflat", "functional/experimental/linalg/kron", "functional/experimental/losses", "functional/experimental/manipulation", "functional/experimental/manipulation/flatten", "functional/experimental/manipulation/fliplr", "functional/experimental/manipulation/flipud", "functional/experimental/manipulation/heaviside", "functional/experimental/manipulation/hstack", "functional/experimental/manipulation/i0", "functional/experimental/manipulation/moveaxis", "functional/experimental/manipulation/ndenumerate", "functional/experimental/manipulation/ndindex", "functional/experimental/manipulation/pad", "functional/experimental/manipulation/rot90", "functional/experimental/manipulation/top_k", "functional/experimental/manipulation/vstack", "functional/experimental/meta", "functional/experimental/nest", "functional/experimental/norms", "functional/experimental/random", "functional/experimental/random/beta", "functional/experimental/random/dirichlet", "functional/experimental/random/gamma", "functional/experimental/searching", "functional/experimental/set", "functional/experimental/sorting", "functional/experimental/sorting/msort", "functional/experimental/sparse_array", "functional/experimental/sparse_array/is_ivy_sparse_array", "functional/experimental/sparse_array/is_native_sparse_array", "functional/experimental/sparse_array/native_sparse_array", "functional/experimental/sparse_array/native_sparse_array_to_indices_values_and_shape", "functional/experimental/statistical", "functional/experimental/statistical/median", "functional/experimental/utility", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/deserialize", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/get", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/extensions", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_frontend_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_container", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_container", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable/static_variable_container", "functional/ivy/gradients/variable/variable_array", "functional/ivy/gradients/variable/variable_container", "functional/ivy/gradients/variable/variable_functional", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/variable_data/static_variable_data_container", "functional/ivy/gradients/variable_data/variable_data_array", "functional/ivy/gradients/variable_data/variable_data_container", "functional/ivy/gradients/variable_data/variable_data_functional", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/deconv_length", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/get_x_data_format", "functional/ivy/layers/handle_padding", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linalg", "functional/ivy/linalg/cholesky", "functional/ivy/linalg/cholesky/cholesky_array", "functional/ivy/linalg/cholesky/cholesky_container", "functional/ivy/linalg/cholesky/cholesky_functional", "functional/ivy/linalg/cholesky/static_cholesky_container", "functional/ivy/linalg/cross", "functional/ivy/linalg/cross/cross_array", "functional/ivy/linalg/cross/cross_container", "functional/ivy/linalg/cross/cross_functional", "functional/ivy/linalg/cross/static_cross_container", "functional/ivy/linalg/det", "functional/ivy/linalg/det/det_array", "functional/ivy/linalg/det/det_container", "functional/ivy/linalg/det/det_functional", "functional/ivy/linalg/det/static_det_container", "functional/ivy/linalg/diag", "functional/ivy/linalg/diag/diag_array", "functional/ivy/linalg/diag/diag_container", "functional/ivy/linalg/diag/diag_functional", "functional/ivy/linalg/diag/static_diag_container", "functional/ivy/linalg/diagonal", "functional/ivy/linalg/diagonal/diagonal_array", "functional/ivy/linalg/diagonal/diagonal_container", "functional/ivy/linalg/diagonal/diagonal_functional", "functional/ivy/linalg/diagonal/static_diagonal_container", "functional/ivy/linalg/eigh", "functional/ivy/linalg/eigh/eigh_array", "functional/ivy/linalg/eigh/eigh_container", "functional/ivy/linalg/eigh/eigh_functional", "functional/ivy/linalg/eigvalsh", "functional/ivy/linalg/eigvalsh/eigvalsh_array", "functional/ivy/linalg/eigvalsh/eigvalsh_functional", "functional/ivy/linalg/inner", "functional/ivy/linalg/inner/inner_array", "functional/ivy/linalg/inner/inner_container", "functional/ivy/linalg/inner/inner_functional", "functional/ivy/linalg/inner/static_inner_container", "functional/ivy/linalg/inv", "functional/ivy/linalg/inv/inv_array", "functional/ivy/linalg/inv/inv_container", "functional/ivy/linalg/inv/inv_functional", "functional/ivy/linalg/inv/static_inv_container", "functional/ivy/linalg/matmul", "functional/ivy/linalg/matmul/matmul_array", "functional/ivy/linalg/matmul/matmul_container", "functional/ivy/linalg/matmul/matmul_functional", "functional/ivy/linalg/matmul/static_matmul_container", "functional/ivy/linalg/matrix_norm", "functional/ivy/linalg/matrix_norm/matrix_norm_array", "functional/ivy/linalg/matrix_norm/matrix_norm_container", "functional/ivy/linalg/matrix_norm/matrix_norm_functional", "functional/ivy/linalg/matrix_norm/static_matrix_norm_container", "functional/ivy/linalg/matrix_power", "functional/ivy/linalg/matrix_power/matrix_power_container", "functional/ivy/linalg/matrix_power/matrix_power_functional", "functional/ivy/linalg/matrix_power/static_matrix_power_container", "functional/ivy/linalg/matrix_rank", "functional/ivy/linalg/matrix_rank/matrix_rank_array", "functional/ivy/linalg/matrix_rank/matrix_rank_container", "functional/ivy/linalg/matrix_rank/matrix_rank_functional", "functional/ivy/linalg/matrix_rank/static_matrix_rank_container", "functional/ivy/linalg/matrix_transpose", "functional/ivy/linalg/matrix_transpose/matrix_transpose_array", "functional/ivy/linalg/matrix_transpose/matrix_transpose_container", "functional/ivy/linalg/matrix_transpose/matrix_transpose_functional", "functional/ivy/linalg/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linalg/outer", "functional/ivy/linalg/outer/outer_array", "functional/ivy/linalg/outer/outer_container", "functional/ivy/linalg/outer/outer_functional", "functional/ivy/linalg/outer/static_outer_container", "functional/ivy/linalg/pinv", "functional/ivy/linalg/pinv/pinv_array", "functional/ivy/linalg/pinv/pinv_container", "functional/ivy/linalg/pinv/pinv_functional", "functional/ivy/linalg/pinv/static_pinv_container", "functional/ivy/linalg/qr", "functional/ivy/linalg/qr/qr_array", "functional/ivy/linalg/qr/qr_container", "functional/ivy/linalg/qr/qr_functional", "functional/ivy/linalg/qr/static_qr_container", "functional/ivy/linalg/slogdet", "functional/ivy/linalg/slogdet/slogdet_array", "functional/ivy/linalg/slogdet/slogdet_container", "functional/ivy/linalg/slogdet/slogdet_functional", "functional/ivy/linalg/slogdet/static_slogdet_container", "functional/ivy/linalg/solve", "functional/ivy/linalg/solve/solve_array", "functional/ivy/linalg/solve/solve_container", "functional/ivy/linalg/solve/solve_functional", "functional/ivy/linalg/solve/static_solve_container", "functional/ivy/linalg/svd", "functional/ivy/linalg/svd/static_svd_container", "functional/ivy/linalg/svd/svd_array", "functional/ivy/linalg/svd/svd_container", "functional/ivy/linalg/svd/svd_functional", "functional/ivy/linalg/svdvals", "functional/ivy/linalg/svdvals/static_svdvals_container", "functional/ivy/linalg/svdvals/svdvals_array", "functional/ivy/linalg/svdvals/svdvals_container", "functional/ivy/linalg/svdvals/svdvals_functional", "functional/ivy/linalg/tensordot", "functional/ivy/linalg/tensordot/static_tensordot_container", "functional/ivy/linalg/tensordot/tensordot_array", "functional/ivy/linalg/tensordot/tensordot_container", "functional/ivy/linalg/tensordot/tensordot_functional", "functional/ivy/linalg/trace", "functional/ivy/linalg/trace/static_trace_container", "functional/ivy/linalg/trace/trace_array", "functional/ivy/linalg/trace/trace_container", "functional/ivy/linalg/trace/trace_functional", "functional/ivy/linalg/vander", "functional/ivy/linalg/vander/static_vander_container", "functional/ivy/linalg/vander/vander_array", "functional/ivy/linalg/vander/vander_container", "functional/ivy/linalg/vander/vander_functional", "functional/ivy/linalg/vecdot", "functional/ivy/linalg/vecdot/static_vecdot_container", "functional/ivy/linalg/vecdot/vecdot_array", "functional/ivy/linalg/vecdot/vecdot_container", "functional/ivy/linalg/vecdot/vecdot_functional", "functional/ivy/linalg/vector_norm", "functional/ivy/linalg/vector_norm/static_vector_norm_container", "functional/ivy/linalg/vector_norm/vector_norm_array", "functional/ivy/linalg/vector_norm/vector_norm_container", "functional/ivy/linalg/vector_norm/vector_norm_functional", "functional/ivy/linalg/vector_to_skew_symmetric_matrix", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/linear_algebra", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "related_work", "related_work/api_standards", "related_work/compiler_infrastructure", "related_work/exchange_formats", "related_work/frameworks", "related_work/graph_tracers", "related_work/ml_unifying_companies", "related_work/multi_vendor_compiler_frameworks", "related_work/vendor_specific_apis", "related_work/vendor_specific_compilers", "related_work/what_does_ivy_add", "related_work/wrapper_frameworks", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/module/NewTorchModule", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["_version.rst", "assertions.rst", "assertions/check_all.rst", "assertions/check_all_or_any_fn.rst", "assertions/check_any.rst", "assertions/check_elem_in_list.rst", "assertions/check_equal.rst", "assertions/check_exists.rst", "assertions/check_false.rst", "assertions/check_fill_value_and_dtype_are_compatible.rst", "assertions/check_gather_input_valid.rst", "assertions/check_gather_nd_input_valid.rst", "assertions/check_greater.rst", "assertions/check_inplace_sizes_valid.rst", "assertions/check_isinstance.rst", "assertions/check_less.rst", "assertions/check_one_way_broadcastable.rst", "assertions/check_shape.rst", "assertions/check_true.rst", "backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/fn_name_from_version_specific_fn_name.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/set_backend_to_specific_version.rst", "backend_handler/set_jax_backend.rst", "backend_handler/set_numpy_backend.rst", "backend_handler/set_tensorflow_backend.rst", "backend_handler/set_torch_backend.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/applied_libraries.rst", "contributing/building_the_docs.rst", "contributing/helpful_resources.rst", "contributing/open_tasks.rst", "contributing/setting_up.rst", "contributing/the_basics.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/experimental.rst", "data_classes/array/experimental/activations.rst", "data_classes/array/experimental/activations/ArrayWithActivationsExperimental.rst", "data_classes/array/experimental/array_methods.rst", "data_classes/array/experimental/array_methods/avg_pool3d.rst", "data_classes/array/experimental/array_methods/dct.rst", "data_classes/array/experimental/array_methods/diagflat.rst", "data_classes/array/experimental/array_methods/dirichlet.rst", "data_classes/array/experimental/array_methods/exp2.rst", "data_classes/array/experimental/array_methods/flatten.rst", "data_classes/array/experimental/array_methods/fliplr.rst", "data_classes/array/experimental/array_methods/flipud.rst", "data_classes/array/experimental/array_methods/float_power.rst", "data_classes/array/experimental/array_methods/fmax.rst", "data_classes/array/experimental/array_methods/fmod.rst", "data_classes/array/experimental/array_methods/gcd.rst", "data_classes/array/experimental/array_methods/heaviside.rst", "data_classes/array/experimental/array_methods/hstack.rst", "data_classes/array/experimental/array_methods/i0.rst", "data_classes/array/experimental/array_methods/isclose.rst", "data_classes/array/experimental/array_methods/isneginf.rst", "data_classes/array/experimental/array_methods/isposinf.rst", "data_classes/array/experimental/array_methods/kron.rst", "data_classes/array/experimental/array_methods/lcm.rst", "data_classes/array/experimental/array_methods/logaddexp2.rst", "data_classes/array/experimental/array_methods/max_pool1d.rst", "data_classes/array/experimental/array_methods/max_pool2d.rst", "data_classes/array/experimental/array_methods/max_pool3d.rst", "data_classes/array/experimental/array_methods/median.rst", "data_classes/array/experimental/array_methods/moveaxis.rst", "data_classes/array/experimental/array_methods/msort.rst", "data_classes/array/experimental/array_methods/nan_to_num.rst", "data_classes/array/experimental/array_methods/nansum.rst", "data_classes/array/experimental/array_methods/pad.rst", "data_classes/array/experimental/array_methods/rot90.rst", "data_classes/array/experimental/array_methods/sinc.rst", "data_classes/array/experimental/array_methods/top_k.rst", "data_classes/array/experimental/array_methods/trapz.rst", "data_classes/array/experimental/array_methods/vstack.rst", "data_classes/array/experimental/conversions.rst", "data_classes/array/experimental/conversions/ArrayWithConversionsExperimental.rst", "data_classes/array/experimental/creation.rst", "data_classes/array/experimental/creation/ArrayWithCreationExperimental.rst", "data_classes/array/experimental/data_type.rst", "data_classes/array/experimental/data_type/ArrayWithData_typeExperimental.rst", "data_classes/array/experimental/device.rst", "data_classes/array/experimental/device/ArrayWithDeviceExperimental.rst", "data_classes/array/experimental/elementwise.rst", "data_classes/array/experimental/elementwise/ArrayWithElementWiseExperimental.rst", "data_classes/array/experimental/general.rst", "data_classes/array/experimental/general/ArrayWithGeneralExperimental.rst", "data_classes/array/experimental/gradients.rst", "data_classes/array/experimental/gradients/ArrayWithGradientsExperimental.rst", "data_classes/array/experimental/image.rst", "data_classes/array/experimental/image/ArrayWithImageExperimental.rst", "data_classes/array/experimental/layers.rst", "data_classes/array/experimental/layers/ArrayWithLayersExperimental.rst", "data_classes/array/experimental/linalg.rst", "data_classes/array/experimental/linalg/ArrayWithLinalgExperimental.rst", "data_classes/array/experimental/losses.rst", "data_classes/array/experimental/losses/ArrayWithLossesExperimental.rst", "data_classes/array/experimental/manipulation.rst", "data_classes/array/experimental/manipulation/ArrayWithManipulationExperimental.rst", "data_classes/array/experimental/norms.rst", "data_classes/array/experimental/norms/ArrayWithNormsExperimental.rst", "data_classes/array/experimental/random.rst", "data_classes/array/experimental/random/ArrayWithRandomExperimental.rst", "data_classes/array/experimental/searching.rst", "data_classes/array/experimental/searching/ArrayWithSearchingExperimental.rst", "data_classes/array/experimental/set.rst", "data_classes/array/experimental/set/ArrayWithSetExperimental.rst", "data_classes/array/experimental/sorting.rst", "data_classes/array/experimental/sorting/ArrayWithSortingExperimental.rst", "data_classes/array/experimental/statistical.rst", "data_classes/array/experimental/statistical/ArrayWithStatisticalExperimental.rst", "data_classes/array/experimental/utility.rst", "data_classes/array/experimental/utility/ArrayWithUtilityExperimental.rst", "data_classes/array/extensions.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linalg.rst", "data_classes/array/linalg/ArrayWithLinalg.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/experimental.rst", "data_classes/container/experimental/activations.rst", "data_classes/container/experimental/activations/ContainerWithActivationExperimental.rst", "data_classes/container/experimental/container_methods.rst", "data_classes/container/experimental/container_methods/avg_pool2d.rst", "data_classes/container/experimental/container_methods/avg_pool3d.rst", "data_classes/container/experimental/container_methods/dct.rst", "data_classes/container/experimental/container_methods/diagflat.rst", "data_classes/container/experimental/container_methods/dirichlet.rst", "data_classes/container/experimental/container_methods/exp2.rst", "data_classes/container/experimental/container_methods/flatten.rst", "data_classes/container/experimental/container_methods/fliplr.rst", "data_classes/container/experimental/container_methods/flipud.rst", "data_classes/container/experimental/container_methods/float_power.rst", "data_classes/container/experimental/container_methods/fmax.rst", "data_classes/container/experimental/container_methods/fmod.rst", "data_classes/container/experimental/container_methods/gcd.rst", "data_classes/container/experimental/container_methods/hamming_window.rst", "data_classes/container/experimental/container_methods/hann_window.rst", "data_classes/container/experimental/container_methods/heaviside.rst", "data_classes/container/experimental/container_methods/hstack.rst", "data_classes/container/experimental/container_methods/i0.rst", "data_classes/container/experimental/container_methods/isclose.rst", "data_classes/container/experimental/container_methods/isneginf.rst", "data_classes/container/experimental/container_methods/isposinf.rst", "data_classes/container/experimental/container_methods/kaiser_bessel_derived_window.rst", "data_classes/container/experimental/container_methods/kaiser_window.rst", "data_classes/container/experimental/container_methods/kron.rst", "data_classes/container/experimental/container_methods/lcm.rst", "data_classes/container/experimental/container_methods/logaddexp2.rst", "data_classes/container/experimental/container_methods/max_pool1d.rst", "data_classes/container/experimental/container_methods/max_pool2d.rst", "data_classes/container/experimental/container_methods/max_pool3d.rst", "data_classes/container/experimental/container_methods/median.rst", "data_classes/container/experimental/container_methods/moveaxis.rst", "data_classes/container/experimental/container_methods/msort.rst", "data_classes/container/experimental/container_methods/nan_to_num.rst", "data_classes/container/experimental/container_methods/nansum.rst", "data_classes/container/experimental/container_methods/pad.rst", "data_classes/container/experimental/container_methods/rot90.rst", "data_classes/container/experimental/container_methods/sinc.rst", "data_classes/container/experimental/container_methods/static_avg_pool2d.rst", "data_classes/container/experimental/container_methods/static_avg_pool3d.rst", "data_classes/container/experimental/container_methods/static_dct.rst", "data_classes/container/experimental/container_methods/static_diagflat.rst", "data_classes/container/experimental/container_methods/static_dirichlet.rst", "data_classes/container/experimental/container_methods/static_exp2.rst", "data_classes/container/experimental/container_methods/static_flatten.rst", "data_classes/container/experimental/container_methods/static_fliplr.rst", "data_classes/container/experimental/container_methods/static_flipud.rst", "data_classes/container/experimental/container_methods/static_float_power.rst", "data_classes/container/experimental/container_methods/static_fmax.rst", "data_classes/container/experimental/container_methods/static_fmod.rst", "data_classes/container/experimental/container_methods/static_gcd.rst", "data_classes/container/experimental/container_methods/static_hamming_window.rst", "data_classes/container/experimental/container_methods/static_hann_window.rst", "data_classes/container/experimental/container_methods/static_heaviside.rst", "data_classes/container/experimental/container_methods/static_hstack.rst", "data_classes/container/experimental/container_methods/static_i0.rst", "data_classes/container/experimental/container_methods/static_isclose.rst", "data_classes/container/experimental/container_methods/static_isneginf.rst", "data_classes/container/experimental/container_methods/static_isposinf.rst", "data_classes/container/experimental/container_methods/static_kaiser_bessel_derived_window.rst", "data_classes/container/experimental/container_methods/static_kaiser_window.rst", "data_classes/container/experimental/container_methods/static_kron.rst", "data_classes/container/experimental/container_methods/static_lcm.rst", "data_classes/container/experimental/container_methods/static_logaddexp2.rst", "data_classes/container/experimental/container_methods/static_max_pool1d.rst", "data_classes/container/experimental/container_methods/static_max_pool2d.rst", "data_classes/container/experimental/container_methods/static_max_pool3d.rst", "data_classes/container/experimental/container_methods/static_median.rst", "data_classes/container/experimental/container_methods/static_moveaxis.rst", "data_classes/container/experimental/container_methods/static_msort.rst", "data_classes/container/experimental/container_methods/static_nan_to_num.rst", "data_classes/container/experimental/container_methods/static_nansum.rst", "data_classes/container/experimental/container_methods/static_pad.rst", "data_classes/container/experimental/container_methods/static_rot90.rst", "data_classes/container/experimental/container_methods/static_sinc.rst", "data_classes/container/experimental/container_methods/static_top_k.rst", "data_classes/container/experimental/container_methods/static_triu_indices.rst", "data_classes/container/experimental/container_methods/static_vstack.rst", "data_classes/container/experimental/container_methods/top_k.rst", "data_classes/container/experimental/container_methods/triu_indices.rst", "data_classes/container/experimental/container_methods/vstack.rst", "data_classes/container/experimental/conversions.rst", "data_classes/container/experimental/conversions/ContainerWithConversionExperimental.rst", "data_classes/container/experimental/creation.rst", "data_classes/container/experimental/creation/ContainerWithCreationExperimental.rst", "data_classes/container/experimental/data_type.rst", "data_classes/container/experimental/data_type/ContainerWithData_typeExperimental.rst", "data_classes/container/experimental/device.rst", "data_classes/container/experimental/device/ContainerWithDeviceExperimental.rst", "data_classes/container/experimental/elementwise.rst", "data_classes/container/experimental/elementwise/ContainerWithElementWiseExperimental.rst", "data_classes/container/experimental/general.rst", "data_classes/container/experimental/general/ContainerWithGeneralExperimental.rst", "data_classes/container/experimental/gradients.rst", "data_classes/container/experimental/gradients/ContainerWithGradientsExperimental.rst", "data_classes/container/experimental/image.rst", "data_classes/container/experimental/image/ContainerWithImageExperimental.rst", "data_classes/container/experimental/layers.rst", "data_classes/container/experimental/layers/ContainerWithLayersExperimental.rst", "data_classes/container/experimental/linalg.rst", "data_classes/container/experimental/linalg/ContainerWithLinalgExperimental.rst", "data_classes/container/experimental/losses.rst", "data_classes/container/experimental/losses/ContainerWithLossesExperimental.rst", "data_classes/container/experimental/manipulation.rst", "data_classes/container/experimental/manipulation/ContainerWithManipulationExperimental.rst", "data_classes/container/experimental/norms.rst", "data_classes/container/experimental/norms/ContainerWithNormsExperimental.rst", "data_classes/container/experimental/random.rst", "data_classes/container/experimental/random/ContainerWithRandomExperimental.rst", "data_classes/container/experimental/searching.rst", "data_classes/container/experimental/searching/ContainerWithSearchingExperimental.rst", "data_classes/container/experimental/set.rst", "data_classes/container/experimental/set/ContainerWithSetExperimental.rst", "data_classes/container/experimental/sorting.rst", "data_classes/container/experimental/sorting/ContainerWithSortingExperimental.rst", "data_classes/container/experimental/statistical.rst", "data_classes/container/experimental/statistical/ContainerWithStatisticalExperimental.rst", "data_classes/container/experimental/utility.rst", "data_classes/container/experimental/utility/ContainerWithUtilityExperimental.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linalg.rst", "data_classes/container/linalg/ContainerWithLinalg.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/array_api_tests.rst", "deep_dive/arrays.rst", "deep_dive/backend_setting.rst", "deep_dive/containers.rst", "deep_dive/continuous_integration.rst", "deep_dive/data_types.rst", "deep_dive/devices.rst", "deep_dive/docstring_examples.rst", "deep_dive/docstrings.rst", "deep_dive/exception_handling.rst", "deep_dive/formatting.rst", "deep_dive/function_arguments.rst", "deep_dive/function_types.rst", "deep_dive/function_wrapping.rst", "deep_dive/inplace_updates.rst", "deep_dive/ivy_frontends.rst", "deep_dive/ivy_frontends_tests.rst", "deep_dive/ivy_tests.rst", "deep_dive/navigating_the_code.rst", "deep_dive/superset_behaviour.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/from_zero_dim_arrays_to_float.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/experimental.rst", "functional/experimental/activations.rst", "functional/experimental/compilation.rst", "functional/experimental/constants.rst", "functional/experimental/creation.rst", "functional/experimental/creation/hamming_window.rst", "functional/experimental/creation/hann_window.rst", "functional/experimental/creation/kaiser_bessel_derived_window.rst", "functional/experimental/creation/kaiser_window.rst", "functional/experimental/creation/triu_indices.rst", "functional/experimental/creation/vorbis_window.rst", "functional/experimental/data_type.rst", "functional/experimental/device.rst", "functional/experimental/elementwise.rst", "functional/experimental/elementwise/exp2.rst", "functional/experimental/elementwise/float_power.rst", "functional/experimental/elementwise/fmax.rst", "functional/experimental/elementwise/fmod.rst", "functional/experimental/elementwise/gcd.rst", "functional/experimental/elementwise/isclose.rst", "functional/experimental/elementwise/isneginf.rst", "functional/experimental/elementwise/isposinf.rst", "functional/experimental/elementwise/lcm.rst", "functional/experimental/elementwise/logaddexp2.rst", "functional/experimental/elementwise/nan_to_num.rst", "functional/experimental/elementwise/nansum.rst", "functional/experimental/elementwise/sinc.rst", "functional/experimental/elementwise/trapz.rst", "functional/experimental/general.rst", "functional/experimental/gradients.rst", "functional/experimental/layers.rst", "functional/experimental/layers/avg_pool2d.rst", "functional/experimental/layers/avg_pool3d.rst", "functional/experimental/layers/dct.rst", "functional/experimental/layers/max_pool1d.rst", "functional/experimental/layers/max_pool2d.rst", "functional/experimental/layers/max_pool3d.rst", "functional/experimental/linalg.rst", "functional/experimental/linalg/diagflat.rst", "functional/experimental/linalg/kron.rst", "functional/experimental/losses.rst", "functional/experimental/manipulation.rst", "functional/experimental/manipulation/flatten.rst", "functional/experimental/manipulation/fliplr.rst", "functional/experimental/manipulation/flipud.rst", "functional/experimental/manipulation/heaviside.rst", "functional/experimental/manipulation/hstack.rst", "functional/experimental/manipulation/i0.rst", "functional/experimental/manipulation/moveaxis.rst", "functional/experimental/manipulation/ndenumerate.rst", "functional/experimental/manipulation/ndindex.rst", "functional/experimental/manipulation/pad.rst", "functional/experimental/manipulation/rot90.rst", "functional/experimental/manipulation/top_k.rst", "functional/experimental/manipulation/vstack.rst", "functional/experimental/meta.rst", "functional/experimental/nest.rst", "functional/experimental/norms.rst", "functional/experimental/random.rst", "functional/experimental/random/beta.rst", "functional/experimental/random/dirichlet.rst", "functional/experimental/random/gamma.rst", "functional/experimental/searching.rst", "functional/experimental/set.rst", "functional/experimental/sorting.rst", "functional/experimental/sorting/msort.rst", "functional/experimental/sparse_array.rst", "functional/experimental/sparse_array/is_ivy_sparse_array.rst", "functional/experimental/sparse_array/is_native_sparse_array.rst", "functional/experimental/sparse_array/native_sparse_array.rst", "functional/experimental/sparse_array/native_sparse_array_to_indices_values_and_shape.rst", "functional/experimental/statistical.rst", "functional/experimental/statistical/median.rst", "functional/experimental/utility.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/deserialize.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/get.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_frontend_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_container.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable/static_variable_container.rst", "functional/ivy/gradients/variable/variable_array.rst", "functional/ivy/gradients/variable/variable_container.rst", "functional/ivy/gradients/variable/variable_functional.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/variable_data/static_variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_array.rst", "functional/ivy/gradients/variable_data/variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_functional.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/deconv_length.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/get_x_data_format.rst", "functional/ivy/layers/handle_padding.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linalg.rst", "functional/ivy/linalg/cholesky.rst", "functional/ivy/linalg/cholesky/cholesky_array.rst", "functional/ivy/linalg/cholesky/cholesky_container.rst", "functional/ivy/linalg/cholesky/cholesky_functional.rst", "functional/ivy/linalg/cholesky/static_cholesky_container.rst", "functional/ivy/linalg/cross.rst", "functional/ivy/linalg/cross/cross_array.rst", "functional/ivy/linalg/cross/cross_container.rst", "functional/ivy/linalg/cross/cross_functional.rst", "functional/ivy/linalg/cross/static_cross_container.rst", "functional/ivy/linalg/det.rst", "functional/ivy/linalg/det/det_array.rst", "functional/ivy/linalg/det/det_container.rst", "functional/ivy/linalg/det/det_functional.rst", "functional/ivy/linalg/det/static_det_container.rst", "functional/ivy/linalg/diag.rst", "functional/ivy/linalg/diag/diag_array.rst", "functional/ivy/linalg/diag/diag_container.rst", "functional/ivy/linalg/diag/diag_functional.rst", "functional/ivy/linalg/diag/static_diag_container.rst", "functional/ivy/linalg/diagonal.rst", "functional/ivy/linalg/diagonal/diagonal_array.rst", "functional/ivy/linalg/diagonal/diagonal_container.rst", "functional/ivy/linalg/diagonal/diagonal_functional.rst", "functional/ivy/linalg/diagonal/static_diagonal_container.rst", "functional/ivy/linalg/eigh.rst", "functional/ivy/linalg/eigh/eigh_array.rst", "functional/ivy/linalg/eigh/eigh_container.rst", "functional/ivy/linalg/eigh/eigh_functional.rst", "functional/ivy/linalg/eigvalsh.rst", "functional/ivy/linalg/eigvalsh/eigvalsh_array.rst", "functional/ivy/linalg/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linalg/inner.rst", "functional/ivy/linalg/inner/inner_array.rst", "functional/ivy/linalg/inner/inner_container.rst", "functional/ivy/linalg/inner/inner_functional.rst", "functional/ivy/linalg/inner/static_inner_container.rst", "functional/ivy/linalg/inv.rst", "functional/ivy/linalg/inv/inv_array.rst", "functional/ivy/linalg/inv/inv_container.rst", "functional/ivy/linalg/inv/inv_functional.rst", "functional/ivy/linalg/inv/static_inv_container.rst", "functional/ivy/linalg/matmul.rst", "functional/ivy/linalg/matmul/matmul_array.rst", "functional/ivy/linalg/matmul/matmul_container.rst", "functional/ivy/linalg/matmul/matmul_functional.rst", "functional/ivy/linalg/matmul/static_matmul_container.rst", "functional/ivy/linalg/matrix_norm.rst", "functional/ivy/linalg/matrix_norm/matrix_norm_array.rst", "functional/ivy/linalg/matrix_norm/matrix_norm_container.rst", "functional/ivy/linalg/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linalg/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linalg/matrix_power.rst", "functional/ivy/linalg/matrix_power/matrix_power_container.rst", "functional/ivy/linalg/matrix_power/matrix_power_functional.rst", "functional/ivy/linalg/matrix_power/static_matrix_power_container.rst", "functional/ivy/linalg/matrix_rank.rst", "functional/ivy/linalg/matrix_rank/matrix_rank_array.rst", "functional/ivy/linalg/matrix_rank/matrix_rank_container.rst", "functional/ivy/linalg/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linalg/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linalg/matrix_transpose.rst", "functional/ivy/linalg/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linalg/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linalg/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linalg/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linalg/outer.rst", "functional/ivy/linalg/outer/outer_array.rst", "functional/ivy/linalg/outer/outer_container.rst", "functional/ivy/linalg/outer/outer_functional.rst", "functional/ivy/linalg/outer/static_outer_container.rst", "functional/ivy/linalg/pinv.rst", "functional/ivy/linalg/pinv/pinv_array.rst", "functional/ivy/linalg/pinv/pinv_container.rst", "functional/ivy/linalg/pinv/pinv_functional.rst", "functional/ivy/linalg/pinv/static_pinv_container.rst", "functional/ivy/linalg/qr.rst", "functional/ivy/linalg/qr/qr_array.rst", "functional/ivy/linalg/qr/qr_container.rst", "functional/ivy/linalg/qr/qr_functional.rst", "functional/ivy/linalg/qr/static_qr_container.rst", "functional/ivy/linalg/slogdet.rst", "functional/ivy/linalg/slogdet/slogdet_array.rst", "functional/ivy/linalg/slogdet/slogdet_container.rst", "functional/ivy/linalg/slogdet/slogdet_functional.rst", "functional/ivy/linalg/slogdet/static_slogdet_container.rst", "functional/ivy/linalg/solve.rst", "functional/ivy/linalg/solve/solve_array.rst", "functional/ivy/linalg/solve/solve_container.rst", "functional/ivy/linalg/solve/solve_functional.rst", "functional/ivy/linalg/solve/static_solve_container.rst", "functional/ivy/linalg/svd.rst", "functional/ivy/linalg/svd/static_svd_container.rst", "functional/ivy/linalg/svd/svd_array.rst", "functional/ivy/linalg/svd/svd_container.rst", "functional/ivy/linalg/svd/svd_functional.rst", "functional/ivy/linalg/svdvals.rst", "functional/ivy/linalg/svdvals/static_svdvals_container.rst", "functional/ivy/linalg/svdvals/svdvals_array.rst", "functional/ivy/linalg/svdvals/svdvals_container.rst", "functional/ivy/linalg/svdvals/svdvals_functional.rst", "functional/ivy/linalg/tensordot.rst", "functional/ivy/linalg/tensordot/static_tensordot_container.rst", "functional/ivy/linalg/tensordot/tensordot_array.rst", "functional/ivy/linalg/tensordot/tensordot_container.rst", "functional/ivy/linalg/tensordot/tensordot_functional.rst", "functional/ivy/linalg/trace.rst", "functional/ivy/linalg/trace/static_trace_container.rst", "functional/ivy/linalg/trace/trace_array.rst", "functional/ivy/linalg/trace/trace_container.rst", "functional/ivy/linalg/trace/trace_functional.rst", "functional/ivy/linalg/vander.rst", "functional/ivy/linalg/vander/static_vander_container.rst", "functional/ivy/linalg/vander/vander_array.rst", "functional/ivy/linalg/vander/vander_container.rst", "functional/ivy/linalg/vander/vander_functional.rst", "functional/ivy/linalg/vecdot.rst", "functional/ivy/linalg/vecdot/static_vecdot_container.rst", "functional/ivy/linalg/vecdot/vecdot_array.rst", "functional/ivy/linalg/vecdot/vecdot_container.rst", "functional/ivy/linalg/vecdot/vecdot_functional.rst", "functional/ivy/linalg/vector_norm.rst", "functional/ivy/linalg/vector_norm/static_vector_norm_container.rst", "functional/ivy/linalg/vector_norm/vector_norm_array.rst", "functional/ivy/linalg/vector_norm/vector_norm_container.rst", "functional/ivy/linalg/vector_norm/vector_norm_functional.rst", "functional/ivy/linalg/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "related_work.rst", "related_work/api_standards.rst", "related_work/compiler_infrastructure.rst", "related_work/exchange_formats.rst", "related_work/frameworks.rst", "related_work/graph_tracers.rst", "related_work/ml_unifying_companies.rst", "related_work/multi_vendor_compiler_frameworks.rst", "related_work/vendor_specific_apis.rst", "related_work/vendor_specific_compilers.rst", "related_work/what_does_ivy_add.rst", "related_work/wrapper_frameworks.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/module/NewTorchModule.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_inplace_sizes_valid", "check_isinstance", "check_less", "check_one_way_broadcastable", "check_shape", "check_true", "Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "set_backend", "set_backend_to_specific_version", "set_jax_backend", "set_numpy_backend", "set_tensorflow_backend", "set_torch_backend", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Experimental", "Activations", "ArrayWithActivationsExperimental", "Array methods", "avg_pool3d array", "dct array", "diagflat array", "dirichlet array", "exp2 array", "flatten array", "fliplr array", "flipud array", "float_power array", "fmax array", "fmod array", "gcd array", "heaviside array", "hstack array", "i0 array", "isclose array", "isneginf array", "isposinf array", "kron array", "lcm array", "logaddexp2 array", "max_pool1d array", "max_pool2d array", "max_pool3d array", "median array", "moveaxis array", "msort array", "nan_to_num array", "nansum array", "pad array", "rot90 array", "sinc array", "top_k array", "trapz array", "vstack array", "Conversions", "ArrayWithConversionsExperimental", "Creation", "ArrayWithCreationExperimental", "Data type", "ArrayWithData_typeExperimental", "Device", "ArrayWithDeviceExperimental", "Elementwise", "ArrayWithElementWiseExperimental", "General", "ArrayWithGeneralExperimental", "Gradients", "ArrayWithGradientsExperimental", "Image", "ArrayWithImageExperimental", "Layers", "ArrayWithLayersExperimental", "Linalg", "ArrayWithLinalgExperimental", "Losses", "ArrayWithLossesExperimental", "Manipulation", "ArrayWithManipulationExperimental", "Norms", "ArrayWithNormsExperimental", "Random", "ArrayWithRandomExperimental", "Searching", "ArrayWithSearchingExperimental", "Set", "ArrayWithSetExperimental", "Sorting", "ArrayWithSortingExperimental", "Statistical", "ArrayWithStatisticalExperimental", "Utility", "ArrayWithUtilityExperimental", "Extensions", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linalg", "ArrayWithLinalg", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Experimental", "Activations", "ContainerWithActivationExperimental", "Container methods", "avg_pool2d container", "avg_pool3d container", "dct container", "diagflat container", "dirichlet container", "exp2 container", "flatten container", "fliplr container", "flipud container", "float_power container", "fmax container", "fmod container", "gcd container", "hamming_window container", "hann_window container", "heaviside container", "hstack container", "i0 container", "isclose container", "isneginf container", "isposinf container", "kaiser_bessel_derived_window container", "kaiser_window container", "kron container", "lcm container", "logaddexp2 container", "max_pool1d container", "max_pool2d container", "max_pool3d container", "median container", "moveaxis container", "msort container", "nan_to_num container", "nansum container", "pad container", "rot90 container", "sinc container", "static_avg_pool2d container", "static_avg_pool3d container", "static_dct container", "static_diagflat container", "static_dirichlet container", "static_exp2 container", "static_flatten container", "static_fliplr container", "static_flipud container", "static_float_power container", "static_fmax container", "static_fmod container", "static_gcd container", "static_hamming_window container", "static_hann_window container", "static_heaviside container", "static_hstack container", "static_i0 container", "static_isclose container", "static_isneginf container", "static_isposinf container", "static_kaiser_bessel_derived_window container", "static_kaiser_window container", "static_kron container", "static_lcm container", "static_logaddexp2 container", "static_max_pool1d container", "static_max_pool2d container", "static_max_pool3d container", "static_median container", "static_moveaxis container", "static_msort container", "static_nan_to_num container", "static_nansum container", "static_pad container", "static_rot90 container", "static_sinc container", "static_top_k container", "static_triu_indices container", "static_vstack container", "top_k container", "triu_indices container", "vstack container", "Conversions", "ContainerWithConversionExperimental", "Creation", "ContainerWithCreationExperimental", "Data type", "ContainerWithData_typeExperimental", "Device", "ContainerWithDeviceExperimental", "Elementwise", "ContainerWithElementWiseExperimental", "General", "ContainerWithGeneralExperimental", "Gradients", "ContainerWithGradientsExperimental", "Image", "ContainerWithImageExperimental", "Layers", "ContainerWithLayersExperimental", "Linalg", "ContainerWithLinalgExperimental", "Losses", "ContainerWithLossesExperimental", "Manipulation", "ContainerWithManipulationExperimental", "Norms", "ContainerWithNormsExperimental", "Random", "ContainerWithRandomExperimental", "Searching", "ContainerWithSearchingExperimental", "Set", "ContainerWithSetExperimental", "Sorting", "ContainerWithSortingExperimental", "Statistical", "ContainerWithStatisticalExperimental", "Utility", "ContainerWithUtilityExperimental", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linalg", "ContainerWithLinalg", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "from_zero_dim_arrays_to_float", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "Experimental", "Activations", "Compilation", "Constants", "Creation", "hamming_window", "hann_window", "kaiser_bessel_derived_window", "kaiser_window", "triu_indices", "vorbis_window", "Data type", "Device", "Elementwise", "exp2", "float_power", "fmax", "fmod", "gcd", "isclose", "isneginf", "isposinf", "lcm", "logaddexp2", "nan_to_num", "nansum", "sinc", "trapz", "General", "Gradients", "Layers", "avg_pool2d", "avg_pool3d", "dct", "max_pool1d", "max_pool2d", "max_pool3d", "Linalg", "diagflat", "kron", "Losses", "Manipulation", "flatten", "fliplr", "flipud", "heaviside", "hstack", "i0", "moveaxis", "ndenumerate", "ndindex", "pad", "rot90", "top_k", "vstack", "Meta", "Nest", "Norms", "Random", "beta", "dirichlet", "gamma", "Searching", "Set", "Sorting", "msort", "Sparse array", "is_ivy_sparse_array", "is_native_sparse_array", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "Statistical", "median", "Utility", "&lt;no title&gt;", "Activations", "deserialize", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "get", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "Compilation", "compile", "Constants", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "&lt;no title&gt;", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.array_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_frontend_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.Container.is_ivy_container", "ivy.is_ivy_container", "ivy.Container.static_is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.Container.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "variable", "ivy.Container.static_variable", "ivy.Array.variable", "ivy.Container.variable", "ivy.variable", "variable_data", "ivy.Container.static_variable_data", "ivy.Array.variable_data", "ivy.Container.variable_data", "ivy.variable_data", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "deconv_length", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "get_x_data_format", "handle_padding", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linalg", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "ivy.Array.diag", "ivy.Container.diag", "ivy.diag", "ivy.Container.static_diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Array.tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "&lt;no title&gt;", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "NewTorchModule", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"version": [0, 33, 34, 35, 41, 42, 345, 348, 356, 361, 1751, 1767, 1768], "support": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 41, 46, 48, 50, 51, 52, 53, 55, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 141, 142, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 172, 174, 176, 178, 180, 182, 184, 186, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 278, 280, 282, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 341, 343, 346, 347, 348, 351, 352, 353, 354, 356, 357, 359, 360, 361, 363, 364, 366, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422, 423, 424, 425, 426, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 449, 450, 451, 455, 457, 458, 459, 460, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1578, 1579, 1580, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1755, 1756, 1758, 1760, 1761, 1764, 1766, 1767, 1768, 1771, 1772, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1801, 1803, 1804, 1805, 1806, 1807, 1809, 1810, 1812], "framework": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 40, 41, 46, 48, 49, 50, 51, 52, 53, 55, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 141, 142, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 172, 174, 176, 178, 180, 182, 184, 186, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 278, 280, 282, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 363, 366, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422, 423, 424, 425, 426, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 449, 450, 451, 455, 457, 458, 459, 460, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1578, 1579, 1580, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1765, 1771, 1772, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1801, 1803, 1804, 1805, 1806, 1807, 1809, 1810, 1812], "ml": [32, 34, 35, 36, 39, 355, 360, 361, 362, 364, 365, 366, 377, 1751, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1768], "explos": [32, 34, 1751], "A": [32, 33, 34, 35, 38, 39, 40, 41, 54, 55, 56, 57, 109, 110, 140, 141, 152, 153, 156, 157, 166, 167, 339, 343, 345, 346, 351, 352, 355, 357, 361, 364, 378, 1750, 1751, 1761, 1762], "huge": [32, 34, 364, 1751, 1761, 1767], "number": [32, 33, 41, 42, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 148, 149, 152, 153, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 343, 345, 346, 347, 354, 356, 357, 359, 361, 364, 1751], "tool": [32, 35, 42, 347, 362, 366, 377, 378, 1751, 1759, 1760, 1761, 1762, 1764, 1767, 1768], "have": [32, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 377, 378, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1750, 1751, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "explod": [32, 33, 1751], "onto": [32, 33, 1751, 1761], "scene": [32, 33, 142, 143, 339, 360, 362, 1751, 1761], "b": [32, 35, 36, 60, 61, 109, 110, 140, 141, 146, 147, 339, 342, 343, 344, 347, 352, 360, 361, 362, 364, 365, 366, 376, 1751, 1757], "why": [32, 34, 42, 354, 363, 1751], "unifi": [32, 34, 339, 340, 341, 345, 349, 355, 359, 361, 378, 1751, 1757, 1758, 1759, 1761, 1765, 1768], "should": [32, 34, 37, 38, 40, 41, 42, 44, 45, 46, 54, 55, 60, 61, 109, 110, 140, 141, 142, 143, 148, 149, 152, 153, 156, 157, 158, 159, 164, 165, 170, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1751, 1757, 1758, 1761, 1763, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "we": [32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 168, 169, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 361, 362, 363, 364, 365, 366, 377, 378, 1750, 1751, 1757, 1761, 1762, 1766, 1767], "try": [32, 34, 35, 38, 40, 41, 42, 341, 343, 345, 349, 350, 361, 363, 378, 1751], "them": [32, 33, 34, 35, 38, 40, 42, 340, 341, 342, 343, 349, 353, 354, 355, 356, 357, 361, 363, 364, 365, 378, 1750, 1751, 1758, 1759, 1761, 1763, 1767], "c": [32, 34, 35, 36, 41, 140, 141, 142, 143, 146, 147, 164, 165, 339, 343, 347, 352, 359, 360, 361, 362, 364, 378, 1750, 1751, 1757, 1761, 1765, 1766, 1768], "standard": [32, 60, 61, 154, 155, 156, 157, 164, 165, 339, 340, 341, 343, 345, 348, 351, 354, 357, 358, 378, 1751, 1757, 1759, 1760, 1763, 1764, 1766], "re": [32, 33, 34, 36, 40, 41, 42, 140, 141, 339, 345, 358, 359, 363, 366, 378, 1751, 1761], "collabor": [32, 33, 34, 1751], "The": [32, 33, 35, 36, 37, 38, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 364, 365, 366, 377, 1750, 1751, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768], "consortium": [32, 34, 1751], "python": [32, 33, 34, 38, 39, 41, 42, 156, 157, 340, 343, 349, 350, 355, 357, 359, 361, 363, 364, 378, 1750, 1751, 1758, 1761, 1762, 1763, 1767, 1768], "data": [32, 34, 41, 54, 55, 57, 60, 61, 109, 110, 140, 141, 142, 143, 148, 149, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 339, 340, 343, 346, 348, 351, 352, 353, 354, 356, 358, 359, 361, 363, 1750, 1751, 1761, 1762, 1763, 1765, 1766, 1767], "api": [32, 33, 41, 60, 61, 339, 341, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 360, 362, 364, 378, 1750, 1751, 1757, 1759, 1761, 1763, 1766, 1768], "open": [33, 34, 35, 36, 38, 41, 42, 156, 157, 344, 345, 348, 355, 356, 359, 377, 1751, 1759, 1760, 1761, 1763, 1764], "sourc": [33, 34, 35, 36, 37, 38, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 340, 341, 343, 344, 355, 1751, 1760, 1761, 1762, 1763, 1764], "project": [33, 34, 35, 38, 41, 42, 342, 357, 365, 377, 378, 1757, 1759, 1761, 1764, 1768], "ha": [33, 34, 35, 40, 42, 148, 149, 152, 153, 160, 161, 164, 165, 340, 342, 343, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 365, 366, 377, 378, 1757, 1760, 1761, 1763, 1764, 1767], "grown": 33, "consider": [33, 347, 351, 359, 1758, 1759], "recent": [33, 34, 41, 42, 357], "year": [33, 35, 340, 378, 1751, 1761], "especi": [33, 41, 340, 359, 1761], "deep": [33, 36, 39, 40, 42, 343, 345, 356, 360, 363, 364, 1751, 1759, 1761, 1764, 1765, 1767, 1768], "learn": [33, 34, 36, 39, 40, 41, 142, 143, 339, 340, 352, 360, 377, 1750, 1751, 1759, 1763, 1764, 1765, 1766, 1767, 1768], "can": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 55, 56, 57, 148, 149, 152, 153, 156, 157, 339, 340, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 377, 378, 1750, 1751, 1758, 1759, 1760, 1761, 1762, 1764, 1765, 1767, 1768], "seen": [33, 34, 344, 347, 349, 355, 357, 361, 363, 364, 1767], "from": [33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 377, 378, 1750, 1751, 1757, 1759, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768], "rapidli": 33, "increas": [33, 148, 149, 345, 349, 358, 359, 1761], "github": [33, 37, 39, 40, 42, 340, 345, 347, 348, 357], "repo": [33, 37, 38, 39, 41, 42, 340, 345, 355, 358], "contain": [33, 37, 38, 40, 41, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 164, 165, 166, 167, 339, 340, 344, 345, 347, 348, 351, 352, 353, 354, 357, 360, 361, 362, 365, 378, 1750, 1751, 1761, 1762, 1767], "term": [33, 42, 343, 361, 1750, 1761], "over": [33, 35, 41, 42, 148, 149, 164, 165, 166, 167, 168, 169, 342, 347, 348, 354, 357, 361, 363, 378, 1759, 1761], "time": [33, 34, 35, 40, 41, 42, 142, 143, 160, 161, 342, 343, 344, 345, 347, 351, 352, 353, 354, 355, 357, 358, 361, 364, 366, 378, 1759, 1761, 1762, 1765, 1766, 1767], "These": [33, 34, 35, 37, 39, 40, 41, 42, 340, 343, 344, 345, 347, 348, 350, 351, 352, 354, 356, 357, 358, 361, 362, 364, 365, 366, 378, 1750, 1761, 1765, 1767, 1768], "ar": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 50, 51, 60, 61, 109, 110, 140, 141, 148, 149, 152, 153, 156, 157, 158, 159, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 377, 378, 1750, 1751, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768], "written": [33, 41, 341, 348, 351, 354, 355, 357, 358, 361, 363, 366, 378, 1759, 1761, 1765, 1767, 1768], "mani": [33, 34, 35, 40, 41, 42, 152, 153, 341, 342, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 363, 364, 378, 1757, 1761, 1764, 1767, 1768], "differ": [33, 34, 35, 39, 41, 42, 60, 61, 140, 141, 339, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 378, 1751, 1758, 1759, 1760, 1761, 1764, 1767, 1768], "while": [33, 34, 40, 41, 42, 342, 345, 347, 350, 351, 354, 355, 357, 359, 363, 365, 366, 378, 1761, 1767, 1768], "thi": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 377, 378, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1751, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "i": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 377, 378, 1750, 1751, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768], "wonder": [33, 35, 363], "thing": [33, 34, 35, 39, 40, 41, 42, 342, 350, 355, 357, 359, 363, 364, 1761], "research": [33, 377, 1761, 1768], "develop": [33, 34, 35, 36, 37, 39, 40, 41, 42, 340, 344, 358, 377, 378, 1750, 1751, 1759, 1760, 1761, 1762, 1763, 1766, 1767, 1768], "when": [33, 34, 36, 37, 39, 40, 41, 42, 54, 55, 56, 57, 109, 110, 148, 149, 150, 151, 156, 157, 158, 159, 164, 165, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 366, 378, 1759, 1761, 1764, 1765, 1766, 1767], "also": [33, 34, 36, 37, 39, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 339, 340, 341, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 364, 365, 366, 377, 378, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1766, 1767, 1768], "consid": [33, 34, 109, 110, 148, 149, 352, 358, 362, 363, 364, 1758, 1762, 1766, 1768], "speed": [33, 357, 1764], "which": [33, 34, 35, 38, 39, 40, 41, 42, 45, 46, 54, 55, 56, 57, 109, 110, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 377, 378, 1750, 1751, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1766, 1767, 1768], "evolv": [33, 1761], "shareabl": 33, "code": [33, 34, 35, 38, 39, 40, 41, 42, 60, 61, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 376, 378, 1750, 1751, 1757, 1759, 1760, 1761, 1762, 1764, 1765, 1766, 1767, 1768], "significantli": [33, 1759], "hinder": [33, 351], "librari": [33, 34, 35, 36, 40, 340, 359, 366, 376, 378, 1750, 1751, 1757, 1758, 1759, 1761, 1765, 1768], "becom": [33, 35, 42, 109, 110, 343, 347, 355, 378], "outdat": 33, "matter": [33, 347], "month": [33, 41], "rigor": [33, 357], "maintain": [33, 42, 162, 163, 340, 344, 1760], "against": [33, 56, 57, 148, 149, 158, 159, 357, 361, 378, 1761], "newest": 33, "For": [33, 34, 35, 37, 38, 40, 41, 42, 142, 143, 148, 149, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 377, 378, 1758, 1759, 1762, 1767, 1768], "softwar": [33, 34, 41, 42, 1759, 1764, 1765, 1766], "pipelin": [33, 341, 366, 1750, 1761, 1762, 1767], "where": [33, 34, 35, 36, 38, 41, 42, 54, 55, 60, 61, 109, 110, 140, 141, 148, 149, 152, 153, 156, 157, 158, 159, 164, 165, 166, 167, 341, 342, 343, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 361, 364, 365, 366, 378, 1751, 1759, 1768], "rapid": [33, 34, 41, 1761], "prototyp": [33, 1761], "vital": [33, 366], "signific": [33, 34, 378, 1761], "bottleneck": 33, "As": [33, 42, 168, 169, 341, 343, 345, 346, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 378, 1761, 1766], "new": [33, 34, 35, 36, 38, 40, 41, 42, 109, 110, 140, 141, 142, 143, 152, 153, 154, 155, 339, 342, 343, 344, 345, 347, 348, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 366, 377, 1750, 1751, 1759, 1763, 1767, 1768], "futur": [33, 35, 41, 42, 345, 355, 358, 359, 363, 378, 1767], "avail": [33, 41, 42, 140, 141, 343, 344, 346, 348, 355, 378, 1766, 1767], "backend": [33, 39, 40, 41, 42, 49, 51, 53, 140, 141, 142, 143, 339, 340, 341, 344, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 360, 362, 363, 366, 1750, 1751, 1761, 1764, 1767, 1768], "specif": [33, 40, 41, 42, 140, 141, 340, 341, 342, 343, 344, 345, 346, 349, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 365, 366, 377, 378, 1750, 1757, 1759, 1760, 1762, 1763, 1764, 1768], "quickli": [33, 35, 41, 42, 364, 365, 1761, 1768], "obsolet": [33, 35], "user": [33, 34, 37, 38, 41, 42, 339, 342, 343, 345, 353, 354, 355, 357, 359, 360, 361, 378, 1759, 1761, 1767, 1768], "constantli": [33, 358, 359], "invent": 33, "wheel": 33, "If": [33, 36, 37, 38, 40, 41, 42, 44, 49, 52, 53, 54, 55, 56, 57, 60, 61, 109, 110, 142, 143, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 366, 378, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1751, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "our": [33, 34, 36, 39, 40, 41, 42, 44, 168, 169, 170, 340, 343, 344, 345, 347, 349, 350, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 378, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1751, 1766, 1767, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "desir": [33, 42, 56, 57, 158, 159, 342, 345, 355, 361, 1761], "provid": [33, 41, 42, 54, 55, 140, 141, 142, 143, 152, 153, 158, 159, 164, 165, 166, 167, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 357, 359, 363, 365, 377, 378, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1768], "simultan": [33, 35], "all": [33, 34, 35, 36, 37, 38, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 140, 141, 148, 149, 152, 153, 156, 157, 166, 167, 168, 169, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 377, 378, 1750, 1751, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1767, 1768], "modern": [33, 34, 1766], "simpl": [33, 40, 41, 42, 341, 343, 345, 346, 347, 348, 352, 354, 355, 357, 358, 359, 363, 365, 366, 378, 1750, 1760, 1761, 1762, 1763], "scalabl": [33, 361, 1766, 1767], "manner": [33, 41, 49, 52, 53, 346, 348, 355, 358, 364, 377, 378, 1757, 1759, 1767, 1768], "must": [33, 35, 37, 39, 40, 41, 42, 45, 46, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 340, 341, 345, 346, 347, 348, 349, 351, 352, 355, 358, 359, 361, 365, 366, 1762, 1768], "determin": [33, 60, 61, 109, 110, 148, 149, 152, 153, 166, 167, 343, 345, 346, 348, 352, 355, 356, 359], "exactli": [33, 35, 343, 345, 346, 347, 359], "common": [33, 40, 60, 61, 109, 110, 343, 345, 346, 347, 350, 352, 353, 355, 358, 359, 378, 1758, 1761, 1768], "ground": [33, 355, 357], "li": 33, "between": [33, 109, 110, 150, 151, 152, 153, 341, 342, 343, 347, 351, 352, 355, 356, 357, 359, 360, 362, 363, 364, 366, 377, 1751, 1757, 1758, 1760, 1761, 1762, 1767], "find": [33, 36, 38, 39, 40, 41, 42, 340, 344, 357, 359, 361, 364, 1750, 1751], "exist": [33, 34, 38, 40, 41, 140, 141, 152, 153, 340, 342, 347, 348, 352, 353, 354, 355, 357, 359, 361, 378, 1750, 1759, 1761, 1764, 1767], "essenti": [33, 34, 40, 343, 346, 347, 352, 358, 1767], "order": [33, 38, 40, 41, 42, 142, 143, 148, 149, 162, 163, 341, 342, 343, 344, 345, 346, 347, 348, 351, 354, 355, 356, 357, 358, 359, 364, 366, 378, 1757, 1760, 1761, 1762, 1764, 1767], "design": [33, 34, 339, 345, 354, 355, 356, 359, 361, 363, 378, 1757, 1759, 1761, 1764, 1765, 1766], "univers": 33, "abstract": [33, 343, 345, 355, 357, 359, 365, 378, 1759, 1761, 1763, 1764, 1768], "In": [33, 35, 37, 40, 41, 42, 140, 141, 152, 153, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 366, 377, 378, 1751, 1757, 1759, 1761, 1762, 1764, 1767], "search": [33, 39, 41, 49, 52, 53, 159, 343, 347, 357, 358], "languag": [33, 35, 355, 359, 361, 1750, 1759, 1762, 1764, 1765, 1766, 1767], "first": [33, 34, 37, 38, 39, 40, 41, 42, 60, 61, 109, 110, 148, 149, 156, 157, 158, 159, 160, 161, 164, 165, 340, 341, 343, 347, 351, 352, 353, 354, 355, 357, 359, 361, 363, 364, 366, 1759, 1761, 1762, 1766], "see": [33, 36, 38, 40, 41, 42, 56, 57, 60, 61, 148, 149, 158, 159, 164, 165, 166, 167, 340, 343, 344, 346, 347, 351, 352, 355, 356, 357, 358, 359, 361, 363, 364, 377, 378, 1751, 1757], "clear": [33, 34, 35, 40, 42, 345, 346, 347, 355, 359, 361, 363, 1761], "front": [33, 360, 361, 364, 1751, 1759, 1761], "runner": 33, "look": [33, 37, 38, 41, 42, 342, 343, 345, 346, 347, 349, 351, 352, 355, 356, 357, 358, 359, 361, 363, 365, 366, 1751, 1757, 1761], "littl": [33, 356, 363, 1763], "deeper": [33, 42, 339, 357, 360], "follow": [33, 34, 38, 40, 41, 42, 140, 141, 142, 143, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 378, 1751, 1758, 1761, 1764], "same": [33, 35, 37, 38, 41, 42, 49, 50, 51, 54, 55, 56, 57, 60, 61, 142, 143, 146, 147, 148, 149, 152, 153, 156, 157, 160, 161, 162, 163, 164, 165, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 365, 366, 378, 1751, 1758, 1760, 1767, 1768], "core": [33, 40, 41, 346, 357, 366, 1751, 1759, 1760, 1761, 1762, 1766, 1768], "principl": [33, 1759, 1761, 1764], "oper": [33, 40, 41, 56, 57, 109, 110, 140, 141, 142, 143, 146, 147, 340, 341, 343, 345, 346, 347, 348, 352, 354, 355, 357, 359, 361, 364, 365, 1750, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1765, 1766, 1767, 1768], "expos": [33, 361, 365], "almost": [33, 39, 343, 356, 362, 364], "ident": [33, 35, 343, 352, 353, 355, 356, 358, 359, 363, 364, 378, 1750, 1751], "function": [33, 38, 41, 42, 45, 46, 49, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 339, 340, 341, 342, 344, 347, 348, 350, 354, 359, 360, 362, 363, 364, 365, 376, 377, 1750, 1751, 1758, 1759, 1760, 1761, 1762, 1767, 1768], "uniqu": [33, 160, 161, 343, 352, 355, 356, 357, 359, 378, 1764], "syntax": [33, 34, 345, 350, 1761], "argument": [33, 40, 49, 50, 51, 52, 53, 60, 61, 140, 141, 339, 340, 341, 342, 343, 347, 348, 350, 352, 353, 356, 357, 358, 359, 361, 363, 364, 1750, 1761], "There": [33, 40, 41, 42, 340, 341, 343, 345, 347, 349, 350, 352, 355, 356, 361, 364, 378, 1762, 1763, 1767, 1768], "onli": [33, 36, 40, 41, 42, 109, 110, 152, 153, 156, 157, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 376, 378, 1751, 1760, 1761, 1762, 1767, 1768], "so": [33, 34, 40, 41, 42, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 341, 342, 343, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 378, 1751, 1761, 1762, 1763, 1765], "wai": [33, 34, 39, 40, 41, 340, 342, 345, 354, 356, 357, 359, 363, 364, 365, 366, 378, 1763, 1767, 1768], "manipul": [33, 153, 358, 361, 366, 377, 1761], "tensor": [33, 54, 55, 60, 61, 140, 141, 152, 153, 156, 157, 341, 342, 345, 346, 351, 352, 354, 355, 356, 357, 358, 359, 361, 363, 364, 366, 378, 1750, 1751, 1758, 1759, 1762, 1764, 1765, 1768], "unsurprisingli": [33, 347], "fundament": [33, 355, 359, 361, 1761], "consist": [33, 340, 341, 345, 349, 354, 361, 1762], "each": [33, 34, 35, 37, 40, 41, 42, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 158, 159, 160, 161, 164, 165, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 366, 377, 378, 1751, 1757, 1758, 1762, 1764, 1767], "veri": [33, 34, 39, 40, 41, 42, 109, 110, 343, 345, 346, 347, 351, 352, 354, 355, 356, 357, 358, 359, 362, 364, 365, 366, 378, 1751, 1757, 1758, 1759, 1761, 1762, 1763, 1766, 1767, 1768], "similar": [33, 40, 41, 343, 344, 345, 346, 349, 353, 355, 356, 357, 358, 364, 378, 1757, 1758, 1759, 1760, 1767], "convent": [33, 342, 351, 358, 377, 1767], "those": [33, 40, 41, 42, 152, 153, 343, 345, 353, 355, 357, 359, 1758], "numpi": [33, 34, 39, 40, 41, 42, 140, 141, 340, 342, 344, 345, 346, 349, 351, 354, 356, 357, 358, 359, 361, 363, 366, 1750, 1751, 1763, 1768], "introduc": [33, 343, 344, 345, 356, 364], "2006": 33, "layer": [33, 147, 154, 155, 348, 355, 358, 359, 361, 362, 365, 1751, 1759, 1761, 1765, 1768], "therefor": [33, 37, 40, 42, 60, 61, 340, 341, 343, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 359, 361, 363, 365, 378, 1758, 1761, 1767], "present": [33, 40, 42, 343, 345, 346, 351, 354, 361, 1758, 1759, 1768], "itself": [33, 41, 42, 109, 110, 340, 343, 354, 355, 365, 377, 378, 1760, 1761, 1762, 1767], "cut": [33, 1767], "cloth": 33, "adher": [33, 34, 340, 345, 348, 351, 359, 361, 366, 1757, 1758, 1767], "set": [33, 36, 38, 42, 49, 52, 53, 109, 110, 140, 141, 142, 143, 148, 149, 158, 159, 161, 162, 163, 164, 165, 339, 340, 341, 343, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 1759, 1760, 1761, 1762, 1763, 1765, 1768], "semant": [33, 361, 366, 1762], "round": [33, 34, 35, 37, 38, 40, 41, 42, 60, 61, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 377, 1751, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768], "up": [33, 34, 35, 36, 37, 38, 40, 42, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 377, 378, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768], "hopefulli": [33, 34, 35, 37, 38, 40, 41, 42, 44, 170, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 377, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "paint": [33, 361], "pictur": [33, 40, 361], "how": [33, 35, 36, 38, 39, 40, 41, 42, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 365, 366, 377, 378, 1751, 1757, 1761], "pleas": [33, 34, 35, 37, 38, 40, 41, 42, 44, 170, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 377, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1751, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "reach": [33, 34, 35, 37, 38, 40, 41, 42, 44, 170, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 377, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "out": [33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 377, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1751, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "discord": [33, 34, 35, 37, 38, 40, 41, 42, 44, 170, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 377, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "you": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 140, 141, 170, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 377, 378, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1750, 1751, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "ani": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 49, 50, 51, 54, 55, 60, 61, 140, 141, 166, 167, 168, 169, 170, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 377, 378, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1750, 1751, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "question": [33, 34, 35, 37, 38, 40, 41, 42, 44, 170, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 377, 378, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "With": [34, 35, 41, 54, 55, 56, 57, 60, 61, 140, 141, 142, 143, 148, 149, 158, 159, 164, 165, 347, 353, 355, 357, 359, 361, 1761, 1764], "central": [34, 40, 359, 1767], "goal": [34, 40, 1761, 1767], "being": [34, 35, 41, 42, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 353, 354, 355, 356, 357, 359, 361, 364, 377, 378, 1751, 1757, 1759, 1760, 1761, 1762, 1767, 1768], "would": [34, 36, 38, 40, 41, 42, 152, 153, 339, 340, 341, 342, 343, 345, 347, 348, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 363, 365, 366, 378, 1751, 1761, 1767], "entir": [34, 35, 40, 41, 42, 164, 165, 166, 167, 340, 341, 343, 345, 347, 354, 355, 357, 359, 361, 364, 365, 366, 378, 1761, 1767, 1768], "forgiven": 34, "rais": [34, 42, 109, 110, 140, 141, 152, 153, 156, 157, 166, 167, 340, 342, 349, 350, 354, 355, 361, 363], "an": [34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 49, 52, 53, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 148, 149, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 377, 378, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1750, 1751, 1757, 1759, 1760, 1761, 1762, 1764, 1765, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "eyebrow": 34, "want": [34, 36, 40, 41, 42, 168, 169, 344, 353, 354, 357, 359, 364, 365, 366, 378], "somehow": 34, "tensorflow": [34, 35, 39, 40, 41, 42, 140, 141, 340, 344, 345, 346, 351, 354, 355, 356, 357, 358, 359, 361, 366, 378, 1750, 1751, 1759, 1762, 1764, 1765, 1767, 1768], "pytorch": [34, 35, 39, 40, 142, 143, 344, 345, 346, 349, 351, 352, 354, 355, 356, 358, 359, 361, 366, 378, 1750, 1751, 1762, 1764, 1765, 1767, 1768], "jax": [34, 35, 39, 40, 41, 42, 142, 143, 340, 342, 344, 345, 346, 351, 354, 355, 356, 357, 358, 359, 361, 363, 366, 378, 1751, 1762, 1764, 1767, 1768], "other": [34, 37, 40, 41, 42, 56, 57, 140, 141, 164, 165, 340, 341, 343, 344, 347, 348, 350, 352, 354, 355, 356, 357, 358, 359, 361, 363, 365, 366, 376, 377, 378, 1750, 1751, 1757, 1759, 1760, 1761, 1767, 1768], "strong": [34, 378, 1761], "industri": [34, 1761, 1763], "back": [34, 41, 42, 341, 345, 353, 360, 378, 1759, 1763], "momentum": 34, "won": [34, 35, 41, 42, 343, 357, 366], "t": [34, 35, 37, 38, 40, 41, 42, 168, 169, 339, 342, 343, 344, 345, 347, 353, 354, 357, 359, 361, 363, 364, 365, 366, 378, 1759, 1761, 1763], "ad": [34, 39, 40, 41, 42, 152, 153, 341, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 365, 378, 1760, 1761], "just": [34, 35, 41, 42, 340, 342, 345, 347, 348, 352, 353, 354, 355, 356, 357, 361, 363, 364, 378, 1761, 1762, 1767], "make": [34, 35, 40, 41, 42, 340, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 366, 1759, 1761, 1762, 1763, 1764, 1767, 1768], "problem": [34, 42, 341, 355, 363, 1757, 1763, 1767], "even": [34, 35, 41, 42, 340, 345, 346, 348, 351, 352, 355, 359, 363, 364, 365, 366, 378, 1767], "wors": 34, "rather": [34, 42, 140, 141, 142, 143, 340, 343, 345, 348, 354, 355, 356, 357, 358, 366, 378, 1757, 1760, 1761], "funni": 34, "comic": 34, "strip": 34, "": [34, 35, 36, 37, 38, 40, 41, 42, 54, 55, 109, 110, 140, 141, 142, 143, 148, 149, 164, 165, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 377, 378, 1750, 1751, 1757, 1760, 1761, 1762, 1764, 1765, 1766, 1767], "easi": [34, 41, 42, 343, 352, 356, 359, 1759, 1761, 1767, 1768], "feasibl": [34, 40], "space": [34, 109, 110, 140, 141, 357, 359], "howev": [34, 40, 41, 42, 340, 341, 342, 343, 345, 346, 347, 348, 351, 352, 354, 355, 356, 357, 359, 361, 363, 364, 365, 366, 378, 1760, 1761, 1767], "import": [34, 37, 39, 40, 41, 42, 168, 169, 340, 341, 342, 343, 345, 346, 347, 348, 350, 354, 355, 356, 358, 361, 363, 364, 366, 378, 1751, 1757, 1759, 1761, 1764, 1765, 1767], "case": [34, 40, 41, 42, 49, 52, 53, 140, 141, 152, 153, 164, 165, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 365, 366, 378, 1760, 1764], "ivi": [34, 35, 36, 38, 39, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 339, 340, 342, 343, 345, 346, 348, 350, 351, 352, 353, 354, 359, 360, 376, 378, 1750, 1751, 1757, 1768], "unlik": [34, 343, 347, 354, 1766, 1768], "charger": 34, "charact": [34, 350], "encod": [34, 140, 141, 364], "instant": [34, 1751], "messag": [34, 42, 344, 347, 349, 350, 355, 361, 363], "much": [34, 40, 41, 42, 341, 343, 345, 354, 355, 356, 358, 361, 363, 364, 1759, 1761, 1767, 1768], "one": [34, 35, 40, 41, 42, 54, 55, 109, 110, 140, 141, 148, 149, 152, 153, 158, 159, 160, 161, 340, 341, 342, 343, 345, 347, 350, 351, 352, 353, 354, 355, 357, 359, 360, 363, 364, 366, 378, 1751, 1761, 1762, 1764, 1767], "doe": [34, 38, 40, 42, 109, 110, 152, 153, 339, 342, 345, 347, 348, 351, 352, 354, 355, 356, 357, 358, 359, 361, 363, 364, 378, 1750, 1757, 1761, 1762, 1768], "mandat": [34, 345, 354, 357, 358], "adopt": [34, 42, 341, 351, 359, 1760, 1761, 1766], "continu": [34, 35, 39, 40, 41, 339, 340, 350, 357, 378, 1761], "own": [34, 35, 41, 340, 345, 348, 349, 355, 357, 358, 361, 378, 1750, 1757, 1760, 1761, 1766, 1767], "call": [34, 38, 42, 341, 342, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 357, 358, 359, 361, 363, 364, 365, 366, 378, 1761, 1762, 1765], "signatur": [34, 60, 61, 345, 346, 347, 348, 351, 354, 357, 358, 359, 1758, 1767], "replac": [34, 38, 42, 60, 61, 109, 110, 140, 141, 152, 153, 156, 157, 343, 345, 346, 347, 353, 355, 357, 363, 366, 378, 1768], "your": [34, 35, 36, 37, 38, 39, 40, 41, 340, 348, 358, 359, 364, 365, 378, 1751, 1761], "1": [34, 35, 38, 41, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 340, 342, 343, 345, 347, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 378, 1751], "10": [34, 38, 41, 60, 61, 109, 110, 140, 141, 142, 143, 148, 149, 156, 157, 164, 165, 340, 343, 345, 347, 356, 357, 361, 363, 364, 1766], "100": [34, 35, 109, 110, 357, 364, 365, 366, 378, 1751], "despit": [34, 343, 345, 346, 359, 361, 1758, 1761], "distinct": [34, 41, 343, 348, 354, 355, 360, 1751, 1761], "still": [34, 40, 42, 345, 348, 354, 355, 357, 359, 365, 378, 1751, 1758, 1761, 1767], "believ": [34, 42], "share": [34, 342, 343, 347, 352, 356, 357, 359, 361, 1759, 1760, 1767], "bring": [34, 340, 357, 361, 362, 1750], "benefit": [34, 35, 41, 341, 343, 354, 359, 363, 364, 378, 1759, 1763, 1766], "unrel": [34, 42], "what": [34, 35, 37, 42, 339, 343, 347, 348, 351, 353, 355, 357, 360, 361, 363, 364, 365, 366, 377, 378, 1751, 1757, 1762, 1763, 1766], "again": [34, 35, 42, 342, 343, 347, 354, 355, 357, 358, 359, 364, 366, 378, 1766, 1767], "contrari": 34, "bumpi": 34, "road": 34, "allud": [34, 364], "most": [34, 39, 40, 41, 341, 343, 345, 346, 350, 351, 352, 354, 355, 357, 358, 359, 361, 363, 364, 365, 378, 1761, 1762, 1764, 1765, 1767, 1768], "technologi": [34, 1759, 1763], "sector": [34, 60, 61], "full": [34, 35, 42, 148, 149, 345, 348, 351, 355, 357, 359, 361, 378, 1759, 1761, 1767], "success": 34, "reason": [34, 40, 42, 340, 341, 343, 345, 347, 352, 354, 355, 358, 359, 361, 363, 1767], "build": [34, 36, 37, 41, 344, 345, 352, 360, 362, 365, 366, 378, 1750, 1751, 1759, 1761, 1763, 1766, 1767, 1768], "custom": [34, 344, 349, 356, 357, 365, 1761, 1765, 1766, 1767], "comput": [34, 35, 41, 45, 46, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 164, 165, 343, 345, 352, 355, 357, 359, 361, 364, 378, 1750, 1757, 1759, 1761, 1762, 1764, 1765, 1767], "thank": [34, 364], "interoper": [34, 1758, 1759, 1761, 1764], "compon": [34, 361, 1757, 1762, 1764], "bio": [34, 41], "hardwar": [34, 41, 359, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767], "initi": [34, 42, 342, 345, 346, 357, 361, 1761, 1767, 1768], "pcie": 34, "interfac": [34, 363, 366, 378, 1750, 1757, 1758, 1759, 1760, 1761, 1765, 1768], "motherboard": 34, "raid": 34, "storag": [34, 364], "virtual": [34, 37, 38, 42, 1764, 1765], "bluetooth": 34, "wireless": 34, "exchang": [34, 39, 1757, 1759], "btx": 34, "form": [34, 36, 49, 50, 51, 52, 53, 54, 55, 142, 143, 148, 149, 352, 357, 359, 365, 366, 1761, 1762, 1767], "factor": [34, 142, 143, 146, 147, 148, 149, 349], "sata": 34, "connect": [34, 41, 365, 366, 1759], "host": [34, 378, 1766], "bu": 34, "adapt": 34, "devic": [34, 42, 54, 55, 59, 108, 156, 157, 339, 342, 345, 349, 352, 353, 356, 358, 359, 361, 366, 378, 1750, 1760, 1761, 1763, 1764, 1765, 1766], "html": [34, 38, 60, 61, 348], "enabl": [34, 41, 42, 341, 343, 352, 353, 354, 355, 357, 359, 360, 362, 364, 366, 378, 1750, 1759, 1760, 1761, 1762, 1763, 1764, 1767, 1768], "anyon": [34, 36, 42, 378, 1767], "websit": [34, 340], "tcp": 34, "ip": 34, "node": [34, 343, 355, 1762], "commun": [34, 36, 40, 41, 42, 378, 1751, 1760, 1761, 1763], "network": [34, 343, 352, 361, 365, 377, 1751, 1757, 1759, 1760, 1761, 1765, 1767, 1768], "smtp": 34, "possibl": [34, 36, 40, 41, 42, 152, 153, 343, 344, 345, 347, 348, 354, 355, 356, 357, 359, 361, 364, 377, 378, 1759, 1761, 1767], "send": [34, 1766], "gmail": 34, "outlook": 34, "pop": [34, 41], "u": [34, 36, 41, 42, 148, 149, 343, 353, 354, 355, 356, 357, 358, 359, 365, 378], "email": 34, "ieee": 34, "754": 34, "allow": [34, 37, 40, 42, 344, 349, 350, 353, 355, 356, 357, 361, 363, 378, 1750, 1759, 1761, 1765, 1766], "calcul": [34, 40, 60, 61, 150, 151, 164, 165, 348, 356, 361], "live": [34, 35, 345, 1757, 1759], "depend": [34, 37, 40, 41, 42, 56, 57, 140, 141, 162, 163, 345, 348, 353, 354, 355, 357, 359, 361, 378, 1759, 1761, 1762], "did": [34, 40, 366, 1767], "aris": [34, 345, 378], "until": [34, 42, 350, 358, 361, 378, 1751, 1768], "wa": [34, 42, 164, 165, 166, 167, 340, 347, 355, 361, 363, 1760, 1761, 1763], "substanti": [34, 42, 341, 345, 357, 1761], "innov": 34, "growth": [34, 1764], "usag": [34, 345, 361, 378, 1764], "relev": [34, 40, 41, 42, 343, 344, 345, 347, 356, 364, 1759, 1766, 1767], "area": [34, 60, 61, 354, 376, 1751, 1757], "necess": 34, "parti": [34, 378, 1760, 1761, 1767], "could": [34, 35, 40, 41, 42, 340, 345, 347, 353, 354, 355, 356, 357, 361, 363, 364, 365, 1761, 1766, 1767], "easili": [34, 41, 344, 355, 359, 364, 365, 366, 378, 1751, 1761, 1767, 1768], "engag": [34, 36, 42], "regard": [34, 39, 343, 355, 356, 359], "effect": [34, 40, 142, 143, 164, 165, 341, 343, 348, 351, 354, 378], "2015": [34, 1761], "sinc": [34, 41, 42, 109, 110, 340, 343, 354, 355, 357, 378, 1761, 1767], "alongsid": 34, "machin": [34, 41, 148, 149, 340, 352, 377, 1750, 1759, 1761, 1763, 1764, 1765, 1766, 1767], "given": [34, 35, 38, 40, 41, 42, 44, 140, 141, 150, 151, 152, 153, 156, 157, 170, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 365, 377, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1758, 1763, 1764, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "frame": [34, 377, 1761], "less": [34, 42, 60, 61, 148, 149, 156, 157, 164, 165, 343, 345, 347, 349, 351, 354, 355, 359, 360, 361, 1761, 1763], "matur": [34, 378, 1761], "state": [34, 41, 345, 348, 349, 351, 355, 357, 360, 361, 362, 364, 377, 1751, 1767, 1768], "than": [34, 37, 42, 60, 61, 109, 110, 140, 141, 142, 143, 148, 149, 152, 153, 156, 157, 158, 159, 160, 161, 164, 165, 340, 343, 344, 345, 347, 349, 354, 355, 356, 357, 358, 359, 361, 364, 365, 366, 378, 1758, 1759, 1760, 1761, 1767, 1768], "preced": [34, 365], "mention": [34, 40, 41, 42, 347, 351, 352, 354, 359, 1761], "aros": 34, "70": 34, "80": 34, "90": [34, 60, 61], "effort": [34, 36, 378, 1757, 1761, 1767], "stage": [34, 36, 38, 42, 339, 350, 357, 1751, 1761], "complet": [34, 40, 42, 340, 341, 343, 344, 347, 355, 356, 357, 363, 364, 1759], "natur": [34, 148, 149, 341, 347, 356, 377], "like": [34, 38, 40, 41, 42, 109, 110, 142, 143, 339, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 377, 378, 1751, 1761, 1766], "certainli": [34, 1767], "mission": [34, 1751, 1763], "creat": [34, 36, 37, 38, 40, 41, 42, 54, 55, 109, 110, 156, 157, 345, 346, 349, 353, 354, 355, 356, 357, 359, 361, 362, 365, 376, 377, 1750, 1751, 1761, 1762, 1767], "At": [34, 40, 41, 340, 355, 357, 358, 1761], "process": [34, 35, 36, 38, 41, 42, 343, 352, 355, 356, 357, 359, 361, 366, 1759, 1760, 1761, 1764, 1765, 1767, 1768], "ourselv": [34, 1767], "lead": [34, 35, 347, 378], "quansight": [34, 1767], "compani": [34, 1757], "made": [34, 37, 40, 42, 340, 344, 354, 358, 361, 363, 1761], "organ": [34, 341, 343, 352, 355, 358, 1750], "panda": 34, "scipi": [34, 1763, 1768], "conda": [34, 38, 41, 1763], "dask": 34, "apach": [34, 1763, 1767], "mxnet": [34, 1768], "onnx": [34, 1759, 1767], "scikit": 34, "jupyt": [34, 1763], "aw": 34, "cupi": [34, 1761, 1768], "net": [34, 35, 361, 366], "sympi": 34, "rai": 34, "modin": 34, "spyder": 34, "includ": [34, 40, 42, 54, 55, 109, 110, 140, 141, 158, 159, 164, 165, 166, 167, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 377, 378, 1758, 1759, 1761, 1763, 1766, 1767, 1768], "member": [34, 40, 42, 355], "googl": [34, 1751], "octoml": [34, 1767], "einop": [34, 140, 141], "further": [34, 35, 38, 42, 340, 341, 347, 349, 355, 357, 360, 361, 364, 365, 1751, 1766, 1767], "sponsor": 34, "lg": 34, "electron": 34, "microsoft": [34, 1761, 1766, 1768], "d": [34, 35, 36, 41, 146, 147, 148, 149, 339, 343, 357, 364, 1751, 1757], "e": [34, 35, 36, 37, 38, 40, 41, 42, 142, 143, 148, 149, 156, 157, 162, 163, 164, 165, 339, 340, 343, 349, 357, 361, 364, 378, 1750, 1757], "shaw": 34, "co": [34, 39, 60, 61, 140, 141, 345, 361, 377, 1751], "intel": [34, 1759, 1766], "togeth": [34, 341, 343, 350, 355, 358, 359, 365, 366, 378, 1759, 1761, 1762, 1767], "major": [34, 345, 346, 357, 378, 1758, 1761], "involv": [34, 36, 38, 56, 57, 339, 345, 347, 359, 366, 1761, 1767], "anoth": [34, 40, 41, 42, 343, 345, 352, 353, 355, 356, 357, 359, 361, 363, 366, 1750, 1761, 1767], "promis": 34, "sign": [34, 41, 60, 61, 148, 149, 361, 366], "pursuit": 34, "unif": [34, 36, 363, 1757, 1767], "clearli": [34, 40, 42, 347, 356, 357, 1765], "lot": [34, 35, 345, 353, 357, 378, 1760], "thought": [34, 41, 42, 351, 1759], "care": [34, 42, 357, 359, 366], "attent": [34, 42, 341], "gone": [34, 360], "simplifi": [34, 349, 355, 361, 362, 365, 1757, 1759, 1760, 1761, 1764, 1767, 1768], "compat": [34, 60, 61, 148, 149, 152, 153, 158, 159, 164, 165, 166, 167, 342, 351, 355, 356, 358, 361, 378, 1751], "excit": [34, 36, 339, 1751], "complianc": 34, "hope": [34, 378, 1767], "due": [34, 37, 41, 340, 354, 355, 1761], "suit": [34, 41, 339, 340, 344, 357, 364, 377, 1750, 1761, 1767], "some": [34, 35, 40, 41, 42, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 377, 378, 1750, 1751, 1757, 1758, 1760, 1761, 1762, 1767, 1768], "motiv": [34, 363], "great": [34, 35, 42, 357, 361, 363, 1767], "convinc": 34, "celebr": 34, "encourag": [34, 377, 378], "foundat": [34, 1764], "point": [35, 40, 41, 42, 56, 57, 60, 61, 109, 110, 148, 149, 156, 157, 164, 165, 340, 341, 344, 347, 348, 351, 354, 355, 357, 358, 359, 361, 363, 364, 377, 1767], "mai": [35, 39, 40, 41, 42, 60, 61, 109, 110, 162, 163, 340, 343, 345, 354, 355, 357, 362, 363, 365, 1768], "ask": [35, 40, 41, 347, 361, 363, 378], "perfectli": 35, "happi": [35, 41, 378], "current": [35, 38, 40, 41, 42, 140, 141, 340, 342, 343, 345, 346, 349, 352, 353, 355, 356, 359, 361, 366, 377, 378, 1751, 1761, 1767, 1768], "us": [35, 36, 37, 39, 40, 42, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 152, 153, 154, 155, 156, 157, 168, 169, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 377, 378, 1750, 1751, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768], "abund": 35, "better": [35, 37, 339, 355, 356, 358, 359, 360, 363, 364, 365, 1764], "ll": [35, 36, 41, 42, 347, 354, 364], "give": [35, 37, 41, 42, 339, 342, 347, 348, 351, 1761, 1765], "two": [35, 40, 41, 54, 55, 148, 149, 340, 341, 345, 347, 348, 355, 357, 359, 360, 364, 366, 1751, 1758, 1766], "exampl": [35, 40, 41, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 339, 340, 341, 342, 343, 345, 346, 348, 349, 350, 352, 353, 354, 355, 357, 358, 361, 363, 364, 365, 366, 377, 378, 1751, 1758, 1759, 1762, 1764, 1767, 1768], "streamlin": [35, 1764], "workflow": [35, 40, 42, 342, 344, 345, 355, 364, 376, 1750, 1751, 1760, 1767, 1768], "save": [35, 37, 350, 357, 378, 1760], "week": [35, 42, 1751], "let": [35, 37, 140, 141, 164, 165, 343, 345, 346, 347, 348, 349, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 1751, 1768], "sai": [35, 41, 353, 363], "deepmind": 35, "releas": [35, 40, 41, 42, 345, 355, 358, 359, 378, 1751, 1761, 1767], "awesom": 35, "paper": 35, "love": 35, "choic": [35, 41, 164, 165, 354, 355, 364, 1761], "perceiverio": 35, "happen": [35, 41, 42, 357, 364], "slew": 35, "rush": 35, "f": [35, 36, 38, 42, 339, 343, 350, 361, 364, 1757], "g": [35, 36, 40, 41, 156, 157, 339, 340, 343, 357, 361, 378, 1750, 1757], "inevit": [35, 1762], "deviat": [35, 154, 155, 156, 157, 340], "origin": [35, 40, 42, 148, 149, 152, 153, 164, 165, 342, 345, 353, 354, 355, 356, 361, 1761, 1762], "often": [35, 39, 340, 349, 350, 351, 352, 355, 357, 378, 1762, 1765, 1768], "erron": 35, "train": [35, 142, 143, 343, 346, 352, 364, 365, 366, 376, 377, 378, 1750, 1751, 1759, 1760, 1765, 1767, 1768], "poor": 35, "converg": 35, "perform": [35, 142, 143, 164, 165, 166, 167, 341, 342, 343, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 364, 378, 1758, 1761, 1762, 1763, 1764, 1765, 1766, 1768], "issu": [35, 36, 39, 40, 340, 342, 345, 347, 349, 355, 357, 361, 365, 378], "etc": [35, 40, 41, 42, 54, 55, 156, 157, 168, 169, 340, 341, 343, 344, 345, 347, 349, 351, 355, 356, 357, 358, 361, 363, 364, 378, 1750, 1759, 1761, 1767], "publish": [35, 378], "manag": [35, 36, 354, 378, 1763, 1765], "get": [35, 36, 39, 40, 41, 60, 61, 339, 344, 345, 346, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 1750, 1761, 1767], "work": [35, 39, 40, 41, 42, 339, 340, 343, 345, 346, 347, 349, 355, 356, 357, 358, 360, 361, 363, 365, 366, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768], "repositori": [35, 37, 38, 41, 42, 339, 340, 344, 350], "pull": [35, 36, 37, 38, 40, 41, 340, 347, 358, 359, 378], "request": [35, 36, 40, 347, 358, 359], "confus": [35, 345, 349, 354, 359, 1750], "do": [35, 40, 41, 42, 140, 141, 142, 143, 340, 341, 342, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 358, 359, 361, 363, 364, 365, 366, 378, 1750, 1762, 1767, 1768], "don": [35, 40, 41, 42, 168, 169, 345, 357, 365, 378], "expect": [35, 42, 345, 349, 357, 378, 1751], "codebas": [35, 36, 339, 345, 354, 357, 358, 360, 1751], "total": [35, 36, 42, 164, 165, 345, 346, 347, 357, 359, 364, 365, 378], "hour": [35, 344], "spent": 35, "spin": 35, "off": [35, 41, 360, 1767], "test": [35, 39, 40, 60, 61, 166, 167, 339, 345, 347, 349, 350, 353, 355, 358, 378, 1761], "discuss": [35, 41, 42, 345, 346, 354, 355, 357, 359, 362, 363, 364, 378, 1751, 1757, 1762], "error": [35, 39, 41, 42, 60, 61, 341, 342, 344, 345, 346, 347, 349, 350, 351, 355, 357, 358, 363, 378, 1761], "iter": [35, 49, 50, 51, 52, 53, 140, 141, 168, 169, 343, 361, 364], "address": [35, 40, 42, 340, 341, 361, 1757, 1759, 1761, 1767], "sake": 35, "singl": [35, 40, 41, 42, 109, 110, 156, 157, 340, 343, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 364, 365, 366, 378], "multipl": [35, 42, 109, 110, 154, 155, 164, 165, 166, 167, 342, 343, 347, 349, 352, 354, 359, 361, 378, 1759, 1760, 1761, 1768], "line": [35, 41, 340, 341, 347, 350, 353, 357, 359, 362, 363, 364, 365, 376, 1751, 1764], "convert": [35, 40, 49, 50, 51, 52, 53, 54, 55, 60, 61, 341, 353, 357, 361, 378, 1750, 1759, 1760, 1767], "directli": [35, 42, 340, 341, 343, 344, 345, 346, 348, 352, 353, 354, 355, 356, 358, 359, 361, 363, 365, 366, 377, 378, 1765, 1766, 1767], "graph": [35, 142, 143, 343, 352, 355, 359, 362, 378, 1750, 1757, 1761, 1764], "guarante": [35, 341, 378], "turn": [35, 41, 343, 347, 355, 357], "4": [35, 38, 40, 41, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 156, 157, 160, 161, 164, 165, 342, 343, 347, 357, 361, 363, 364, 365, 366, 1751, 1761, 1767, 1768], "step": [35, 37, 38, 40, 41, 42, 142, 143, 341, 342, 343, 345, 346, 347, 355, 357, 361, 364, 365, 366, 377, 1751, 1761], "take": [35, 36, 40, 41, 42, 164, 165, 343, 344, 345, 346, 347, 348, 354, 355, 356, 357, 359, 361, 363, 365, 366, 378, 1751, 1758, 1759, 1767], "few": [35, 39, 40, 42, 343, 345, 346, 351, 352, 354, 357, 359, 361, 362, 363, 364, 365, 376, 1751, 1761, 1763], "second": [35, 41, 60, 61, 109, 110, 142, 143, 148, 149, 156, 157, 160, 161, 340, 345, 347, 354, 355, 357, 363, 1766], "automat": [35, 40, 41, 42, 339, 343, 344, 345, 350, 352, 359, 360, 362, 365, 366, 1750, 1751, 1761, 1764, 1768], "convers": [35, 40, 50, 51, 52, 53, 60, 61, 102, 353, 360, 362, 366, 377, 378, 1750, 1751, 1760, 1767], "everyon": [35, 36, 42, 378], "regardless": [35, 36, 345, 363, 366], "wouldn": 35, "nice": [35, 357, 1761], "write": [35, 38, 39, 40, 42, 45, 46, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 339, 340, 342, 345, 347, 348, 352, 354, 355, 356, 358, 361, 363, 366, 1761, 1768], "onc": [35, 40, 41, 42, 156, 157, 340, 343, 345, 346, 347, 355, 357, 359, 361, 364, 378], "know": [35, 42, 356, 357, 358, 1762], "among": [35, 357, 359, 1761], "frantic": 35, "port": 35, "last": [35, 42, 54, 55, 148, 149, 150, 151, 152, 153, 162, 163, 164, 165, 166, 167, 340, 342, 345, 347, 350, 354, 356, 357, 359, 361, 378, 1761], "lucid": 35, "honk": 35, "improv": [35, 42, 345, 351, 352, 359, 361, 1750, 1759, 1761, 1763, 1764], "understand": [35, 37, 38, 39, 40, 41, 42, 339, 340, 347, 348, 351, 356, 359, 360, 1757, 1767], "pattern": [35, 140, 141, 345, 348], "hasn": 35, "chang": [35, 37, 38, 40, 41, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 340, 342, 343, 344, 345, 347, 348, 355, 357, 358, 359, 361, 365, 378, 1751, 1764, 1767], "now": [35, 38, 41, 340, 342, 343, 345, 350, 351, 353, 355, 357, 358, 359, 363, 364, 366, 377, 378, 1761], "spend": [35, 1761], "torchvis": 35, "probabl": [35, 156, 157, 357], "sonnet": 35, "about": [35, 39, 40, 41, 42, 340, 344, 345, 351, 357, 358, 359, 360, 361, 363, 364, 365, 366, 378, 1762, 1763, 1766], "next": [35, 37, 40, 41, 42, 342, 347, 348, 353, 355, 358, 362, 363, 364, 1751, 1761, 1763], "everyth": [35, 40, 42, 347, 355, 356, 357, 358, 362, 378], "zero": [35, 54, 55, 56, 57, 60, 61, 142, 143, 148, 149, 158, 159, 164, 165, 166, 167, 341, 343, 345, 346, 347, 351, 353, 361, 364, 365, 1751, 1760], "need": [35, 37, 38, 40, 41, 42, 140, 141, 152, 153, 340, 341, 343, 345, 347, 348, 349, 352, 354, 355, 356, 358, 359, 361, 363, 364, 377, 378, 1757, 1761, 1762, 1763, 1767], "said": 35, "high": [35, 40, 156, 157, 355, 359, 364, 1750, 1757, 1758, 1759, 1760, 1761, 1765, 1767, 1768], "level": [35, 36, 40, 42, 343, 352, 355, 359, 360, 361, 364, 365, 366, 378, 1750, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768], "modul": [35, 38, 41, 168, 169, 341, 342, 350, 352, 354, 355, 357, 361, 362, 364, 366, 377, 378, 1751, 1761, 1762, 1764], "optim": [35, 142, 143, 354, 362, 364, 366, 377, 1751, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1768], "trainer": [35, 376, 378, 1751, 1768], "statu": [35, 40, 344], "quo": 35, "kera": [35, 1767], "dopamin": 35, "ignit": 35, "catalyst": 35, "lightn": 35, "fastai": 35, "haiku": [35, 366, 1761], "flax": [35, 366, 378, 1761], "trax": [35, 366], "objax": [35, 366], "idea": [35, 37, 355, 358, 362, 377, 1760], "fulli": [35, 341, 345, 351, 354, 359, 361, 362, 363, 364, 365, 366, 378, 1759, 1760, 1761, 1767, 1768], "offer": [35, 41, 355, 365, 1761, 1767, 1768], "strongli": [36, 41, 1767, 1768], "welcom": [36, 41, 42], "absolut": [36, 41, 60, 61, 109, 110, 148, 149, 359], "skill": [36, 1763], "whether": [36, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 152, 153, 156, 157, 164, 165, 343, 345, 347, 351, 354, 355, 357, 358, 359], "veteran": 36, "beginn": [36, 1761], "aspect": [36, 355, 364, 1751, 1761], "guid": [36, 40, 41, 42, 350, 1751, 1767], "through": [36, 39, 40, 42, 339, 342, 343, 347, 352, 353, 354, 355, 356, 357, 359, 360, 361, 364, 365, 366, 377, 1759, 1761, 1762, 1763], "journei": [36, 1751], "inclusvi": 36, "big": [36, 378, 1761], "team": [36, 40, 41, 42, 355, 1763], "board": 36, "contributor": [36, 41, 42, 355, 360, 1751, 1761], "split": [36, 42, 152, 153, 360, 361, 378, 1751, 1768], "section": [36, 37, 39, 40, 42, 339, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 1757, 1764, 1767], "below": [36, 38, 40, 41, 54, 55, 339, 343, 344, 345, 346, 347, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 377, 1751, 1757, 1759, 1764, 1766], "best": [36, 39, 40, 41, 42, 339, 345, 350, 357, 358, 1764, 1765], "go": [36, 37, 40, 41, 42, 339, 342, 345, 347, 355, 356, 358, 360, 364, 378, 1757, 1761, 1762, 1766, 1768], "start": [36, 37, 38, 40, 41, 42, 339, 344, 345, 347, 348, 351, 355, 357, 359, 360, 361, 363, 364, 365, 377, 378, 1761, 1767], "finish": [36, 40, 41, 339, 1751], "dive": [36, 39, 40, 42, 343, 345, 356, 360, 363, 364, 378, 1751, 1767], "right": [36, 41, 42, 148, 149, 339, 347, 359, 364], "environ": [36, 37, 38, 42, 377, 1761, 1763], "basic": [36, 38, 40, 347], "fork": [36, 41, 340], "doc": [36, 39, 40, 347, 348, 351, 356, 357, 361, 364, 365, 1751], "document": [36, 39, 42, 345, 347, 355, 356, 357, 364, 366], "local": [36, 37, 38, 41, 340, 352], "task": [36, 42, 355, 356, 377, 1751, 1761, 1767, 1768], "help": [36, 37, 40, 41, 341, 342, 343, 345, 347, 353, 357, 358, 359, 363, 364, 365, 376, 1750, 1751, 1757, 1761, 1763, 1767], "appli": [36, 40, 41, 42, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 363, 364, 365, 366, 376, 378, 1750, 1751, 1762], "resourc": [36, 40], "video": [36, 41, 42, 340, 341, 342, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 357, 358, 359, 1759], "contribut": [37, 39, 40, 41, 42, 361, 1765], "toward": [37, 41, 152, 153, 358, 361, 1757, 1761], "requir": [37, 38, 40, 41, 109, 110, 341, 344, 345, 346, 347, 348, 349, 351, 353, 355, 356, 357, 358, 359, 361, 363, 378, 1761, 1767], "slightli": [37, 343, 355, 361, 365], "more": [37, 39, 40, 42, 152, 153, 160, 161, 339, 340, 341, 342, 343, 344, 345, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 377, 378, 1751, 1759, 1760, 1761, 1762, 1763, 1764, 1767, 1768], "complex": [37, 40, 345, 347, 355, 359, 364, 365, 366, 378, 1750, 1757, 1759, 1761, 1763, 1767, 1768], "setup": [37, 41, 42], "alon": [37, 357], "instanc": [37, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 340, 341, 345, 347, 348, 351, 352, 353, 354, 357, 364, 365, 366, 1750, 1762], "mech": 37, "vision": [37, 376, 1751, 1757, 1767], "demo": [37, 377, 1751], "util": [37, 167, 346, 349, 358, 1759, 1767, 1768], "thu": [37, 40, 349, 355], "relat": [37, 39, 41, 42, 350, 355, 357, 358, 359, 377, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768], "folder": [37, 38, 41, 42, 340, 352, 355, 357, 358], "To": [37, 38, 41, 340, 343, 345, 347, 349, 350, 352, 355, 356, 357, 358, 364, 365, 366, 1751], "grasp": [37, 355], "directori": [37, 38, 40, 41, 42, 344, 355, 357], "tree": [37, 38, 345], "place": [37, 39, 42, 49, 51, 53, 54, 55, 60, 61, 109, 110, 140, 141, 152, 153, 339, 340, 343, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 366, 1750, 1763], "dir": [37, 364], "clone": [37, 38, 42], "mutual": [37, 343, 352], "git": [37, 39, 41, 42, 340, 357], "http": [37, 41, 60, 61, 340, 345, 348], "com": [37, 41, 340, 345], "unifyai": [37, 38, 41, 42], "type": [37, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 339, 340, 341, 343, 344, 346, 347, 348, 350, 351, 353, 354, 356, 357, 358, 359, 361, 363, 364, 1751, 1761, 1762, 1765], "venv": 37, "python3": [37, 38, 41, 42], "m": [37, 38, 41, 42, 54, 55, 148, 149, 156, 157, 339, 361], "ivy_dev": [37, 38, 41, 42], "activ": [37, 38, 41, 42, 46, 64, 140, 141, 168, 169, 358, 365, 1751, 1761, 1764], "window": [37, 38, 42, 146, 147, 1766], "script": [37, 38, 41, 42, 347, 361, 378, 1761], "bat": [37, 38, 41, 42], "mac": [37, 38, 41, 42], "linux": [37, 38, 41, 42, 1764, 1766], "bin": [37, 38, 41, 42, 340, 343], "instal": [37, 38, 41, 42, 342, 350, 377, 1751], "packag": [37, 38, 41, 350, 355, 378, 1761, 1763], "edit": [37, 40, 41, 42], "mode": [37, 41, 42, 148, 149, 343, 347, 359, 378, 1761, 1764], "cd": [37, 38, 41, 42], "pip": [37, 41, 377, 1751], "repeat": [37, 42, 140, 141, 152, 153, 341, 342, 347, 348, 350, 357], "note": [37, 40, 41, 42, 60, 61, 345, 347, 348, 355, 356, 357, 358], "link": [37, 40, 41, 344, 345, 355, 1757, 1759], "reflect": [37, 42, 341, 357], "immedi": [37, 359, 1751], "ivy_robot": [37, 377], "docker": [37, 39], "desktop": [37, 41], "imag": [37, 38, 41, 116, 145, 146, 147, 358, 361, 362, 364, 366, 377, 1751, 1761], "my": [37, 358], "mount": [37, 42], "run": [37, 38, 40, 41, 142, 143, 339, 342, 344, 347, 350, 351, 355, 356, 361, 362, 363, 364, 365, 366, 377, 378, 1759, 1761, 1762, 1763, 1764, 1766, 1767, 1768], "rm": [37, 42], "v": [37, 41, 42, 146, 147, 162, 163, 356, 361, 364, 365, 366, 1751], "pwd": 37, "volum": 37, "rebuild": 37, "after": [37, 38, 40, 41, 42, 142, 143, 154, 155, 340, 345, 347, 349, 351, 355, 357, 360, 1761], "everi": [37, 38, 40, 42, 54, 55, 140, 141, 340, 342, 343, 344, 345, 347, 351, 352, 353, 354, 355, 356, 357, 358, 361, 363, 365, 1761], "id": [37, 39, 41, 341, 343, 350], "pycharm": 37, "configur": [37, 38, 41, 42, 344, 345, 353], "part": [37, 42, 54, 55, 142, 143, 340, 352, 355, 357, 358, 359, 361, 362, 366, 377, 378, 1759, 1761, 1766, 1767, 1768], "vscode": [37, 41], "found": [37, 40, 41, 42, 341, 342, 343, 345, 348, 350, 353, 354, 355, 359, 1763], "devcontain": 37, "extens": [37, 39, 41, 42, 60, 61, 348, 357, 1034, 1758, 1761, 1768], "remot": [37, 41, 340], "codespac": 37, "config": [37, 340, 364, 1762], "json": [37, 364], "good": [37, 38, 39, 40, 41, 42, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 361, 362, 365], "feel": [37, 38, 40, 41, 42, 44, 170, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "free": [37, 38, 39, 40, 42, 44, 170, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 377, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "channel": [37, 38, 40, 41, 42, 44, 140, 141, 170, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "pre": [37, 40, 357, 366, 378, 1761], "commit": [37, 40, 340, 344, 347, 357], "_": [37, 38, 41, 60, 61, 348, 350, 354, 357, 364], "builder": [38, 376, 378, 1750, 1751], "dockerfil": [38, 41], "command": [38, 41, 340, 353, 1751], "maco": [38, 1766], "latest": [38, 40, 41, 42, 60, 61, 342, 344, 345, 348, 358, 378, 1766], "ubuntu": [38, 344], "arg": [38, 49, 50, 51, 349, 355, 361, 365], "name": [38, 40, 41, 42, 160, 161, 342, 343, 347, 348, 350, 351, 355, 356, 357, 358, 359, 361, 364, 366, 1761], "uid": 38, "bash": [38, 42, 340], "root": [38, 41, 42, 60, 61, 355, 364], "both": [38, 42, 60, 61, 109, 110, 148, 149, 342, 343, 345, 346, 347, 348, 351, 352, 354, 355, 357, 359, 361, 363, 364, 365, 366, 377, 378, 1761, 1764, 1766, 1767, 1768], "either": [38, 40, 41, 42, 60, 61, 140, 141, 342, 343, 345, 346, 347, 348, 352, 354, 355, 356, 357, 359, 361, 364, 378, 1761], "termin": [38, 41, 42, 343, 361, 364], "3": [38, 41, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 156, 157, 160, 161, 164, 165, 340, 342, 343, 345, 347, 357, 361, 363, 364, 365, 366, 1751, 1768], "8": [38, 41, 60, 61, 109, 110, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 160, 161, 162, 163, 164, 165, 343, 347, 357, 360, 364, 1751], "built": [38, 41, 42, 343, 357, 362, 1750, 1760, 1761, 1765], "doesn": [38, 41, 342, 343, 344, 345, 347, 357, 359, 361, 378, 1759], "explicit": [38, 41, 343, 345, 354, 355, 361, 378, 1761], "cmd": [38, 41], "file": [38, 40, 41, 42, 340, 341, 342, 343, 344, 348, 350, 352, 355, 356, 357, 358, 361, 364, 1757, 1760, 1761, 1762], "abov": [38, 41, 42, 54, 55, 60, 61, 156, 157, 341, 342, 343, 344, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 363, 364, 365, 366, 1761, 1766], "OR": [38, 41, 42, 166, 167], "move": [38, 42, 358], "execut": [38, 41, 42, 343, 347, 354, 357, 359, 361, 363, 366, 378, 1750, 1757, 1761, 1762, 1763, 1764, 1765, 1767], "insid": [38, 41, 42, 343, 345, 353, 357, 358, 1767], "make_docs_without_dock": 38, "path": [38, 41, 354, 355, 356, 1761], "rel": [38, 42, 109, 110, 142, 143, 148, 149, 152, 153, 162, 163, 356, 359, 1751, 1761, 1763], "assum": [38, 60, 61, 109, 110, 342, 345, 348, 356, 359, 363, 364, 378], "gener": [38, 40, 41, 42, 60, 61, 112, 141, 142, 143, 156, 157, 168, 169, 339, 340, 341, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 363, 365, 366, 377, 378, 1750, 1751, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767], "prefer": [38, 41, 343, 353, 355, 359, 1761], "browser": [38, 41], "affect": [38, 355], "page": [38, 41, 42, 344, 362, 363, 366, 376, 1751], "It": [38, 40, 41, 42, 45, 46, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 166, 167, 339, 340, 341, 342, 343, 344, 345, 347, 348, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 1759, 1761, 1762, 1764, 1765, 1766, 1767, 1768], "synchron": [38, 344], "respons": [38, 42, 345], "rest": [38, 41, 344, 366, 1763], "remove_doc": 38, "indic": [38, 54, 55, 140, 141, 146, 147, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 344, 350, 351, 366, 1751], "privat": [38, 357], "access": [38, 40, 41, 42, 345, 355, 1761, 1763, 1765], "fulfil": [38, 360, 1751], "purpos": [38, 42, 341, 343, 344, 347, 349, 351, 352, 353, 355, 357, 359, 360, 363, 1750, 1751, 1760, 1762, 1765, 1766, 1767], "delet": [38, 42], "previous": [38, 41, 352, 357, 361], "autogenerated_sourc": 38, "2": [38, 41, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 340, 342, 343, 345, 347, 349, 351, 354, 355, 356, 357, 360, 361, 363, 364, 365, 366, 378, 1751, 1767, 1768], "Then": [38, 40, 42, 353, 358, 378], "format": [38, 339, 345, 346, 347, 348, 349, 361, 363, 364, 1751, 1757, 1759, 1761, 1762], "x": [38, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 342, 343, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 1751], "png": [38, 364], "_imag": 38, "lastli": 38, "docstr": [38, 39, 40, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 339, 350, 351, 352, 355, 358], "structur": [38, 42, 341, 343, 352, 356, 358, 364, 365, 1760, 1761], "rst": [38, 456], "main": [38, 41, 54, 55, 148, 149, 343, 350, 353, 357, 1759, 1761, 1762, 1767], "submodul": [38, 40, 41, 42, 44, 170, 340, 344, 346, 352, 353, 357, 360, 361, 365, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1750, 1751, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "skip": [38, 344, 353, 357], "read": [38, 40, 1751, 1761], "partial_sourc": 38, "conf": 38, "copi": [38, 42, 54, 55, 56, 57, 109, 110, 140, 141, 152, 153, 342, 345, 348, 355, 356, 361, 364, 377, 378], "5": [38, 41, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 340, 342, 343, 347, 351, 356, 357, 363, 364, 365], "create_rst_fil": 38, "list": [38, 39, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 109, 110, 140, 141, 146, 147, 152, 153, 154, 155, 168, 169, 340, 343, 345, 346, 347, 350, 351, 355, 356, 357, 358, 361, 364, 365, 366, 378, 1751, 1761, 1762, 1767], "filter": [38, 146, 147, 357], "recurs": [38, 41, 49, 50, 51, 52, 53, 340, 343, 352, 365, 378], "repres": [38, 60, 61, 148, 149, 359, 363, 1758, 1759, 1762], "its": [38, 40, 41, 42, 49, 52, 53, 56, 57, 152, 153, 345, 348, 353, 355, 356, 357, 358, 359, 366, 378, 1750, 1760, 1761, 1767], "overal": [38, 343, 345, 346, 348, 366, 1757, 1759, 1760, 1761], "markup": 38, "6": [38, 54, 55, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 156, 157, 162, 163, 164, 165, 342, 343, 347, 357, 359, 361, 363, 364, 365], "extract": [38, 355, 358, 1757, 1761, 1762, 1767], "class": [38, 40, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 341, 343, 345, 346, 347, 348, 351, 356, 357, 359, 361, 362, 364, 365, 366, 376, 377, 378, 1750, 1751, 1759, 1761, 1762, 1768], "get_functions_and_class": 38, "doctr": 38, "7": [38, 42, 45, 46, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 160, 161, 162, 163, 164, 165, 343, 347, 352, 354, 357], "readm": [38, 378], "module_nam": 38, "copy_readme_to_rst": 38, "tabl": [38, 345, 355, 1761], "content": [38, 40, 354, 361, 364], "toc": 38, "accord": [38, 40, 41, 56, 57, 140, 141, 164, 165, 340, 345, 352, 355, 357], "append": [38, 349, 357, 361, 364], "append_toctree_to_rst": 38, "9": [38, 60, 61, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 156, 157, 162, 163, 164, 165, 343, 347, 357, 364, 365, 1757], "index": [38, 54, 55, 140, 141, 158, 159, 160, 161, 162, 163, 343, 352, 356, 357, 363, 1761], "create_index_rst": 38, "14": [38, 56, 57, 60, 61, 156, 157, 164, 165, 343, 347, 357], "\u03c0": 38, "updat": [38, 40, 41, 42, 49, 51, 53, 140, 141, 142, 143, 339, 340, 341, 343, 344, 345, 347, 351, 353, 356, 359, 361, 363, 364, 366, 378], "namespac": [38, 40, 345, 353, 355, 356, 358, 361, 366], "remov": [38, 40, 148, 149, 342, 345, 348, 352, 357, 359, 366, 1761], "here": [39, 40, 41, 42, 340, 343, 344, 347, 351, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 377, 378, 1761, 1762], "resours": 39, "climb": 39, "steep": 39, "curv": 39, "respect": [39, 40, 42, 60, 61, 142, 143, 341, 343, 345, 347, 351, 355, 357, 358, 1757, 1767], "behaviour": [39, 40, 42, 339, 340, 341, 343, 345, 348, 349, 351, 354, 355, 357, 358, 363], "frontend": [39, 339, 345, 357, 358, 360, 362, 1750, 1761], "refer": [39, 40, 41, 42, 164, 165, 166, 167, 340, 345, 351, 352, 355, 356, 357, 378, 1750, 1761], "realpython": 39, "pyn": 39, "kind": [39, 355, 357, 359, 361, 378], "stack": [39, 148, 149, 152, 153, 361, 1751, 1757, 1759, 1766, 1767], "overflow": [39, 345], "platform": [39, 41, 1759, 1763, 1765], "sort": [39, 163, 358], "inform": [39, 40, 41, 42, 142, 143, 340, 343, 349, 356, 357, 1764], "pilot": 39, "bit": [39, 40, 41, 343, 345, 347, 352, 361, 363, 1767], "thei": [39, 40, 42, 109, 110, 148, 149, 156, 157, 339, 340, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 357, 358, 359, 361, 363, 364, 365, 366, 378, 1751, 1758, 1761, 1763, 1764, 1767, 1768], "done": [39, 40, 41, 42, 340, 347, 350, 355, 357, 364, 1761], "faster": [39, 1750, 1763, 1766], "head": [39, 41, 1751], "stuck": [39, 40], "spell": 39, "check": [39, 40, 41, 42, 49, 50, 51, 52, 53, 56, 57, 140, 141, 142, 143, 340, 343, 347, 349, 353, 355, 358, 360, 361, 363, 364, 365, 1751], "though": [39, 40, 42, 345, 348, 352, 355, 359, 364, 378], "sound": [39, 360], "odd": [39, 340], "peopl": [39, 41, 42, 339, 1761, 1763], "action": [39, 347, 357], "integr": [39, 41, 56, 57, 109, 110, 339, 1759, 1761, 1763, 1764, 1765], "keep": [39, 40, 41, 42, 152, 153, 340, 343, 344, 357, 358, 359, 364, 366], "explain": [40, 41, 42, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 359, 361, 362, 363, 364, 365, 366, 1751, 1757, 1764, 1767], "frequent": [40, 42, 1761], "wherebi": [40, 1758], "outlin": [40, 41, 42, 339, 343, 345, 348, 352, 354, 355, 357], "broad": [40, 1763], "individu": [40, 42, 340, 344, 352, 354, 355, 1761, 1764, 1767, 1768], "sub": [40, 42, 152, 153, 339, 343, 349, 355, 356, 357, 363, 364, 365, 1751, 1757], "distribut": [40, 150, 151, 156, 157, 346, 378, 1761, 1764], "across": [40, 158, 159, 340, 343, 345, 347, 349, 351, 352, 355, 357, 359, 1759, 1761, 1766], "todo": [40, 345, 355], "detail": [40, 42, 340, 342, 343, 344, 351, 352, 353, 355, 356, 357, 358, 361, 363, 364, 365, 1763, 1767], "befor": [40, 41, 42, 152, 153, 340, 341, 345, 346, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 361, 364, 378, 1761], "select": [40, 41, 42, 164, 165, 354, 357, 361, 363, 366, 378, 1761, 1764, 1765], "alloc": [40, 42, 54, 55, 56, 57, 378], "describ": [40, 42, 344, 357, 361, 366, 1761], "explan": [40, 42, 343, 348, 351, 355, 363], "instead": [40, 41, 42, 60, 61, 340, 343, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 361, 363, 364, 378, 1759, 1761, 1767, 1768], "focu": [40, 1759, 1760, 1763, 1768], "been": [40, 42, 140, 141, 156, 157, 340, 342, 343, 344, 345, 346, 348, 350, 351, 352, 357, 361, 363, 377, 378, 1750, 1761, 1768], "alwai": [40, 42, 56, 57, 142, 143, 152, 153, 341, 342, 343, 345, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 378], "NOT": 40, "pypi": [40, 41, 378], "implement": [40, 56, 57, 162, 163, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 377, 378, 1750, 1751, 1758, 1759, 1760, 1761, 1764, 1767, 1768], "instruct": [40, 41, 340, 1759, 1762, 1765, 1767], "static": [40, 347, 348, 352, 353, 355, 378, 1760, 1761, 1762], "method": [40, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 340, 341, 345, 347, 348, 350, 351, 352, 353, 357, 358, 361, 362, 365, 366, 378, 1751, 1762, 1768], "arrai": [40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 339, 342, 343, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 378, 1750, 1751, 1759, 1760, 1761, 1763, 1767, 1768], "revers": [40, 140, 141, 148, 149, 164, 165, 343, 345, 347, 348, 355, 359, 366, 378], "familiar": [40, 41], "yourself": [40, 42, 355, 357, 359, 377], "hypothesi": [40, 42, 340, 353], "pass": [40, 42, 109, 110, 168, 169, 340, 341, 342, 343, 345, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 378, 1759], "fail": [40, 41, 42, 340, 344, 345, 347, 350, 355], "els": [40, 140, 141, 156, 157, 342, 345, 349, 352, 354, 355, 356, 357, 358, 359, 361, 363, 365, 366, 378, 1762], "cover": [40, 340, 347, 348, 352, 353, 357, 359, 360], "lambda": [40, 357, 361, 364], "direct": [40, 355, 356, 359, 365, 366, 377, 1757, 1761, 1762, 1765], "bind": [40, 343, 1760, 1761], "defin": [40, 41, 54, 55, 140, 141, 148, 149, 344, 345, 348, 351, 355, 356, 357, 358, 363, 365, 378, 1750, 1758, 1759, 1760, 1761, 1762, 1765, 1767, 1768], "def": [40, 41, 343, 345, 346, 347, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 456, 1751], "special": [40, 164, 165, 340, 341, 347, 348, 349, 351, 354, 358, 1761, 1762, 1763], "sure": [40, 41, 42, 340, 344, 355, 356, 359], "aforement": 40, "correct": [40, 42, 164, 165, 339, 343, 345, 346, 350, 351, 352, 356, 357, 1751], "categori": [40, 340, 341, 343, 345, 355, 358, 360, 1751], "parent": [40, 363], "arraywithelementwis": [40, 60, 341, 363], "containerwithmanipul": 40, "hint": [40, 60, 61, 341, 348, 351, 352, 354, 355, 358], "add": [40, 41, 42, 60, 61, 154, 155, 168, 169, 339, 340, 341, 342, 343, 345, 348, 351, 352, 354, 355, 357, 358, 359, 361, 363, 378, 1751, 1757, 1759, 1761], "thorough": [40, 348, 351, 357], "ensur": [40, 41, 42, 140, 141, 341, 345, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 1761], "produc": [40, 345, 357, 358, 1762, 1764], "comment": [40, 41, 42, 340, 345, 350, 355], "add_reformatting_checklist_": 40, "category_nam": [40, 345, 346, 348, 351, 352], "pr": [40, 42, 340, 355], "belong": [40, 340, 365], "shown": [40, 42, 168, 169, 344, 345, 347, 350, 351, 355, 356, 357, 358, 361, 363, 378], "trigger": [40, 344], "autom": [40, 357, 1750, 1751, 1763], "bot": 40, "proper": 40, "markdown": 40, "text": [40, 42, 347, 348], "might": [40, 41, 42, 140, 141, 345, 347, 350, 353, 354, 355, 357, 358, 359, 361, 363, 364, 1750], "moment": [40, 142, 143, 342, 378], "patient": [40, 41], "modifi": [40, 41, 42, 340, 342, 345, 346, 348, 350, 352, 358, 361], "item": [40, 49, 53, 140, 141, 168, 169, 343, 345, 361, 363, 364, 366, 1751], "symbol": [40, 41, 1761, 1762], "emoji": 40, "within": [40, 42, 49, 52, 53, 355, 356, 357, 365, 378, 1757, 1758, 1762], "legend": 40, "mark": [40, 42, 357], "review": [40, 42, 347, 355, 358], "checkbox": [40, 41], "proce": [40, 41], "elabor": 40, "struggl": 40, "assigne": 40, "author": [40, 42, 1751, 1759, 1763], "later": [40, 357, 1761], "status": 40, "manual": [40, 41, 42, 344, 355, 357, 365], "refrain": 40, "transpil": [40, 355, 360, 361, 362, 1750, 1751, 1761, 1767, 1768], "locat": [40, 42, 342, 346, 355, 356, 357, 358, 1759], "subsect": [40, 42, 340, 344], "verifi": [40, 345, 346, 355, 357, 358], "miss": [40, 41, 341, 343, 347, 350, 357], "simpler": [40, 42, 355, 1762, 1768], "titl": [40, 42, 355, 1751], "label": [40, 42, 150, 151, 344, 355, 360, 361, 362, 366, 1761], "suggest": [40, 41, 42, 345, 355, 357, 358], "simpli": [40, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 341, 342, 343, 345, 346, 347, 348, 351, 352, 354, 355, 356, 357, 359, 361, 365, 366, 378, 1750, 1762, 1767], "leav": [40, 49, 52, 53, 343, 345, 347, 348, 351, 352, 354, 357, 364, 365], "assess": [40, 359], "appropri": [40, 42, 158, 159, 168, 169, 353, 357], "wait": [40, 42, 355], "option": [40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 366, 378, 1761, 1767], "composit": [40, 339, 341, 342, 343, 345, 354, 356, 357, 359, 361, 365, 366, 378, 1750, 1762], "temporari": [40, 345], "merg": [40, 42, 340, 355, 1761], "close": [40, 41, 42, 348, 355, 357, 359, 1761], "normal": [40, 154, 155, 156, 157, 364, 1759], "altern": [40, 41, 109, 110, 354, 355, 364, 1764], "composition": [40, 354, 355], "choos": [40, 41, 42, 158, 159, 362, 366, 1768], "decid": [40, 41, 345, 359], "addit": [40, 41, 42, 140, 141, 154, 155, 343, 345, 347, 348, 355, 357, 358, 359, 363, 364, 366, 1761, 1762, 1763, 1767], "potenti": [40, 41, 42, 345, 355, 360, 1764], "pend": 40, "show": [40, 41, 42, 344, 347, 354, 355, 357, 377, 378, 1751, 1761], "helpfulli": [40, 359, 1759], "prevent": [40, 42, 142, 143, 345, 350, 354, 355, 358, 359], "problemat": [40, 41], "unimpl": 40, "final": [40, 42, 140, 141, 341, 345, 347, 348, 350, 352, 354, 355, 359, 360, 364, 1757, 1767], "issue_link": 40, "chosen": 40, "correctli": [40, 41, 42, 148, 149, 158, 159, 343, 345, 347, 349, 350, 351, 354, 356, 357, 359, 365, 378], "alias": [40, 355, 356], "detect": [40, 41, 342, 343, 350, 357, 364, 365], "alias_nam": 40, "function_nam": 40, "notic": [40, 359], "alia": 40, "alreadi": [40, 41, 42, 342, 343, 345, 351, 355, 359, 378, 1751, 1761, 1763, 1768], "push": [40, 42, 340, 350, 1767], "liner": 40, "default": [40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 342, 345, 346, 347, 348, 349, 351, 352, 353, 355, 357, 359, 361, 365, 1750, 1761], "meanwhil": 40, "reselect": 40, "too": [40, 41, 42, 340, 344, 345, 350, 378], "placement": 40, "categoris": [40, 340, 355], "faithfulli": 40, "descript": [40, 60, 61, 348], "inner": [40, 148, 149, 354], "fall": [40, 42, 345, 360, 1751], "under": [40, 41, 42, 339, 340, 343, 347, 348, 352, 355, 357, 359, 360, 361, 364, 366, 378, 1761, 1764, 1768], "linalg": [40, 149, 354, 1751], "match": [40, 56, 57, 343, 347, 1762, 1767], "creation_routin": [40, 356], "fft": [40, 1761], "indexing_routin": 40, "logic": [40, 166, 167, 341, 345, 346, 349, 353, 355, 357, 363, 1751], "ma": 40, "manipulation_routin": 40, "mathematical_funct": [40, 355], "matrix": [40, 140, 141, 146, 147, 148, 149, 345, 355, 1759, 1761], "ndarrai": [40, 54, 55, 140, 141, 341, 345, 346, 351, 354, 355, 356, 358, 359, 361, 363, 366, 1750], "random": [40, 157, 346, 357, 358, 366, 377, 1751, 1761], "sorting_searching_count": 40, "statist": [40, 165, 345, 355, 357, 358, 1761], "ufunc": 40, "hierarchi": [40, 364, 1757, 1767], "__init__": [40, 342, 345, 349, 355, 358, 361, 363, 364, 365, 366, 1751], "py": [40, 41, 42, 340, 342, 344, 345, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 363, 365, 366], "decomposit": [40, 1768], "matrix_and_vector_product": 40, "matrix_eigenvalu": 40, "norms_and_other_numb": 40, "solving_equations_and_inverting_matric": 40, "product": [40, 60, 61, 148, 149, 164, 165, 361, 1761, 1763], "seem": [40, 41, 359, 365, 366, 378, 1761], "np": [40, 341, 345, 346, 351, 354, 355, 356, 357, 358, 359, 361, 363, 364, 366, 1750, 1751], "func": [40, 347], "gleam": 40, "yet": [40, 41, 378], "uncom": 40, "test_numpy_inn": 40, "mirror": [40, 1761], "correspond": [40, 42, 56, 57, 60, 61, 109, 110, 140, 141, 152, 153, 164, 165, 341, 342, 343, 344, 345, 347, 348, 351, 352, 353, 355, 357, 359, 361, 1761], "ivy_test": [40, 41, 42, 340, 344, 356], "test_ivi": [40, 41, 42, 344, 356, 357], "test_frontend": [40, 356], "unsur": [40, 357], "put": [40, 357, 378, 1767], "explor": [40, 41, 42, 345, 359, 362, 366, 377, 1761, 1764], "outer": [40, 148, 149], "confirm": 40, "ve": [40, 41, 42, 156, 157, 359, 360, 363, 1750, 1751], "empti": [40, 41, 140, 141, 341, 345, 346], "along": [40, 45, 46, 109, 110, 140, 141, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 347, 354, 358, 359, 361, 1761], "backend_nam": [40, 342, 345, 346, 348, 351, 352, 353], "relevant_submodul": 40, "sometim": [40, 41, 42, 345, 355, 357, 358, 359], "behav": [40, 340, 349, 354, 356, 363, 1762], "helper": [40, 344, 345, 349, 364, 1750], "recreat": 40, "defer": [40, 341, 343, 345, 346, 352, 353, 354, 355, 357, 1767], "clearer": [40, 349, 364], "mind": [40, 341, 343, 357], "posit": [40, 42, 49, 50, 51, 60, 61, 109, 110, 140, 141, 148, 149, 152, 153, 340, 343, 353, 355, 356, 357, 358, 364, 377, 1763], "keyword": [40, 49, 50, 51, 343, 345, 346, 353, 354, 355, 356, 357, 358, 364], "paramet": [40, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 348, 349, 351, 353, 357, 358, 361, 363, 364, 377, 1762], "strategi": [40, 353, 356], "draw": [40, 156, 157, 356, 357], "realli": [41, 343, 378, 1766, 1767], "gh": 41, "your_fold": 41, "cours": [41, 42, 340, 347, 358, 359, 364, 378, 1766, 1767], "whatev": [41, 343, 378], "elig": 41, "student": 41, "licenc": 41, "remind": 41, "account": [41, 348, 355], "licens": [41, 1764], "expir": 41, "abl": [41, 42, 340, 345, 352, 354, 355, 359, 361, 366, 1764, 1767], "profession": 41, "trial": 41, "jetbrain": 41, "valid": [41, 146, 147, 166, 167, 342, 345, 347, 356, 357, 1762], "bui": [41, 1767], "paid": 41, "pace": 41, "align": [41, 42, 361, 363, 1750, 1767], "stabl": [41, 140, 141, 162, 163, 342, 345, 361, 378], "mayb": [41, 49, 52, 53, 361, 363], "person": [41, 42], "experi": [41, 357, 362, 364, 378], "avoid": [41, 42, 342, 343, 345, 350, 353, 355, 357, 358, 1761], "abil": [41, 359, 362, 378, 1761], "certain": [41, 42, 340, 345, 357, 359, 378, 1765], "perhap": [41, 363, 364, 365, 378, 1767], "track": [41, 42, 1761], "click": [41, 42, 344, 348, 362, 1751], "icon": [41, 42], "side": [41, 42, 162, 163], "left": [41, 42, 109, 110, 148, 149, 158, 159, 162, 163, 345, 347], "panel": 41, "drop": [41, 378], "down": [41, 357, 1750, 1761, 1767], "builtin": [41, 363, 365], "virtualenv": 41, "o": [41, 339, 361], "tick": [41, 42, 344], "test_array_api": [41, 42, 340, 357], "r": [41, 42, 339], "txt": [41, 340, 358], "visual": [41, 355, 378, 1761, 1763, 1766], "mitig": [41, 1767], "conflict": [41, 42, 355, 364], "particular": [41, 42, 340, 342, 345, 347, 353, 354, 355, 356, 357, 358, 359, 1757, 1761, 1767], "system": [41, 42, 342, 345, 378, 1759, 1761, 1764, 1766, 1768], "jaxlib": [41, 341, 345, 346, 351, 358, 361, 363], "wsl": 41, "powershel": 41, "admin": 41, "visit": [41, 42, 356], "deploy": [41, 1760, 1763, 1764, 1767, 1768], "top": [41, 42, 152, 153, 345, 355, 357, 364, 365, 1761, 1765], "press": [41, 42, 364, 1751], "ok": 41, "debug": [41, 42, 343, 344, 357, 359, 364, 1761], "dialog": 41, "invalid": [41, 166, 167, 345, 350], "caus": [41, 42, 340, 342, 343, 344, 345, 347, 354, 357, 378], "earlier": [41, 42], "necessari": [41, 42, 152, 153, 342, 343, 347, 353, 354, 355, 357, 359], "virtualis": 41, "sudo": 41, "apt": 41, "ca": 41, "certif": 41, "curl": 41, "gnupg": 41, "lsb": 41, "mkdir": 41, "p": [41, 42, 140, 141, 339], "keyr": 41, "fssl": 41, "download": [41, 357], "gpg": 41, "dearmor": 41, "echo": 41, "deb": 41, "arch": 41, "dpkg": 41, "print": [41, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 343, 347, 357, 361, 363, 364, 365, 1751], "architectur": [41, 366, 378, 1759, 1760, 1761, 1764, 1765, 1766], "lsb_releas": 41, "tee": 41, "dev": [41, 58, 59, 346, 352, 363, 365], "null": 41, "ce": 41, "cli": 41, "containerd": 41, "io": 41, "compos": [41, 343, 357, 378, 1761, 1768], "plugin": 41, "systemctl": 41, "permiss": 41, "post": [41, 154, 155, 366], "coupl": [41, 341, 363, 365, 1761], "unit": [41, 45, 46, 340, 345, 355, 356, 357, 378, 1762, 1765], "test_ab": [41, 357], "context": [41, 42, 146, 147, 347], "menu": 41, "editor": 41, "green": [41, 42], "appear": [41, 42, 359], "pytest": [41, 42, 340, 357], "keyboard": 41, "shortcut": 41, "displai": [41, 343, 357, 364], "screenshot": 41, "henc": [41, 343, 357], "ctrl": [41, 42], "shift": [41, 42, 152, 153, 347, 351], "bottom": [41, 1767], "screen": [41, 364], "elsewher": 41, "test_elementwis": 41, "tab": [41, 344, 364, 1751], "progress": [41, 42, 366], "bar": 41, "shell": [41, 42], "run_tests_cli": [41, 340], "run_ivy_core_test": 41, "run_ivy_nn_test": 41, "run_ivy_stateful_test": 41, "run_test": 41, "sh": [41, 42, 340], "test_depend": 41, "test_ivy_cor": 41, "test_ivy_nn": 41, "test_ivy_st": 41, "test_": [41, 340, 344, 356], "test_funct": [41, 42, 344, 356, 357], "test_cor": [41, 42, 344, 356], "wish": [41, 355], "ivy_cor": 41, "ivy_nn": 41, "ivy_st": 41, "torch": [41, 42, 340, 341, 342, 344, 345, 346, 349, 351, 352, 354, 355, 356, 357, 358, 359, 361, 363, 364, 366, 378, 1750, 1751, 1767], "dure": [41, 142, 143, 164, 165, 343, 345, 346, 349, 352, 353, 354, 355, 356, 357, 359, 378, 1761, 1762, 1767], "simplest": [41, 347, 357, 359], "valu": [41, 42, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 340, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 363, 378, 1761, 1762], "return": [41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 378, 1751, 1762], "becaus": [41, 42, 341, 342, 343, 345, 346, 348, 351, 352, 353, 354, 355, 356, 357, 359, 361, 365, 366, 378, 1761, 1764, 1767], "header": [41, 42], "summari": [41, 42, 357], "recommend": [41, 42, 342], "advanc": [41, 1760], "q": [41, 42, 339, 378], "fix": [41, 42, 344, 345, 357, 358], "arrow": 41, "button": [41, 42], "funcion": 41, "target": [41, 339, 356, 358, 360, 364, 365, 366, 1751, 1757, 1759, 1760, 1761, 1764, 1766, 1767], "test_stat": [41, 344], "test_submodule_nam": 41, "test_function_nam": 41, "debugg": 41, "studio": 41, "easiest": 41, "effici": [41, 42, 343, 350, 352, 353, 354, 357, 361, 364, 378, 1761, 1763, 1764], "afterward": [41, 364], "background": [41, 1761, 1763], "restart": 41, "corner": [41, 42, 357], "overlap": [41, 358, 359, 1762], "test_file_path": 41, "test_fn_nam": 41, "enter": [41, 42, 341, 345, 346, 351, 353], "forward": [41, 342, 348, 357, 358, 359, 366, 377, 378, 1761, 1762], "slash": 41, "regular": [41, 42, 355, 356, 1761], "headach": 41, "arm": [41, 42], "m1": 41, "featur": [41, 42, 351, 355, 358, 359, 364, 378, 1751, 1761, 1762, 1763, 1767], "vm": 41, "azur": 41, "cloud": [41, 377, 1763], "mean": [41, 42, 140, 141, 146, 147, 156, 157, 164, 165, 339, 340, 342, 343, 345, 346, 347, 352, 354, 355, 357, 358, 359, 361, 363, 364, 365, 366, 377, 378, 1750, 1751, 1758, 1761], "longer": [41, 345, 353, 354, 357, 1761], "worri": 41, "agnost": [41, 341, 351, 361, 363, 366, 378, 1751, 1767, 1768], "usual": [41, 340, 355, 357, 359], "favourit": 41, "theme": 41, "unsupport": [41, 350, 355], "old": [41, 342, 354], "slow": 41, "ipad": 41, "long": [41, 42, 344, 345, 347, 361, 1761], "cool": [41, 358], "sever": [41, 42, 358, 378, 1759, 1765], "requisit": 41, "pane": [41, 42], "readi": 41, "begin": [41, 340, 356], "dropdown": 41, "master": [41, 42, 340, 358, 1761], "view": [41, 42, 344, 1761], "box": 41, "upto": [41, 42], "15": [41, 60, 61, 109, 110, 156, 157, 164, 165, 347, 1764], "minut": 41, "subsequ": [41, 341, 345, 347, 351, 352, 354, 357, 359, 365, 1762], "launch": 41, "12": [41, 60, 61, 109, 110, 140, 141, 156, 157, 164, 165, 342, 343, 345, 347, 358], "output": [41, 42, 45, 46, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 339, 340, 341, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 361, 363, 365, 366, 378, 1750, 1751, 1762], "That": [41, 42, 357, 363, 364, 365, 1762], "approach": [41, 42, 343, 345, 352, 353, 357, 359, 363, 364, 378, 1758, 1765, 1767], "colour": 41, "applic": [41, 345, 346, 353, 365, 1758, 1759, 1761, 1763, 1765, 1767], "chanc": 41, "troubleshoot": 41, "ever": 41, "64": [41, 60, 61, 109, 110, 146, 147, 364, 365, 1751, 1766], "usr": 41, "flask": 41, "toolbar": [41, 42], "_array_modul": [41, 340], "array_api_test": [41, 42, 340], "refresh": 41, "conftest": 41, "nutshel": [41, 351], "hook": 41, "lint": 41, "accept": [41, 42, 49, 60, 61, 341, 343, 346, 347, 348, 351, 352, 353, 354, 356, 357, 358, 363, 1750, 1751, 1759], "attempt": [41, 350, 378], "succe": 41, "properli": [41, 339, 349, 357], "server": [42, 1761], "suitabl": [42, 343, 358, 1761], "quick": [42, 339, 356, 365], "tendenc": 42, "land": 42, "isn": [42, 353, 364, 378, 1763], "end": [42, 342, 354, 358, 359, 360, 377, 378, 1751, 1759, 1764], "world": [42, 1763], "come": [42, 355, 358, 359, 365, 376, 1750, 1751, 1761], "fly": [42, 1761], "hard": [42, 357, 363, 1761], "receiv": [42, 345, 346, 357], "internship": 42, "bug": [42, 355, 357, 358], "serv": [42, 341, 343, 351, 352, 357, 359, 360, 1750, 1751, 1759], "suspect": 42, "observ": [42, 349, 361, 1763], "act": [42, 347, 378, 1768], "placehold": [42, 341, 350, 351, 1750], "ii": 42, "iii": 42, "issue_numb": 42, "No": [42, 1761], "soon": [42, 345, 376, 378, 1751], "partial": 42, "solut": [42, 343, 345, 357, 359, 1759, 1763], "associ": [42, 148, 149, 345, 352, 353, 355, 356, 357, 378], "respond": 42, "shape": [42, 45, 46, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 343, 345, 346, 347, 348, 351, 354, 355, 356, 357, 358, 361, 363, 364, 365, 366, 1751], "dai": [42, 344], "warn": 42, "without": [42, 341, 343, 345, 346, 347, 349, 350, 351, 352, 356, 357, 358, 359, 363, 364, 365, 377, 378, 1758, 1761, 1762, 1763, 1767], "likewis": [42, 343, 345, 348, 351, 352, 355, 359, 364, 1767], "freed": 42, "flag": [42, 142, 143, 345, 353, 354, 355, 357], "remain": [42, 152, 153, 158, 159, 344, 347, 358, 359, 378], "prioriti": [42, 354], "short": [42, 345, 355, 358, 361, 365], "basi": [42, 340, 364], "situat": [42, 366], "upon": [42, 347, 354, 357, 359, 378, 1760, 1761], "period": [42, 358], "unabl": [42, 359], "obvious": 42, "never": [42, 152, 153, 345, 355, 357, 359], "qualiti": 42, "hypothet": 42, "frustrat": 42, "delai": 42, "busi": 42, "fine": [42, 345, 347, 355, 363, 366, 1767], "inact": 42, "limit": [42, 347, 349, 350, 355, 357, 359, 364, 378, 1760, 1761, 1762], "me": 42, "unfairli": 42, "definit": [42, 109, 110, 148, 149, 345, 352, 363], "investig": 42, "maximum": [42, 60, 61, 109, 110, 140, 141, 142, 143, 152, 153, 158, 159, 347, 364, 1751, 1768], "incomplet": 42, "three": [42, 343, 347, 355, 357, 359, 360, 361, 1751, 1762, 1767], "per": [42, 146, 147, 355, 357, 364], "self": [42, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 341, 343, 349, 355, 356, 361, 363, 364, 365, 366, 1751], "assign": [42, 342, 345, 350, 354, 363], "sequenc": [42, 152, 153, 164, 165, 166, 167, 345, 346, 347, 349, 357, 358, 361, 366, 377, 1764], "regist": 42, "wherea": [42, 341, 343, 345, 346, 347, 351, 352, 357, 358, 366, 1758], "primarili": [42, 343, 1761], "invit": 42, "roadmap": [42, 344, 1751], "result": [42, 45, 46, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 340, 341, 343, 344, 345, 347, 348, 351, 353, 354, 355, 356, 357, 358, 361, 364, 378, 1751, 1762, 1764], "mainli": [42, 339, 362, 364, 1750, 1761], "extend": [42, 342, 348, 351, 355, 358, 378, 1758, 1761, 1767], "ideal": [42, 354, 364], "Such": [42, 357], "easier": [42, 341, 345, 355, 358, 1750, 1761, 1763], "interv": [42, 156, 157, 166, 167], "forth": 42, "rare": [42, 346, 378, 1766], "scenario": 42, "someon": [42, 378], "someth": [42, 358, 364, 365, 378, 1767], "unfortun": 42, "redund": [42, 345, 349, 355, 359], "specifi": [42, 54, 55, 56, 57, 109, 110, 140, 141, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 164, 165, 166, 167, 339, 345, 346, 351, 352, 354, 355, 356, 357, 359, 361, 364, 365, 1767], "behind": [42, 142, 143, 339, 351, 357, 360, 362], "well": [42, 344, 345, 354, 355, 356, 357, 365, 366, 377, 1760, 1761, 1762, 1766], "practic": [42, 344, 1764], "separ": [42, 341, 343, 357, 361, 363, 364, 1762, 1766], "branch": [42, 340, 378, 1761], "role": [42, 355, 362, 1762, 1764, 1768], "kept": [42, 354, 358], "date": [42, 358], "upstream": [42, 340], "base": [42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 343, 344, 345, 349, 351, 353, 356, 357, 358, 361, 377, 1761, 1766, 1768], "complic": [42, 356, 361], "merge_with_upstream": 42, "name_of_your_branch": 42, "resolv": [42, 340, 345, 361], "abort": 42, "tediou": [42, 347], "resolut": 42, "stash": 42, "reinstat": 42, "fetch": [42, 340], "0": [42, 45, 46, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 340, 342, 343, 345, 347, 348, 349, 355, 356, 357, 358, 361, 363, 364, 365, 366, 378, 1751], "uncommit": 42, "unstag": 42, "untrack": 42, "comprehens": [42, 340], "atlassian": 42, "tutori": [42, 355], "wrote": 42, "piec": [42, 341, 352, 353, 361, 1757, 1759], "tag": 42, "navig": [42, 339], "blame": 42, "revis": 42, "log": [42, 60, 61, 148, 149, 343, 344, 347, 352, 354, 355, 357, 359, 361, 364, 1751], "eg": 42, "16": [42, 60, 61, 109, 110, 146, 147, 148, 149, 156, 157, 164, 165, 347, 364], "past": [42, 356, 1761], "l": [42, 148, 149, 339], "filepath": [42, 340], "grep": 42, "retriev": [42, 355], "commit_id": 42, "handi": 42, "histori": 42, "toggl": 42, "vertic": 42, "highlight": [42, 347], "previou": [42, 142, 143, 340, 351, 355, 357, 359, 366, 378, 1764], "whenev": [42, 344, 345, 349, 353, 357, 364], "think": [42, 347, 1762], "gain": [42, 340, 360, 365, 1761], "quit": [42, 341, 347, 348, 352, 353, 357, 359, 1761, 1767], "newli": [42, 56, 57, 354, 357], "cannot": [42, 340, 342, 345, 355, 361, 366, 1767], "least": [42, 109, 110, 341, 345, 347, 352, 357], "approv": 42, "hash": [42, 364], "cancel": 42, "speedup": 42, "unavail": 42, "tickbox": 42, "lower": [42, 54, 55, 60, 61, 148, 149, 156, 157, 347, 355, 357, 359, 361, 378, 1750, 1757, 1758, 1759, 1761, 1762, 1767, 1768], "span": [42, 359, 1759, 1767], "intent": [42, 354], "larg": [42, 109, 110, 364, 1761], "discourag": 42, "philosophi": 42, "increment": [42, 140, 141, 358, 1761], "valuabl": 42, "infrequ": 42, "earli": [42, 1751, 1761], "wast": 42, "spot": [42, 347, 352], "mistak": [42, 350], "propos": [42, 355, 359, 1761], "mountain": 42, "around": [42, 341, 351, 352, 355, 358, 363, 378, 1750, 1759, 1761, 1768], "advoc": [42, 378], "style": [42, 1761], "were": [42, 345, 350, 357, 358, 359, 361, 1761, 1762, 1767], "actual": [42, 339, 352, 354, 357, 359, 360, 365, 378, 1762, 1767], "aim": [42, 340, 357, 360, 1759, 1761, 1764], "session": [42, 1761], "block": [42, 343, 349, 350, 352, 357, 360, 362, 366, 378, 1750, 1751, 1766, 1768], "smaller": [42, 152, 153, 361], "exact": [42, 340, 347, 361], "beauti": 42, "particularli": [42, 364, 378, 1759], "concern": [42, 339, 343, 347, 354, 359, 360, 1767], "difficult": [42, 340, 345, 357, 378], "undo": 42, "stress": 42, "frequenc": [42, 140, 141, 344], "advantag": [42, 354, 355, 1761], "nifti": 42, "reassur": 42, "isol": [42, 1762, 1767], "fact": [42, 355, 357, 361, 364], "local_path_to_ivi": 42, "overwrit": [42, 354, 355, 361], "subfold": [42, 356, 357, 358], "wide": [42, 357, 1759, 1761], "via": [42, 340, 343, 345, 346, 354, 355, 358, 359, 361, 363, 364, 377, 1761], "dep": 42, "fresh": 42, "arsen": 42, "declar": 42, "exec": 42, "rf": 42, "cp": 42, "ivy_contain": 42, "test_imag": 42, "test_random_crop": 42, "test_creation_funct": 42, "test_arang": 42, "variou": [42, 340, 345, 348, 349, 351, 353, 356, 357, 377, 1750, 1757, 1759, 1760, 1761, 1764, 1767], "cpu": [42, 54, 55, 58, 59, 156, 157, 346, 355, 378, 1759, 1761, 1764, 1766], "gpu": [42, 346, 363, 1759, 1761, 1764, 1765, 1766], "combin": [42, 341, 343, 345, 347, 352, 357, 359, 366, 1761], "num": [42, 351, 361], "integ": [42, 60, 61, 152, 153, 156, 157, 164, 165, 166, 167, 343, 345, 353, 356, 357, 361, 363], "greater": [42, 60, 61, 109, 110, 156, 157, 356], "prompt": [42, 1751], "whole": 42, "multipli": [42, 60, 61, 164, 165, 341, 342, 343, 347], "cursor": 42, "alt": 42, "j": [42, 54, 55, 148, 149, 339, 1757], "blog": 42, "breakpoint": 42, "gutter": 42, "caret": 42, "f8": 42, "f9": 42, "Into": 42, "f7": 42, "smart": 42, "interest": 42, "consol": [42, 357, 363], "store": [42, 56, 57, 140, 141, 142, 143, 148, 149, 152, 153, 341, 342, 343, 348, 355, 361, 363, 364, 365, 1750], "variabl": [42, 140, 141, 142, 143, 154, 155, 342, 345, 348, 350, 351, 354, 357, 358, 361, 364, 365, 366, 378, 1751, 1762], "fragment": [42, 1757, 1759, 1763], "except": [42, 140, 141, 152, 153, 156, 157, 166, 167, 339, 340, 341, 345, 348, 350, 351, 354, 355, 359, 361, 363, 378], "pychram": 42, "depth": [42, 54, 55, 364, 365, 366, 377], "dummi": 42, "wherein": [42, 353, 357], "evalu": [42, 60, 61, 343, 345, 359, 1761], "failur": [42, 340, 344, 357], "overview": [44, 170, 357, 360, 377, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "forum": [44, 170, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 465, 503, 505, 506, 588, 679, 713, 1034, 1035, 1229, 1281, 1479, 1480, 1496, 1577, 1581, 1599, 1604, 1631, 1678, 1694, 1739, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1775, 1785, 1797, 1800, 1802, 1808], "arraywithactiv": [45, 363], "abc": [45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 363], "gelu": [45, 46], "approxim": [45, 46, 109, 110, 148, 149, 348, 355], "true": [45, 46, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 343, 345, 347, 349, 350, 351, 352, 354, 355, 356, 357, 359, 361, 364, 365, 366], "none": [45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 340, 342, 343, 345, 346, 347, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 363, 365, 366], "variant": [45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 347, 348, 359], "wrap": [45, 46, 49, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 339, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 354, 355, 356, 357, 361, 363, 366, 378, 1750, 1757, 1761, 1762, 1767, 1768], "minim": [45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 348, 354, 356, 359, 361, 1759, 1767], "y": [45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 342, 343, 347, 355, 356, 358, 359, 361, 363], "185": [45, 46], "046": [45, 46], "leaky_relu": [45, 46, 356, 1751], "alpha": [45, 46, 60, 61, 156, 157, 355, 356], "39": [45, 46, 60, 61, 156, 157], "85": [45, 46, 156, 157], "17": [45, 46, 343, 347], "log_softmax": [45, 46], "axi": [45, 46, 54, 55, 109, 110, 140, 141, 148, 149, 150, 151, 152, 153, 158, 159, 162, 163, 164, 165, 166, 167, 343, 345, 347, 349, 351, 352, 354, 355, 357, 359, 361, 363, 366, 377], "98": [45, 46, 142, 143, 156, 157], "37": [45, 46, 60, 61], "35": [45, 46, 146, 147], "0719": [45, 46], "62": [45, 46], "221": [45, 46], "82": [45, 46, 60, 61], "relu": [45, 46, 168, 169, 356, 364, 365, 1751], "sigmoid": [45, 46, 361, 364, 365, 1751], "269": [45, 46], "731": [45, 46], "881": [45, 46, 60, 61], "softmax": [45, 46, 168, 169, 1751], "union": [45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 341, 343, 345, 346, 347, 349, 350, 351, 352, 354, 355, 358, 359, 361, 366], "nativearrai": [45, 46, 49, 52, 53, 54, 55, 56, 57, 60, 61, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 341, 343, 347, 349, 350, 351, 352, 353, 354, 355, 358, 361, 363, 1750], "input": [45, 46, 49, 52, 53, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 340, 341, 342, 343, 345, 346, 347, 348, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 378, 1762, 1765], "int": [45, 46, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 343, 345, 346, 347, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 366], "ax": [45, 46, 109, 110, 148, 149, 152, 153, 158, 159, 164, 165, 166, 167, 345, 347, 357, 358, 361, 363], "broadcast": [45, 46, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 343, 345, 347, 348, 357, 358, 361], "ret": [45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 348, 354, 355, 356, 358, 361, 366], "element": [45, 46, 54, 55, 60, 61, 109, 110, 140, 141, 148, 149, 152, 153, 156, 157, 158, 159, 160, 161, 164, 165, 348, 356, 357, 359, 361, 1765], "wise": [45, 46, 60, 61, 109, 110, 148, 149, 359], "422": [45, 46], "155": [45, 46], "softplu": [45, 46, 359, 1751], "beta": [45, 46, 154, 155, 156, 157, 359], "threshold": [45, 46, 60, 61, 359], "3461": [45, 46], "6491": [45, 46], "22": [45, 46, 60, 61, 140, 141, 156, 157, 164, 165, 343], "09": [45, 46], "31": [45, 46, 60, 61, 364], "55": [45, 46], "13": [45, 46, 60, 61, 146, 147, 156, 157, 164, 165, 343, 347, 357], "collect": [49, 349, 356, 357, 377, 1759, 1761, 1764], "args_to_ivi": 49, "include_deriv": [49, 50, 51, 52, 53], "kwarg": [49, 50, 51, 349, 355, 361, 365], "nest": [49, 50, 51, 52, 53, 341, 343, 352, 358, 364, 365, 378, 1750, 1761], "otherwis": [49, 50, 51, 52, 53, 56, 57, 60, 61, 140, 141, 142, 143, 148, 149, 152, 153, 158, 159, 164, 165, 166, 167, 341, 343, 344, 345, 346, 347, 357, 361], "unchang": [49, 50, 51, 52, 53], "dict": [49, 50, 51, 52, 53, 140, 141, 343, 350, 364, 365, 1750], "bool": [49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 148, 149, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 345, 347, 349, 354, 355, 357, 358, 361, 366], "deriv": [49, 50, 51, 52, 53, 54, 55, 142, 143, 345, 346, 363, 365], "tupl": [49, 50, 51, 52, 53, 54, 55, 56, 57, 109, 110, 140, 141, 146, 147, 148, 149, 152, 153, 158, 159, 160, 161, 164, 165, 166, 167, 345, 350, 351, 356, 357, 361, 364, 365, 378], "fals": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 109, 110, 140, 141, 142, 143, 148, 149, 152, 153, 158, 159, 162, 163, 164, 165, 166, 167, 342, 345, 347, 349, 354, 355, 356, 357, 361, 364, 365, 366], "str": [49, 50, 51, 140, 141, 146, 147, 345, 346, 349, 350, 355, 358, 361, 366], "kei": [49, 50, 51, 343, 350, 356, 357, 364, 1761, 1764, 1768], "word": [49, 50, 51, 343, 355, 1750], "args_to_n": [49, 354], "cont_inplac": [49, 51, 53], "ignore_frontend_arrai": [49, 51], "nativ": [49, 51, 52, 53, 54, 55, 140, 141, 345, 349, 353, 354, 355, 356, 357, 361, 363, 364, 1750, 1759, 1768], "to_ivi": 49, "leaf": [49, 52, 343, 352, 364], "travers": [49, 52, 53, 343, 345, 361], "lowest": [49, 52, 53, 156, 157, 352, 378, 1750, 1758, 1762, 1766], "to_n": [49, 361], "arraywithcr": [54, 363], "asarrai": [54, 55, 140, 141, 353, 354], "dtype": [54, 55, 56, 57, 109, 110, 146, 147, 148, 149, 156, 157, 158, 159, 164, 165, 340, 342, 345, 346, 347, 350, 352, 353, 355, 356, 357, 358, 361, 363, 1751], "boolean": [54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 152, 153, 158, 159, 343, 355, 356, 357, 359], "nativedtyp": [54, 55, 56, 57, 109, 110, 156, 157, 158, 159, 164, 165, 345, 346, 351, 355, 358, 361], "datatyp": [54, 55], "infer": [54, 55, 140, 141, 152, 153, 339, 342, 345, 346, 353, 361, 366, 1759, 1760, 1763, 1765], "nativedevic": [54, 55, 58, 59, 156, 157, 345, 346, 349, 351, 358], "interpret": [54, 55, 344, 1762], "copy_arrai": [54, 55], "empty_lik": [54, 55, 359], "deafult": [54, 55, 158, 159], "uniniti": [54, 55], "from_dlpack": [54, 55], "full_lik": [54, 55, 358], "fill_valu": [54, 55, 158, 159, 345, 356, 358], "float": [54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 142, 143, 148, 149, 150, 151, 154, 155, 156, 157, 164, 165, 340, 343, 345, 348, 349, 351, 352, 353, 354, 356, 357, 358, 359, 361, 363, 365], "scalar": [54, 55, 60, 61, 109, 110, 140, 141, 345, 378, 1761], "fill": [54, 55, 109, 110, 156, 157, 158, 159, 356], "equal": [54, 55, 56, 57, 60, 61, 109, 110, 140, 141, 148, 149, 152, 153, 156, 157, 162, 163, 164, 165, 343, 345, 347, 349], "000123": [54, 55], "ones": [54, 55, 142, 143, 156, 157, 347, 351, 357, 363, 364, 1751, 1761], "meshgrid": [54, 55], "spars": [54, 55, 150, 151], "xy": [54, 55], "native_arrai": [54, 55, 56, 57, 60, 61, 152, 153, 353, 356, 357], "one_hot": [54, 55, 366, 1751], "on_valu": [54, 55], "off_valu": [54, 55], "scatter": [54, 55, 140, 141, 359, 1768], "hot": [54, 55], "dimens": [54, 55, 109, 110, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 347, 349, 356, 357, 359, 361, 364], "float32": [54, 55, 56, 57, 146, 147, 345, 347, 357], "cuda": [54, 55, 156, 157, 361, 378, 1750, 1766], "unless": [54, 55, 109, 110, 148, 149, 342, 346, 354, 378], "overrid": [54, 55], "ones_lik": [54, 55, 342, 366, 1751], "tril": [54, 55], "k": [54, 55, 146, 147, 148, 149, 156, 157, 339, 340, 355, 361, 1757, 1761], "n": [54, 55, 109, 110, 148, 149, 152, 153, 156, 157, 158, 159, 164, 165, 166, 167, 339, 357], "whose": [54, 55, 60, 61, 109, 110, 140, 141, 148, 149, 152, 153, 160, 161, 348, 357], "innermost": [54, 55, 148, 149], "mxn": [54, 55, 148, 149], "matric": [54, 55, 148, 149, 377, 1761], "diagon": [54, 55, 148, 149], "triangular": [54, 55, 148, 149], "triu": [54, 55], "upper": [54, 55, 148, 149, 156, 157, 354, 357], "zeros_lik": [54, 55, 355, 359, 1751], "creation": [55, 104, 345, 346, 349, 351, 353, 356, 357, 358, 361, 1761, 1763, 1767], "data_typ": [56, 57, 105, 106, 345, 357, 358], "arraywithdatatyp": [56, 363], "astyp": [56, 57, 146, 147, 345, 354, 355, 359], "irrespect": [56, 57, 343, 354, 363, 1768], "promot": [56, 57, 60, 61, 109, 110, 148, 149, 340, 348, 349, 352], "rule": [56, 57, 109, 110, 148, 149, 340, 341, 343, 345, 347, 350, 351, 352, 357, 359, 1762], "cast": [56, 57, 109, 110, 345, 352, 356, 361, 1751], "nan": [56, 57, 60, 61, 109, 110, 140, 141, 164, 165, 340, 345, 348, 357, 358], "infin": [56, 57, 60, 61, 109, 110, 140, 141, 340, 348], "numer": [56, 57, 60, 61, 140, 141, 148, 149, 156, 157, 158, 159, 345, 353, 355, 356, 357, 358, 359, 361, 365, 1758, 1761, 1767], "non": [56, 57, 109, 110, 148, 149, 156, 157, 158, 159, 164, 165, 166, 167, 343, 345, 347, 353, 361, 1761], "float64": [56, 57, 156, 157, 164, 165, 345, 357], "broadcast_arrai": [56, 57], "arbitrari": [56, 57, 343, 351, 352, 354, 355, 357, 365, 378, 1762, 1767], "x1": [56, 57, 60, 61, 109, 110, 148, 149, 158, 159, 340, 345, 347, 349, 351, 355], "x2": [56, 57, 60, 61, 109, 110, 140, 141, 148, 149, 158, 159, 340, 345, 347, 349, 351, 355], "x3": [56, 57], "mix": [56, 57, 60, 61, 339, 347, 354, 357, 359, 361, 1750, 1761, 1765, 1767], "broadcast_to": [56, 57, 345], "can_cast": [56, 57, 345, 352, 355], "occur": [56, 57, 109, 110, 160, 161, 340], "as_n": [56, 57, 58, 59, 345], "int32": [56, 57, 156, 157, 158, 159, 164, 165, 345, 357, 361], "finfo": [56, 57, 357], "iinfo": [56, 57, 350], "119": [56, 57], "122": [56, 57], "int8": [56, 57, 156, 157, 345, 357], "min": [56, 57, 140, 141, 164, 165], "128": [56, 57, 109, 110, 146, 147], "max": [56, 57, 140, 141, 148, 149, 164, 165, 357], "127": [56, 57, 109, 110], "is_bool_dtyp": [56, 57], "is_float_dtyp": [56, 57, 358], "is_int_dtyp": [56, 57, 356, 358], "is_uint_dtyp": [56, 57, 356, 358], "result_typ": [56, 57, 345], "arrays_and_dtyp": [56, 57], "arraywithdevic": [58, 363], "to_devic": [58, 59], "stream": [58, 59, 1765], "ab": [60, 61, 345, 353, 355, 357, 1751], "aco": [60, 61, 1751], "real": [60, 61, 343, 1763], "invers": [60, 61, 345, 377], "cosin": [60, 61], "57": [60, 61], "69": [60, 61, 357, 364], "acosh": [60, 61, 1751], "hyperbol": [60, 61], "32": [60, 61, 109, 110, 156, 157, 364, 1766], "99": [60, 61, 142, 143], "sum": [60, 61, 109, 110, 140, 141, 148, 149, 150, 151, 164, 165, 343, 345, 352, 354, 361], "z": [60, 61, 140, 141, 148, 149, 150, 151, 156, 157, 342, 343, 347, 361, 363], "asin": [60, 61, 1751], "sine": [60, 61], "927": [60, 61], "asinh": [60, 61, 1751], "atan": [60, 61, 1751], "tangent": [60, 61, 348], "785": [60, 61], "464": [60, 61], "atan2": [60, 61, 1751], "coordin": [60, 61, 158, 159], "quotient": [60, 61], "245": [60, 61], "atanh": [60, 61, 1751], "549": [60, 61], "47": [60, 61, 156, 157], "bitwise_and": [60, 61], "11": [60, 61, 140, 141, 146, 147, 148, 149, 156, 157, 164, 165, 343, 345, 347, 358], "bitwise_invert": [60, 61], "bitiwse_invert": [60, 61], "bitwise_left_shift": [60, 61], "bitwise_or": [60, 61], "bitwise_right_shift": [60, 61], "bitwise_xor": [60, 61], "89": [60, 61, 156, 157], "51": [60, 61], "18": [60, 61, 156, 157, 343, 347], "19": [60, 61, 156, 157, 347], "26": [60, 61, 154, 155, 156, 157], "27": [60, 61, 109, 110, 148, 149, 156, 157], "23": [60, 61, 156, 157, 357, 361], "20": [60, 61, 146, 147, 156, 157, 164, 165, 359, 363], "74": [60, 61], "41": [60, 61], "59": [60, 61], "24": [60, 61, 148, 149, 164, 165, 364], "ceil": [60, 61, 1751], "express": [60, 61, 109, 110, 348, 350, 355, 361, 366, 1761, 1762], "radian": [60, 61, 109, 110, 348], "54": [60, 61, 146, 147, 347], "416": [60, 61], "cosh": [60, 61, 1751], "angl": [60, 61, 377], "76": [60, 61], "03": [60, 61], "81": [60, 61, 357], "deg2rad": [60, 61], "degre": [60, 61, 164, 165, 1760], "180": [60, 61], "270": [60, 61], "360": [60, 61], "71": [60, 61], "28": [60, 61, 154, 155], "divid": [60, 61, 140, 141, 152, 153, 341, 343, 347], "dividend": [60, 61], "divisor": [60, 61, 142, 143, 164, 165], "375": [60, 61], "erf": [60, 61], "exponenti": [60, 61], "gauss": [60, 61], "exp": [60, 61, 1751], "expm1": [60, 61, 345], "244": [60, 61], "918": [60, 61], "48": [60, 61], "147": [60, 61], "floor": [60, 61, 1751], "floor_divid": [60, 61], "greater_equ": [60, 61], "isfinit": [60, 61, 355], "out_i": [60, 61], "self_i": [60, 61], "finit": [60, 61, 109, 110], "inf": [60, 61, 109, 110, 140, 141, 148, 149, 345, 357], "isinf": [60, 61], "neg": [60, 61, 109, 110, 148, 149, 152, 153, 156, 157, 166, 167, 343, 352, 354], "isnan": [60, 61], "isreal": [60, 61], "1j": [60, 61], "5j": [60, 61], "6j": [60, 61], "less_equ": [60, 61, 349], "61": [60, 61], "log10": [60, 61], "logarithm": [60, 61], "602": [60, 61], "699": [60, 61], "log1p": [60, 61], "693": [60, 61], "001": [60, 61, 109, 110, 154, 155, 364, 365], "0953": [60, 61], "log2": [60, 61], "logaddexp": [60, 61], "05": [60, 61, 109, 110, 142, 143, 154, 155, 164, 165, 356, 357], "logical_and": [60, 61, 355, 359, 1751, 1768], "logical_not": [60, 61, 345, 1751], "logical_or": [60, 61, 1751, 1768], "conform": [60, 61, 348], "org": [60, 61, 348], "api_specif": [60, 61, 348], "elementwise_funct": [60, 61, 348], "noqa": [60, 61], "simplic": [60, 61, 348, 359, 365, 377], "nestabl": [60, 61, 339, 347, 348, 354, 357, 1750], "logical_xor": [60, 61], "use_wher": [60, 61], "formula": [60, 61], "clip": [60, 61, 152, 153, 343, 352, 354, 364, 366, 1751], "minimum": [60, 61, 140, 141, 152, 153, 158, 159, 1751, 1758, 1764, 1768], "exce": [60, 61], "arguement": [60, 61], "condit": [60, 61, 158, 159, 340, 345, 347, 349, 354, 357, 377], "boradcastbl": [60, 61], "thatth": [60, 61], "30": [60, 61], "56": [60, 61, 146, 147, 156, 157, 347], "21": [60, 61, 109, 110, 140, 141, 156, 157], "not_equ": [60, 61], "pow": [60, 61, 340], "expon": [60, 61, 109, 110, 140, 141], "rad2deg": [60, 61], "286": [60, 61], "458": [60, 61], "573": [60, 61], "reciproc": [60, 61], "remaind": [60, 61, 109, 110, 152, 153], "modulu": [60, 61], "x2_i": [60, 61, 340], "94": [60, 61, 142, 143, 156, 157], "256": [60, 61], "0001": [60, 61], "36": [60, 61, 146, 147], "67": [60, 61, 140, 141], "45": [60, 61], "678": [60, 61], "25": [60, 61, 140, 141, 148, 149, 150, 151, 156, 157, 164, 165, 343], "33": [60, 61, 156, 157, 164, 165], "sin": [60, 61, 140, 141, 341, 361, 1751], "841": [60, 61], "909": [60, 61], "141": [60, 61], "sinh": [60, 61, 1751], "63": [60, 61], "232": [60, 61], "sqrt": [60, 61], "squar": [60, 61, 148, 149], "subtract": [60, 61, 341, 343, 347], "tan": [60, 61, 343, 348, 351, 352, 354, 355, 361, 1751], "tanh": [60, 61, 361, 1751], "762": [60, 61], "964": [60, 61], "trunc": [60, 61], "trunc_divid": [60, 61], "elementwis": [61, 110, 154, 155, 352, 358, 361], "experiment": [63, 64, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 345, 355, 358, 361, 1761], "arraywithactivationsexperiment": 63, "arraywithconversionsexperiment": 101, "arraywithcreationexperiment": 103, "arraywithdata_typeexperiment": 105, "arraywithdeviceexperiment": 107, "arraywithelementwiseexperiment": 109, "exp2": [109, 110], "power": [109, 110, 140, 141, 148, 149, 357, 363, 364, 365, 1761, 1763, 1767], "float_pow": [109, 110], "125": [109, 110, 148, 149], "fmax": [109, 110], "fmod": [109, 110], "divis": [109, 110, 140, 141, 142, 143, 352], "gcd": [109, 110], "isclos": [109, 110, 357], "rtol": [109, 110, 148, 149, 356], "1e": [109, 110, 142, 143, 150, 151, 154, 155, 343, 352, 354, 356, 365, 366, 1751], "atol": [109, 110, 148, 149], "08": [109, 110, 164, 165], "equal_nan": [109, 110], "toler": [109, 110, 148, 149, 340, 356, 1761], "compar": [109, 110, 140, 141, 162, 163, 342, 347, 350, 356, 357, 364, 1757, 1759, 1761, 1767, 1768], "hold": [109, 110, 140, 141, 148, 149, 164, 165, 364, 1762], "01": [109, 110, 142, 143, 342, 366], "isneginf": [109, 110], "isposinf": [109, 110], "lcm": [109, 110], "60": [109, 110], "logaddexp2": [109, 110], "169925": [109, 110], "nan_to_num": [109, 110], "posinf": [109, 110], "neginf": [109, 110], "small": [109, 110, 148, 149, 154, 155, 347, 352, 356, 359, 361, 365, 378, 1762], "5e": [109, 110, 142, 143], "nansum": [109, 110], "keepdim": [109, 110, 148, 149, 152, 153, 158, 159, 164, 165, 166, 167, 349, 355, 361], "flatten": [109, 110, 140, 141, 152, 153, 158, 159, 160, 161], "accumul": [109, 110], "By": [109, 110, 164, 165, 166, 167, 345, 347, 352, 354, 355, 361, 365, 366], "reduc": [109, 110, 140, 141, 148, 149, 158, 159, 164, 165, 166, 167, 349, 355, 359, 361, 363, 1759, 1763, 1764, 1765], "size": [109, 110, 140, 141, 148, 149, 152, 153, 156, 157, 158, 159, 356, 357, 364], "637": [109, 110], "212": [109, 110, 146, 147], "0909": [109, 110], "trapz": [109, 110], "dx": [109, 110], "sampl": [109, 110, 156, 157, 164, 165, 353, 356, 357], "evenli": [109, 110, 152, 153], "apart": [109, 110], "dimension": [109, 110, 148, 149, 152, 153, 158, 159, 164, 165, 166, 167, 361, 1758, 1761, 1768], "trapezoid": [109, 110], "arraywithgeneralexperiment": 111, "arraywithgradientsexperiment": 113, "gradient": [114, 143, 358, 364, 365, 377, 378, 1751, 1761], "arraywithimageexperiment": 115, "arraywithgener": [140, 363], "all_equ": [140, 141], "equality_matrix": [140, 141], "array_equ": [140, 141], "assert_supports_inplac": [140, 141], "clip_matrix_norm": [140, 141], "max_norm": [140, 141], "norm": [140, 141, 148, 149, 155, 358, 1751], "downscal": [140, 141], "894": [140, 141], "79": [140, 141], "clip_vector_norm": [140, 141], "vector": [140, 141, 146, 147, 148, 149, 377, 1761], "default_v": [140, 141], "catch_except": [140, 141], "rev": [140, 141], "with_cal": [140, 141], "catch": [140, 141, 357], "callabl": [140, 141, 343, 349, 355, 357, 361], "einops_rearrang": [140, 141], "axes_length": [140, 141], "arrang": [140, 141], "rearrang": [140, 141], "einops_reduc": [140, 141], "reduct": [140, 141, 150, 151, 166, 167, 345, 357, 363, 1751], "One": [140, 141, 152, 153, 156, 157, 345, 347, 356, 357, 361, 363, 364], "prod": [140, 141, 164, 165, 345, 347, 361], "einops_repeat": [140, 141], "fourier_encod": [140, 141], "max_freq": [140, 141], "num_band": [140, 141], "linear": [140, 141, 146, 147, 348, 355, 357, 359, 361, 364, 365, 366, 1479, 1751, 1759, 1760, 1761, 1764], "concat": [140, 141, 152, 153, 356, 359, 361, 1751], "band": [140, 141], "linearli": [140, 141], "oppos": [140, 141, 345], "geometr": [140, 141], "concaten": [140, 141, 152, 153, 356, 359, 361, 364, 1751], "seper": [140, 141, 347], "batch": [140, 141, 343, 352, 364, 1759], "expand": [140, 141, 152, 153, 343], "gather": [140, 141, 1768], "batch_dim": [140, 141], "gather_nd": [140, 141, 1751], "get_num_dim": [140, 141, 1751], "as_arrai": [140, 141], "has_nan": [140, 141], "include_inf": [140, 141], "inplace_decr": [140, 141], "val": [140, 141, 354, 363], "decrement": [140, 141], "inplace_incr": [140, 141], "inplace_upd": [140, 141, 354], "ensure_in_backend": [140, 141, 354], "inplac": [140, 141, 142, 143, 339, 341, 347, 351, 353, 356, 359, 363, 365], "is_arrai": [140, 141, 355], "exclus": [140, 141, 142, 143, 164, 165, 343, 345, 352, 355, 358, 366, 1765, 1767], "trace": [140, 141, 148, 149, 340, 345, 361, 378, 1750, 1762, 1767], "is_ivy_arrai": [140, 141, 354, 363], "is_ivy_contain": [140, 141], "is_native_arrai": [140, 141, 363], "scatter_flat": [140, 141], "occupi": [140, 141], "scatter_nd": [140, 141, 359, 363, 1751], "arr": [140, 141, 345, 346], "40": [140, 141], "stable_divid": [140, 141, 352], "denomin": [140, 141, 154, 155, 352, 378, 1758], "min_denomin": [140, 141], "global": [140, 141, 154, 155, 342, 345, 346, 349, 352, 355, 361, 1761], "_min_denomin": [140, 141], "stable_pow": [140, 141], "min_bas": [140, 141], "_min_bas": [140, 141, 154, 155], "supports_inplace_upd": [140, 141], "supports_inplac": [140, 141], "to_list": [140, 141, 1751], "represent": [140, 141, 377, 1759, 1760, 1762, 1766, 1767], "to_numpi": [140, 141, 364, 1751], "to_scalar": [140, 141], "value_is_nan": [140, 141], "92": [140, 141], "arraywithgradi": [142, 363], "adam_step": [142, 143], "mw": [142, 143, 365], "vw": [142, 143, 365], "beta1": [142, 143, 365], "beta2": [142, 143, 365], "999": [142, 143, 365], "epsilon": [142, 143, 148, 149, 150, 151, 154, 155, 343, 352, 354, 365], "07": [142, 143, 150, 151, 365], "cost": [142, 143, 359, 1759], "weight": [142, 143, 146, 147, 154, 155, 343, 352, 361, 365, 366, 1760], "w": [142, 143, 146, 147, 361, 364, 365], "dc": [142, 143], "dw": [142, 143], "averag": [142, 143], "forget": [142, 143, 345], "adam": [142, 143, 364, 365, 366, 1751, 1761], "delta": [142, 143], "dcdw": [142, 143], "adam_step_delta": [142, 143], "182": [142, 143], "adam_upd": [142, 143, 365], "lr": [142, 143, 364, 365], "mw_tm1": [142, 143], "vw_tm1": [142, 143], "stop_gradi": [142, 143, 365, 1751], "rate": [142, 143], "stop": [142, 143, 351, 359, 361, 378, 1761], "ws_new": [142, 143], "gradient_descent_upd": [142, 143, 1751], "handl": [142, 143, 339, 343, 345, 346, 351, 352, 353, 354, 355, 356, 357, 359, 365, 1758, 1768], "higher": [142, 143, 360, 361, 366, 378, 1758, 1761, 1762, 1765, 1767, 1768], "descent": [142, 143, 365, 1761], "new_weight": [142, 143, 364], "95": [142, 143, 156, 157], "97": [142, 143], "96": [142, 143], "is_vari": [142, 143, 354], "trainabl": [142, 143, 348, 362, 364, 365], "is_var": [142, 143], "lamb_upd": [142, 143], "max_trust_ratio": [142, 143], "decay_lambda": [142, 143], "trust": [142, 143], "ratio": [142, 143], "decai": [142, 143], "lamb": [142, 143, 365], "784": [142, 143], "78": [142, 143], "02": [142, 143, 154, 155, 156, 157], "04": [142, 143, 356, 357], "0e": [142, 143], "lars_upd": [142, 143], "lar": [142, 143, 365], "optimizer_upd": [142, 143], "effective_grad": [142, 143], "3e": [142, 143], "preserve_typ": [142, 143], "preserv": [142, 143, 357, 366, 378], "variable_data": [142, 143], "intern": [142, 143, 341, 343, 346, 348, 354], "arraywithimag": [144, 363], "arraywithlay": [146, 363], "conv1d": [146, 147], "stride": [146, 147, 1761], "pad": [146, 147], "data_format": [146, 147], "nwc": [146, 147], "dilat": [146, 147], "batch_siz": [146, 147, 156, 157, 364], "d_in": [146, 147], "convolut": [146, 147, 1759, 1761], "fw": [146, 147, 356, 357], "d_out": [146, 147], "slide": [146, 147], "algorithm": [146, 147, 345, 355, 359, 378, 1761, 1763, 1765], "ncw": [146, 147], "wio": [146, 147], "conv1d_transpos": [146, 147], "output_shap": [146, 147], "conv2d": [146, 147, 1751], "nhwc": [146, 147], "h": [146, 147, 339, 343, 1757], "fh": [146, 147], "nchw": [146, 147], "hwio": [146, 147], "conv3d": [146, 147], "ndhwc": [146, 147], "conv3d_transpos": [146, 147], "depthwise_conv2d": [146, 147, 1751], "randint": [146, 147, 156, 157, 345, 1751], "255": [146, 147], "random_norm": [146, 147, 156, 157], "std": [146, 147, 156, 157, 164, 165, 347], "dropout": [146, 147, 364], "prob": [146, 147], "scale": [146, 147, 1761, 1763], "bia": [146, 147, 154, 155, 361, 365], "transform": [146, 147, 366, 377, 1750, 1759, 1761, 1762, 1763], "outer_batch_shap": [146, 147], "inner_batch_shap": [146, 147], "in_featur": [146, 147], "out_featur": [146, 147], "84": [146, 147], "133": [146, 147], "134": [146, 147], "lstm_updat": [146, 147, 361], "init_h": [146, 147, 361], "init_c": [146, 147, 361], "kernel": [146, 147, 359, 361, 378, 1761, 1764, 1765], "recurrent_kernel": [146, 147, 361], "recurrent_bia": [146, 147, 361], "multi_head_attent": [146, 147, 354], "num_head": [146, 147], "mask": [146, 147, 359], "to_q_fn": [146, 147], "to_kv_fn": [146, 147], "to_out_fn": [146, 147, 354], "to_q_v": [146, 147], "to_kv_v": [146, 147], "to_out_v": [146, 147], "scaled_dot_product_attent": [146, 147], "arraywithlinalg": [148, 363], "choleski": [148, 149, 354], "symmetr": [148, 149, 343], "625": [148, 149], "cross": [148, 149, 150, 151, 344, 1751], "vif": [148, 149], "det": [148, 149], "diag": [148, 149, 361], "offset": [148, 149], "axis1": [148, 149, 152, 153], "axis2": [148, 149], "eigh": [148, 149], "eigvalsh": [148, 149], "inv": [148, 149, 1751], "adjoint": [148, 149], "matmul": [148, 149, 342, 357, 358, 361, 1751], "matrix_norm": [148, 149], "ord": [148, 149], "fro": [148, 149], "liter": [148, 149, 350], "nuc": [148, 149], "arang": [148, 149, 345, 1751, 1768], "reshap": [148, 149, 152, 153, 354, 355, 357, 361, 363, 366, 1751], "matrix_rank": [148, 149], "rank": [148, 149, 152, 153, 166, 167], "singular": [148, 149, 345], "largest_singular_valu": [148, 149], "equival": [148, 149, 354, 355, 359, 364, 366], "ep": [148, 149], "defici": [148, 149], "matrix_transpos": [148, 149, 363], "transpos": [148, 149, 354, 363, 366, 1751], "pinv": [148, 149, 1751], "0426": [148, 149], "0964": [148, 149], "0605": [148, 149], "1368": [148, 149], "qr": [148, 149], "slogdet": [148, 149], "namedtupl": [148, 149, 160, 161], "logabsdet": [148, 149], "6931472": [148, 149], "solv": [148, 149, 340, 355, 362, 377, 1763], "svd": [148, 149, 1751], "compute_uv": [148, 149], "full_matric": [148, 149], "svdval": [148, 149], "tensordot": [148, 149, 345], "vander": [148, 149], "vandermond": [148, 149], "column": [148, 149], "len": [148, 149, 343, 354, 355, 357, 363, 366], "vecdot": [148, 149], "vector_norm": [148, 149], "vector_to_skew_symmetric_matrix": [148, 149, 1751], "arraywithloss": [150, 363], "binary_cross_entropi": [150, 151], "pred": [150, 151, 343, 352, 354], "predict": [150, 151], "amount": [150, 151, 346, 356], "smooth": [150, 151], "binari": [150, 151], "entropi": [150, 151], "357": [150, 151], "223": [150, 151], "cross_entropi": [150, 151, 343, 352, 354], "3862944": [150, 151], "sparse_cross_entropi": [150, 151], "logit": [150, 151], "loss": [151, 345, 352, 355, 358, 364, 365, 366, 1751, 1761, 1768], "arraywithmanipul": [152, 363], "x_min": [152, 153, 366], "x_max": [152, 153, 366], "join": [152, 153, 349, 1751], "count": [152, 153, 160, 161, 166, 167, 343, 347, 364], "constant_pad": [152, 153], "pad_width": [152, 153], "expand_dim": [152, 153, 355, 361, 364, 1751], "flip": [152, 153, 355, 363, 364, 366, 1751], "reorder": [152, 153], "permute_dim": [152, 153], "nativeshap": [152, 153, 156, 157], "length": [152, 153, 350, 357, 364], "valueerror": [152, 153, 349], "reus": [152, 153, 349, 357, 1766], "memori": [152, 153, 345, 346, 354, 355, 359, 361, 376, 378, 1751, 1761, 1763, 1764, 1765], "buffer": [152, 153, 378], "roll": [152, 153, 343, 351], "larger": [152, 153, 164, 165, 357, 1768], "restor": [152, 153], "num_or_size_split": [152, 153, 361], "with_remaind": [152, 153], "entri": [152, 153, 1761], "squeez": [152, 153, 1751, 1761], "swapax": [152, 153], "axis0": [152, 153], "swap_ax": [152, 153], "tile": [152, 153, 1751], "rep": [152, 153], "unstack": [152, 153, 343, 361, 364, 1751, 1768], "unpack": [152, 153, 350, 356, 357], "zero_pad": [152, 153, 1751], "arraywithnorm": [154, 363], "layer_norm": [154, 155], "normalized_idx": [154, 155], "new_std": [154, 155], "learnabl": [154, 155, 366], "gamma": [154, 155, 156, 157], "constant": [154, 155, 352, 358, 365, 366, 378], "0976": [154, 155], "3452": [154, 155], "2740": [154, 155], "1047": [154, 155], "5886": [154, 155], "2732": [154, 155], "7696": [154, 155], "7024": [154, 155], "2518": [154, 155], "826": [154, 155], "178": [154, 155], "981": [154, 155], "831": [154, 155], "421": [154, 155], "arraywithrandom": [156, 363], "seed": [156, 157, 1751], "drawn": [156, 157, 357], "parameter": [156, 157], "multinomi": [156, 157], "population_s": [156, 157], "num_sampl": [156, 157], "unnorm": [156, 157, 357], "popul": [156, 157, 164, 165, 345, 346, 357, 361, 1767], "uniform": [156, 157, 365, 1768], "batch_shap": [156, 157, 359, 361, 363], "independ": [156, 157, 340, 345, 347, 353, 361, 366, 1759], "highest": [156, 157], "low": [156, 157, 343, 355, 359, 361, 1757, 1759, 1761, 1762, 1763, 1765, 1767], "half": [156, 157, 359], "int16": [156, 157, 345, 357, 361], "int64": [156, 157, 158, 159, 162, 163, 345, 357, 361], "46": [156, 157], "44": [156, 157], "72": [156, 157], "235": [156, 157], "float16": [156, 157, 345, 357], "49": [156, 157], "807": [156, 157], "42": [156, 157, 361, 366], "random_uniform": [156, 157, 346, 357, 365, 1751], "boundari": [156, 157, 1761], "86": [156, 157], "06": [156, 157, 357, 364], "53": [156, 157], "shuffl": [156, 157, 1751], "object": [156, 157, 343, 353, 355, 357, 363, 366, 1761, 1767], "arraywithsearch": [158, 363], "argmax": [158, 159, 1751], "output_dtyp": [158, 159], "insert": [158, 159], "occurr": [158, 159], "argmin": [158, 159, 1751], "singleton": [158, 159, 164, 165, 166, 167, 361], "accordingli": [158, 159, 164, 165, 166, 167, 350, 355, 361], "argwher": [158, 159, 350], "nonzero": [158, 159], "as_tupl": [158, 159], "ndim": [158, 159, 343, 357], "fewer": [158, 159], "yield": [158, 159, 344, 350], "arraywithset": [160, 363], "unique_al": [160, 161], "unique_count": [160, 161], "field": [160, 161, 377, 1759, 1767], "unique_invers": [160, 161], "inverse_indic": [160, 161], "reconstruct": [160, 161], "unique_valu": [160, 161], "arraywithsort": [162, 363], "argsort": [162, 163], "descend": [162, 163], "ascend": [162, 163], "stabil": [162, 163, 345, 359], "searchsort": [162, 163], "sorter": [162, 163], "ret_dtyp": [162, 163], "arraywithstatist": [164, 363], "cumprod": [164, 165, 355, 366], "cumul": [164, 165, 377], "exclud": [164, 165, 347, 361], "120": [164, 165], "cumsum": [164, 165, 345, 1751], "einsum": [164, 165], "equat": [164, 165, 1761], "arithmet": [164, 165, 355], "x_i": [164, 165, 348], "propag": [164, 165], "var": [164, 165, 347, 361], "varianc": [164, 165], "freedom": [164, 165, 342], "adjust": [164, 165], "constitut": [164, 165, 352, 361, 1762], "unbias": [164, 165], "commonli": [164, 165, 349, 352], "bessel": [164, 165], "6666665": [164, 165, 364], "667": [164, 165], "arraywithutil": [166, 363], "AND": [166, 167], "backward": [166, 167, 378], "add_ivy_array_instance_method": 168, "cl": [168, 169], "to_ignor": [168, 169], "loop": [168, 169, 342, 350, 378], "_wrap_funct": [168, 169, 352, 353], "toi": [168, 169], "arrayexampl": [168, 169], "hasattr": [168, 169], "who": [339, 360, 378, 1761, 1763], "hood": [339, 343, 347, 352, 355, 357, 359, 360, 361, 364, 366, 1768], "weed": [339, 360], "tour": 339, "primari": [339, 342, 345, 354, 355, 357, 359, 378, 1750], "superset": [339, 378], "goe": [339, 359], "dynam": [339, 345, 346, 354, 355, 361, 1761, 1765], "runtim": [339, 357, 359, 1761], "borrow": 339, "assert": [339, 340, 350, 355, 357, 358, 363, 364], "conjunct": 340, "establish": [340, 1763], "2020": [340, 1761], "group": [340, 343, 352, 355, 356, 1757, 1760, 1766], "intend": [340, 351, 1759, 1761, 1765, 1766], "popular": [340, 1761], "sens": [340, 347, 355, 363], "unconnect": 340, "decis": [340, 343, 345, 355, 359, 361, 363, 1761], "initialis": [340, 357], "checkout": [340, 357], "everytim": [340, 345], "init": [340, 366], "thoroughli": 340, "ci": [340, 345, 350, 357, 378], "insert_chosen_backend": 340, "test_linalg": 340, "test_set_funct": 340, "test_signatur": 340, "excess": [340, 342, 347], "explicitli": [340, 341, 342, 343, 345, 348, 349, 352, 353, 354, 357, 361, 378, 1761], "array_modul": 340, "set_backend": [340, 342, 345, 352, 353, 361, 363, 366, 1751], "vv": 340, "test_manipulation_funct": 340, "test_concat": [340, 357], "typic": [340, 352, 1760, 1768], "nb": 340, "varieti": [340, 344, 345, 346, 357, 1757, 1759, 1763, 1764, 1767, 1768], "known": [340, 345, 355, 357], "test_asarray_arrai": 340, "test_floor_divid": 340, "health": 340, "test_iop": 340, "__imod__": 340, "x1_i": 340, "isequ": 340, "test_matrix_norm": 340, "alter": 340, "tweak": 340, "array_api_methods_to_test": 340, "identifi": [340, 344, 357, 359], "202": 340, "test_trac": 340, "latter": [340, 342, 345, 348, 355], "hand": [340, 345, 352, 357, 378], "scheme": [340, 365, 1761], "edg": [340, 357, 1751, 1761, 1763, 1767], "test_special_cas": 340, "__ipow__": 340, "is_integ": 340, "unskip": 340, "temporarili": [340, 358], "straightforward": [340, 364], "tf": [341, 345, 346, 351, 354, 355, 357, 358, 359, 361, 366, 378, 1750, 1751, 1761], "xla_extens": [341, 345, 346, 351, 358, 361, 363], "devicearrai": [341, 356, 361, 363], "overwritten": [341, 342], "wrapper": [341, 343, 345, 353, 354, 363, 1750, 1757, 1761], "_data": [341, 355, 363], "meta": [341, 358, 1761], "organiz": [341, 343, 355], "inherit": [341, 343, 349, 363, 378, 1750], "bear": [341, 343, 345, 355], "necessarili": [341, 343], "although": [341, 343, 355, 1759, 1761], "underpin": [341, 343, 361], "programmat": [341, 343, 1762], "backup": [341, 343], "accident": [341, 343, 355], "readabl": [341, 343, 349, 351, 358, 363, 364], "absent": [341, 343], "perk": [341, 343], "auto": [341, 343, 364], "__add__": [341, 343, 347, 348, 351, 355, 363], "__sub__": [341, 343, 347, 351, 363], "__mul__": [341, 343, 347, 351, 359, 363], "__truediv__": [341, 343, 347], "__setitem__": [341, 343, 363], "throw": [341, 345, 349, 363, 1761], "imposs": 341, "chain": [341, 343, 355, 365, 366, 378, 1761], "inputs_to_native_arrai": [341, 353], "outputs_to_ivy_arrai": [341, 345, 346, 351, 353], "firstli": [341, 345, 347, 348, 349, 352, 353, 354, 359, 364, 1757, 1767], "anywai": [341, 353, 355], "secondli": [341, 345], "permit": [341, 351, 355, 357, 359], "dictat": [341, 347, 351, 354], "extra": [341, 345, 347, 353, 355, 356, 359, 361, 1758, 1763], "implicit_backend": [342, 361], "__dict__": [342, 361], "ivy_original_dict": [342, 361], "string": [342, 345, 346, 349, 350, 361, 364], "unmodifi": [342, 345], "duplic": [342, 348, 350, 353, 356, 365, 1767], "get_backend": [342, 352], "opt": [342, 345, 354, 357, 358, 359], "unset_backend": 342, "unset": [342, 361], "fallback": 342, "backend_handl": [342, 361, 1751], "layout": [342, 355, 359], "requires_grad": [342, 356], "memory_format": 342, "preserve_format": 342, "weren": 342, "break": [342, 345, 350, 351, 358, 378, 1751], "Not": [342, 356, 364, 365, 378], "vast": [342, 345, 1761], "minor": [342, 359, 361, 378], "fn_name_v_1p12_and_abov": 342, "similarli": [342, 345, 355, 359, 363, 1767], "fn_name_v_1p01_to_1p1": 342, "inclus": [342, 354, 355, 359], "fn_name": [342, 356, 357], "vari": [343, 347, 355, 357, 363], "five": [343, 364], "map": [343, 345, 351, 352, 355, 357, 358, 364, 377, 378, 1750, 1762], "all_tru": [343, 364], "to_iter": 343, "containerbas": 343, "multi_map": 343, "diff": [343, 347, 364], "common_key_chain": 343, "properti": [343, 347, 352, 356, 357, 363, 364, 365, 1767], "recap": [343, 347, 365], "arbitrarili": [343, 353, 364], "multi_map_in_static_method": 343, "static_add": [343, 347, 348], "static_tan": [343, 347], "static_rol": [343, 347], "containerwithelementwis": 343, "__repr__": 343, "control": [343, 345, 354, 355, 359, 363, 364, 377, 1750, 1761, 1767], "__getattr__": 343, "underli": [343, 359, 1761], "queri": [343, 345, 363, 1761], "attribut": [343, 345, 348, 353, 354, 362, 363, 364, 365], "__setattr__": 343, "__getitem__": 343, "__contains__": 343, "__getstate__": 343, "__setstate__": 343, "pickl": [343, 364], "unpickl": 343, "num_dim": [343, 366], "__len__": 343, "restrict": [343, 355, 361, 1758], "enforc": [343, 363], "extern": [343, 351, 355, 357, 358], "flexibl": [343, 351, 358, 1761], "l1": [343, 364], "c1": 343, "l2": 343, "lefthand": 343, "righthand": 343, "operand": [343, 348, 355], "decor": [343, 345, 346, 352, 353, 354, 355, 356, 357], "handle_nest": [343, 352, 353, 361], "addition": [343, 354, 355, 1767], "counterpart": [343, 353], "behavior": [343, 345, 355, 356, 357, 359, 361, 378, 1758], "presenc": [343, 354], "absenc": [343, 351, 1761], "implicitli": [343, 361], "themselv": [343, 345, 346, 348, 352, 355, 365, 1758, 1767], "log_pr": [343, 352, 354], "intuit": [343, 364, 365, 1757], "chronolog": 343, "concurr": [343, 352, 1761], "had": [343, 354, 1761, 1762], "consum": [343, 351, 356, 357], "sequenti": [343, 365], "But": [343, 348, 353, 354, 366], "flow": [343, 377, 1761, 1762], "compil": [343, 355, 358, 359, 360, 362, 378, 1750, 1751, 1757, 1760, 1761, 1762, 1765, 1768], "implic": 343, "whatsoev": [343, 352, 1750, 1767], "implicit": [343, 348, 355, 357, 361, 1761], "eager": [343, 378, 1761], "children": 343, "shallowest": 343, "deepest": 343, "event": [344, 357], "ex": 344, "reopen": 344, "review_request": 344, "yml": 344, "dispatch": [344, 378, 1761, 1764], "pair": 344, "test_nn": 344, "yellow": 344, "dot": 344, "queu": 344, "redirect": 344, "ignor": [344, 347, 357, 378, 1767], "book": 344, "procedur": [344, 347], "decoupl": [344, 365], "ran": 344, "badg": 344, "clickabl": 344, "uint8": [345, 357], "uint16": [345, 357, 361], "uint32": [345, 357, 361], "uint64": [345, 357, 361], "bfloat16": [345, 355, 357], "constructor": [345, 346, 363], "all_dtyp": 345, "all_numeric_dtyp": 345, "all_int_dtyp": 345, "all_float_dtyp": 345, "replic": [345, 347, 355, 359], "four": [345, 347, 351, 352, 357, 359, 364], "thirdli": 345, "native_float32": 345, "importantli": [345, 363, 366, 377], "conveni": [345, 346, 351, 356, 362, 364, 365, 1750, 1767], "set_default_dtyp": [345, 352], "default_dtyp": [345, 352], "arguabl": [345, 346, 355], "promote_typ": 345, "type_promote_arrai": 345, "promote_types_of_input": 345, "jaxarrai": [345, 346, 351, 354, 358, 361], "jnp": [345, 346, 351, 354, 356, 358, 361, 366, 1751], "_handle_0_dim_output": [345, 354], "subtli": [345, 354], "On": [345, 355, 357, 362, 366], "promote_types_frontend_nam": 345, "promote_types_of_frontend_name_input": 345, "frontend_nam": 345, "mathemat": [345, 355, 359, 1761, 1767], "demonstr": [345, 347, 363], "accuraci": 345, "precis": [345, 355, 359, 1765], "upcast": 345, "instabl": 345, "underflow": 345, "nearli": [345, 351, 353, 1761], "downcast": 345, "footprint": 345, "constraint": 345, "concret": 345, "compound": 345, "infer_dtyp": [345, 346, 351, 353], "default_int_dtyp": 345, "default_float_dtyp": 345, "settabl": [345, 346], "set_default_int_dtyp": 345, "set_default_float_dtyp": 345, "irrelev": [345, 347], "dim": [345, 356, 359], "handle_out_argu": [345, 346, 351, 353, 354, 361], "infer_devic": [345, 346, 351, 353], "deleg": [345, 1768], "shape_to_tupl": 345, "with_supported_dtyp": 345, "with_unsupported_dtyp": 345, "unment": 345, "dictionari": [345, 364, 378], "backend_vers": 345, "_cast_for_unary_op": 345, "target_typ": 345, "function_supported_dtyp": 345, "function_unsupported_dtyp": 345, "discov": 345, "unsupported_dtyp": 345, "invalid_dtyp": 345, "former": [345, 348, 355], "uint": [345, 356], "lack": [345, 354, 1761, 1768], "rang": [345, 349, 357, 361, 364, 365, 366, 1751, 1761, 1767], "patch": [345, 1761], "achiev": [345, 350, 353, 357, 364, 366, 1750], "subtl": [345, 358, 1767], "unsign": [345, 356, 361], "offici": [345, 361], "inconsist": [345, 349], "unexpect": 345, "84530": 345, "unwarr": 345, "risk": [345, 1767], "needlessli": 345, "bloat": 345, "undergo": [345, 378], "supported_dtyp": [345, 355], "unsupported_devic": 345, "supported_devic": 345, "slight": [345, 365], "downsid": 345, "coverag": [345, 357], "inflat": 345, "idx": [346, 363], "tpu": [346, 1761, 1764], "get_all_ivy_arrays_on_dev": 346, "aliv": 346, "num_gpu": [346, 357], "total_mem_on_dev": 346, "dev_util": 346, "num_cpu_cor": 346, "default_devic": [346, 349], "outsid": [346, 350, 352, 363, 1766], "dual": 346, "categor": [346, 352, 355], "thrown": [346, 349, 378], "far": [346, 347, 362, 1766, 1767], "set_default_devic": 346, "eight": [347, 360], "func_nam": [347, 348, 352, 355], "static_func_nam": 347, "__": [347, 364], "op_nam": 347, "__r": 347, "combinatori": 347, "variat": [347, 357], "grid": [347, 357, 377], "unus": [347, 350, 354], "okai": [347, 359, 361], "showcas": [347, 377], "meant": 347, "imaginari": 347, "spec": [347, 348], "my_func": [347, 358], "some_flag": 347, "another_flag": 347, "jointli": 347, "x0": 347, "5574077": 347, "1850398": 347, "5463025": 347, "8422884": 347, "91601413": 347, "9647598": 347, "3738229": 347, "1597457": 347, "0963247": 347, "9955841": 347, "3278579": 347, "multi": [347, 360, 378, 1751, 1757, 1759, 1761, 1765], "pars": [347, 378], "satisfi": [347, 357], "asid": [347, 377], "increasingli": 347, "14254655": 347, "1578213": 347, "380515": 347, "143": 347, "38": 347, "trivial": 347, "exlud": 347, "__radd__": [347, 348, 355], "failing_fn_nam": 347, "onlin": [347, 348], "minutest": 347, "suffici": 347, "segment": 347, "fault": [347, 1761], "contrast": [348, 351, 355, 1767], "instanti": 348, "templat": [348, 357, 1751], "array_api": 348, "raw": [348, 1762], "preview": 348, "newlin": 348, "render": 348, "incorrectli": 348, "domain": [348, 1759, 1761], "codomain": 348, "ref": [348, 361], "needless": [348, 356], "info": [348, 357, 1751], "subset": [348, 351, 355, 357, 361, 1761], "renam": 348, "judgment": 348, "beyond": [348, 355, 1767], "pure": [348, 351, 355, 359, 363, 366, 378, 1761, 1767, 1768], "operator_nam": 348, "succinct": 348, "contstructor": 348, "_forward": [348, 361, 364, 365, 1751], "docst": 348, "ivyexcept": [349, 355], "super": [349, 361, 364, 365, 366], "ivybackendexcept": 349, "_default": 349, "current_backend_str": [349, 361, 363], "_delimit": 349, "indexerror": 349, "ivyerror": 349, "repetit": 349, "caught": 349, "fn": [349, 355, 361], "functool": [349, 355, 363], "new_fn": [349, 355], "__name__": 349, "current_backend": [349, 352, 355, 358, 361], "comparison": 349, "error_stack": 349, "axiserror": 349, "bound": [349, 357, 361, 1767], "got": [349, 1751], "assertionerror": [349, 357], "elif": [349, 354, 355], "polici": [349, 357, 377], "moreov": 349, "cleaner": [349, 364], "check_less": 349, "allow_equ": 349, "lesser": 349, "set_split_factor": 349, "split_factor": 349, "met": 349, "flake8": 350, "undefin": 350, "statement": [350, 354, 357, 359, 378], "handler": [350, 360, 362, 366, 1750, 1751], "annot": [350, 351], "star": 350, "byte": [350, 1766, 1767], "notimpl": 350, "notimplementederror": 350, "unsuccess": 350, "reformat": 350, "exceed": 350, "black": 350, "disobei": 350, "taken": [350, 358, 366, 1762], "successfulli": 350, "inde": [350, 351, 359, 378, 1759], "adress": 351, "revisit": 351, "dedic": [351, 363, 365], "to_native_arrays_and_back": [351, 353, 361], "usabl": [351, 358], "sole": [351, 358, 1760, 1761, 1762], "strictli": [351, 354], "linspac": [351, 359, 361, 1751, 1768], "endpoint": 351, "rational": 351, "__div__": [351, 359], "dicat": 351, "futher": 351, "pep": 351, "484": 351, "brittl": 351, "freeli": 351, "technic": [351, 354, 378, 1761, 1763], "original_typ": 351, "cumbersom": 351, "omit": [351, 354, 355], "venn": 352, "diagram": [352, 1767], "light": [352, 355, 378, 1750, 1762, 1767], "array_arg": 352, "cache_fn": 352, "cach": [352, 357], "deal": [352, 356, 378], "modif": [352, 1761], "briefli": [352, 357, 364], "get_all_arrays_on_dev": 352, "nested_map": 352, "index_nest": 352, "inputs_to_ivy_arrai": 353, "heavili": [353, 355, 378], "facilit": 353, "integer_array_to_float": 353, "handle_cmd_line_arg": [353, 356, 357], "as_vari": [353, 356, 357], "with_out": [353, 356, 357], "instance_method": [353, 357], "test_gradi": 353, "topic": [353, 363, 1761], "suffic": [353, 357], "program": [354, 1758, 1759, 1761, 1764, 1765, 1768], "ration": [354, 359], "speak": 354, "x_nativ": 354, "val_n": 354, "unspecifi": 354, "predominantli": [354, 358, 377], "support_native_out": 354, "math": [354, 355, 357, 366, 1751, 1759], "mx": 354, "nd": 354, "_wrap_fn": 354, "dim0": 354, "dim1": 354, "maxim": [354, 359, 361, 1758, 1759, 1763, 1764, 1765], "third": [354, 378, 1760, 1761, 1767], "leverag": [354, 1759, 1761], "capabl": [354, 359], "input_arrai": 354, "plai": [355, 357, 366, 1761, 1764], "tf_frontend": 355, "lax": [355, 356, 359, 366, 378], "neither": [355, 359], "fn_tree": [355, 356], "wrong": [355, 359], "carefulli": [355, 1759, 1764], "acceler": [355, 1751, 1759, 1763, 1764, 1765, 1766], "algebra": [355, 1479, 1759, 1760, 1761, 1764, 1768], "xla": [355, 378, 1750, 1761], "decompos": 355, "dynamic": 355, "extent": 355, "mimic": 355, "arithmetic_oper": 355, "same_kind": 355, "subok": [355, 356, 359], "as_ivy_dtyp": 355, "recov": 355, "obtain": 355, "unhandl": 355, "seek": 355, "subclass": [355, 359], "trigonometric_funct": 355, "from_zero_dim_arrays_to_float": 355, "pointwise_op": 355, "resid": [355, 361, 365], "preferred_element_typ": 355, "conv_general_dil": 355, "finer": 355, "nor": [355, 1765], "margin": 355, "fit": [355, 361, 1757, 1758, 1761], "meet": 355, "criteria": 355, "incorpor": [355, 364, 1761], "omiss": 355, "median": 355, "sensibl": 355, "deem": 355, "reserv": 355, "resum": 355, "possibli": [355, 357, 378], "straight": [355, 357, 363, 1751], "ahead": [355, 1761], "heavi": [355, 356, 359, 1762], "logicaland": 355, "truth": [355, 357], "np_frontend": 355, "radd": 355, "_init_data": 355, "isinst": [355, 357, 358, 365, 366], "_process_str_data": 355, "check_equ": 355, "2d": 355, "_shape": [355, 363], "_dtype": [355, 363], "govern": 355, "promote_types_of_": 355, "_input": 355, "promote_types_of_tensorflow_input": 355, "saniti": 355, "handle_numpy_cast": 355, "func_wrapp": 355, "to_ivy_arrays_and_back": [355, 356], "handle_numpy_casting_speci": 355, "check_elem_in_list": 355, "equiv": 355, "safe": 355, "unsaf": 355, "array_type_test": 355, "watch": 355, "youtub": 355, "seri": [355, 357, 1761, 1763], "jump": 356, "knowledg": 356, "test_frontend_funct": 356, "lift": [356, 1762], "get_dtyp": [356, 357], "dtype_and_valu": [356, 357], "num_positional_arg": [356, 357], "get_shap": [356, 357], "np_frontend_help": 356, "nn": [356, 359, 366, 1751, 1762], "test_jax": 356, "test_jax_lax_oper": 356, "dtype_and_x": [356, 357], "available_dtyp": [356, 357], "test_jax_lax_tan": 356, "input_dtyp": [356, 357], "as_variable_flag": [356, 357], "native_array_flag": [356, 357], "test_numpi": 356, "test_mathematical_funct": 356, "test_np_trigonometric_funct": 356, "test_numpy_tan": 356, "handle_where_and_array_bool": 356, "test_tensorflow": 356, "test_math": 356, "test_tensorflow_tan": 356, "test_torch": 356, "test_non_linear_activation_funct": 356, "st": [356, 357], "min_valu": [356, 357], "max_valu": [356, 357], "with_inplac": 356, "test_torch_leaky_relu": 356, "negative_slop": 356, "_fill_valu": 356, "allow_non": [356, 357], "min_num_dim": [356, 357], "max_num_dim": [356, 357], "min_dim_s": [356, 357], "max_dim_s": 356, "test_jax_lax_ful": 356, "test_from_shape_or_valu": 356, "test_numpy_ful": 356, "test_tf_funct": 356, "test_tensorflow_ful": 356, "discrep": 356, "test_creation_op": 356, "_requires_grad": 356, "test_torch_ful": 356, "accommod": 356, "walkthrough": 356, "torch_frontend": 356, "gt": [356, 361], "comparison_op": 356, "promote_types_of_torch_input": 356, "test_comparison_op": 356, "dtype_and_input": 356, "num_arrai": [356, 357], "allow_inf": [356, 357], "shared_dtyp": 356, "test_torch_great": 356, "has_alias": 356, "all_alias": 356, "test_frontend_instance_method": 356, "frontend_class": 356, "test_jax_devicearrai": 356, "test_jax_instance_add": 356, "test_frontend_array_instance_method": 356, "test_ndarrai": 356, "test_numpy_ndarray_add": 356, "test_frontend_method": 356, "input_dtypes_init": 356, "as_variable_flags_init": 356, "num_positional_args_init": 356, "native_array_flags_init": 356, "all_as_kwargs_np_init": 356, "input_dtypes_method": 356, "as_variable_flags_method": 356, "num_positional_args_method": 356, "native_array_flags_method": 356, "all_as_kwargs_np_method": 356, "class_nam": 356, "method_nam": 356, "test_tensor": 356, "test_tensorflow_instance_add": 356, "1e04": 356, "1e06": 356, "allow_infin": 356, "test_torch_instance_add": 356, "somewhat": [356, 378, 1761], "value_test": 356, "dtype_x": 356, "test_jax_special_add": 356, "ret_gt": 356, "flatten_and_to_np": 356, "zip": [356, 361], "ret_from_gt": 356, "ground_truth_backend": 356, "_arrays_idx_n_dtyp": 356, "test_manipul": [356, 357], "surprisingli": 356, "cat": [356, 359, 361, 366], "closest_relevant_group": 356, "strive": [356, 357, 359, 378, 1763], "cycl": 357, "And": 357, "exhaust": [357, 1758, 1767], "fixtur": 357, "300": 357, "hit": [357, 361], "eleg": [357, 1761], "intellig": [357, 359, 1763], "unexplor": 357, "repeatedli": 357, "upload": 357, "artifact": 357, "parametr": [357, 1761], "impli": 357, "bespok": 357, "_array_or_typ": 357, "standalon": [357, 1750, 1757, 1762, 1767, 1768], "test_default_int_dtyp": 357, "clariti": [357, 359, 1761], "print_hypothesis_exampl": 357, "searchstrategi": 357, "custom_strategi": 357, "sampled_from": 357, "randomis": 357, "simplist": 357, "intricaci": 357, "one_of": 357, "datum": 357, "pipe": 357, "overload": 357, "shorthand": 357, "flatmap": 357, "suppos": 357, "scaler": 357, "array_or_scal": 357, "len_of_arrai": 357, "interact": [357, 1751, 1760, 1761, 1766], "bodi": 357, "reusabl": [357, 378, 1759, 1761], "snippet": 357, "container_flag": 357, "thankfulli": 357, "advis": 357, "seamlessli": 357, "encount": 357, "criterion": 357, "array_valu": 357, "valid_ax": 357, "craft": 357, "hoc": 357, "intersect": [357, 377], "44758124e": 357, "308": 357, "11228": 357, "456": 357, "268": 357, "wherev": 357, "dtype_values_axi": 357, "9622": 357, "28136": 357, "6375": 357, "12720": 357, "21354": 357, "900e": 357, "00": 357, "955e": 357, "exclude_min": 357, "large_abs_safety_factor": 357, "safety_factor_scal": 357, "57384": 357, "25687": 357, "248": 357, "array_dtyp": 357, "min_siz": 357, "max_siz": 357, "array_bool": 357, "na": 357, "treat": [357, 362, 366], "anyth": [357, 358, 1761, 1762], "test_devic": 357, "array_shap": 357, "common_shap": 357, "test_lay": 357, "size_bound": 357, "reshape_shap": 357, "stand": 357, "fashion": 357, "some_sequ": 357, "allow_nan": 357, "allow_subnorm": 357, "get_bound": 357, "arrays_valu": 357, "73": 357, "36418": 357, "213": 357, "21716926": 357, "none_or_list_of_float": 357, "get_prob": 357, "get_mean_std": 357, "103515625e": 357, "099609375": 357, "probabilist": 357, "get_axi": 357, "number_positional_argu": 357, "unreproduc": 357, "test_valu": 357, "enough": [357, 363, 364, 365], "report": 357, "ivy_np": 357, "valid_float_dtyp": 357, "test_demo": 357, "falsifi": 357, "failing_test": 357, "traceback": 357, "file_nam": [357, 358], "123": 357, "shrink": 357, "prescrib": 357, "closest": [357, 359], "scratch": 357, "databas": 357, "therebi": 357, "test_gelu": 357, "test_fil": 357, "brief": 357, "phase": [357, 378, 1761], "notabl": [357, 1761], "verbos": [357, 361, 1751], "newer": 357, "max_exampl": 357, "impact": [357, 365, 1763], "deadlin": 357, "weird": 357, "systemat": 357, "safeguard": 357, "inabl": 357, "test_result_typ": 357, "9090909090909091": 357, "linear_algebra": 358, "judgement": 358, "some_namespac": 358, "some_backend": 358, "another_backend": 358, "refactor": 358, "ongo": 358, "op": [358, 361, 378], "cooler": 358, "something_cool": 358, "clean": [358, 359, 361, 362, 364], "_assert_fill_value_and_dtype_are_compat": 358, "_to_devic": 358, "focus": [358, 377, 1759, 1760, 1761, 1767, 1768], "prior": 358, "older": 358, "grow": [358, 1751, 1761], "unbound": 358, "battl": 358, "face": [359, 361, 1761, 1767], "answer": [359, 363, 378], "contradict": 359, "entail": 359, "sacrif": 359, "dimems": 359, "noth": [359, 1767], "conv": 359, "jacfwd": 359, "jacrev": 359, "banner": 359, "pointwis": 359, "unnecessari": 359, "fuse": 359, "tensorrt": 359, "highli": [359, 1761], "expens": 359, "incredibli": [359, 364, 378, 1764], "six": 359, "__gt__": 359, "price": 359, "pai": 359, "intrus": 359, "x_beta": 359, "equip": 359, "deliber": 359, "ey": [359, 366], "priorit": 359, "simplif": 359, "allevi": 359, "ineffici": [359, 378, 1761], "arriv": 359, "fledg": [361, 362], "syntact": [361, 366], "logspac": 361, "construct": [361, 365, 366, 1759, 1761, 1768], "power_seq": 361, "backend_stack": 361, "cprint": 361, "_determine_backend_from_arg": 361, "importlib": 361, "import_modul": 361, "_backend_dict": 361, "illustr": [361, 377], "un": 361, "unrol": [361, 364], "lstm": [361, 1761], "cell": 361, "hidden": [361, 365], "recurr": [361, 1761, 1765], "timestep": 361, "x_shape": 361, "input_channel": [361, 365], "x_flat": 361, "wi": 361, "wi_x": 361, "wii_x": 361, "wif_x": 361, "wig_x": 361, "wio_x": 361, "wh": 361, "ht": 361, "ct": 361, "hts_list": 361, "wii_xt": 361, "wif_xt": 361, "wig_xt": 361, "wio_xt": 361, "htm1": 361, "ctm1": 361, "wh_htm1": 361, "whi_htm1": 361, "whf_htm1": 361, "whg_htm1": 361, "who_htm1": 361, "ft": 361, "ot": 361, "reliabl": 361, "sacrific": 361, "hear": 361, "virtu": [361, 1758], "pure_ivi": 361, "compile_graph": [361, 366], "pure_torch": 361, "backbon": [361, 364], "_layer": 361, "random_unifrom": 361, "unclean": 361, "wx": 361, "temp": 361, "ivy_func": 361, "emphas": 361, "torchscript": [361, 1750, 1768], "example_input": 361, "static_argnum": 361, "static_argnam": 361, "jit": [361, 378, 1761], "primit": [362, 378, 1759, 1761], "upcom": 362, "hierarch": [362, 364, 365, 1761], "_init": 363, "_size": 363, "mul": 363, "_devic": 363, "_dev_str": 363, "as_ivy_dev": 363, "_pre_repr": 363, "_post_repr": 363, "framework_str": 363, "noinspect": 363, "pypep8nam": 363, "mt": 363, "typeerror": 363, "immut": 363, "claim": 363, "truli": 363, "_native_wrapp": 363, "attributeerror": 363, "genuin": 363, "some_method": 363, "rewritten": 363, "__pow__": 363, "strang": 363, "compartment": 363, "public": [363, 1764], "newshap": 363, "new_shap": 363, "tidi": 363, "shorter": 363, "crystal": 363, "50": 363, "ton": 364, "ado": [364, 365], "soup": 364, "walk": [364, 365], "dct": 364, "cnt": 364, "combo": 364, "1000": 364, "3333335": 364, "Or": 364, "200": 364, "grad": [364, 365, 366, 1751], "delimit": 364, "autocomplet": 364, "midwai": 364, "agent": 364, "total_spe": 364, "total_height": 364, "total_width": 364, "ag": 364, "tot": 364, "total_": 364, "total_h": 364, "disk": [364, 1760], "hdf5": 364, "to_disk_as_hdf5": 364, "from_disk_as_hdf5": 364, "same_arrai": 364, "to_disk_as_pickl": 364, "from_disk_as_pickl": 364, "dataset": [364, 376, 1751], "to_disk_as_json": 364, "from_disk_as_json": 364, "cnt0": 364, "cnt1": 364, "deep_copi": 364, "diff_0": 364, "diff_1": 364, "config0": 364, "config1": 364, "decod": 364, "l0": 364, "truncat": 364, "flatten_key_chain": 364, "above_height": 364, "decoder__l0": 364, "decoder__l1": 364, "encoder__l0": 364, "encoder__l1": 364, "height": 364, "below_depth": 364, "l0__b": 364, "l0__w": 364, "l1__b": 364, "l1__w": 364, "with_print_limit": 364, "printabl": 364, "with_key_length_limit": 364, "with_print_ind": 364, "indent": 364, "obviou": [364, 1761], "foresight": 364, "untidili": 364, "update_ag": 364, "normalize_img": 364, "img": 364, "img_max": 364, "reduce_max": [364, 1751], "img_min": 364, "reduce_min": [364, 1751], "img_rang": 364, "agent_posit": 364, "agent_veloc": 364, "agent_cam_front_rgb": 364, "agent_cam_front_depth": 364, "agent_cam_rear_rgb": 364, "agent_cam_rear_depth": 364, "agent_cam_lidar": 364, "camera": 364, "front_rgb": 364, "front_depth": 364, "rear_rgb": 364, "rear_depth": 364, "lidar": 364, "rgb": 364, "rear": 364, "veloc": 364, "cam": 364, "cam_max": 364, "cam_min": 364, "cam_rang": 364, "Of": [364, 1766, 1767], "perman": 364, "thread": [364, 1761], "multiprocess": [364, 378], "queue": 364, "pretti": [364, 1767], "dataload": [364, 376, 1751], "_cnt": 364, "img_": 364, "_dataset_s": 364, "_batch_siz": 364, "_count": [364, 365], "__next__": 364, "filenam": 364, "img_fnam": 364, "list_stack": 364, "fname": 364, "loaded_img": 364, "cv2": 364, "imread": 364, "from_numpi": 364, "loader": [364, 378], "batch_slic": 364, "model": [364, 365, 1750, 1751, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1767, 1768], "mymodel": [364, 1751], "linear0": [364, 365, 1751], "linear1": [364, 365, 1751], "x_in": [364, 365, 366, 1751], "loss_fn": [364, 365, 366, 1751], "reduce_mean": [364, 365, 366, 1751], "execute_with_gradi": [364, 365, 366, 378, 1751], "0145": 364, "grad_fn": 364, "addbackward0": 364, "_create_vari": 365, "output_channel": 365, "with_bia": 365, "_input_channel": 365, "_output_channel": 365, "_w_shape": 365, "_b_shape": 365, "_with_bia": 365, "729": 365, "396": 365, "764": 365, "872": 365, "211": 365, "439": 365, "644": 365, "nightmar": 365, "overcom": 365, "fc": 365, "v0": 365, "v1": 365, "key0": 365, "key1": 365, "linear3": 365, "v2": 365, "counter": 365, "fed": 365, "weight_initi": 365, "glorotuniform": 365, "bias_initi": 365, "_w_init": 365, "_b_init": 365, "create_vari": 365, "var_shap": 365, "fan_out": 365, "fan_in": 365, "fan_mod": 365, "fan_sum": 365, "misnom": 365, "saw": 365, "vanilla": [365, 1761], "compile_on_next_step": 365, "_beta1": 365, "_beta2": 365, "_epsilon": 365, "_mw": 365, "_vw": 365, "_first_pass": 365, "_should_compil": 365, "_step": 365, "new_v": 365, "_lr": 365, "_inplac": 365, "_stop_gradi": 365, "set_stat": 365, "clamp": 366, "clip_by_valu": 366, "captur": [366, 1762], "sparse_funct": 366, "num_class": 366, "new_axi": 366, "constitu": 366, "_linear": 366, "jax_graph": 366, "to_backend": 366, "to_ivy_modul": 366, "thinli": 366, "whilst": [366, 1750, 1761], "to_haiku_modul": 366, "hk": 366, "loss_fn_t": 366, "without_apply_rng": 366, "rng": 366, "prngkei": 366, "param": 366, "update_rul": 366, "tree_multimap": 366, "mechan": [376, 378, 1751], "robot": [376, 1751], "perfect": 377, "3d": 377, "differenti": [377, 1761], "orient": 377, "pose": 377, "largest": 377, "euler": 377, "quaternion": 377, "rotat": 377, "ivy_mech": 377, "target_facing_rotation_matrix": 377, "polar_to_cartesian_coord": 377, "ordin": 377, "warp": 377, "optic": 377, "voxel": 377, "ivy_vis": 377, "coords_to_voxel_grid": 377, "render_pixel_coord": 377, "neural": [377, 1751, 1757, 1759, 1760, 1761, 1765, 1767, 1768], "radianc": 377, "nerf": 377, "trajectori": 377, "motion": 377, "plan": [377, 1751], "mobil": [377, 1761], "sample_spline_path": 377, "rigidmobil": 377, "sample_bodi": 377, "drone": 377, "sample_link": 377, "openai": 377, "swimmer": 377, "reward": 377, "supervis": 377, "reinforc": 377, "door": [377, 378], "cartpol": 377, "mountain_car": 377, "pendulum": 377, "reacher": 377, "learnt": 377, "ture": 377, "ntm": 377, "egospher": 377, "spatial": 377, "esm": 377, "ivy_memori": 377, "egocentr": 377, "room": 377, "inspir": 377, "doubt": 378, "grate": 378, "probe": 378, "remark": 378, "surpris": 378, "lock": 378, "gold": 378, "dex": 378, "ye": 378, "scan": 378, "tricki": [378, 1750], "predictor": 378, "tight": 378, "driver": 378, "schedul": [378, 1761, 1768], "Will": 378, "ast": 378, "cond": 378, "jacobian": [378, 1761], "checkpoint": 378, "autodiff": 378, "shine": 378, "merci": 378, "autograd": 378, "cluster": [378, 1761], "compet": [378, 1761], "paradigm": [378, 1761], "parallelis": 378, "spmd": 378, "mixtur": 378, "expert": 378, "sophist": 378, "depart": 378, "routin": [378, 1761], "hundr": 378, "thousand": 378, "deepli": [378, 1761], "broadli": [378, 1767], "supplementari": 378, "fanci": [378, 1761], "fusion": [378, 1765], "lose": 378, "vmap": [378, 1761], "pmap": 378, "overhead": [378, 1764], "eventu": 378, "supplement": 378, "backdoor": 378, "callback": 378, "load": [378, 1760, 1767], "record": [378, 1762], "metric": 378, "outsourc": 378, "is_ivy_sparse_arrai": 456, "nail": 1750, "retain": 1750, "funtion": 1750, "asset": 1750, "functiona": 1750, "scientist": 1750, "deploi": [1750, 1759, 1760, 1761, 1763, 1767], "correl": 1750, "analyz": 1750, "ai": [1751, 1759, 1763], "colab": 1751, "sharp": 1751, "favorit": 1751, "jax_concat": 1751, "tf_concat": 1751, "np_concat": 1751, "torch_concat": 1751, "get_devic": 1751, "reduce_prod": 1751, "reduce_sum": 1751, "gradient_imag": 1751, "indices_wher": 1751, "bilinear_resampl": 1751, "stack_imag": 1751, "neural_net": 1751, "floormod": 1751, "articl": 1751, "lenton2021ivi": 1751, "inter": 1751, "portabl": [1751, 1759], "lenton": 1751, "daniel": 1751, "pardo": 1751, "fabio": 1751, "falck": 1751, "fabian": 1751, "jame": 1751, "stephen": 1751, "clark": 1751, "ronald": 1751, "journal": 1751, "arxiv": 1751, "preprint": 1751, "2102": 1751, "02886": 1751, "2021": 1751, "conceptu": [1757, 1762], "broken": [1757, 1761], "tracer": 1757, "infrastructur": [1757, 1763, 1764], "vendor": [1757, 1763], "complimentari": [1757, 1767], "acycl": [1757, 1762], "insert_numb": 1758, "insert_t": 1758, "scaffold": [1759, 1767], "heart": 1759, "toolchain": [1759, 1764], "intermedi": [1759, 1760, 1761, 1762, 1767], "ir": [1759, 1762, 1767], "assembli": [1759, 1766, 1767], "idl": 1759, "middl": 1759, "emit": 1759, "gnu": [1759, 1764], "gcc": [1759, 1766], "broader": 1759, "heterogen": 1759, "aid": 1759, "coprocessor": 1759, "programm": [1759, 1766], "gate": 1759, "onednn": 1759, "awai": [1759, 1761], "complementari": [1759, 1767], "sit": [1759, 1762, 1767], "tandem": 1759, "possess": 1759, "underneath": 1759, "export": [1760, 1767], "signal": [1760, 1761], "khrono": [1760, 1766], "appl": 1760, "coremltool": 1760, "albeit": 1760, "promin": 1761, "abbrevi": 1761, "laboratori": 1761, "proprietari": [1761, 1765, 1766], "mathwork": 1761, "commerci": 1761, "1984": 1761, "plot": 1761, "toolbox": 1761, "mupad": 1761, "engin": [1761, 1763, 1764], "simulink": 1761, "graphic": [1761, 1765, 1766], "simul": 1761, "embed": 1761, "million": [1761, 1764], "worldwid": 1761, "scienc": [1761, 1763], "econom": 1761, "2001": 1761, "scientif": 1761, "interpol": 1761, "od": 1761, "solver": 1761, "fortran": [1761, 1765], "cython": 1761, "friendli": 1761, "2002": 1761, "lua": 1761, "luajit": 1761, "idiap": 1761, "epfl": 1761, "2005": 1761, "numarrai": 1761, "cpython": 1761, "partli": 1761, "multidimension": 1761, "2007": 1761, "classif": 1761, "regress": [1761, 1768], "forest": 1761, "boost": 1761, "dbscan": 1761, "inbuilt": 1761, "esqu": 1761, "aesara": 1761, "2008": 1761, "analysi": [1761, 1762], "datafram": 1761, "slice": 1761, "critic": [1761, 1767], "2012": 1761, "Its": 1761, "polymorph": 1761, "parallel": [1761, 1765, 1766], "mpi": 1761, "openmp": 1761, "glue": 1761, "jaot": 1761, "nasa": 1761, "cern": 1761, "climat": 1761, "allianc": 1761, "influenti": 1761, "2014": 1761, "analyt": [1761, 1763, 1767], "scala": 1761, "ship": 1761, "forgiv": 1761, "decemb": 1761, "2019": [1761, 1764], "announc": 1761, "transit": 1761, "mainten": 1761, "v7": 1761, "meaning": 1761, "2016": 1761, "imper": 1761, "fast": 1761, "amazon": 1761, "traction": 1761, "cognit": [1761, 1768], "toolkit": [1761, 1762, 1768], "grade": 1761, "realiz": 1761, "feed": [1761, 1762], "dnn": 1761, "cnn": 1761, "rnn": 1761, "stochast": 1761, "sgd": 1761, "backpropag": 1761, "succumb": 1761, "came": 1761, "asynchron": 1761, "monitor": 1761, "practition": [1761, 1765, 1766, 1767], "hobbyist": 1761, "tremend": 1761, "ecosystem": 1761, "gear": 1761, "batteri": 1761, "zygot": 1761, "jl": 1761, "workload": 1761, "daggerflux": 1761, "frontier": 1761, "hessian": 1761, "2018": 1761, "lightweight": [1761, 1768], "shortcom": 1761, "eas": 1761, "barrier": 1761, "inexperienc": 1761, "underdevelop": 1761, "fanat": 1761, "ounc": 1761, "infanc": 1761, "emerg": 1761, "nich": 1761, "introduct": 1761, "lite": 1761, "enterpris": 1761, "reinvent": [1761, 1763], "inertia": 1761, "haven": 1761, "creator": [1761, 1763], "paszk": 1761, "hi": 1761, "safeti": 1761, "bulk": 1761, "haskel": 1761, "dataflow": 1762, "distil": 1762, "essenc": [1762, 1767], "enclos": 1762, "scope": [1762, 1766], "trace_modul": 1762, "scriptfunct": 1762, "scriptmodul": 1762, "fake": 1762, "proxi": 1762, "site": 1762, "graphmodul": 1762, "travi": 1763, "oliph": 1763, "leader": 1763, "led": 1763, "cornerston": 1763, "numba": 1763, "numfocu": 1763, "pydata": 1763, "confer": 1763, "consult": 1763, "servic": 1763, "expertis": 1763, "devop": 1763, "mlop": 1763, "dashboard": 1763, "startup": 1763, "mlir": [1763, 1764, 1767], "Their": 1763, "held": 1763, "privileg": 1763, "presum": 1763, "llvm": [1763, 1766], "founder": 1763, "tvm": [1763, 1767], "sustain": 1763, "empow": 1763, "har": 1763, "burden": 1763, "benchmark": 1763, "convention": 1764, "precompil": 1764, "executor": 1764, "exploit": 1764, "julia": [1764, 1767], "fsf": 1764, "gpl": 1764, "roughli": 1764, "biggest": [1764, 1767], "nvidia": [1765, 1766], "conduct": 1765, "throughput": 1765, "autotun": 1765, "consumpt": 1765, "gpgpu": 1765, "talk": 1766, "classic": 1766, "sycl": 1766, "dpc": 1766, "processor": 1766, "x86": 1766, "oneapi": 1766, "ia": 1766, "aka": 1766, "xeon": 1766, "gen9": 1766, "xe": 1766, "card": 1766, "arria": 1766, "gx": 1766, "fpga": 1766, "tune": [1766, 1767], "lofti": 1767, "ambit": 1767, "realm": 1767, "bedrock": 1767, "flux": 1767, "bite": 1767, "chew": 1767, "eagerpi": 1767, "tensorli": 1767, "thinc": 1767, "neuropod": 1767, "exhibit": 1767, "emploi": 1767, "fx": 1767, "retrain": 1767, "wider": 1767, "closer": 1767, "greatli": 1767, "challeng": 1767, "modular": 1767, "anywher": 1767, "switch": 1768, "theano": 1768, "plaidml": 1768, "partial_svd": 1768, "kron": 1768, "tucker_mode_dot": 1768, "excel": 1768, "subsystem": 1768}, "objects": {"ivy.array": [[45, 0, 0, "-", "activations"], [49, 0, 0, "-", "conversions"], [54, 0, 0, "-", "creation"], [56, 0, 0, "-", "data_type"], [58, 0, 0, "-", "device"], [60, 0, 0, "-", "elementwise"], [140, 0, 0, "-", "general"], [142, 0, 0, "-", "gradients"], [144, 0, 0, "-", "image"], [146, 0, 0, "-", "layers"], [148, 0, 0, "-", "linalg"], [150, 0, 0, "-", "losses"], [152, 0, 0, "-", "manipulation"], [154, 0, 0, "-", "norms"], [156, 0, 0, "-", "random"], [158, 0, 0, "-", "searching"], [160, 0, 0, "-", "set"], [162, 0, 0, "-", "sorting"], [164, 0, 0, "-", "statistical"], [166, 0, 0, "-", "utility"], [168, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[46, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[46, 2, 1, "", "gelu"], [46, 2, 1, "", "leaky_relu"], [46, 2, 1, "", "log_softmax"], [46, 2, 1, "", "relu"], [46, 2, 1, "", "sigmoid"], [46, 2, 1, "", "softmax"], [46, 2, 1, "", "softplus"]], "ivy.array.conversions": [[50, 3, 1, "", "args_to_ivy"], [51, 3, 1, "", "args_to_native"], [52, 3, 1, "", "to_ivy"], [53, 3, 1, "", "to_native"]], "ivy.array.creation": [[55, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[55, 2, 1, "", "asarray"], [55, 2, 1, "", "copy_array"], [55, 2, 1, "", "empty_like"], [55, 2, 1, "", "from_dlpack"], [55, 2, 1, "", "full_like"], [55, 2, 1, "", "meshgrid"], [55, 2, 1, "", "native_array"], [55, 2, 1, "", "one_hot"], [55, 2, 1, "", "ones_like"], [55, 2, 1, "", "tril"], [55, 2, 1, "", "triu"], [55, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[57, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[57, 2, 1, "", "astype"], [57, 2, 1, "", "broadcast_arrays"], [57, 2, 1, "", "broadcast_to"], [57, 2, 1, "", "can_cast"], [57, 2, 1, "", "dtype"], [57, 2, 1, "", "finfo"], [57, 2, 1, "", "iinfo"], [57, 2, 1, "", "is_bool_dtype"], [57, 2, 1, "", "is_float_dtype"], [57, 2, 1, "", "is_int_dtype"], [57, 2, 1, "", "is_uint_dtype"], [57, 2, 1, "", "result_type"]], "ivy.array.device": [[59, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[59, 2, 1, "", "dev"], [59, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[61, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[61, 2, 1, "", "abs"], [61, 2, 1, "", "acos"], [61, 2, 1, "", "acosh"], [61, 2, 1, "", "add"], [61, 2, 1, "", "asin"], [61, 2, 1, "", "asinh"], [61, 2, 1, "", "atan"], [61, 2, 1, "", "atan2"], [61, 2, 1, "", "atanh"], [61, 2, 1, "", "bitwise_and"], [61, 2, 1, "", "bitwise_invert"], [61, 2, 1, "", "bitwise_left_shift"], [61, 2, 1, "", "bitwise_or"], [61, 2, 1, "", "bitwise_right_shift"], [61, 2, 1, "", "bitwise_xor"], [61, 2, 1, "", "ceil"], [61, 2, 1, "", "cos"], [61, 2, 1, "", "cosh"], [61, 2, 1, "", "deg2rad"], [61, 2, 1, "", "divide"], [61, 2, 1, "", "equal"], [61, 2, 1, "", "erf"], [61, 2, 1, "", "exp"], [61, 2, 1, "", "expm1"], [61, 2, 1, "", "floor"], [61, 2, 1, "", "floor_divide"], [61, 2, 1, "", "greater"], [61, 2, 1, "", "greater_equal"], [61, 2, 1, "", "isfinite"], [61, 2, 1, "", "isinf"], [61, 2, 1, "", "isnan"], [61, 2, 1, "", "isreal"], [61, 2, 1, "", "less"], [61, 2, 1, "", "less_equal"], [61, 2, 1, "", "log"], [61, 2, 1, "", "log10"], [61, 2, 1, "", "log1p"], [61, 2, 1, "", "log2"], [61, 2, 1, "", "logaddexp"], [61, 2, 1, "", "logical_and"], [61, 2, 1, "", "logical_not"], [61, 2, 1, "", "logical_or"], [61, 2, 1, "", "logical_xor"], [61, 2, 1, "", "maximum"], [61, 2, 1, "", "minimum"], [61, 2, 1, "", "multiply"], [61, 2, 1, "", "negative"], [61, 2, 1, "", "not_equal"], [61, 2, 1, "", "positive"], [61, 2, 1, "", "pow"], [61, 2, 1, "", "rad2deg"], [61, 2, 1, "", "reciprocal"], [61, 2, 1, "", "remainder"], [61, 2, 1, "", "round"], [61, 2, 1, "", "sign"], [61, 2, 1, "", "sin"], [61, 2, 1, "", "sinh"], [61, 2, 1, "", "sqrt"], [61, 2, 1, "", "square"], [61, 2, 1, "", "subtract"], [61, 2, 1, "", "tan"], [61, 2, 1, "", "tanh"], [61, 2, 1, "", "trunc"], [61, 2, 1, "", "trunc_divide"]], "ivy.array.experimental": [[63, 0, 0, "-", "activations"], [101, 0, 0, "-", "conversions"], [103, 0, 0, "-", "creation"], [105, 0, 0, "-", "data_type"], [107, 0, 0, "-", "device"], [109, 0, 0, "-", "elementwise"], [111, 0, 0, "-", "general"], [113, 0, 0, "-", "gradients"], [115, 0, 0, "-", "image"]], "ivy.array.experimental.activations": [[64, 1, 1, "", "ArrayWithActivationsExperimental"]], "ivy.array.experimental.conversions": [[102, 1, 1, "", "ArrayWithConversionsExperimental"]], "ivy.array.experimental.creation": [[104, 1, 1, "", "ArrayWithCreationExperimental"]], "ivy.array.experimental.data_type": [[106, 1, 1, "", "ArrayWithData_typeExperimental"]], "ivy.array.experimental.device": [[108, 1, 1, "", "ArrayWithDeviceExperimental"]], "ivy.array.experimental.elementwise": [[110, 1, 1, "", "ArrayWithElementWiseExperimental"]], "ivy.array.experimental.elementwise.ArrayWithElementWiseExperimental": [[110, 2, 1, "", "exp2"], [110, 2, 1, "", "float_power"], [110, 2, 1, "", "fmax"], [110, 2, 1, "", "fmod"], [110, 2, 1, "", "gcd"], [110, 2, 1, "", "isclose"], [110, 2, 1, "", "isneginf"], [110, 2, 1, "", "isposinf"], [110, 2, 1, "", "lcm"], [110, 2, 1, "", "logaddexp2"], [110, 2, 1, "", "nan_to_num"], [110, 2, 1, "", "nansum"], [110, 2, 1, "", "sinc"], [110, 2, 1, "", "trapz"]], "ivy.array.experimental.general": [[112, 1, 1, "", "ArrayWithGeneralExperimental"]], "ivy.array.experimental.gradients": [[114, 1, 1, "", "ArrayWithGradientsExperimental"]], "ivy.array.experimental.image": [[116, 1, 1, "", "ArrayWithImageExperimental"]], "ivy.array.general": [[141, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[141, 2, 1, "", "all_equal"], [141, 2, 1, "", "array_equal"], [141, 2, 1, "", "assert_supports_inplace"], [141, 2, 1, "", "clip_matrix_norm"], [141, 2, 1, "", "clip_vector_norm"], [141, 2, 1, "", "default"], [141, 2, 1, "", "einops_rearrange"], [141, 2, 1, "", "einops_reduce"], [141, 2, 1, "", "einops_repeat"], [141, 2, 1, "", "exists"], [141, 2, 1, "", "fourier_encode"], [141, 2, 1, "", "gather"], [141, 2, 1, "", "gather_nd"], [141, 2, 1, "", "get_num_dims"], [141, 2, 1, "", "has_nans"], [141, 2, 1, "", "inplace_decrement"], [141, 2, 1, "", "inplace_increment"], [141, 2, 1, "", "inplace_update"], [141, 2, 1, "", "is_array"], [141, 2, 1, "", "is_ivy_array"], [141, 2, 1, "", "is_ivy_container"], [141, 2, 1, "", "is_native_array"], [141, 2, 1, "", "scatter_flat"], [141, 2, 1, "", "scatter_nd"], [141, 2, 1, "", "stable_divide"], [141, 2, 1, "", "stable_pow"], [141, 2, 1, "", "supports_inplace_updates"], [141, 2, 1, "", "to_list"], [141, 2, 1, "", "to_numpy"], [141, 2, 1, "", "to_scalar"], [141, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[143, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[143, 2, 1, "", "adam_step"], [143, 2, 1, "", "adam_update"], [143, 2, 1, "", "gradient_descent_update"], [143, 2, 1, "", "is_variable"], [143, 2, 1, "", "lamb_update"], [143, 2, 1, "", "lars_update"], [143, 2, 1, "", "optimizer_update"], [143, 2, 1, "", "stop_gradient"], [143, 2, 1, "", "variable"], [143, 2, 1, "", "variable_data"]], "ivy.array.image": [[145, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[147, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[147, 2, 1, "", "conv1d"], [147, 2, 1, "", "conv1d_transpose"], [147, 2, 1, "", "conv2d"], [147, 2, 1, "", "conv3d"], [147, 2, 1, "", "conv3d_transpose"], [147, 2, 1, "", "depthwise_conv2d"], [147, 2, 1, "", "dropout"], [147, 2, 1, "", "linear"], [147, 2, 1, "", "lstm_update"], [147, 2, 1, "", "multi_head_attention"], [147, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linalg": [[149, 1, 1, "", "ArrayWithLinalg"]], "ivy.array.linalg.ArrayWithLinalg": [[149, 2, 1, "", "cholesky"], [149, 2, 1, "", "cross"], [149, 2, 1, "", "det"], [149, 2, 1, "", "diag"], [149, 2, 1, "", "diagonal"], [149, 2, 1, "", "eigh"], [149, 2, 1, "", "eigvalsh"], [149, 2, 1, "", "inner"], [149, 2, 1, "", "inv"], [149, 2, 1, "", "matmul"], [149, 2, 1, "", "matrix_norm"], [149, 2, 1, "", "matrix_rank"], [149, 2, 1, "", "matrix_transpose"], [149, 2, 1, "", "outer"], [149, 2, 1, "", "pinv"], [149, 2, 1, "", "qr"], [149, 2, 1, "", "slogdet"], [149, 2, 1, "", "solve"], [149, 2, 1, "", "svd"], [149, 2, 1, "", "svdvals"], [149, 2, 1, "", "tensordot"], [149, 2, 1, "", "trace"], [149, 2, 1, "", "vander"], [149, 2, 1, "", "vecdot"], [149, 2, 1, "", "vector_norm"], [149, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[151, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[151, 2, 1, "", "binary_cross_entropy"], [151, 2, 1, "", "cross_entropy"], [151, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[153, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[153, 2, 1, "", "clip"], [153, 2, 1, "", "concat"], [153, 2, 1, "", "constant_pad"], [153, 2, 1, "", "expand_dims"], [153, 2, 1, "", "flip"], [153, 2, 1, "", "permute_dims"], [153, 2, 1, "", "repeat"], [153, 2, 1, "", "reshape"], [153, 2, 1, "", "roll"], [153, 2, 1, "", "split"], [153, 2, 1, "", "squeeze"], [153, 2, 1, "", "stack"], [153, 2, 1, "", "swapaxes"], [153, 2, 1, "", "tile"], [153, 2, 1, "", "unstack"], [153, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[155, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[155, 2, 1, "", "layer_norm"]], "ivy.array.random": [[157, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[157, 2, 1, "", "beta"], [157, 2, 1, "", "gamma"], [157, 2, 1, "", "multinomial"], [157, 2, 1, "", "randint"], [157, 2, 1, "", "random_normal"], [157, 2, 1, "", "random_uniform"], [157, 2, 1, "", "shuffle"]], "ivy.array.searching": [[159, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[159, 2, 1, "", "argmax"], [159, 2, 1, "", "argmin"], [159, 2, 1, "", "argwhere"], [159, 2, 1, "", "nonzero"], [159, 2, 1, "", "where"]], "ivy.array.set": [[161, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[161, 2, 1, "", "unique_all"], [161, 2, 1, "", "unique_counts"], [161, 2, 1, "", "unique_inverse"], [161, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[163, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[163, 2, 1, "", "argsort"], [163, 2, 1, "", "searchsorted"], [163, 2, 1, "", "sort"]], "ivy.array.statistical": [[165, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[165, 2, 1, "", "cumprod"], [165, 2, 1, "", "cumsum"], [165, 2, 1, "", "einsum"], [165, 2, 1, "", "max"], [165, 2, 1, "", "mean"], [165, 2, 1, "", "min"], [165, 2, 1, "", "prod"], [165, 2, 1, "", "std"], [165, 2, 1, "", "sum"], [165, 2, 1, "", "var"]], "ivy.array.utility": [[167, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[167, 2, 1, "", "all"], [167, 2, 1, "", "any"]], "ivy.array.wrapping": [[169, 3, 1, "", "add_ivy_array_instance_methods"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"assert": [1, 349], "check_al": 2, "check_all_or_any_fn": 3, "check_ani": 4, "check_elem_in_list": 5, "check_equ": 6, "check_exist": 7, "check_fals": 8, "check_fill_value_and_dtype_are_compat": 9, "check_gather_input_valid": 10, "check_gather_nd_input_valid": 11, "check_great": 12, "check_inplace_sizes_valid": 13, "check_isinst": 14, "check_less": 15, "check_one_way_broadcast": 16, "check_shap": 17, "check_tru": 18, "backend": [19, 342, 345, 358, 361, 378], "handler": [19, 361], "choose_random_backend": 20, "clear_backend_stack": 21, "current_backend": 22, "fn_name_from_version_specific_fn_nam": 23, "get_backend": 24, "set_backend": 25, "set_backend_to_specific_vers": 26, "set_jax_backend": 27, "set_numpy_backend": 28, "set_tensorflow_backend": 29, "set_torch_backend": 30, "unset_backend": 31, "background": [32, 1751], "ml": [33, 1763, 1767], "explos": 33, "standard": [34, 359, 1758, 1767], "skeptic": 34, "complimentari": 34, "v": [34, 378], "competit": 34, "do": [34, 357], "work": [34, 38, 1757], "The": [34, 42, 355, 363, 378], "arrai": [34, 44, 47, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 340, 341, 344, 351, 363, 456, 468, 474, 479, 484, 489, 494, 499, 512, 519, 523, 531, 537, 548, 553, 558, 566, 572, 577, 585, 592, 597, 602, 607, 625, 636, 643, 648, 653, 658, 665, 686, 706, 715, 720, 725, 730, 735, 740, 745, 750, 755, 760, 765, 770, 775, 780, 785, 790, 795, 800, 805, 810, 815, 820, 825, 830, 835, 840, 845, 850, 855, 860, 865, 870, 875, 880, 885, 890, 895, 900, 905, 910, 915, 920, 925, 930, 935, 940, 945, 950, 955, 960, 965, 970, 975, 980, 985, 990, 995, 1000, 1005, 1011, 1016, 1021, 1026, 1031, 1037, 1044, 1047, 1053, 1058, 1065, 1068, 1073, 1078, 1083, 1086, 1093, 1098, 1110, 1118, 1124, 1129, 1134, 1140, 1146, 1151, 1156, 1166, 1171, 1186, 1191, 1197, 1203, 1209, 1214, 1225, 1231, 1235, 1241, 1245, 1251, 1255, 1259, 1265, 1272, 1277, 1284, 1289, 1294, 1303, 1308, 1316, 1321, 1328, 1333, 1338, 1343, 1349, 1354, 1359, 1364, 1369, 1374, 1378, 1381, 1386, 1391, 1396, 1405, 1410, 1415, 1420, 1425, 1430, 1435, 1441, 1446, 1451, 1456, 1461, 1466, 1471, 1476, 1482, 1487, 1492, 1498, 1503, 1508, 1513, 1518, 1523, 1528, 1533, 1538, 1543, 1548, 1553, 1559, 1564, 1569, 1574, 1601, 1606, 1611, 1616, 1621, 1627, 1633, 1638, 1643, 1648, 1654, 1660, 1665, 1670, 1675, 1680, 1685, 1690, 1696, 1701, 1706, 1710, 1714, 1718, 1722, 1726, 1731, 1736, 1741, 1746, 1758], "api": [34, 40, 42, 340, 343, 344, 358, 361, 363, 365, 366, 1758, 1765, 1767], "why": [35, 357], "unifi": [35, 363, 1763, 1767], "No": [35, 41], "more": [35, 41, 359], "re": [35, 357], "implement": 35, "infinit": 35, "shelf": 35, "life": 35, "contribut": [36, 1751], "appli": [37, 377], "librari": [37, 377], "introduct": [37, 355, 356], "exampl": [37, 347, 351, 356, 359], "ivi": [37, 40, 41, 42, 341, 344, 347, 349, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 468, 469, 470, 471, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 509, 510, 512, 513, 514, 519, 520, 523, 524, 525, 526, 528, 529, 531, 532, 533, 534, 537, 538, 539, 540, 542, 543, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 584, 585, 586, 587, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 615, 616, 620, 621, 622, 625, 626, 627, 628, 630, 631, 633, 634, 636, 637, 638, 639, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 665, 666, 667, 668, 686, 687, 688, 689, 705, 706, 707, 708, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 745, 746, 747, 748, 750, 751, 752, 753, 755, 756, 757, 758, 760, 761, 762, 763, 765, 766, 767, 768, 770, 771, 772, 773, 775, 776, 777, 778, 780, 781, 782, 783, 785, 786, 787, 788, 790, 791, 792, 793, 795, 796, 797, 798, 800, 801, 802, 803, 805, 806, 807, 808, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 825, 826, 827, 828, 830, 831, 832, 833, 835, 836, 837, 838, 840, 841, 842, 843, 845, 846, 847, 848, 850, 851, 852, 853, 855, 856, 857, 858, 860, 861, 862, 863, 865, 866, 867, 868, 870, 871, 872, 873, 875, 876, 877, 878, 880, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 896, 897, 898, 900, 901, 902, 903, 905, 906, 907, 908, 910, 911, 912, 913, 915, 916, 917, 918, 920, 921, 922, 923, 925, 926, 927, 928, 930, 931, 932, 933, 935, 936, 937, 938, 940, 941, 942, 943, 945, 946, 947, 948, 950, 951, 952, 953, 955, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 968, 970, 971, 972, 973, 975, 976, 977, 978, 980, 981, 982, 983, 985, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1037, 1038, 1039, 1040, 1044, 1045, 1047, 1048, 1049, 1050, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1083, 1084, 1086, 1087, 1088, 1089, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1110, 1111, 1112, 1113, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1159, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1202, 1203, 1204, 1205, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1224, 1225, 1226, 1227, 1231, 1232, 1233, 1235, 1236, 1237, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1251, 1252, 1253, 1255, 1256, 1257, 1259, 1260, 1261, 1264, 1265, 1266, 1267, 1271, 1272, 1273, 1274, 1276, 1277, 1278, 1279, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1328, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1349, 1350, 1351, 1352, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1378, 1379, 1381, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1405, 1406, 1407, 1408, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1418, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1475, 1476, 1477, 1478, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1498, 1499, 1500, 1501, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1536, 1538, 1539, 1540, 1541, 1543, 1544, 1545, 1546, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1601, 1602, 1603, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1627, 1628, 1629, 1630, 1633, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1680, 1681, 1682, 1683, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1710, 1711, 1712, 1714, 1715, 1716, 1718, 1719, 1720, 1722, 1723, 1724, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1735, 1736, 1737, 1738, 1741, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1767], "robot": [37, 374, 377], "build": [38, 361], "doc": 38, "docker": [38, 41, 42], "dockerless": 38, "us": [38, 41, 340, 364], "miniconda": [38, 41], "venv": [38, 41], "document": 38, "pipelin": [38, 344, 357, 378], "make_doc": 38, "sh": 38, "entrypoint": 38, "_make_doc": 38, "generate_src_rst_fil": 38, "py": 38, "sphinx": 38, "correct_built_html_fil": 38, "remove_fil": 38, "help": [39, 42], "resourc": 39, "open": 40, "task": 40, "function": [40, 343, 345, 346, 349, 351, 352, 353, 355, 356, 357, 358, 361, 366, 378], "format": [40, 350, 1760, 1767], "checklist": 40, "frontend": [40, 342, 344, 355, 356, 366], "where": [40, 1652, 1654, 1655, 1656], "place": 40, "experiment": [40, 42, 62, 187, 390], "set": [41, 131, 160, 301, 329, 342, 453, 1657], "up": 41, "clone": 41, "pycharm": [41, 42], "virtual": 41, "environ": 41, "interpret": 41, "window": 41, "maco": 41, "ubuntu": 41, "test": [41, 42, 340, 344, 356, 357], "detail": 41, "hypothesi": [41, 356, 357], "log": [41, 884, 885, 886, 887], "free": 41, "github": [41, 344], "codespac": 41, "pre": [41, 350], "commit": [41, 42, 350], "basic": [42, 355], "get": [42, 472], "todo": 42, "list": 42, "issu": 42, "manag": 42, "your": 42, "fork": 42, "who": 42, "To": 42, "ask": 42, "With": 42, "command": 42, "line": 42, "browser": 42, "pull": [42, 344], "request": [42, 344], "small": 42, "often": 42, "interact": 42, "contain": [42, 170, 175, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 343, 364, 469, 471, 475, 477, 480, 482, 485, 487, 490, 492, 495, 497, 500, 502, 510, 514, 524, 526, 529, 532, 534, 538, 540, 543, 546, 549, 551, 554, 556, 559, 561, 564, 567, 569, 571, 573, 576, 578, 581, 584, 586, 593, 595, 598, 600, 603, 605, 608, 610, 616, 620, 622, 626, 628, 631, 634, 637, 639, 644, 646, 649, 651, 654, 656, 659, 661, 666, 668, 687, 689, 705, 707, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 976, 978, 981, 983, 986, 988, 991, 993, 996, 998, 1001, 1003, 1006, 1008, 1010, 1012, 1015, 1017, 1020, 1022, 1025, 1027, 1030, 1032, 1038, 1040, 1048, 1050, 1054, 1056, 1059, 1061, 1069, 1071, 1074, 1076, 1079, 1081, 1087, 1089, 1094, 1096, 1099, 1101, 1111, 1113, 1119, 1121, 1125, 1127, 1130, 1132, 1135, 1137, 1141, 1143, 1147, 1149, 1152, 1154, 1157, 1159, 1167, 1169, 1172, 1174, 1187, 1189, 1192, 1194, 1196, 1198, 1202, 1204, 1208, 1210, 1213, 1215, 1224, 1226, 1232, 1236, 1242, 1246, 1248, 1252, 1256, 1260, 1264, 1266, 1271, 1273, 1276, 1278, 1285, 1287, 1290, 1292, 1295, 1297, 1299, 1301, 1304, 1306, 1309, 1311, 1317, 1319, 1322, 1324, 1329, 1331, 1334, 1336, 1339, 1341, 1344, 1346, 1350, 1352, 1355, 1357, 1360, 1362, 1365, 1367, 1370, 1372, 1375, 1382, 1384, 1387, 1389, 1392, 1394, 1397, 1399, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1423, 1426, 1428, 1431, 1433, 1436, 1438, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1483, 1485, 1488, 1490, 1493, 1495, 1499, 1501, 1504, 1506, 1509, 1511, 1514, 1516, 1519, 1521, 1524, 1526, 1529, 1531, 1534, 1536, 1539, 1541, 1544, 1546, 1549, 1551, 1554, 1556, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1602, 1607, 1609, 1612, 1614, 1617, 1619, 1622, 1624, 1628, 1630, 1634, 1636, 1639, 1641, 1644, 1646, 1649, 1651, 1653, 1655, 1659, 1661, 1664, 1666, 1669, 1671, 1674, 1676, 1681, 1683, 1686, 1688, 1691, 1693, 1697, 1699, 1702, 1704, 1707, 1711, 1715, 1719, 1723, 1727, 1730, 1732, 1735, 1737, 1742, 1744, 1747, 1749], "run": [42, 340, 357], "local": 42, "most": 42, "out": [42, 351, 354], "id": [42, 340], "data": [43, 56, 105, 181, 275, 345, 355, 357, 364, 378, 401, 588], "class": [43, 349, 355, 363, 1769], "activ": [45, 63, 171, 188, 391, 465, 1770], "arraywithactiv": 46, "convers": [49, 101, 177, 271], "args_to_ivi": 50, "args_to_n": 51, "to_ivi": 52, "to_n": 53, "creation": [54, 103, 179, 273, 394, 506], "arraywithcr": 55, "type": [56, 105, 181, 275, 345, 352, 355, 378, 401, 588], "arraywithdatatyp": 57, "devic": [58, 107, 183, 277, 346, 351, 355, 402, 679], "arraywithdevic": 59, "elementwis": [60, 109, 185, 279, 403, 713], "arraywithelementwis": 61, "arraywithactivationsexperiment": 64, "method": [65, 190, 343, 355, 356, 363, 364], "avg_pool3d": [66, 192, 422], "dct": [67, 193, 423], "diagflat": [68, 194, 428], "dirichlet": [69, 195, 450], "exp2": [70, 196, 404], "flatten": [71, 197, 432], "fliplr": [72, 198, 433], "flipud": [73, 199, 434], "float_pow": [74, 200, 405], "fmax": [75, 201, 406], "fmod": [76, 202, 407], "gcd": [77, 203, 408], "heavisid": [78, 206, 435], "hstack": [79, 207, 436], "i0": [80, 208, 437], "isclos": [81, 209, 409], "isneginf": [82, 210, 410], "isposinf": [83, 211, 411], "kron": [84, 214, 429], "lcm": [85, 215, 412], "logaddexp2": [86, 216, 413], "max_pool1d": [87, 217, 424], "max_pool2d": [88, 218, 425], "max_pool3d": [89, 219, 426], "median": [90, 220, 462], "moveaxi": [91, 221, 438], "msort": [92, 222, 455], "nan_to_num": [93, 223, 414], "nansum": [94, 224, 415], "pad": [95, 225, 441], "rot90": [96, 226, 442], "sinc": [97, 227, 416], "top_k": [98, 268, 443], "trapz": [99, 417], "vstack": [100, 270, 444], "arraywithconversionsexperiment": 102, "arraywithcreationexperiment": 104, "arraywithdata_typeexperiment": 106, "arraywithdeviceexperiment": 108, "arraywithelementwiseexperiment": 110, "gener": [111, 140, 281, 309, 357, 359, 418, 1035], "arraywithgeneralexperiment": 112, "gradient": [113, 142, 283, 311, 419, 1229], "arraywithgradientsexperiment": 114, "imag": [115, 144, 285, 313], "arraywithimageexperiment": 116, "layer": [117, 146, 287, 315, 420, 1281, 1785], "arraywithlayersexperiment": 118, "linalg": [119, 148, 289, 317, 427, 1347], "arraywithlinalgexperiment": 120, "loss": [121, 150, 291, 319, 430, 1480], "arraywithlossesexperiment": 122, "manipul": [123, 152, 293, 321, 431, 1496], "arraywithmanipulationexperiment": 124, "norm": [125, 154, 295, 323, 447, 1599, 1800], "arraywithnormsexperiment": 126, "random": [127, 156, 297, 325, 448, 1604], "arraywithrandomexperiment": 128, "search": [129, 158, 299, 327, 452, 1631], "arraywithsearchingexperiment": 130, "arraywithsetexperiment": 132, "sort": [133, 162, 303, 331, 454, 1678, 1689, 1690, 1691, 1692], "arraywithsortingexperiment": 134, "statist": [135, 164, 305, 333, 461, 1694], "arraywithstatisticalexperiment": 136, "util": [137, 166, 307, 335, 463, 1739], "arraywithutilityexperiment": 138, "extens": [139, 376, 1751], "arraywithgener": 141, "arraywithgradi": 143, "arraywithimag": 145, "arraywithlay": 147, "arraywithlinalg": 149, "arraywithloss": 151, "arraywithmanipul": 153, "arraywithnorm": 155, "arraywithrandom": 157, "arraywithsearch": 159, "arraywithset": 161, "arraywithsort": 163, "arraywithstatist": 165, "arraywithutil": 167, "wrap": [168, 337, 353], "add_ivy_array_instance_method": 169, "containerwithactiv": 172, "base": 173, "containerbas": 174, "containerwithconvers": 178, "containerwithcr": 180, "containerwithdatatyp": 182, "containerwithdevic": 184, "containerwithelementwis": 186, "containerwithactivationexperiment": 189, "avg_pool2d": [191, 421], "hamming_window": [204, 395], "hann_window": [205, 396], "kaiser_bessel_derived_window": [212, 397], "kaiser_window": [213, 398], "static_avg_pool2d": 228, "static_avg_pool3d": 229, "static_dct": 230, "static_diagflat": 231, "static_dirichlet": 232, "static_exp2": 233, "static_flatten": 234, "static_fliplr": 235, "static_flipud": 236, "static_float_pow": 237, "static_fmax": 238, "static_fmod": 239, "static_gcd": 240, "static_hamming_window": 241, "static_hann_window": 242, "static_heavisid": 243, "static_hstack": 244, "static_i0": 245, "static_isclos": 246, "static_isneginf": 247, "static_isposinf": 248, "static_kaiser_bessel_derived_window": 249, "static_kaiser_window": 250, "static_kron": 251, "static_lcm": 252, "static_logaddexp2": 253, "static_max_pool1d": 254, "static_max_pool2d": 255, "static_max_pool3d": 256, "static_median": 257, "static_moveaxi": 258, "static_msort": 259, "static_nan_to_num": 260, "static_nansum": 261, "static_pad": 262, "static_rot90": 263, "static_sinc": 264, "static_top_k": 265, "static_triu_indic": 266, "static_vstack": 267, "triu_indic": [269, 399], "containerwithconversionexperiment": 272, "containerwithcreationexperiment": 274, "containerwithdata_typeexperiment": 276, "containerwithdeviceexperiment": 278, "containerwithelementwiseexperiment": 280, "containerwithgeneralexperiment": 282, "containerwithgradientsexperiment": 284, "containerwithimageexperiment": 286, "containerwithlayersexperiment": 288, "containerwithlinalgexperiment": 290, "containerwithlossesexperiment": 292, "containerwithmanipulationexperiment": 294, "containerwithnormsexperiment": 296, "containerwithrandomexperiment": 298, "containerwithsearchingexperiment": 300, "containerwithsetexperiment": 302, "containerwithsortingexperiment": 304, "containerwithstatisticalexperiment": 306, "containerwithutilityexperiment": 308, "containerwithgener": 310, "containerwithgradi": 312, "containerwithimag": 314, "containerwithlay": 316, "containerwithlinalg": 318, "containerwithloss": 320, "containerwithmanipul": 322, "containerwithnorm": 324, "containerwithrandom": 326, "containerwithsearch": 328, "containerwithset": 330, "containerwithsort": 332, "containerwithstatist": 334, "containerwithutil": 336, "add_ivy_container_instance_method": 338, "deep": 339, "dive": 339, "termin": 340, "skip": 340, "nativ": 341, "handl": [341, 349, 378], "version": [342, 358, 378], "support": [342, 345, 355, 378], "instanc": [343, 355, 356, 363], "static": 343, "special": [343, 355, 356], "nestabl": [343, 351, 352], "continu": 344, "integr": [344, 357], "action": 344, "core": 344, "nn": 344, "state": [344, 365, 378], "ci": 344, "push": 344, "schedul": 344, "cron": 344, "job": 344, "dashboard": 344, "modul": [345, 346, 365, 1797, 1798], "promot": [345, 355], "argument": [345, 346, 351, 354, 355], "other": [345, 346], "unsupport": 345, "bug": 345, "superset": [345, 359], "docstr": [347, 348], "tan": [347, 356, 1014, 1016, 1017, 1018], "roll": [347, 1537, 1538, 1539, 1540], "add": [347, 356, 729, 730, 731, 732, 1767], "except": 349, "handle_except": 349, "decor": 349, "lint": 350, "check": [350, 378], "hook": 350, "posit": [351, 954, 955, 956, 957], "keyword": 351, "input": 351, "dtype": [351, 619, 620, 621], "number": 351, "oper": [351, 363, 378], "integ": 351, "sequenc": 351, "primari": 352, "composit": [352, 355], "mix": 352, "standalon": 352, "conveni": 352, "inplac": 354, "updat": 354, "copi": 354, "unus": 355, "miss": 355, "temporari": 355, "rule": 355, "numpi": [355, 1761], "cast": 355, "full": [356, 535], "alia": 356, "helper": [356, 357, 358], "import": 357, "strategi": 357, "we": 357, "need": 357, "how": 357, "write": 357, "effect": 357, "bonu": 357, "extend": [357, 359], "featur": 357, "self": 357, "consist": 357, "explicit": 357, "test_array_funct": 357, "fail": 357, "navig": 358, "code": 358, "categor": 358, "submodul": 358, "design": [358, 360, 1751], "pin": 358, "behaviour": 359, "what": [359, 1767], "i": 359, "A": 359, "non": 359, "duplic": 359, "when": 359, "too": 359, "much": 359, "balanc": 359, "effici": 359, "block": 361, "graph": [361, 366, 1762, 1767], "compil": [361, 366, 392, 503, 504, 1759, 1764, 1766, 1767], "framework": [362, 1761, 1764, 1767, 1768, 1769], "monkei": 363, "patch": 363, "construct": 364, "represent": 364, "recurs": 364, "built": 364, "ins": 364, "access": 364, "save": 364, "load": 364, "comparison": 364, "custom": [364, 378], "case": 364, "compartment": 364, "configur": 364, "network": [364, 366], "weight": 364, "initi": [365, 1775, 1779], "optim": [365, 1802, 1806], "transpil": 366, "role": 366, "convert": [366, 1773], "model": [366, 373, 378], "builder": 368, "ecosystem": 369, "gym": [370, 377], "mech": 371, "memori": [372, 377], "vision": [375, 377], "mechan": 377, "faq": 378, "maintain": 378, "dynam": 378, "size": 378, "shape": [378, 1183], "gpu": 378, "deploy": 378, "control": 378, "flow": 378, "auto": 378, "differenti": 378, "replica": 378, "parallel": 378, "altern": 378, "structur": 378, "func": 379, "wrapper": [379, 1767, 1768], "from_zero_dim_arrays_to_float": 380, "handle_nest": 381, "handle_out_argu": 382, "infer_devic": 383, "infer_dtyp": 384, "inputs_to_ivy_arrai": 385, "inputs_to_native_arrai": 386, "integer_arrays_to_float": 387, "outputs_to_ivy_arrai": 388, "to_native_arrays_and_back": 389, "constant": [393, 505, 1776], "vorbis_window": 400, "ndenumer": 439, "ndindex": 440, "meta": [445, 1577], "nest": [446, 1581], "beta": 449, "gamma": 451, "spars": 456, "is_ivy_sparse_arrai": 457, "is_native_sparse_arrai": 458, "native_sparse_arrai": 459, "native_sparse_array_to_indices_values_and_shap": 460, "deseri": 466, "gelu": [467, 468, 469, 470, 1772], "static_gelu": 471, "leaky_relu": [473, 474, 475, 476], "static_leaky_relu": 477, "log_softmax": [478, 479, 480, 481], "static_log_softmax": 482, "relu": [483, 484, 485, 486], "static_relu": 487, "sigmoid": [488, 489, 490, 491], "static_sigmoid": 492, "softmax": [493, 494, 495, 496], "static_softmax": 497, "softplu": [498, 499, 500, 501], "static_softplu": 502, "nestedsequ": 507, "arang": [508, 509], "static_arang": 510, "asarrai": [511, 512, 513], "static_asarrai": 514, "asarray_handle_nest": 515, "asarray_infer_devic": 516, "asarray_to_native_arrays_and_back": 517, "copy_arrai": [518, 519, 520], "empti": 521, "empty_lik": [522, 523, 524, 525], "static_empty_lik": 526, "ey": [527, 528], "static_ey": 529, "from_dlpack": [530, 531, 532, 533], "static_from_dlpack": 534, "full_lik": [536, 537, 538, 539], "static_full_lik": 540, "linspac": [541, 542], "static_linspac": 543, "logspac": [544, 545], "static_logspac": 546, "meshgrid": [547, 548, 549, 550], "static_meshgrid": 551, "native_arrai": [552, 553, 554, 555], "static_native_arrai": 556, "one_hot": [557, 558, 559, 560], "static_one_hot": 561, "ones": [562, 563], "static_on": 564, "ones_lik": [565, 566, 567, 568], "static_ones_lik": 569, "tril": [570, 572, 573, 574], "static_tril": 571, "triu": [575, 577, 578, 579], "static_triu": 576, "zero": [580, 582, 1784], "static_zero": 581, "zeros_lik": [583, 585, 586, 587], "static_zeros_lik": 584, "as_ivy_dtyp": 589, "as_native_dtyp": 590, "astyp": [591, 592, 593, 594], "static_astyp": 595, "broadcast_arrai": [596, 597, 598, 599], "static_broadcast_arrai": 600, "broadcast_to": [601, 602, 603, 604], "static_broadcast_to": 605, "can_cast": [606, 607, 608, 609], "static_can_cast": 610, "check_float": 611, "closest_valid_dtyp": 612, "default_dtyp": 613, "default_float_dtyp": [614, 615], "static_default_float_dtyp": 616, "default_int_dtyp": 617, "default_uint_dtyp": 618, "static_dtyp": 622, "dtype_bit": 623, "finfo": [624, 625, 626, 627], "static_finfo": 628, "function_supported_dtyp": [629, 630], "static_function_supported_dtyp": 631, "function_unsupported_dtyp": [632, 633], "static_function_unsupported_dtyp": 634, "iinfo": [635, 636, 637, 638], "static_iinfo": 639, "infer_default_dtyp": 640, "invalid_dtyp": 641, "is_bool_dtyp": [642, 643, 644, 645], "static_is_bool_dtyp": 646, "is_float_dtyp": [647, 648, 649, 650], "static_is_float_dtyp": 651, "is_int_dtyp": [652, 653, 654, 655], "static_is_int_dtyp": 656, "is_uint_dtyp": [657, 658, 659, 660], "static_is_uint_dtyp": 661, "promote_typ": 662, "promote_types_of_input": 663, "result_typ": [664, 665, 666, 667], "static_result_typ": 668, "set_default_dtyp": 669, "set_default_float_dtyp": 670, "set_default_int_dtyp": 671, "set_default_uint_dtyp": 672, "type_promote_arrai": 673, "unset_default_dtyp": 674, "unset_default_float_dtyp": 675, "unset_default_int_dtyp": 676, "unset_default_uint_dtyp": 677, "valid_dtyp": 678, "profil": 680, "as_ivy_dev": 681, "as_native_dev": 682, "clear_mem_on_dev": 683, "default_devic": 684, "dev": [685, 686, 687, 688], "static_dev": 689, "dev_util": 690, "function_supported_devic": 691, "function_unsupported_devic": 692, "get_all_ivy_arrays_on_dev": 693, "gpu_is_avail": 694, "num_cpu_cor": 695, "num_gpu": 696, "num_ivy_arrays_on_dev": 697, "percent_used_mem_on_dev": 698, "print_all_ivy_arrays_on_dev": 699, "set_default_devic": 700, "set_split_factor": 701, "split_factor": 702, "split_func_cal": 703, "to_devic": [704, 706, 707, 708], "static_to_devic": 705, "total_mem_on_dev": 709, "tpu_is_avail": 710, "unset_default_devic": 711, "used_mem_on_dev": 712, "ab": [714, 715, 716, 717], "static_ab": 718, "aco": [719, 720, 721, 722], "static_aco": 723, "acosh": [724, 725, 726, 727], "static_acosh": 728, "static_add": 733, "asin": [734, 735, 736, 737], "static_asin": 738, "asinh": [739, 740, 741, 742], "static_asinh": 743, "atan": [744, 745, 746, 747], "static_atan": 748, "atan2": [749, 750, 751, 752], "static_atan2": 753, "atanh": [754, 755, 756, 757], "static_atanh": 758, "bitwise_and": [759, 760, 761, 762], "static_bitwise_and": 763, "bitwise_invert": [764, 765, 766, 767], "static_bitwise_invert": 768, "bitwise_left_shift": [769, 770, 771, 772], "static_bitwise_left_shift": 773, "bitwise_or": [774, 775, 776, 777], "static_bitwise_or": 778, "bitwise_right_shift": [779, 780, 781, 782], "static_bitwise_right_shift": 783, "bitwise_xor": [784, 785, 786, 787], "static_bitwise_xor": 788, "ceil": [789, 790, 791, 792], "static_ceil": 793, "co": [794, 795, 796, 797], "static_co": 798, "cosh": [799, 800, 801, 802], "static_cosh": 803, "deg2rad": [804, 805, 806, 807], "static_deg2rad": 808, "divid": [809, 810, 811, 812], "static_divid": 813, "equal": [814, 815, 816, 817], "static_equ": 818, "erf": [819, 820, 821, 822], "static_erf": 823, "exp": [824, 825, 826, 827], "static_exp": 828, "expm1": [829, 830, 831, 832], "static_expm1": 833, "floor": [834, 835, 836, 837], "static_floor": 838, "floor_divid": [839, 840, 841, 842], "static_floor_divid": 843, "greater": [844, 845, 846, 847], "static_great": 848, "greater_equ": [849, 850, 851, 852], "static_greater_equ": 853, "isfinit": [854, 855, 856, 857], "static_isfinit": 858, "isinf": [859, 860, 861, 862], "static_isinf": 863, "isnan": [864, 865, 866, 867], "static_isnan": 868, "isreal": [869, 870, 871, 872], "static_isr": 873, "less": [874, 875, 876, 877], "static_less": 878, "less_equ": [879, 880, 881, 882], "static_less_equ": 883, "static_log": 888, "log10": [889, 890, 891, 892], "static_log10": 893, "log1p": [894, 895, 896, 897], "static_log1p": 898, "log2": [899, 900, 901, 902], "static_log2": 903, "logaddexp": [904, 905, 906, 907], "static_logaddexp": 908, "logical_and": [909, 910, 911, 912], "static_logical_and": 913, "logical_not": [914, 915, 916, 917], "static_logical_not": 918, "logical_or": [919, 920, 921, 922], "static_logical_or": 923, "logical_xor": [924, 925, 926, 927], "static_logical_xor": 928, "maximum": [929, 930, 931, 932], "static_maximum": 933, "minimum": [934, 935, 936, 937], "static_minimum": 938, "multipli": [939, 940, 941, 942], "static_multipli": 943, "neg": [944, 945, 946, 947], "static_neg": 948, "not_equ": [949, 950, 951, 952], "static_not_equ": 953, "static_posit": 958, "pow": [959, 960, 961, 962], "static_pow": 963, "rad2deg": [964, 965, 966, 967], "static_rad2deg": 968, "reciproc": [969, 970, 971, 972], "static_reciproc": 973, "remaind": [974, 975, 976, 977], "static_remaind": 978, "round": [979, 980, 981, 982], "static_round": 983, "sign": [984, 985, 986, 987], "static_sign": 988, "sin": [989, 990, 991, 992], "static_sin": 993, "sinh": [994, 995, 996, 997], "static_sinh": 998, "sqrt": [999, 1000, 1001, 1002], "static_sqrt": 1003, "squar": [1004, 1005, 1006, 1007], "static_squar": 1008, "subtract": [1009, 1011, 1012, 1013], "static_subtract": 1010, "static_tan": 1015, "tanh": [1019, 1021, 1022, 1023], "static_tanh": 1020, "trunc": [1024, 1026, 1027, 1028], "static_trunc": 1025, "trunc_divid": [1029, 1031, 1032, 1033], "static_trunc_divid": 1030, "all_equ": [1036, 1037, 1038, 1039], "static_all_equ": 1040, "arg_info": 1041, "arg_nam": 1042, "array_equ": [1043, 1044, 1045], "assert_supports_inplac": [1046, 1047, 1048, 1049], "static_assert_supports_inplac": 1050, "cache_fn": 1051, "clip_matrix_norm": [1052, 1053, 1054, 1055], "static_clip_matrix_norm": 1056, "clip_vector_norm": [1057, 1058, 1059, 1060], "static_clip_vector_norm": 1061, "container_typ": 1062, "current_backend_str": 1063, "default": [1064, 1065, 1066], "einops_rearrang": [1067, 1068, 1069, 1070], "static_einops_rearrang": 1071, "einops_reduc": [1072, 1073, 1074, 1075], "static_einops_reduc": 1076, "einops_repeat": [1077, 1078, 1079, 1080], "static_einops_repeat": 1081, "exist": [1082, 1083, 1084], "fourier_encod": [1085, 1086, 1087, 1088], "static_fourier_encod": 1089, "function_supported_devices_and_dtyp": 1090, "function_unsupported_devices_and_dtyp": 1091, "gather": [1092, 1093, 1094, 1095], "static_gath": 1096, "gather_nd": [1097, 1098, 1099, 1100], "static_gather_nd": 1101, "get_all_arrays_in_memori": 1102, "get_array_mod": 1103, "get_exception_trace_mod": 1104, "get_item": 1105, "get_min_bas": 1106, "get_min_denomin": 1107, "get_nestable_mod": 1108, "get_num_dim": [1109, 1110, 1111, 1112], "static_get_num_dim": 1113, "get_queue_timeout": 1114, "get_referrers_recurs": 1115, "get_tmp_dir": 1116, "has_nan": [1117, 1118, 1119, 1120], "static_has_nan": 1121, "inplace_arrays_support": 1122, "inplace_decr": [1123, 1124, 1125, 1126], "static_inplace_decr": 1127, "inplace_incr": [1128, 1129, 1130, 1131], "static_inplace_incr": 1132, "inplace_upd": [1133, 1134, 1135, 1136], "static_inplace_upd": 1137, "inplace_variables_support": 1138, "is_arrai": [1139, 1140, 1141, 1142], "static_is_arrai": 1143, "is_frontend_arrai": 1144, "is_ivy_arrai": [1145, 1146, 1147, 1148], "static_is_ivy_arrai": 1149, "is_ivy_contain": [1150, 1151, 1152, 1153], "static_is_ivy_contain": 1154, "is_native_arrai": [1155, 1156, 1157, 1158], "static_is_native_arrai": 1159, "isscalar": 1160, "match_kwarg": 1161, "multiprocess": 1162, "num_arrays_in_memori": 1163, "print_all_arrays_in_memori": 1164, "scatter_flat": [1165, 1166, 1167, 1168], "static_scatter_flat": 1169, "scatter_nd": [1170, 1171, 1172, 1173], "static_scatter_nd": 1174, "set_array_mod": 1175, "set_exception_trace_mod": 1176, "set_min_bas": 1177, "set_min_denomin": 1178, "set_nestable_mod": 1179, "set_queue_timeout": 1180, "set_shape_array_mod": 1181, "set_tmp_dir": 1182, "shape_array_mod": 1184, "stable_divid": [1185, 1186, 1187, 1188], "static_stable_divid": 1189, "stable_pow": [1190, 1191, 1192, 1193], "static_stable_pow": 1194, "supports_inplace_upd": [1195, 1197, 1198, 1199], "static_supports_inplace_upd": 1196, "to_ivy_shap": 1200, "to_list": [1201, 1203, 1204, 1205], "static_to_list": 1202, "to_native_shap": 1206, "to_numpi": [1207, 1209, 1210, 1211], "static_to_numpi": 1208, "to_scalar": [1212, 1214, 1215, 1216], "static_to_scalar": 1213, "try_else_non": 1217, "unset_array_mod": 1218, "unset_exception_trace_mod": 1219, "unset_nestable_mod": 1220, "unset_queue_timeout": 1221, "unset_shape_array_mod": 1222, "value_is_nan": [1223, 1225, 1226, 1227], "static_value_is_nan": 1224, "vmap": 1228, "adam_step": [1230, 1231, 1232, 1233], "adam_upd": [1234, 1235, 1236, 1237], "execute_with_gradi": 1238, "grad": 1239, "gradient_descent_upd": [1240, 1241, 1242, 1243], "is_vari": [1244, 1245, 1246, 1247], "static_is_vari": 1248, "jac": 1249, "lamb_upd": [1250, 1251, 1252, 1253], "lars_upd": [1254, 1255, 1256, 1257], "optimizer_upd": [1258, 1259, 1260, 1261], "set_with_grad": 1262, "stop_gradi": [1263, 1265, 1266, 1267], "static_stop_gradi": 1264, "unset_with_grad": 1268, "value_and_grad": 1269, "variabl": [1270, 1272, 1273, 1274], "static_vari": 1271, "variable_data": [1275, 1277, 1278, 1279], "static_variable_data": 1276, "with_grad": 1280, "conv": 1282, "conv1d": [1283, 1284, 1285, 1286, 1786], "static_conv1d": 1287, "conv1d_transpos": [1288, 1289, 1290, 1291], "static_conv1d_transpos": 1292, "conv2d": [1293, 1294, 1295, 1296, 1788], "static_conv2d": 1297, "conv2d_transpos": [1298, 1299, 1300], "static_conv2d_transpos": 1301, "conv3d": [1302, 1303, 1304, 1305, 1790], "static_conv3d": 1306, "conv3d_transpos": [1307, 1308, 1309, 1310], "static_conv3d_transpos": 1311, "conv_general_dil": 1312, "conv_general_transpos": 1313, "deconv_length": 1314, "depthwise_conv2d": [1315, 1316, 1317, 1318], "static_depthwise_conv2d": 1319, "dropout": [1320, 1321, 1322, 1323, 1793], "static_dropout": 1324, "get_x_data_format": 1325, "handle_pad": 1326, "linear": [1327, 1328, 1329, 1330, 1795], "static_linear": 1331, "lstm_updat": [1332, 1333, 1334, 1335], "static_lstm_upd": 1336, "multi_head_attent": [1337, 1338, 1339, 1340], "static_multi_head_attent": 1341, "scaled_dot_product_attent": [1342, 1343, 1344, 1345], "static_scaled_dot_product_attent": 1346, "choleski": [1348, 1349, 1350, 1351], "static_choleski": 1352, "cross": [1353, 1354, 1355, 1356], "static_cross": 1357, "det": [1358, 1359, 1360, 1361], "static_det": 1362, "diag": [1363, 1364, 1365, 1366], "static_diag": 1367, "diagon": [1368, 1369, 1370, 1371], "static_diagon": 1372, "eigh": [1373, 1374, 1375, 1376], "eigvalsh": [1377, 1378, 1379], "inner": [1380, 1381, 1382, 1383], "static_inn": 1384, "inv": [1385, 1386, 1387, 1388], "static_inv": 1389, "matmul": [1390, 1391, 1392, 1393], "static_matmul": 1394, "matrix_norm": [1395, 1396, 1397, 1398], "static_matrix_norm": 1399, "matrix_pow": [1400, 1401, 1402], "static_matrix_pow": 1403, "matrix_rank": [1404, 1405, 1406, 1407], "static_matrix_rank": 1408, "matrix_transpos": [1409, 1410, 1411, 1412], "static_matrix_transpos": 1413, "outer": [1414, 1415, 1416, 1417], "static_out": 1418, "pinv": [1419, 1420, 1421, 1422], "static_pinv": 1423, "qr": [1424, 1425, 1426, 1427], "static_qr": 1428, "slogdet": [1429, 1430, 1431, 1432], "static_slogdet": 1433, "solv": [1434, 1435, 1436, 1437], "static_solv": 1438, "svd": [1439, 1441, 1442, 1443], "static_svd": 1440, "svdval": [1444, 1446, 1447, 1448], "static_svdv": 1445, "tensordot": [1449, 1451, 1452, 1453], "static_tensordot": 1450, "trace": [1454, 1456, 1457, 1458], "static_trac": 1455, "vander": [1459, 1461, 1462, 1463], "static_vand": 1460, "vecdot": [1464, 1466, 1467, 1468], "static_vecdot": 1465, "vector_norm": [1469, 1471, 1472, 1473], "static_vector_norm": 1470, "vector_to_skew_symmetric_matrix": [1474, 1476, 1477, 1478], "static_vector_to_skew_symmetric_matrix": 1475, "binary_cross_entropi": [1481, 1482, 1483, 1484], "static_binary_cross_entropi": 1485, "cross_entropi": [1486, 1487, 1488, 1489], "static_cross_entropi": 1490, "sparse_cross_entropi": [1491, 1492, 1493, 1494], "static_sparse_cross_entropi": 1495, "clip": [1497, 1498, 1499, 1500], "static_clip": 1501, "concat": [1502, 1503, 1504, 1505], "static_concat": 1506, "constant_pad": [1507, 1508, 1509, 1510], "static_constant_pad": 1511, "expand_dim": [1512, 1513, 1514, 1515], "static_expand_dim": 1516, "flip": [1517, 1518, 1519, 1520], "static_flip": 1521, "permute_dim": [1522, 1523, 1524, 1525], "static_permute_dim": 1526, "repeat": [1527, 1528, 1529, 1530], "static_repeat": 1531, "reshap": [1532, 1533, 1534, 1535], "static_reshap": 1536, "static_rol": 1541, "split": [1542, 1543, 1544, 1545], "static_split": 1546, "squeez": [1547, 1548, 1549, 1550], "static_squeez": 1551, "stack": [1552, 1553, 1554, 1555], "static_stack": 1556, "swapax": [1557, 1559, 1560, 1561], "static_swapax": 1558, "tile": [1562, 1564, 1565, 1566], "static_til": 1563, "unstack": [1567, 1569, 1570, 1571], "static_unstack": 1568, "zero_pad": [1572, 1574, 1575, 1576], "static_zero_pad": 1573, "fomaml_step": 1578, "maml_step": 1579, "reptile_step": 1580, "all_nested_indic": 1582, "copy_nest": 1583, "index_nest": 1584, "insert_into_nest_at_index": 1585, "insert_into_nest_at_indic": 1586, "map": 1587, "map_nest_at_index": 1588, "map_nest_at_indic": 1589, "multi_index_nest": 1590, "nested_ani": 1591, "nested_argwher": 1592, "nested_map": 1593, "nested_multi_map": 1594, "prune_nest_at_index": 1595, "prune_nest_at_indic": 1596, "set_nest_at_index": 1597, "set_nest_at_indic": 1598, "layer_norm": [1600, 1601, 1602, 1603], "multinomi": [1605, 1606, 1607, 1608], "static_multinomi": 1609, "randint": [1610, 1611, 1612, 1613], "static_randint": 1614, "random_norm": [1615, 1616, 1617, 1618], "static_random_norm": 1619, "random_uniform": [1620, 1621, 1622, 1623], "static_random_uniform": 1624, "seed": 1625, "shuffl": [1626, 1627, 1628, 1629], "static_shuffl": 1630, "argmax": [1632, 1633, 1634, 1635], "static_argmax": 1636, "argmin": [1637, 1638, 1639, 1640], "static_argmin": 1641, "argwher": [1642, 1643, 1644, 1645], "static_argwher": 1646, "nonzero": [1647, 1648, 1649, 1650], "static_nonzero": 1651, "static_wher": 1653, "unique_al": [1658, 1660, 1661, 1662], "static_unique_al": 1659, "unique_count": [1663, 1665, 1666, 1667], "static_unique_count": 1664, "unique_invers": [1668, 1670, 1671, 1672], "static_unique_invers": 1669, "unique_valu": [1673, 1675, 1676, 1677], "static_unique_valu": 1674, "argsort": [1679, 1680, 1681, 1682], "static_argsort": 1683, "searchsort": [1684, 1685, 1686, 1687], "static_searchsort": 1688, "static_sort": 1693, "cumprod": [1695, 1696, 1697, 1698], "static_cumprod": 1699, "cumsum": [1700, 1701, 1702, 1703], "static_cumsum": 1704, "einsum": [1705, 1706, 1707, 1708], "max": [1709, 1710, 1711, 1712], "mean": [1713, 1714, 1715, 1716], "min": [1717, 1718, 1719, 1720], "prod": [1721, 1722, 1723, 1724], "std": [1725, 1726, 1727, 1728], "sum": [1729, 1731, 1732, 1733], "static_sum": 1730, "var": [1734, 1736, 1737, 1738], "static_var": 1735, "all": [1740, 1741, 1742, 1743], "static_al": 1744, "ani": [1745, 1746, 1747, 1748], "static_ani": 1749, "glossari": 1750, "content": 1751, "overview": 1751, "quick": 1751, "start": 1751, "citat": 1751, "inspect": 1754, "add_array_spec": 1755, "fn_array_spec": 1756, "relat": 1757, "infrastructur": [1759, 1767], "llvm": 1759, "mlir": 1759, "oneapi": 1759, "exchang": [1760, 1767], "onnx": 1760, "nnef": 1760, "coreml": 1760, "matlab": 1761, "scipi": 1761, "torch": [1761, 1762], "scikit": 1761, "learn": 1761, "theano": 1761, "panda": 1761, "julia": 1761, "apach": [1761, 1764], "spark": 1761, "mllib": 1761, "caff": 1761, "chainer": 1761, "tensorflow": 1761, "1": 1761, "mxnet": 1761, "cntk": 1761, "pytorch": 1761, "flux": 1761, "jax": 1761, "2": 1761, "dex": 1761, "languag": 1761, "tracer": [1762, 1767], "tf": 1762, "jaxpr": 1762, "jit": 1762, "fx": 1762, "compani": [1763, 1767], "quansight": 1763, "modular": 1763, "octoml": 1763, "multi": [1764, 1767], "vendor": [1764, 1765, 1766, 1767], "tvm": 1764, "xla": 1764, "gcc": 1764, "specif": [1765, 1766, 1767], "tensorrt": 1765, "cuda": 1765, "icc": 1766, "icx": 1766, "nvcc": 1766, "doe": 1767, "eagerpi": 1768, "kera": 1768, "thinc": 1768, "tensorli": 1768, "neuropod": 1768, "geglu": 1771, "to_ivy_modul": 1774, "firstlayersiren": 1777, "glorotuniform": 1778, "kaimingnorm": 1780, "Ones": 1781, "siren": 1782, "uniform": 1783, "conv1dtranspos": 1787, "conv2dtranspos": 1789, "conv3dtranspos": 1791, "depthwiseconv2d": 1792, "lstm": 1794, "multiheadattent": 1796, "newtorchmodul": 1799, "layernorm": 1801, "adam": 1803, "lamb": 1804, "lar": 1805, "sgd": 1807, "sequenti": [1808, 1809], "verbos": 1811, "cprint": 1812}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})